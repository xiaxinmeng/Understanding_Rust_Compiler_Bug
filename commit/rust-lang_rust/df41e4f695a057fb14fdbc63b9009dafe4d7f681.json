{"sha": "df41e4f695a057fb14fdbc63b9009dafe4d7f681", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmNDFlNGY2OTVhMDU3ZmIxNGZkYmM2M2I5MDA5ZGFmZTRkN2Y2ODE=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2019-05-09T17:49:39Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2019-05-09T17:49:39Z"}, "message": "Remove the old await! macro\n\nThis doesn't work anymore, and its continued\npresence is cause for confusion.", "tree": {"sha": "3a5f08ae712f50a6cdcfcf495ab05bbb052b5725", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a5f08ae712f50a6cdcfcf495ab05bbb052b5725"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df41e4f695a057fb14fdbc63b9009dafe4d7f681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df41e4f695a057fb14fdbc63b9009dafe4d7f681", "html_url": "https://github.com/rust-lang/rust/commit/df41e4f695a057fb14fdbc63b9009dafe4d7f681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df41e4f695a057fb14fdbc63b9009dafe4d7f681/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef01f29964df207f181bd5bcf236e41372a17273", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef01f29964df207f181bd5bcf236e41372a17273", "html_url": "https://github.com/rust-lang/rust/commit/ef01f29964df207f181bd5bcf236e41372a17273"}], "stats": {"total": 23, "additions": 0, "deletions": 23}, "files": [{"sha": "03aebeda47c4851f707c2d2ffb39682e166c4dcf", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/df41e4f695a057fb14fdbc63b9009dafe4d7f681/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df41e4f695a057fb14fdbc63b9009dafe4d7f681/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=df41e4f695a057fb14fdbc63b9009dafe4d7f681", "patch": "@@ -357,29 +357,6 @@ macro_rules! dbg {\n     };\n }\n \n-/// Awaits the completion of an async call.\n-#[macro_export]\n-#[unstable(feature = \"await_macro\", issue = \"50547\")]\n-#[allow_internal_unstable(gen_future, generators)]\n-#[allow_internal_unsafe]\n-macro_rules! r#await {\n-    ($e:expr) => { {\n-        let mut pinned = $e;\n-        loop {\n-            if let $crate::task::Poll::Ready(x) =\n-                $crate::future::poll_with_tls_context(unsafe {\n-                    $crate::pin::Pin::new_unchecked(&mut pinned)\n-                })\n-            {\n-                break x;\n-            }\n-            // FIXME(cramertj) prior to stabilizing await, we have to ensure that this\n-            // can't be used to create a generator on stable via `|| await!()`.\n-            yield\n-        }\n-    } }\n-}\n-\n /// Selects the first successful receive event from a number of receivers.\n ///\n /// This macro is used to wait for the first event to occur on a number of"}]}