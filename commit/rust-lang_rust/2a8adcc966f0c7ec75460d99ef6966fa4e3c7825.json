{"sha": "2a8adcc966f0c7ec75460d99ef6966fa4e3c7825", "node_id": "C_kwDOAAsO6NoAKDJhOGFkY2M5NjZmMGM3ZWM3NTQ2MGQ5OWVmNjk2NmZhNGUzYzc4MjU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-05-08T10:41:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-08T10:41:51Z"}, "message": "Rollup merge of #111332 - loongarch-rs:inline-asm, r=Amanieu\n\nImprove inline asm for LoongArch\n\nThis PR is a sub-part of https://github.com/rust-lang/rust/pull/111235, to improve inline asm for LoongArch.\n\nr? `@Amanieu`", "tree": {"sha": "f1e5e514237175886f4d912961b4e4d7f2952395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1e5e514237175886f4d912961b4e4d7f2952395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkWNHvCRBK7hj4Ov3rIwAA5goIAAhIqSD8pvu695LnYIY85g4C\np4RguTLp9FADdlxYZYkAoDL0W5pDnxlXih1fu70LHUKfRt0bBUwDfylGC+3Djx2F\nEifJazypZ7f2xvhtlhVTZfbpFHRJaY7sxOe3x0eSYGgmElYQ1MeZAfWLRMKP9IlF\nnyNmh13IaPX6hgHlhkVtJiCelnxYZv8CDGrOQ7FmDbZ407SGt5+Y44rbwced0G6v\neIbVMeTjCf2bL8Om4v5Y5Xz/AddIVmGVh7NMXmbQm5kNnTrsVPDB7Lz6O3R5BmEj\n0NOX20AV+WLweytg8kEUCbQ6Ni08i+y/GUXiHwlRXtmxaLahbWzoOdC8YxHUxyQ=\n=gSRQ\n-----END PGP SIGNATURE-----\n", "payload": "tree f1e5e514237175886f4d912961b4e4d7f2952395\nparent c122ac3e6991544d2d28fbee3ffcf20a1dd4b514\nparent c5382adc65119d55ac5045049d6cff095f6d111f\nauthor Yuki Okushi <jtitor@2k36.org> 1683542511 +0900\ncommitter GitHub <noreply@github.com> 1683542511 +0900\n\nRollup merge of #111332 - loongarch-rs:inline-asm, r=Amanieu\n\nImprove inline asm for LoongArch\n\nThis PR is a sub-part of https://github.com/rust-lang/rust/pull/111235, to improve inline asm for LoongArch.\n\nr? `@Amanieu`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825", "html_url": "https://github.com/rust-lang/rust/commit/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c122ac3e6991544d2d28fbee3ffcf20a1dd4b514", "url": "https://api.github.com/repos/rust-lang/rust/commits/c122ac3e6991544d2d28fbee3ffcf20a1dd4b514", "html_url": "https://github.com/rust-lang/rust/commit/c122ac3e6991544d2d28fbee3ffcf20a1dd4b514"}, {"sha": "c5382adc65119d55ac5045049d6cff095f6d111f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5382adc65119d55ac5045049d6cff095f6d111f", "html_url": "https://github.com/rust-lang/rust/commit/c5382adc65119d55ac5045049d6cff095f6d111f"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "2a6ad1be76309f9a4e398179ee1048532ec0a233", "filename": "compiler/rustc_codegen_llvm/src/asm.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fasm.rs?ref=2a8adcc966f0c7ec75460d99ef6966fa4e3c7825", "patch": "@@ -236,7 +236,18 @@ impl<'ll, 'tcx> AsmBuilderMethods<'tcx> for Builder<'_, 'll, 'tcx> {\n                 InlineAsmArch::Nvptx64 => {}\n                 InlineAsmArch::PowerPC | InlineAsmArch::PowerPC64 => {}\n                 InlineAsmArch::Hexagon => {}\n-                InlineAsmArch::LoongArch64 => {}\n+                InlineAsmArch::LoongArch64 => {\n+                    constraints.extend_from_slice(&[\n+                        \"~{$fcc0}\".to_string(),\n+                        \"~{$fcc1}\".to_string(),\n+                        \"~{$fcc2}\".to_string(),\n+                        \"~{$fcc3}\".to_string(),\n+                        \"~{$fcc4}\".to_string(),\n+                        \"~{$fcc5}\".to_string(),\n+                        \"~{$fcc6}\".to_string(),\n+                        \"~{$fcc7}\".to_string(),\n+                    ]);\n+                }\n                 InlineAsmArch::Mips | InlineAsmArch::Mips64 => {}\n                 InlineAsmArch::S390x => {\n                     constraints.push(\"~{cc}\".to_string());"}, {"sha": "9d1a4f3eeeafa4961a80424848a5c093c72386de", "filename": "compiler/rustc_target/src/asm/loongarch.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825/compiler%2Frustc_target%2Fsrc%2Fasm%2Floongarch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a8adcc966f0c7ec75460d99ef6966fa4e3c7825/compiler%2Frustc_target%2Fsrc%2Fasm%2Floongarch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fasm%2Floongarch.rs?ref=2a8adcc966f0c7ec75460d99ef6966fa4e3c7825", "patch": "@@ -33,12 +33,11 @@ impl LoongArchInlineAsmRegClass {\n \n     pub fn supported_types(\n         self,\n-        arch: InlineAsmArch,\n+        _arch: InlineAsmArch,\n     ) -> &'static [(InlineAsmType, Option<Symbol>)] {\n-        match (self, arch) {\n-            (Self::reg, InlineAsmArch::LoongArch64) => types! { _: I8, I16, I32, I64, F32, F64; },\n-            (Self::reg, _) => types! { _: I8, I16, I32, F32; },\n-            (Self::freg, _) => types! { _: F32, F64; },\n+        match self {\n+            Self::reg => types! { _: I8, I16, I32, I64, F32, F64; },\n+            Self::freg => types! { _: F32, F64; },\n         }\n     }\n }"}]}