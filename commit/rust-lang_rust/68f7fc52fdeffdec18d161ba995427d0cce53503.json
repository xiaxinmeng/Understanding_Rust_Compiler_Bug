{"sha": "68f7fc52fdeffdec18d161ba995427d0cce53503", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4ZjdmYzUyZmRlZmZkZWMxOGQxNjFiYTk5NTQyN2QwY2NlNTM1MDM=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-28T13:51:44Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-04-28T13:51:44Z"}, "message": "Rollup merge of #33218 - oli-obk:interned_str_cmp, r=nikomatsakis\n\nallow InternedString to be compared to &str directly", "tree": {"sha": "6853ed3af7705a3eaeca7bf2e6fe1df80918402b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6853ed3af7705a3eaeca7bf2e6fe1df80918402b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68f7fc52fdeffdec18d161ba995427d0cce53503", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68f7fc52fdeffdec18d161ba995427d0cce53503", "html_url": "https://github.com/rust-lang/rust/commit/68f7fc52fdeffdec18d161ba995427d0cce53503", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68f7fc52fdeffdec18d161ba995427d0cce53503/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c2a98570c7458d612c9fd1e7f2e9817b6d28f01", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c2a98570c7458d612c9fd1e7f2e9817b6d28f01", "html_url": "https://github.com/rust-lang/rust/commit/7c2a98570c7458d612c9fd1e7f2e9817b6d28f01"}, {"sha": "6343f261f4aeacdd292bf07998ef5faf6e90d57b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6343f261f4aeacdd292bf07998ef5faf6e90d57b", "html_url": "https://github.com/rust-lang/rust/commit/6343f261f4aeacdd292bf07998ef5faf6e90d57b"}], "stats": {"total": 28, "additions": 25, "deletions": 3}, "files": [{"sha": "8761ca3717895adb0aebba24551e46d88d71b67d", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/68f7fc52fdeffdec18d161ba995427d0cce53503/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68f7fc52fdeffdec18d161ba995427d0cce53503/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=68f7fc52fdeffdec18d161ba995427d0cce53503", "patch": "@@ -333,11 +333,11 @@ pub enum InlineAttr {\n pub fn find_inline_attr(diagnostic: Option<&Handler>, attrs: &[Attribute]) -> InlineAttr {\n     attrs.iter().fold(InlineAttr::None, |ia,attr| {\n         match attr.node.value.node {\n-            MetaItemKind::Word(ref n) if *n == \"inline\" => {\n+            MetaItemKind::Word(ref n) if n == \"inline\" => {\n                 mark_used(attr);\n                 InlineAttr::Hint\n             }\n-            MetaItemKind::List(ref n, ref items) if *n == \"inline\" => {\n+            MetaItemKind::List(ref n, ref items) if n == \"inline\" => {\n                 mark_used(attr);\n                 if items.len() != 1 {\n                     diagnostic.map(|d|{ d.span_err(attr.span, \"expected one argument\"); });\n@@ -711,7 +711,7 @@ pub fn require_unique_names(diagnostic: &Handler, metas: &[P<MetaItem>]) {\n pub fn find_repr_attrs(diagnostic: &Handler, attr: &Attribute) -> Vec<ReprAttr> {\n     let mut acc = Vec::new();\n     match attr.node.value.node {\n-        ast::MetaItemKind::List(ref s, ref items) if *s == \"repr\" => {\n+        ast::MetaItemKind::List(ref s, ref items) if s == \"repr\" => {\n             mark_used(attr);\n             for item in items {\n                 match item.node {"}, {"sha": "47de32ed7d00fe6a516ac9282f8e5f11ec359ca0", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/68f7fc52fdeffdec18d161ba995427d0cce53503/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68f7fc52fdeffdec18d161ba995427d0cce53503/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=68f7fc52fdeffdec18d161ba995427d0cce53503", "patch": "@@ -566,6 +566,28 @@ impl<'a> PartialEq<InternedString> for &'a str {\n     }\n }\n \n+impl PartialEq<str> for InternedString {\n+    #[inline(always)]\n+    fn eq(&self, other: &str) -> bool {\n+        PartialEq::eq(&self.string[..], other)\n+    }\n+    #[inline(always)]\n+    fn ne(&self, other: &str) -> bool {\n+        PartialEq::ne(&self.string[..], other)\n+    }\n+}\n+\n+impl PartialEq<InternedString> for str {\n+    #[inline(always)]\n+    fn eq(&self, other: &InternedString) -> bool {\n+        PartialEq::eq(self, &other.string[..])\n+    }\n+    #[inline(always)]\n+    fn ne(&self, other: &InternedString) -> bool {\n+        PartialEq::ne(self, &other.string[..])\n+    }\n+}\n+\n impl Decodable for InternedString {\n     fn decode<D: Decoder>(d: &mut D) -> Result<InternedString, D::Error> {\n         Ok(intern(d.read_str()?.as_ref()).as_str())"}]}