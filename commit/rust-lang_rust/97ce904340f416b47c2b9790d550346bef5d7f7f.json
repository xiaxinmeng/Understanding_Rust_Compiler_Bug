{"sha": "97ce904340f416b47c2b9790d550346bef5d7f7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3Y2U5MDQzNDBmNDE2YjQ3YzJiOTc5MGQ1NTAzNDZiZWY1ZDdmN2Y=", "commit": {"author": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-25T08:33:12Z"}, "committer": {"name": "gnzlbg", "email": "gonzalobg88@gmail.com", "date": "2019-09-25T08:33:12Z"}, "message": "Remove unreachable code", "tree": {"sha": "bd2197527816bdf3680ec417aa5c471b055afaed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd2197527816bdf3680ec417aa5c471b055afaed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ce904340f416b47c2b9790d550346bef5d7f7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ce904340f416b47c2b9790d550346bef5d7f7f", "html_url": "https://github.com/rust-lang/rust/commit/97ce904340f416b47c2b9790d550346bef5d7f7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ce904340f416b47c2b9790d550346bef5d7f7f/comments", "author": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gnzlbg", "id": 904614, "node_id": "MDQ6VXNlcjkwNDYxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/904614?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gnzlbg", "html_url": "https://github.com/gnzlbg", "followers_url": "https://api.github.com/users/gnzlbg/followers", "following_url": "https://api.github.com/users/gnzlbg/following{/other_user}", "gists_url": "https://api.github.com/users/gnzlbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/gnzlbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gnzlbg/subscriptions", "organizations_url": "https://api.github.com/users/gnzlbg/orgs", "repos_url": "https://api.github.com/users/gnzlbg/repos", "events_url": "https://api.github.com/users/gnzlbg/events{/privacy}", "received_events_url": "https://api.github.com/users/gnzlbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a6e96e8bc8b7285c5a9b357d0e5e8dd9c191edf", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a6e96e8bc8b7285c5a9b357d0e5e8dd9c191edf", "html_url": "https://github.com/rust-lang/rust/commit/3a6e96e8bc8b7285c5a9b357d0e5e8dd9c191edf"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "8666c937ce4c2e45cf19c246b4c72ff0cc5409c8", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97ce904340f416b47c2b9790d550346bef5d7f7f/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ce904340f416b47c2b9790d550346bef5d7f7f/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=97ce904340f416b47c2b9790d550346bef5d7f7f", "patch": "@@ -249,11 +249,6 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n \n         match instance.def {\n             ty::InstanceDef::Intrinsic(..) => {\n-                if let Abi::RustIntrinsic | Abi::PlatformIntrinsic = caller_abi {\n-                    // ok\n-                } else {\n-                    throw_unsup!(FunctionAbiMismatch(caller_abi, Abi::RustIntrinsic))\n-                }\n                 // The intrinsic itself cannot diverge, so if we got here without a return\n                 // place... (can happen e.g., for transmute returning `!`)\n                 let dest = match dest {"}]}