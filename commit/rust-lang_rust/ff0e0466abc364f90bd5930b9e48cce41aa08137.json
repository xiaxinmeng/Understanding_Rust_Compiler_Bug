{"sha": "ff0e0466abc364f90bd5930b9e48cce41aa08137", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmMGUwNDY2YWJjMzY0ZjkwYmQ1OTMwYjllNDhjY2U0MWFhMDgxMzc=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-21T00:34:38Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-06-21T23:49:37Z"}, "message": "Don't reallocate the crate name when running doctests", "tree": {"sha": "e5003e5a33b7653b5a787a1cd3d0cf0c63cc6eb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5003e5a33b7653b5a787a1cd3d0cf0c63cc6eb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff0e0466abc364f90bd5930b9e48cce41aa08137", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff0e0466abc364f90bd5930b9e48cce41aa08137", "html_url": "https://github.com/rust-lang/rust/commit/ff0e0466abc364f90bd5930b9e48cce41aa08137", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff0e0466abc364f90bd5930b9e48cce41aa08137/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c557dada20ef79f7a46666b3152ac42fe58e6f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c557dada20ef79f7a46666b3152ac42fe58e6f9", "html_url": "https://github.com/rust-lang/rust/commit/1c557dada20ef79f7a46666b3152ac42fe58e6f9"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "1750f05b4dcffa43bac275ae9314159b00c74acc", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ff0e0466abc364f90bd5930b9e48cce41aa08137/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0e0466abc364f90bd5930b9e48cce41aa08137/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=ff0e0466abc364f90bd5930b9e48cce41aa08137", "patch": "@@ -3,8 +3,8 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::{ColorConfig, ErrorReported};\n use rustc_hir as hir;\n-use rustc_hir::intravisit;\n use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_hir::intravisit;\n use rustc_hir::{HirId, CRATE_HIR_ID};\n use rustc_interface::interface;\n use rustc_middle::hir::map::Map;\n@@ -14,6 +14,7 @@ use rustc_session::{lint, DiagnosticOutput, Session};\n use rustc_span::edition::Edition;\n use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::sym;\n+use rustc_span::Symbol;\n use rustc_span::{BytePos, FileName, Pos, Span, DUMMY_SP};\n use rustc_target::spec::TargetTriple;\n use tempfile::Builder as TempFileBuilder;\n@@ -122,7 +123,7 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n                 opts.display_warnings |= options.display_warnings;\n                 let enable_per_target_ignores = options.enable_per_target_ignores;\n                 let mut collector = Collector::new(\n-                    tcx.crate_name(LOCAL_CRATE).to_string(),\n+                    tcx.crate_name(LOCAL_CRATE),\n                     options,\n                     false,\n                     opts,\n@@ -796,7 +797,7 @@ crate struct Collector {\n     options: Options,\n     use_headers: bool,\n     enable_per_target_ignores: bool,\n-    crate_name: String,\n+    crate_name: Symbol,\n     opts: TestOptions,\n     position: Span,\n     source_map: Option<Lrc<SourceMap>>,\n@@ -808,7 +809,7 @@ crate struct Collector {\n \n impl Collector {\n     crate fn new(\n-        crate_name: String,\n+        crate_name: Symbol,\n         options: Options,\n         use_headers: bool,\n         opts: TestOptions,"}, {"sha": "5da3a75e876315ed2173c5c86280d8151daaa343", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff0e0466abc364f90bd5930b9e48cce41aa08137/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff0e0466abc364f90bd5930b9e48cce41aa08137/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=ff0e0466abc364f90bd5930b9e48cce41aa08137", "patch": "@@ -4,6 +4,7 @@ use std::path::Path;\n \n use rustc_span::edition::Edition;\n use rustc_span::source_map::DUMMY_SP;\n+use rustc_span::Symbol;\n \n use crate::config::{Options, RenderOptions};\n use crate::doctest::{Collector, TestOptions};\n@@ -121,7 +122,7 @@ crate fn test(mut options: Options) -> Result<(), String> {\n     opts.no_crate_inject = true;\n     opts.display_warnings = options.display_warnings;\n     let mut collector = Collector::new(\n-        options.input.display().to_string(),\n+        Symbol::intern(&options.input.display().to_string()),\n         options.clone(),\n         true,\n         opts,"}]}