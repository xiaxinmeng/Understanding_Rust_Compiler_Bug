{"sha": "8e05bb527c5f00549ea6bc21352638200bceb1a5", "node_id": "C_kwDOAAsO6NoAKDhlMDViYjUyN2M1ZjAwNTQ5ZWE2YmMyMTM1MjYzODIwMGJjZWIxYTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-29T02:49:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-12-29T02:49:34Z"}, "message": "Auto merge of #92283 - vacuus:print-generic-bounds, r=camelid,GuillaumeGomez\n\nrustdoc: Remove `String` allocation in iteration in `print_generic_bounds`\n\n(I realized only after making the commit that maybe I shouldn't refer to iteration as looping, but it's close enough)\n\nThe string representation of a `clean::GenericBound` instance (evaluated [here](https://github.com/rust-lang/rust/blob/master/src/librustdoc/html/format.rs#L397)) is deterministic for a given `self` (the instance), `cx` and `f`, and since `cx` and `f` are constant (as far as I can tell) for a given invocation of `print_generic_bounds`, `self` is the determining factor. Therefore, using the data in `self` shouldn't differ in effect from using its string representation.\n\nGiven the totality of the function calls needed to evaluate the string representation as well as the actual allocation, at the very least, this shouldn't negatively affect performance.", "tree": {"sha": "17a3d48398a2acef9341636d5617a1d0d94573c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17a3d48398a2acef9341636d5617a1d0d94573c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e05bb527c5f00549ea6bc21352638200bceb1a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e05bb527c5f00549ea6bc21352638200bceb1a5", "html_url": "https://github.com/rust-lang/rust/commit/8e05bb527c5f00549ea6bc21352638200bceb1a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e05bb527c5f00549ea6bc21352638200bceb1a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ae550842635dce84811198446fe87e830de500b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae550842635dce84811198446fe87e830de500b", "html_url": "https://github.com/rust-lang/rust/commit/7ae550842635dce84811198446fe87e830de500b"}, {"sha": "141c542052c1adec045136212a42f241ba3fb9a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/141c542052c1adec045136212a42f241ba3fb9a9", "html_url": "https://github.com/rust-lang/rust/commit/141c542052c1adec045136212a42f241ba3fb9a9"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "e4c612aaab96e11c19ff33416cac6336198a0c27", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e05bb527c5f00549ea6bc21352638200bceb1a5/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e05bb527c5f00549ea6bc21352638200bceb1a5/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=8e05bb527c5f00549ea6bc21352638200bceb1a5", "patch": "@@ -141,9 +141,7 @@ crate fn print_generic_bounds<'a, 'tcx: 'a>(\n     display_fn(move |f| {\n         let mut bounds_dup = FxHashSet::default();\n \n-        for (i, bound) in\n-            bounds.iter().filter(|b| bounds_dup.insert(b.print(cx).to_string())).enumerate()\n-        {\n+        for (i, bound) in bounds.iter().filter(|b| bounds_dup.insert(b.clone())).enumerate() {\n             if i > 0 {\n                 f.write_str(\" + \")?;\n             }"}]}