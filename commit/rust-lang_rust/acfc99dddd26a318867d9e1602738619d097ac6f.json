{"sha": "acfc99dddd26a318867d9e1602738619d097ac6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZmM5OWRkZGQyNmEzMTg4NjdkOWUxNjAyNzM4NjE5ZDA5N2FjNmY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-04-25T16:06:49Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-05-18T20:56:26Z"}, "message": "Include file paths when dumping the list of resolved crates via `debug!`.", "tree": {"sha": "c51f15a80764f41a680b87153cc8ac9d9ff6af6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51f15a80764f41a680b87153cc8ac9d9ff6af6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acfc99dddd26a318867d9e1602738619d097ac6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acfc99dddd26a318867d9e1602738619d097ac6f", "html_url": "https://github.com/rust-lang/rust/commit/acfc99dddd26a318867d9e1602738619d097ac6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acfc99dddd26a318867d9e1602738619d097ac6f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb6856c307ae8cff97c57f11be2cf04561e7f2eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6856c307ae8cff97c57f11be2cf04561e7f2eb", "html_url": "https://github.com/rust-lang/rust/commit/eb6856c307ae8cff97c57f11be2cf04561e7f2eb"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "5ed8da8a82b04970602ac1c238fc4fa5183b8079", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/acfc99dddd26a318867d9e1602738619d097ac6f/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acfc99dddd26a318867d9e1602738619d097ac6f/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=acfc99dddd26a318867d9e1602738619d097ac6f", "patch": "@@ -17,7 +17,7 @@ use back::svh::Svh;\n use driver::session::Session;\n use driver::{driver, config};\n use metadata::cstore;\n-use metadata::cstore::CStore;\n+use metadata::cstore::{CStore, CrateSource};\n use metadata::decoder;\n use metadata::loader;\n use metadata::loader::CratePaths;\n@@ -68,10 +68,15 @@ impl<'a> visit::Visitor<()> for Env<'a> {\n \n fn dump_crates(cstore: &CStore) {\n     debug!(\"resolved crates:\");\n-    cstore.iter_crate_data(|_, data| {\n+    cstore.iter_crate_data_origins(|_, data, opt_source| {\n         debug!(\"crate_id: {}\", data.crate_id());\n         debug!(\"  cnum: {}\", data.cnum);\n         debug!(\"  hash: {}\", data.hash());\n+        opt_source.map(|cs| {\n+            let CrateSource { dylib, rlib, cnum: _ } = cs;\n+            dylib.map(|dl| debug!(\"  dylib: {}\", dl.display()));\n+            rlib.map(|rl|  debug!(\"   rlib: {}\", rl.display()));\n+        });\n     })\n }\n "}, {"sha": "cbf8944f0399d078caf572ea53c05391f1cc3f5b", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/acfc99dddd26a318867d9e1602738619d097ac6f/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acfc99dddd26a318867d9e1602738619d097ac6f/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=acfc99dddd26a318867d9e1602738619d097ac6f", "patch": "@@ -114,6 +114,17 @@ impl CStore {\n         }\n     }\n \n+    /// Like `iter_crate_data`, but passes source paths (if available) as well.\n+    pub fn iter_crate_data_origins(&self, i: |ast::CrateNum,\n+                                              &crate_metadata,\n+                                              Option<CrateSource>|) {\n+        for (&k, v) in self.metas.borrow().iter() {\n+            let origin = self.get_used_crate_source(k);\n+            origin.as_ref().map(|cs| { assert!(k == cs.cnum); });\n+            i(k, &**v, origin);\n+        }\n+    }\n+\n     pub fn add_used_crate_source(&self, src: CrateSource) {\n         let mut used_crate_sources = self.used_crate_sources.borrow_mut();\n         if !used_crate_sources.contains(&src) {"}]}