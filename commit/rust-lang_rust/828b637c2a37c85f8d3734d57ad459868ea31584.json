{"sha": "828b637c2a37c85f8d3734d57ad459868ea31584", "node_id": "C_kwDOAAsO6NoAKDgyOGI2MzdjMmEzN2M4NWY4ZDM3MzRkNTdhZDQ1OTg2OGVhMzE1ODQ", "commit": {"author": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-06-25T19:04:13Z"}, "committer": {"name": "Josh Triplett", "email": "josh@joshtriplett.org", "date": "2022-07-15T09:54:06Z"}, "message": "Return an error if trying to set a file timestamp to 0 on Windows\n\nThis would otherwise silently ignore the attempt, since 0 serves as a\nflag to not set a timestamp.", "tree": {"sha": "7226ba9db8f88baff794df02570e015573073d4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7226ba9db8f88baff794df02570e015573073d4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/828b637c2a37c85f8d3734d57ad459868ea31584", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/828b637c2a37c85f8d3734d57ad459868ea31584", "html_url": "https://github.com/rust-lang/rust/commit/828b637c2a37c85f8d3734d57ad459868ea31584", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/828b637c2a37c85f8d3734d57ad459868ea31584/comments", "author": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "committer": {"login": "joshtriplett", "id": 162737, "node_id": "MDQ6VXNlcjE2MjczNw==", "avatar_url": "https://avatars.githubusercontent.com/u/162737?v=4", "gravatar_id": "", "url": "https://api.github.com/users/joshtriplett", "html_url": "https://github.com/joshtriplett", "followers_url": "https://api.github.com/users/joshtriplett/followers", "following_url": "https://api.github.com/users/joshtriplett/following{/other_user}", "gists_url": "https://api.github.com/users/joshtriplett/gists{/gist_id}", "starred_url": "https://api.github.com/users/joshtriplett/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/joshtriplett/subscriptions", "organizations_url": "https://api.github.com/users/joshtriplett/orgs", "repos_url": "https://api.github.com/users/joshtriplett/repos", "events_url": "https://api.github.com/users/joshtriplett/events{/privacy}", "received_events_url": "https://api.github.com/users/joshtriplett/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ac8d5ece31dae9441f56a6915115633e30eeb69", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ac8d5ece31dae9441f56a6915115633e30eeb69", "html_url": "https://github.com/rust-lang/rust/commit/1ac8d5ece31dae9441f56a6915115633e30eeb69"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "39aabadcf15fcaa655c8009b30066060277c4b92", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/828b637c2a37c85f8d3734d57ad459868ea31584/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/828b637c2a37c85f8d3734d57ad459868ea31584/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=828b637c2a37c85f8d3734d57ad459868ea31584", "patch": "@@ -84,8 +84,8 @@ pub struct FilePermissions {\n \n #[derive(Copy, Clone, Debug, Default)]\n pub struct FileTimes {\n-    accessed: c::FILETIME,\n-    modified: c::FILETIME,\n+    accessed: Option<c::FILETIME>,\n+    modified: Option<c::FILETIME>,\n }\n \n #[derive(Debug)]\n@@ -558,8 +558,15 @@ impl File {\n     }\n \n     pub fn set_times(&self, times: FileTimes) -> io::Result<()> {\n+        let is_zero = |t: c::FILETIME| t.dwLowDateTime == 0 && t.dwHighDateTime == 0;\n+        if times.accessed.map_or(false, is_zero) || times.modified.map_or(false, is_zero) {\n+            return Err(io::const_io_error!(\n+                io::ErrorKind::InvalidInput,\n+                \"Cannot set file timestamp to 0\",\n+            ));\n+        }\n         cvt(unsafe {\n-            c::SetFileTime(self.as_handle(), None, Some(&times.accessed), Some(&times.modified))\n+            c::SetFileTime(self.as_handle(), None, times.accessed.as_ref(), times.modified.as_ref())\n         })?;\n         Ok(())\n     }\n@@ -911,11 +918,11 @@ impl FilePermissions {\n \n impl FileTimes {\n     pub fn set_accessed(&mut self, t: SystemTime) {\n-        self.accessed = t.into_inner();\n+        self.accessed = Some(t.into_inner());\n     }\n \n     pub fn set_modified(&mut self, t: SystemTime) {\n-        self.modified = t.into_inner();\n+        self.modified = Some(t.into_inner());\n     }\n }\n "}]}