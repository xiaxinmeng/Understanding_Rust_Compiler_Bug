{"sha": "22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMTYyYWEzNjNmZjZlZjFlMDZmNmJlYzk4NjdjZmE0MWI1Y2RhMDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-09-08T22:34:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-08T22:34:59Z"}, "message": "Merge #10093\n\n10093: fix: Remove incorrectly filtering VS Code cargo task execution resolution by scope r=oeed a=oeed\n\nThis fixes #9093 \u200bintroduced by #8995.\r\n\r\nA filter was present on the function that adds the execution definition to Cargo tasks. This would mean Cargo tasks defined in workspaces (i.e. `.code-workspace` files) would not be given an execution, leading to a `There is no task provider registered for tasks of type \"cargo\".` error as descibed in #9093. I have made a minimum reproduction setup [here](https://github.com/oeed/ra-workspace).\r\n\r\nThis PR essentially removes that check. The `if (scope) { ... }` is to handle the case where `task.scope === undefined` using a deprecated constructor. I'm not sure if that is ever likely to occur and can remove if not needed.\r\n\r\nThere is some discussion about whether it's necessary to filter the tasks before building them. From my understanding, it shouldn't be needed as we should provide an execution for all `cargo` tasks; but I'm not overly familiar with VS Code internals so I could be wrong. For more info please see [the discussion](https://github.com/rust-analyzer/rust-analyzer/pull/8995#issuecomment-908920395) on #8995\n\nCo-authored-by: Oliver Cooper <oliver.cooper@me.com>", "tree": {"sha": "228ed9afda033255bf07292c4459248a5e4a7015", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/228ed9afda033255bf07292c4459248a5e4a7015"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhOTqTCRBK7hj4Ov3rIwAA/PoIAFLUranGUNu//F/yIc/9YmLI\nxA5wQrqsE9Odm5+rYDkFj5JorrZM0fR6YQii8soXzhF/pf6+fJE4PPqE8+YTFJw0\nlEVLJA61ZO9RoslBW1mcUjKVGNeXtobBEM0v4H28YXOLbRRUEawa4LPR0NHKiL1Y\nBfYeM3WC6fWAg0nO3zUwOmr6+w1QRzdFrGWJmwhADgzyoqIZnYD+uOqnv7dOEzhM\nyKe+GqnEuk/lUb1NX9nNubM8ieSRpfnJrMBid0oiDPK5N49kp5aVHBUBcHq7E6B+\n5BNv/GMGlbQZcyGs8frBk04Zg4z2Gpudvc11166IQDtazKpLsZ6+/AQxM0zwzMA=\n=iaRX\n-----END PGP SIGNATURE-----\n", "payload": "tree 228ed9afda033255bf07292c4459248a5e4a7015\nparent 6a8062092bfd6621d8b9ead7adc5b9b7d096b910\nparent d246a5f58b825d5113b75a68e6e424035243dcad\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1631140499 +0000\ncommitter GitHub <noreply@github.com> 1631140499 +0000\n\nMerge #10093\n\n10093: fix: Remove incorrectly filtering VS Code cargo task execution resolution by scope r=oeed a=oeed\n\nThis fixes #9093 \u200bintroduced by #8995.\r\n\r\nA filter was present on the function that adds the execution definition to Cargo tasks. This would mean Cargo tasks defined in workspaces (i.e. `.code-workspace` files) would not be given an execution, leading to a `There is no task provider registered for tasks of type \"cargo\".` error as descibed in #9093. I have made a minimum reproduction setup [here](https://github.com/oeed/ra-workspace).\r\n\r\nThis PR essentially removes that check. The `if (scope) { ... }` is to handle the case where `task.scope === undefined` using a deprecated constructor. I'm not sure if that is ever likely to occur and can remove if not needed.\r\n\r\nThere is some discussion about whether it's necessary to filter the tasks before building them. From my understanding, it shouldn't be needed as we should provide an execution for all `cargo` tasks; but I'm not overly familiar with VS Code internals so I could be wrong. For more info please see [the discussion](https://github.com/rust-analyzer/rust-analyzer/pull/8995#issuecomment-908920395) on #8995\n\nCo-authored-by: Oliver Cooper <oliver.cooper@me.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "html_url": "https://github.com/rust-lang/rust/commit/22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22162aa363ff6ef1e06f6bec9867cfa41b5cda01/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a8062092bfd6621d8b9ead7adc5b9b7d096b910", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a8062092bfd6621d8b9ead7adc5b9b7d096b910", "html_url": "https://github.com/rust-lang/rust/commit/6a8062092bfd6621d8b9ead7adc5b9b7d096b910"}, {"sha": "d246a5f58b825d5113b75a68e6e424035243dcad", "url": "https://api.github.com/repos/rust-lang/rust/commits/d246a5f58b825d5113b75a68e6e424035243dcad", "html_url": "https://github.com/rust-lang/rust/commit/d246a5f58b825d5113b75a68e6e424035243dcad"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "99edd9ae9da8e6ac8ea8877bba8e708890e9fe35", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/22162aa363ff6ef1e06f6bec9867cfa41b5cda01/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/22162aa363ff6ef1e06f6bec9867cfa41b5cda01/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=22162aa363ff6ef1e06f6bec9867cfa41b5cda01", "patch": "@@ -58,21 +58,15 @@ class CargoTaskProvider implements vscode.TaskProvider {\n \n         if (definition.type === TASK_TYPE && definition.command) {\n             const args = [definition.command].concat(definition.args ?? []);\n-            if (isWorkspaceFolder(task.scope)) {\n-                return await buildCargoTask(task.scope, definition, task.name, args, this.config.cargoRunner);\n-            }\n+            return await buildCargoTask(task.scope, definition, task.name, args, this.config.cargoRunner);\n         }\n \n         return undefined;\n     }\n }\n \n-function isWorkspaceFolder(scope?: any): scope is vscode.WorkspaceFolder {\n-    return (scope as vscode.WorkspaceFolder).name !== undefined;\n-}\n-\n export async function buildCargoTask(\n-    target: vscode.WorkspaceFolder,\n+    scope: vscode.WorkspaceFolder | vscode.TaskScope | undefined,\n     definition: CargoTaskDefinition,\n     name: string,\n     args: string[],\n@@ -117,7 +111,9 @@ export async function buildCargoTask(\n \n     return new vscode.Task(\n         definition,\n-        target,\n+        // scope can sometimes be undefined. in these situations we default to the workspace taskscope as\n+        // recommended by the official docs: https://code.visualstudio.com/api/extension-guides/task-provider#task-provider)\n+        scope ?? vscode.TaskScope.Workspace,\n         name,\n         TASK_SOURCE,\n         exec,"}]}