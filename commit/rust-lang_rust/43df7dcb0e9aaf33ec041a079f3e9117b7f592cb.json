{"sha": "43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzZGY3ZGNiMGU5YWFmMzNlYzA0MWEwNzlmM2U5MTE3YjdmNTkyY2I=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-04-30T07:24:01Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-04-30T07:24:01Z"}, "message": "Run cargo fmt with reorder_impl_items set to true", "tree": {"sha": "446b60a671481679764b9bf11a83c8abe99f201f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/446b60a671481679764b9bf11a83c8abe99f201f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "html_url": "https://github.com/rust-lang/rust/commit/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "faa5a10d20a20852b834037af3beb223b5bc7a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/faa5a10d20a20852b834037af3beb223b5bc7a3f", "html_url": "https://github.com/rust-lang/rust/commit/faa5a10d20a20852b834037af3beb223b5bc7a3f"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "4a0abc2b099ed8e3372af3acf7bc51d23dbf66ab", "filename": "src/comment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "patch": "@@ -1139,6 +1139,7 @@ impl<'a> CommentReducer<'a> {\n \n impl<'a> Iterator for CommentReducer<'a> {\n     type Item = char;\n+\n     fn next(&mut self) -> Option<Self::Item> {\n         loop {\n             let mut c = self.iter.next()?;"}, {"sha": "7bd3a51a9b49ad85162456698ca31395c6e574b5", "filename": "src/config/options.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig%2Foptions.rs?ref=43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "patch": "@@ -239,6 +239,7 @@ impl WidthHeuristics {\n             single_line_if_else_max_width: 0,\n         }\n     }\n+\n     // scale the default WidthHeuristics according to max_width\n     pub fn scaled(max_width: usize) -> WidthHeuristics {\n         let mut max_width_ratio: f32 = max_width as f32 / 100.0; // 100 is the default width -> default ratio is 1"}, {"sha": "669cf795bc74a566cf4fff3e82b8eefc0015dfc1", "filename": "src/imports.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "patch": "@@ -799,9 +799,11 @@ mod test {\n             fn bump(&mut self) {\n                 self.input.next().unwrap();\n             }\n+\n             fn eat(&mut self, c: char) {\n                 assert!(self.input.next().unwrap() == c);\n             }\n+\n             fn push_segment(\n                 result: &mut Vec<UseSegment>,\n                 buf: &mut String,\n@@ -825,6 +827,7 @@ mod test {\n                     }\n                 }\n             }\n+\n             fn parse_in_list(&mut self) -> UseTree {\n                 let mut result = vec![];\n                 let mut buf = String::new();"}, {"sha": "4a02bf73e1a7353d8904eab25f23b7c96c7c1f39", "filename": "src/test/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43df7dcb0e9aaf33ec041a079f3e9117b7f592cb/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=43df7dcb0e9aaf33ec041a079f3e9117b7f592cb", "patch": "@@ -568,6 +568,7 @@ struct CharsIgnoreNewlineRepr<'a>(Peekable<Chars<'a>>);\n \n impl<'a> Iterator for CharsIgnoreNewlineRepr<'a> {\n     type Item = char;\n+\n     fn next(&mut self) -> Option<char> {\n         self.0.next().map(|c| {\n             if c == '\\r' {"}]}