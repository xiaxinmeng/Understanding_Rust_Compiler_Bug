{"sha": "12ae306630f5029d0c3c7b52fa7532f5a2f308da", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYWUzMDY2MzBmNTAyOWQwYzNjN2I1MmZhNzUzMmY1YTJmMzA4ZGE=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-04-20T20:33:05Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@cs.washington.edu", "date": "2016-04-20T20:33:05Z"}, "message": "Ticks around std::mem::forget", "tree": {"sha": "1dbdef88f54b47a31c2b70979d7d85ebeb14ce61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dbdef88f54b47a31c2b70979d7d85ebeb14ce61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ae306630f5029d0c3c7b52fa7532f5a2f308da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ae306630f5029d0c3c7b52fa7532f5a2f308da", "html_url": "https://github.com/rust-lang/rust/commit/12ae306630f5029d0c3c7b52fa7532f5a2f308da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ae306630f5029d0c3c7b52fa7532f5a2f308da/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7961f59303a0829f0724b236cad0cbb001930d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7961f59303a0829f0724b236cad0cbb001930d9c", "html_url": "https://github.com/rust-lang/rust/commit/7961f59303a0829f0724b236cad0cbb001930d9c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8e8a2627557ee7a16b21b972abafe4aa85d0b088", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12ae306630f5029d0c3c7b52fa7532f5a2f308da/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/12ae306630f5029d0c3c7b52fa7532f5a2f308da/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=12ae306630f5029d0c3c7b52fa7532f5a2f308da", "patch": "@@ -85,7 +85,7 @@ name\n [match_overlapping_arm](https://github.com/Manishearth/rust-clippy/wiki#match_overlapping_arm)                       | warn    | a match has overlapping arms\n [match_ref_pats](https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats)                                     | warn    | a match or `if let` has all arms prefixed with `&`; the match expression can be dereferenced instead\n [match_same_arms](https://github.com/Manishearth/rust-clippy/wiki#match_same_arms)                                   | warn    | `match` with identical arm bodies\n-[mem_forget](https://github.com/Manishearth/rust-clippy/wiki#mem_forget)                                             | allow   | std::mem::forget usage is likely to cause memory leaks\n+[mem_forget](https://github.com/Manishearth/rust-clippy/wiki#mem_forget)                                             | allow   | `std::mem::forget` usage is likely to cause memory leaks\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                                   | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                                             | warn    | taking a number modulo 1, which always returns 0\n [mut_mut](https://github.com/Manishearth/rust-clippy/wiki#mut_mut)                                                   | allow   | usage of double-mut refs, e.g. `&mut &mut ...` (either copy'n'paste error, or shows a fundamental misunderstanding of references)"}, {"sha": "651e56d709f4fc6434675bda16d70a6abc23d833", "filename": "src/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12ae306630f5029d0c3c7b52fa7532f5a2f308da/src%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ae306630f5029d0c3c7b52fa7532f5a2f308da/src%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmem_forget.rs?ref=12ae306630f5029d0c3c7b52fa7532f5a2f308da", "patch": "@@ -12,7 +12,7 @@ use utils::{match_def_path, paths, span_lint};\n declare_lint! {\n     pub MEM_FORGET,\n     Allow,\n-    \"std::mem::forget usage is likely to cause memory leaks\"\n+    \"`std::mem::forget` usage is likely to cause memory leaks\"\n }\n \n pub struct MemForget;"}]}