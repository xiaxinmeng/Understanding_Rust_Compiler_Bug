{"sha": "f17c2306e2eba49f6447cfda831e4161bf0b618a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxN2MyMzA2ZTJlYmE0OWY2NDQ3Y2ZkYTgzMWU0MTYxYmYwYjYxOGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-11T15:40:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-09-11T15:40:44Z"}, "message": "Auto merge of #54111 - nikomatsakis:issue-53686-keywords-and-macros, r=alexcrichton\n\nwarn about keywords in macro invocations\n\nFixes #53686\n\nr? @alexcrichton", "tree": {"sha": "fc8463028f70fd12099abb9e9c388e0f71483fca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc8463028f70fd12099abb9e9c388e0f71483fca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f17c2306e2eba49f6447cfda831e4161bf0b618a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f17c2306e2eba49f6447cfda831e4161bf0b618a", "html_url": "https://github.com/rust-lang/rust/commit/f17c2306e2eba49f6447cfda831e4161bf0b618a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f17c2306e2eba49f6447cfda831e4161bf0b618a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ee72070bdb789f58f272fab50d49bd48dd9c11f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ee72070bdb789f58f272fab50d49bd48dd9c11f", "html_url": "https://github.com/rust-lang/rust/commit/7ee72070bdb789f58f272fab50d49bd48dd9c11f"}, {"sha": "0cd8e0d03edcdc3fc7d74bdb149e91a4d0b0cbd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd8e0d03edcdc3fc7d74bdb149e91a4d0b0cbd1", "html_url": "https://github.com/rust-lang/rust/commit/0cd8e0d03edcdc3fc7d74bdb149e91a4d0b0cbd1"}], "stats": {"total": 95, "additions": 81, "deletions": 14}, "files": [{"sha": "e22792305a0532c4991c03e67b69a621dfdf7550", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -1117,6 +1117,13 @@ impl<'a> ast_visit::Visitor<'a> for EarlyContext<'a> {\n     }\n \n     fn visit_mac(&mut self, mac: &'a ast::Mac) {\n+        // FIXME(#54110): So, this setup isn't really right. I think\n+        // that (a) the libsyntax visitor ought to be doing this as\n+        // part of `walk_mac`, and (b) we should be calling\n+        // `visit_path`, *but* that would require a `NodeId`, and I\n+        // want to get #53686 fixed quickly. -nmatsakis\n+        ast_visit::walk_path(self, &mac.node.path);\n+\n         run_lints!(self, check_mac, mac);\n     }\n }"}, {"sha": "681cf0d5fc9dedab38cdf14e37e83d053905b1b2", "filename": "src/librustc_lint/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Flibrustc_lint%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Flibrustc_lint%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Flib.rs?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -90,7 +90,7 @@ pub fn register_builtins(store: &mut lint::LintStore, sess: Option<&Session>) {\n     macro_rules! add_pre_expansion_builtin {\n         ($sess:ident, $($name:ident),*,) => (\n             {$(\n-                store.register_early_pass($sess, false, box $name);\n+                store.register_pre_expansion_pass($sess, box $name);\n                 )*}\n             )\n     }"}, {"sha": "125e7c3773ae5e693cf3bebba01d26ccf47fc3ad", "filename": "src/test/ui/rust-2018/async-ident.fixed", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.fixed?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -26,7 +26,9 @@ macro_rules! foo {\n     //~| WARN hard error in the 2018 edition\n }\n \n-foo!(async);\n+foo!(r#async);\n+    //~^ ERROR async\n+    //~| WARN hard error in the 2018 edition\n \n mod dont_lint_raw {\n     fn r#async() {}"}, {"sha": "01b974bcbfb0bdb071bf68e3657054e47ec0bb13", "filename": "src/test/ui/rust-2018/async-ident.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.rs?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -27,6 +27,8 @@ macro_rules! foo {\n }\n \n foo!(async);\n+    //~^ ERROR async\n+    //~| WARN hard error in the 2018 edition\n \n mod dont_lint_raw {\n     fn r#async() {}"}, {"sha": "46e6af84ab8147c7f99b6b93962646a7f7990bc8", "filename": "src/test/ui/rust-2018/async-ident.stderr", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Fasync-ident.stderr?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -31,7 +31,16 @@ LL |     ($async:expr, async) => {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:36:11\n+  --> $DIR/async-ident.rs:29:6\n+   |\n+LL | foo!(async);\n+   |      ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+\n+error: `async` is a keyword in the 2018 edition\n+  --> $DIR/async-ident.rs:38:11\n    |\n LL |     trait async {}\n    |           ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -40,7 +49,7 @@ LL |     trait async {}\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:40:10\n+  --> $DIR/async-ident.rs:42:10\n    |\n LL |     impl async for MyStruct {}\n    |          ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -49,7 +58,7 @@ LL |     impl async for MyStruct {}\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:46:12\n+  --> $DIR/async-ident.rs:48:12\n    |\n LL |     static async: u32 = 0;\n    |            ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -58,7 +67,7 @@ LL |     static async: u32 = 0;\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:52:11\n+  --> $DIR/async-ident.rs:54:11\n    |\n LL |     const async: u32 = 0;\n    |           ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -67,7 +76,7 @@ LL |     const async: u32 = 0;\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:58:15\n+  --> $DIR/async-ident.rs:60:15\n    |\n LL | impl Foo { fn async() {} }\n    |               ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -76,7 +85,7 @@ LL | impl Foo { fn async() {} }\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:63:12\n+  --> $DIR/async-ident.rs:65:12\n    |\n LL |     struct async {}\n    |            ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -85,7 +94,7 @@ LL |     struct async {}\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:66:9\n+  --> $DIR/async-ident.rs:68:9\n    |\n LL |     let async: async = async {};\n    |         ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -94,7 +103,7 @@ LL |     let async: async = async {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:66:16\n+  --> $DIR/async-ident.rs:68:16\n    |\n LL |     let async: async = async {};\n    |                ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -103,7 +112,7 @@ LL |     let async: async = async {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:66:24\n+  --> $DIR/async-ident.rs:68:24\n    |\n LL |     let async: async = async {};\n    |                        ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -112,7 +121,7 @@ LL |     let async: async = async {};\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:77:19\n+  --> $DIR/async-ident.rs:79:19\n    |\n LL |     () => (pub fn async() {})\n    |                   ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n@@ -121,13 +130,13 @@ LL |     () => (pub fn async() {})\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n error: `async` is a keyword in the 2018 edition\n-  --> $DIR/async-ident.rs:84:6\n+  --> $DIR/async-ident.rs:86:6\n    |\n LL |     (async) => (1)\n    |      ^^^^^ help: you can use a raw identifier to stay compatible: `r#async`\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n    = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n \n-error: aborting due to 14 previous errors\n+error: aborting due to 15 previous errors\n "}, {"sha": "c65f0fc30ef0ab99644540689b3bc07acd5ef4a3", "filename": "src/test/ui/rust-2018/try-macro.fixed", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.fixed?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -0,0 +1,16 @@\n+// Test that `try!` macros are rewritten.\n+\n+// run-rustfix\n+// compile-pass\n+\n+#![warn(rust_2018_compatibility)]\n+#![allow(unused_variables)]\n+#![allow(dead_code)]\n+\n+fn foo() -> Result<usize, ()> {\n+    let x: Result<usize, ()> = Ok(22);\n+    r#try!(x);\n+    Ok(44)\n+}\n+\n+fn main() { }"}, {"sha": "f435890a61dcb0c8424937a17beedd9292c92f2a", "filename": "src/test/ui/rust-2018/try-macro.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.rs?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -0,0 +1,16 @@\n+// Test that `try!` macros are rewritten.\n+\n+// run-rustfix\n+// compile-pass\n+\n+#![warn(rust_2018_compatibility)]\n+#![allow(unused_variables)]\n+#![allow(dead_code)]\n+\n+fn foo() -> Result<usize, ()> {\n+    let x: Result<usize, ()> = Ok(22);\n+    try!(x);\n+    Ok(44)\n+}\n+\n+fn main() { }"}, {"sha": "40a4564cc3d6d689f3a0edca1a2131c5deb87091", "filename": "src/test/ui/rust-2018/try-macro.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f17c2306e2eba49f6447cfda831e4161bf0b618a/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frust-2018%2Ftry-macro.stderr?ref=f17c2306e2eba49f6447cfda831e4161bf0b618a", "patch": "@@ -0,0 +1,15 @@\n+warning: `try` is a keyword in the 2018 edition\n+  --> $DIR/try-macro.rs:12:5\n+   |\n+LL |     try!(x);\n+   |     ^^^ help: you can use a raw identifier to stay compatible: `r#try`\n+   |\n+note: lint level defined here\n+  --> $DIR/try-macro.rs:6:9\n+   |\n+LL | #![warn(rust_2018_compatibility)]\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^\n+   = note: #[warn(keyword_idents)] implied by #[warn(rust_2018_compatibility)]\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\n+   = note: for more information, see issue #49716 <https://github.com/rust-lang/rust/issues/49716>\n+"}]}