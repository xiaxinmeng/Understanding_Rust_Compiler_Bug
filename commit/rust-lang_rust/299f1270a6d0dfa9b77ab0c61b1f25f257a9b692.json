{"sha": "299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5OWYxMjcwYTZkMGRmYTliNzdhYjBjNjFiMWYyNWYyNTdhOWI2OTI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-10T07:58:54Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-11-10T07:58:54Z"}, "message": "Rustup", "tree": {"sha": "f1087b58038b1aa2720ce2b6cbbc3806c72e095b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1087b58038b1aa2720ce2b6cbbc3806c72e095b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAloFXD4ACgkQpp+NIls6\n19k+YA/5ARBib7BArzsL8k/shXKSQ3I4UbYQnAPWUK1B/xRTOKUZcPPQelIdQHEv\n/ABjnv8DMl9YaoVWv0oLuqxdtBHU7ZUu50pY6DdD4jg2L5/sfgJruAPxGimu+57y\ntbzrNiIe+n5XN1WMk0OFtGBmP+hAXxBWyiW4C380jkYEgvIU6rTFbHpJToIOLTfJ\nsRZknc3hwryTDUd5DptcHQH5xwK9DBB+h9gLXWmDmGIdTH9JsSGVfm7EPJBAImj7\nE1RxnWCXCIqc8UzS/BM8OoAyZQAosYZSPSZAaEej2KMd7iPb4AK+izsnh2YQrsWw\n/V9SnLgfbVQZIUUnVBKIQKg/iYz6gc+MMjXY8gonCxMDbo41CSwiQ5t4QwoWQPz9\nRBqIRGE8yafMX7E23VtOSO19ALr7B0655HADkGGYFdKnej38zgNd6Rtjr6QoCE54\nUXwnjKR6w2pLefoPcfEUWro3ymzmCM+M01UgZHFMdmOxjuKEz+skMUKM5DXJlG8D\nIRXo5I3IVwwluWBucCGrzsClcPCp/UcDoi1WwLKFZMgr1P2/LvCEKk8Sp293Zjtt\nRSlNO1kOiLbYeJ9UDpc3Kbt58mC22RBWZRKJsY0JWcsxocZVL1Z2Kw4896E3nIDs\nkMWIJnWm7SSeqgt5WMu11z9ttgdMrm0prVIbl88I2u7oo3RpOlQ=\n=uaCP\n-----END PGP SIGNATURE-----", "payload": "tree f1087b58038b1aa2720ce2b6cbbc3806c72e095b\nparent 4020d03f098febdf4c82245c3cbd734622bfbd72\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1510300734 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1510300734 +0100\n\nRustup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "html_url": "https://github.com/rust-lang/rust/commit/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4020d03f098febdf4c82245c3cbd734622bfbd72", "url": "https://api.github.com/repos/rust-lang/rust/commits/4020d03f098febdf4c82245c3cbd734622bfbd72", "html_url": "https://github.com/rust-lang/rust/commit/4020d03f098febdf4c82245c3cbd734622bfbd72"}], "stats": {"total": 114, "additions": 60, "deletions": 54}, "files": [{"sha": "4603c27e2669716e3238a67567c5b68cb990e08e", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.170\n+* Rustup to *rustc 1.23.0-nightly (d6b06c63a 2017-11-09)*\n+\n ## 0.0.169\n * Rustup to *rustc 1.23.0-nightly (3b82e4c74 2017-11-05)*\n * New lints: [`just_underscores_and_digits`], [`result_map_unwrap_or_else`], [`transmute_bytes_to_str`]"}, {"sha": "157a0d18a99e34099b5936518f221089d004ab83", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.169\"\n+version = \"0.0.170\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -37,7 +37,7 @@ path = \"src/driver.rs\"\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.169\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.170\", path = \"clippy_lints\" }\n # end automatic update\n cargo_metadata = \"0.2\"\n "}, {"sha": "e2b8d65468225afab8c94107f1cd81f2b917786a", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.169\"\n+version = \"0.0.170\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "ee61920b4897ccf4abd19fd761e46ad1fa23c2f3", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -888,9 +888,8 @@ fn lint_or_fun_call(cx: &LateContext, expr: &hir::Expr, name: &str, args: &[hir:\n         }\n \n         // don't lint for constant values\n-        // FIXME: can we `expect` here instead of match?\n         let owner_def = cx.tcx.hir.get_parent_did(arg.id);\n-        let promotable = cx.tcx.rvalue_promotable_map(owner_def)[&arg.hir_id.local_id];\n+        let promotable = cx.tcx.rvalue_promotable_map(owner_def).contains(&arg.hir_id.local_id);\n         if promotable {\n             return;\n         }"}, {"sha": "a0323df1f624e24ec763e81c0770b4e94056d73e", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -620,14 +620,18 @@ where\n     I: IntoIterator<Item = (Span, String)>,\n {\n     let sugg = rustc_errors::CodeSuggestion {\n-        substitution_parts: sugg.into_iter()\n-            .map(|(span, sub)| {\n-                rustc_errors::Substitution {\n-                    span: span,\n-                    substitutions: vec![sub],\n-                }\n-            })\n-            .collect(),\n+        substitutions: vec![\n+            rustc_errors::Substitution {\n+                parts: sugg.into_iter()\n+                    .map(|(span, snippet)| {\n+                        rustc_errors::SubstitutionPart {\n+                            snippet,\n+                            span,\n+                        }\n+                    })\n+                    .collect(),\n+            }\n+        ],\n         msg: help_msg,\n         show_code_when_inline: true,\n     };"}, {"sha": "f968e0888665d04571391ac418efd19d2908cd14", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -82,7 +82,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n    |\n 86 |     for <item> in &vec {\n-   |         ^^^^^^\n+   |\n \n error: the loop variable `i` is only used to index `vec`.\n   --> $DIR/for_loop.rs:95:5\n@@ -95,7 +95,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n    |\n 95 |     for <item> in &vec {\n-   |         ^^^^^^\n+   |\n \n error: the loop variable `j` is only used to index `STATIC`.\n    --> $DIR/for_loop.rs:100:5\n@@ -108,7 +108,7 @@ error: the loop variable `j` is only used to index `STATIC`.\n help: consider using an iterator\n     |\n 100 |     for <item> in STATIC.iter().take(4) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `j` is only used to index `CONST`.\n    --> $DIR/for_loop.rs:104:5\n@@ -121,7 +121,7 @@ error: the loop variable `j` is only used to index `CONST`.\n help: consider using an iterator\n     |\n 104 |     for <item> in CONST.iter().take(4) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is used to index `vec`\n    --> $DIR/for_loop.rs:108:5\n@@ -134,7 +134,7 @@ error: the loop variable `i` is used to index `vec`\n help: consider using an iterator\n     |\n 108 |     for (i, <item>) in vec.iter().enumerate() {\n-    |         ^^^^^^^^^^^\n+    |\n \n error: the loop variable `i` is only used to index `vec2`.\n    --> $DIR/for_loop.rs:116:5\n@@ -147,7 +147,7 @@ error: the loop variable `i` is only used to index `vec2`.\n help: consider using an iterator\n     |\n 116 |     for <item> in vec2.iter().take(vec.len()) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:120:5\n@@ -160,7 +160,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n     |\n 120 |     for <item> in vec.iter().skip(5) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:124:5\n@@ -173,7 +173,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n     |\n 124 |     for <item> in vec.iter().take(MAX_LEN) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:128:5\n@@ -186,7 +186,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n     |\n 128 |     for <item> in vec.iter().take(MAX_LEN + 1) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:132:5\n@@ -199,7 +199,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n     |\n 132 |     for <item> in vec.iter().take(10).skip(5) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:136:5\n@@ -212,7 +212,7 @@ error: the loop variable `i` is only used to index `vec`.\n help: consider using an iterator\n     |\n 136 |     for <item> in vec.iter().take(10 + 1).skip(5) {\n-    |         ^^^^^^\n+    |\n \n error: the loop variable `i` is used to index `vec`\n    --> $DIR/for_loop.rs:140:5\n@@ -225,7 +225,7 @@ error: the loop variable `i` is used to index `vec`\n help: consider using an iterator\n     |\n 140 |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n-    |         ^^^^^^^^^^^\n+    |\n \n error: the loop variable `i` is used to index `vec`\n    --> $DIR/for_loop.rs:144:5\n@@ -238,7 +238,7 @@ error: the loop variable `i` is used to index `vec`\n help: consider using an iterator\n     |\n 144 |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n-    |         ^^^^^^^^^^^\n+    |\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:148:5\n@@ -448,7 +448,7 @@ error: you seem to want to iterate on a map's values\n help: use the corresponding method\n     |\n 385 |     for v in m.values() {\n-    |         ^\n+    |\n \n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:390:5\n@@ -464,7 +464,7 @@ error: you seem to want to iterate on a map's values\n help: use the corresponding method\n     |\n 390 |     for v in (*m).values() {\n-    |         ^\n+    |\n \n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:398:5\n@@ -477,7 +477,7 @@ error: you seem to want to iterate on a map's values\n help: use the corresponding method\n     |\n 398 |     for v in m.values_mut() {\n-    |         ^\n+    |\n \n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:403:5\n@@ -490,7 +490,7 @@ error: you seem to want to iterate on a map's values\n help: use the corresponding method\n     |\n 403 |     for v in (*m).values_mut() {\n-    |         ^\n+    |\n \n error: you seem to want to iterate on a map's keys\n    --> $DIR/for_loop.rs:409:5\n@@ -503,7 +503,7 @@ error: you seem to want to iterate on a map's keys\n help: use the corresponding method\n     |\n 409 |     for k in rm.keys() {\n-    |         ^\n+    |\n \n error: it looks like you're manually copying between slices\n    --> $DIR/for_loop.rs:462:5"}, {"sha": "52b686bf8aeef05f9b075be51ac50f2e5971e481", "filename": "tests/ui/implicit_hasher.stderr", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fimplicit_hasher.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fimplicit_hasher.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_hasher.stderr?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -8,11 +8,11 @@ error: impl for `HashMap` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 11 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashMap<K, V, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ...and use generic constructor\n    |\n 17 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:20:36\n@@ -23,11 +23,11 @@ error: impl for `HashMap` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 20 | impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<i8> for (HashMap<K, V, S>,) {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ...and use generic constructor\n    |\n 22 |         ((HashMap::default(),), (HashMap::with_capacity_and_hasher(10, Default::default()),))\n-   |           ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:25:19\n@@ -38,11 +38,11 @@ error: impl for `HashMap` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 25 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashMap<String, String, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ...and use generic constructor\n    |\n 27 |         (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: impl for `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:43:32\n@@ -53,11 +53,11 @@ error: impl for `HashSet` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 43 | impl<T: Hash + Eq, S: ::std::hash::BuildHasher + Default> Foo<i8> for HashSet<T, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ...and use generic constructor\n    |\n 45 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: impl for `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:48:19\n@@ -68,11 +68,11 @@ error: impl for `HashSet` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 48 | impl<S: ::std::hash::BuildHasher + Default> Foo<i16> for HashSet<String, S> {\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ...and use generic constructor\n    |\n 50 |         (HashSet::default(), HashSet::with_capacity_and_hasher(10, Default::default()))\n-   |          ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: parameter of type `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:65:23\n@@ -83,7 +83,7 @@ error: parameter of type `HashMap` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 65 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: parameter of type `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:65:53\n@@ -94,7 +94,7 @@ error: parameter of type `HashSet` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 65 | pub fn foo<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {\n-   |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: impl for `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:70:43\n@@ -108,11 +108,11 @@ error: impl for `HashMap` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 70 |         impl<K: Hash + Eq, V, S: ::std::hash::BuildHasher + Default> Foo<u8> for HashMap<K, V, S> {\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n help: ...and use generic constructor\n    |\n 72 |                 (HashMap::default(), HashMap::with_capacity_and_hasher(10, Default::default()))\n-   |                  ^^^^^^^^^^^^^^^^^^\n+   |\n \n error: parameter of type `HashMap` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:78:33\n@@ -126,7 +126,7 @@ error: parameter of type `HashMap` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 78 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32, S>, _set: &mut HashSet<i32>) {\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n \n error: parameter of type `HashSet` should be generalized over different hashers\n   --> $DIR/implicit_hasher.rs:78:63\n@@ -140,5 +140,5 @@ error: parameter of type `HashSet` should be generalized over different hashers\n help: consider adding a type parameter\n    |\n 78 |         pub fn $name<S: ::std::hash::BuildHasher>(_map: &mut HashMap<i32, i32>, _set: &mut HashSet<i32, S>) {\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n "}, {"sha": "7ff38a3534193fa63ad1ace50229a606199ae39d", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -133,7 +133,7 @@ error: you don't need to add `&` to all patterns\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |\n 138 |         match *v { .. }\n-    |         ^^^^^^^^^^^^^^^\n+    |\n \n error: you don't need to add `&` to all patterns\n    --> $DIR/matches.rs:148:5\n@@ -147,7 +147,7 @@ error: you don't need to add `&` to all patterns\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |\n 148 |     match *tup { .. }\n-    |     ^^^^^^^^^^^^^^^^^\n+    |\n \n error: you don't need to add `&` to both the expression and the patterns\n    --> $DIR/matches.rs:154:5\n@@ -169,7 +169,7 @@ error: you don't need to add `&` to all patterns\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n     |\n 165 |     if let .. = *a { .. }\n-    |     ^^^^^^^^^^^^^^^^^^^^^\n+    |\n \n error: you don't need to add `&` to both the expression and the patterns\n    --> $DIR/matches.rs:170:5"}, {"sha": "e54c0e7d01156edd56163e795b07e46f4cbd5bd5", "filename": "tests/ui/needless_range_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fneedless_range_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fneedless_range_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_range_loop.stderr?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -10,5 +10,5 @@ error: the loop variable `i` is only used to index `ns`.\n help: consider using an iterator\n    |\n 8  |     for <item> in ns.iter().take(10).skip(3) {\n-   |         ^^^^^^\n+   |\n "}, {"sha": "32596944570eeab1f299da0035bc3927b5756504", "filename": "tests/ui/op_ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fop_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fop_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.stderr?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -8,5 +8,5 @@ error: needlessly taken reference of both operands\n help: use the values directly\n    |\n 13 |     let foo = 5 - 6;\n-   |               ^\n+   |\n "}, {"sha": "9c6804cd9a000abace4bbdcb93ff32d4e9d61251", "filename": "tests/ui/ptr_arg.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fptr_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/299f1270a6d0dfa9b77ab0c61b1f25f257a9b692/tests%2Fui%2Fptr_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fptr_arg.stderr?ref=299f1270a6d0dfa9b77ab0c61b1f25f257a9b692", "patch": "@@ -35,7 +35,7 @@ help: change `x.clone()` to\n help: change `x.clone()` to\n    |\n 46 |     x.to_owned()\n-   |     ^^^^^^^^^^^^\n+   |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n   --> $DIR/ptr_arg.rs:49:18\n@@ -58,7 +58,7 @@ help: change `x.clone()` to\n help: change `x.clone()` to\n    |\n 56 |     x.to_string()\n-   |     ^^^^^^^^^^^^^\n+   |\n \n error: writing `&String` instead of `&str` involves a new object where a slice will do.\n   --> $DIR/ptr_arg.rs:59:44"}]}