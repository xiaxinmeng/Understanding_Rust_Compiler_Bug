{"sha": "a8640cdf47b5424a1a194551f3e873e8d2726cb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NjQwY2RmNDdiNTQyNGExYTE5NDU1MWYzZTg3M2U4ZDI3MjZjYjQ=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-01T14:34:45Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-06-09T08:03:15Z"}, "message": "improper_ctypes: add test for #66202\n\nThis commit adds a test of the improper ctypes lint, checking that\nreturn type are normalized bethat return types are normalized before\nbeing checked for FFI-safety, and that transparent newtype wrappers\nare FFI-safe if the type being wrapped is FFI-safe.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "05a4b4ddab98f3a98e7ef12e5de44d950b7be6fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05a4b4ddab98f3a98e7ef12e5de44d950b7be6fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8640cdf47b5424a1a194551f3e873e8d2726cb4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl7fQkMACgkQJZLnbIc4\nH9kVEg//fzQw7KJxiCU3N9uaSLdosy++TRG8c9436ceNXE+m0YHzpNiQU3iHAqmD\nS5EYHPoy4/IH25r5qZTbRG2GQnTL0Jl/jBLj9XO29EzeL9Xpf6BnhwK0gGIIDela\n1Gqqqg3rfzRTkNXpucGHm2F8U2oTbvPhOmnt+8dDCQgT5DGa2536pYrYrPUwqyXd\nbtDbdidqfIm+/ZzlVLSZM9tRgwD2beY97Kxb7t1nbVDhSeTNHVu+rMZDzdLtt/hU\ntaaneQeUeq9kLopbygEUHk+bYe2d9qQWD3BFcH14ujYeVHrswbNPXqYcGhMAommJ\nI+xmA348yZLuPhTveMk2IpN1hiHVT3u3I1l13QfHqnVQ61qrDHH10DpiGxPqGKRP\nJdvsDY/Z4tXQI34N/i6WIQ4XDMuceExcvbKaeBLIXhAU+zRA1U/7DFsuX2fS50KK\ncx3dUz4hq7S6SzcaGeZDr21KmlnrOrdzc/1Ga6VDneO14oI6xtdvo5qfTqEvfdVR\nqpgkC8+nDEdXZF3ItNBZVqOMz8d6Tj7//tIEN/Fq+1I3YTNIlSifULAim0CeJ9Pd\nVt3K0MKDv7R0jRTrebLE+WvQ/Sp1GueicBjQb/DRKjA8sL3XvwZphbzyOLkg1wVH\nYyuPR8NyiTPBCoVc6zUlEiKccl9Rt6VU16y0lWN2RBljGXFeZns=\n=lJgk\n-----END PGP SIGNATURE-----", "payload": "tree 05a4b4ddab98f3a98e7ef12e5de44d950b7be6fd\nparent ccac43b86b559e01fa71179af1a838ab94559c75\nauthor David Wood <david@davidtw.co> 1591022085 +0100\ncommitter David Wood <david@davidtw.co> 1591689795 +0100\n\nimproper_ctypes: add test for #66202\n\nThis commit adds a test of the improper ctypes lint, checking that\nreturn type are normalized bethat return types are normalized before\nbeing checked for FFI-safety, and that transparent newtype wrappers\nare FFI-safe if the type being wrapped is FFI-safe.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8640cdf47b5424a1a194551f3e873e8d2726cb4", "html_url": "https://github.com/rust-lang/rust/commit/a8640cdf47b5424a1a194551f3e873e8d2726cb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8640cdf47b5424a1a194551f3e873e8d2726cb4/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccac43b86b559e01fa71179af1a838ab94559c75", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccac43b86b559e01fa71179af1a838ab94559c75", "html_url": "https://github.com/rust-lang/rust/commit/ccac43b86b559e01fa71179af1a838ab94559c75"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "df8170d8d968cbe8f2eeab5ea44357d187ae8d0d", "filename": "src/test/ui/lint/lint-ctypes-66202.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a8640cdf47b5424a1a194551f3e873e8d2726cb4/src%2Ftest%2Fui%2Flint%2Flint-ctypes-66202.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8640cdf47b5424a1a194551f3e873e8d2726cb4/src%2Ftest%2Fui%2Flint%2Flint-ctypes-66202.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-66202.rs?ref=a8640cdf47b5424a1a194551f3e873e8d2726cb4", "patch": "@@ -0,0 +1,17 @@\n+#![deny(improper_ctypes)]\n+\n+// This test checks that return types are normalized before being checked for FFI-safety, and that\n+// transparent newtype wrappers are FFI-safe if the type being wrapped is FFI-safe.\n+\n+#[repr(transparent)]\n+pub struct W<T>(T);\n+\n+extern \"C\" {\n+    pub fn bare() -> ();\n+    pub fn normalize() -> <() as ToOwned>::Owned;\n+    //~^ ERROR uses type `()`\n+    pub fn transparent() -> W<()>;\n+    //~^ ERROR uses type `W<()>`\n+}\n+\n+fn main() {}"}, {"sha": "3268d4cefbf4d1d16394ca4f81220e14f1cf09cf", "filename": "src/test/ui/lint/lint-ctypes-66202.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a8640cdf47b5424a1a194551f3e873e8d2726cb4/src%2Ftest%2Fui%2Flint%2Flint-ctypes-66202.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a8640cdf47b5424a1a194551f3e873e8d2726cb4/src%2Ftest%2Fui%2Flint%2Flint-ctypes-66202.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-ctypes-66202.stderr?ref=a8640cdf47b5424a1a194551f3e873e8d2726cb4", "patch": "@@ -0,0 +1,29 @@\n+error: `extern` block uses type `()`, which is not FFI-safe\n+  --> $DIR/lint-ctypes-66202.rs:11:27\n+   |\n+LL |     pub fn normalize() -> <() as ToOwned>::Owned;\n+   |                           ^^^^^^^^^^^^^^^^^^^^^^ not FFI-safe\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-ctypes-66202.rs:1:9\n+   |\n+LL | #![deny(improper_ctypes)]\n+   |         ^^^^^^^^^^^^^^^\n+   = help: consider using a struct instead\n+   = note: tuples have unspecified layout\n+\n+error: `extern` block uses type `W<()>`, which is not FFI-safe\n+  --> $DIR/lint-ctypes-66202.rs:13:29\n+   |\n+LL |     pub fn transparent() -> W<()>;\n+   |                             ^^^^^ not FFI-safe\n+   |\n+   = note: composed only of `PhantomData`\n+note: the type is defined here\n+  --> $DIR/lint-ctypes-66202.rs:7:1\n+   |\n+LL | pub struct W<T>(T);\n+   | ^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+"}]}