{"sha": "c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0", "node_id": "C_kwDOAAsO6NoAKGMwNzY3OTk4OWE2YmY4M2NkNGZhN2JkZDBiOGVhM2JlZTc1NGYzYzA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-20T06:10:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-20T06:10:30Z"}, "message": "Rollup merge of #109259 - GuillaumeGomez:fix-missing-private-inlining, r=notriddle\n\nrustdoc: Fix missing private inlining\n\nFixes https://github.com/rust-lang/rust/issues/109258.\n\nIf the item isn't inlined, it shouldn't have been added into `view_item_stack`. The problem here was that it was not removed, preventing sub items to be inlined if they have a re-export in \"upper levels\".\n\ncc `@epage`\nr? `@notriddle`", "tree": {"sha": "791032c573674a4e9b378cc484eeb26bc7f518b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/791032c573674a4e9b378cc484eeb26bc7f518b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkF/jWCRBK7hj4Ov3rIwAAuaMIAGcMxye8quMMBGrA75SOafWR\nnE6ORLYgbajOO29yj1/KnslkhIIuBxnBKuWoKv2uvC1HK5w62ZGpGAZ1GASHR8tu\nqmHyM/4i56eLXh7d59GVfptbDfDaDSf9/M0IQPYhmxwEahSlRHm8ku/ztmdaWfxZ\nDbtJ8M10kZmzH+TuonBtRiLAFXqJbCArnZMt5nJ8sllLL5A5Kzp/gu59wgDdk5ca\nIGFQas2dqaGB7FQ8xEyiRf17ymXPxysOQ6VMCzviR5rYY5OVeXpatI2w2I563dmM\naQZxS8EHIjxdx5o069BZvZ1cIrkXX5JuZWfWXW+/DYMdg8guKrEWXEDf6PLCUAY=\n=i/Ej\n-----END PGP SIGNATURE-----\n", "payload": "tree 791032c573674a4e9b378cc484eeb26bc7f518b5\nparent ede3c39fe606fd8c3b181858001d8cc62f723c11\nparent e9f29c40161ef06b014abd795b179861d5f55920\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679292630 +0100\ncommitter GitHub <noreply@github.com> 1679292630 +0100\n\nRollup merge of #109259 - GuillaumeGomez:fix-missing-private-inlining, r=notriddle\n\nrustdoc: Fix missing private inlining\n\nFixes https://github.com/rust-lang/rust/issues/109258.\n\nIf the item isn't inlined, it shouldn't have been added into `view_item_stack`. The problem here was that it was not removed, preventing sub items to be inlined if they have a re-export in \"upper levels\".\n\ncc `@epage`\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0", "html_url": "https://github.com/rust-lang/rust/commit/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ede3c39fe606fd8c3b181858001d8cc62f723c11", "url": "https://api.github.com/repos/rust-lang/rust/commits/ede3c39fe606fd8c3b181858001d8cc62f723c11", "html_url": "https://github.com/rust-lang/rust/commit/ede3c39fe606fd8c3b181858001d8cc62f723c11"}, {"sha": "e9f29c40161ef06b014abd795b179861d5f55920", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f29c40161ef06b014abd795b179861d5f55920", "html_url": "https://github.com/rust-lang/rust/commit/e9f29c40161ef06b014abd795b179861d5f55920"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "060062db0027aa5cd809501e7d6db85d11a169ff", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0", "patch": "@@ -265,10 +265,6 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             return false;\n         }\n \n-        if !self.view_item_stack.insert(res_did) {\n-            return false;\n-        }\n-\n         if !please_inline &&\n             let mut visitor = OneLevelVisitor::new(self.cx.tcx.hir(), res_did) &&\n             let Some(item) = visitor.find_target(self.cx.tcx, def_id.to_def_id(), path) &&\n@@ -285,6 +281,10 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n             return false;\n         }\n \n+        if !self.view_item_stack.insert(res_did) {\n+            return false;\n+        }\n+\n         let ret = match tcx.hir().get_by_def_id(res_did) {\n             Node::Item(&hir::Item { kind: hir::ItemKind::Mod(ref m), .. }) if glob => {\n                 let prev = mem::replace(&mut self.inlining, true);"}, {"sha": "96f606368b27db0c435d51221b10356d903c88d3", "filename": "tests/rustdoc/issue-109258-missing-private-inlining.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0/tests%2Frustdoc%2Fissue-109258-missing-private-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0/tests%2Frustdoc%2Fissue-109258-missing-private-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frustdoc%2Fissue-109258-missing-private-inlining.rs?ref=c07679989a6bf83cd4fa7bdd0b8ea3bee754f3c0", "patch": "@@ -0,0 +1,27 @@\n+// Regression test for <https://github.com/rust-lang/rust/issues/109258>.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has 'foo/index.html'\n+// We should only have a \"Re-exports\" and a \"Modules\" headers.\n+// @count - '//*[@id=\"main-content\"]/h2[@class=\"small-section-header\"]' 2\n+// @has - '//*[@id=\"main-content\"]/h2[@class=\"small-section-header\"]' 'Re-exports'\n+// @has - '//*[@id=\"main-content\"]/h2[@class=\"small-section-header\"]' 'Modules'\n+\n+// @has - '//*[@id=\"reexport.Foo\"]' 'pub use crate::issue_109258::Foo;'\n+// @has - '//*[@id=\"reexport.Foo\"]//a[@href=\"issue_109258/struct.Foo.html\"]' 'Foo'\n+// @!has 'foo/struct.Foo.html'\n+pub use crate::issue_109258::Foo;\n+\n+// @has 'foo/issue_109258/index.html'\n+// We should only have a \"Structs\" header.\n+// @count - '//*[@id=\"main-content\"]/h2[@class=\"small-section-header\"]' 1\n+// @has - '//*[@id=\"main-content\"]/h2[@class=\"small-section-header\"]' 'Structs'\n+// @has - '//*[@id=\"main-content\"]//a[@href=\"struct.Foo.html\"]' 'Foo'\n+// @has 'foo/issue_109258/struct.Foo.html'\n+pub mod issue_109258 {\n+    mod priv_mod {\n+        pub struct Foo;\n+    }\n+    pub use self::priv_mod::Foo;\n+}"}]}