{"sha": "d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YTM0ZTdkM2YzZjQ0N2NjZmYwYjcyZmQ1ZmIxOGE3Yzc4ZDBjYzU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-04-24T10:17:58Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-04-24T23:59:49Z"}, "message": "Convert delegate to use an object type and remove FIXME from closed issue", "tree": {"sha": "7dd32673ee049116b3e2532b18b9be8b0649ff79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7dd32673ee049116b3e2532b18b9be8b0649ff79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5", "html_url": "https://github.com/rust-lang/rust/commit/d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96dfed2b62c6e84a542f9a170133ec528e2191c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/96dfed2b62c6e84a542f9a170133ec528e2191c2", "html_url": "https://github.com/rust-lang/rust/commit/96dfed2b62c6e84a542f9a170133ec528e2191c2"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "5848004e5be275ba3487fc8da77cca8119b94e46", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=d8a34e7d3f3f447ccff0b72fd5fb18a7c78d0cc5", "patch": "@@ -104,10 +104,10 @@ pub trait Delegate {\n // supplies types from the tree. After type checking is complete, you\n // can just use the tcx as the typer.\n \n-pub struct ExprUseVisitor<'d,'t,D,TYPER> {\n+pub struct ExprUseVisitor<'d,'t,TYPER> {\n     typer: &'t TYPER,\n     mc: mc::MemCategorizationContext<'t,TYPER>,\n-    delegate: &'d mut D,\n+    delegate: &'d mut Delegate,\n }\n \n // If the TYPER results in an error, it's because the type check\n@@ -126,10 +126,10 @@ macro_rules! ignore_err(\n     )\n )\n \n-impl<'d,'t,D:Delegate,TYPER:mc::Typer> ExprUseVisitor<'d,'t,D,TYPER> {\n-    pub fn new(delegate: &'d mut D,\n+impl<'d,'t,TYPER:mc::Typer> ExprUseVisitor<'d,'t,TYPER> {\n+    pub fn new(delegate: &'d mut Delegate,\n                typer: &'t TYPER)\n-               -> ExprUseVisitor<'d,'t,D,TYPER> {\n+               -> ExprUseVisitor<'d,'t,TYPER> {\n         ExprUseVisitor { typer: typer,\n                          mc: mc::MemCategorizationContext::new(typer),\n                          delegate: delegate }\n@@ -370,13 +370,10 @@ impl<'d,'t,D:Delegate,TYPER:mc::Typer> ExprUseVisitor<'d,'t,D,TYPER> {\n             }\n \n             ast::ExprAssignOp(_, lhs, rhs) => {\n-                // FIXME(#4712) --- Overloaded operators?\n-                //\n-                // if !self.walk_overloaded_operator(expr, [lhs, rhs])\n-                // {\n+                // This will have to change if/when we support\n+                // overloaded operators for `+=` and so forth.\n                 self.mutate_expr(expr, lhs, WriteAndRead);\n                 self.consume_expr(rhs);\n-                // }\n             }\n \n             ast::ExprRepeat(base, count) => {"}]}