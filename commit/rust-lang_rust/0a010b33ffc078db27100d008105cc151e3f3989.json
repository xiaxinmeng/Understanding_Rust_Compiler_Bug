{"sha": "0a010b33ffc078db27100d008105cc151e3f3989", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMDEwYjMzZmZjMDc4ZGIyNzEwMGQwMDgxMDVjYzE1MWUzZjM5ODk=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-04-02T08:13:38Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-04-28T09:36:30Z"}, "message": "Fix unused parentheses warning.", "tree": {"sha": "ea2c0d41047a220b0926c012bf17b9950f4b1e97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea2c0d41047a220b0926c012bf17b9950f4b1e97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a010b33ffc078db27100d008105cc151e3f3989", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a010b33ffc078db27100d008105cc151e3f3989", "html_url": "https://github.com/rust-lang/rust/commit/0a010b33ffc078db27100d008105cc151e3f3989", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a010b33ffc078db27100d008105cc151e3f3989/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "143b8816a3cc478ec8d214efade98245eb5b3c82", "url": "https://api.github.com/repos/rust-lang/rust/commits/143b8816a3cc478ec8d214efade98245eb5b3c82", "html_url": "https://github.com/rust-lang/rust/commit/143b8816a3cc478ec8d214efade98245eb5b3c82"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "229ccfe08f7afd78a68c359ac6ae30f25b149f98", "filename": "src/librustc_macros/src/query.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a010b33ffc078db27100d008105cc151e3f3989/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a010b33ffc078db27100d008105cc151e3f3989/src%2Flibrustc_macros%2Fsrc%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_macros%2Fsrc%2Fquery.rs?ref=0a010b33ffc078db27100d008105cc151e3f3989", "patch": "@@ -107,7 +107,9 @@ impl Parse for QueryModifier {\n             let block = input.parse()?;\n             Ok(QueryModifier::LoadCached(tcx, id, block))\n         } else if modifier == \"storage\" {\n-            let ty = input.parse()?;\n+            let args;\n+            parenthesized!(args in input);\n+            let ty = args.parse()?;\n             Ok(QueryModifier::Storage(ty))\n         } else if modifier == \"fatal_cycle\" {\n             Ok(QueryModifier::FatalCycle)"}]}