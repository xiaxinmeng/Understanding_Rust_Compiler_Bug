{"sha": "3f6e8ffe64b57b0eaba6812208e94500422ca40c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmNmU4ZmZlNjRiNTdiMGVhYmE2ODEyMjA4ZTk0NTAwNDIyY2E0MGM=", "commit": {"author": {"name": "Jeffrey Yasskin", "email": "jyasskin@gmail.com", "date": "2010-07-25T07:36:03Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-07T00:29:21Z"}, "message": "Implement _str.len() to return the number of bytes, rename it to byte_len(),\nand add a test.", "tree": {"sha": "bb6ed1f9b5ce9603c999c195d0754057e633599a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb6ed1f9b5ce9603c999c195d0754057e633599a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f6e8ffe64b57b0eaba6812208e94500422ca40c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f6e8ffe64b57b0eaba6812208e94500422ca40c", "html_url": "https://github.com/rust-lang/rust/commit/3f6e8ffe64b57b0eaba6812208e94500422ca40c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f6e8ffe64b57b0eaba6812208e94500422ca40c/comments", "author": {"login": "jyasskin", "id": 83420, "node_id": "MDQ6VXNlcjgzNDIw", "avatar_url": "https://avatars.githubusercontent.com/u/83420?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyasskin", "html_url": "https://github.com/jyasskin", "followers_url": "https://api.github.com/users/jyasskin/followers", "following_url": "https://api.github.com/users/jyasskin/following{/other_user}", "gists_url": "https://api.github.com/users/jyasskin/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyasskin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyasskin/subscriptions", "organizations_url": "https://api.github.com/users/jyasskin/orgs", "repos_url": "https://api.github.com/users/jyasskin/repos", "events_url": "https://api.github.com/users/jyasskin/events{/privacy}", "received_events_url": "https://api.github.com/users/jyasskin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "581a95a804f77259153c030d39f861282b468612", "url": "https://api.github.com/repos/rust-lang/rust/commits/581a95a804f77259153c030d39f861282b468612", "html_url": "https://github.com/rust-lang/rust/commit/581a95a804f77259153c030d39f861282b468612"}], "stats": {"total": 38, "additions": 33, "deletions": 5}, "files": [{"sha": "1d79a46700a664e5bdb8059c98c96649a4c1ab54", "filename": "src/Makefile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=3f6e8ffe64b57b0eaba6812208e94500422ca40c", "patch": "@@ -506,6 +506,7 @@ TEST_XFAILS_LLVM := $(TASK_XFAILS) \\\n                       str-append.rs \\\n                       str-concat.rs \\\n                       str-idx.rs \\\n+                      str-lib.rs \\\n                       tag.rs \\\n                       tail-cps.rs \\\n                       tail-direct.rs \\"}, {"sha": "a607c7d5df51bbfbf8cfa583d95fc49fc27fc78a", "filename": "src/lib/_str.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2Flib%2F_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2Flib%2F_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2F_str.rs?ref=3f6e8ffe64b57b0eaba6812208e94500422ca40c", "patch": "@@ -3,7 +3,7 @@ import rustrt.sbuf;\n native \"rust\" mod rustrt {\n   type sbuf;\n   fn str_buf(str s) -> sbuf;\n-  fn str_len(str s) -> uint;\n+  fn str_byte_len(str s) -> uint;\n   fn str_alloc(uint n_bytes) -> str;\n   fn refcount[T](str s) -> uint;\n }\n@@ -13,7 +13,7 @@ fn is_utf8(vec[u8] v) -> bool {\n }\n \n fn is_ascii(str s) -> bool {\n-  let uint i = len(s);\n+  let uint i = byte_len(s);\n   while (i > 0u) {\n     i -= 1u;\n     if ((s.(i) & 0x80u8) != 0u8) {\n@@ -27,8 +27,13 @@ fn alloc(uint n_bytes) -> str {\n   ret rustrt.str_alloc(n_bytes);\n }\n \n-fn len(str s) -> uint {\n-  ret rustrt.str_len(s);\n+// Returns the number of bytes (a.k.a. UTF-8 code units) in s.\n+// Contrast with a function that would return the number of code\n+// points (char's), combining character sequences, words, etc.  See\n+// http://icu-project.org/apiref/icu4c/classBreakIterator.html for a\n+// way to implement those.\n+fn byte_len(str s) -> uint {\n+  ret rustrt.str_byte_len(s);\n }\n \n fn buf(str s) -> sbuf {\n@@ -39,5 +44,5 @@ fn bytes(&str s) -> vec[u8] {\n   fn ith(str s, uint i) -> u8 {\n     ret s.(i);\n   }\n-  ret _vec.init_fn[u8](bind ith(s, _), _str.len(s));\n+  ret _vec.init_fn[u8](bind ith(s, _), _str.byte_len(s));\n }"}, {"sha": "d8d9b8d6eb494ff54ebece6af5b7710ba7b93696", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=3f6e8ffe64b57b0eaba6812208e94500422ca40c", "patch": "@@ -115,6 +115,12 @@ str_buf(rust_task *task, rust_str *s)\n     return (char const *)&s->data[0];\n }\n \n+extern \"C\" CDECL size_t\n+str_byte_len(rust_task *task, rust_str *s)\n+{\n+    return s->fill - 1;  // -1 for the '\\0' terminator.\n+}\n+\n extern \"C\" CDECL void *\n vec_buf(rust_task *task, type_desc *ty, rust_vec *v, size_t offset)\n {"}, {"sha": "585f9b8de5f2ef323152c8d310b08ed460bbdc9e", "filename": "src/test/run-pass/str-lib.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2Ftest%2Frun-pass%2Fstr-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3f6e8ffe64b57b0eaba6812208e94500422ca40c/src%2Ftest%2Frun-pass%2Fstr-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-lib.rs?ref=3f6e8ffe64b57b0eaba6812208e94500422ca40c", "patch": "@@ -0,0 +1,16 @@\n+use std;\n+import std._str;\n+\n+fn test_bytes_len() {\n+  check (_str.byte_len(\"\") == 0u);\n+  check (_str.byte_len(\"hello world\") == 11u);\n+  check (_str.byte_len(\"\\x63\") == 1u);\n+  check (_str.byte_len(\"\\xa2\") == 2u);\n+  check (_str.byte_len(\"\\u03c0\") == 2u);\n+  check (_str.byte_len(\"\\u2620\") == 3u);\n+  check (_str.byte_len(\"\\U0001d11e\") == 4u);\n+}\n+\n+fn main() {\n+  test_bytes_len();\n+}"}]}