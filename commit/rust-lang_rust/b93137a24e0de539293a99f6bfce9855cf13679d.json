{"sha": "b93137a24e0de539293a99f6bfce9855cf13679d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MzEzN2EyNGUwZGU1MzkyOTNhOTlmNmJmY2U5ODU1Y2YxMzY3OWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-03T17:26:54Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-04-03T17:26:54Z"}, "message": "explain that even addr_of cannot deref a NULL ptr", "tree": {"sha": "06d343beb7666edb6b5f9caa8d711a32ff23612d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06d343beb7666edb6b5f9caa8d711a32ff23612d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b93137a24e0de539293a99f6bfce9855cf13679d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b93137a24e0de539293a99f6bfce9855cf13679d", "html_url": "https://github.com/rust-lang/rust/commit/b93137a24e0de539293a99f6bfce9855cf13679d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b93137a24e0de539293a99f6bfce9855cf13679d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4a6bdd33771ef4cf87fd1ffc6895ec7060ff898", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4a6bdd33771ef4cf87fd1ffc6895ec7060ff898", "html_url": "https://github.com/rust-lang/rust/commit/a4a6bdd33771ef4cf87fd1ffc6895ec7060ff898"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "ba14b1abdb2e4a945a2f880982c313e11f74cd74", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b93137a24e0de539293a99f6bfce9855cf13679d/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93137a24e0de539293a99f6bfce9855cf13679d/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=b93137a24e0de539293a99f6bfce9855cf13679d", "patch": "@@ -1524,6 +1524,10 @@ fnptr_impls_args! { A, B, C, D, E, F, G, H, I, J, K, L }\n /// as all other references. This macro can create a raw pointer *without* creating\n /// a reference first.\n ///\n+/// Note, however, that the `expr` in `addr_of!(expr)` is still subject to all\n+/// the usual rules. In particular, `addr_of!(*ptr::null())` is Undefined\n+/// Behavior because it dereferences a NULL pointer.\n+///\n /// # Example\n ///\n /// ```\n@@ -1562,6 +1566,10 @@ pub macro addr_of($place:expr) {\n /// as all other references. This macro can create a raw pointer *without* creating\n /// a reference first.\n ///\n+/// Note, however, that the `expr` in `addr_of_mut!(expr)` is still subject to all\n+/// the usual rules. In particular, `addr_of_mut!(*ptr::null_mut())` is Undefined\n+/// Behavior because it dereferences a NULL pointer.\n+///\n /// # Examples\n ///\n /// **Creating a pointer to unaligned data:**"}]}