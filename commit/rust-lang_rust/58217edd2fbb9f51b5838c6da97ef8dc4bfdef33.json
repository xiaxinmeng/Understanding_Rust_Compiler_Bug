{"sha": "58217edd2fbb9f51b5838c6da97ef8dc4bfdef33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MjE3ZWRkMmZiYjlmNTFiNTgzOGM2ZGE5N2VmOGRjNGJmZGVmMzM=", "commit": {"author": {"name": "Austin Bonander", "email": "austin.bonander@gmail.com", "date": "2018-04-03T00:21:37Z"}, "committer": {"name": "Austin Bonander", "email": "austin.bonander@gmail.com", "date": "2018-04-03T00:21:37Z"}, "message": "run-pass/attr-stmt-expr: expand test cases", "tree": {"sha": "3dfb7d2b26b19a0753bfdb25a17ded6947f195c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dfb7d2b26b19a0753bfdb25a17ded6947f195c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33", "html_url": "https://github.com/rust-lang/rust/commit/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33/comments", "author": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "committer": {"login": "abonander", "id": 3198595, "node_id": "MDQ6VXNlcjMxOTg1OTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3198595?v=4", "gravatar_id": "", "url": "https://api.github.com/users/abonander", "html_url": "https://github.com/abonander", "followers_url": "https://api.github.com/users/abonander/followers", "following_url": "https://api.github.com/users/abonander/following{/other_user}", "gists_url": "https://api.github.com/users/abonander/gists{/gist_id}", "starred_url": "https://api.github.com/users/abonander/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/abonander/subscriptions", "organizations_url": "https://api.github.com/users/abonander/orgs", "repos_url": "https://api.github.com/users/abonander/repos", "events_url": "https://api.github.com/users/abonander/events{/privacy}", "received_events_url": "https://api.github.com/users/abonander/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c0124dd357650acb9b7115a408712ea281d8d22", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c0124dd357650acb9b7115a408712ea281d8d22", "html_url": "https://github.com/rust-lang/rust/commit/7c0124dd357650acb9b7115a408712ea281d8d22"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "98316c62ef135a0bf5dc4c8f4b429b5c230f0bc3", "filename": "src/test/run-pass-fulldeps/proc-macro/attr-stmt-expr.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fattr-stmt-expr.rs?ref=58217edd2fbb9f51b5838c6da97ef8dc4bfdef33", "patch": "@@ -14,7 +14,8 @@\n #![feature(proc_macro, stmt_expr_attributes)]\n \n extern crate attr_stmt_expr;\n-use attr_stmt_expr::{expect_let, expect_print_stmt, expect_expr, expect_print_expr};\n+use attr_stmt_expr::{expect_let, expect_print_stmt, expect_expr, expect_print_expr,\n+                     no_output, noop};\n \n fn print_str(string: &'static str) {\n     // macros are handled a bit differently\n@@ -29,6 +30,17 @@ fn main() {\n     #[expect_print_stmt]\n     println!(\"{}\", string);\n \n+    let _: () = {\n+        #[no_output]\n+        \"Hello, world!\"\n+    };\n+\n+    let _: &'static str = #[noop] \"Hello, world!\";\n+\n+    let _: &'static str = {\n+        #[noop] \"Hello, world!\"\n+    };\n+\n     #[expect_expr]\n     print_str(\"string\")\n }"}, {"sha": "972368b7b532a59f825f9536334388ad535729bb", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/attr-stmt-expr.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58217edd2fbb9f51b5838c6da97ef8dc4bfdef33/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fattr-stmt-expr.rs?ref=58217edd2fbb9f51b5838c6da97ef8dc4bfdef33", "patch": "@@ -44,3 +44,18 @@ pub fn expect_print_expr(attr: TokenStream, item: TokenStream) -> TokenStream {\n     assert_eq!(item.to_string(), \"println!(\\\"{}\\\" , string)\");\n     item\n }\n+\n+#[proc_macro_attribute]\n+pub fn no_output(attr: TokenStream, item: TokenStream) -> TokenStream {\n+    assert!(attr.to_string().is_empty());\n+    assert!(!item.to_string().is_empty());\n+    \"\".parse().unwrap()\n+\n+}\n+\n+#[proc_macro_attribute]\n+pub fn noop(attr: TokenStream, item: TokenStream) -> TokenStream {\n+    assert!(attr.to_string().is_empty());\n+    assert!(!item.to_string().is_empty());\n+    item\n+}"}]}