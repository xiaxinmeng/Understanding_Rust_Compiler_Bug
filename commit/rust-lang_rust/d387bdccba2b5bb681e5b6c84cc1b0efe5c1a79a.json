{"sha": "d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzODdiZGNjYmEyYjViYjY4MWU1YjZjODRjYzFiMGVmZTVjMWE3OWE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T08:21:32Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-13T08:21:32Z"}, "message": "drop obsolete fixme", "tree": {"sha": "b9bff845c953d78b3130b13f1c78df948a84198d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b9bff845c953d78b3130b13f1c78df948a84198d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a", "html_url": "https://github.com/rust-lang/rust/commit/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf", "html_url": "https://github.com/rust-lang/rust/commit/4f8dc1b9f0fd544b0565dc95bb3f14478aa467bf"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "6a6de577231b480283e8ffeea4d26a2ab879de71", "filename": "crates/ra_hir/src/expr/scope.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Fscope.rs?ref=d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a", "patch": "@@ -37,7 +37,6 @@ pub(crate) struct ScopeData {\n }\n \n impl ExprScopes {\n-    // FIXME: This should take something more general than Function\n     pub(crate) fn expr_scopes_query(db: &impl HirDatabase, def: DefWithBody) -> Arc<ExprScopes> {\n         let body = db.body_hir(def);\n         let res = ExprScopes::new(body);"}, {"sha": "a50287339f7f400402deaa014a70bd47bf9a4b80", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=d387bdccba2b5bb681e5b6c84cc1b0efe5c1a79a", "patch": "@@ -250,10 +250,6 @@ impl SourceAnalyzer {\n         self.resolver.resolve_path(db, path)\n     }\n \n-    pub fn all_names(&self, db: &impl HirDatabase) -> FxHashMap<Name, PerNs<crate::Resolution>> {\n-        self.resolver.all_names(db)\n-    }\n-\n     pub fn resolve_path(&self, db: &impl HirDatabase, path: &ast::Path) -> Option<PathResolution> {\n         if let Some(path_expr) = path.syntax().parent().and_then(ast::PathExpr::cast) {\n             let expr_id = self.body_source_map.as_ref()?.node_expr(path_expr.into())?;\n@@ -301,6 +297,10 @@ impl SourceAnalyzer {\n         })\n     }\n \n+    pub fn all_names(&self, db: &impl HirDatabase) -> FxHashMap<Name, PerNs<crate::Resolution>> {\n+        self.resolver.all_names(db)\n+    }\n+\n     pub fn find_all_refs(&self, pat: &ast::BindPat) -> Vec<ReferenceDescriptor> {\n         let fn_def = pat.syntax().ancestors().find_map(ast::FnDef::cast).unwrap();\n         let ptr = Either::A(AstPtr::new(pat.into()));"}]}