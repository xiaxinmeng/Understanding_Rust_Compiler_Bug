{"sha": "99603ef0742176b0ae7980146318469cf8d59cb2", "node_id": "C_kwDOAAsO6NoAKDk5NjAzZWYwNzQyMTc2YjBhZTc5ODAxNDYzMTg0NjljZjhkNTljYjI", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-05-22T14:39:32Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-05-22T15:19:44Z"}, "message": "Remove box syntax from rustc_mir_dataflow and rustc_mir_transform", "tree": {"sha": "8e837707f2a3bbdf4d1f6baa44420241e98082c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e837707f2a3bbdf4d1f6baa44420241e98082c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99603ef0742176b0ae7980146318469cf8d59cb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99603ef0742176b0ae7980146318469cf8d59cb2", "html_url": "https://github.com/rust-lang/rust/commit/99603ef0742176b0ae7980146318469cf8d59cb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99603ef0742176b0ae7980146318469cf8d59cb2/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4bb4dc4672b4d80509db4c0572ae8ceeaf7d4a1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bb4dc4672b4d80509db4c0572ae8ceeaf7d4a1c", "html_url": "https://github.com/rust-lang/rust/commit/4bb4dc4672b4d80509db4c0572ae8ceeaf7d4a1c"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "e4c130f0807dd0b8a5c20f10bd1f95b1fc0b9615", "filename": "compiler/rustc_mir_dataflow/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Flib.rs?ref=99603ef0742176b0ae7980146318469cf8d59cb2", "patch": "@@ -1,6 +1,5 @@\n #![feature(associated_type_defaults)]\n #![feature(box_patterns)]\n-#![feature(box_syntax)]\n #![feature(exact_size_is_empty)]\n #![feature(let_else)]\n #![feature(min_specialization)]"}, {"sha": "268ce1b2e8cfa64568e4c6982a94c56e9ef371b9", "filename": "compiler/rustc_mir_transform/src/instcombine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_transform%2Fsrc%2Finstcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_transform%2Fsrc%2Finstcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Finstcombine.rs?ref=99603ef0742176b0ae7980146318469cf8d59cb2", "patch": "@@ -192,12 +192,12 @@ impl<'tcx> InstCombineContext<'tcx, '_> {\n \n         statements.push(Statement {\n             source_info: terminator.source_info,\n-            kind: StatementKind::Assign(box (\n+            kind: StatementKind::Assign(Box::new((\n                 destination_place,\n                 Rvalue::Use(Operand::Copy(\n                     arg_place.project_deeper(&[ProjectionElem::Deref], self.tcx),\n                 )),\n-            )),\n+            ))),\n         });\n         terminator.kind = TerminatorKind::Goto { target: destination_block };\n     }"}, {"sha": "571f541072a38ac01ef634fd8f2ec956adfe05d5", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=99603ef0742176b0ae7980146318469cf8d59cb2", "patch": "@@ -1,6 +1,5 @@\n #![allow(rustc::potential_query_instability)]\n #![feature(box_patterns)]\n-#![feature(box_syntax)]\n #![feature(let_chains)]\n #![feature(let_else)]\n #![feature(map_try_insert)]"}, {"sha": "0f45711baa3ac8776e1492e452ab43b52a4a8891", "filename": "compiler/rustc_mir_transform/src/normalize_array_len.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99603ef0742176b0ae7980146318469cf8d59cb2/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fnormalize_array_len.rs?ref=99603ef0742176b0ae7980146318469cf8d59cb2", "patch": "@@ -125,7 +125,7 @@ impl<'tcx> Patcher<'_, 'tcx> {\n                             let assign_to = Place::from(local);\n                             let rvalue = Rvalue::Use(operand);\n                             make_copy_statement.kind =\n-                                StatementKind::Assign(box (assign_to, rvalue));\n+                                StatementKind::Assign(Box::new((assign_to, rvalue)));\n                             statements.push(make_copy_statement);\n \n                             // to reorder we have to copy and make NOP\n@@ -165,7 +165,8 @@ impl<'tcx> Patcher<'_, 'tcx> {\n                     if add_deref {\n                         place = self.tcx.mk_place_deref(place);\n                     }\n-                    len_statement.kind = StatementKind::Assign(box (*into, Rvalue::Len(place)));\n+                    len_statement.kind =\n+                        StatementKind::Assign(Box::new((*into, Rvalue::Len(place))));\n                     statements.push(len_statement);\n \n                     // make temporary dead"}]}