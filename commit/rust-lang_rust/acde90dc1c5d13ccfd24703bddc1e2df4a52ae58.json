{"sha": "acde90dc1c5d13ccfd24703bddc1e2df4a52ae58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjZGU5MGRjMWM1ZDEzY2NmZDI0NzAzYmRkYzFlMmRmNGE1MmFlNTg=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-24T16:47:00Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-01-24T18:36:04Z"}, "message": "remove old LinearMap constructor", "tree": {"sha": "f87866111f70aae319f4ec9124aeb9b352ee4a3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f87866111f70aae319f4ec9124aeb9b352ee4a3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58", "html_url": "https://github.com/rust-lang/rust/commit/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8f4da78e78238d7a24dc452302a4c1f113f0e2a", "html_url": "https://github.com/rust-lang/rust/commit/e8f4da78e78238d7a24dc452302a4c1f113f0e2a"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "2d3eb4de4d4c74a40b0413d98db43fc73511f5c8", "filename": "src/libcore/hashmap.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58/src%2Flibcore%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58/src%2Flibcore%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhashmap.rs?ref=acde90dc1c5d13ccfd24703bddc1e2df4a52ae58", "patch": "@@ -60,10 +60,6 @@ pub mod linear {\n         ((capacity as float) * 3. / 4.) as uint\n     }\n \n-    pub fn LinearMap<K:Eq Hash,V>() -> LinearMap<K,V> {\n-        linear_map_with_capacity(INITIAL_CAPACITY)\n-    }\n-\n     pub fn linear_map_with_capacity<K:Eq Hash,V>(\n         initial_capacity: uint) -> LinearMap<K,V> {\n         let r = rand::Rng();\n@@ -351,7 +347,7 @@ pub mod linear {\n         }\n     }\n \n-    impl<K:Hash IterBytes Eq,V> LinearMap<K,V> {\n+    pub impl<K:Hash IterBytes Eq,V> LinearMap<K,V> {\n         static fn new() -> LinearMap<K, V> {\n             linear_map_with_capacity(INITIAL_CAPACITY)\n         }\n@@ -495,7 +491,7 @@ pub mod linear {\n \n     pub impl <T: Hash IterBytes Eq> LinearSet<T> {\n         /// Create an empty LinearSet\n-        static fn new() -> LinearSet<T> { LinearSet{map: LinearMap()} }\n+        static fn new() -> LinearSet<T> { LinearSet{map: LinearMap::new()} }\n     }\n }\n "}, {"sha": "fbd695aee762c0b6ba085ef62efaf281fe7f7b39", "filename": "src/libstd/workcache.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58/src%2Flibstd%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/acde90dc1c5d13ccfd24703bddc1e2df4a52ae58/src%2Flibstd%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fworkcache.rs?ref=acde90dc1c5d13ccfd24703bddc1e2df4a52ae58", "patch": "@@ -259,7 +259,7 @@ impl Context {\n     static fn new(db: @Mut<Database>,\n                   lg: @Mut<Logger>,\n                   cfg: @json::Object) -> Context {\n-        Context {db: db, logger: lg, cfg: cfg, freshness: LinearMap()}\n+        Context{db: db, logger: lg, cfg: cfg, freshness: LinearMap::new()}\n     }\n \n     fn prep<T:Owned\n@@ -270,7 +270,7 @@ impl Context {\n                   blk: fn(@Mut<Prep>)->Work<T>) -> Work<T> {\n         let p = @Mut(Prep {ctxt: self,\n                            fn_name: fn_name.to_owned(),\n-                           declared_inputs: LinearMap()});\n+                           declared_inputs: LinearMap::new()});\n         blk(p)\n     }\n }"}]}