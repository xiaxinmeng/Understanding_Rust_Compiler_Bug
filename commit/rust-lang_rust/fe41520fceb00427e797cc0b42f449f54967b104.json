{"sha": "fe41520fceb00427e797cc0b42f449f54967b104", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNDE1MjBmY2ViMDA0MjdlNzk3Y2MwYjQyZjQ0OWY1NDk2N2IxMDQ=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2016-09-09T21:53:15Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2016-09-10T01:50:05Z"}, "message": "Add ExpnId to expanded procedural macro code", "tree": {"sha": "f7afd5144f5548d05fc3b4dac931f95255201bb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7afd5144f5548d05fc3b4dac931f95255201bb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe41520fceb00427e797cc0b42f449f54967b104", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe41520fceb00427e797cc0b42f449f54967b104", "html_url": "https://github.com/rust-lang/rust/commit/fe41520fceb00427e797cc0b42f449f54967b104", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe41520fceb00427e797cc0b42f449f54967b104/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "707a40f2065cb46d12c4f4991e6408585b315c92", "url": "https://api.github.com/repos/rust-lang/rust/commits/707a40f2065cb46d12c4f4991e6408585b315c92", "html_url": "https://github.com/rust-lang/rust/commit/707a40f2065cb46d12c4f4991e6408585b315c92"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "465fc0016e5e8ef6a526748040433e97cfd8bb5f", "filename": "src/libsyntax_ext/deriving/custom.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fe41520fceb00427e797cc0b42f449f54967b104/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe41520fceb00427e797cc0b42f449f54967b104/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fderiving%2Fcustom.rs?ref=fe41520fceb00427e797cc0b42f449f54967b104", "patch": "@@ -10,12 +10,14 @@\n \n use std::panic;\n \n+use errors::FatalError;\n use rustc_macro::{TokenStream, __internal};\n use syntax::ast::{self, ItemKind};\n-use syntax::codemap::Span;\n+use syntax::codemap::{ExpnInfo, MacroAttribute, NameAndSpan, Span};\n use syntax::ext::base::*;\n use syntax::fold::{self, Folder};\n-use errors::FatalError;\n+use syntax::parse::token::intern;\n+use syntax::print::pprust;\n \n pub struct CustomDerive {\n     inner: fn(TokenStream) -> TokenStream,\n@@ -31,7 +33,7 @@ impl MultiItemModifier for CustomDerive {\n     fn expand(&self,\n               ecx: &mut ExtCtxt,\n               span: Span,\n-              _meta_item: &ast::MetaItem,\n+              meta_item: &ast::MetaItem,\n               item: Annotatable)\n               -> Vec<Annotatable> {\n         let item = match item {\n@@ -53,7 +55,17 @@ impl MultiItemModifier for CustomDerive {\n             }\n         }\n \n-        let input_span = item.span;\n+        let input_span = Span {\n+            expn_id: ecx.codemap().record_expansion(ExpnInfo {\n+                call_site: span,\n+                callee: NameAndSpan {\n+                    format: MacroAttribute(intern(&pprust::meta_item_to_string(meta_item))),\n+                    span: Some(span),\n+                    allow_internal_unstable: true,\n+                },\n+            }),\n+            ..item.span\n+        };\n         let input = __internal::new_token_stream(item);\n         let res = __internal::set_parse_sess(&ecx.parse_sess, || {\n             let inner = self.inner;"}]}