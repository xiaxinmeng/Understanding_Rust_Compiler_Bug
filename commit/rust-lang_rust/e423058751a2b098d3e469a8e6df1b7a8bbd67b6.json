{"sha": "e423058751a2b098d3e469a8e6df1b7a8bbd67b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0MjMwNTg3NTFhMmIwOThkM2U0NjlhOGU2ZGYxYjdhOGJiZDY3YjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-26T11:57:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-26T11:57:44Z"}, "message": "Auto merge of #82980 - tmiasko:import-cold-multiplier, r=michaelwoerister\n\nImport small cold functions\n\nThe Rust code is often written under an assumption that for generic\nmethods inline attribute is mostly unnecessary, since for optimized\nbuilds using ThinLTO, a method will be code generated in at least one\nCGU and available for import.\n\nFor example, deref implementations for Box, Vec, MutexGuard, and\nMutexGuard are not currently marked as inline, neither is identity\nimplementation of From trait.\n\nIn PGO builds, when functions are determined to be cold, the default\nmultiplier of zero will stop the import, no matter how trivial the\nimplementation.\n\nIncrease slightly the default multiplier from 0 to 0.1.\n\nr? `@ghost`", "tree": {"sha": "a70b6b5716cd7627d14a1cbb6671047d702f1862", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a70b6b5716cd7627d14a1cbb6671047d702f1862"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e423058751a2b098d3e469a8e6df1b7a8bbd67b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e423058751a2b098d3e469a8e6df1b7a8bbd67b6", "html_url": "https://github.com/rust-lang/rust/commit/e423058751a2b098d3e469a8e6df1b7a8bbd67b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e423058751a2b098d3e469a8e6df1b7a8bbd67b6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4137088d9da94f693b287f35e2b17782c0b1a283", "url": "https://api.github.com/repos/rust-lang/rust/commits/4137088d9da94f693b287f35e2b17782c0b1a283", "html_url": "https://github.com/rust-lang/rust/commit/4137088d9da94f693b287f35e2b17782c0b1a283"}, {"sha": "1aee8083bec509ad290650209d0623db574609d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/1aee8083bec509ad290650209d0623db574609d3", "html_url": "https://github.com/rust-lang/rust/commit/1aee8083bec509ad290650209d0623db574609d3"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "e80de2bc90290c23fb2d77ff36879e1596ca83dd", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e423058751a2b098d3e469a8e6df1b7a8bbd67b6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e423058751a2b098d3e469a8e6df1b7a8bbd67b6/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=e423058751a2b098d3e469a8e6df1b7a8bbd67b6", "patch": "@@ -98,6 +98,9 @@ unsafe fn configure_llvm(sess: &Session) {\n         // during inlining. Unfortunately these may block other optimizations.\n         add(\"-preserve-alignment-assumptions-during-inlining=false\", false);\n \n+        // Use non-zero `import-instr-limit` multiplier for cold callsites.\n+        add(\"-import-cold-multiplier=0.1\", false);\n+\n         for arg in sess_args {\n             add(&(*arg), true);\n         }"}]}