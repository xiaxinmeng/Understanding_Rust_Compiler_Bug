{"sha": "5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "node_id": "C_kwDOAAsO6NoAKDVlMTk0MWMwNThmNDQzN2M3YTdiMDNiNzZkOTZkM2Q2ZDVjOGFhM2Q", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby42@gmail.com", "date": "2021-10-05T22:09:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-05T22:09:11Z"}, "message": "Apply suggestions from code review", "tree": {"sha": "d632ca98dc6a9b0212e70f588043d486f398a8f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d632ca98dc6a9b0212e70f588043d486f398a8f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhXM0HCRBK7hj4Ov3rIwAASjsIAHmT8dDYkqlh+d95Gmc5LMIq\nBdvT0vccSI8UERYtSFg8t73SxWeHt298abQx6Onc3h8jo01bu2yOp10K3f5JEqOc\nflOsUEVRCOtA/K9OtAz2z3/chVL0hyv6mK1Hs5zr4btIB9OHEW6hwivuO8t0uz1c\ntwy5XjWHGGKeFvhrRNvhATNpGfWDZcDJL4zQHPaQqJojpmMEiBoVCtTTFlLoc3Tj\npxf6nI8m+AuJCRZ6z7EOY9M86KR/6SdCAEETJ7G0f8KtSJYeAZhhHJPNoCA+GIJt\nagENtVh22jA+R1XSM3O5LSIuF8LguvyrKqMpZqhHxm0SXfbSRPN+3P9bbt45rfk=\n=UOCo\n-----END PGP SIGNATURE-----\n", "payload": "tree d632ca98dc6a9b0212e70f588043d486f398a8f0\nparent af83a9613c00b358b5a969e4bcffd6842f87588d\nauthor Jane Lusby <jlusby42@gmail.com> 1633471751 -0700\ncommitter GitHub <noreply@github.com> 1633471751 -0700\n\nApply suggestions from code review"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "html_url": "https://github.com/rust-lang/rust/commit/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af83a9613c00b358b5a969e4bcffd6842f87588d", "url": "https://api.github.com/repos/rust-lang/rust/commits/af83a9613c00b358b5a969e4bcffd6842f87588d", "html_url": "https://github.com/rust-lang/rust/commit/af83a9613c00b358b5a969e4bcffd6842f87588d"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "0be261cbd0b2d1f6d586fec97afeb78450c986e2", "filename": "library/std/src/process.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "patch": "@@ -115,7 +115,7 @@ use crate::path::Path;\n use crate::str;\n use crate::sys::pipe::{read2, AnonPipe};\n use crate::sys::process as imp;\n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n pub use crate::sys_common::process::CommandEnvs;\n use crate::sys_common::{AsInner, AsInnerMut, FromInner, IntoInner};\n \n@@ -948,7 +948,7 @@ impl Command {\n     /// let cmd = Command::new(\"echo\");\n     /// assert_eq!(cmd.get_program(), \"echo\");\n     /// ```\n-    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_program(&self) -> &OsStr {\n         self.inner.get_program()\n     }\n@@ -970,7 +970,7 @@ impl Command {\n     /// let args: Vec<&OsStr> = cmd.get_args().collect();\n     /// assert_eq!(args, &[\"first\", \"second\"]);\n     /// ```\n-    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_args(&self) -> CommandArgs<'_> {\n         CommandArgs { inner: self.inner.get_args() }\n     }\n@@ -1001,7 +1001,7 @@ impl Command {\n     ///     (OsStr::new(\"TZ\"), None)\n     /// ]);\n     /// ```\n-    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_envs(&self) -> CommandEnvs<'_> {\n         self.inner.get_envs()\n     }\n@@ -1021,7 +1021,7 @@ impl Command {\n     /// cmd.current_dir(\"/bin\");\n     /// assert_eq!(cmd.get_current_dir(), Some(Path::new(\"/bin\")));\n     /// ```\n-    #[stable(feature = \"command_access\", since = \"1.56.0\")]\n+    #[stable(feature = \"command_access\", since = \"1.57.0\")]\n     pub fn get_current_dir(&self) -> Option<&Path> {\n         self.inner.get_current_dir()\n     }\n@@ -1053,13 +1053,13 @@ impl AsInnerMut<imp::Command> for Command {\n ///\n /// This struct is created by [`Command::get_args`]. See its documentation for\n /// more.\n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n #[derive(Debug)]\n pub struct CommandArgs<'a> {\n     inner: imp::CommandArgs<'a>,\n }\n \n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> Iterator for CommandArgs<'a> {\n     type Item = &'a OsStr;\n     fn next(&mut self) -> Option<&'a OsStr> {\n@@ -1070,7 +1070,7 @@ impl<'a> Iterator for CommandArgs<'a> {\n     }\n }\n \n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> ExactSizeIterator for CommandArgs<'a> {\n     fn len(&self) -> usize {\n         self.inner.len()"}, {"sha": "3d71219756a207bfaba82d9a6a980ef102e6e338", "filename": "library/std/src/sys_common/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fprocess.rs?ref=5e1941c058f4437c7a7b03b76d96d3d6d5c8aa3d", "patch": "@@ -106,13 +106,13 @@ impl CommandEnv {\n /// This struct is created by\n /// [`Command::get_envs`][crate::process::Command::get_envs]. See its\n /// documentation for more.\n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n #[derive(Debug)]\n pub struct CommandEnvs<'a> {\n     iter: crate::collections::btree_map::Iter<'a, EnvKey, Option<OsString>>,\n }\n \n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> Iterator for CommandEnvs<'a> {\n     type Item = (&'a OsStr, Option<&'a OsStr>);\n     fn next(&mut self) -> Option<Self::Item> {\n@@ -123,7 +123,7 @@ impl<'a> Iterator for CommandEnvs<'a> {\n     }\n }\n \n-#[stable(feature = \"command_access\", since = \"1.56.0\")]\n+#[stable(feature = \"command_access\", since = \"1.57.0\")]\n impl<'a> ExactSizeIterator for CommandEnvs<'a> {\n     fn len(&self) -> usize {\n         self.iter.len()"}]}