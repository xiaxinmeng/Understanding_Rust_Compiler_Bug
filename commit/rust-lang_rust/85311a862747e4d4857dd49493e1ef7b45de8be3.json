{"sha": "85311a862747e4d4857dd49493e1ef7b45de8be3", "node_id": "C_kwDOAAsO6NoAKDg1MzExYTg2Mjc0N2U0ZDQ4NTdkZDQ5NDkzZTFlZjdiNDVkZThiZTM", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-18T19:30:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-18T19:30:52Z"}, "message": "Merge #11761\n\n11761: internal: Rename call info to \"signature help\" r=jonas-schievink a=jonas-schievink\n\nIt is no longer limited to just calls\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>", "tree": {"sha": "1a9d4c2f6e0456c7ee352b6bf281e04e11d822c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a9d4c2f6e0456c7ee352b6bf281e04e11d822c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85311a862747e4d4857dd49493e1ef7b45de8be3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiNN3sCRBK7hj4Ov3rIwAANkAIAH0JVCBjawGsOYqHSUZcokpt\nW6jEkrNSOlaOZxAUPeQ9Zt4CUycZrJ/+ljo58uyBcp3sbnPwM/0UN/cVBBVHje3F\nwsZNIoh/1AZokhN0l2T2GPHQSKCx3afWfWEqhYPCHythYqbeODbbT6PMUz3BNcqR\n3wjADMXe6iHRpNRvBsxPMpzrtPCkSIgAirq6vbffqFl/g4FS8O7n+49DJQv2SEgy\nort9v34MWOEdL2Kp6MVDKaxq5z3LWUKx/tNLKx0c3xwMHGv7HR8XSRYYM28eBjyA\nooBMsmqE9SvYj2f+7jG25qXwoHdfp/xL2me0g/88EUE1l3xGmZUJ1YEeseYGfNI=\n=Eu7k\n-----END PGP SIGNATURE-----\n", "payload": "tree 1a9d4c2f6e0456c7ee352b6bf281e04e11d822c8\nparent 8c16b07c0733ce305d3bf92ef0aaf45cfd9977e9\nparent 55d2a251237ae6382670021472237c9c7ae92773\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1647631852 +0000\ncommitter GitHub <noreply@github.com> 1647631852 +0000\n\nMerge #11761\n\n11761: internal: Rename call info to \"signature help\" r=jonas-schievink a=jonas-schievink\n\nIt is no longer limited to just calls\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonas.schievink@ferrous-systems.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85311a862747e4d4857dd49493e1ef7b45de8be3", "html_url": "https://github.com/rust-lang/rust/commit/85311a862747e4d4857dd49493e1ef7b45de8be3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85311a862747e4d4857dd49493e1ef7b45de8be3/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c16b07c0733ce305d3bf92ef0aaf45cfd9977e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c16b07c0733ce305d3bf92ef0aaf45cfd9977e9", "html_url": "https://github.com/rust-lang/rust/commit/8c16b07c0733ce305d3bf92ef0aaf45cfd9977e9"}, {"sha": "55d2a251237ae6382670021472237c9c7ae92773", "url": "https://api.github.com/repos/rust-lang/rust/commits/55d2a251237ae6382670021472237c9c7ae92773", "html_url": "https://github.com/rust-lang/rust/commit/55d2a251237ae6382670021472237c9c7ae92773"}], "stats": {"total": 56, "additions": 29, "deletions": 27}, "files": [{"sha": "3e411e236b761aae699f91d4a072c456268963d1", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=85311a862747e4d4857dd49493e1ef7b45de8be3", "patch": "@@ -24,7 +24,7 @@ mod navigation_target;\n \n mod annotations;\n mod call_hierarchy;\n-mod call_info;\n+mod signature_help;\n mod doc_links;\n mod highlight_related;\n mod expand_macro;\n@@ -75,7 +75,6 @@ use crate::navigation_target::{ToNav, TryToNav};\n pub use crate::{\n     annotations::{Annotation, AnnotationConfig, AnnotationKind},\n     call_hierarchy::CallItem,\n-    call_info::CallInfo,\n     expand_macro::ExpandedMacro,\n     file_structure::{StructureNode, StructureNodeKind},\n     folding_ranges::{Fold, FoldKind},\n@@ -91,6 +90,7 @@ pub use crate::{\n     references::ReferenceSearchResult,\n     rename::RenameError,\n     runnables::{Runnable, RunnableKind, TestId},\n+    signature_help::SignatureHelp,\n     static_index::{StaticIndex, StaticIndexedFile, TokenId, TokenStaticData},\n     syntax_highlighting::{\n         tags::{Highlight, HlMod, HlMods, HlOperator, HlPunct, HlTag},\n@@ -450,9 +450,9 @@ impl Analysis {\n         self.with_db(|db| doc_links::external_docs(db, &position))\n     }\n \n-    /// Computes parameter information for the given call expression.\n-    pub fn call_info(&self, position: FilePosition) -> Cancellable<Option<CallInfo>> {\n-        self.with_db(|db| call_info::call_info(db, position))\n+    /// Computes parameter information at the given position.\n+    pub fn signature_help(&self, position: FilePosition) -> Cancellable<Option<SignatureHelp>> {\n+        self.with_db(|db| signature_help::signature_help(db, position))\n     }\n \n     /// Computes call hierarchy candidates for the given file position."}, {"sha": "e13abe2d87615927d13ca8902c3cf5b8ce7b3aa7", "filename": "crates/ide/src/signature_help.rs", "status": "renamed", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Fide%2Fsrc%2Fsignature_help.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Fide%2Fsrc%2Fsignature_help.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsignature_help.rs?ref=85311a862747e4d4857dd49493e1ef7b45de8be3", "patch": "@@ -1,4 +1,5 @@\n-//! This module provides primitives for tracking the information about a call site.\n+//! This module provides primitives for showing type and function parameter information when editing\n+//! a call or use-site.\n \n use either::Either;\n use hir::{HasAttrs, HirDisplay, Semantics};\n@@ -11,17 +12,19 @@ use syntax::{algo, AstNode, Direction, TextRange, TextSize};\n \n use crate::RootDatabase;\n \n-/// Contains information about a call site. Specifically the\n-/// `FunctionSignature`and current parameter.\n+/// Contains information about an item signature as seen from a use site.\n+///\n+/// This includes the \"active parameter\", which is the parameter whose value is currently being\n+/// edited.\n #[derive(Debug)]\n-pub struct CallInfo {\n+pub struct SignatureHelp {\n     pub doc: Option<String>,\n     pub signature: String,\n     pub active_parameter: Option<usize>,\n     parameters: Vec<TextRange>,\n }\n \n-impl CallInfo {\n+impl SignatureHelp {\n     pub fn parameter_labels(&self) -> impl Iterator<Item = &str> + '_ {\n         self.parameters.iter().map(move |&it| &self.signature[it])\n     }\n@@ -49,8 +52,8 @@ impl CallInfo {\n     }\n }\n \n-/// Computes parameter information for the given call expression.\n-pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<CallInfo> {\n+/// Computes parameter information for the given position.\n+pub(crate) fn signature_help(db: &RootDatabase, position: FilePosition) -> Option<SignatureHelp> {\n     let sema = Semantics::new(db);\n     let file = sema.parse(position.file_id);\n     let file = file.syntax();\n@@ -63,23 +66,23 @@ pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<Cal\n     let token = sema.descend_into_macros_single(token);\n \n     if let Some((callable, active_parameter)) = callable_for_token(&sema, token.clone()) {\n-        return Some(call_info_for_callable(db, callable, active_parameter));\n+        return Some(signature_help_for_callable(db, callable, active_parameter));\n     }\n \n     if let Some((generic_def, active_parameter)) = generics_for_token(&sema, token.clone()) {\n-        return call_info_for_generics(db, generic_def, active_parameter);\n+        return signature_help_for_generics(db, generic_def, active_parameter);\n     }\n \n     None\n }\n \n-fn call_info_for_callable(\n+fn signature_help_for_callable(\n     db: &RootDatabase,\n     callable: hir::Callable,\n     active_parameter: Option<usize>,\n-) -> CallInfo {\n+) -> SignatureHelp {\n     let mut res =\n-        CallInfo { doc: None, signature: String::new(), parameters: vec![], active_parameter };\n+        SignatureHelp { doc: None, signature: String::new(), parameters: vec![], active_parameter };\n \n     match callable.kind() {\n         hir::CallableKind::Function(func) => {\n@@ -134,12 +137,12 @@ fn call_info_for_callable(\n     res\n }\n \n-fn call_info_for_generics(\n+fn signature_help_for_generics(\n     db: &RootDatabase,\n     mut generics_def: hir::GenericDef,\n     active_parameter: usize,\n-) -> Option<CallInfo> {\n-    let mut res = CallInfo {\n+) -> Option<SignatureHelp> {\n+    let mut res = SignatureHelp {\n         doc: None,\n         signature: String::new(),\n         parameters: vec![],\n@@ -230,7 +233,7 @@ mod tests {\n             \"#\n         );\n         let (db, position) = position(&fixture);\n-        let call_info = crate::call_info::call_info(&db, position);\n+        let call_info = crate::signature_help::signature_help(&db, position);\n         let actual = match call_info {\n             Some(call_info) => {\n                 let docs = match &call_info.doc {", "previous_filename": "crates/ide/src/call_info.rs"}, {"sha": "8f91f64a69a9d2bcbb3c54438b9916ffc860fa47", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=85311a862747e4d4857dd49493e1ef7b45de8be3", "patch": "@@ -895,13 +895,12 @@ pub(crate) fn handle_signature_help(\n ) -> Result<Option<lsp_types::SignatureHelp>> {\n     let _p = profile::span(\"handle_signature_help\");\n     let position = from_proto::file_position(&snap, params.text_document_position_params)?;\n-    let call_info = match snap.analysis.call_info(position)? {\n+    let help = match snap.analysis.signature_help(position)? {\n         Some(it) => it,\n         None => return Ok(None),\n     };\n     let concise = !snap.config.call_info_full();\n-    let res =\n-        to_proto::signature_help(call_info, concise, snap.config.signature_help_label_offsets());\n+    let res = to_proto::signature_help(help, concise, snap.config.signature_help_label_offsets());\n     Ok(Some(res))\n }\n "}, {"sha": "7ea0eae053c50ab92f7c5bb5b08904c5de438c60", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85311a862747e4d4857dd49493e1ef7b45de8be3/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=85311a862747e4d4857dd49493e1ef7b45de8be3", "patch": "@@ -6,11 +6,11 @@ use std::{\n };\n \n use ide::{\n-    Annotation, AnnotationKind, Assist, AssistKind, CallInfo, Cancellable, CompletionItem,\n+    Annotation, AnnotationKind, Assist, AssistKind, Cancellable, CompletionItem,\n     CompletionItemKind, CompletionRelevance, Documentation, FileId, FileRange, FileSystemEdit,\n     Fold, FoldKind, Highlight, HlMod, HlOperator, HlPunct, HlRange, HlTag, Indel, InlayHint,\n     InlayKind, Markup, NavigationTarget, ReferenceCategory, RenameError, Runnable, Severity,\n-    SourceChange, StructureNodeKind, SymbolKind, TextEdit, TextRange, TextSize,\n+    SignatureHelp, SourceChange, StructureNodeKind, SymbolKind, TextEdit, TextRange, TextSize,\n };\n use itertools::Itertools;\n use serde_json::to_value;\n@@ -336,7 +336,7 @@ fn completion_item(\n }\n \n pub(crate) fn signature_help(\n-    call_info: CallInfo,\n+    call_info: SignatureHelp,\n     concise: bool,\n     label_offsets: bool,\n ) -> lsp_types::SignatureHelp {"}]}