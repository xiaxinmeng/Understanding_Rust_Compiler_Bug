{"sha": "e276b860e25a900037dd964b5c4b42afe1187abc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyNzZiODYwZTI1YTkwMDAzN2RkOTY0YjVjNGI0MmFmZTExODdhYmM=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-07-10T16:38:39Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-07-10T16:38:47Z"}, "message": "redo tests", "tree": {"sha": "8e8d72410282b3d0b61bd383580c261f623306fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e8d72410282b3d0b61bd383580c261f623306fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e276b860e25a900037dd964b5c4b42afe1187abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e276b860e25a900037dd964b5c4b42afe1187abc", "html_url": "https://github.com/rust-lang/rust/commit/e276b860e25a900037dd964b5c4b42afe1187abc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e276b860e25a900037dd964b5c4b42afe1187abc/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b44be27999d26ee5f6712704e5d0535c2ea08e70", "url": "https://api.github.com/repos/rust-lang/rust/commits/b44be27999d26ee5f6712704e5d0535c2ea08e70", "html_url": "https://github.com/rust-lang/rust/commit/b44be27999d26ee5f6712704e5d0535c2ea08e70"}], "stats": {"total": 127, "additions": 96, "deletions": 31}, "files": [{"sha": "d43e136d5748ae06a2f86caad81b4ca614cd042a", "filename": "src/test/ui/const-generics/defaults/cec-build-subst-ice.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b44be27999d26ee5f6712704e5d0535c2ea08e70/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-build-subst-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b44be27999d26ee5f6712704e5d0535c2ea08e70/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-build-subst-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-build-subst-ice.rs?ref=b44be27999d26ee5f6712704e5d0535c2ea08e70", "patch": "@@ -1,10 +0,0 @@\n-#![feature(const_evaluatable_checked, const_generics, const_generics_defaults)]\n-#![allow(incomplete_features)]\n-\n-pub struct Bar<const N: usize, const M: usize = { N + 1 }>;\n-pub fn foo<const N1: usize>() -> Bar<N1> { \n-    loop {} \n-}\n-//~^ error: unconstrained generic constant\n-\n-fn main() {}"}, {"sha": "30a01d48c4c8d5b49db44af610d6e9c09d65beb5", "filename": "src/test/ui/const-generics/defaults/cec-build-subst-ice.stderr", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/b44be27999d26ee5f6712704e5d0535c2ea08e70/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-build-subst-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b44be27999d26ee5f6712704e5d0535c2ea08e70/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-build-subst-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-build-subst-ice.stderr?ref=b44be27999d26ee5f6712704e5d0535c2ea08e70", "patch": "@@ -1,21 +0,0 @@\n-error: unconstrained generic constant\n-  --> $DIR/cec-build-subst-ice.rs:5:34\n-   |\n-LL | pub struct Bar<const N: usize, const M: usize = { N + 1 }>;\n-   |                                                 --------- required by this bound in `Bar`\n-LL | pub fn foo<const N1: usize>() -> Bar<N1> { loop {} }\n-   |                                  ^^^^^^^\n-   |\n-   = help: try adding a `where` bound using this expression: `where [(); { N + 1 }]:`\n-\n-error: unconstrained generic constant\n-  --> $DIR/cec-build-subst-ice.rs:15:8\n-   |\n-LL | type Alias<T, const N: usize, const NP: usize = {N+1usize}> = [T; NP];\n-   |                                                 ---------- required by this bound in `Alias::{constant#0}`\n-LL | fn alias<T, const N: usize>(_: [T; N], _: T)\n-LL |     -> Alias<T, N>\n-   |        ^^^^^^^^^^^\n-   |\n-   = help: try adding a `where` bound using this expression: `where [(); {N+1usize}]:`\n-"}, {"sha": "c2a41cf2ad7ddc2c2599c99ccc6db1e59b50c7e2", "filename": "src/test/ui/const-generics/defaults/cec-concrete-default.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-concrete-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-concrete-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-concrete-default.rs?ref=e276b860e25a900037dd964b5c4b42afe1187abc", "patch": "@@ -0,0 +1,14 @@\n+#![feature(const_generics, const_evaluatable_checked, const_generics_defaults)]\n+#![allow(incomplete_features)]\n+\n+struct Foo<const N: usize, const M: usize = { N + 1 }>;\n+fn no_constraining() -> Foo<10> {\n+    Foo::<10, 11>\n+}\n+\n+pub fn different_than_default() -> Foo<10> {\n+    Foo::<10, 12>\n+    //~^ error: mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "090e507b7f34e41655771cc7fb8b4dc60059dd27", "filename": "src/test/ui/const-generics/defaults/cec-concrete-default.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-concrete-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-concrete-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-concrete-default.stderr?ref=e276b860e25a900037dd964b5c4b42afe1187abc", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/cec-concrete-default.rs:10:5\n+   |\n+LL |     Foo::<10, 12>\n+   |     ^^^^^^^^^^^^^ expected `11_usize`, found `12_usize`\n+   |\n+   = note: expected type `11_usize`\n+              found type `12_usize`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "15822dfac1c5af5b1474a4455806408bfee862a9", "filename": "src/test/ui/const-generics/defaults/cec-generic-default-mismatched-types.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default-mismatched-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default-mismatched-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default-mismatched-types.rs?ref=e276b860e25a900037dd964b5c4b42afe1187abc", "patch": "@@ -0,0 +1,16 @@\n+#![feature(const_generics, const_evaluatable_checked, const_generics_defaults)]\n+#![allow(incomplete_features)]\n+\n+struct Foo<const N: usize, const M: usize = { N + 1 }>;\n+fn should_unify<const N: usize>() -> Foo<N> where [(); { N + 1 }]: {\n+    Foo::<N, { N + 1 }>\n+}\n+pub fn shouldnt_unify<const N: usize>() -> Foo<N>\n+where\n+    [(); { N + 1 }]:,\n+    [(); { N + 2 }]:, {\n+    Foo::<N, { N + 2 }>\n+    //~^ error: mismatched types\n+}\n+\n+fn main() {}"}, {"sha": "f97fc26a0732183c79336fd5e885d1d788ffe6a6", "filename": "src/test/ui/const-generics/defaults/cec-generic-default-mismatched-types.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default-mismatched-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default-mismatched-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default-mismatched-types.stderr?ref=e276b860e25a900037dd964b5c4b42afe1187abc", "patch": "@@ -0,0 +1,12 @@\n+error[E0308]: mismatched types\n+  --> $DIR/cec-generic-default-mismatched-types.rs:12:5\n+   |\n+LL |     Foo::<N, { N + 2 }>\n+   |     ^^^^^^^^^^^^^^^^^^^ expected `{ N + 1 }`, found `{ N + 2 }`\n+   |\n+   = note: expected type `{ N + 1 }`\n+              found type `{ N + 2 }`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "76ff7c7801b0623f4dad588dba1949e6672e8f2e", "filename": "src/test/ui/const-generics/defaults/cec-generic-default.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default.rs?ref=e276b860e25a900037dd964b5c4b42afe1187abc", "patch": "@@ -0,0 +1,24 @@\n+#![feature(const_evaluatable_checked, const_generics, const_generics_defaults)]\n+#![allow(incomplete_features)]\n+\n+pub struct Foo<const N: usize, const M: usize = { N + 1 }>;\n+pub fn needs_evaluatable_bound<const N1: usize>() -> Foo<N1> {\n+    //~^ error: unconstrained generic constant\n+    loop {}\n+}\n+pub fn has_evaluatable_bound<const N1: usize>() -> Foo<N1> where [(); N1 + 1]: {\n+    loop {}\n+}\n+\n+type FooAlias<const N: usize, const NP: usize = { N + 1 }> = [(); NP];\n+fn needs_evaluatable_bound_alias<T, const N: usize>() -> FooAlias<N>\n+{\n+    //~^^ error: unconstrained generic constant\n+    todo!()\n+}\n+fn has_evaluatable_bound_alias<const N: usize>() -> FooAlias<N>\n+where [(); N + 1]: {\n+    todo!()\n+}\n+\n+fn main() {}"}, {"sha": "0234ea8b9a4a9aa44933093da97d6efcf2e5f3fb", "filename": "src/test/ui/const-generics/defaults/cec-generic-default.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e276b860e25a900037dd964b5c4b42afe1187abc/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fcec-generic-default.stderr?ref=e276b860e25a900037dd964b5c4b42afe1187abc", "patch": "@@ -0,0 +1,18 @@\n+error: unconstrained generic constant\n+  --> $DIR/cec-generic-default.rs:5:54\n+   |\n+LL | pub fn needs_evaluatable_bound<const N1: usize>() -> Foo<N1> {\n+   |                                                      ^^^^^^^\n+   |\n+   = help: try adding a `where` bound using this expression: `where [(); { N + 1 }]:`\n+\n+error: unconstrained generic constant\n+  --> $DIR/cec-generic-default.rs:14:58\n+   |\n+LL | fn needs_evaluatable_bound_alias<T, const N: usize>() -> FooAlias<N>\n+   |                                                          ^^^^^^^^^^^\n+   |\n+   = help: try adding a `where` bound using this expression: `where [(); { N + 1 }]:`\n+\n+error: aborting due to 2 previous errors\n+"}]}