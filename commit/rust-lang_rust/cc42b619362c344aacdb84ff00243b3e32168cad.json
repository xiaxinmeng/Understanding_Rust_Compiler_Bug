{"sha": "cc42b619362c344aacdb84ff00243b3e32168cad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjNDJiNjE5MzYyYzM0NGFhY2RiODRmZjAwMjQzYjNlMzIxNjhjYWQ=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-04T05:55:35Z"}, "committer": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-05-08T19:06:22Z"}, "message": "Handle fallout in io::net::addrinfo, io::process, and rt::rtio\n\nAPI Changes:\n\n- get_host_addresses() returns IoResult<Vec<IpAddr>>\n- Process.extra_io is Vec<Option<io::PipeStream>>", "tree": {"sha": "7c0aafbd4c9ebfe956b574ed8b71bf32aa31dcc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c0aafbd4c9ebfe956b574ed8b71bf32aa31dcc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc42b619362c344aacdb84ff00243b3e32168cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc42b619362c344aacdb84ff00243b3e32168cad", "html_url": "https://github.com/rust-lang/rust/commit/cc42b619362c344aacdb84ff00243b3e32168cad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc42b619362c344aacdb84ff00243b3e32168cad/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f340fb9b1292f519d0bf09019cd34e7068cc9618", "url": "https://api.github.com/repos/rust-lang/rust/commits/f340fb9b1292f519d0bf09019cd34e7068cc9618", "html_url": "https://github.com/rust-lang/rust/commit/f340fb9b1292f519d0bf09019cd34e7068cc9618"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "879c66e0769d8eaecf80f54ed982df9d26964760", "filename": "src/libstd/io/net/addrinfo.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cc42b619362c344aacdb84ff00243b3e32168cad/src%2Flibstd%2Fio%2Fnet%2Faddrinfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc42b619362c344aacdb84ff00243b3e32168cad/src%2Flibstd%2Fio%2Fnet%2Faddrinfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Faddrinfo.rs?ref=cc42b619362c344aacdb84ff00243b3e32168cad", "patch": "@@ -24,7 +24,7 @@ use io::IoResult;\n use io::net::ip::{SocketAddr, IpAddr};\n use option::{Option, Some, None};\n use rt::rtio::{IoFactory, LocalIo};\n-use slice::OwnedVector;\n+use vec::Vec;\n \n /// Hints to the types of sockets that are desired when looking up hosts\n pub enum SocketType {\n@@ -73,7 +73,7 @@ pub struct Info {\n \n /// Easy name resolution. Given a hostname, returns the list of IP addresses for\n /// that hostname.\n-pub fn get_host_addresses(host: &str) -> IoResult<~[IpAddr]> {\n+pub fn get_host_addresses(host: &str) -> IoResult<Vec<IpAddr>> {\n     lookup(Some(host), None, None).map(|a| a.move_iter().map(|i| i.address.ip).collect())\n }\n \n@@ -90,7 +90,7 @@ pub fn get_host_addresses(host: &str) -> IoResult<~[IpAddr]> {\n /// FIXME: this is not public because the `Hint` structure is not ready for public\n ///      consumption just yet.\n fn lookup(hostname: Option<&str>, servname: Option<&str>, hint: Option<Hint>)\n-          -> IoResult<~[Info]> {\n+          -> IoResult<Vec<Info>> {\n     LocalIo::maybe_raise(|io| io.get_host_addresses(hostname, servname, hint))\n }\n "}, {"sha": "3babef6126e8fcc84e3546677803c88b8d1b2486", "filename": "src/libstd/io/process.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cc42b619362c344aacdb84ff00243b3e32168cad/src%2Flibstd%2Fio%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc42b619362c344aacdb84ff00243b3e32168cad/src%2Flibstd%2Fio%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fprocess.rs?ref=cc42b619362c344aacdb84ff00243b3e32168cad", "patch": "@@ -69,7 +69,7 @@ pub struct Process {\n \n     /// Extra I/O handles as configured by the original `ProcessConfig` when\n     /// this process was created. This is by default empty.\n-    pub extra_io: ~[Option<io::PipeStream>],\n+    pub extra_io: Vec<Option<io::PipeStream>>,\n }\n \n /// This configuration describes how a new process should be spawned. A blank\n@@ -418,7 +418,7 @@ impl Drop for Process {\n         drop(self.stdin.take());\n         drop(self.stdout.take());\n         drop(self.stderr.take());\n-        drop(mem::replace(&mut self.extra_io, box []));\n+        drop(mem::replace(&mut self.extra_io, Vec::new()));\n \n         self.wait();\n     }"}, {"sha": "eaf194b89cbf72854e54320a776520ae17bc0e73", "filename": "src/libstd/rt/rtio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cc42b619362c344aacdb84ff00243b3e32168cad/src%2Flibstd%2Frt%2Frtio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc42b619362c344aacdb84ff00243b3e32168cad/src%2Flibstd%2Frt%2Frtio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frtio.rs?ref=cc42b619362c344aacdb84ff00243b3e32168cad", "patch": "@@ -161,7 +161,7 @@ pub trait IoFactory {\n     fn unix_connect(&mut self, path: &CString,\n                     timeout: Option<u64>) -> IoResult<Box<RtioPipe:Send>>;\n     fn get_host_addresses(&mut self, host: Option<&str>, servname: Option<&str>,\n-                          hint: Option<ai::Hint>) -> IoResult<~[ai::Info]>;\n+                          hint: Option<ai::Hint>) -> IoResult<Vec<ai::Info>>;\n \n     // filesystem operations\n     fn fs_from_raw_fd(&mut self, fd: c_int, close: CloseBehavior)"}]}