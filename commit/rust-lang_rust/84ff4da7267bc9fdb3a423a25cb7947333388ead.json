{"sha": "84ff4da7267bc9fdb3a423a25cb7947333388ead", "node_id": "C_kwDOAAsO6NoAKDg0ZmY0ZGE3MjY3YmM5ZmRiM2E0MjNhMjVjYjc5NDczMzMzODhlYWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-12T13:41:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-12T14:05:47Z"}, "message": "mem::uninitialized: mitigate many incorrect uses of this function", "tree": {"sha": "3a531db39eb7c53a22caa21a291462daf211a7bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a531db39eb7c53a22caa21a291462daf211a7bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84ff4da7267bc9fdb3a423a25cb7947333388ead", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84ff4da7267bc9fdb3a423a25cb7947333388ead", "html_url": "https://github.com/rust-lang/rust/commit/84ff4da7267bc9fdb3a423a25cb7947333388ead", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84ff4da7267bc9fdb3a423a25cb7947333388ead/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f4c3119957aa0a250cab08ab586b7a9a680ef1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f4c3119957aa0a250cab08ab586b7a9a680ef1", "html_url": "https://github.com/rust-lang/rust/commit/b3f4c3119957aa0a250cab08ab586b7a9a680ef1"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "b4c9f443cacad761dfee25e608d4610d6545afed", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/84ff4da7267bc9fdb3a423a25cb7947333388ead/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ff4da7267bc9fdb3a423a25cb7947333388ead/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=84ff4da7267bc9fdb3a423a25cb7947333388ead", "patch": "@@ -163,6 +163,7 @@\n #![feature(allow_internal_unstable)]\n #![feature(associated_type_bounds)]\n #![feature(auto_traits)]\n+#![feature(cfg_sanitize)]\n #![feature(cfg_target_has_atomic)]\n #![feature(cfg_target_has_atomic_equal_alignment)]\n #![feature(const_fn_floating_point_arithmetic)]"}, {"sha": "1e665896a5acef7bc2c1fea789a392dced169b95", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/84ff4da7267bc9fdb3a423a25cb7947333388ead/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ff4da7267bc9fdb3a423a25cb7947333388ead/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=84ff4da7267bc9fdb3a423a25cb7947333388ead", "patch": "@@ -683,7 +683,15 @@ pub unsafe fn uninitialized<T>() -> T {\n     // SAFETY: the caller must guarantee that an uninitialized value is valid for `T`.\n     unsafe {\n         intrinsics::assert_uninit_valid::<T>();\n-        MaybeUninit::uninit().assume_init()\n+        let mut val = MaybeUninit::<T>::uninit();\n+\n+        // Fill memory with 0x01, as an imperfect mitigation for old code that uses this function on\n+        // bool, nonnull, and noundef types. But don't do this if we actively want to detect UB.\n+        if !cfg!(any(miri, sanitize = \"memory\")) {\n+            val.as_mut_ptr().write_bytes(0x01, 1);\n+        }\n+\n+        val.assume_init()\n     }\n }\n "}]}