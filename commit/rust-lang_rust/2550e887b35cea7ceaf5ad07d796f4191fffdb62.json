{"sha": "2550e887b35cea7ceaf5ad07d796f4191fffdb62", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1NTBlODg3YjM1Y2VhN2NlYWY1YWQwN2Q3OTZmNDE5MWZmZmRiNjI=", "commit": {"author": {"name": "o752d", "email": "16816606+o752d@users.noreply.github.com", "date": "2020-11-07T23:25:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-07T23:25:10Z"}, "message": "typo and formatting\n\nfixed a typo and modified some line formatting justification while I'm here :)", "tree": {"sha": "33d52df7b5b277b77ef3347eda6d7f961bc72cc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33d52df7b5b277b77ef3347eda6d7f961bc72cc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2550e887b35cea7ceaf5ad07d796f4191fffdb62", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfpyzWCRBK7hj4Ov3rIwAAdHIIABGSLCHTrmFdpFzDqxqrXb6d\nsvZymZQPD0HqeCFQh+yQ7tWmfQTF50I/xN6pY3j03U+Y4cgy5PpetzdzkHAk3t/G\nkxl08GvvAYbpl+qAmkRIiurnCc1T+fXk2lCRhrJ8m0QtpLngF7sX/i9F1jEXtisV\nNrryJgFX0nqqy9LWRIJjHgQpjbwRPOT53ZpRljDed8MhbqAMVn8bhZksZID1aaTn\nIsOnP8pLh8T614JD7Gf5MrY609o9mN1CS0vw75ZMyS+7bhQAC437L6gpEanXQkob\nWkKiomd8W3oISTOufIaX8LxuvpdO/uIljeZdZtBp/nmeAR2iIY+vkMcFpImtwQc=\n=qn+J\n-----END PGP SIGNATURE-----\n", "payload": "tree 33d52df7b5b277b77ef3347eda6d7f961bc72cc0\nparent b2d115f6db5172c961dfeb50de15f35784dbc7c9\nauthor o752d <16816606+o752d@users.noreply.github.com> 1604791510 +0000\ncommitter GitHub <noreply@github.com> 1604791510 +0000\n\ntypo and formatting\n\nfixed a typo and modified some line formatting justification while I'm here :)"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2550e887b35cea7ceaf5ad07d796f4191fffdb62", "html_url": "https://github.com/rust-lang/rust/commit/2550e887b35cea7ceaf5ad07d796f4191fffdb62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2550e887b35cea7ceaf5ad07d796f4191fffdb62/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2d115f6db5172c961dfeb50de15f35784dbc7c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2d115f6db5172c961dfeb50de15f35784dbc7c9", "html_url": "https://github.com/rust-lang/rust/commit/b2d115f6db5172c961dfeb50de15f35784dbc7c9"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "e413564fb3fd544fa1ed16c09eff9eb5dce9e61a", "filename": "compiler/rustc_expand/src/placeholders.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2550e887b35cea7ceaf5ad07d796f4191fffdb62/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2550e887b35cea7ceaf5ad07d796f4191fffdb62/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs?ref=2550e887b35cea7ceaf5ad07d796f4191fffdb62", "patch": "@@ -313,25 +313,24 @@ impl<'a, 'b> MutVisitor for PlaceholderExpander<'a, 'b> {\n             // Implement the proposal described in\n             // https://github.com/rust-lang/rust/issues/61733#issuecomment-509626449\n             //\n-            // The macro invocation expands to the list of statements.\n-            // If the list of statements is empty, then 'parse'\n-            // the trailing semicolon on the original invocation\n-            // as an empty statement. That is:\n+            // The macro invocation expands to the list of statements. If the\n+            // list of statements is empty, then 'parse' the trailing semicolon\n+            // on the original invocation as an empty statement. That is:\n             //\n             // `empty();` is parsed as a single `StmtKind::Empty`\n             //\n-            // If the list of statements is non-empty, see if the\n-            // final statement alreayd has a trailing semicolon.\n+            // If the list of statements is non-empty, see if the final\n+            // statement already has a trailing semicolon.\n             //\n-            // If it doesn't have a semicolon, then 'parse' the trailing semicolon\n-            // from the invocation as part of the final statement,\n+            // If it doesn't have a semicolon, then 'parse' the trailing\n+            // semicolon from the invocation as part of the final statement,\n             // using `stmt.add_trailing_semicolon()`\n             //\n             // If it does have a semicolon, then 'parse' the trailing semicolon\n             // from the invocation as a new StmtKind::Empty\n \n-            // FIXME: We will need to preserve the original\n-            // semicolon token and span as part of #15701\n+            // FIXME: We will need to preserve the original semicolon token and\n+            // span as part of #15701\n             let empty_stmt = ast::Stmt {\n                 id: ast::DUMMY_NODE_ID,\n                 kind: ast::StmtKind::Empty,"}]}