{"sha": "21dfd24c4b1f8c24abb78d573c42344b8d2ec809", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxZGZkMjRjNGIxZjhjMjRhYmI3OGQ1NzNjNDIzNDRiOGQyZWM4MDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-21T18:34:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-21T18:34:08Z"}, "message": "Auto merge of #26856 - steveklabnik:gh26475, r=alexcrichton\n\nFixes #26475 \r\n\r\nI'm not sure this is enough, really, but I'm not totally clear on what specific information would be valuable here. In the original issue, the Java page was pretty decent, but now I can't think of a different way to word it, and copying their prose is of course not acceptable.\r\n\r\nthoughts @alexcrichton @aturon @aidanhs ?", "tree": {"sha": "17162ae11c030caada1cdbafe3fd205d8c9f3abb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17162ae11c030caada1cdbafe3fd205d8c9f3abb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21dfd24c4b1f8c24abb78d573c42344b8d2ec809", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21dfd24c4b1f8c24abb78d573c42344b8d2ec809", "html_url": "https://github.com/rust-lang/rust/commit/21dfd24c4b1f8c24abb78d573c42344b8d2ec809", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21dfd24c4b1f8c24abb78d573c42344b8d2ec809/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dbddfb210d511af4b1b673c11053074505f11d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dbddfb210d511af4b1b673c11053074505f11d2", "html_url": "https://github.com/rust-lang/rust/commit/5dbddfb210d511af4b1b673c11053074505f11d2"}, {"sha": "cbdc52e9867ce550c2f8a22613106f65cf54a7ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbdc52e9867ce550c2f8a22613106f65cf54a7ef", "html_url": "https://github.com/rust-lang/rust/commit/cbdc52e9867ce550c2f8a22613106f65cf54a7ef"}], "stats": {"total": 20, "additions": 18, "deletions": 2}, "files": [{"sha": "3299c848ba72404ae863f0d28ca185e825b09d9b", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 18, "deletions": 2, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/21dfd24c4b1f8c24abb78d573c42344b8d2ec809/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21dfd24c4b1f8c24abb78d573c42344b8d2ec809/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=21dfd24c4b1f8c24abb78d573c42344b8d2ec809", "patch": "@@ -508,9 +508,25 @@ pub fn sleep(dur: Duration) {\n     imp::Thread::sleep(dur)\n }\n \n-/// Blocks unless or until the current thread's token is made available (may wake spuriously).\n+/// Blocks unless or until the current thread's token is made available.\n ///\n-/// See the module doc for more detail.\n+/// Every thread is equipped with some basic low-level blocking support, via\n+/// the `park()` function and the [`unpark()`][unpark] method. These can be\n+/// used as a more CPU-efficient implementation of a spinlock.\n+///\n+/// [unpark]: struct.Thread.html#method.unpark\n+///\n+/// The API is typically used by acquiring a handle to the current thread,\n+/// placing that handle in a shared data structure so that other threads can\n+/// find it, and then parking (in a loop with a check for the token actually\n+/// being acquired).\n+///\n+/// A call to `park` does not guarantee that the thread will remain parked\n+/// forever, and callers should be prepared for this possibility.\n+///\n+/// See the [module documentation][thread] for more detail.\n+///\n+/// [thread]: index.html\n //\n // The implementation currently uses the trivial strategy of a Mutex+Condvar\n // with wakeup flag, which does not actually allow spurious wakeups. In the"}]}