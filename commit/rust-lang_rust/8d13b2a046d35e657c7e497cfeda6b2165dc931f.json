{"sha": "8d13b2a046d35e657c7e497cfeda6b2165dc931f", "node_id": "C_kwDOAAsO6NoAKDhkMTNiMmEwNDZkMzVlNjU3YzdlNDk3Y2ZlZGE2YjIxNjVkYzkzMWY", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-10-27T19:39:57Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2022-11-02T20:05:09Z"}, "message": "Store `ErrorGuaranteed` in `ErrorReported`", "tree": {"sha": "ff96285c09be87581d6beaf321e8f71798467107", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff96285c09be87581d6beaf321e8f71798467107"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d13b2a046d35e657c7e497cfeda6b2165dc931f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN SSH SIGNATURE-----\nU1NIU0lHAAAAAQAAADMAAAALc3NoLWVkMjU1MTkAAAAgbSfWKRQb2tiqhuHtakDJeupmrF\nChDbM0msU+PXaBOk8AAAADZ2l0AAAAAAAAAAZzaGE1MTIAAABTAAAAC3NzaC1lZDI1NTE5\nAAAAQMkqWoFrNa/1Z1NQmNYgG5k5i7GZFQUgtDk+XhBml+8LL3mlRCd7q9gMYvtYOigpYy\nvD50Ww9/kCRYjst7sUvwA=\n-----END SSH SIGNATURE-----", "payload": "tree ff96285c09be87581d6beaf321e8f71798467107\nparent c0a76127283bc963b085f54a1b275a8e281e81e6\nauthor Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1666899597 +0200\ncommitter Nilstrieb <48135649+Nilstrieb@users.noreply.github.com> 1667419509 +0100\n\nStore `ErrorGuaranteed` in `ErrorReported`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d13b2a046d35e657c7e497cfeda6b2165dc931f", "html_url": "https://github.com/rust-lang/rust/commit/8d13b2a046d35e657c7e497cfeda6b2165dc931f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d13b2a046d35e657c7e497cfeda6b2165dc931f/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a76127283bc963b085f54a1b275a8e281e81e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a76127283bc963b085f54a1b275a8e281e81e6", "html_url": "https://github.com/rust-lang/rust/commit/c0a76127283bc963b085f54a1b275a8e281e81e6"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "aa7a06f66d72208280861100c9b7483ededa4086", "filename": "compiler/rustc_expand/src/mbe/macro_parser.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8d13b2a046d35e657c7e497cfeda6b2165dc931f/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d13b2a046d35e657c7e497cfeda6b2165dc931f/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_parser.rs?ref=8d13b2a046d35e657c7e497cfeda6b2165dc931f", "patch": "@@ -72,6 +72,7 @@\n \n pub(crate) use NamedMatch::*;\n pub(crate) use ParseResult::*;\n+use rustc_errors::ErrorGuaranteed;\n \n use crate::mbe::{KleeneOp, TokenTree};\n \n@@ -270,7 +271,7 @@ pub(crate) enum ParseResult<T> {\n     Failure(Token, &'static str),\n     /// Fatal error (malformed macro?). Abort compilation.\n     Error(rustc_span::Span, String),\n-    ErrorReported,\n+    ErrorReported(ErrorGuaranteed),\n }\n \n /// A `ParseResult` where the `Success` variant contains a mapping of\n@@ -612,14 +613,14 @@ impl TtParser {\n                         // edition-specific matching behavior for non-terminals.\n                         let nt = match parser.to_mut().parse_nonterminal(kind) {\n                             Err(mut err) => {\n-                                err.span_label(\n+                                let guarantee = err.span_label(\n                                     span,\n                                     format!(\n                                         \"while parsing argument for this `{kind}` macro fragment\"\n                                     ),\n                                 )\n                                 .emit();\n-                                return ErrorReported;\n+                                return ErrorReported(guarantee);\n                             }\n                             Ok(nt) => nt,\n                         };"}, {"sha": "3ddea80c84445da647bd596926382c4bc308d598", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8d13b2a046d35e657c7e497cfeda6b2165dc931f/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d13b2a046d35e657c7e497cfeda6b2165dc931f/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=8d13b2a046d35e657c7e497cfeda6b2165dc931f", "patch": "@@ -333,7 +333,7 @@ fn expand_macro<'cx>(\n                 cx.struct_span_err(span, &msg).emit();\n                 return DummyResult::any(span);\n             }\n-            ErrorReported => return DummyResult::any(sp),\n+            ErrorReported(_) => return DummyResult::any(sp),\n         }\n \n         // The matcher was not `Success(..)`ful.\n@@ -470,7 +470,7 @@ pub fn compile_declarative_macro(\n                 .emit();\n             return dummy_syn_ext();\n         }\n-        ErrorReported => {\n+        ErrorReported(_) => {\n             return dummy_syn_ext();\n         }\n     };"}]}