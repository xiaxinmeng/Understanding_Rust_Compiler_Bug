{"sha": "3abdb08351d7c944e1dfab72a06fe5074b2bc227", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhYmRiMDgzNTFkN2M5NDRlMWRmYWI3MmEwNmZlNTA3NGIyYmMyMjc=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-12T10:54:12Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-15T17:33:20Z"}, "message": "Add a test showing how `impl_trait_in_bindings` is a breaking change", "tree": {"sha": "f6fca931a77bb091bc8bf02a1296b5e9c15efd5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6fca931a77bb091bc8bf02a1296b5e9c15efd5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3abdb08351d7c944e1dfab72a06fe5074b2bc227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3abdb08351d7c944e1dfab72a06fe5074b2bc227", "html_url": "https://github.com/rust-lang/rust/commit/3abdb08351d7c944e1dfab72a06fe5074b2bc227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3abdb08351d7c944e1dfab72a06fe5074b2bc227/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f7df1956a8c78652aedee67172d7d52f395d785", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f7df1956a8c78652aedee67172d7d52f395d785", "html_url": "https://github.com/rust-lang/rust/commit/1f7df1956a8c78652aedee67172d7d52f395d785"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "0737c666f854f120869efa0c5aad12f44c154667", "filename": "src/test/ui/mir/issue-75053.full_tait.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.full_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.full_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-75053.full_tait.stderr?ref=3abdb08351d7c944e1dfab72a06fe5074b2bc227", "patch": "@@ -0,0 +1,17 @@\n+warning: the feature `type_alias_impl_trait` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-75053.rs:5:32\n+   |\n+LL | #![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n+   |                                ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n+\n+error: fatal error triggered by #[rustc_error]\n+  --> $DIR/issue-75053.rs:51:1\n+   |\n+LL | fn main() {\n+   | ^^^^^^^^^\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}, {"sha": "1c473d99139b925534fe4dc470124ae69311b82a", "filename": "src/test/ui/mir/issue-75053.in_bindings.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.in_bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.in_bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-75053.in_bindings.stderr?ref=3abdb08351d7c944e1dfab72a06fe5074b2bc227", "patch": "@@ -0,0 +1,24 @@\n+warning: the feature `impl_trait_in_bindings` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-75053.rs:7:34\n+   |\n+LL | #![cfg_attr(in_bindings, feature(impl_trait_in_bindings))]\n+   |                                  ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #63065 <https://github.com/rust-lang/rust/issues/63065> for more information\n+\n+error[E0282]: type annotations needed\n+  --> $DIR/issue-75053.rs:53:38\n+   |\n+LL |     type O;\n+   |     ------- `<Self as MyIndex<T>>::O` defined here\n+...\n+LL |     let _pos: Phantom1<DummyT<()>> = Scope::new().my_index();\n+   |                                      ^^^^^^^^^^-------------\n+   |                                      |\n+   |                                      this method call resolves to `<Self as MyIndex<T>>::O`\n+   |                                      cannot infer type for type parameter `T`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0282`."}, {"sha": "180a4094ff2c2048fd1aff3ab3a3900f7819bad6", "filename": "src/test/ui/mir/issue-75053.min_tait.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.min_tait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.min_tait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-75053.min_tait.stderr?ref=3abdb08351d7c944e1dfab72a06fe5074b2bc227", "patch": "@@ -0,0 +1,8 @@\n+error: fatal error triggered by #[rustc_error]\n+  --> $DIR/issue-75053.rs:51:1\n+   |\n+LL | fn main() {\n+   | ^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "80c0c7961006090e51d49ead72c58c479791d551", "filename": "src/test/ui/mir/issue-75053.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3abdb08351d7c944e1dfab72a06fe5074b2bc227/src%2Ftest%2Fui%2Fmir%2Fissue-75053.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-75053.rs?ref=3abdb08351d7c944e1dfab72a06fe5074b2bc227", "patch": "@@ -1,7 +1,11 @@\n // compile-flags: -Z mir-opt-level=3\n-// build-pass\n \n-#![feature(min_type_alias_impl_trait)]\n+// revisions: min_tait full_tait in_bindings\n+#![feature(min_type_alias_impl_trait, rustc_attrs)]\n+#![cfg_attr(full_tait, feature(type_alias_impl_trait))]\n+//[full_tait]~^ WARN incomplete\n+#![cfg_attr(in_bindings, feature(impl_trait_in_bindings))]\n+//[in_bindings]~^ WARN incomplete\n \n use std::marker::PhantomData;\n \n@@ -43,6 +47,9 @@ impl<T: MyFrom<Phantom2<DummyT<U>>>, U> MyIndex<Phantom1<T>> for Scope<U> {\n     }\n }\n \n+#[rustc_error]\n fn main() {\n+    //[min_tait,full_tait]~^ ERROR rustc_error\n     let _pos: Phantom1<DummyT<()>> = Scope::new().my_index();\n+    //[in_bindings]~^ ERROR type annotations needed\n }"}]}