{"sha": "6710f0dc9a08c458ddf7dc2ed5cb70f383046a96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MTBmMGRjOWEwOGM0NThkZGY3ZGMyZWQ1Y2I3MGYzODMwNDZhOTY=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-20T07:38:29Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-20T07:40:58Z"}, "message": "Do not squash unsafe block", "tree": {"sha": "6c2c5718719c9db7db1f11bf798fec00c02effa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c2c5718719c9db7db1f11bf798fec00c02effa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6710f0dc9a08c458ddf7dc2ed5cb70f383046a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6710f0dc9a08c458ddf7dc2ed5cb70f383046a96", "html_url": "https://github.com/rust-lang/rust/commit/6710f0dc9a08c458ddf7dc2ed5cb70f383046a96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6710f0dc9a08c458ddf7dc2ed5cb70f383046a96/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44d81d9e0e064bfb44cb5facaa5ff53d1b326dc9", "url": "https://api.github.com/repos/rust-lang/rust/commits/44d81d9e0e064bfb44cb5facaa5ff53d1b326dc9", "html_url": "https://github.com/rust-lang/rust/commit/44d81d9e0e064bfb44cb5facaa5ff53d1b326dc9"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "ebc12382bd75b4fd16c685e6b69a1535e0a3063b", "filename": "src/closures.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6710f0dc9a08c458ddf7dc2ed5cb70f383046a96/src%2Fclosures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6710f0dc9a08c458ddf7dc2ed5cb70f383046a96/src%2Fclosures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fclosures.rs?ref=6710f0dc9a08c458ddf7dc2ed5cb70f383046a96", "patch": "@@ -256,7 +256,9 @@ pub fn rewrite_last_closure(\n ) -> Option<String> {\n     if let ast::ExprKind::Closure(capture, ref fn_decl, ref body, _) = expr.node {\n         let body = match body.node {\n-            ast::ExprKind::Block(ref block) if is_simple_block(block, context.codemap) => {\n+            ast::ExprKind::Block(ref block)\n+                if !is_unsafe_block(block) && is_simple_block(block, context.codemap) =>\n+            {\n                 stmt_expr(&block.stmts[0]).unwrap_or(body)\n             }\n             _ => body,"}]}