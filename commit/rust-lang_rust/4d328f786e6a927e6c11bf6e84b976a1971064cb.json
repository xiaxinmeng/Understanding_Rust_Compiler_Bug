{"sha": "4d328f786e6a927e6c11bf6e84b976a1971064cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMzI4Zjc4NmU2YTkyN2U2YzExYmY2ZTg0Yjk3NmExOTcxMDY0Y2I=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-15T07:42:55Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-15T13:47:57Z"}, "message": "Pattern match on Ok instead of Some of .ok() retval", "tree": {"sha": "a63b9a965817ca6da6643aaecfc76bedf0ca1168", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a63b9a965817ca6da6643aaecfc76bedf0ca1168"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d328f786e6a927e6c11bf6e84b976a1971064cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d328f786e6a927e6c11bf6e84b976a1971064cb", "html_url": "https://github.com/rust-lang/rust/commit/4d328f786e6a927e6c11bf6e84b976a1971064cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d328f786e6a927e6c11bf6e84b976a1971064cb/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "235e7c1b4312a9c5814f8b164c4b8f3d560b5777", "url": "https://api.github.com/repos/rust-lang/rust/commits/235e7c1b4312a9c5814f8b164c4b8f3d560b5777", "html_url": "https://github.com/rust-lang/rust/commit/235e7c1b4312a9c5814f8b164c4b8f3d560b5777"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "58502bef9353ff49a921435b59bbc715a5fc9a74", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d328f786e6a927e6c11bf6e84b976a1971064cb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d328f786e6a927e6c11bf6e84b976a1971064cb/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4d328f786e6a927e6c11bf6e84b976a1971064cb", "patch": "@@ -3723,7 +3723,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n               tcx.mk_nil()\n           }\n           hir::ExprBreak(destination, ref expr_opt) => {\n-              if let Some(target_id) = destination.target_id.ok() {\n+              if let Ok(target_id) = destination.target_id {\n                   let (e_ty, cause);\n                   if let Some(ref e) = *expr_opt {\n                       // If this is a break with a value, we need to type-check"}]}