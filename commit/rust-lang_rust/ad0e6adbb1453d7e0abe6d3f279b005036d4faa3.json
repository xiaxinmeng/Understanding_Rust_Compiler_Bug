{"sha": "ad0e6adbb1453d7e0abe6d3f279b005036d4faa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkMGU2YWRiYjE0NTNkN2UwYWJlNmQzZjI3OWIwMDUwMzZkNGZhYTM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-05-25T13:53:59Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2016-05-25T13:53:59Z"}, "message": "fixes to `indexed_set`: add comments and fix `PhantomData` def'n.", "tree": {"sha": "0ca9019d9cdf0eb60a93c2aeab560a8d87c83c49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca9019d9cdf0eb60a93c2aeab560a8d87c83c49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad0e6adbb1453d7e0abe6d3f279b005036d4faa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0e6adbb1453d7e0abe6d3f279b005036d4faa3", "html_url": "https://github.com/rust-lang/rust/commit/ad0e6adbb1453d7e0abe6d3f279b005036d4faa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad0e6adbb1453d7e0abe6d3f279b005036d4faa3/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a28771cc971a0b750984a3ebd67402e21892566c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a28771cc971a0b750984a3ebd67402e21892566c", "html_url": "https://github.com/rust-lang/rust/commit/a28771cc971a0b750984a3ebd67402e21892566c"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "2625bd4300c27d4056853d6da7d486d93fdc9bd5", "filename": "src/librustc_borrowck/indexed_set.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ad0e6adbb1453d7e0abe6d3f279b005036d4faa3/src%2Flibrustc_borrowck%2Findexed_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0e6adbb1453d7e0abe6d3f279b005036d4faa3/src%2Flibrustc_borrowck%2Findexed_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Findexed_set.rs?ref=ad0e6adbb1453d7e0abe6d3f279b005036d4faa3", "patch": "@@ -17,13 +17,21 @@ use std::ops::{Deref, DerefMut, Range};\n use bitslice::{BitSlice, Word};\n use bitslice::{bitwise, Union, Subtract};\n \n+/// Represents some newtyped `usize` wrapper.\n+///\n+/// (purpose: avoid mixing indexes for different bitvector domains.)\n pub trait Idx: 'static {\n     fn new(usize) -> Self;\n     fn idx(&self) -> usize;\n }\n \n+/// Represents a set (or packed family of sets), of some element type\n+/// E, where each E is identified by some unique index type `T`.\n+///\n+/// In other words, `T` is the type used to index into the bitvector\n+/// this type uses to represent the set of object it holds.\n pub struct OwnIdxSet<T: Idx> {\n-    _pd: PhantomData<fn(&[T], usize) -> &T>,\n+    _pd: PhantomData<fn(&T)>,\n     bits: Vec<Word>,\n }\n \n@@ -40,8 +48,13 @@ impl<T: Idx> Clone for OwnIdxSet<T> {\n // requires a transmute relying on representation guarantees that may\n // not hold in the future.\n \n+/// Represents a set (or packed family of sets), of some element type\n+/// E, where each E is identified by some unique index type `T`.\n+///\n+/// In other words, `T` is the type used to index into the bitslice\n+/// this type uses to represent the set of object it holds.\n pub struct IdxSet<T: Idx> {\n-    _pd: PhantomData<fn(&[T], usize) -> &T>,\n+    _pd: PhantomData<fn(&T)>,\n     bits: [Word],\n }\n "}]}