{"sha": "c32135a87f96ec8e4721cd2563ee71ccef061246", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzMjEzNWE4N2Y5NmVjOGU0NzIxY2QyNTYzZWU3MWNjZWYwNjEyNDY=", "commit": {"author": {"name": "Philipp Krones", "email": "hello@philkrones.com", "date": "2019-03-09T11:24:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-09T11:24:44Z"}, "message": "Rollup merge of #3857 - phansch:document_path_qpath, r=flip1995\n\nDocument match_path, improve match_qpath docs\n\nInching towards enabling `#[deny(missing_docs)]` in utils :scroll:", "tree": {"sha": "7b63a55c43bbf290641c32ab2456589aeb784c31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b63a55c43bbf290641c32ab2456589aeb784c31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c32135a87f96ec8e4721cd2563ee71ccef061246", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcg6J8CRBK7hj4Ov3rIwAAdHIIAJjqyAEVrn8M8M8C9IUhwvGW\nvPOfR4BrJhKug+GAL0aKrguZ7vHAXqAD05UpDnAt2Z5bnUDEEyfzTJmA+yqevE0o\nUFRgFYvc6XM2KhxYbeZs55uLS4H7EA/uhrw88zCDPHZt0mYY7nkbkmXe9p+zBODf\nFkVRAbdSpaxyexAv9xcMV0oh8NHCGospFuUMkYwhNHKXLyo274mfVUXZ4h2Ewy2t\nTKNFb9uz1EpzL5m6KYupsZcn5EbsnQuFGb2bAROK3wNvFJxgkMiBTq0/hnO86xXC\n5Q3qMwGyf8cv4jiBxp3BtoWeLJuY9KtGrhZGV4bXSAOsASZ+s104c209F9s3aK0=\n=ZNh2\n-----END PGP SIGNATURE-----\n", "payload": "tree 7b63a55c43bbf290641c32ab2456589aeb784c31\nparent f69351e9957d44711d0decabccfb925bc998de70\nparent f04acdd46353322c5e9c44c85e4129083dcaf082\nauthor Philipp Krones <hello@philkrones.com> 1552130684 +0100\ncommitter GitHub <noreply@github.com> 1552130684 +0100\n\nRollup merge of #3857 - phansch:document_path_qpath, r=flip1995\n\nDocument match_path, improve match_qpath docs\n\nInching towards enabling `#[deny(missing_docs)]` in utils :scroll:\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c32135a87f96ec8e4721cd2563ee71ccef061246", "html_url": "https://github.com/rust-lang/rust/commit/c32135a87f96ec8e4721cd2563ee71ccef061246", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c32135a87f96ec8e4721cd2563ee71ccef061246/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f69351e9957d44711d0decabccfb925bc998de70", "url": "https://api.github.com/repos/rust-lang/rust/commits/f69351e9957d44711d0decabccfb925bc998de70", "html_url": "https://github.com/rust-lang/rust/commit/f69351e9957d44711d0decabccfb925bc998de70"}, {"sha": "f04acdd46353322c5e9c44c85e4129083dcaf082", "url": "https://api.github.com/repos/rust-lang/rust/commits/f04acdd46353322c5e9c44c85e4129083dcaf082", "html_url": "https://github.com/rust-lang/rust/commit/f04acdd46353322c5e9c44c85e4129083dcaf082"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "2e341bc74353367a42e3162e8ade38ddfa152831", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c32135a87f96ec8e4721cd2563ee71ccef061246/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c32135a87f96ec8e4721cd2563ee71ccef061246/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=c32135a87f96ec8e4721cd2563ee71ccef061246", "patch": "@@ -190,7 +190,10 @@ pub fn single_segment_path(path: &QPath) -> Option<&PathSegment> {\n     }\n }\n \n-/// Match a `Path` against a slice of segment string literals.\n+/// Match a `QPath` against a slice of segment string literals.\n+///\n+/// There is also `match_path` if you are dealing with a `rustc::hir::Path` instead of a\n+/// `rustc::hir::QPath`.\n ///\n /// # Examples\n /// ```rust,ignore\n@@ -210,6 +213,22 @@ pub fn match_qpath(path: &QPath, segments: &[&str]) -> bool {\n     }\n }\n \n+/// Match a `Path` against a slice of segment string literals.\n+///\n+/// There is also `match_qpath` if you are dealing with a `rustc::hir::QPath` instead of a\n+/// `rustc::hir::Path`.\n+///\n+/// # Examples\n+///\n+/// ```rust,ignore\n+/// if match_path(&trait_ref.path, &paths::HASH) {\n+///     // This is the `std::hash::Hash` trait.\n+/// }\n+///\n+/// if match_path(ty_path, &[\"rustc\", \"lint\", \"Lint\"]) {\n+///     // This is a `rustc::lint::Lint`.\n+/// }\n+/// ```\n pub fn match_path(path: &Path, segments: &[&str]) -> bool {\n     path.segments\n         .iter()"}]}