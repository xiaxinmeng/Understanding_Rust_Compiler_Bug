{"sha": "eb0a4934422941385a490ae9273ce8f6f05698e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMGE0OTM0NDIyOTQxMzg1YTQ5MGFlOTI3M2NlOGY2ZjA1Njk4ZTI=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-07T15:30:02Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-03-07T15:30:02Z"}, "message": "Implement struct literal equality", "tree": {"sha": "3b5191a3a3e20dbcc521a9ab91a6f6f9d2a377ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b5191a3a3e20dbcc521a9ab91a6f6f9d2a377ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb0a4934422941385a490ae9273ce8f6f05698e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb0a4934422941385a490ae9273ce8f6f05698e2", "html_url": "https://github.com/rust-lang/rust/commit/eb0a4934422941385a490ae9273ce8f6f05698e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb0a4934422941385a490ae9273ce8f6f05698e2/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2abb775de5bed06722ef0d9d14488d6e8777842f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2abb775de5bed06722ef0d9d14488d6e8777842f", "html_url": "https://github.com/rust-lang/rust/commit/2abb775de5bed06722ef0d9d14488d6e8777842f"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "6b745c15e6fd87a572a5321fd4f74fe3a728f648", "filename": "src/utils/hir.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/eb0a4934422941385a490ae9273ce8f6f05698e2/src%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb0a4934422941385a490ae9273ce8f6f05698e2/src%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils%2Fhir.rs?ref=eb0a4934422941385a490ae9273ce8f6f05698e2", "patch": "@@ -117,6 +117,11 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n             (&ExprPath(ref lqself, ref lsubpath), &ExprPath(ref rqself, ref rsubpath)) => {\n                 both(lqself, rqself, |l, r| self.eq_qself(l, r)) && self.eq_path(lsubpath, rsubpath)\n             }\n+            (&ExprStruct(ref lpath, ref lf, ref lo), &ExprStruct(ref rpath, ref rf, ref ro)) => {\n+                self.eq_path(lpath, rpath) &&\n+                    both(lo, ro, |l, r| self.eq_expr(l, r)) &&\n+                    over(lf, rf, |l, r| self.eq_field(l, r))\n+            }\n             (&ExprTup(ref ltup), &ExprTup(ref rtup)) => self.eq_exprs(ltup, rtup),\n             (&ExprTupField(ref le, li), &ExprTupField(ref re, ri)) => li.node == ri.node && self.eq_expr(le, re),\n             (&ExprUnary(lop, ref le), &ExprUnary(rop, ref re)) => lop == rop && self.eq_expr(le, re),\n@@ -132,6 +137,10 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n         over(left, right, |l, r| self.eq_expr(l, r))\n     }\n \n+    fn eq_field(&self, left: &Field, right: &Field) -> bool {\n+        left.name.node == right.name.node && self.eq_expr(&left.expr, &right.expr)\n+    }\n+\n     /// Check whether two patterns are the same.\n     pub fn eq_pat(&self, left: &Pat, right: &Pat) -> bool {\n         match (&left.node, &right.node) {"}]}