{"sha": "e1f73b8e2bc8696f6ba21d44de7808cad861bb42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxZjczYjhlMmJjODY5NmY2YmEyMWQ0NGRlNzgwOGNhZDg2MWJiNDI=", "commit": {"author": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2015-05-17T02:30:25Z"}, "committer": {"name": "Ben Striegel", "email": "ben.striegel@gmail.com", "date": "2015-05-17T02:30:25Z"}, "message": "Simplify CString doc comment\n\nNo need for `&b\"foo\"[..]` to make a CString, `\"foo\"` will do.", "tree": {"sha": "8c0be0dd091c17563d796df56bf2b87d3b0406d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c0be0dd091c17563d796df56bf2b87d3b0406d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1f73b8e2bc8696f6ba21d44de7808cad861bb42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1f73b8e2bc8696f6ba21d44de7808cad861bb42", "html_url": "https://github.com/rust-lang/rust/commit/e1f73b8e2bc8696f6ba21d44de7808cad861bb42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1f73b8e2bc8696f6ba21d44de7808cad861bb42/comments", "author": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bstrie", "id": 865233, "node_id": "MDQ6VXNlcjg2NTIzMw==", "avatar_url": "https://avatars.githubusercontent.com/u/865233?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bstrie", "html_url": "https://github.com/bstrie", "followers_url": "https://api.github.com/users/bstrie/followers", "following_url": "https://api.github.com/users/bstrie/following{/other_user}", "gists_url": "https://api.github.com/users/bstrie/gists{/gist_id}", "starred_url": "https://api.github.com/users/bstrie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bstrie/subscriptions", "organizations_url": "https://api.github.com/users/bstrie/orgs", "repos_url": "https://api.github.com/users/bstrie/repos", "events_url": "https://api.github.com/users/bstrie/events{/privacy}", "received_events_url": "https://api.github.com/users/bstrie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c23a9d42ea082830593a73d25821842baf9ccf33", "url": "https://api.github.com/repos/rust-lang/rust/commits/c23a9d42ea082830593a73d25821842baf9ccf33", "html_url": "https://github.com/rust-lang/rust/commit/c23a9d42ea082830593a73d25821842baf9ccf33"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "b83a8efe1d0832a3bfc455d6538a80253edca70d", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e1f73b8e2bc8696f6ba21d44de7808cad861bb42/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1f73b8e2bc8696f6ba21d44de7808cad861bb42/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=e1f73b8e2bc8696f6ba21d44de7808cad861bb42", "patch": "@@ -53,8 +53,7 @@ use vec::Vec;\n ///     fn my_printer(s: *const libc::c_char);\n /// }\n ///\n-/// let to_print = &b\"Hello, world!\"[..];\n-/// let c_to_print = CString::new(to_print).unwrap();\n+/// let c_to_print = CString::new(\"Hello, world!\").unwrap();\n /// unsafe {\n ///     my_printer(c_to_print.as_ptr());\n /// }"}]}