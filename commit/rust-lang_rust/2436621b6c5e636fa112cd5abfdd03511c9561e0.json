{"sha": "2436621b6c5e636fa112cd5abfdd03511c9561e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0MzY2MjFiNmM1ZTYzNmZhMTEyY2Q1YWJmZGQwMzUxMWM5NTYxZTA=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-30T20:27:28Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-30T20:27:28Z"}, "message": "Merge #8240\n\n8240: 8024: Added the trait modifier for methods r=Veykril a=chetankhilosiya\n\nmethod in impls and method calls will have trait modifier.\r\n\r\nTrait modifier for constants is remaining.\n\nCo-authored-by: Chetan Khilosiya <chetan.khilosiya@gmail.com>", "tree": {"sha": "b3a1210a9981af1fbb814d0ccd217148cf544784", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3a1210a9981af1fbb814d0ccd217148cf544784"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2436621b6c5e636fa112cd5abfdd03511c9561e0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgY4mwCRBK7hj4Ov3rIwAAdHIIAELor7xaGcctEl3uvXN6LVpY\nDIfttYk8HIB8txNGfQW/j42+XAMufoMG+lPx8Z5rZ1fJMXUnTV35aRZAylLS1+Fa\nLfJMh7m3Rdo8+i6SQIuf6/RZMu0OCjyU82LxhPBARylMTq3xNnbe77JWiWl24j24\nkAodSeg0B/nm8QMEnN0FEynN+BYvPp7LY/EO/Y/+E3nXYmQ5MdYjkv22piCsib9G\nBYUTXpioM0+jZtm/BcPZtT82JkfKG/JywQIehiLpTmsfSVGz4S2gBXoOCnqXsyZ0\nqKwOQncXCrqHA1n2f6VIhbt1/tlvQj9IJA7PmggH/vFZylqxMqsuOQ09zXY4eVc=\n=/8Xf\n-----END PGP SIGNATURE-----\n", "payload": "tree b3a1210a9981af1fbb814d0ccd217148cf544784\nparent fd7c454d516e3af90d8c0d0d8a22655345fec2d7\nparent 518c9c75481d4dcf6b1e7768fb48990dc74b7bf5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1617136048 +0000\ncommitter GitHub <noreply@github.com> 1617136048 +0000\n\nMerge #8240\n\n8240: 8024: Added the trait modifier for methods r=Veykril a=chetankhilosiya\n\nmethod in impls and method calls will have trait modifier.\r\n\r\nTrait modifier for constants is remaining.\n\nCo-authored-by: Chetan Khilosiya <chetan.khilosiya@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2436621b6c5e636fa112cd5abfdd03511c9561e0", "html_url": "https://github.com/rust-lang/rust/commit/2436621b6c5e636fa112cd5abfdd03511c9561e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2436621b6c5e636fa112cd5abfdd03511c9561e0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd7c454d516e3af90d8c0d0d8a22655345fec2d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd7c454d516e3af90d8c0d0d8a22655345fec2d7", "html_url": "https://github.com/rust-lang/rust/commit/fd7c454d516e3af90d8c0d0d8a22655345fec2d7"}, {"sha": "518c9c75481d4dcf6b1e7768fb48990dc74b7bf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/518c9c75481d4dcf6b1e7768fb48990dc74b7bf5", "html_url": "https://github.com/rust-lang/rust/commit/518c9c75481d4dcf6b1e7768fb48990dc74b7bf5"}], "stats": {"total": 61, "additions": 47, "deletions": 14}, "files": [{"sha": "5ccb8471496170bdac41bf44d38bc1ae37334fca", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 31, "deletions": 4, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -1,6 +1,6 @@\n //! Computes color for a single element.\n \n-use hir::{AsAssocItem, Semantics, VariantDef};\n+use hir::{AsAssocItem, AssocItemContainer, Semantics, VariantDef};\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase, SymbolKind,\n@@ -275,12 +275,24 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n             hir::ModuleDef::Module(_) => HlTag::Symbol(SymbolKind::Module),\n             hir::ModuleDef::Function(func) => {\n                 let mut h = Highlight::new(HlTag::Symbol(SymbolKind::Function));\n-                if func.as_assoc_item(db).is_some() {\n+                if let Some(item) = func.as_assoc_item(db) {\n                     h |= HlMod::Associated;\n                     if func.self_param(db).is_none() {\n                         h |= HlMod::Static\n                     }\n+\n+                    match item.container(db) {\n+                        AssocItemContainer::Impl(i) => {\n+                            if i.trait_(db).is_some() {\n+                                h |= HlMod::Trait;\n+                            }\n+                        }\n+                        AssocItemContainer::Trait(_t) => {\n+                            h |= HlMod::Trait;\n+                        }\n+                    }\n                 }\n+\n                 if func.is_unsafe(db) {\n                     h |= HlMod::Unsafe;\n                 }\n@@ -292,9 +304,20 @@ fn highlight_def(db: &RootDatabase, def: Definition) -> Highlight {\n             hir::ModuleDef::Variant(_) => HlTag::Symbol(SymbolKind::Variant),\n             hir::ModuleDef::Const(konst) => {\n                 let mut h = Highlight::new(HlTag::Symbol(SymbolKind::Const));\n-                if konst.as_assoc_item(db).is_some() {\n-                    h |= HlMod::Associated\n+                if let Some(item) = konst.as_assoc_item(db) {\n+                    h |= HlMod::Associated;\n+                    match item.container(db) {\n+                        AssocItemContainer::Impl(i) => {\n+                            if i.trait_(db).is_some() {\n+                                h |= HlMod::Trait;\n+                            }\n+                        }\n+                        AssocItemContainer::Trait(_t) => {\n+                            h |= HlMod::Trait;\n+                        }\n+                    }\n                 }\n+\n                 return h;\n             }\n             hir::ModuleDef::Trait(_) => HlTag::Symbol(SymbolKind::Trait),\n@@ -362,6 +385,10 @@ fn highlight_method_call(\n     if func.is_unsafe(sema.db) || sema.is_unsafe_method_call(&method_call) {\n         h |= HlMod::Unsafe;\n     }\n+    if func.as_assoc_item(sema.db).and_then(|it| it.containing_trait(sema.db)).is_some() {\n+        h |= HlMod::Trait\n+    }\n+\n     if let Some(self_param) = func.self_param(sema.db) {\n         match self_param.access(sema.db) {\n             hir::Access::Shared => (),"}, {"sha": "1cec991aa69f7d9deb0662abea7c2620c2d103a0", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -58,6 +58,8 @@ pub enum HlMod {\n     Associated,\n     /// Used for intra doc links in doc injection.\n     IntraDocLink,\n+    /// Used for items in traits and trait impls.\n+    Trait,\n \n     /// Keep this last!\n     Unsafe,\n@@ -158,6 +160,7 @@ impl HlMod {\n         HlMod::Callable,\n         HlMod::Static,\n         HlMod::Associated,\n+        HlMod::Trait,\n         HlMod::Unsafe,\n     ];\n \n@@ -174,6 +177,7 @@ impl HlMod {\n             HlMod::IntraDocLink => \"intra_doc_link\",\n             HlMod::Mutable => \"mutable\",\n             HlMod::Static => \"static\",\n+            HlMod::Trait => \"trait\",\n             HlMod::Unsafe => \"unsafe\",\n         }\n     }"}, {"sha": "8cde3906c3e31fcfe0ed536dca0acfca4bbd5207", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_assoc_functions.html", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_assoc_functions.html?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -47,12 +47,12 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">t</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">t_is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration static associated trait\">t_is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">t_is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">t</span> <span class=\"keyword\">for</span> <span class=\"struct\">foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration static associated trait\">is_static</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">is_not_static</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n         </code></pre>\n\\ No newline at end of file"}, {"sha": "7c6694a276238fe71a3770302775b06a5fe08547", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_injection.html?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -42,7 +42,7 @@\n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n     <span class=\"function\">fixture</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">r#\"</span>\n         <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Foo</span> <span class=\"brace\">{</span>\n-            <span class=\"keyword\">fn</span> <span class=\"function declaration static associated\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n+            <span class=\"keyword\">fn</span> <span class=\"function declaration static associated trait\">foo</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n                 <span class=\"macro\">println!</span><span class=\"parenthesis\">(</span><span class=\"string_literal\">\"2 + 2 = {}\"</span><span class=\"comma\">,</span> <span class=\"numeric_literal\">4</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n             <span class=\"brace\">}</span>\n         <span class=\"brace\">}</span><span class=\"string_literal\">\"#</span>"}, {"sha": "72910421dc504c834b7d1e9e454504407add16af", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -62,11 +62,11 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">DoTheAutoref</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">DoTheAutoref</span> <span class=\"keyword\">for</span> <span class=\"builtin_type\">u16</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span>\n@@ -96,6 +96,6 @@\n         <span class=\"keyword\">let</span> <span class=\"struct\">Packed</span> <span class=\"brace\">{</span> <span class=\"field\">a</span><span class=\"colon\">:</span> <span class=\"keyword unsafe\">ref</span> <span class=\"variable declaration\">_a</span> <span class=\"brace\">}</span> <span class=\"operator\">=</span> <span class=\"variable\">packed</span><span class=\"semicolon\">;</span>\n \n         <span class=\"comment\">// unsafe auto ref of packed field</span>\n-        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function associated unsafe\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n+        <span class=\"variable\">packed</span><span class=\"operator\">.</span><span class=\"field\">a</span><span class=\"operator\">.</span><span class=\"function associated trait unsafe\">calls_autoref</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "973173254c08a603a0cb3c27cee53318153aa7a9", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -67,11 +67,11 @@\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">trait</span> <span class=\"trait declaration\">Bar</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span><span class=\"semicolon\">;</span>\n <span class=\"brace\">}</span>\n \n <span class=\"keyword\">impl</span> <span class=\"trait\">Bar</span> <span class=\"keyword\">for</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n-    <span class=\"keyword\">fn</span> <span class=\"function declaration associated\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration associated trait\">bar</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration\">self</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"builtin_type\">i32</span> <span class=\"brace\">{</span>\n         <span class=\"self_keyword\">self</span><span class=\"operator\">.</span><span class=\"field\">x</span>\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>"}, {"sha": "2dc8a42f1ebd206212ab75e96058c7ff4004beaa", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -88,6 +88,7 @@ define_semantic_token_modifiers![\n     (CONSUMING, \"consuming\"),\n     (UNSAFE, \"unsafe\"),\n     (ATTRIBUTE_MODIFIER, \"attribute\"),\n+    (TRAIT_MODIFIER, \"trait\"),\n     (CALLABLE, \"callable\"),\n     (INTRA_DOC_LINK, \"intraDocLink\"),\n ];"}, {"sha": "c3820944bcb03e65d107875611875f4fa14660d7", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2436621b6c5e636fa112cd5abfdd03511c9561e0/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=2436621b6c5e636fa112cd5abfdd03511c9561e0", "patch": "@@ -474,6 +474,7 @@ fn semantic_token_type_and_modifiers(\n             HlMod::Callable => semantic_tokens::CALLABLE,\n             HlMod::Static => lsp_types::SemanticTokenModifier::STATIC,\n             HlMod::IntraDocLink => semantic_tokens::INTRA_DOC_LINK,\n+            HlMod::Trait => semantic_tokens::TRAIT_MODIFIER,\n             HlMod::Associated => continue,\n         };\n         mods |= modifier;"}]}