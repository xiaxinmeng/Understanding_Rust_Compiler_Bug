{"sha": "f5dc12ebfcbd385d827ce0e03f2241b295308830", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGMxMmViZmNiZDM4NWQ4MjdjZTBlMDNmMjI0MWIyOTUzMDg4MzA=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-18T22:24:58Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-11-19T14:06:39Z"}, "message": "Rollup merge of #56016 - scottmcm:vecdeque-resize-with, r=joshtriplett\n\nAdd VecDeque::resize_with\n\nThis already exists on `Vec`; I'm just adding it to `VecDeque`.\n\nI wanted to resize a `VecDeque<Vec<T>>` when I didn't know `T: Clone`, so I couldn't use `.resize(n, Vec::new())`.  With this I could do `.resize_with(n, Vec::new)` instead, which doesn't need `T: Clone`.\n\nTracking issue: https://github.com/rust-lang/rust/issues/41758", "tree": {"sha": "fad689afa6fd0b9e0e1480038981380634b5be60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fad689afa6fd0b9e0e1480038981380634b5be60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5dc12ebfcbd385d827ce0e03f2241b295308830", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlvyw28ACgkQ/vbIBR0O\nATxCow//dHWO5djA4U04ncHn/8gxgcLSjokZybDSFkiy+S3r3hdaOnwU7raA0EpW\nY2Qxm60fXcOiKesUO+LMcLluGQeH3yVhtJVG8eT+MHXEAnfUooEZbxAGnAur9PbQ\nsYq+Fc5uPuxM041AmveNRwRv4hWqjeJKIFfNTFTNWynPFi8LxXCwvniI+lVyN0v+\nwaJhdQylBD8hMq82niF2km0BfoX42Bg7KgLLNFQOakH78sCLSZREyReXyF/oc6vg\nDoWT/AwrAR1uxw8kL5p6DikZ1pbutmVCJAcrcyuzMQ5b83mvTTX383ZiZbR7aRT1\nHTmYGX/DdO9ydS1FBNwNoi7TMDh75dfFVvoq6XD/8N+kTdY0tPR7aC+20lGgXj16\n5vv7j7Xhwah05d9AZpGg8OsGTSvhpvNyLw6Jv3CkFuzlwKNJP/yfGsrDM+vrp6mE\nYhmeL1SVJayQ+bPnNKKrX+cF0wsTb7PqOGYWkW+vxudTp2bRWxhi3F0QMJJBoyuM\nL8mkVXbII1PjYx+J8JhMa/B1OPkZGuUznboLSQlIlbckQdJQSDXo0P5ps3yjDLBP\nAHB8q1oQchoTIyWV7cDV+1Am2PQBqPQwANWTXOgo+FQqlHG2jF6xWChLrttpb8Ox\nNgpAV8Ic1d7tMpAwE0oXtedBDuwQIAXnKen+W4e0IVbKRn+AlGU=\n=zu5t\n-----END PGP SIGNATURE-----", "payload": "tree fad689afa6fd0b9e0e1480038981380634b5be60\nparent 2a68c0075a1cf769ebc6f28667cd29fd11b852c1\nparent cdb1a799f8793c4c858abc05b437fa2e569f51e6\nauthor Pietro Albini <pietro@pietroalbini.org> 1542579898 +0100\ncommitter kennytm <kennytm@gmail.com> 1542636399 +0800\n\nRollup merge of #56016 - scottmcm:vecdeque-resize-with, r=joshtriplett\n\nAdd VecDeque::resize_with\n\nThis already exists on `Vec`; I'm just adding it to `VecDeque`.\n\nI wanted to resize a `VecDeque<Vec<T>>` when I didn't know `T: Clone`, so I couldn't use `.resize(n, Vec::new())`.  With this I could do `.resize_with(n, Vec::new)` instead, which doesn't need `T: Clone`.\n\nTracking issue: https://github.com/rust-lang/rust/issues/41758\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5dc12ebfcbd385d827ce0e03f2241b295308830", "html_url": "https://github.com/rust-lang/rust/commit/f5dc12ebfcbd385d827ce0e03f2241b295308830", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5dc12ebfcbd385d827ce0e03f2241b295308830/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a68c0075a1cf769ebc6f28667cd29fd11b852c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a68c0075a1cf769ebc6f28667cd29fd11b852c1", "html_url": "https://github.com/rust-lang/rust/commit/2a68c0075a1cf769ebc6f28667cd29fd11b852c1"}, {"sha": "cdb1a799f8793c4c858abc05b437fa2e569f51e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdb1a799f8793c4c858abc05b437fa2e569f51e6", "html_url": "https://github.com/rust-lang/rust/commit/cdb1a799f8793c4c858abc05b437fa2e569f51e6"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "cbf104a8fcde9ac296a66fbd533eb54779fcf19b", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 39, "deletions": 1, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/f5dc12ebfcbd385d827ce0e03f2241b295308830/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5dc12ebfcbd385d827ce0e03f2241b295308830/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=f5dc12ebfcbd385d827ce0e03f2241b295308830", "patch": "@@ -19,7 +19,7 @@\n \n use core::cmp::Ordering;\n use core::fmt;\n-use core::iter::{repeat, FromIterator, FusedIterator};\n+use core::iter::{repeat, repeat_with, FromIterator, FusedIterator};\n use core::mem;\n use core::ops::Bound::{Excluded, Included, Unbounded};\n use core::ops::{Index, IndexMut, RangeBounds};\n@@ -1920,6 +1920,44 @@ impl<T: Clone> VecDeque<T> {\n             self.truncate(new_len);\n         }\n     }\n+\n+    /// Modifies the `VecDeque` in-place so that `len()` is equal to `new_len`,\n+    /// either by removing excess elements from the back or by appending\n+    /// elements generated by calling `generator` to the back.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vec_resize_with)]\n+    ///\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut buf = VecDeque::new();\n+    /// buf.push_back(5);\n+    /// buf.push_back(10);\n+    /// buf.push_back(15);\n+    /// assert_eq!(buf, [5, 10, 15]);\n+    ///\n+    /// buf.resize_with(5, Default::default);\n+    /// assert_eq!(buf, [5, 10, 15, 0, 0]);\n+    ///\n+    /// buf.resize_with(2, || unreachable!());\n+    /// assert_eq!(buf, [5, 10]);\n+    ///\n+    /// let mut state = 100;\n+    /// buf.resize_with(5, || { state += 1; state });\n+    /// assert_eq!(buf, [5, 10, 101, 102, 103]);\n+    /// ```\n+    #[unstable(feature = \"vec_resize_with\", issue = \"41758\")]\n+    pub fn resize_with(&mut self, new_len: usize, generator: impl FnMut()->T) {\n+        let len = self.len();\n+\n+        if new_len > len {\n+            self.extend(repeat_with(generator).take(new_len - len))\n+        } else {\n+            self.truncate(new_len);\n+        }\n+    }\n }\n \n /// Returns the index in the underlying buffer for a given logical element index."}]}