{"sha": "8c081f69fb35814710649c54cc23aff05c06881b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMDgxZjY5ZmIzNTgxNDcxMDY0OWM1NGNjMjNhZmYwNWMwNjg4MWI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-05T16:47:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-05T16:47:50Z"}, "message": "Rollup merge of #70815 - RalfJung:layout-debug, r=jonas-schievink\n\nEnable layout debugging for `impl Trait` type aliases\n\nI also made it print the actual type name that the alias picks under the hood.", "tree": {"sha": "1bb8afa86282d05b3ecc3e1a3438736cb49fb4d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bb8afa86282d05b3ecc3e1a3438736cb49fb4d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c081f69fb35814710649c54cc23aff05c06881b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeigu2CRBK7hj4Ov3rIwAAdHIIAAUvOsVKQ7oisROLz3qr+VbR\nkVm7q9E8MbJYcuoUG82bxoVmVc6CaTPmjsSAEyd24HXnGMjqUCxcxtOWpgkXhiB/\nz+TXpOMk5ZXvRXMcofI+bG0DTDgPl5AB1CT8UzMmTvWgeKHMZZRsd44Rukid/tfu\nthnV0kzBKRLDiKDrCcLtA6QeHtohKbT0jXuRPROXJMcVmDGF58oBC/a0m+ZNVhXB\nNz7Gc3dArHG5j2MUeyrZEon2FNw0nDaQTXIIq0hZ7/vGqR+CWEO4QpwhmCsfyJt7\nOLMiVoyX5czthzwzlqeDl9d1zR+VMEUgMkmIzWB7F3qaOnh5+ml9sU3FpZR+9qQ=\n=P49W\n-----END PGP SIGNATURE-----\n", "payload": "tree 1bb8afa86282d05b3ecc3e1a3438736cb49fb4d3\nparent 4827aa6034636405778c63e1c95ac157dca14496\nparent 8f6c10937194fd08fbe821124e6384864b18b1a8\nauthor Dylan DPC <dylan.dpc@gmail.com> 1586105270 +0200\ncommitter GitHub <noreply@github.com> 1586105270 +0200\n\nRollup merge of #70815 - RalfJung:layout-debug, r=jonas-schievink\n\nEnable layout debugging for `impl Trait` type aliases\n\nI also made it print the actual type name that the alias picks under the hood.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c081f69fb35814710649c54cc23aff05c06881b", "html_url": "https://github.com/rust-lang/rust/commit/8c081f69fb35814710649c54cc23aff05c06881b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c081f69fb35814710649c54cc23aff05c06881b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4827aa6034636405778c63e1c95ac157dca14496", "url": "https://api.github.com/repos/rust-lang/rust/commits/4827aa6034636405778c63e1c95ac157dca14496", "html_url": "https://github.com/rust-lang/rust/commit/4827aa6034636405778c63e1c95ac157dca14496"}, {"sha": "8f6c10937194fd08fbe821124e6384864b18b1a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6c10937194fd08fbe821124e6384864b18b1a8", "html_url": "https://github.com/rust-lang/rust/commit/8f6c10937194fd08fbe821124e6384864b18b1a8"}], "stats": {"total": 56, "additions": 48, "deletions": 8}, "files": [{"sha": "22ce909083d915c3311a5daf6cf2f3fef4799963", "filename": "src/librustc_passes/layout_test.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c081f69fb35814710649c54cc23aff05c06881b/src%2Flibrustc_passes%2Flayout_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c081f69fb35814710649c54cc23aff05c06881b/src%2Flibrustc_passes%2Flayout_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Flayout_test.rs?ref=8c081f69fb35814710649c54cc23aff05c06881b", "patch": "@@ -27,7 +27,8 @@ impl ItemLikeVisitor<'tcx> for LayoutTest<'tcx> {\n             ItemKind::TyAlias(..)\n             | ItemKind::Enum(..)\n             | ItemKind::Struct(..)\n-            | ItemKind::Union(..) => {\n+            | ItemKind::Union(..)\n+            | ItemKind::OpaqueTy(..) => {\n                 for attr in self.tcx.get_attrs(item_def_id).iter() {\n                     if attr.check_name(sym::rustc_layout) {\n                         self.dump_layout_of(item_def_id, item, attr);\n@@ -84,7 +85,7 @@ impl LayoutTest<'tcx> {\n                         sym::debug => {\n                             self.tcx.sess.span_err(\n                                 item.span,\n-                                &format!(\"layout debugging: {:#?}\", *ty_layout),\n+                                &format!(\"layout debugging for type {:?}: {:#?}\", ty, *ty_layout),\n                             );\n                         }\n "}, {"sha": "034ed3190c13f84449de382643f90dffe032dc3c", "filename": "src/test/ui/layout/debug.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8c081f69fb35814710649c54cc23aff05c06881b/src%2Ftest%2Fui%2Flayout%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c081f69fb35814710649c54cc23aff05c06881b/src%2Ftest%2Fui%2Flayout%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fdebug.rs?ref=8c081f69fb35814710649c54cc23aff05c06881b", "patch": "@@ -1,5 +1,5 @@\n // normalize-stderr-test \"pref: Align \\{\\n *pow2: [1-3],\\n *\\}\" -> \"pref: $$PREF_ALIGN\"\n-#![feature(never_type, rustc_attrs)]\n+#![feature(never_type, rustc_attrs, type_alias_impl_trait)]\n #![crate_type = \"lib\"]\n \n #[rustc_layout(debug)]\n@@ -13,3 +13,10 @@ union U { f1: (i32, i32), f3: i32 } //~ ERROR: layout debugging\n \n #[rustc_layout(debug)]\n type Test = Result<i32, i32>; //~ ERROR: layout debugging\n+\n+#[rustc_layout(debug)]\n+type T = impl std::fmt::Debug; //~ ERROR: layout debugging\n+\n+fn f() -> T {\n+    0i32\n+}"}, {"sha": "3539cea5ea3184acc5e450cb43a6d2ad768f7d5b", "filename": "src/test/ui/layout/debug.stderr", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/8c081f69fb35814710649c54cc23aff05c06881b/src%2Ftest%2Fui%2Flayout%2Fdebug.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c081f69fb35814710649c54cc23aff05c06881b/src%2Ftest%2Fui%2Flayout%2Fdebug.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flayout%2Fdebug.stderr?ref=8c081f69fb35814710649c54cc23aff05c06881b", "patch": "@@ -1,4 +1,4 @@\n-error: layout debugging: Layout {\n+error: layout debugging for type E: Layout {\n     fields: Arbitrary {\n         offsets: [\n             Size {\n@@ -110,7 +110,7 @@ error: layout debugging: Layout {\n LL | enum E { Foo, Bar(!, i32, i32) }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: layout debugging: Layout {\n+error: layout debugging for type S: Layout {\n     fields: Arbitrary {\n         offsets: [\n             Size {\n@@ -164,7 +164,7 @@ error: layout debugging: Layout {\n LL | struct S { f1: i32, f2: (), f3: i32 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: layout debugging: Layout {\n+error: layout debugging for type U: Layout {\n     fields: Union(\n         2,\n     ),\n@@ -190,7 +190,7 @@ error: layout debugging: Layout {\n LL | union U { f1: (i32, i32), f3: i32 }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: layout debugging: Layout {\n+error: layout debugging for type std::result::Result<i32, i32>: Layout {\n     fields: Arbitrary {\n         offsets: [\n             Size {\n@@ -315,5 +315,37 @@ error: layout debugging: Layout {\n LL | type Test = Result<i32, i32>;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 4 previous errors\n+error: layout debugging for type i32: Layout {\n+    fields: Union(\n+        0,\n+    ),\n+    variants: Single {\n+        index: 0,\n+    },\n+    abi: Scalar(\n+        Scalar {\n+            value: Int(\n+                I32,\n+                true,\n+            ),\n+            valid_range: 0..=4294967295,\n+        },\n+    ),\n+    largest_niche: None,\n+    align: AbiAndPrefAlign {\n+        abi: Align {\n+            pow2: 2,\n+        },\n+        pref: $PREF_ALIGN,\n+    },\n+    size: Size {\n+        raw: 4,\n+    },\n+}\n+  --> $DIR/debug.rs:18:1\n+   |\n+LL | type T = impl std::fmt::Debug;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 5 previous errors\n "}]}