{"sha": "6b18f6e10602b5ea08fbd94c5e10396f984d8174", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMThmNmUxMDYwMmI1ZWEwOGZiZDk0YzVlMTAzOTZmOTg0ZDgxNzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-03T11:22:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-03T11:22:56Z"}, "message": "fix setting thread name on macOS", "tree": {"sha": "49fb0fd997be5b5a9bb880721d74e1c16361b233", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/49fb0fd997be5b5a9bb880721d74e1c16361b233"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b18f6e10602b5ea08fbd94c5e10396f984d8174", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b18f6e10602b5ea08fbd94c5e10396f984d8174", "html_url": "https://github.com/rust-lang/rust/commit/6b18f6e10602b5ea08fbd94c5e10396f984d8174", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b18f6e10602b5ea08fbd94c5e10396f984d8174/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6680118588f4ba52683b9fffbb7ac88a50b4f971", "url": "https://api.github.com/repos/rust-lang/rust/commits/6680118588f4ba52683b9fffbb7ac88a50b4f971", "html_url": "https://github.com/rust-lang/rust/commit/6680118588f4ba52683b9fffbb7ac88a50b4f971"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "3677960fd8777771a2a4516853b977cdb6af7b94", "filename": "src/shims/foreign_items/posix/macos.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6b18f6e10602b5ea08fbd94c5e10396f984d8174/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b18f6e10602b5ea08fbd94c5e10396f984d8174/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Fmacos.rs?ref=6b18f6e10602b5ea08fbd94c5e10396f984d8174", "patch": "@@ -98,6 +98,12 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.write_scalar(stack_size, dest)?;\n             }\n \n+            // Threading\n+            \"pthread_setname_np\" => {\n+                let ptr = this.read_scalar(args[0])?.not_undef()?;\n+                this.pthread_setname_np(ptr)?;\n+            }\n+\n             // Incomplete shims that we \"stub out\" just to get pre-main initialization code to work.\n             // These shims are enabled only when the caller is in the standard library.\n             \"mmap\" if this.frame().instance.to_string().starts_with(\"std::sys::unix::\") => {"}, {"sha": "ac1bb39a69828ba1de76a8ed568840d11d9b351e", "filename": "src/shims/thread.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6b18f6e10602b5ea08fbd94c5e10396f984d8174/src%2Fshims%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b18f6e10602b5ea08fbd94c5e10396f984d8174/src%2Fshims%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fthread.rs?ref=6b18f6e10602b5ea08fbd94c5e10396f984d8174", "patch": "@@ -95,6 +95,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         _arg5: OpTy<'tcx, Tag>,\n     ) -> InterpResult<'tcx, i32> {\n         let this = self.eval_context_mut();\n+        this.assert_target_os(\"linux\", \"prctl\");\n \n         let option = this.read_scalar(option)?.to_i32()?;\n         if option == this.eval_libc_i32(\"PR_SET_NAME\")? {\n@@ -118,6 +119,19 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         Ok(0)\n     }\n \n+    fn pthread_setname_np(\n+        &mut self,\n+        ptr: Scalar<Tag>,\n+    ) -> InterpResult<'tcx> {\n+        let this = self.eval_context_mut();\n+        this.assert_target_os(\"macos\", \"pthread_setname_np\");\n+\n+        let name = this.memory.read_c_str(ptr)?.to_owned();\n+        this.set_active_thread_name(name)?;\n+\n+        Ok(())\n+    }\n+\n     fn sched_yield(&mut self) -> InterpResult<'tcx, i32> {\n         let this = self.eval_context_mut();\n "}]}