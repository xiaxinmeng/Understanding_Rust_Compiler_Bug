{"sha": "83cbbd7bce12684f044b3c9d6c321723b0a737e7", "node_id": "C_kwDOAAsO6NoAKDgzY2JiZDdiY2UxMjY4NGYwNDRiM2M5ZDZjMzIxNzIzYjBhNzM3ZTc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-21T20:49:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-22T12:35:12Z"}, "message": "support MIRI_HOST_SYSROOT env var for stage 0 builds\n\nTogether with a patch on the rustc side, this makes './x.py test src/tools/miri --stage 0' work again. :)", "tree": {"sha": "2220391b6a0ec1c188ed0d61039cc78eb4c08bed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2220391b6a0ec1c188ed0d61039cc78eb4c08bed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83cbbd7bce12684f044b3c9d6c321723b0a737e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83cbbd7bce12684f044b3c9d6c321723b0a737e7", "html_url": "https://github.com/rust-lang/rust/commit/83cbbd7bce12684f044b3c9d6c321723b0a737e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83cbbd7bce12684f044b3c9d6c321723b0a737e7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cb9ccb28442342c7450d516c7a168abbca3e327", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cb9ccb28442342c7450d516c7a168abbca3e327", "html_url": "https://github.com/rust-lang/rust/commit/1cb9ccb28442342c7450d516c7a168abbca3e327"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "0741f373bb6774da51919dc2aa74522b66093c95", "filename": "README.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83cbbd7bce12684f044b3c9d6c321723b0a737e7/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/83cbbd7bce12684f044b3c9d6c321723b0a737e7/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=83cbbd7bce12684f044b3c9d6c321723b0a737e7", "patch": "@@ -445,6 +445,8 @@ binaries, and as such worth documenting:\n   crate currently being compiled.\n * `MIRI_VERBOSE` when set to any value tells the various `cargo-miri` phases to\n   perform verbose logging.\n+* `MIRI_HOST_SYSROOT` is set by bootstrap to tell `cargo-miri` which sysroot to use for *host*\n+  operations.\n \n [testing-miri]: CONTRIBUTING.md#testing-the-miri-driver\n "}, {"sha": "bb2eb54ffebcac172e6dff81f5c4b2861e3e3c84", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/83cbbd7bce12684f044b3c9d6c321723b0a737e7/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83cbbd7bce12684f044b3c9d6c321723b0a737e7/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=83cbbd7bce12684f044b3c9d6c321723b0a737e7", "patch": "@@ -721,7 +721,9 @@ fn phase_cargo_miri(mut args: impl Iterator<Item = String>) {\n     // hope that all they do is ask for the version number -- things could quickly go downhill from here.\n     // In `main`, we need the value of `RUSTC` to distinguish RUSTC_WRAPPER invocations from rustdoc\n     // or TARGET_RUNNER invocations, so we canonicalize it here to make it exceedingly unlikely that\n-    // there would be a collision.\n+    // there would be a collision with other invocations of cargo-miri (as rustdoc or as runner).\n+    // We explicitly do this even if RUSTC_STAGE is set, since for these builds we do *not* want the\n+    // bootstrap `rustc` thing in our way! Instead, we have MIRI_HOST_SYSROOT to use for host builds.\n     cmd.env(\"RUSTC\", &fs::canonicalize(find_miri()).unwrap());\n \n     let runner_env_name =\n@@ -929,9 +931,9 @@ fn phase_rustc(mut args: impl Iterator<Item = String>, phase: RustcPhase) {\n     } else {\n         // For host crates (but not when we are printing), we might still have to set the sysroot.\n         if !print {\n-            // When we're running `cargo-miri` from `x.py` we need to pass the sysroot explicitly as rustc\n-            // can't figure out the sysroot on its own unless it's from rustup.\n-            if let Some(sysroot) = std::env::var_os(\"SYSROOT\") {\n+            // When we're running `cargo-miri` from `x.py` we need to pass the sysroot explicitly\n+            // due to bootstrap complications.\n+            if let Some(sysroot) = std::env::var_os(\"MIRI_HOST_SYSROOT\") {\n                 cmd.arg(\"--sysroot\").arg(sysroot);\n             }\n         }"}]}