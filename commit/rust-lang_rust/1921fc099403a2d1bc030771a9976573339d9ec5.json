{"sha": "1921fc099403a2d1bc030771a9976573339d9ec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MjFmYzA5OTQwM2EyZDFiYzAzMDc3MWE5OTc2NTczMzM5ZDllYzU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-04T20:51:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-04T20:51:48Z"}, "message": "Rollup merge of #68282 - tmiasko:sanitizer-example, r=steveklabnik\n\nInstrument C / C++ in MemorySanitizer example\n\nModify the example to instrument C / C++ in addition to Rust, since it\nwill be generally required (e.g., when using libbacktrace for symbolication).", "tree": {"sha": "b4c14b0a8d02ca1586a605dd4a764667f2b45d0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4c14b0a8d02ca1586a605dd4a764667f2b45d0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1921fc099403a2d1bc030771a9976573339d9ec5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeOdllCRBK7hj4Ov3rIwAAdHIIADekD8LId1BqYDijMncXFFwX\n2CA+GdCroc9pEf1V9LBjw1wTGUW7D6pNSrALzGqiYiMcVEJ0VXjSBOoUKqjlCmCy\nWHtBwKqkgHq4J/Qa1EINzfikbVEvL0c5+O9BEsI+MC9Zfes6emI8DWKV2BEtJ2X1\nMqy5Uo2HnA2ZIASA/2bu6yitqXfkaQjnRNCS+RjT8cIbXnt9y0xRzAz/I3ywKFKC\noAsZYtjuS0QvDpaAGQ11jHG+pE4wnvWwQ4GvkZRiN9zd+CXkS5AObN/20/1+DkmH\nOh0FAxd51djniZBy9eUw84Q0GWlSlDwXFWbGzRk0iQKVAwbU/gEKbQBELd2SZHE=\n=oMjl\n-----END PGP SIGNATURE-----\n", "payload": "tree b4c14b0a8d02ca1586a605dd4a764667f2b45d0c\nparent 5b0caef54a062b5e283cf15d1fad7027f631f29d\nparent 7e3c51d085d9eaa2204cc18763bc7d98b66435fd\nauthor Dylan DPC <dylan.dpc@gmail.com> 1580849508 +0100\ncommitter GitHub <noreply@github.com> 1580849508 +0100\n\nRollup merge of #68282 - tmiasko:sanitizer-example, r=steveklabnik\n\nInstrument C / C++ in MemorySanitizer example\n\nModify the example to instrument C / C++ in addition to Rust, since it\nwill be generally required (e.g., when using libbacktrace for symbolication).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1921fc099403a2d1bc030771a9976573339d9ec5", "html_url": "https://github.com/rust-lang/rust/commit/1921fc099403a2d1bc030771a9976573339d9ec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1921fc099403a2d1bc030771a9976573339d9ec5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b0caef54a062b5e283cf15d1fad7027f631f29d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0caef54a062b5e283cf15d1fad7027f631f29d", "html_url": "https://github.com/rust-lang/rust/commit/5b0caef54a062b5e283cf15d1fad7027f631f29d"}, {"sha": "7e3c51d085d9eaa2204cc18763bc7d98b66435fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e3c51d085d9eaa2204cc18763bc7d98b66435fd", "html_url": "https://github.com/rust-lang/rust/commit/7e3c51d085d9eaa2204cc18763bc7d98b66435fd"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "414ac7e63a331077e83ef0805cd8dff51edc434a", "filename": "src/doc/unstable-book/src/compiler-flags/sanitizer.md", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1921fc099403a2d1bc030771a9976573339d9ec5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "raw_url": "https://github.com/rust-lang/rust/raw/1921fc099403a2d1bc030771a9976573339d9ec5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsanitizer.md?ref=1921fc099403a2d1bc030771a9976573339d9ec5", "patch": "@@ -170,7 +170,7 @@ Shadow byte legend (one shadow byte represents 8 application bytes):\n ## MemorySanitizer\n \n Use of uninitialized memory. Note that we are using `-Zbuild-std` to instrument\n-standard library, and passing `-msan-track-origins=2` to the LLVM to track\n+the standard library, and passing `-Zsanitizer-track-origins` to track the\n origins of uninitialized memory:\n \n ```shell\n@@ -185,7 +185,15 @@ fn main() {\n     }\n }\n \n-$ env RUSTFLAGS=\"-Zsanitizer=memory -Cllvm-args=-msan-track-origins=2\" cargo -Zbuild-std run --target x86_64-unknown-linux-gnu\n+$ export \\\n+  CC=clang \\\n+  CXX=clang++ \\\n+  CFLAGS='-fsanitize=memory -fsanitize-memory-track-origins' \\\n+  CXXFLAGS='-fsanitize=memory -fsanitize-memory-track-origins' \\\n+  RUSTFLAGS='-Zsanitizer=memory -Zsanitizer-memory-track-origins' \\\n+  RUSTDOCFLAGS='-Zsanitizer=memory -Zsanitizer-memory-track-origins'\n+$ cargo clean\n+$ cargo -Zbuild-std run --target x86_64-unknown-linux-gnu\n ==9416==WARNING: MemorySanitizer: use-of-uninitialized-value\n     #0 0x560c04f7488a in core::fmt::num::imp::fmt_u64::haa293b0b098501ca $RUST/build/x86_64-unknown-linux-gnu/stage1/lib/rustlib/src/rust/src/libcore/fmt/num.rs:202:16\n ..."}]}