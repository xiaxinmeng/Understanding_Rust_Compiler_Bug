{"sha": "5235065d740cad78ab55a89299fc1f5d32bf8f46", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMzUwNjVkNzQwY2FkNzhhYjU1YTg5Mjk5ZmMxZjVkMzJiZjhmNDY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-28T20:45:22Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-06-03T13:38:13Z"}, "message": "Remove #[static_assert]\n\nThis was always a weird feature, and isn't being used in the compiler.\nStatic assertions should be done better than this.\n\nThis implements RFC #1096.\n\nFixes #13951\nFixes #23008\nFixes #6676\n\nThis is behind a feature gate, but that's still a\n\n[breaking-change]", "tree": {"sha": "613bd353cd06acb585b85d30ddcfa0b360c64913", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/613bd353cd06acb585b85d30ddcfa0b360c64913"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5235065d740cad78ab55a89299fc1f5d32bf8f46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5235065d740cad78ab55a89299fc1f5d32bf8f46", "html_url": "https://github.com/rust-lang/rust/commit/5235065d740cad78ab55a89299fc1f5d32bf8f46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5235065d740cad78ab55a89299fc1f5d32bf8f46/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b56d73dc0e8b988f91c44fd9f9e40331451796b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b56d73dc0e8b988f91c44fd9f9e40331451796b", "html_url": "https://github.com/rust-lang/rust/commit/5b56d73dc0e8b988f91c44fd9f9e40331451796b"}], "stats": {"total": 130, "additions": 0, "deletions": 130}, "files": [{"sha": "eb3dbfbf1361609ac296f362b12b00d69f1061b3", "filename": "src/doc/reference.md", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5235065d740cad78ab55a89299fc1f5d32bf8f46/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/5235065d740cad78ab55a89299fc1f5d32bf8f46/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=5235065d740cad78ab55a89299fc1f5d32bf8f46", "patch": "@@ -1943,9 +1943,6 @@ macro scope.\n - `simd` - on certain tuple structs, derive the arithmetic operators, which\n   lower to the target's SIMD instructions, if any; the `simd` feature gate\n   is necessary to use this attribute.\n-- `static_assert` - on statics whose type is `bool`, terminates compilation\n-  with an error if it is not initialized to `true`. To use this, the `static_assert`\n-  feature gate must be enabled.\n - `unsafe_no_drop_flag` - on structs, remove the flag that prevents\n   destructors from being run twice. Destructors might be run multiple times on\n   the same object with this attribute. To use this, the `unsafe_no_drop_flag` feature\n@@ -2301,12 +2298,6 @@ The currently implemented features of the reference compiler are:\n                  crate. Stability markers are also attributes: `#[stable]`,\n                  `#[unstable]`, and `#[deprecated]` are the three levels.\n \n-* `static_assert` - The `#[static_assert]` functionality is experimental and\n-                    unstable. The attribute can be attached to a `static` of\n-                    type `bool` and the compiler will error if the `bool` is\n-                    `false` at compile time. This version of this functionality\n-                    is unintuitive and suboptimal.\n-\n * `start` - Allows use of the `#[start]` attribute, which changes the entry point\n             into a Rust program. This capability, especially the signature for the\n             annotated function, is subject to change."}, {"sha": "390c0b035fdd55e21abd9080cffb916e82739406", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5235065d740cad78ab55a89299fc1f5d32bf8f46/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5235065d740cad78ab55a89299fc1f5d32bf8f46/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=5235065d740cad78ab55a89299fc1f5d32bf8f46", "patch": "@@ -2032,28 +2032,6 @@ pub fn trans_item(ccx: &CrateContext, item: &ast::Item) {\n \n           let g = consts::trans_static(ccx, m, item.id);\n           update_linkage(ccx, g, Some(item.id), OriginalTranslation);\n-\n-          // Do static_assert checking. It can't really be done much earlier\n-          // because we need to get the value of the bool out of LLVM\n-          if attr::contains_name(&item.attrs, \"static_assert\") {\n-              if !ty::type_is_bool(ty::expr_ty(ccx.tcx(), expr)) {\n-                  ccx.sess().span_fatal(expr.span,\n-                                        \"can only have static_assert on a static \\\n-                                         with type `bool`\");\n-              }\n-              if m == ast::MutMutable {\n-                  ccx.sess().span_fatal(expr.span,\n-                                        \"cannot have static_assert on a mutable \\\n-                                         static\");\n-              }\n-\n-              let v = ccx.static_values().borrow().get(&item.id).unwrap().clone();\n-              unsafe {\n-                  if !(llvm::LLVMConstIntGetZExtValue(v) != 0) {\n-                      ccx.sess().span_fatal(expr.span, \"static assertion failed\");\n-                  }\n-              }\n-          }\n       },\n       ast::ItemForeignMod(ref foreign_mod) => {\n         foreign::trans_foreign_mod(ccx, foreign_mod);"}, {"sha": "34879606b9e4e31fc3ebeedee831dcc1b5e9f20a", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5235065d740cad78ab55a89299fc1f5d32bf8f46/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5235065d740cad78ab55a89299fc1f5d32bf8f46/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=5235065d740cad78ab55a89299fc1f5d32bf8f46", "patch": "@@ -137,9 +137,6 @@ const KNOWN_FEATURES: &'static [(&'static str, &'static str, Status)] = &[\n     // Allows the use of rustc_* attributes; RFC 572\n     (\"rustc_attrs\", \"1.0.0\", Active),\n \n-    // Allows the use of `static_assert`\n-    (\"static_assert\", \"1.0.0\", Active),\n-\n     // Allows the use of #[allow_internal_unstable]. This is an\n     // attribute on macro_rules! and can't use the attribute handling\n     // below (it has to be checked before expansion possibly makes\n@@ -261,8 +258,6 @@ pub const KNOWN_ATTRIBUTES: &'static [(&'static str, AttributeType)] = &[\n     (\"no_builtins\", Whitelisted),\n     (\"no_mangle\", Whitelisted),\n     (\"no_stack_check\", Whitelisted),\n-    (\"static_assert\", Gated(\"static_assert\",\n-                            \"`#[static_assert]` is an experimental feature, and has a poor API\")),\n     (\"no_debug\", Whitelisted),\n     (\"omit_gdb_pretty_printer_section\", Whitelisted),\n     (\"unsafe_no_drop_flag\", Gated(\"unsafe_no_drop_flag\","}, {"sha": "25740397d7a1e318cfbe47e9ccc980f31db5b0bb", "filename": "src/test/compile-fail/feature-gate-static-assert.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-static-assert.rs?ref=5b56d73dc0e8b988f91c44fd9f9e40331451796b", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[static_assert] //~ ERROR `#[static_assert]` is an experimental feature\n-static X: bool = true;\n-\n-fn main() {}"}, {"sha": "7a7912b06f88715ac012be4a7536dffef15bd6e6", "filename": "src/test/compile-fail/nonbool_static_assert.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnonbool_static_assert.rs?ref=5b56d73dc0e8b988f91c44fd9f9e40331451796b", "patch": "@@ -1,17 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(static_assert)]\n-#![allow(dead_code)]\n-\n-#[static_assert]\n-static E: i32 = 1; //~ ERROR can only have static_assert on a static with type `bool`\n-\n-fn main() {}"}, {"sha": "d0cfbfbbcccc21adaea08611ed774546c0eba768", "filename": "src/test/compile-fail/static-assert.rs", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-assert.rs?ref=5b56d73dc0e8b988f91c44fd9f9e40331451796b", "patch": "@@ -1,18 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(static_assert)]\n-#![allow(dead_code)]\n-\n-#[static_assert]\n-static A: bool = false; //~ ERROR static assertion failed\n-\n-fn main() {\n-}"}, {"sha": "35f840dab0c0cb6a0d7aa7446def00b272269145", "filename": "src/test/compile-fail/static-assert2.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstatic-assert2.rs?ref=5b56d73dc0e8b988f91c44fd9f9e40331451796b", "patch": "@@ -1,17 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![feature(static_assert)]\n-#![allow(dead_code)]\n-\n-#[static_assert]\n-static E: bool = 1 == 2; //~ ERROR static assertion failed\n-\n-fn main() {}"}, {"sha": "e5583a3c697b6714f269b4dccd1e511d411e1f04", "filename": "src/test/run-pass/static-assert.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Frun-pass%2Fstatic-assert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b56d73dc0e8b988f91c44fd9f9e40331451796b/src%2Ftest%2Frun-pass%2Fstatic-assert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-assert.rs?ref=5b56d73dc0e8b988f91c44fd9f9e40331451796b", "patch": "@@ -1,28 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// pretty-expanded FIXME #23616\n-\n-#![feature(static_assert)]\n-\n-#[static_assert]\n-static b: bool = true;\n-\n-#[static_assert]\n-static c: bool = 1 == 1;\n-\n-#[static_assert]\n-static d: bool = 1 != 2;\n-\n-#[static_assert]\n-static f: bool = (4/2) == 2;\n-\n-pub fn main() {\n-}"}]}