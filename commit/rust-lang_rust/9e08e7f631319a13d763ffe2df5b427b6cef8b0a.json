{"sha": "9e08e7f631319a13d763ffe2df5b427b6cef8b0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMDhlN2Y2MzEzMTlhMTNkNzYzZmZlMmRmNWI0MjdiNmNlZjhiMGE=", "commit": {"author": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-09-08T18:34:00Z"}, "committer": {"name": "Cameron Steffen", "email": "cam.steffen94@gmail.com", "date": "2021-09-08T19:07:03Z"}, "message": "Remove special dogfood target", "tree": {"sha": "2006e8ec8344709cc5046412522d7397ff236ddd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2006e8ec8344709cc5046412522d7397ff236ddd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e08e7f631319a13d763ffe2df5b427b6cef8b0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e08e7f631319a13d763ffe2df5b427b6cef8b0a", "html_url": "https://github.com/rust-lang/rust/commit/9e08e7f631319a13d763ffe2df5b427b6cef8b0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e08e7f631319a13d763ffe2df5b427b6cef8b0a/comments", "author": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camsteffen", "id": 5565418, "node_id": "MDQ6VXNlcjU1NjU0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5565418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camsteffen", "html_url": "https://github.com/camsteffen", "followers_url": "https://api.github.com/users/camsteffen/followers", "following_url": "https://api.github.com/users/camsteffen/following{/other_user}", "gists_url": "https://api.github.com/users/camsteffen/gists{/gist_id}", "starred_url": "https://api.github.com/users/camsteffen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camsteffen/subscriptions", "organizations_url": "https://api.github.com/users/camsteffen/orgs", "repos_url": "https://api.github.com/users/camsteffen/repos", "events_url": "https://api.github.com/users/camsteffen/events{/privacy}", "received_events_url": "https://api.github.com/users/camsteffen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5250744abc89944213f19789154045d709568c7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5250744abc89944213f19789154045d709568c7b", "html_url": "https://github.com/rust-lang/rust/commit/5250744abc89944213f19789154045d709568c7b"}], "stats": {"total": 25, "additions": 1, "deletions": 24}, "files": [{"sha": "7ebdd947893e9e1570ed1fe8d31ba32b2b4ffefd", "filename": "src/main.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9e08e7f631319a13d763ffe2df5b427b6cef8b0a/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e08e7f631319a13d763ffe2df5b427b6cef8b0a/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=9e08e7f631319a13d763ffe2df5b427b6cef8b0a", "patch": "@@ -4,7 +4,6 @@\n \n use rustc_tools_util::VersionInfo;\n use std::env;\n-use std::ffi::OsString;\n use std::path::PathBuf;\n use std::process::{self, Command};\n \n@@ -14,7 +13,7 @@ Usage:\n     cargo clippy [options] [--] [<opts>...]\n \n Common options:\n-    --no-deps                Run Clippy only on the given crate, without linting the dependencies \n+    --no-deps                Run Clippy only on the given crate, without linting the dependencies\n     --fix                    Automatically apply lint suggestions. This flag implies `--no-deps`\n     -h, --help               Print this message\n     -V, --version            Print version info and exit\n@@ -116,22 +115,6 @@ impl ClippyCmd {\n         path\n     }\n \n-    fn target_dir() -> Option<(&'static str, OsString)> {\n-        env::var_os(\"CLIPPY_DOGFOOD\")\n-            .map(|_| {\n-                env::var_os(\"CARGO_MANIFEST_DIR\").map_or_else(\n-                    || std::ffi::OsString::from(\"clippy_dogfood\"),\n-                    |d| {\n-                        std::path::PathBuf::from(d)\n-                            .join(\"target\")\n-                            .join(\"dogfood\")\n-                            .into_os_string()\n-                    },\n-                )\n-            })\n-            .map(|p| (\"CARGO_TARGET_DIR\", p))\n-    }\n-\n     fn into_std_cmd(self) -> Command {\n         let mut cmd = Command::new(\"cargo\");\n         let clippy_args: String = self\n@@ -141,7 +124,6 @@ impl ClippyCmd {\n             .collect();\n \n         cmd.env(\"RUSTC_WORKSPACE_WRAPPER\", Self::path())\n-            .envs(ClippyCmd::target_dir())\n             .env(\"CLIPPY_ARGS\", clippy_args)\n             .arg(self.cargo_subcommand)\n             .args(&self.args);"}, {"sha": "a37cdfed126f6cea9c46d063abf01ac7ff801e5f", "filename": "tests/dogfood.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e08e7f631319a13d763ffe2df5b427b6cef8b0a/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e08e7f631319a13d763ffe2df5b427b6cef8b0a/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=9e08e7f631319a13d763ffe2df5b427b6cef8b0a", "patch": "@@ -33,7 +33,6 @@ fn dogfood_clippy() {\n     let mut command = Command::new(&*CLIPPY_PATH);\n     command\n         .current_dir(root_dir)\n-        .env(\"CLIPPY_DOGFOOD\", \"1\")\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n         .arg(\"clippy\")\n         .arg(\"--all-targets\")\n@@ -79,7 +78,6 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n     // Make sure that with the `--no-deps` argument Clippy does not run on `path_dep`.\n     let output = Command::new(&*CLIPPY_PATH)\n         .current_dir(&cwd)\n-        .env(\"CLIPPY_DOGFOOD\", \"1\")\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n         .arg(\"clippy\")\n         .args(&[\"-p\", \"subcrate\"])\n@@ -99,7 +97,6 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n         // Test that without the `--no-deps` argument, `path_dep` is linted.\n         let output = Command::new(&*CLIPPY_PATH)\n             .current_dir(&cwd)\n-            .env(\"CLIPPY_DOGFOOD\", \"1\")\n             .env(\"CARGO_INCREMENTAL\", \"0\")\n             .arg(\"clippy\")\n             .args(&[\"-p\", \"subcrate\"])\n@@ -126,7 +123,6 @@ fn test_no_deps_ignores_path_deps_in_workspaces() {\n     let successful_build = || {\n         let output = Command::new(&*CLIPPY_PATH)\n             .current_dir(&cwd)\n-            .env(\"CLIPPY_DOGFOOD\", \"1\")\n             .env(\"CARGO_INCREMENTAL\", \"0\")\n             .arg(\"clippy\")\n             .args(&[\"-p\", \"subcrate\"])\n@@ -228,7 +224,6 @@ fn run_clippy_for_project(project: &str) {\n \n     command\n         .current_dir(root_dir.join(project))\n-        .env(\"CLIPPY_DOGFOOD\", \"1\")\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n         .arg(\"clippy\")\n         .arg(\"--all-targets\")"}]}