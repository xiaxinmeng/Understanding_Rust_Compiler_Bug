{"sha": "e47d631ca0eebb2e5b7f0d40230f78ba7b92592e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0N2Q2MzFjYTBlZWJiMmU1YjdmMGQ0MDIzMGY3OGJhN2I5MjU5MmU=", "commit": {"author": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-09T21:42:02Z"}, "committer": {"name": "Nadrieril", "email": "nadrieril+git@gmail.com", "date": "2019-11-15T16:49:42Z"}, "message": "Malformed range patterns can't happen thanks to E0030", "tree": {"sha": "ca39bb38d1c2dd3d9eb7c8134da9936e586b8402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca39bb38d1c2dd3d9eb7c8134da9936e586b8402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e47d631ca0eebb2e5b7f0d40230f78ba7b92592e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e47d631ca0eebb2e5b7f0d40230f78ba7b92592e", "html_url": "https://github.com/rust-lang/rust/commit/e47d631ca0eebb2e5b7f0d40230f78ba7b92592e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e47d631ca0eebb2e5b7f0d40230f78ba7b92592e/comments", "author": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nadrieril", "id": 6783654, "node_id": "MDQ6VXNlcjY3ODM2NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6783654?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nadrieril", "html_url": "https://github.com/Nadrieril", "followers_url": "https://api.github.com/users/Nadrieril/followers", "following_url": "https://api.github.com/users/Nadrieril/following{/other_user}", "gists_url": "https://api.github.com/users/Nadrieril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nadrieril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nadrieril/subscriptions", "organizations_url": "https://api.github.com/users/Nadrieril/orgs", "repos_url": "https://api.github.com/users/Nadrieril/repos", "events_url": "https://api.github.com/users/Nadrieril/events{/privacy}", "received_events_url": "https://api.github.com/users/Nadrieril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e5aadc350c016cdcfba2eaaaa4c4ff141dddab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e5aadc350c016cdcfba2eaaaa4c4ff141dddab5", "html_url": "https://github.com/rust-lang/rust/commit/3e5aadc350c016cdcfba2eaaaa4c4ff141dddab5"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "e3b0c5a5c69af07ee6b103d91ee96216691f3d2c", "filename": "src/librustc_mir/hair/pattern/_match.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e47d631ca0eebb2e5b7f0d40230f78ba7b92592e/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e47d631ca0eebb2e5b7f0d40230f78ba7b92592e/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2F_match.rs?ref=e47d631ca0eebb2e5b7f0d40230f78ba7b92592e", "patch": "@@ -1118,8 +1118,7 @@ fn all_constructors<'a, 'tcx>(\n     debug!(\"all_constructors({:?})\", pcx.ty);\n     let make_range = |start, end| {\n         IntRange(\n-            // `unwrap()` is ok because we know the type is an integer and the range is\n-            // well-formed.\n+            // `unwrap()` is ok because we know the type is an integer.\n             IntRange::from_range(cx.tcx, start, end, pcx.ty, &RangeEnd::Included, pcx.span)\n                 .unwrap(),\n         )\n@@ -1318,13 +1317,12 @@ impl<'tcx> IntRange<'tcx> {\n             // which makes the interval arithmetic simpler.\n             let bias = IntRange::signed_bias(tcx, ty);\n             let (lo, hi) = (lo ^ bias, hi ^ bias);\n-            // Make sure the interval is well-formed.\n-            if lo > hi || lo == hi && *end == RangeEnd::Excluded {\n-                None\n-            } else {\n-                let offset = (*end == RangeEnd::Excluded) as u128;\n-                Some(IntRange { range: lo..=(hi - offset), ty, span })\n+            let offset = (*end == RangeEnd::Excluded) as u128;\n+            if lo > hi || (lo == hi && *end == RangeEnd::Excluded) {\n+                // This hould have been caught earlier by E0030\n+                bug!(\"malformed range pattern: {}..={}\", lo, (hi - offset));\n             }\n+            Some(IntRange { range: lo..=(hi - offset), ty, span })\n         } else {\n             None\n         }"}]}