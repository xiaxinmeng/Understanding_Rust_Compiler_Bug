{"sha": "0eadeda94509ef8e15af539fb3ae771aa84c98ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYWRlZGE5NDUwOWVmOGUxNWFmNTM5ZmIzYWU3NzFhYTg0Yzk4YWQ=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-05T23:07:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-05T23:07:30Z"}, "message": "Rollup merge of #74000 - lcnr:lazy_normalisation_consts, r=varkor\n\nadd `lazy_normalization_consts` feature gate\n\nIn #71973 I underestimated the amount of code which is influenced by lazy normalization of consts\nand decided against having a separate feature flag for this.\n\nLooking a bit more into this, the following issues are already working with lazy norm in its current state #47814 #57739 #73980\n\nI therefore think it is worth it to enable lazy norm separately. Note that `#![feature(const_generics)]` still automatically activates\nthis feature, so using `#![feature(const_generics, lazy_normalization_consts)]` is redundant.\n\nr? @varkor @nikomatsakis", "tree": {"sha": "2abdfed4714ccdf20332c5bac424f780d0a844fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2abdfed4714ccdf20332c5bac424f780d0a844fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eadeda94509ef8e15af539fb3ae771aa84c98ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfAl0yCRBK7hj4Ov3rIwAAdHIIACouo7PB/vd4KdYFTyEVSWEf\n53iQVEBGwUggLWqjG4rU1X/Mcdp5x420p+TAtvFLRD+9v+X7E/i2TBx6IGvncY0w\nHhZusfI1CCe2Ls9iZzBpodsnNAq3xsgG9Bu5IpZyVTMeHlLhoHZo4ZtJl3NXOeQe\nA4wuPhbYnv9BTvR+c67XhAJmDudQ2mFUeI4mPkD3vadALY49WXn6elzsleT4drjq\nJCHsfpWnk78MtiAeMz8QqTJoIpwi8fubnnbcBe8aZGtpT8/g1v9oRzaaAtFXlIpf\nw4EumyXMUMEMLrln03oqnVY5xovrH/IUZOhIt8ZALsqP7w1Y3kxJ4/9NReYynA8=\n=ktJw\n-----END PGP SIGNATURE-----\n", "payload": "tree 2abdfed4714ccdf20332c5bac424f780d0a844fc\nparent e450646e97b09bda61c48cdfa902d1310fd8dc47\nparent 7a3081baaf81c1d924f3143479ec0c4a8f1e62b7\nauthor Manish Goregaokar <manishsmail@gmail.com> 1593990450 -0700\ncommitter GitHub <noreply@github.com> 1593990450 -0700\n\nRollup merge of #74000 - lcnr:lazy_normalisation_consts, r=varkor\n\nadd `lazy_normalization_consts` feature gate\n\nIn #71973 I underestimated the amount of code which is influenced by lazy normalization of consts\nand decided against having a separate feature flag for this.\n\nLooking a bit more into this, the following issues are already working with lazy norm in its current state #47814 #57739 #73980\n\nI therefore think it is worth it to enable lazy norm separately. Note that `#![feature(const_generics)]` still automatically activates\nthis feature, so using `#![feature(const_generics, lazy_normalization_consts)]` is redundant.\n\nr? @varkor @nikomatsakis\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eadeda94509ef8e15af539fb3ae771aa84c98ad", "html_url": "https://github.com/rust-lang/rust/commit/0eadeda94509ef8e15af539fb3ae771aa84c98ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eadeda94509ef8e15af539fb3ae771aa84c98ad/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e450646e97b09bda61c48cdfa902d1310fd8dc47", "url": "https://api.github.com/repos/rust-lang/rust/commits/e450646e97b09bda61c48cdfa902d1310fd8dc47", "html_url": "https://github.com/rust-lang/rust/commit/e450646e97b09bda61c48cdfa902d1310fd8dc47"}, {"sha": "7a3081baaf81c1d924f3143479ec0c4a8f1e62b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a3081baaf81c1d924f3143479ec0c4a8f1e62b7", "html_url": "https://github.com/rust-lang/rust/commit/7a3081baaf81c1d924f3143479ec0c4a8f1e62b7"}], "stats": {"total": 104, "additions": 103, "deletions": 1}, "files": [{"sha": "32481bf2b95746fb0330328e0560984ebf20ffdf", "filename": "src/librustc_feature/active.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Flibrustc_feature%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Flibrustc_feature%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_feature%2Factive.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -570,6 +570,9 @@ declare_features! (\n     /// Allows capturing variables in scope using format_args!\n     (active, format_args_capture, \"1.46.0\", Some(67984), None),\n \n+    /// Lazily evaluate constants. This allows constants to depend on type parameters.\n+    (active, lazy_normalization_consts, \"1.46.0\", Some(72219), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------\n@@ -586,5 +589,6 @@ pub const INCOMPLETE_FEATURES: &[Symbol] = &[\n     sym::raw_dylib,\n     sym::const_trait_impl,\n     sym::const_trait_bound_opt_out,\n+    sym::lazy_normalization_consts,\n     sym::specialization,\n ];"}, {"sha": "698bef4374545fd292de91e3cbda164dcec01289", "filename": "src/librustc_middle/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Flibrustc_middle%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fcontext.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -1370,7 +1370,7 @@ impl<'tcx> TyCtxt<'tcx> {\n     /// we still evaluate them eagerly.\n     #[inline]\n     pub fn lazy_normalization(self) -> bool {\n-        self.features().const_generics\n+        self.features().const_generics || self.features().lazy_normalization_consts\n     }\n \n     #[inline]"}, {"sha": "92afb7dab88c39c17f17ea4fccd8285fbacca5dd", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -459,6 +459,7 @@ symbols! {\n         label_break_value,\n         lang,\n         lang_items,\n+        lazy_normalization_consts,\n         lateout,\n         let_chains,\n         lhs,"}, {"sha": "048ed18c927bfa25e9a03b76cef939ac5c80f99d", "filename": "src/test/ui/const-generics/issue-71986.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Fconst-generics%2Fissue-71986.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Fconst-generics%2Fissue-71986.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissue-71986.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "previous_filename": "src/test/ui/const-generics/lazy-normalization/issue-71986.rs"}, {"sha": "44cb74815c6a04555c3a091281fd04275e7383ce", "filename": "src/test/ui/lazy_normalization_consts/feature-gate-lazy_normalization_consts.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Ffeature-gate-lazy_normalization_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Ffeature-gate-lazy_normalization_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy_normalization_consts%2Ffeature-gate-lazy_normalization_consts.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -0,0 +1,10 @@\n+pub const fn sof<T>() -> usize {\n+    10\n+}\n+\n+fn test<T>() {\n+    let _: [u8; sof::<T>()];\n+    //~^ ERROR the size for values of type `T`\n+}\n+\n+fn main() {}"}, {"sha": "6e19251c72800067151d91e803dfde45f56d515a", "filename": "src/test/ui/lazy_normalization_consts/feature-gate-lazy_normalization_consts.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Ffeature-gate-lazy_normalization_consts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Ffeature-gate-lazy_normalization_consts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy_normalization_consts%2Ffeature-gate-lazy_normalization_consts.stderr?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -0,0 +1,21 @@\n+error[E0277]: the size for values of type `T` cannot be known at compilation time\n+  --> $DIR/feature-gate-lazy_normalization_consts.rs:6:23\n+   |\n+LL | pub const fn sof<T>() -> usize {\n+   |                  - required by this bound in `sof`\n+...\n+LL | fn test<T>() {\n+   |         - this type parameter needs to be `std::marker::Sized`\n+LL |     let _: [u8; sof::<T>()];\n+   |                       ^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `T`\n+   = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n+help: consider relaxing the implicit `Sized` restriction\n+   |\n+LL | pub const fn sof<T: ?Sized>() -> usize {\n+   |                   ^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}, {"sha": "1fd0c45841b0d212dd195272e79887570c1f86df", "filename": "src/test/ui/lazy_normalization_consts/issue-47814.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-47814.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-47814.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-47814.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+#![feature(lazy_normalization_consts)]\n+#![allow(incomplete_features)]\n+pub struct ArpIPv4<'a> {\n+    _s: &'a u8\n+}\n+\n+impl<'a> ArpIPv4<'a> {\n+    const LENGTH: usize = 20;\n+\n+    pub fn to_buffer() -> [u8; Self::LENGTH] {\n+        unimplemented!()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "4607f3e99b51fd122aacfcb4390435215c10f991", "filename": "src/test/ui/lazy_normalization_consts/issue-57739.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-57739.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-57739.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-57739.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -0,0 +1,17 @@\n+#![feature(lazy_normalization_consts)]\n+//~^ WARN the feature `lazy_normalization_consts` is incomplete\n+trait ArraySizeTrait {\n+    const SIZE: usize = 0;\n+}\n+\n+impl<T: ?Sized> ArraySizeTrait for T {\n+    const SIZE: usize = 1;\n+}\n+\n+struct SomeArray<T: ArraySizeTrait> {\n+    array: [u8; T::SIZE],\n+    //~^ ERROR constant expression depends on a generic parameter\n+    phantom: std::marker::PhantomData<T>,\n+}\n+\n+fn main() {}"}, {"sha": "1987f5890c0411a700faf4bd8ff4921887e9bca0", "filename": "src/test/ui/lazy_normalization_consts/issue-57739.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-57739.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-57739.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-57739.stderr?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -0,0 +1,19 @@\n+warning: the feature `lazy_normalization_consts` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/issue-57739.rs:1:12\n+   |\n+LL | #![feature(lazy_normalization_consts)]\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(incomplete_features)]` on by default\n+   = note: see issue #72219 <https://github.com/rust-lang/rust/issues/72219> for more information\n+\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-57739.rs:12:5\n+   |\n+LL |     array: [u8; T::SIZE],\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to previous error; 1 warning emitted\n+"}, {"sha": "339b22c0b423d7ce4d7be33c10e1ba30a3a0f790", "filename": "src/test/ui/lazy_normalization_consts/issue-73980.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-73980.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eadeda94509ef8e15af539fb3ae771aa84c98ad/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-73980.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flazy_normalization_consts%2Fissue-73980.rs?ref=0eadeda94509ef8e15af539fb3ae771aa84c98ad", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+#![feature(lazy_normalization_consts)]\n+#![allow(incomplete_features)]\n+\n+pub struct X<P, Q>(P, Q);\n+pub struct L<T: ?Sized>(T);\n+\n+impl<T: ?Sized> L<T> {\n+    const S: usize = 1;\n+}\n+\n+impl<T> X<T, [u8; L::<T>::S]> {}\n+\n+fn main() {}"}]}