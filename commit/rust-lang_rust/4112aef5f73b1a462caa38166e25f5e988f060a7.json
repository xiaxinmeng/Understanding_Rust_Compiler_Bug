{"sha": "4112aef5f73b1a462caa38166e25f5e988f060a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMTJhZWY1ZjczYjFhNDYyY2FhMzgxNjZlMjVmNWU5ODhmMDYwYTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-01-14T10:31:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-01-14T10:31:54Z"}, "message": "Rollup merge of #57556 - petrochenkov:privexist, r=arielb1\n\nprivacy: Fix private-in-public check for existential types\n\nFixes https://github.com/rust-lang/rust/issues/53546 (regression from https://github.com/rust-lang/rust/pull/56878)\n\nr? @arielb1", "tree": {"sha": "12f3a04be86647708c4b5a4bda8db71994d9521d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12f3a04be86647708c4b5a4bda8db71994d9521d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4112aef5f73b1a462caa38166e25f5e988f060a7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcPGUaCRBK7hj4Ov3rIwAAdHIIAGB2Xs/91Ce8Ux5aBlTuDMZ2\nS/oEAWEzrhUNbv1suzHVcq7DzU4AvSc89YBziP47KnuNQigKT92rz4wRQf4c8Sbw\ndBd6ATqZsulSzU3yFWJG7rrebSZHQ7JgjjAG5L9Jvw04vvW7xkZKSi6P+Qh5hPwQ\nkWIAhzXvsT4B35lKHb8mSWkXYEHPf1pS45x/DN00MS/kCSbSTFB28LvEpl9t1Azs\nt7THK6lBL6WUbUfw0ZhgzbxPK45PeSzUiWkzqYpXdkKnpV4/HBKsg+6VV2QAXQIO\n0M4ik5qmPmS1NIV8xj8D+gAA7ljW+6ul3me/PMQQC+PZXfSczytjRRQw2WimKVY=\n=10f2\n-----END PGP SIGNATURE-----\n", "payload": "tree 12f3a04be86647708c4b5a4bda8db71994d9521d\nparent 0b7d8f99ed843cbb31989d0635a8c6651c28df38\nparent f8028b0b6c3c5c1d6498cf780366641a7c047abf\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1547461914 +0100\ncommitter GitHub <noreply@github.com> 1547461914 +0100\n\nRollup merge of #57556 - petrochenkov:privexist, r=arielb1\n\nprivacy: Fix private-in-public check for existential types\n\nFixes https://github.com/rust-lang/rust/issues/53546 (regression from https://github.com/rust-lang/rust/pull/56878)\n\nr? @arielb1\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4112aef5f73b1a462caa38166e25f5e988f060a7", "html_url": "https://github.com/rust-lang/rust/commit/4112aef5f73b1a462caa38166e25f5e988f060a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4112aef5f73b1a462caa38166e25f5e988f060a7/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b7d8f99ed843cbb31989d0635a8c6651c28df38", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b7d8f99ed843cbb31989d0635a8c6651c28df38", "html_url": "https://github.com/rust-lang/rust/commit/0b7d8f99ed843cbb31989d0635a8c6651c28df38"}, {"sha": "f8028b0b6c3c5c1d6498cf780366641a7c047abf", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8028b0b6c3c5c1d6498cf780366641a7c047abf", "html_url": "https://github.com/rust-lang/rust/commit/f8028b0b6c3c5c1d6498cf780366641a7c047abf"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "4890369e13f2022975efea48ada74c49e40d473c", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4112aef5f73b1a462caa38166e25f5e988f060a7/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4112aef5f73b1a462caa38166e25f5e988f060a7/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=4112aef5f73b1a462caa38166e25f5e988f060a7", "patch": "@@ -48,7 +48,7 @@ mod diagnostics;\n /// Default type visitor (`TypeVisitor`) does most of the job, but it has some shortcomings.\n /// First, it doesn't have overridable `fn visit_trait_ref`, so we have to catch trait def-ids\n /// manually. Second, it doesn't visit some type components like signatures of fn types, or traits\n-/// in `impl Trait`, see individual commits in `DefIdVisitorSkeleton::visit_ty`.\n+/// in `impl Trait`, see individual comments in `DefIdVisitorSkeleton::visit_ty`.\n trait DefIdVisitor<'a, 'tcx: 'a> {\n     fn tcx(&self) -> TyCtxt<'a, 'tcx, 'tcx>;\n     fn shallow(&self) -> bool { false }\n@@ -1579,10 +1579,15 @@ impl<'a, 'tcx> Visitor<'tcx> for PrivateItemsInPublicInterfacesVisitor<'a, 'tcx>\n             // No subitems.\n             hir::ItemKind::GlobalAsm(..) => {}\n             // Subitems of these items have inherited publicity.\n-            hir::ItemKind::Const(..) | hir::ItemKind::Static(..) | hir::ItemKind::Fn(..) |\n-            hir::ItemKind::Existential(..) | hir::ItemKind::Ty(..) => {\n+            hir::ItemKind::Const(..) | hir::ItemKind::Static(..) |\n+            hir::ItemKind::Fn(..) | hir::ItemKind::Ty(..) => {\n                 self.check(item.id, item_visibility).generics().predicates().ty();\n             }\n+            hir::ItemKind::Existential(..) => {\n+                // `ty()` for existential types is the underlying type,\n+                // it's not a part of interface, so we skip it.\n+                self.check(item.id, item_visibility).generics().predicates();\n+            }\n             hir::ItemKind::Trait(.., ref trait_item_refs) => {\n                 self.check(item.id, item_visibility).generics().predicates();\n "}, {"sha": "95658f45df6f5509db8f1f3f10a7362762670388", "filename": "src/test/ui/privacy/private-in-public-existential.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4112aef5f73b1a462caa38166e25f5e988f060a7/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-existential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4112aef5f73b1a462caa38166e25f5e988f060a7/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-existential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivate-in-public-existential.rs?ref=4112aef5f73b1a462caa38166e25f5e988f060a7", "patch": "@@ -0,0 +1,15 @@\n+// compile-pass\n+\n+#![feature(existential_type)]\n+#![deny(private_in_public)]\n+\n+pub existential type Pub: Default;\n+\n+#[derive(Default)]\n+struct Priv;\n+\n+fn check() -> Pub {\n+    Priv\n+}\n+\n+fn main() {}"}]}