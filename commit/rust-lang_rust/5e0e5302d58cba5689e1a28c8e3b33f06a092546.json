{"sha": "5e0e5302d58cba5689e1a28c8e3b33f06a092546", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMGU1MzAyZDU4Y2JhNTY4OWUxYTI4YzhlM2IzM2YwNmEwOTI1NDY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-09T11:48:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-09T11:48:08Z"}, "message": "Merge #7932\n\n7932: Make code less surprising r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "81f1e2f9f9d3366695bfba9642c1ce09ad541f4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81f1e2f9f9d3366695bfba9642c1ce09ad541f4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e0e5302d58cba5689e1a28c8e3b33f06a092546", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgR2B4CRBK7hj4Ov3rIwAAdHIIAF8nzDm4wHHI4ZAxDwr9iEcf\nshZZrGkBL6n/ct5DrCJvJD0rTIROZxFEHBmSuz/cCdQyAue5vIrpKIePRPBNyNu2\nXuRSCEnZ4Z7cMaz67mIwk9k7X476GbDf6TYw/3myJbkpAXyxBxK+haKvO46mjvQ8\niXVK3LhUj6IEssZ87KaytEb1gkEP7UYLFG+O+DsoD+VIr7WEKvrcRjDrNVOX+4yZ\n4fa8vns+9uKoKRGS+XQ/sxXGE3GbMHK+XXcuY5AVT83J09WZqAiBhQpgWvPErjkj\nTLbEwaXeHHsh4e2bY1MQa6FPTch87Xxx95OpdQdt94FZG3LxtVI6k2FTcsiI5JU=\n=V2fE\n-----END PGP SIGNATURE-----\n", "payload": "tree 81f1e2f9f9d3366695bfba9642c1ce09ad541f4a\nparent ffba4c0dce336346471219ed03941295db37167f\nparent 37b7b5682119c94c282cce85a9ac2783957c50d4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1615290488 +0000\ncommitter GitHub <noreply@github.com> 1615290488 +0000\n\nMerge #7932\n\n7932: Make code less surprising r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e0e5302d58cba5689e1a28c8e3b33f06a092546", "html_url": "https://github.com/rust-lang/rust/commit/5e0e5302d58cba5689e1a28c8e3b33f06a092546", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e0e5302d58cba5689e1a28c8e3b33f06a092546/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffba4c0dce336346471219ed03941295db37167f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffba4c0dce336346471219ed03941295db37167f", "html_url": "https://github.com/rust-lang/rust/commit/ffba4c0dce336346471219ed03941295db37167f"}, {"sha": "37b7b5682119c94c282cce85a9ac2783957c50d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/37b7b5682119c94c282cce85a9ac2783957c50d4", "html_url": "https://github.com/rust-lang/rust/commit/37b7b5682119c94c282cce85a9ac2783957c50d4"}], "stats": {"total": 408, "additions": 310, "deletions": 98}, "files": [{"sha": "25df1355460529f173e46e5a0fe841c0bc158ca1", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 21, "deletions": 17, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5e0e5302d58cba5689e1a28c8e3b33f06a092546/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e0e5302d58cba5689e1a28c8e3b33f06a092546/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=5e0e5302d58cba5689e1a28c8e3b33f06a092546", "patch": "@@ -16,7 +16,6 @@ use ide_db::helpers::{\n     insert_use::{InsertUseConfig, MergeBehavior},\n     SnippetCap,\n };\n-use itertools::Itertools;\n use lsp_types::{ClientCapabilities, MarkupKind};\n use project_model::{CargoConfig, ProjectJson, ProjectJsonData, ProjectManifest, RustcSource};\n use rustc_hash::FxHashSet;\n@@ -98,13 +97,15 @@ config_data! {\n         diagnostics_enableExperimental: bool    = \"true\",\n         /// List of rust-analyzer diagnostics to disable.\n         diagnostics_disabled: FxHashSet<String> = \"[]\",\n-        /// List of warnings that should be displayed with info severity.\\n\\nThe\n-        /// warnings will be indicated by a blue squiggly underline in code and\n-        /// a blue icon in the `Problems Panel`.\n+        /// List of warnings that should be displayed with info severity.\n+        ///\n+        /// The warnings will be indicated by a blue squiggly underline in code\n+        /// and a blue icon in the `Problems Panel`.\n         diagnostics_warningsAsHint: Vec<String> = \"[]\",\n-        /// List of warnings that should be displayed with hint severity.\\n\\nThe\n-        /// warnings will be indicated by faded text or three dots in code and\n-        /// will not show up in the `Problems Panel`.\n+        /// List of warnings that should be displayed with hint severity.\n+        ///\n+        /// The warnings will be indicated by faded text or three dots in code\n+        /// and will not show up in the `Problems Panel`.\n         diagnostics_warningsAsInfo: Vec<String> = \"[]\",\n \n         /// Controls file watching implementation.\n@@ -158,7 +159,9 @@ config_data! {\n         lens_references: bool = \"false\",\n \n         /// Disable project auto-discovery in favor of explicitly specified set\n-        /// of projects.\\n\\nElements must be paths pointing to `Cargo.toml`,\n+        /// of projects.\n+        ///\n+        /// Elements must be paths pointing to `Cargo.toml`,\n         /// `rust-project.json`, or JSON objects in `rust-project.json` format.\n         linkedProjects: Vec<ManifestOrProjectJson> = \"[]\",\n \n@@ -177,7 +180,7 @@ config_data! {\n         /// Command to be executed instead of 'cargo' for runnables.\n         runnables_overrideCargo: Option<String> = \"null\",\n         /// Additional arguments to be passed to cargo for runnables such as\n-        /// tests or binaries.\\nFor example, it may be `--release`.\n+        /// tests or binaries. For example, it may be `--release`.\n         runnables_cargoExtraArgs: Vec<String>   = \"[]\",\n \n         /// Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\n@@ -765,7 +768,8 @@ fn schema(fields: &[(&'static str, &'static str, &[&str], &str)]) -> serde_json:\n }\n \n fn field_props(field: &str, ty: &str, doc: &[&str], default: &str) -> serde_json::Value {\n-    let doc = doc.iter().map(|it| it.trim()).join(\" \");\n+    let doc = doc_comment_to_string(doc);\n+    let doc = doc.trim_end_matches('\\n');\n     assert!(\n         doc.ends_with('.') && doc.starts_with(char::is_uppercase),\n         \"bad docs for {}: {:?}\",\n@@ -854,11 +858,16 @@ fn manual(fields: &[(&'static str, &'static str, &[&str], &str)]) -> String {\n         .iter()\n         .map(|(field, _ty, doc, default)| {\n             let name = format!(\"rust-analyzer.{}\", field.replace(\"_\", \".\"));\n-            format!(\"[[{}]]{} (default: `{}`)::\\n{}\\n\", name, name, default, doc.join(\" \"))\n+            let doc = doc_comment_to_string(*doc);\n+            format!(\"[[{}]]{} (default: `{}`)::\\n+\\n--\\n{}--\\n\", name, name, default, doc)\n         })\n         .collect::<String>()\n }\n \n+fn doc_comment_to_string(doc: &[&str]) -> String {\n+    doc.iter().map(|it| it.strip_prefix(' ').unwrap_or(it)).map(|it| format!(\"{}\\n\", it)).collect()\n+}\n+\n #[cfg(test)]\n mod tests {\n     use std::fs;\n@@ -901,13 +910,8 @@ mod tests {\n     #[test]\n     fn generate_config_documentation() {\n         let docs_path = project_root().join(\"docs/user/generated_config.adoc\");\n-        let current = fs::read_to_string(&docs_path).unwrap();\n         let expected = ConfigData::manual();\n-\n-        if remove_ws(&current) != remove_ws(&expected) {\n-            fs::write(&docs_path, expected).unwrap();\n-            panic!(\"updated config manual\");\n-        }\n+        ensure_file_contents(&docs_path, &expected);\n     }\n \n     fn remove_ws(text: &str) -> String {"}, {"sha": "042ba2d54c0db3d61a2f21fd9cb5cb95d139d115", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 265, "deletions": 57, "changes": 322, "blob_url": "https://github.com/rust-lang/rust/blob/5e0e5302d58cba5689e1a28c8e3b33f06a092546/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/5e0e5302d58cba5689e1a28c8e3b33f06a092546/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=5e0e5302d58cba5689e1a28c8e3b33f06a092546", "patch": "@@ -1,114 +1,322 @@\n [[rust-analyzer.assist.importMergeBehavior]]rust-analyzer.assist.importMergeBehavior (default: `\"full\"`)::\n- The strategy to use when inserting new imports or merging imports.\n++\n+--\n+The strategy to use when inserting new imports or merging imports.\n+--\n [[rust-analyzer.assist.importPrefix]]rust-analyzer.assist.importPrefix (default: `\"plain\"`)::\n- The path structure for newly inserted paths to use.\n++\n+--\n+The path structure for newly inserted paths to use.\n+--\n [[rust-analyzer.assist.importGroup]]rust-analyzer.assist.importGroup (default: `true`)::\n- Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.\n++\n+--\n+Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.\n+--\n [[rust-analyzer.callInfo.full]]rust-analyzer.callInfo.full (default: `true`)::\n- Show function name and docs in parameter hints.\n++\n+--\n+Show function name and docs in parameter hints.\n+--\n [[rust-analyzer.cargo.autoreload]]rust-analyzer.cargo.autoreload (default: `true`)::\n- Automatically refresh project info via `cargo metadata` on  `Cargo.toml` changes.\n++\n+--\n+Automatically refresh project info via `cargo metadata` on\n+`Cargo.toml` changes.\n+--\n [[rust-analyzer.cargo.allFeatures]]rust-analyzer.cargo.allFeatures (default: `false`)::\n- Activate all available features (`--all-features`).\n++\n+--\n+Activate all available features (`--all-features`).\n+--\n [[rust-analyzer.cargo.features]]rust-analyzer.cargo.features (default: `[]`)::\n- List of features to activate.\n++\n+--\n+List of features to activate.\n+--\n [[rust-analyzer.cargo.runBuildScripts]]rust-analyzer.cargo.runBuildScripts (default: `true`)::\n- Run build scripts (`build.rs`) for more precise code analysis.\n++\n+--\n+Run build scripts (`build.rs`) for more precise code analysis.\n+--\n [[rust-analyzer.cargo.noDefaultFeatures]]rust-analyzer.cargo.noDefaultFeatures (default: `false`)::\n- Do not activate the `default` feature.\n++\n+--\n+Do not activate the `default` feature.\n+--\n [[rust-analyzer.cargo.target]]rust-analyzer.cargo.target (default: `null`)::\n- Compilation target (target triple).\n++\n+--\n+Compilation target (target triple).\n+--\n [[rust-analyzer.cargo.noSysroot]]rust-analyzer.cargo.noSysroot (default: `false`)::\n- Internal config for debugging, disables loading of sysroot crates.\n++\n+--\n+Internal config for debugging, disables loading of sysroot crates.\n+--\n [[rust-analyzer.checkOnSave.enable]]rust-analyzer.checkOnSave.enable (default: `true`)::\n- Run specified `cargo check` command for diagnostics on save.\n++\n+--\n+Run specified `cargo check` command for diagnostics on save.\n+--\n [[rust-analyzer.checkOnSave.allFeatures]]rust-analyzer.checkOnSave.allFeatures (default: `null`)::\n- Check with all features (`--all-features`).  Defaults to `#rust-analyzer.cargo.allFeatures#`.\n++\n+--\n+Check with all features (`--all-features`).\n+Defaults to `#rust-analyzer.cargo.allFeatures#`.\n+--\n [[rust-analyzer.checkOnSave.allTargets]]rust-analyzer.checkOnSave.allTargets (default: `true`)::\n- Check all targets and tests (`--all-targets`).\n++\n+--\n+Check all targets and tests (`--all-targets`).\n+--\n [[rust-analyzer.checkOnSave.command]]rust-analyzer.checkOnSave.command (default: `\"check\"`)::\n- Cargo command to use for `cargo check`.\n++\n+--\n+Cargo command to use for `cargo check`.\n+--\n [[rust-analyzer.checkOnSave.noDefaultFeatures]]rust-analyzer.checkOnSave.noDefaultFeatures (default: `null`)::\n- Do not activate the `default` feature.\n++\n+--\n+Do not activate the `default` feature.\n+--\n [[rust-analyzer.checkOnSave.target]]rust-analyzer.checkOnSave.target (default: `null`)::\n- Check for a specific target. Defaults to  `#rust-analyzer.cargo.target#`.\n++\n+--\n+Check for a specific target. Defaults to\n+`#rust-analyzer.cargo.target#`.\n+--\n [[rust-analyzer.checkOnSave.extraArgs]]rust-analyzer.checkOnSave.extraArgs (default: `[]`)::\n- Extra arguments for `cargo check`.\n++\n+--\n+Extra arguments for `cargo check`.\n+--\n [[rust-analyzer.checkOnSave.features]]rust-analyzer.checkOnSave.features (default: `null`)::\n- List of features to activate. Defaults to  `#rust-analyzer.cargo.features#`.\n++\n+--\n+List of features to activate. Defaults to\n+`#rust-analyzer.cargo.features#`.\n+--\n [[rust-analyzer.checkOnSave.overrideCommand]]rust-analyzer.checkOnSave.overrideCommand (default: `null`)::\n- Advanced option, fully override the command rust-analyzer uses for  checking. The command should include `--message-format=json` or  similar option.\n++\n+--\n+Advanced option, fully override the command rust-analyzer uses for\n+checking. The command should include `--message-format=json` or\n+similar option.\n+--\n [[rust-analyzer.completion.addCallArgumentSnippets]]rust-analyzer.completion.addCallArgumentSnippets (default: `true`)::\n- Whether to add argument snippets when completing functions.\n++\n+--\n+Whether to add argument snippets when completing functions.\n+--\n [[rust-analyzer.completion.addCallParenthesis]]rust-analyzer.completion.addCallParenthesis (default: `true`)::\n- Whether to add parenthesis when completing functions.\n++\n+--\n+Whether to add parenthesis when completing functions.\n+--\n [[rust-analyzer.completion.postfix.enable]]rust-analyzer.completion.postfix.enable (default: `true`)::\n- Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\n++\n+--\n+Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\n+--\n [[rust-analyzer.completion.autoimport.enable]]rust-analyzer.completion.autoimport.enable (default: `true`)::\n- Toggles the additional completions that automatically add imports when completed.  Note that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.\n++\n+--\n+Toggles the additional completions that automatically add imports when completed.\n+Note that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.\n+--\n [[rust-analyzer.diagnostics.enable]]rust-analyzer.diagnostics.enable (default: `true`)::\n- Whether to show native rust-analyzer diagnostics.\n++\n+--\n+Whether to show native rust-analyzer diagnostics.\n+--\n [[rust-analyzer.diagnostics.enableExperimental]]rust-analyzer.diagnostics.enableExperimental (default: `true`)::\n- Whether to show experimental rust-analyzer diagnostics that might  have more false positives than usual.\n++\n+--\n+Whether to show experimental rust-analyzer diagnostics that might\n+have more false positives than usual.\n+--\n [[rust-analyzer.diagnostics.disabled]]rust-analyzer.diagnostics.disabled (default: `[]`)::\n- List of rust-analyzer diagnostics to disable.\n++\n+--\n+List of rust-analyzer diagnostics to disable.\n+--\n [[rust-analyzer.diagnostics.warningsAsHint]]rust-analyzer.diagnostics.warningsAsHint (default: `[]`)::\n- List of warnings that should be displayed with info severity.\\n\\nThe  warnings will be indicated by a blue squiggly underline in code and  a blue icon in the `Problems Panel`.\n++\n+--\n+List of warnings that should be displayed with info severity.\n+\n+The warnings will be indicated by a blue squiggly underline in code\n+and a blue icon in the `Problems Panel`.\n+--\n [[rust-analyzer.diagnostics.warningsAsInfo]]rust-analyzer.diagnostics.warningsAsInfo (default: `[]`)::\n- List of warnings that should be displayed with hint severity.\\n\\nThe  warnings will be indicated by faded text or three dots in code and  will not show up in the `Problems Panel`.\n++\n+--\n+List of warnings that should be displayed with hint severity.\n+\n+The warnings will be indicated by faded text or three dots in code\n+and will not show up in the `Problems Panel`.\n+--\n [[rust-analyzer.files.watcher]]rust-analyzer.files.watcher (default: `\"client\"`)::\n- Controls file watching implementation.\n++\n+--\n+Controls file watching implementation.\n+--\n [[rust-analyzer.files.excludeDirs]]rust-analyzer.files.excludeDirs (default: `[]`)::\n- These directories will be ignored by rust-analyzer.\n++\n+--\n+These directories will be ignored by rust-analyzer.\n+--\n [[rust-analyzer.hoverActions.debug]]rust-analyzer.hoverActions.debug (default: `true`)::\n- Whether to show `Debug` action. Only applies when  `#rust-analyzer.hoverActions.enable#` is set.\n++\n+--\n+Whether to show `Debug` action. Only applies when\n+`#rust-analyzer.hoverActions.enable#` is set.\n+--\n [[rust-analyzer.hoverActions.enable]]rust-analyzer.hoverActions.enable (default: `true`)::\n- Whether to show HoverActions in Rust files.\n++\n+--\n+Whether to show HoverActions in Rust files.\n+--\n [[rust-analyzer.hoverActions.gotoTypeDef]]rust-analyzer.hoverActions.gotoTypeDef (default: `true`)::\n- Whether to show `Go to Type Definition` action. Only applies when  `#rust-analyzer.hoverActions.enable#` is set.\n++\n+--\n+Whether to show `Go to Type Definition` action. Only applies when\n+`#rust-analyzer.hoverActions.enable#` is set.\n+--\n [[rust-analyzer.hoverActions.implementations]]rust-analyzer.hoverActions.implementations (default: `true`)::\n- Whether to show `Implementations` action. Only applies when  `#rust-analyzer.hoverActions.enable#` is set.\n++\n+--\n+Whether to show `Implementations` action. Only applies when\n+`#rust-analyzer.hoverActions.enable#` is set.\n+--\n [[rust-analyzer.hoverActions.run]]rust-analyzer.hoverActions.run (default: `true`)::\n- Whether to show `Run` action. Only applies when  `#rust-analyzer.hoverActions.enable#` is set.\n++\n+--\n+Whether to show `Run` action. Only applies when\n+`#rust-analyzer.hoverActions.enable#` is set.\n+--\n [[rust-analyzer.hoverActions.linksInHover]]rust-analyzer.hoverActions.linksInHover (default: `true`)::\n- Use markdown syntax for links in hover.\n++\n+--\n+Use markdown syntax for links in hover.\n+--\n [[rust-analyzer.inlayHints.chainingHints]]rust-analyzer.inlayHints.chainingHints (default: `true`)::\n- Whether to show inlay type hints for method chains.\n++\n+--\n+Whether to show inlay type hints for method chains.\n+--\n [[rust-analyzer.inlayHints.maxLength]]rust-analyzer.inlayHints.maxLength (default: `null`)::\n- Maximum length for inlay hints. Default is unlimited.\n++\n+--\n+Maximum length for inlay hints. Default is unlimited.\n+--\n [[rust-analyzer.inlayHints.parameterHints]]rust-analyzer.inlayHints.parameterHints (default: `true`)::\n- Whether to show function parameter name inlay hints at the call  site.\n++\n+--\n+Whether to show function parameter name inlay hints at the call\n+site.\n+--\n [[rust-analyzer.inlayHints.typeHints]]rust-analyzer.inlayHints.typeHints (default: `true`)::\n- Whether to show inlay type hints for variables.\n++\n+--\n+Whether to show inlay type hints for variables.\n+--\n [[rust-analyzer.lens.debug]]rust-analyzer.lens.debug (default: `true`)::\n- Whether to show `Debug` lens. Only applies when  `#rust-analyzer.lens.enable#` is set.\n++\n+--\n+Whether to show `Debug` lens. Only applies when\n+`#rust-analyzer.lens.enable#` is set.\n+--\n [[rust-analyzer.lens.enable]]rust-analyzer.lens.enable (default: `true`)::\n- Whether to show CodeLens in Rust files.\n++\n+--\n+Whether to show CodeLens in Rust files.\n+--\n [[rust-analyzer.lens.implementations]]rust-analyzer.lens.implementations (default: `true`)::\n- Whether to show `Implementations` lens. Only applies when  `#rust-analyzer.lens.enable#` is set.\n++\n+--\n+Whether to show `Implementations` lens. Only applies when\n+`#rust-analyzer.lens.enable#` is set.\n+--\n [[rust-analyzer.lens.run]]rust-analyzer.lens.run (default: `true`)::\n- Whether to show `Run` lens. Only applies when  `#rust-analyzer.lens.enable#` is set.\n++\n+--\n+Whether to show `Run` lens. Only applies when\n+`#rust-analyzer.lens.enable#` is set.\n+--\n [[rust-analyzer.lens.methodReferences]]rust-analyzer.lens.methodReferences (default: `false`)::\n- Whether to show `Method References` lens. Only applies when  `#rust-analyzer.lens.enable#` is set.\n++\n+--\n+Whether to show `Method References` lens. Only applies when\n+`#rust-analyzer.lens.enable#` is set.\n+--\n [[rust-analyzer.lens.references]]rust-analyzer.lens.references (default: `false`)::\n- Whether to show `References` lens. Only applies when  `#rust-analyzer.lens.enable#` is set.\n++\n+--\n+Whether to show `References` lens. Only applies when\n+`#rust-analyzer.lens.enable#` is set.\n+--\n [[rust-analyzer.linkedProjects]]rust-analyzer.linkedProjects (default: `[]`)::\n- Disable project auto-discovery in favor of explicitly specified set  of projects.\\n\\nElements must be paths pointing to `Cargo.toml`,  `rust-project.json`, or JSON objects in `rust-project.json` format.\n++\n+--\n+Disable project auto-discovery in favor of explicitly specified set\n+of projects.\n+\n+Elements must be paths pointing to `Cargo.toml`,\n+`rust-project.json`, or JSON objects in `rust-project.json` format.\n+--\n [[rust-analyzer.lruCapacity]]rust-analyzer.lruCapacity (default: `null`)::\n- Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.\n++\n+--\n+Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.\n+--\n [[rust-analyzer.notifications.cargoTomlNotFound]]rust-analyzer.notifications.cargoTomlNotFound (default: `true`)::\n- Whether to show `can't find Cargo.toml` error message.\n++\n+--\n+Whether to show `can't find Cargo.toml` error message.\n+--\n [[rust-analyzer.procMacro.enable]]rust-analyzer.procMacro.enable (default: `false`)::\n- Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\n++\n+--\n+Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.\n+--\n [[rust-analyzer.procMacro.server]]rust-analyzer.procMacro.server (default: `null`)::\n- Internal config, path to proc-macro server executable (typically,  this is rust-analyzer itself, but we override this in tests).\n++\n+--\n+Internal config, path to proc-macro server executable (typically,\n+this is rust-analyzer itself, but we override this in tests).\n+--\n [[rust-analyzer.runnables.overrideCargo]]rust-analyzer.runnables.overrideCargo (default: `null`)::\n- Command to be executed instead of 'cargo' for runnables.\n++\n+--\n+Command to be executed instead of 'cargo' for runnables.\n+--\n [[rust-analyzer.runnables.cargoExtraArgs]]rust-analyzer.runnables.cargoExtraArgs (default: `[]`)::\n- Additional arguments to be passed to cargo for runnables such as  tests or binaries.\\nFor example, it may be `--release`.\n++\n+--\n+Additional arguments to be passed to cargo for runnables such as\n+tests or binaries. For example, it may be `--release`.\n+--\n [[rust-analyzer.rustcSource]]rust-analyzer.rustcSource (default: `null`)::\n- Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private  projects, or \"discover\" to try to automatically find it.   Any project which uses rust-analyzer with the rustcPrivate  crates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.   This option is not reloaded automatically; you must restart rust-analyzer for it to take effect.\n++\n+--\n+Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\n+projects, or \"discover\" to try to automatically find it.\n+\n+Any project which uses rust-analyzer with the rustcPrivate\n+crates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n+\n+This option is not reloaded automatically; you must restart rust-analyzer for it to take effect.\n+--\n [[rust-analyzer.rustfmt.extraArgs]]rust-analyzer.rustfmt.extraArgs (default: `[]`)::\n- Additional arguments to `rustfmt`.\n++\n+--\n+Additional arguments to `rustfmt`.\n+--\n [[rust-analyzer.rustfmt.overrideCommand]]rust-analyzer.rustfmt.overrideCommand (default: `null`)::\n- Advanced option, fully override the command rust-analyzer uses for  formatting.\n++\n+--\n+Advanced option, fully override the command rust-analyzer uses for\n+formatting.\n+--"}, {"sha": "b29f006f07124d3442263e204eea790b3564b8c0", "filename": "editors/code/package.json", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/5e0e5302d58cba5689e1a28c8e3b33f06a092546/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/5e0e5302d58cba5689e1a28c8e3b33f06a092546/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=5e0e5302d58cba5689e1a28c8e3b33f06a092546", "patch": "@@ -397,7 +397,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.cargo.autoreload\": {\n-                    \"markdownDescription\": \"Automatically refresh project info via `cargo metadata` on `Cargo.toml` changes.\",\n+                    \"markdownDescription\": \"Automatically refresh project info via `cargo metadata` on\\n`Cargo.toml` changes.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -443,7 +443,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.checkOnSave.allFeatures\": {\n-                    \"markdownDescription\": \"Check with all features (`--all-features`). Defaults to `#rust-analyzer.cargo.allFeatures#`.\",\n+                    \"markdownDescription\": \"Check with all features (`--all-features`).\\nDefaults to `#rust-analyzer.cargo.allFeatures#`.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\",\n@@ -469,7 +469,7 @@\n                     ]\n                 },\n                 \"rust-analyzer.checkOnSave.target\": {\n-                    \"markdownDescription\": \"Check for a specific target. Defaults to `#rust-analyzer.cargo.target#`.\",\n+                    \"markdownDescription\": \"Check for a specific target. Defaults to\\n`#rust-analyzer.cargo.target#`.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\",\n@@ -485,7 +485,7 @@\n                     }\n                 },\n                 \"rust-analyzer.checkOnSave.features\": {\n-                    \"markdownDescription\": \"List of features to activate. Defaults to `#rust-analyzer.cargo.features#`.\",\n+                    \"markdownDescription\": \"List of features to activate. Defaults to\\n`#rust-analyzer.cargo.features#`.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\",\n@@ -496,7 +496,7 @@\n                     }\n                 },\n                 \"rust-analyzer.checkOnSave.overrideCommand\": {\n-                    \"markdownDescription\": \"Advanced option, fully override the command rust-analyzer uses for checking. The command should include `--message-format=json` or similar option.\",\n+                    \"markdownDescription\": \"Advanced option, fully override the command rust-analyzer uses for\\nchecking. The command should include `--message-format=json` or\\nsimilar option.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\",\n@@ -522,7 +522,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.completion.autoimport.enable\": {\n-                    \"markdownDescription\": \"Toggles the additional completions that automatically add imports when completed. Note that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.\",\n+                    \"markdownDescription\": \"Toggles the additional completions that automatically add imports when completed.\\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -532,7 +532,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.diagnostics.enableExperimental\": {\n-                    \"markdownDescription\": \"Whether to show experimental rust-analyzer diagnostics that might have more false positives than usual.\",\n+                    \"markdownDescription\": \"Whether to show experimental rust-analyzer diagnostics that might\\nhave more false positives than usual.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -546,15 +546,15 @@\n                     \"uniqueItems\": true\n                 },\n                 \"rust-analyzer.diagnostics.warningsAsHint\": {\n-                    \"markdownDescription\": \"List of warnings that should be displayed with info severity.\\\\n\\\\nThe warnings will be indicated by a blue squiggly underline in code and a blue icon in the `Problems Panel`.\",\n+                    \"markdownDescription\": \"List of warnings that should be displayed with info severity.\\n\\nThe warnings will be indicated by a blue squiggly underline in code\\nand a blue icon in the `Problems Panel`.\",\n                     \"default\": [],\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     }\n                 },\n                 \"rust-analyzer.diagnostics.warningsAsInfo\": {\n-                    \"markdownDescription\": \"List of warnings that should be displayed with hint severity.\\\\n\\\\nThe warnings will be indicated by faded text or three dots in code and will not show up in the `Problems Panel`.\",\n+                    \"markdownDescription\": \"List of warnings that should be displayed with hint severity.\\n\\nThe warnings will be indicated by faded text or three dots in code\\nand will not show up in the `Problems Panel`.\",\n                     \"default\": [],\n                     \"type\": \"array\",\n                     \"items\": {\n@@ -575,7 +575,7 @@\n                     }\n                 },\n                 \"rust-analyzer.hoverActions.debug\": {\n-                    \"markdownDescription\": \"Whether to show `Debug` action. Only applies when `#rust-analyzer.hoverActions.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Debug` action. Only applies when\\n`#rust-analyzer.hoverActions.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -585,17 +585,17 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.hoverActions.gotoTypeDef\": {\n-                    \"markdownDescription\": \"Whether to show `Go to Type Definition` action. Only applies when `#rust-analyzer.hoverActions.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Go to Type Definition` action. Only applies when\\n`#rust-analyzer.hoverActions.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.hoverActions.implementations\": {\n-                    \"markdownDescription\": \"Whether to show `Implementations` action. Only applies when `#rust-analyzer.hoverActions.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Implementations` action. Only applies when\\n`#rust-analyzer.hoverActions.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.hoverActions.run\": {\n-                    \"markdownDescription\": \"Whether to show `Run` action. Only applies when `#rust-analyzer.hoverActions.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Run` action. Only applies when\\n`#rust-analyzer.hoverActions.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -619,7 +619,7 @@\n                     \"minimum\": 0\n                 },\n                 \"rust-analyzer.inlayHints.parameterHints\": {\n-                    \"markdownDescription\": \"Whether to show function parameter name inlay hints at the call site.\",\n+                    \"markdownDescription\": \"Whether to show function parameter name inlay hints at the call\\nsite.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -629,7 +629,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.lens.debug\": {\n-                    \"markdownDescription\": \"Whether to show `Debug` lens. Only applies when `#rust-analyzer.lens.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Debug` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n@@ -639,27 +639,27 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.lens.implementations\": {\n-                    \"markdownDescription\": \"Whether to show `Implementations` lens. Only applies when `#rust-analyzer.lens.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Implementations` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.lens.run\": {\n-                    \"markdownDescription\": \"Whether to show `Run` lens. Only applies when `#rust-analyzer.lens.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Run` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.lens.methodReferences\": {\n-                    \"markdownDescription\": \"Whether to show `Method References` lens. Only applies when `#rust-analyzer.lens.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `Method References` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": false,\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.lens.references\": {\n-                    \"markdownDescription\": \"Whether to show `References` lens. Only applies when `#rust-analyzer.lens.enable#` is set.\",\n+                    \"markdownDescription\": \"Whether to show `References` lens. Only applies when\\n`#rust-analyzer.lens.enable#` is set.\",\n                     \"default\": false,\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.linkedProjects\": {\n-                    \"markdownDescription\": \"Disable project auto-discovery in favor of explicitly specified set of projects.\\\\n\\\\nElements must be paths pointing to `Cargo.toml`, `rust-project.json`, or JSON objects in `rust-project.json` format.\",\n+                    \"markdownDescription\": \"Disable project auto-discovery in favor of explicitly specified set\\nof projects.\\n\\nElements must be paths pointing to `Cargo.toml`,\\n`rust-project.json`, or JSON objects in `rust-project.json` format.\",\n                     \"default\": [],\n                     \"type\": \"array\",\n                     \"items\": {\n@@ -689,7 +689,7 @@\n                     \"type\": \"boolean\"\n                 },\n                 \"rust-analyzer.procMacro.server\": {\n-                    \"markdownDescription\": \"Internal config, path to proc-macro server executable (typically, this is rust-analyzer itself, but we override this in tests).\",\n+                    \"markdownDescription\": \"Internal config, path to proc-macro server executable (typically,\\nthis is rust-analyzer itself, but we override this in tests).\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\",\n@@ -705,15 +705,15 @@\n                     ]\n                 },\n                 \"rust-analyzer.runnables.cargoExtraArgs\": {\n-                    \"markdownDescription\": \"Additional arguments to be passed to cargo for runnables such as tests or binaries.\\\\nFor example, it may be `--release`.\",\n+                    \"markdownDescription\": \"Additional arguments to be passed to cargo for runnables such as\\ntests or binaries. For example, it may be `--release`.\",\n                     \"default\": [],\n                     \"type\": \"array\",\n                     \"items\": {\n                         \"type\": \"string\"\n                     }\n                 },\n                 \"rust-analyzer.rustcSource\": {\n-                    \"markdownDescription\": \"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private projects, or \\\"discover\\\" to try to automatically find it.    Any project which uses rust-analyzer with the rustcPrivate crates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.    This option is not reloaded automatically; you must restart rust-analyzer for it to take effect.\",\n+                    \"markdownDescription\": \"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\\nprojects, or \\\"discover\\\" to try to automatically find it.\\n\\nAny project which uses rust-analyzer with the rustcPrivate\\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\\n\\nThis option is not reloaded automatically; you must restart rust-analyzer for it to take effect.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\",\n@@ -729,7 +729,7 @@\n                     }\n                 },\n                 \"rust-analyzer.rustfmt.overrideCommand\": {\n-                    \"markdownDescription\": \"Advanced option, fully override the command rust-analyzer uses for formatting.\",\n+                    \"markdownDescription\": \"Advanced option, fully override the command rust-analyzer uses for\\nformatting.\",\n                     \"default\": null,\n                     \"type\": [\n                         \"null\","}]}