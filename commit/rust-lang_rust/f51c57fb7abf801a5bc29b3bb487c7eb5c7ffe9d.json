{"sha": "f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1MWM1N2ZiN2FiZjgwMWE1YmMyOWIzYmI0ODdjN2ViNWM3ZmZlOWQ=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-12-01T20:37:45Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-06-29T17:23:38Z"}, "message": "Use the macro to implement HashStable.", "tree": {"sha": "ad1780e906d9c1f2c3b2a4b6cc032eb89d2128dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad1780e906d9c1f2c3b2a4b6cc032eb89d2128dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d", "html_url": "https://github.com/rust-lang/rust/commit/f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8971fff984e7a45ca6cdcd146816b4896a4ab1ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/8971fff984e7a45ca6cdcd146816b4896a4ab1ea", "html_url": "https://github.com/rust-lang/rust/commit/8971fff984e7a45ca6cdcd146816b4896a4ab1ea"}], "stats": {"total": 28, "additions": 3, "deletions": 25}, "files": [{"sha": "7461979a9fe10c99bae91370706c6325a7aad41b", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 3, "deletions": 25, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=f51c57fb7abf801a5bc29b3bb487c7eb5c7ffe9d", "patch": "@@ -51,13 +51,13 @@ impl LintLevelSource {\n /// A tuple of a lint level and its source.\n pub type LevelAndSource = (Level, LintLevelSource);\n \n-#[derive(Debug)]\n+#[derive(Debug, HashStable)]\n pub struct LintLevelSets {\n     pub list: Vec<LintSet>,\n     pub lint_cap: Level,\n }\n \n-#[derive(Debug)]\n+#[derive(Debug, HashStable)]\n pub enum LintSet {\n     CommandLine {\n         // -A,-W,-D flags, a `Symbol` for the flag itself and `Level` for which\n@@ -180,29 +180,7 @@ impl<'a> HashStable<StableHashingContext<'a>> for LintLevelMap {\n \n         id_to_set.hash_stable(hcx, hasher);\n \n-        let LintLevelSets { ref list, lint_cap } = *sets;\n-\n-        lint_cap.hash_stable(hcx, hasher);\n-\n-        hcx.while_hashing_spans(true, |hcx| {\n-            list.len().hash_stable(hcx, hasher);\n-\n-            // We are working under the assumption here that the list of\n-            // lint-sets is built in a deterministic order.\n-            for lint_set in list {\n-                ::std::mem::discriminant(lint_set).hash_stable(hcx, hasher);\n-\n-                match *lint_set {\n-                    LintSet::CommandLine { ref specs } => {\n-                        specs.hash_stable(hcx, hasher);\n-                    }\n-                    LintSet::Node { ref specs, parent } => {\n-                        specs.hash_stable(hcx, hasher);\n-                        parent.hash_stable(hcx, hasher);\n-                    }\n-                }\n-            }\n-        })\n+        hcx.while_hashing_spans(true, |hcx| sets.hash_stable(hcx, hasher))\n     }\n }\n "}]}