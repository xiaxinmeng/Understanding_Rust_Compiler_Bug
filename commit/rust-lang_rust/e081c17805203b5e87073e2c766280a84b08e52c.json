{"sha": "e081c17805203b5e87073e2c766280a84b08e52c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwODFjMTc4MDUyMDNiNWU4NzA3M2UyYzc2NjI4MGE4NGIwOGU1MmM=", "commit": {"author": {"name": "gareth", "email": "gareth@gareth-N56VM.(none)", "date": "2013-03-31T20:24:58Z"}, "committer": {"name": "gareth", "email": "gareth@gareth-N56VM.(none)", "date": "2013-04-06T19:57:21Z"}, "message": "Fix a bug where calling p.destroy() on the result of calling\nstart_program(...) would cause a segfault when p went\nout of scope due to out_file/err_file being closed twice.", "tree": {"sha": "968863aaa8312b369152b3a4c6be23d375b220aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/968863aaa8312b369152b3a4c6be23d375b220aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e081c17805203b5e87073e2c766280a84b08e52c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e081c17805203b5e87073e2c766280a84b08e52c", "html_url": "https://github.com/rust-lang/rust/commit/e081c17805203b5e87073e2c766280a84b08e52c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e081c17805203b5e87073e2c766280a84b08e52c/comments", "author": null, "committer": null, "parents": [{"sha": "44d4d6de762f3f9aae1fedcf454c66b79b3ad58d", "url": "https://api.github.com/repos/rust-lang/rust/commits/44d4d6de762f3f9aae1fedcf454c66b79b3ad58d", "html_url": "https://github.com/rust-lang/rust/commit/44d4d6de762f3f9aae1fedcf454c66b79b3ad58d"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "c6d79bd2ecd6d9fb9854fbfb56e849c8f7c87328", "filename": "src/libcore/run.rs", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/e081c17805203b5e87073e2c766280a84b08e52c/src%2Flibcore%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e081c17805203b5e87073e2c766280a84b08e52c/src%2Flibcore%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frun.rs?ref=e081c17805203b5e87073e2c766280a84b08e52c", "patch": "@@ -172,6 +172,14 @@ fn with_dirp<T>(d: &Option<~str>,\n     }\n }\n \n+/// helper function that closes non-NULL files and then makes them NULL\n+priv unsafe fn fclose_and_null(f: &mut *libc::FILE) {\n+    if *f != 0 as *libc::FILE {\n+        libc::fclose(*f);\n+        *f = 0 as *libc::FILE;\n+    }\n+}\n+\n /**\n  * Spawns a process and waits for it to terminate\n  *\n@@ -249,8 +257,8 @@ pub fn start_program(prog: &str, args: &[~str]) -> @Program {\n     fn destroy_repr(r: &mut ProgRepr) {\n         unsafe {\n             finish_repr(&mut *r);\n-            libc::fclose(r.out_file);\n-            libc::fclose(r.err_file);\n+            fclose_and_null(&mut r.out_file);\n+            fclose_and_null(&mut r.err_file);\n         }\n     }\n     struct ProgRes {\n@@ -507,6 +515,19 @@ mod tests {\n         assert!(status == 1);\n     }\n \n+    #[test]\n+    pub fn test_destroy_once() {\n+        let mut p = run::start_program(\"echo\", []);\n+        p.destroy(); // this shouldn't crash (and nor should the destructor)\n+    }\n+\n+    #[test]\n+    pub fn test_destroy_twice() {\n+        let mut p = run::start_program(\"echo\", []);\n+        p.destroy(); // this shouldnt crash...\n+        p.destroy(); // ...and nor should this (and nor should the destructor)\n+    }\n+\n }\n \n // Local Variables:"}]}