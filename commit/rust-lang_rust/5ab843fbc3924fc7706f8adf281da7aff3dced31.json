{"sha": "5ab843fbc3924fc7706f8adf281da7aff3dced31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYjg0M2ZiYzM5MjRmYzc3MDZmOGFkZjI4MWRhN2FmZjNkY2VkMzE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-09-13T23:38:36Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-09-18T02:50:41Z"}, "message": "std: Remove Option.or_{default,zero}\n\nThese can be replaced with `Some(option.or_default())`.", "tree": {"sha": "2c37891b13c406b8d5f71e1308a29e862af25bf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c37891b13c406b8d5f71e1308a29e862af25bf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ab843fbc3924fc7706f8adf281da7aff3dced31", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ab843fbc3924fc7706f8adf281da7aff3dced31", "html_url": "https://github.com/rust-lang/rust/commit/5ab843fbc3924fc7706f8adf281da7aff3dced31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ab843fbc3924fc7706f8adf281da7aff3dced31/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "460021bdf2106ee76daf7d81ec7e50e972e26901", "url": "https://api.github.com/repos/rust-lang/rust/commits/460021bdf2106ee76daf7d81ec7e50e972e26901", "html_url": "https://github.com/rust-lang/rust/commit/460021bdf2106ee76daf7d81ec7e50e972e26901"}], "stats": {"total": 20, "additions": 1, "deletions": 19}, "files": [{"sha": "42878f6effbae677d3ab33815f69ab59d6113ce7", "filename": "src/libstd/option.rs", "status": "modified", "additions": 1, "deletions": 19, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5ab843fbc3924fc7706f8adf281da7aff3dced31/src%2Flibstd%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ab843fbc3924fc7706f8adf281da7aff3dced31/src%2Flibstd%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foption.rs?ref=5ab843fbc3924fc7706f8adf281da7aff3dced31", "patch": "@@ -467,23 +467,14 @@ impl<T: Default> Option<T> {\n             None => Default::default()\n         }\n     }\n-\n-    /// Returns self or `Some`-wrapped default value\n-    #[inline]\n-    pub fn or_default(self) -> Option<T> {\n-        match self {\n-            None => Some(Default::default()),\n-            x => x,\n-        }\n-    }\n }\n \n impl<T> Default for Option<T> {\n     #[inline]\n     fn default() -> Option<T> { None }\n }\n \n-impl<T:Zero> Option<T> {\n+impl<T: Zero> Option<T> {\n     /// Returns the contained value or zero (for this type)\n     #[inline]\n     pub fn unwrap_or_zero(self) -> T {\n@@ -492,15 +483,6 @@ impl<T:Zero> Option<T> {\n             None => Zero::zero()\n         }\n     }\n-\n-    /// Returns self or `Some`-wrapped zero value\n-    #[inline]\n-    pub fn or_zero(self) -> Option<T> {\n-        match self {\n-            None => Some(Zero::zero()),\n-            x => x\n-        }\n-    }\n }\n \n /// An iterator that yields either one or zero elements"}]}