{"sha": "9a2ee0aaef1dfe835c65359b2b07721953ea7040", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMmVlMGFhZWYxZGZlODM1YzY1MzU5YjJiMDc3MjE5NTNlYTcwNDA=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-05-02T02:05:58Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-05-06T23:47:45Z"}, "message": "serialize: add missing Encodable impl for Path.", "tree": {"sha": "4a0ecc48282590f16378afd514f96222fcbe92ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a0ecc48282590f16378afd514f96222fcbe92ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a2ee0aaef1dfe835c65359b2b07721953ea7040", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2ee0aaef1dfe835c65359b2b07721953ea7040", "html_url": "https://github.com/rust-lang/rust/commit/9a2ee0aaef1dfe835c65359b2b07721953ea7040", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a2ee0aaef1dfe835c65359b2b07721953ea7040/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a19cf18c7dbbcc46dddea81df3a4cee1735c2349", "url": "https://api.github.com/repos/rust-lang/rust/commits/a19cf18c7dbbcc46dddea81df3a4cee1735c2349", "html_url": "https://github.com/rust-lang/rust/commit/a19cf18c7dbbcc46dddea81df3a4cee1735c2349"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "36a1628014ddb6b47bb1cf116e52c8529cb09eac", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9a2ee0aaef1dfe835c65359b2b07721953ea7040/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2ee0aaef1dfe835c65359b2b07721953ea7040/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=9a2ee0aaef1dfe835c65359b2b07721953ea7040", "patch": "@@ -764,12 +764,18 @@ macro_rules! tuple {\n \n tuple! { T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, }\n \n-impl Encodable for path::PathBuf {\n+impl Encodable for path::Path {\n     fn encode<S: Encoder>(&self, e: &mut S) -> Result<(), S::Error> {\n         self.to_str().unwrap().encode(e)\n     }\n }\n \n+impl Encodable for path::PathBuf {\n+    fn encode<S: Encoder>(&self, e: &mut S) -> Result<(), S::Error> {\n+        path::Path::encode(self, e)\n+    }\n+}\n+\n impl Decodable for path::PathBuf {\n     fn decode<D: Decoder>(d: &mut D) -> Result<path::PathBuf, D::Error> {\n         let bytes: String = Decodable::decode(d)?;"}]}