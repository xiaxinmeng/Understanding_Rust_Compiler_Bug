{"sha": "e99702f5700d5b74b05d8ac4b6441f6bce18ff87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5OTcwMmY1NzAwZDViNzRiMDVkOGFjNGI2NDQxZjZiY2UxOGZmODc=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2017-10-11T21:40:35Z"}, "committer": {"name": "Paul Daniel Faria", "email": "pfaria@localhost.localdomain", "date": "2017-10-13T12:43:27Z"}, "message": "TODO -> FIXME", "tree": {"sha": "bcd7430d6b48c3478e2ad4d4f4e9851d34bd6db8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcd7430d6b48c3478e2ad4d4f4e9851d34bd6db8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e99702f5700d5b74b05d8ac4b6441f6bce18ff87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e99702f5700d5b74b05d8ac4b6441f6bce18ff87", "html_url": "https://github.com/rust-lang/rust/commit/e99702f5700d5b74b05d8ac4b6441f6bce18ff87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e99702f5700d5b74b05d8ac4b6441f6bce18ff87/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "88b02ef857317313cebd3833e0b6e847789f67c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/88b02ef857317313cebd3833e0b6e847789f67c0", "html_url": "https://github.com/rust-lang/rust/commit/88b02ef857317313cebd3833e0b6e847789f67c0"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "2d613f9b4bd1b6df9a23ec0aa6ea2bcc41543c30", "filename": "src/librustc_mir/transform/nll/infer.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e99702f5700d5b74b05d8ac4b6441f6bce18ff87/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e99702f5700d5b74b05d8ac4b6441f6bce18ff87/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fnll%2Finfer.rs?ref=e99702f5700d5b74b05d8ac4b6441f6bce18ff87", "patch": "@@ -13,13 +13,13 @@ pub struct InferenceContext {\n \n pub struct InferenceError {\n     pub constraint_point: Location,\n-    pub name: (), // TODO(nashenas88) RegionName\n+    pub name: (), // FIXME(nashenas88) RegionName\n }\n \n newtype_index!(InferenceErrorIndex);\n \n struct VarDefinition {\n-    name: (), // TODO(nashenas88) RegionName\n+    name: (), // FIXME(nashenas88) RegionName\n     value: Region,\n     capped: bool,\n }\n@@ -189,12 +189,12 @@ impl<'a, 'gcx: 'tcx, 'tcx: 'a> Dfs<'a, 'gcx, 'tcx> {\n             };\n \n             if successor_points.is_empty() {\n-                // TODO handle free regions\n+                // FIXME handle free regions\n                 // If we reach the END point in the graph, then copy\n                 // over any skolemized end points in the `from_region`\n                 // and make sure they are included in the `to_region`.\n                 // for region_decl in self.infcx.tcx.tables.borrow().free_region_map() {\n-                //     // TODO(nashenas88) figure out skolemized_end points\n+                //     // FIXME(nashenas88) figure out skolemized_end points\n                 //     let block = self.env.graph.skolemized_end(region_decl.name);\n                 //     let skolemized_end_point = Location {\n                 //         block,"}]}