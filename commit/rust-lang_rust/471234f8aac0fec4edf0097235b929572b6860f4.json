{"sha": "471234f8aac0fec4edf0097235b929572b6860f4", "node_id": "C_kwDOAAsO6NoAKDQ3MTIzNGY4YWFjMGZlYzRlZGYwMDk3MjM1YjkyOTU3MmI2ODYwZjQ", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-24T18:25:07Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-24T18:25:07Z"}, "message": "Sync from rust 3d127e2040b57157936f5f24e114a8b4c9a505ef", "tree": {"sha": "76e6389098c764a82ba4c4f669589ac07ad4cb74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e6389098c764a82ba4c4f669589ac07ad4cb74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/471234f8aac0fec4edf0097235b929572b6860f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/471234f8aac0fec4edf0097235b929572b6860f4", "html_url": "https://github.com/rust-lang/rust/commit/471234f8aac0fec4edf0097235b929572b6860f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/471234f8aac0fec4edf0097235b929572b6860f4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "164aa39fbed6dcc290507f325667375a3461edd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/164aa39fbed6dcc290507f325667375a3461edd1", "html_url": "https://github.com/rust-lang/rust/commit/164aa39fbed6dcc290507f325667375a3461edd1"}, {"sha": "648d038c867a7650a68794940842aa6ab6df6962", "url": "https://api.github.com/repos/rust-lang/rust/commits/648d038c867a7650a68794940842aa6ab6df6962", "html_url": "https://github.com/rust-lang/rust/commit/648d038c867a7650a68794940842aa6ab6df6962"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "fac532f3e9c83a1f2dad6c48a27faecd64a25d2c", "filename": "src/archive.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/471234f8aac0fec4edf0097235b929572b6860f4/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/471234f8aac0fec4edf0097235b929572b6860f4/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=471234f8aac0fec4edf0097235b929572b6860f4", "patch": "@@ -113,9 +113,6 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         Ok(())\n     }\n \n-    fn update_symbols(&mut self) {\n-    }\n-\n     fn build(mut self) {\n         use std::process::Command;\n "}, {"sha": "c52ab12e56b24ca0e501dff992dcb6b3e33d101f", "filename": "src/builder.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/471234f8aac0fec4edf0097235b929572b6860f4/src%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/471234f8aac0fec4edf0097235b929572b6860f4/src%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbuilder.rs?ref=471234f8aac0fec4edf0097235b929572b6860f4", "patch": "@@ -390,11 +390,6 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         bx\n     }\n \n-    fn build_sibling_block(&mut self, name: &str) -> Self {\n-        let block = self.append_sibling_block(name);\n-        Self::build(self.cx, block)\n-    }\n-\n     fn llbb(&self) -> Block<'gcc> {\n         self.block.expect(\"block\")\n     }\n@@ -409,6 +404,11 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         func.new_block(name)\n     }\n \n+    fn switch_to_block(&mut self, block: Self::BasicBlock) {\n+        *self.cx.current_block.borrow_mut() = Some(block);\n+        self.block = Some(block);\n+    }\n+\n     fn ret_void(&mut self) {\n         self.llbb().end_with_void_return(None)\n     }\n@@ -747,28 +747,31 @@ impl<'a, 'gcc, 'tcx> BuilderMethods<'a, 'tcx> for Builder<'a, 'gcc, 'tcx> {\n         let start = dest.project_index(&mut self, zero).llval;\n         let end = dest.project_index(&mut self, count).llval;\n \n-        let mut header_bx = self.build_sibling_block(\"repeat_loop_header\");\n-        let mut body_bx = self.build_sibling_block(\"repeat_loop_body\");\n-        let next_bx = self.build_sibling_block(\"repeat_loop_next\");\n+        let header_bb = self.append_sibling_block(\"repeat_loop_header\");\n+        let body_bb = self.append_sibling_block(\"repeat_loop_body\");\n+        let next_bb = self.append_sibling_block(\"repeat_loop_next\");\n \n         let ptr_type = start.get_type();\n         let current = self.llbb().get_function().new_local(None, ptr_type, \"loop_var\");\n         let current_val = current.to_rvalue();\n         self.assign(current, start);\n \n-        self.br(header_bx.llbb());\n+        self.br(header_bb);\n \n-        let keep_going = header_bx.icmp(IntPredicate::IntNE, current_val, end);\n-        header_bx.cond_br(keep_going, body_bx.llbb(), next_bx.llbb());\n+        self.switch_to_block(header_bb);\n+        let keep_going = self.icmp(IntPredicate::IntNE, current_val, end);\n+        self.cond_br(keep_going, body_bb, next_bb);\n \n+        self.switch_to_block(body_bb);\n         let align = dest.align.restrict_for_offset(dest.layout.field(self.cx(), 0).size);\n-        cg_elem.val.store(&mut body_bx, PlaceRef::new_sized_aligned(current_val, cg_elem.layout, align));\n+        cg_elem.val.store(&mut self, PlaceRef::new_sized_aligned(current_val, cg_elem.layout, align));\n \n-        let next = body_bx.inbounds_gep(self.backend_type(cg_elem.layout), current.to_rvalue(), &[self.const_usize(1)]);\n-        body_bx.llbb().add_assignment(None, current, next);\n-        body_bx.br(header_bx.llbb());\n+        let next = self.inbounds_gep(self.backend_type(cg_elem.layout), current.to_rvalue(), &[self.const_usize(1)]);\n+        self.llbb().add_assignment(None, current, next);\n+        self.br(header_bb);\n \n-        next_bx\n+        self.switch_to_block(next_bb);\n+        self\n     }\n \n     fn range_metadata(&mut self, _load: RValue<'gcc>, _range: WrappingRange) {"}, {"sha": "5275667b864f8e03d4deafcfba6303b195c65bbd", "filename": "src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/471234f8aac0fec4edf0097235b929572b6860f4/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/471234f8aac0fec4edf0097235b929572b6860f4/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=471234f8aac0fec4edf0097235b929572b6860f4", "patch": "@@ -149,7 +149,7 @@ impl<'gcc, 'tcx> StaticMethods for CodegenCx<'gcc, 'tcx> {\n             // TODO(antoyo): set link section.\n         }\n \n-        if attrs.flags.contains(CodegenFnAttrFlags::USED) {\n+        if attrs.flags.contains(CodegenFnAttrFlags::USED) || attrs.flags.contains(CodegenFnAttrFlags::USED_LINKER) {\n             self.add_used_global(global.to_rvalue());\n         }\n     }"}, {"sha": "0ada20cad2c3be3c3931a58151832a6c0d79a75b", "filename": "src/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/471234f8aac0fec4edf0097235b929572b6860f4/src%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/471234f8aac0fec4edf0097235b929572b6860f4/src%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftype_of.rs?ref=471234f8aac0fec4edf0097235b929572b6860f4", "patch": "@@ -52,7 +52,7 @@ pub fn uncached_gcc_type<'gcc, 'tcx>(cx: &CodegenCx<'gcc, 'tcx>, layout: TyAndLa\n         ty::Adt(..) | ty::Closure(..) | ty::Foreign(..) | ty::Generator(..) | ty::Str\n             if !cx.sess().fewer_names() =>\n         {\n-            let mut name = with_no_trimmed_paths(|| layout.ty.to_string());\n+            let mut name = with_no_trimmed_paths!(layout.ty.to_string());\n             if let (&ty::Adt(def, _), &Variants::Single { index }) =\n                 (layout.ty.kind(), &layout.variants)\n             {"}]}