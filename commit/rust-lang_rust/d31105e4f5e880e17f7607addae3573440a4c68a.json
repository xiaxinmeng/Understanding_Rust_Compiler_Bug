{"sha": "d31105e4f5e880e17f7607addae3573440a4c68a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzMTEwNWU0ZjVlODgwZTE3Zjc2MDdhZGRhZTM1NzM0NDBhNGM2OGE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-05T21:21:45Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-06T22:17:49Z"}, "message": "Add new tests covering various cases.", "tree": {"sha": "d965b364af0b7b934e9d2e126c931b473928657d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d965b364af0b7b934e9d2e126c931b473928657d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d31105e4f5e880e17f7607addae3573440a4c68a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d31105e4f5e880e17f7607addae3573440a4c68a", "html_url": "https://github.com/rust-lang/rust/commit/d31105e4f5e880e17f7607addae3573440a4c68a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d31105e4f5e880e17f7607addae3573440a4c68a/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d91323992c7597311d32867c89bc997a9f0c160d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d91323992c7597311d32867c89bc997a9f0c160d", "html_url": "https://github.com/rust-lang/rust/commit/d91323992c7597311d32867c89bc997a9f0c160d"}], "stats": {"total": 107, "additions": 107, "deletions": 0}, "files": [{"sha": "3803bb9b045ed0eff7617d06e24cac4d5fd784e2", "filename": "src/test/compile-fail/impl-unused-tps-inherent.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d31105e4f5e880e17f7607addae3573440a4c68a/src%2Ftest%2Fcompile-fail%2Fimpl-unused-tps-inherent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d31105e4f5e880e17f7607addae3573440a4c68a/src%2Ftest%2Fcompile-fail%2Fimpl-unused-tps-inherent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-unused-tps-inherent.rs?ref=d31105e4f5e880e17f7607addae3573440a4c68a", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct MyType;\n+\n+struct MyType1<T>(T);\n+\n+trait Bar {\n+    type Out;\n+}\n+\n+impl<T> MyType {\n+    //~^ ERROR  the type parameter `T` is not constrained\n+}\n+\n+impl<T> MyType1<T> {\n+    // OK, T is used in `Foo<T>`.\n+}\n+\n+impl<T,U> MyType1<T> {\n+    //~^ ERROR  the type parameter `U` is not constrained\n+}\n+\n+impl<T,U> MyType1<T> where T: Bar<Out=U> {\n+    // OK, T is used in `Foo<T>`.\n+}\n+\n+fn main() { }"}, {"sha": "99c6c6b89858c3700b2862ee4b68442bad90198a", "filename": "src/test/compile-fail/impl-unused-tps.rs", "status": "added", "additions": 72, "deletions": 0, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/d31105e4f5e880e17f7607addae3573440a4c68a/src%2Ftest%2Fcompile-fail%2Fimpl-unused-tps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d31105e4f5e880e17f7607addae3573440a4c68a/src%2Ftest%2Fcompile-fail%2Fimpl-unused-tps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-unused-tps.rs?ref=d31105e4f5e880e17f7607addae3573440a4c68a", "patch": "@@ -0,0 +1,72 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+trait Foo<A> {\n+    fn get(&self, A: &A) { }\n+}\n+\n+trait Bar {\n+    type Out;\n+}\n+\n+impl<T> Foo<T> for [int;0] {\n+    // OK, T is used in `Foo<T>`.\n+}\n+\n+impl<T,U> Foo<T> for [int;1] {\n+    //~^ ERROR the type parameter `U` is not constrained\n+}\n+\n+impl<T,U> Foo<T> for [int;2] where T : Bar<Out=U> {\n+    // OK, `U` is now constrained by the output type parameter.\n+}\n+\n+impl<T:Bar<Out=U>,U> Foo<T> for [int;3] {\n+    // OK, same as above but written differently.\n+}\n+\n+impl<T,U> Foo<T> for U {\n+    // OK, T, U are used everywhere. Note that the coherence check\n+    // hasn't executed yet, so no errors about overlap.\n+}\n+\n+impl<T,U> Bar for T {\n+    //~^ ERROR the type parameter `U` is not constrained\n+\n+    type Out = U;\n+\n+    // Using `U` in an associated type within the impl is not good enough!\n+}\n+\n+impl<T,U> Bar for T\n+    where T : Bar<Out=U>\n+{\n+    //~^^^ ERROR the type parameter `U` is not constrained\n+\n+    // This crafty self-referential attempt is still no good.\n+}\n+\n+impl<T,U,V> Foo<T> for T\n+    where (T,U): Bar<Out=V>\n+{\n+    //~^^^ ERROR the type parameter `U` is not constrained\n+    //~|   ERROR the type parameter `V` is not constrained\n+\n+    // Here, `V` is bound by an output type parameter, but the inputs\n+    // are not themselves constrained.\n+}\n+\n+impl<T,U,V> Foo<(T,U)> for T\n+    where (T,U): Bar<Out=V>\n+{\n+    // As above, but both T and U ARE constrained.\n+}\n+\n+fn main() { }"}]}