{"sha": "a9234c11e00d976e69bcab95342b8af469c82d5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5MjM0YzExZTAwZDk3NmU2OWJjYWI5NTM0MmI4YWY0NjljODJkNWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-10T07:19:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-10T07:19:09Z"}, "message": "Auto merge of #34086 - srinivasreddy:rustfmt_liballoc_jemalloc, r=nagisa\n\nrun rustfmt on liballoc_jemalloc folder", "tree": {"sha": "13fcec4f4cda88b07d10b73debab2de72d2709df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13fcec4f4cda88b07d10b73debab2de72d2709df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9234c11e00d976e69bcab95342b8af469c82d5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9234c11e00d976e69bcab95342b8af469c82d5b", "html_url": "https://github.com/rust-lang/rust/commit/a9234c11e00d976e69bcab95342b8af469c82d5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9234c11e00d976e69bcab95342b8af469c82d5b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c09d546ee512c166c2e28306ed67dcf0e3fec751", "url": "https://api.github.com/repos/rust-lang/rust/commits/c09d546ee512c166c2e28306ed67dcf0e3fec751", "html_url": "https://github.com/rust-lang/rust/commit/c09d546ee512c166c2e28306ed67dcf0e3fec751"}, {"sha": "adf2c432dcd3e121ccbd3904c92252b51aa110a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/adf2c432dcd3e121ccbd3904c92252b51aa110a5", "html_url": "https://github.com/rust-lang/rust/commit/adf2c432dcd3e121ccbd3904c92252b51aa110a5"}], "stats": {"total": 40, "additions": 26, "deletions": 14}, "files": [{"sha": "e43b9a9df1b84f19af23ee5643f6ae2f1629c828", "filename": "src/liballoc_jemalloc/build.rs", "status": "modified", "additions": 20, "deletions": 9, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a9234c11e00d976e69bcab95342b8af469c82d5b/src%2Fliballoc_jemalloc%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9234c11e00d976e69bcab95342b8af469c82d5b/src%2Fliballoc_jemalloc%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Fbuild.rs?ref=a9234c11e00d976e69bcab95342b8af469c82d5b", "patch": "@@ -33,18 +33,26 @@ fn main() {\n                  jemalloc.parent().unwrap().display());\n         let stem = jemalloc.file_stem().unwrap().to_str().unwrap();\n         let name = jemalloc.file_name().unwrap().to_str().unwrap();\n-        let kind = if name.ends_with(\".a\") {\"static\"} else {\"dylib\"};\n+        let kind = if name.ends_with(\".a\") {\n+            \"static\"\n+        } else {\n+            \"dylib\"\n+        };\n         println!(\"cargo:rustc-link-lib={}={}\", kind, &stem[3..]);\n-        return\n+        return;\n     }\n \n     let compiler = gcc::Config::new().get_compiler();\n     let ar = build_helper::cc2ar(compiler.path(), &target);\n-    let cflags = compiler.args().iter().map(|s| s.to_str().unwrap())\n-                         .collect::<Vec<_>>().join(\" \");\n+    let cflags = compiler.args()\n+                         .iter()\n+                         .map(|s| s.to_str().unwrap())\n+                         .collect::<Vec<_>>()\n+                         .join(\" \");\n \n     let mut stack = src_dir.join(\"../jemalloc\")\n-                           .read_dir().unwrap()\n+                           .read_dir()\n+                           .unwrap()\n                            .map(|e| e.unwrap())\n                            .collect::<Vec<_>>();\n     while let Some(entry) = stack.pop() {\n@@ -57,7 +65,9 @@ fn main() {\n     }\n \n     let mut cmd = Command::new(\"sh\");\n-    cmd.arg(src_dir.join(\"../jemalloc/configure\").to_str().unwrap()\n+    cmd.arg(src_dir.join(\"../jemalloc/configure\")\n+                   .to_str()\n+                   .unwrap()\n                    .replace(\"C:\\\\\", \"/c/\")\n                    .replace(\"\\\\\", \"/\"))\n        .current_dir(&build_dir)\n@@ -117,9 +127,10 @@ fn main() {\n \n     run(&mut cmd);\n     run(Command::new(\"make\")\n-                .current_dir(&build_dir)\n-                .arg(\"build_lib_static\")\n-                .arg(\"-j\").arg(env::var(\"NUM_JOBS\").unwrap()));\n+            .current_dir(&build_dir)\n+            .arg(\"build_lib_static\")\n+            .arg(\"-j\")\n+            .arg(env::var(\"NUM_JOBS\").unwrap()));\n \n     if target.contains(\"windows\") {\n         println!(\"cargo:rustc-link-lib=static=jemalloc\");"}, {"sha": "347e97e6ffc0a8ddd84e25b3a0637bf499d0ab8a", "filename": "src/liballoc_jemalloc/lib.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a9234c11e00d976e69bcab95342b8af469c82d5b/src%2Fliballoc_jemalloc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a9234c11e00d976e69bcab95342b8af469c82d5b/src%2Fliballoc_jemalloc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc_jemalloc%2Flib.rs?ref=a9234c11e00d976e69bcab95342b8af469c82d5b", "patch": "@@ -39,12 +39,12 @@ use libc::{c_int, c_void, size_t};\n                not(target_env = \"musl\")),\n            link(name = \"pthread\"))]\n #[cfg(not(cargobuild))]\n-extern {}\n+extern \"C\" {}\n \n // Note that the symbols here are prefixed by default on OSX and Windows (we\n // don't explicitly request it), and on Android and DragonFly we explicitly\n // request it as unprefixing cause segfaults (mismatches in allocators).\n-extern {\n+extern \"C\" {\n     #[cfg_attr(any(target_os = \"macos\", target_os = \"android\", target_os = \"ios\",\n                    target_os = \"dragonfly\", target_os = \"windows\"),\n                link_name = \"je_mallocx\")]\n@@ -136,8 +136,9 @@ pub extern \"C\" fn __rust_usable_size(size: usize, align: usize) -> usize {\n // are available.\n #[no_mangle]\n #[cfg(target_os = \"android\")]\n-pub extern fn pthread_atfork(_prefork: *mut u8,\n-                             _postfork_parent: *mut u8,\n-                             _postfork_child: *mut u8) -> i32 {\n+pub extern \"C\" fn pthread_atfork(_prefork: *mut u8,\n+                                 _postfork_parent: *mut u8,\n+                                 _postfork_child: *mut u8)\n+                                 -> i32 {\n     0\n }"}]}