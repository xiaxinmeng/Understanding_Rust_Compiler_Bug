{"sha": "70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMzk4ZDVhZDBkNmU0NDgwNWZjY2YyZGJjMmNkOTk2MGM3MTdkZWE=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2015-12-10T21:39:17Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2015-12-10T21:39:17Z"}, "message": "MIR: Make Mir take ownership of InlineAsm values.", "tree": {"sha": "35d851377a7e336a0b3eeed5fcb3ec44d36555ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35d851377a7e336a0b3eeed5fcb3ec44d36555ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "html_url": "https://github.com/rust-lang/rust/commit/70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33d29700b3badd4e4c9e52f3a0ce9ffc458f5e6a", "url": "https://api.github.com/repos/rust-lang/rust/commits/33d29700b3badd4e4c9e52f3a0ce9ffc458f5e6a", "html_url": "https://github.com/rust-lang/rust/commit/33d29700b3badd4e4c9e52f3a0ce9ffc458f5e6a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "bbc2464c117929a1c0db6eb5b904068a466e1f52", "filename": "src/librustc/mir/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/src%2Flibrustc%2Fmir%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/src%2Flibrustc%2Fmir%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Frepr.rs?ref=70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "patch": "@@ -584,7 +584,7 @@ pub enum Rvalue<'tcx> {\n         from_end: usize,\n     },\n \n-    InlineAsm(&'tcx InlineAsm),\n+    InlineAsm(InlineAsm),\n }\n \n #[derive(Clone, Debug, PartialEq, Eq)]"}, {"sha": "2f57dd22454cb50c3841216fe1512b27e86fd6df", "filename": "src/librustc_mir/build/expr/as_rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Fas_rvalue.rs?ref=70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "patch": "@@ -40,7 +40,7 @@ impl<'a,'tcx> Builder<'a,'tcx> {\n                 this.in_scope(extent, block, |this| this.as_rvalue(block, value))\n             }\n             ExprKind::InlineAsm { asm } => {\n-                block.and(Rvalue::InlineAsm(asm))\n+                block.and(Rvalue::InlineAsm(asm.clone()))\n             }\n             ExprKind::Repeat { value, count } => {\n                 let value_operand = unpack!(block = this.as_operand(block, value));"}, {"sha": "529e65dace04cea804e843f8f1b5bf93a92f76a5", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70398d5ad0d6e44805fccf2dbc2cd9960c717dea/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=70398d5ad0d6e44805fccf2dbc2cd9960c717dea", "patch": "@@ -120,7 +120,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                 bcx\n             }\n \n-            mir::Rvalue::InlineAsm(inline_asm) => {\n+            mir::Rvalue::InlineAsm(ref inline_asm) => {\n                 asm::trans_inline_asm(bcx, inline_asm)\n             }\n "}]}