{"sha": "f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMTJlMGUzZGUwNGNhNWI4MDIyYTBiODg1NmExMmQ0N2Q3NDZiNWI=", "commit": {"author": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T17:10:24Z"}, "committer": {"name": "Takayuki", "email": "takoyaki0316@gmail.com", "date": "2021-05-04T17:10:24Z"}, "message": "move unseparated_literal_suffix to its own module", "tree": {"sha": "52672c6d5396795e19c6988257f6d42d0c72aaa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52672c6d5396795e19c6988257f6d42d0c72aaa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "html_url": "https://github.com/rust-lang/rust/commit/f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f012e0e3de04ca5b8022a0b8856a12d47d746b5b/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "829fde5e1f1163b3218409244863ce64d8c7dd19", "url": "https://api.github.com/repos/rust-lang/rust/commits/829fde5e1f1163b3218409244863ce64d8c7dd19", "html_url": "https://github.com/rust-lang/rust/commit/829fde5e1f1163b3218409244863ce64d8c7dd19"}], "stats": {"total": 46, "additions": 29, "deletions": 17}, "files": [{"sha": "182218e77f64dc1deaadb715ba2ba947421f5d24", "filename": "clippy_lints/src/misc_early/mod.rs", "status": "modified", "additions": 2, "deletions": 17, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f012e0e3de04ca5b8022a0b8856a12d47d746b5b/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f012e0e3de04ca5b8022a0b8856a12d47d746b5b/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Fmod.rs?ref=f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "patch": "@@ -3,6 +3,7 @@ mod double_neg;\n mod redundant_pattern;\n mod unneeded_field_pattern;\n mod unneeded_wildcard_pattern;\n+mod unseparated_literal_suffix;\n \n use clippy_utils::diagnostics::{span_lint, span_lint_and_sugg, span_lint_and_then};\n use clippy_utils::source::snippet_opt;\n@@ -396,23 +397,7 @@ impl MiscEarlyLints {\n                 );\n             }\n         } else if let LitKind::Float(_, LitFloatType::Suffixed(float_ty)) = lit.kind {\n-            let suffix = float_ty.name_str();\n-            let maybe_last_sep_idx = if let Some(val) = lit_snip.len().checked_sub(suffix.len() + 1) {\n-                val\n-            } else {\n-                return; // It's useless so shouldn't lint.\n-            };\n-            if lit_snip.as_bytes()[maybe_last_sep_idx] != b'_' {\n-                span_lint_and_sugg(\n-                    cx,\n-                    UNSEPARATED_LITERAL_SUFFIX,\n-                    lit.span,\n-                    \"float type suffix should be separated by an underscore\",\n-                    \"add an underscore\",\n-                    format!(\"{}_{}\", &lit_snip[..=maybe_last_sep_idx], suffix),\n-                    Applicability::MachineApplicable,\n-                );\n-            }\n+            unseparated_literal_suffix::check(cx, lit, float_ty, lit_snip)\n         }\n     }\n }"}, {"sha": "ffdd5d93a38c6c8cbcc12028eb37f8cf4bd7a9b1", "filename": "clippy_lints/src/misc_early/unseparated_literal_suffix.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/f012e0e3de04ca5b8022a0b8856a12d47d746b5b/clippy_lints%2Fsrc%2Fmisc_early%2Funseparated_literal_suffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f012e0e3de04ca5b8022a0b8856a12d47d746b5b/clippy_lints%2Fsrc%2Fmisc_early%2Funseparated_literal_suffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early%2Funseparated_literal_suffix.rs?ref=f012e0e3de04ca5b8022a0b8856a12d47d746b5b", "patch": "@@ -0,0 +1,27 @@\n+use clippy_utils::diagnostics::span_lint_and_sugg;\n+use rustc_ast::ast::FloatTy;\n+use rustc_ast::ast::Lit;\n+use rustc_errors::Applicability;\n+use rustc_lint::EarlyContext;\n+\n+use super::UNSEPARATED_LITERAL_SUFFIX;\n+\n+pub(super) fn check(cx: &EarlyContext<'_>, lit: &Lit, float_ty: FloatTy, lit_snip: String) {\n+    let suffix = float_ty.name_str();\n+    let maybe_last_sep_idx = if let Some(val) = lit_snip.len().checked_sub(suffix.len() + 1) {\n+        val\n+    } else {\n+        return; // It's useless so shouldn't lint.\n+    };\n+    if lit_snip.as_bytes()[maybe_last_sep_idx] != b'_' {\n+        span_lint_and_sugg(\n+            cx,\n+            UNSEPARATED_LITERAL_SUFFIX,\n+            lit.span,\n+            \"float type suffix should be separated by an underscore\",\n+            \"add an underscore\",\n+            format!(\"{}_{}\", &lit_snip[..=maybe_last_sep_idx], suffix),\n+            Applicability::MachineApplicable,\n+        );\n+    }\n+}"}]}