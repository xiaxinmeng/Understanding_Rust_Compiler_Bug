{"sha": "768803cbb5450eba53641c9342c7b81b6b6aedf8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ODgwM2NiYjU0NTBlYmE1MzY0MWM5MzQyYzdiODFiNmI2YWVkZjg=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-07-26T20:49:55Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-07-26T22:37:03Z"}, "message": "Remove explicit `extern crate` from proc-macro test\n\nWe only want to load this auxiliary crate from a proc-macro, so that it\nonly ever needs to get built for the host platform.", "tree": {"sha": "026600b1d8cc02f1a402187815a57f4c722b5c9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/026600b1d8cc02f1a402187815a57f4c722b5c9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/768803cbb5450eba53641c9342c7b81b6b6aedf8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl8eBY8ACgkQtAh+UQ6Y\nsWQxtxAAp5VHpSvlLZWq28Tk0QwAkhEuxH0Kt9IMxgpH2lMCQqnlM3Gmwt3bfAEX\nT0kWgfL/qF9K+yA7KUxILtTbarMQ9inqO0bmDGMYHBrm/DGjMwUAZuI4eKSnM00A\nRJELFXt6Wo7/aR0WA7QhyP/AAWa0rMnDh3YHthE3xTnClQwE4V7dih4ss3/D1AX9\ngKbg/cB/KSaYJsMTgvC8QL+hDrh2iGm2od5Iz7elh5Ea89Ar2QLtZpXb5pRoJHXe\n6ZSk6v7kCQYIlzYO+mPNJhHoNo431Jyec1P0T5taHTwVkux2jbSvoPJCXm76MGnc\nCaDiuFHGGPxm8HNliGtL9m46CV+hacjwC2q+Fb0C9c8MSyy9C2y5vz9+DD3fNC72\nhdJcswl0Vj+Lp7YssWNDbXc5HwQ3EzAgIlCXpb6x6K6iPPvOE/MZWI1/WUMtTdoT\nt468LpoZtnqel8ijQMgwDg4Bs17jF9tm5TtGNFp/8w3bYnaRc5jqxx3ithxkNLgN\n/iDcH19fw+tjgFb9WW+yct0QOg9skGL2wOQOMmppq04dwTcyguXFG3icuG0b3OOk\nHptTJirnJKL7nV13sYzM8wGS3tVszCRRVcy2kK+fIvjqim7DNgi+CUjbLnMIfqsA\nVrtp9naMmNIc57u5l8/7AwuToLcC0Yhij3M0AIVC2OaG4DFIcMw=\n=J1GG\n-----END PGP SIGNATURE-----", "payload": "tree 026600b1d8cc02f1a402187815a57f4c722b5c9f\nparent f622f45afdd7688e19d511799e978c1c66889fb4\nauthor Aaron Hill <aa1ronham@gmail.com> 1595796595 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1595803023 -0400\n\nRemove explicit `extern crate` from proc-macro test\n\nWe only want to load this auxiliary crate from a proc-macro, so that it\nonly ever needs to get built for the host platform.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/768803cbb5450eba53641c9342c7b81b6b6aedf8", "html_url": "https://github.com/rust-lang/rust/commit/768803cbb5450eba53641c9342c7b81b6b6aedf8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/768803cbb5450eba53641c9342c7b81b6b6aedf8/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f622f45afdd7688e19d511799e978c1c66889fb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f622f45afdd7688e19d511799e978c1c66889fb4", "html_url": "https://github.com/rust-lang/rust/commit/f622f45afdd7688e19d511799e978c1c66889fb4"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "66f7590acdf8f8092134d598908892acba943a15", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/768803cbb5450eba53641c9342c7b81b6b6aedf8/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/768803cbb5450eba53641c9342c7b81b6b6aedf8/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.rs?ref=768803cbb5450eba53641c9342c7b81b6b6aedf8", "patch": "@@ -8,7 +8,6 @@\n // We don't care about symbol ids, so we set them all to 0\n // in the stdout\n extern crate meta_macro;\n-extern crate make_macro;\n \n macro_rules! produce_it {\n     () => {"}, {"sha": "94537caebd8afde7d9b7f5f1e16415fe544c1efe", "filename": "src/test/ui/proc-macro/meta-macro-hygiene.stdout", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/768803cbb5450eba53641c9342c7b81b6b6aedf8/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/768803cbb5450eba53641c9342c7b81b6b6aedf8/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fmeta-macro-hygiene.stdout?ref=768803cbb5450eba53641c9342c7b81b6b6aedf8", "patch": "@@ -1,5 +1,5 @@\n Def site: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7)\n-Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:20:37: 20:43 (#6) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:20:43: 20:45 (#6) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:20:43: 20:45 (#6) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:20:45: 20:50 (#6) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:20:50: 20:51 (#6) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:20:51: 20:53 (#6) }]\n+Input: TokenStream [Ident { ident: \"$crate\", span: $DIR/meta-macro-hygiene.rs:19:37: 19:43 (#6) }, Punct { ch: ':', spacing: Joint, span: $DIR/meta-macro-hygiene.rs:19:43: 19:45 (#6) }, Punct { ch: ':', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:19:43: 19:45 (#6) }, Ident { ident: \"dummy\", span: $DIR/meta-macro-hygiene.rs:19:45: 19:50 (#6) }, Punct { ch: '!', spacing: Alone, span: $DIR/meta-macro-hygiene.rs:19:50: 19:51 (#6) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/meta-macro-hygiene.rs:19:51: 19:53 (#6) }]\n Respanned: TokenStream [Ident { ident: \"$crate\", span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7) }, Punct { ch: ':', spacing: Joint, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7) }, Punct { ch: ':', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7) }, Ident { ident: \"dummy\", span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7) }, Punct { ch: '!', spacing: Alone, span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7) }, Group { delimiter: Parenthesis, stream: TokenStream [], span: $DIR/auxiliary/make-macro.rs:7:9: 16:10 (#7) }]\n #![feature /* 0#0 */(prelude_import)]\n #[prelude_import /* 0#1 */]\n@@ -16,7 +16,6 @@ extern crate std /* 0#1 */;\n // We don't care about symbol ids, so we set them all to 0\n // in the stdout\n extern crate meta_macro /* 0#0 */;\n-extern crate make_macro /* 0#0 */;\n \n macro_rules! produce_it\n     /*"}]}