{"sha": "e1a87ca17a60aadae36b6785b7204610e02ee994", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxYTg3Y2ExN2E2MGFhZGFlMzZiNjc4NWI3MjA0NjEwZTAyZWU5OTQ=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-14T19:01:03Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-15T13:21:23Z"}, "message": "Move FatalError to syntax_pos\n\nThis is a bit unfortunate, but code needs to be able to fatally error\nearly on (in particular, syntax_pos after we move SourceMap there). It's\nalso a tiny bit of code, which means it's ultimately not that bad.", "tree": {"sha": "6331018f4507c9ba07abb79251aeeb40e6171f56", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6331018f4507c9ba07abb79251aeeb40e6171f56"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1a87ca17a60aadae36b6785b7204610e02ee994", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a87ca17a60aadae36b6785b7204610e02ee994", "html_url": "https://github.com/rust-lang/rust/commit/e1a87ca17a60aadae36b6785b7204610e02ee994", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1a87ca17a60aadae36b6785b7204610e02ee994/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82cf3a4486bc882207a09bf0d9e2dea4632781aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/82cf3a4486bc882207a09bf0d9e2dea4632781aa", "html_url": "https://github.com/rust-lang/rust/commit/82cf3a4486bc882207a09bf0d9e2dea4632781aa"}], "stats": {"total": 62, "additions": 32, "deletions": 30}, "files": [{"sha": "ee35d23af34fd5e6f2070b5eb6532966b367160d", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 1, "deletions": 30, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/e1a87ca17a60aadae36b6785b7204610e02ee994/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a87ca17a60aadae36b6785b7204610e02ee994/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=e1a87ca17a60aadae36b6785b7204610e02ee994", "patch": "@@ -259,36 +259,7 @@ impl CodeSuggestion {\n     }\n }\n \n-/// Used as a return value to signify a fatal error occurred. (It is also\n-/// used as the argument to panic at the moment, but that will eventually\n-/// not be true.)\n-#[derive(Copy, Clone, Debug)]\n-#[must_use]\n-pub struct FatalError;\n-\n-pub struct FatalErrorMarker;\n-\n-// Don't implement Send on FatalError. This makes it impossible to panic!(FatalError).\n-// We don't want to invoke the panic handler and print a backtrace for fatal errors.\n-impl !Send for FatalError {}\n-\n-impl FatalError {\n-    pub fn raise(self) -> ! {\n-        panic::resume_unwind(Box::new(FatalErrorMarker))\n-    }\n-}\n-\n-impl fmt::Display for FatalError {\n-    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n-        write!(f, \"parser fatal error\")\n-    }\n-}\n-\n-impl error::Error for FatalError {\n-    fn description(&self) -> &str {\n-        \"The parser has encountered a fatal error\"\n-    }\n-}\n+pub use syntax_pos::fatal_error::{FatalError, FatalErrorMarker};\n \n /// Signifies that the compiler died with an explicit call to `.bug`\n /// or `.span_bug` rather than a failed assertion, etc."}, {"sha": "cf7c677d59d951ab847535105830cf3c72cb9b2a", "filename": "src/libsyntax_pos/fatal_error.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/e1a87ca17a60aadae36b6785b7204610e02ee994/src%2Flibsyntax_pos%2Ffatal_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a87ca17a60aadae36b6785b7204610e02ee994/src%2Flibsyntax_pos%2Ffatal_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Ffatal_error.rs?ref=e1a87ca17a60aadae36b6785b7204610e02ee994", "patch": "@@ -0,0 +1,30 @@\n+/// Used as a return value to signify a fatal error occurred. (It is also\n+/// used as the argument to panic at the moment, but that will eventually\n+/// not be true.)\n+#[derive(Copy, Clone, Debug)]\n+#[must_use]\n+pub struct FatalError;\n+\n+pub struct FatalErrorMarker;\n+\n+// Don't implement Send on FatalError. This makes it impossible to panic!(FatalError).\n+// We don't want to invoke the panic handler and print a backtrace for fatal errors.\n+impl !Send for FatalError {}\n+\n+impl FatalError {\n+    pub fn raise(self) -> ! {\n+        std::panic::resume_unwind(Box::new(FatalErrorMarker))\n+    }\n+}\n+\n+impl std::fmt::Display for FatalError {\n+    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        write!(f, \"parser fatal error\")\n+    }\n+}\n+\n+impl std::error::Error for FatalError {\n+    fn description(&self) -> &str {\n+        \"The parser has encountered a fatal error\"\n+    }\n+}"}, {"sha": "50839638bb4aff88df9697df688aef660043f949", "filename": "src/libsyntax_pos/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e1a87ca17a60aadae36b6785b7204610e02ee994/src%2Flibsyntax_pos%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1a87ca17a60aadae36b6785b7204610e02ee994/src%2Flibsyntax_pos%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Flib.rs?ref=e1a87ca17a60aadae36b6785b7204610e02ee994", "patch": "@@ -29,6 +29,7 @@ pub mod symbol;\n pub use symbol::{Symbol, sym};\n \n mod analyze_source_file;\n+pub mod fatal_error;\n \n use rustc_data_structures::stable_hasher::StableHasher;\n use rustc_data_structures::sync::{Lrc, Lock};"}]}