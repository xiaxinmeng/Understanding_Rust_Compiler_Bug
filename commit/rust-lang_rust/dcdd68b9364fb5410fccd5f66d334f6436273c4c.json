{"sha": "dcdd68b9364fb5410fccd5f66d334f6436273c4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZGQ2OGI5MzY0ZmI1NDEwZmNjZDVmNjZkMzM0ZjY0MzYyNzNjNGM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-02T08:13:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-02T08:13:58Z"}, "message": "also indicate abort via new MachineStop variant", "tree": {"sha": "9ac2a033237b32b206926e63931986a54f1a79f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac2a033237b32b206926e63931986a54f1a79f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcdd68b9364fb5410fccd5f66d334f6436273c4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcdd68b9364fb5410fccd5f66d334f6436273c4c", "html_url": "https://github.com/rust-lang/rust/commit/dcdd68b9364fb5410fccd5f66d334f6436273c4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcdd68b9364fb5410fccd5f66d334f6436273c4c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c420b0b5538a9bd1d81b02e7d3d775e85fe0a4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c420b0b5538a9bd1d81b02e7d3d775e85fe0a4d", "html_url": "https://github.com/rust-lang/rust/commit/1c420b0b5538a9bd1d81b02e7d3d775e85fe0a4d"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "dbb14b7bb189a2ebd72cbf31cdad430b664bd883", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcdd68b9364fb5410fccd5f66d334f6436273c4c/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdd68b9364fb5410fccd5f66d334f6436273c4c/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=dcdd68b9364fb5410fccd5f66d334f6436273c4c", "patch": "@@ -212,7 +212,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n                     match info {\n                         TerminationInfo::Exit(code) => return Some(*code),\n                         TerminationInfo::Abort =>\n-                            format!(\"The program aborted execution\")\n+                            format!(\"the evaluated program aborted execution\")\n                     }\n                 }\n                 err_unsup!(NoMirFor(..)) =>"}, {"sha": "0cb51d593199ea83fe0bb2971ae24793d09ea30d", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dcdd68b9364fb5410fccd5f66d334f6436273c4c/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdd68b9364fb5410fccd5f66d334f6436273c4c/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=dcdd68b9364fb5410fccd5f66d334f6436273c4c", "patch": "@@ -34,9 +34,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         // Handle diverging intrinsics.\n         let (dest, ret) = match intrinsic_name {\n             \"abort\" => {\n-                // FIXME: Add a better way of indicating 'abnormal' termination,\n-                // since this is not really an 'unsupported' behavior\n-                throw_unsup_format!(\"the evaluated program aborted!\");\n+                let ti = Box::new(TerminationInfo::Abort);\n+                return Err(InterpError::MachineStop(ti).into());\n             }\n             \"miri_start_panic\" => return this.handle_miri_start_panic(args, unwind),\n             _ => {"}, {"sha": "759762196b758ffa17f3ec7f26a93403b7a55f1a", "filename": "tests/compile-fail/double_panic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcdd68b9364fb5410fccd5f66d334f6436273c4c/tests%2Fcompile-fail%2Fdouble_panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcdd68b9364fb5410fccd5f66d334f6436273c4c/tests%2Fcompile-fail%2Fdouble_panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdouble_panic.rs?ref=dcdd68b9364fb5410fccd5f66d334f6436273c4c", "patch": "@@ -1,4 +1,4 @@\n- //error-pattern: the evaluated program aborted\n+ // error-pattern: the evaluated program aborted\n struct Foo;\n impl Drop for Foo {\n     fn drop(&mut self) {"}]}