{"sha": "cf337d11191e50e472754a5cd4c1cd1fb6a648ca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmMzM3ZDExMTkxZTUwZTQ3Mjc1NGE1Y2Q0YzFjZDFmYjZhNjQ4Y2E=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-03-15T20:39:41Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2021-07-22T02:49:52Z"}, "message": "Revert PR 81473 to resolve (on mainline) issues 81626 and 81658.\n\nRevert \"Add missing brace\"\n\nThis reverts commit 85ad773049536d7fed9a94ae0ac74f97135c8655.\n\nRevert \"Simplify base_expr\"\n\nThis reverts commit 899aae465eb4ef295dc1eeb2603f744568e0768c.\n\nRevert \"Warn write-only fields\"\n\nThis reverts commit d3c69a4c0dd98af2611b7553d1a65afef6a6ccb0.", "tree": {"sha": "656bbaecd13cdf812481966e96600918e7591f3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/656bbaecd13cdf812481966e96600918e7591f3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf337d11191e50e472754a5cd4c1cd1fb6a648ca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf337d11191e50e472754a5cd4c1cd1fb6a648ca", "html_url": "https://github.com/rust-lang/rust/commit/cf337d11191e50e472754a5cd4c1cd1fb6a648ca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf337d11191e50e472754a5cd4c1cd1fb6a648ca/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "602150f21fd8a9bd3e903039c0d8c008d85aa7f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/602150f21fd8a9bd3e903039c0d8c008d85aa7f1", "html_url": "https://github.com/rust-lang/rust/commit/602150f21fd8a9bd3e903039c0d8c008d85aa7f1"}], "stats": {"total": 120, "additions": 0, "deletions": 120}, "files": [{"sha": "f5b1e95aa1a33e9aaa697d349c9ea0d2902e7444", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf337d11191e50e472754a5cd4c1cd1fb6a648ca/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf337d11191e50e472754a5cd4c1cd1fb6a648ca/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=cf337d11191e50e472754a5cd4c1cd1fb6a648ca", "patch": "@@ -338,12 +338,6 @@ impl<'tcx> Visitor<'tcx> for MarkSymbolVisitor<'tcx> {\n             hir::ExprKind::MethodCall(..) => {\n                 self.lookup_and_handle_method(expr.hir_id);\n             }\n-            hir::ExprKind::Assign(ref left, ref right, ..) => {\n-                self.handle_assign(left);\n-                self.check_for_self_assign(expr);\n-                self.visit_expr(right);\n-                return;\n-            }\n             hir::ExprKind::Field(ref lhs, ..) => {\n                 self.handle_field_access(&lhs, expr.hir_id);\n             }"}, {"sha": "050d702b625ab4f4a49121ec609251f563d300cd", "filename": "src/test/ui/borrowck/borrowck-assign-to-subfield.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cf337d11191e50e472754a5cd4c1cd1fb6a648ca/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf337d11191e50e472754a5cd4c1cd1fb6a648ca/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-assign-to-subfield.rs?ref=cf337d11191e50e472754a5cd4c1cd1fb6a648ca", "patch": "@@ -1,6 +1,5 @@\n // run-pass\n // pretty-expanded FIXME #23616\n-#![allow(dead_code)]\n \n pub fn main() {\n     struct A {"}, {"sha": "7b3f1e9f5b6cb89e4f88042e1c43df9a48a3a7b9", "filename": "src/test/ui/lint/dead-code/write-only-field.rs", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/602150f21fd8a9bd3e903039c0d8c008d85aa7f1/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/602150f21fd8a9bd3e903039c0d8c008d85aa7f1/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.rs?ref=602150f21fd8a9bd3e903039c0d8c008d85aa7f1", "patch": "@@ -1,69 +0,0 @@\n-#![deny(dead_code)]\n-\n-struct S {\n-    f: i32, //~ ERROR: field is never read\n-    sub: Sub, //~ ERROR: field is never read\n-}\n-\n-struct Sub {\n-    f: i32, //~ ERROR: field is never read\n-}\n-\n-fn field_write(s: &mut S) {\n-    s.f = 1;\n-    s.sub.f = 2;\n-}\n-\n-fn main() {\n-    let mut s = S { f: 0, sub: Sub { f: 0 } };\n-    field_write(&mut s);\n-\n-    auto_deref();\n-    nested_boxes();\n-}\n-\n-fn auto_deref() {\n-    struct E {\n-        x: bool,\n-        y: bool, //~ ERROR: field is never read\n-    }\n-\n-    struct P<'a> {\n-        e: &'a mut E\n-    }\n-\n-    impl P<'_> {\n-        fn f(&mut self) {\n-            self.e.x = true;\n-            self.e.y = true;\n-        }\n-    }\n-\n-    let mut e = E { x: false, y: false };\n-    let mut p = P { e: &mut e };\n-    p.f();\n-    assert!(e.x);\n-}\n-\n-fn nested_boxes() {\n-    struct A {\n-        b: Box<B>,\n-    }\n-\n-    struct B {\n-        c: Box<C>,\n-    }\n-\n-    struct C {\n-        u: u32, //~ ERROR: field is never read\n-        v: u32, //~ ERROR: field is never read\n-    }\n-\n-    let mut a = A {\n-        b: Box::new(B {\n-            c: Box::new(C { u: 0, v: 0 }),\n-        }),\n-    };\n-    a.b.c.v = 10;\n-    a.b.c = Box::new(C { u: 1, v: 2 });\n-}"}, {"sha": "a191d22c8b94cfe317507529ccb818d0080a0b9a", "filename": "src/test/ui/lint/dead-code/write-only-field.stderr", "status": "removed", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/602150f21fd8a9bd3e903039c0d8c008d85aa7f1/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/602150f21fd8a9bd3e903039c0d8c008d85aa7f1/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fdead-code%2Fwrite-only-field.stderr?ref=602150f21fd8a9bd3e903039c0d8c008d85aa7f1", "patch": "@@ -1,44 +0,0 @@\n-error: field is never read: `f`\n-  --> $DIR/write-only-field.rs:4:5\n-   |\n-LL |     f: i32,\n-   |     ^^^^^^\n-   |\n-note: the lint level is defined here\n-  --> $DIR/write-only-field.rs:1:9\n-   |\n-LL | #![deny(dead_code)]\n-   |         ^^^^^^^^^\n-\n-error: field is never read: `sub`\n-  --> $DIR/write-only-field.rs:5:5\n-   |\n-LL |     sub: Sub,\n-   |     ^^^^^^^^\n-\n-error: field is never read: `f`\n-  --> $DIR/write-only-field.rs:9:5\n-   |\n-LL |     f: i32,\n-   |     ^^^^^^\n-\n-error: field is never read: `y`\n-  --> $DIR/write-only-field.rs:28:9\n-   |\n-LL |         y: bool,\n-   |         ^^^^^^^\n-\n-error: field is never read: `u`\n-  --> $DIR/write-only-field.rs:58:9\n-   |\n-LL |         u: u32,\n-   |         ^^^^^^\n-\n-error: field is never read: `v`\n-  --> $DIR/write-only-field.rs:59:9\n-   |\n-LL |         v: u32,\n-   |         ^^^^^^\n-\n-error: aborting due to 6 previous errors\n-"}]}