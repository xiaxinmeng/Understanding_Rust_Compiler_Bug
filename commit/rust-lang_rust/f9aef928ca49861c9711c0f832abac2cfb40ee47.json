{"sha": "f9aef928ca49861c9711c0f832abac2cfb40ee47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YWVmOTI4Y2E0OTg2MWM5NzExYzBmODMyYWJhYzJjZmI0MGVlNDc=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-13T02:29:02Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-05-19T03:00:50Z"}, "message": "purge ufind", "tree": {"sha": "05834b08358aa89ab9949825e624252e8587b343", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05834b08358aa89ab9949825e624252e8587b343"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9aef928ca49861c9711c0f832abac2cfb40ee47", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9aef928ca49861c9711c0f832abac2cfb40ee47", "html_url": "https://github.com/rust-lang/rust/commit/f9aef928ca49861c9711c0f832abac2cfb40ee47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9aef928ca49861c9711c0f832abac2cfb40ee47/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81caf926b4ecf9a6c48f2f7ade2102e8876e6677", "url": "https://api.github.com/repos/rust-lang/rust/commits/81caf926b4ecf9a6c48f2f7ade2102e8876e6677", "html_url": "https://github.com/rust-lang/rust/commit/81caf926b4ecf9a6c48f2f7ade2102e8876e6677"}], "stats": {"total": 59, "additions": 2, "deletions": 57}, "files": [{"sha": "40a03ae25c2b5f066e6525178615e1be392c63e3", "filename": "src/libstd/std.rc", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9aef928ca49861c9711c0f832abac2cfb40ee47/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f9aef928ca49861c9711c0f832abac2cfb40ee47/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=f9aef928ca49861c9711c0f832abac2cfb40ee47", "patch": "@@ -15,7 +15,7 @@ import core::*;\n \n export net, uv;\n export c_vec, util, timer;\n-export bitv, deque, fun_treemap, list, map, smallintmap, sort, treemap, ufind;\n+export bitv, deque, fun_treemap, list, map, smallintmap, sort, treemap;\n export rope, arena;\n export ebml, dbg, getopts, json, rand, sha1, term, time, prettyprint;\n export test, tempfile, serialization;\n@@ -49,8 +49,6 @@ mod rope;\n mod smallintmap;\n mod sort;\n mod treemap;\n-mod ufind;\n-\n \n // And ... other stuff\n "}, {"sha": "9a7483553dc092cb6014fa55ec2088ab00b94782", "filename": "src/libstd/ufind.rs", "status": "removed", "additions": 0, "deletions": 52, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/81caf926b4ecf9a6c48f2f7ade2102e8876e6677/src%2Flibstd%2Fufind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81caf926b4ecf9a6c48f2f7ade2102e8876e6677/src%2Flibstd%2Fufind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fufind.rs?ref=81caf926b4ecf9a6c48f2f7ade2102e8876e6677", "patch": "@@ -1,52 +0,0 @@\n-\n-import core::option;\n-import option::{some, none};\n-\n-\n-// A very naive implementation of union-find with unsigned integer nodes.\n-// Maintains the invariant that the root of a node is always equal to or less\n-// than the node itself.\n-type node = option<uint>;\n-\n-type ufind = {mut nodes: [mut node]};\n-\n-fn make() -> ufind { ret {mut nodes: [mut]}; }\n-\n-fn make_set(ufnd: ufind) -> uint {\n-    let idx = vec::len(ufnd.nodes);\n-    ufnd.nodes += [mut none::<uint>];\n-    ret idx;\n-}\n-\n-\n-/// Creates sets as necessary to ensure that least `n` sets are present in the\n-/// data structure.\n-fn grow(ufnd: ufind, n: uint) {\n-    while set_count(ufnd) < n { make_set(ufnd); }\n-}\n-\n-fn find(ufnd: ufind, n: uint) -> uint {\n-    alt ufnd.nodes[n] {\n-      none { ret n; }\n-      some(m) { let m_ = m; ret find(ufnd, m_); }\n-    }\n-}\n-\n-fn union(ufnd: ufind, m: uint, n: uint) {\n-    let m_root = find(ufnd, m);\n-    let n_root = find(ufnd, n);\n-    if m_root < n_root {\n-        ufnd.nodes[n_root] = some::<uint>(m_root);\n-    } else if m_root > n_root { ufnd.nodes[m_root] = some::<uint>(n_root); }\n-}\n-\n-fn set_count(ufnd: ufind) -> uint { ret vec::len::<node>(ufnd.nodes); }\n-\n-\n-// Removes all sets with IDs greater than or equal to the given value.\n-fn prune(ufnd: ufind, n: uint) {\n-    // TODO: Use \"slice\" once we get rid of \"const\"\n-\n-    let mut len = vec::len::<node>(ufnd.nodes);\n-    while len != n { vec::pop::<node>(ufnd.nodes); len -= 1u; }\n-}"}, {"sha": "4869c4195735b8f52e7d58a31d7c284195a108d6", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9aef928ca49861c9711c0f832abac2cfb40ee47/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9aef928ca49861c9711c0f832abac2cfb40ee47/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=f9aef928ca49861c9711c0f832abac2cfb40ee47", "patch": "@@ -1,4 +1,4 @@\n-import std::{ufind, map, smallintmap};\n+import std::{map, smallintmap};\n import result::result;\n import std::map::hashmap;\n import driver::session;"}, {"sha": "279df880ffcda613cc37df226db9c4b2ccdfaf15", "filename": "src/rustc/middle/typeck.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f9aef928ca49861c9711c0f832abac2cfb40ee47/src%2Frustc%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9aef928ca49861c9711c0f832abac2cfb40ee47/src%2Frustc%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck.rs?ref=f9aef928ca49861c9711c0f832abac2cfb40ee47", "patch": "@@ -61,7 +61,6 @@ import std::smallintmap::map;\n import std::map;\n import std::map::{hashmap, int_hash};\n import std::serialization::{serialize_uint, deserialize_uint};\n-import std::ufind;\n import vec::each;\n import syntax::print::pprust::*;\n import util::common::{indent, indenter};"}]}