{"sha": "686682deb33d9003958889834fed92ced98828d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NjY4MmRlYjMzZDkwMDM5NTg4ODk4MzRmZWQ5MmNlZDk4ODI4ZDA=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-27T20:01:02Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-27T20:01:02Z"}, "message": "Add emit call to error message", "tree": {"sha": "bafd3683a0b86c308ba071ca43f4e667f52419ae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bafd3683a0b86c308ba071ca43f4e667f52419ae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/686682deb33d9003958889834fed92ced98828d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/686682deb33d9003958889834fed92ced98828d0", "html_url": "https://github.com/rust-lang/rust/commit/686682deb33d9003958889834fed92ced98828d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/686682deb33d9003958889834fed92ced98828d0/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f76eaece4e6d1c516564fe1d9677aa6a58fe53e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/f76eaece4e6d1c516564fe1d9677aa6a58fe53e4", "html_url": "https://github.com/rust-lang/rust/commit/f76eaece4e6d1c516564fe1d9677aa6a58fe53e4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3386d41bc63000ea4a8242beec481361d0002397", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/686682deb33d9003958889834fed92ced98828d0/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/686682deb33d9003958889834fed92ced98828d0/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=686682deb33d9003958889834fed92ced98828d0", "patch": "@@ -274,7 +274,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 if defaultness == Defaultness::Default {\n                     self.err_handler()\n                         .struct_span_err(item.span, \"inherent impls cannot be default\")\n-                        .help(\"maybe a missing `for` keyword?\");\n+                        .help(\"maybe a missing `for` keyword?\").emit();\n                 }\n             }\n             ItemKind::ForeignMod(..) => {"}]}