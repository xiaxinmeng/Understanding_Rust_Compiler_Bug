{"sha": "31d3a56b1865c33ef54e5d76e606965c87676695", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxZDNhNTZiMTg2NWMzM2VmNTRlNWQ3NmU2MDY5NjVjODc2NzY2OTU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T22:53:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-24T22:53:07Z"}, "message": "move adt to adt", "tree": {"sha": "546b8d866e0fb9f82c49ab3cc416c103112c7e24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/546b8d866e0fb9f82c49ab3cc416c103112c7e24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31d3a56b1865c33ef54e5d76e606965c87676695", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31d3a56b1865c33ef54e5d76e606965c87676695", "html_url": "https://github.com/rust-lang/rust/commit/31d3a56b1865c33ef54e5d76e606965c87676695", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31d3a56b1865c33ef54e5d76e606965c87676695/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a03c109f50a01d646cd2e63c190b0bb08760dcd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/a03c109f50a01d646cd2e63c190b0bb08760dcd8", "html_url": "https://github.com/rust-lang/rust/commit/a03c109f50a01d646cd2e63c190b0bb08760dcd8"}], "stats": {"total": 47, "additions": 23, "deletions": 24}, "files": [{"sha": "6b13b464d24ed633e7967323c294f039fb3bdd70", "filename": "crates/ra_hir/src/adt.rs", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/31d3a56b1865c33ef54e5d76e606965c87676695/crates%2Fra_hir%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d3a56b1865c33ef54e5d76e606965c87676695/crates%2Fra_hir%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fadt.rs?ref=31d3a56b1865c33ef54e5d76e606965c87676695", "patch": "@@ -3,17 +3,32 @@\n \n use std::sync::Arc;\n \n-use ra_syntax::{\n-    ast::{self, NameOwner, StructFlavor}\n-};\n+use ra_syntax::ast::{self, NameOwner, StructFlavor};\n \n use crate::{\n-    Name, AsName, Struct, Enum, EnumVariant,\n+    Name, AsName, Struct, Enum, EnumVariant, Crate,\n     HirDatabase,\n     type_ref::TypeRef,\n     ids::LocationCtx,\n };\n \n+#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n+pub enum AdtDef {\n+    Struct(Struct),\n+    Enum(Enum),\n+}\n+impl_froms!(AdtDef: Struct, Enum);\n+\n+impl AdtDef {\n+    pub(crate) fn krate(self, db: &impl HirDatabase) -> Option<Crate> {\n+        match self {\n+            AdtDef::Struct(s) => s.module(db),\n+            AdtDef::Enum(e) => e.module(db),\n+        }\n+        .krate(db)\n+    }\n+}\n+\n impl Struct {\n     pub(crate) fn variant_data(&self, db: &impl HirDatabase) -> Arc<VariantData> {\n         db.struct_data((*self).into()).variant_data.clone()"}, {"sha": "596f9c38c38eaac4b8cea7839cddc6c85f929f97", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/31d3a56b1865c33ef54e5d76e606965c87676695/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d3a56b1865c33ef54e5d76e606965c87676695/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=31d3a56b1865c33ef54e5d76e606965c87676695", "patch": "@@ -55,10 +55,11 @@ pub use self::{\n     ids::{HirFileId, MacroCallId, MacroCallLoc, HirInterner},\n     macros::{MacroDef, MacroInput, MacroExpansion},\n     nameres::{ItemMap, PerNs, Namespace, Resolution},\n-    ty::{Ty, AdtDef},\n+    ty::Ty,\n     impl_block::{ImplBlock, ImplItem},\n     code_model_impl::function::{FnScopes, ScopesWithSyntaxMapping},\n-    docs::{Docs, Documentation}\n+    docs::{Docs, Documentation},\n+    adt::AdtDef,\n };\n \n pub use self::code_model_api::{"}, {"sha": "c7f77e7a3986ef83728cade3d89e05e9763ed476", "filename": "crates/ra_hir/src/ty.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/31d3a56b1865c33ef54e5d76e606965c87676695/crates%2Fra_hir%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31d3a56b1865c33ef54e5d76e606965c87676695/crates%2Fra_hir%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty.rs?ref=31d3a56b1865c33ef54e5d76e606965c87676695", "patch": "@@ -31,7 +31,7 @@ use rustc_hash::FxHashMap;\n \n use crate::{\n     Module, Function, Struct, StructField, Enum, EnumVariant, Path, Name, ImplBlock,\n-    FnSignature, FnScopes, ModuleDef, Crate,\n+    FnSignature, FnScopes, ModuleDef, AdtDef,\n     db::HirDatabase,\n     type_ref::{TypeRef, Mutability},\n     name::KnownName,\n@@ -162,23 +162,6 @@ impl Substs {\n     }\n }\n \n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n-pub enum AdtDef {\n-    Struct(Struct),\n-    Enum(Enum),\n-}\n-impl_froms!(AdtDef: Struct, Enum);\n-\n-impl AdtDef {\n-    fn krate(self, db: &impl HirDatabase) -> Option<Crate> {\n-        match self {\n-            AdtDef::Struct(s) => s.module(db),\n-            AdtDef::Enum(e) => e.module(db),\n-        }\n-        .krate(db)\n-    }\n-}\n-\n /// A type. This is based on the `TyKind` enum in rustc (librustc/ty/sty.rs).\n ///\n /// This should be cheap to clone."}]}