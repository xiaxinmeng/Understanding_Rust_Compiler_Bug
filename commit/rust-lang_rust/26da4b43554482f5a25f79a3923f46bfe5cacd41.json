{"sha": "26da4b43554482f5a25f79a3923f46bfe5cacd41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2ZGE0YjQzNTU0NDgyZjVhMjVmNzlhMzkyM2Y0NmJmZTVjYWNkNDE=", "commit": {"author": {"name": "Edd Barrett", "email": "vext01@gmail.com", "date": "2021-04-14T15:25:16Z"}, "committer": {"name": "Edd Barrett", "email": "vext01@gmail.com", "date": "2021-04-14T15:27:01Z"}, "message": "Fix typos in rustc_codegen_ssa/src/back/write.rs.", "tree": {"sha": "5eff86a4ef4a31c0a53a09c8ba494fc6fb332757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5eff86a4ef4a31c0a53a09c8ba494fc6fb332757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26da4b43554482f5a25f79a3923f46bfe5cacd41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26da4b43554482f5a25f79a3923f46bfe5cacd41", "html_url": "https://github.com/rust-lang/rust/commit/26da4b43554482f5a25f79a3923f46bfe5cacd41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26da4b43554482f5a25f79a3923f46bfe5cacd41/comments", "author": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vext01", "id": 604955, "node_id": "MDQ6VXNlcjYwNDk1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/604955?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vext01", "html_url": "https://github.com/vext01", "followers_url": "https://api.github.com/users/vext01/followers", "following_url": "https://api.github.com/users/vext01/following{/other_user}", "gists_url": "https://api.github.com/users/vext01/gists{/gist_id}", "starred_url": "https://api.github.com/users/vext01/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vext01/subscriptions", "organizations_url": "https://api.github.com/users/vext01/orgs", "repos_url": "https://api.github.com/users/vext01/repos", "events_url": "https://api.github.com/users/vext01/events{/privacy}", "received_events_url": "https://api.github.com/users/vext01/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d408fdd4a82bc3e7ea61dd81bc9a8781b2bf939d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d408fdd4a82bc3e7ea61dd81bc9a8781b2bf939d", "html_url": "https://github.com/rust-lang/rust/commit/d408fdd4a82bc3e7ea61dd81bc9a8781b2bf939d"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c8688faa80bc394667a22171f6bd9dc506fcf053", "filename": "compiler/rustc_codegen_ssa/src/back/write.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26da4b43554482f5a25f79a3923f46bfe5cacd41/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26da4b43554482f5a25f79a3923f46bfe5cacd41/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fwrite.rs?ref=26da4b43554482f5a25f79a3923f46bfe5cacd41", "patch": "@@ -1094,7 +1094,7 @@ fn start_executing_work<B: ExtraBackendMethods>(\n     //   only place where we have access to the compiler `Session`.\n     // - LLVM work can be done on any thread.\n     // - Codegen can only happen on the main thread.\n-    // - Each thread doing substantial work most be in possession of a `Token`\n+    // - Each thread doing substantial work must be in possession of a `Token`\n     //   from the `Jobserver`.\n     // - The compiler process always holds one `Token`. Any additional `Tokens`\n     //   have to be requested from the `Jobserver`.\n@@ -1146,7 +1146,7 @@ fn start_executing_work<B: ExtraBackendMethods>(\n     // if possible. These two goals are at odds with each other: If memory\n     // consumption were not an issue, we could just let the main thread produce\n     // LLVM WorkItems at full speed, assuring maximal utilization of\n-    // Tokens/LLVM worker threads. However, since codegen usual is faster\n+    // Tokens/LLVM worker threads. However, since codegen is usually faster\n     // than LLVM processing, the queue of LLVM WorkItems would fill up and each\n     // WorkItem potentially holds on to a substantial amount of memory.\n     //"}]}