{"sha": "078fbb0819281628e3768c88c6efc77b8c3732b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OGZiYjA4MTkyODE2MjhlMzc2OGM4OGM2ZWZjNzdiOGMzNzMyYjA=", "commit": {"author": {"name": "kngwyu", "email": "yuji.kngw.80s.revive@gmail.com", "date": "2018-03-05T07:57:22Z"}, "committer": {"name": "kngwyu", "email": "yuji.kngw.80s.revive@gmail.com", "date": "2018-03-05T07:57:22Z"}, "message": "support dyn keyword(2506)", "tree": {"sha": "bd57f5aea16026649cff0728ab9d527db1007464", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd57f5aea16026649cff0728ab9d527db1007464"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/078fbb0819281628e3768c88c6efc77b8c3732b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/078fbb0819281628e3768c88c6efc77b8c3732b0", "html_url": "https://github.com/rust-lang/rust/commit/078fbb0819281628e3768c88c6efc77b8c3732b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/078fbb0819281628e3768c88c6efc77b8c3732b0/comments", "author": {"login": "kngwyu", "id": 16046705, "node_id": "MDQ6VXNlcjE2MDQ2NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/16046705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kngwyu", "html_url": "https://github.com/kngwyu", "followers_url": "https://api.github.com/users/kngwyu/followers", "following_url": "https://api.github.com/users/kngwyu/following{/other_user}", "gists_url": "https://api.github.com/users/kngwyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kngwyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kngwyu/subscriptions", "organizations_url": "https://api.github.com/users/kngwyu/orgs", "repos_url": "https://api.github.com/users/kngwyu/repos", "events_url": "https://api.github.com/users/kngwyu/events{/privacy}", "received_events_url": "https://api.github.com/users/kngwyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kngwyu", "id": 16046705, "node_id": "MDQ6VXNlcjE2MDQ2NzA1", "avatar_url": "https://avatars.githubusercontent.com/u/16046705?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kngwyu", "html_url": "https://github.com/kngwyu", "followers_url": "https://api.github.com/users/kngwyu/followers", "following_url": "https://api.github.com/users/kngwyu/following{/other_user}", "gists_url": "https://api.github.com/users/kngwyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/kngwyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kngwyu/subscriptions", "organizations_url": "https://api.github.com/users/kngwyu/orgs", "repos_url": "https://api.github.com/users/kngwyu/repos", "events_url": "https://api.github.com/users/kngwyu/events{/privacy}", "received_events_url": "https://api.github.com/users/kngwyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5025a53b30f9690a277baf14dca1ba15a383d3da", "url": "https://api.github.com/repos/rust-lang/rust/commits/5025a53b30f9690a277baf14dca1ba15a383d3da", "html_url": "https://github.com/rust-lang/rust/commit/5025a53b30f9690a277baf14dca1ba15a383d3da"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "75c8f3eabd8ac015671606f48bfc91933f18a5a9", "filename": "src/types.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/078fbb0819281628e3768c88c6efc77b8c3732b0/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078fbb0819281628e3768c88c6efc77b8c3732b0/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=078fbb0819281628e3768c88c6efc77b8c3732b0", "patch": "@@ -616,7 +616,15 @@ impl Rewrite for ast::TraitRef {\n impl Rewrite for ast::Ty {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         match self.node {\n-            ast::TyKind::TraitObject(ref bounds, ..) => bounds.rewrite(context, shape),\n+            ast::TyKind::TraitObject(ref bounds, tobj_syntax) => {\n+                let res = bounds.rewrite(context, shape)?;\n+                // we have to consider 'dyn' keyword is used or not!!!\n+                if tobj_syntax == ast::TraitObjectSyntax::Dyn {\n+                    Some(format!(\"dyn {}\", res))\n+                } else {\n+                    Some(res)\n+                }\n+            }\n             ast::TyKind::Ptr(ref mt) => {\n                 let prefix = match mt.mutbl {\n                     Mutability::Mutable => \"*mut \","}]}