{"sha": "2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "node_id": "C_kwDOAAsO6NoAKDJhN2M2YTk5ZWY1YzQzMzExYTQzMGEwN2JkNGVlYWI5NmE3YzVkOTQ", "commit": {"author": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-06-02T06:40:44Z"}, "committer": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-06-03T07:02:13Z"}, "message": "Fix suggestion for matching struct with `..` on both ends", "tree": {"sha": "93d4250884d53f2e764c8079a35e649fb79d8604", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93d4250884d53f2e764c8079a35e649fb79d8604"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEze4qXcfh0ileWqZTxf1dMgFP20cFAmR65XYACgkQxf1dMgFP\n20c2oA//XEcd2EeiC5o3kqNYT2ExffcGd0lOqbghj5r7Ui2Xg0b9hZIeu+2SdrIT\nUqUdDT1lSouIrIbdyq7f498neT001eursSwDNE0dz2ibyjodNrJq8E4xXo2IdD/+\n90l7PeavlGK5S/4cuvPHPYds0qLCKXg72ClevXv9326qD1+x/dRZMlWLlN1e9FBL\naab0hLXCEQ8J9tKzgXZFCJAVV6uMaz58saLJLiScfntxF+hiMmT5vRkMphRH9FfO\n0KV2bPJw8NwOiRyOWhMY0JZgHdApm/ngIVSAR/v7/efzrZknt/FBUXOE59TP+b/A\nJ2B87hr7z0R/UGQrj+lfZJEXHpAJbg+vB/F1SqXRv67bRnxj7dioBzLQDPAUazHn\nJsrCGO0PP/BCb6Igx6JpeZKYJTdU/hZfSKjTsP9P74aq4levqcOQPv8qjUgvHqpZ\n7xdpWKuqbM5cpm0SYdXh6rfpBKIp4ts79gvEDoRckiDEcHKUrZYJE72HvUyXA7Ij\nPV+vv8SE9IkgOu6y/aAutpHaMAP2F+w/EOmTXV1RRdyj8v8SaEv8yiNYIkcPDPR/\ncdaXXHQy5TjL3gx4rX4KF9oZ4+BaJj+I1KY5unMY6iy4+xZhRG9bABvpGskMKTpZ\nNkf5cCD34SZS+5zDYkaqI6NsKeHIoh1u6uF963AAgiTVVKIHRvU=\n=yZEI\n-----END PGP SIGNATURE-----", "payload": "tree 93d4250884d53f2e764c8079a35e649fb79d8604\nparent f85ab544dfbbce7448993c490ad16c176339b939\nauthor \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1685688044 +0800\ncommitter \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1685775733 +0800\n\nFix suggestion for matching struct with `..` on both ends\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "html_url": "https://github.com/rust-lang/rust/commit/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/comments", "author": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f85ab544dfbbce7448993c490ad16c176339b939", "url": "https://api.github.com/repos/rust-lang/rust/commits/f85ab544dfbbce7448993c490ad16c176339b939", "html_url": "https://github.com/rust-lang/rust/commit/f85ab544dfbbce7448993c490ad16c176339b939"}], "stats": {"total": 124, "additions": 111, "deletions": 13}, "files": [{"sha": "fdf365178474d179e78ea91ec04668f1759f0a5c", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 45, "deletions": 12, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "patch": "@@ -938,7 +938,8 @@ impl<'a> Parser<'a> {\n         let mut etc = false;\n         let mut ate_comma = true;\n         let mut delayed_err: Option<DiagnosticBuilder<'a, ErrorGuaranteed>> = None;\n-        let mut etc_span = None;\n+        let mut first_etc_and_maybe_comma_span = None;\n+        let mut last_non_comma_dotdot_span = None;\n \n         while self.token != token::CloseDelim(Delimiter::Brace) {\n             let attrs = match self.parse_outer_attributes() {\n@@ -969,12 +970,27 @@ impl<'a> Parser<'a> {\n             {\n                 etc = true;\n                 let mut etc_sp = self.token.span;\n+                if first_etc_and_maybe_comma_span.is_none() {\n+                    if let Some(comma_tok) = self\n+                        .look_ahead(1, |t| if *t == token::Comma { Some(t.clone()) } else { None })\n+                    {\n+                        let nw_span = self\n+                            .sess\n+                            .source_map()\n+                            .span_extend_to_line(comma_tok.span)\n+                            .trim_start(comma_tok.span.shrink_to_lo())\n+                            .map(|s| self.sess.source_map().span_until_non_whitespace(s));\n+                        first_etc_and_maybe_comma_span = nw_span.map(|s| etc_sp.to(s));\n+                    } else {\n+                        first_etc_and_maybe_comma_span =\n+                            Some(self.sess.source_map().span_until_non_whitespace(etc_sp));\n+                    }\n+                }\n \n                 self.recover_bad_dot_dot();\n                 self.bump(); // `..` || `...` || `_`\n \n                 if self.token == token::CloseDelim(Delimiter::Brace) {\n-                    etc_span = Some(etc_sp);\n                     break;\n                 }\n                 let token_str = super::token_descr(&self.token);\n@@ -996,7 +1012,6 @@ impl<'a> Parser<'a> {\n                     ate_comma = true;\n                 }\n \n-                etc_span = Some(etc_sp.until(self.token.span));\n                 if self.token == token::CloseDelim(Delimiter::Brace) {\n                     // If the struct looks otherwise well formed, recover and continue.\n                     if let Some(sp) = comma_sp {\n@@ -1040,6 +1055,9 @@ impl<'a> Parser<'a> {\n                         }\n                     }?;\n                     ate_comma = this.eat(&token::Comma);\n+\n+                    last_non_comma_dotdot_span = Some(this.prev_token.span);\n+\n                     // We just ate a comma, so there's no need to use\n                     // `TrailingToken::Comma`\n                     Ok((field, TrailingToken::None))\n@@ -1049,15 +1067,30 @@ impl<'a> Parser<'a> {\n         }\n \n         if let Some(mut err) = delayed_err {\n-            if let Some(etc_span) = etc_span {\n-                err.multipart_suggestion(\n-                    \"move the `..` to the end of the field list\",\n-                    vec![\n-                        (etc_span, String::new()),\n-                        (self.token.span, format!(\"{}.. }}\", if ate_comma { \"\" } else { \", \" })),\n-                    ],\n-                    Applicability::MachineApplicable,\n-                );\n+            if let Some(first_etc_span) = first_etc_and_maybe_comma_span {\n+                if self.prev_token == token::DotDot {\n+                    // We have `.., x, ..`.\n+                    err.multipart_suggestion(\n+                        \"remove the starting `..`\",\n+                        vec![(first_etc_span, String::new())],\n+                        Applicability::MachineApplicable,\n+                    );\n+                } else {\n+                    if let Some(last_non_comma_dotdot_span) = last_non_comma_dotdot_span {\n+                        // We have `.., x`.\n+                        err.multipart_suggestion(\n+                            \"move the `..` to the end of the field list\",\n+                            vec![\n+                                (first_etc_span, String::new()),\n+                                (\n+                                    self.token.span.to(last_non_comma_dotdot_span.shrink_to_hi()),\n+                                    format!(\"{} .. }}\", if ate_comma { \"\" } else { \",\" }),\n+                                ),\n+                            ],\n+                            Applicability::MachineApplicable,\n+                        );\n+                    }\n+                }\n             }\n             err.emit();\n         }"}, {"sha": "5e73d8e38de816de29a7779624d2589e35fbc931", "filename": "tests/ui/parser/issue-112188.fixed", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-112188.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-112188.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-112188.fixed?ref=2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+\n+#![allow(unused)]\n+\n+struct Foo { x: i32 }\n+\n+fn main() {\n+    let f = Foo { x: 0 };\n+    let Foo { .. } = f;\n+    let Foo { .. } = f; //~ ERROR expected `}`, found `,`\n+    let Foo { x, .. } = f;\n+    let Foo { x, .. } = f; //~ ERROR expected `}`, found `,`\n+    let Foo { x, .. } = f; //~ ERROR expected `}`, found `,`\n+}"}, {"sha": "27ca192e52263eac3f373878af218d7899a79928", "filename": "tests/ui/parser/issue-112188.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-112188.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-112188.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-112188.rs?ref=2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "patch": "@@ -0,0 +1,14 @@\n+// run-rustfix\n+\n+#![allow(unused)]\n+\n+struct Foo { x: i32 }\n+\n+fn main() {\n+    let f = Foo { x: 0 };\n+    let Foo { .. } = f;\n+    let Foo { .., } = f; //~ ERROR expected `}`, found `,`\n+    let Foo { x, .. } = f;\n+    let Foo { .., x } = f; //~ ERROR expected `}`, found `,`\n+    let Foo { .., x, .. } = f; //~ ERROR expected `}`, found `,`\n+}"}, {"sha": "6d2d8e6a3b0554fdbd28ff304edf003c4545cd2f", "filename": "tests/ui/parser/issue-112188.stderr", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-112188.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-112188.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-112188.stderr?ref=2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "patch": "@@ -0,0 +1,37 @@\n+error: expected `}`, found `,`\n+  --> $DIR/issue-112188.rs:10:17\n+   |\n+LL |     let Foo { .., } = f;\n+   |               --^\n+   |               | |\n+   |               | expected `}`\n+   |               | help: remove this comma\n+   |               `..` must be at the end and cannot have a trailing comma\n+\n+error: expected `}`, found `,`\n+  --> $DIR/issue-112188.rs:12:17\n+   |\n+LL |     let Foo { .., x } = f;\n+   |               --^\n+   |               | |\n+   |               | expected `}`\n+   |               `..` must be at the end and cannot have a trailing comma\n+   |\n+help: move the `..` to the end of the field list\n+   |\n+LL -     let Foo { .., x } = f;\n+LL +     let Foo { x, .. } = f;\n+   |\n+\n+error: expected `}`, found `,`\n+  --> $DIR/issue-112188.rs:13:17\n+   |\n+LL |     let Foo { .., x, .. } = f;\n+   |               --^-\n+   |               | |\n+   |               | expected `}`\n+   |               `..` must be at the end and cannot have a trailing comma\n+   |               help: remove the starting `..`\n+\n+error: aborting due to 3 previous errors\n+"}, {"sha": "97e16f88b8d328e6355820ec9a6a404f58150bbd", "filename": "tests/ui/parser/issue-49257.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-49257.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94/tests%2Fui%2Fparser%2Fissue-49257.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissue-49257.stderr?ref=2a7c6a99ef5c43311a430a07bd4eeab96a7c5d94", "patch": "@@ -25,7 +25,7 @@ LL |     let Point { .., y } = p;\n help: move the `..` to the end of the field list\n    |\n LL -     let Point { .., y } = p;\n-LL +     let Point { y , .. } = p;\n+LL +     let Point { y, .. } = p;\n    |\n \n error: expected `}`, found `,`"}]}