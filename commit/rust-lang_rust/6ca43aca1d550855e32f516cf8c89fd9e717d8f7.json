{"sha": "6ca43aca1d550855e32f516cf8c89fd9e717d8f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYTQzYWNhMWQ1NTA4NTVlMzJmNTE2Y2Y4Yzg5ZmQ5ZTcxN2Q4Zjc=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-05T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-11-05T00:00:00Z"}, "message": "inliner: Copy unevaluated constants only after successful inlining\n\nInliner copies the unevaluated constants from the callee body to the\ncaller at the point where decision to inline is yet to be made. The\nconstants will be unnecessary if inlining were to fail.\n\nOrganize the code moving items from callee to the caller together in one\nplace to avoid the issue.", "tree": {"sha": "8f08febe281946e19a78767b68685caa5614f9ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f08febe281946e19a78767b68685caa5614f9ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ca43aca1d550855e32f516cf8c89fd9e717d8f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca43aca1d550855e32f516cf8c89fd9e717d8f7", "html_url": "https://github.com/rust-lang/rust/commit/6ca43aca1d550855e32f516cf8c89fd9e717d8f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ca43aca1d550855e32f516cf8c89fd9e717d8f7/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c2070121905b66698ebbfb105eab30f3484e602", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c2070121905b66698ebbfb105eab30f3484e602", "html_url": "https://github.com/rust-lang/rust/commit/8c2070121905b66698ebbfb105eab30f3484e602"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "4de93739992542dd838e308c40627d073953bd9d", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6ca43aca1d550855e32f516cf8c89fd9e717d8f7/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca43aca1d550855e32f516cf8c89fd9e717d8f7/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=6ca43aca1d550855e32f516cf8c89fd9e717d8f7", "patch": "@@ -140,14 +140,6 @@ impl Inliner<'tcx> {\n                 continue;\n             };\n \n-            // Copy only unevaluated constants from the callee_body into the caller_body.\n-            // Although we are only pushing `ConstKind::Unevaluated` consts to\n-            // `required_consts`, here we may not only have `ConstKind::Unevaluated`\n-            // because we are calling `subst_and_normalize_erasing_regions`.\n-            caller_body.required_consts.extend(callee_body.required_consts.iter().copied().filter(\n-                |&constant| matches!(constant.literal.val, ConstKind::Unevaluated(_, _, _)),\n-            ));\n-\n             let start = caller_body.basic_blocks().len();\n             debug!(\"attempting to inline callsite {:?} - body={:?}\", callsite, callee_body);\n             if !self.inline_call(callsite, caller_body, callee_body) {\n@@ -522,6 +514,16 @@ impl Inliner<'tcx> {\n                     kind: TerminatorKind::Goto { target: integrator.map_block(START_BLOCK) },\n                 });\n \n+                // Copy only unevaluated constants from the callee_body into the caller_body.\n+                // Although we are only pushing `ConstKind::Unevaluated` consts to\n+                // `required_consts`, here we may not only have `ConstKind::Unevaluated`\n+                // because we are calling `subst_and_normalize_erasing_regions`.\n+                caller_body.required_consts.extend(\n+                    callee_body.required_consts.iter().copied().filter(|&constant| {\n+                        matches!(constant.literal.val, ConstKind::Unevaluated(_, _, _))\n+                    }),\n+                );\n+\n                 true\n             }\n             kind => {"}]}