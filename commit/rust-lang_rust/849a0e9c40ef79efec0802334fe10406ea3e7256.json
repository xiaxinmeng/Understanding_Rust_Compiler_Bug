{"sha": "849a0e9c40ef79efec0802334fe10406ea3e7256", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OWEwZTljNDBlZjc5ZWZlYzA4MDIzMzRmZTEwNDA2ZWEzZTcyNTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-12T09:23:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-10-12T09:23:10Z"}, "message": "Auto merge of #53933 - GuillaumeGomez:codeblock-error-display, r=QuietMisdreavus\n\nImprove error display for codeblocks in rustdoc\n\nPart of #53919.\n\nr? @QuietMisdreavus", "tree": {"sha": "fe723bda29970a99a90d0433d95a4c2ef02c4f7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe723bda29970a99a90d0433d95a4c2ef02c4f7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/849a0e9c40ef79efec0802334fe10406ea3e7256", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/849a0e9c40ef79efec0802334fe10406ea3e7256", "html_url": "https://github.com/rust-lang/rust/commit/849a0e9c40ef79efec0802334fe10406ea3e7256", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/849a0e9c40ef79efec0802334fe10406ea3e7256/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8dc554a32507de2d923e5ba3ca3d672adaf0a822", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc554a32507de2d923e5ba3ca3d672adaf0a822", "html_url": "https://github.com/rust-lang/rust/commit/8dc554a32507de2d923e5ba3ca3d672adaf0a822"}, {"sha": "322e46916e8251821543769ada7e38d6e4532da4", "url": "https://api.github.com/repos/rust-lang/rust/commits/322e46916e8251821543769ada7e38d6e4532da4", "html_url": "https://github.com/rust-lang/rust/commit/322e46916e8251821543769ada7e38d6e4532da4"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "87b4527a2a73946629e53bd4ecf5e6b1f81d702b", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=849a0e9c40ef79efec0802334fe10406ea3e7256", "patch": "@@ -44,9 +44,21 @@ pub fn render_with_highlighting(src: &str, class: Option<&str>,\n     }\n     write_header(class, &mut out).unwrap();\n \n-    let mut classifier = Classifier::new(lexer::StringReader::new(&sess, fm, None),\n-                                         sess.source_map());\n+    let lexer = match lexer::StringReader::new_without_err(&sess, fm, None, \"Output from rustc:\") {\n+        Ok(l) => l,\n+        Err(_) => {\n+            let first_line = src.lines().next().unwrap_or_else(|| \"\");\n+            let mut err = sess.span_diagnostic\n+                              .struct_warn(&format!(\"Invalid doc comment starting with: `{}`\\n\\\n+                                                     (Ignoring this codeblock)\",\n+                                                    first_line));\n+            err.emit();\n+            return String::new();\n+        }\n+    };\n+    let mut classifier = Classifier::new(lexer, sess.source_map());\n     if classifier.write_source(&mut out).is_err() {\n+        classifier.lexer.emit_fatal_errors();\n         return format!(\"<pre>{}</pre>\", src);\n     }\n \n@@ -162,11 +174,10 @@ impl<'a> Classifier<'a> {\n         match self.lexer.try_next_token() {\n             Ok(tas) => Ok(tas),\n             Err(_) => {\n-                self.lexer.emit_fatal_errors();\n-                self.lexer.sess.span_diagnostic\n-                    .struct_warn(\"Backing out of syntax highlighting\")\n-                    .note(\"You probably did not intend to render this as a rust code-block\")\n-                    .emit();\n+                let mut err = self.lexer.sess.span_diagnostic\n+                                  .struct_warn(\"Backing out of syntax highlighting\");\n+                err.note(\"You probably did not intend to render this as a rust code-block\");\n+                err.emit();\n                 Err(io::Error::new(io::ErrorKind::Other, \"\"))\n             }\n         }"}, {"sha": "a814c88ee78216babc4db391df90667d0efabcf7", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=849a0e9c40ef79efec0802334fe10406ea3e7256", "patch": "@@ -238,6 +238,19 @@ impl<'a> StringReader<'a> {\n         sr\n     }\n \n+    pub fn new_without_err(sess: &'a ParseSess,\n+                           source_file: Lrc<syntax_pos::SourceFile>,\n+                           override_span: Option<Span>,\n+                           prepend_error_text: &str) -> Result<Self, ()> {\n+        let mut sr = StringReader::new_raw(sess, source_file, override_span);\n+        if sr.advance_token().is_err() {\n+            eprintln!(\"{}\", prepend_error_text);\n+            sr.emit_fatal_errors();\n+            return Err(());\n+        }\n+        Ok(sr)\n+    }\n+\n     pub fn retokenize(sess: &'a ParseSess, mut span: Span) -> Self {\n         let begin = sess.source_map().lookup_byte_offset(span.lo());\n         let end = sess.source_map().lookup_byte_offset(span.hi());"}, {"sha": "8c790d7d07e152c3dbbce7cbc6eb1946c0748759", "filename": "src/test/rustdoc-ui/invalid-syntax.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs?ref=849a0e9c40ef79efec0802334fe10406ea3e7256", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-pass\n+// compile-flags: --error-format=human\n+\n+/// ```\n+/// \\__________pkt->size___________/          \\_result->size_/ \\__pkt->size__/\n+/// ```\n+pub fn foo() {}"}, {"sha": "b5661332e8d0e587ba38ae0eaabba31fbe6ae92a", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/849a0e9c40ef79efec0802334fe10406ea3e7256/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=849a0e9c40ef79efec0802334fe10406ea3e7256", "patch": "@@ -0,0 +1,10 @@\n+Output from rustc:\n+error: unknown start of token: /\n+ --> <stdin>:1:1\n+  |\n+1 | /__________pkt->size___________/          /_result->size_/ /__pkt->size__/\n+  | ^\n+\n+warning: Invalid doc comment starting with: `/__________pkt->size___________/          /_result->size_/ /__pkt->size__/`\n+(Ignoring this codeblock)\n+"}]}