{"sha": "759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1OWRmNWZhMzU3ZWNjMGY0YTBkZWU5YTNhYzljOGIxYzcxNjBjYjg=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-12T23:22:46Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-12-25T06:08:05Z"}, "message": "Fix case in `associated-type-projection-from-multiple-supertraits.rs`\n\nThis still doesn't handle the case entirely correctly, requiring a more\ntargeted approach with a better suggestion, but at least now the\nsuggested syntax makes *some* sense.", "tree": {"sha": "24bce09978a98d6603068d5174c97a8e31f09d4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24bce09978a98d6603068d5174c97a8e31f09d4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "html_url": "https://github.com/rust-lang/rust/commit/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547abe0c52fedc11cd4d1276f7ad51ce29a411e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/547abe0c52fedc11cd4d1276f7ad51ce29a411e6", "html_url": "https://github.com/rust-lang/rust/commit/547abe0c52fedc11cd4d1276f7ad51ce29a411e6"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "85ec81a953487f12b9040cada7fd547cc9efce75", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "patch": "@@ -937,6 +937,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 bounds,\n                 speculative,\n                 &mut dup_bindings,\n+                span,\n             );\n             // Okay to ignore `Err` because of `ErrorReported` (see above).\n         }\n@@ -1189,6 +1190,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         bounds: &mut Bounds<'tcx>,\n         speculative: bool,\n         dup_bindings: &mut FxHashMap<DefId, Span>,\n+        path_span: Span,\n     ) -> Result<(), ErrorReported> {\n         let tcx = self.tcx();\n \n@@ -1259,7 +1261,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     || traits::supertraits(tcx, trait_ref),\n                     &trait_ref.print_only_trait_path().to_string(),\n                     binding.item_name,\n-                    binding.span,\n+                    path_span,\n                 )\n             }?;\n "}, {"sha": "9a5787db41ee8491cc2996cbac1ceea3bd52545a", "filename": "src/test/ui/associated-type/associated-type-projection-from-multiple-supertraits.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type%2Fassociated-type-projection-from-multiple-supertraits.stderr?ref=759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "patch": "@@ -26,7 +26,7 @@ LL | fn dent<C:BoxCar>(c: C, color: <C as Vehicle>::Color) {\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n \n error[E0221]: ambiguous associated type `Color` in bounds of `BoxCar`\n-  --> $DIR/associated-type-projection-from-multiple-supertraits.rs:25:37\n+  --> $DIR/associated-type-projection-from-multiple-supertraits.rs:25:30\n    |\n LL |     type Color;\n    |     ----------- ambiguous `Color` from `Vehicle`\n@@ -35,16 +35,16 @@ LL |     type Color;\n    |     ----------- ambiguous `Color` from `Box`\n ...\n LL | fn dent_object<COLOR>(c: dyn BoxCar<Color=COLOR>) {\n-   |                                     ^^^^^^^^^^^ ambiguous associated type `Color`\n+   |                              ^^^^^^^^^^^^^^^^^^^ ambiguous associated type `Color`\n    |\n help: use fully qualified syntax to disambiguate\n    |\n-LL | fn dent_object<COLOR>(c: dyn BoxCar<<BoxCar as Box>::Color>) {\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^^\n+LL | fn dent_object<COLOR>(c: dyn <BoxCar as Box>::Color) {\n+   |                              ^^^^^^^^^^^^^^^^^^^^^^\n help: use fully qualified syntax to disambiguate\n    |\n-LL | fn dent_object<COLOR>(c: dyn BoxCar<<BoxCar as Vehicle>::Color>) {\n-   |                                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | fn dent_object<COLOR>(c: dyn <BoxCar as Vehicle>::Color) {\n+   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0191]: the value of the associated type `Color` (from trait `Vehicle`) must be specified\n   --> $DIR/associated-type-projection-from-multiple-supertraits.rs:25:30"}, {"sha": "73e66ceb845647f073c27e9dfb81954f546bf755", "filename": "src/test/ui/error-codes/E0220.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0220.stderr?ref=759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "patch": "@@ -1,8 +1,8 @@\n error[E0220]: associated type `F` not found for `Trait`\n-  --> $DIR/E0220.rs:5:22\n+  --> $DIR/E0220.rs:5:16\n    |\n LL | type Foo = dyn Trait<F=i32>;\n-   |                      ^^^^^ associated type `F` not found\n+   |                ^^^^^^^^^^^^ associated type `F` not found\n \n error[E0191]: the value of the associated type `Bar` (from trait `Trait`) must be specified\n   --> $DIR/E0220.rs:5:16"}, {"sha": "5b64fe18892807eb575ae4ce2a62277b86865c72", "filename": "src/test/ui/span/type-binding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr?ref=759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "patch": "@@ -1,5 +1,5 @@\n error[E0220]: associated type `Trget` not found for `std::ops::Deref`\n-  --> $DIR/type-binding.rs:6:20\n+  --> $DIR/type-binding.rs:6:14\n    |\n LL | fn homura<T: Deref<Trget = i32>>(_: T) {}\n    |                    ^^^^^^^^^^^ help: there is an associated type with a similar name: `Target`"}, {"sha": "ff65fd968c5e7b00bdc20f98126890e4f4a841c1", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-wrong-trait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-trait.stderr?ref=759df5fa357ecc0f4a0dee9a3ac9c8b1c7160cb8", "patch": "@@ -5,10 +5,10 @@ LL | fn f<F:Trait(isize) -> isize>(x: F) {}\n    |        ^^^^^^^^^^^^ unexpected type argument\n \n error[E0220]: associated type `Output` not found for `Trait`\n-  --> $DIR/unboxed-closure-sugar-wrong-trait.rs:5:24\n+  --> $DIR/unboxed-closure-sugar-wrong-trait.rs:5:8\n    |\n LL | fn f<F:Trait(isize) -> isize>(x: F) {}\n-   |                        ^^^^^ associated type `Output` not found\n+   |        ^^^^^^^^^^^^^^^^^^^^^ associated type `Output` not found\n \n error: aborting due to 2 previous errors\n "}]}