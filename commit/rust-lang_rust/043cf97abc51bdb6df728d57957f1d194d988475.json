{"sha": "043cf97abc51bdb6df728d57957f1d194d988475", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0M2NmOTdhYmM1MWJkYjZkZjcyOGQ1Nzk1N2YxZDE5NGQ5ODg0NzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T19:16:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-01-21T19:16:11Z"}, "message": "Auto merge of #6609 - giraffate:fix_wrong_suggestion_of_ref_in_deref, r=llogiq\n\nFix a wrong suggestion of `ref_in_deref`\n\nFix #6358.\n\nchangelog: Fix a wrong suggestion of `ref_in_deref`", "tree": {"sha": "ded5b7dc6dcbd4c1821237b3fe65f7f1a5ad5d57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ded5b7dc6dcbd4c1821237b3fe65f7f1a5ad5d57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/043cf97abc51bdb6df728d57957f1d194d988475", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/043cf97abc51bdb6df728d57957f1d194d988475", "html_url": "https://github.com/rust-lang/rust/commit/043cf97abc51bdb6df728d57957f1d194d988475", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/043cf97abc51bdb6df728d57957f1d194d988475/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d381c3a849982ed0235b38a71d389d188ea28b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d381c3a849982ed0235b38a71d389d188ea28b0", "html_url": "https://github.com/rust-lang/rust/commit/4d381c3a849982ed0235b38a71d389d188ea28b0"}, {"sha": "966320642b157c539901ed0461d6aab6cb34729d", "url": "https://api.github.com/repos/rust-lang/rust/commits/966320642b157c539901ed0461d6aab6cb34729d", "html_url": "https://github.com/rust-lang/rust/commit/966320642b157c539901ed0461d6aab6cb34729d"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "2dfb947b5eb9ae99dd2b844a79c00eb3472a0d83", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/043cf97abc51bdb6df728d57957f1d194d988475/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043cf97abc51bdb6df728d57957f1d194d988475/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=043cf97abc51bdb6df728d57957f1d194d988475", "patch": "@@ -1,3 +1,4 @@\n+use crate::utils::sugg::Sugg;\n use crate::utils::{in_macro, snippet_opt, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc_ast::ast::{Expr, ExprKind, Mutability, UnOp};\n@@ -124,14 +125,19 @@ impl EarlyLintPass for RefInDeref {\n             if let ExprKind::Paren(ref parened) = object.kind;\n             if let ExprKind::AddrOf(_, _, ref inner) = parened.kind;\n             then {\n-                let mut applicability = Applicability::MachineApplicable;\n+                let applicability = if inner.span.from_expansion() {\n+                    Applicability::MaybeIncorrect\n+                } else {\n+                    Applicability::MachineApplicable\n+                };\n+                let sugg = Sugg::ast(cx, inner, \"_\").maybe_par();\n                 span_lint_and_sugg(\n                     cx,\n                     REF_IN_DEREF,\n                     object.span,\n                     \"creating a reference that is immediately dereferenced\",\n                     \"try this\",\n-                    snippet_with_applicability(cx, inner.span, \"_\", &mut applicability).to_string(),\n+                    sugg.to_string(),\n                     applicability,\n                 );\n             }"}, {"sha": "d927bae976f799e05c567c1e02467e813a563a1e", "filename": "tests/ui/unnecessary_ref.fixed", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/043cf97abc51bdb6df728d57957f1d194d988475/tests%2Fui%2Funnecessary_ref.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/043cf97abc51bdb6df728d57957f1d194d988475/tests%2Fui%2Funnecessary_ref.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.fixed?ref=043cf97abc51bdb6df728d57957f1d194d988475", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n \n #![feature(stmt_expr_attributes)]\n-#![allow(unused_variables)]\n+#![allow(unused_variables, dead_code)]\n \n struct Outer {\n     inner: u32,\n@@ -12,3 +12,12 @@ fn main() {\n     let outer = Outer { inner: 0 };\n     let inner = outer.inner;\n }\n+\n+struct Apple;\n+impl Apple {\n+    fn hello(&self) {}\n+}\n+struct Package(pub *const Apple);\n+fn foobar(package: *const Package) {\n+    unsafe { &*(*package).0 }.hello();\n+}"}, {"sha": "86bfb76ec26192a905dd9babc6349dcd2febca60", "filename": "tests/ui/unnecessary_ref.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/043cf97abc51bdb6df728d57957f1d194d988475/tests%2Fui%2Funnecessary_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/043cf97abc51bdb6df728d57957f1d194d988475/tests%2Fui%2Funnecessary_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.rs?ref=043cf97abc51bdb6df728d57957f1d194d988475", "patch": "@@ -1,7 +1,7 @@\n // run-rustfix\n \n #![feature(stmt_expr_attributes)]\n-#![allow(unused_variables)]\n+#![allow(unused_variables, dead_code)]\n \n struct Outer {\n     inner: u32,\n@@ -12,3 +12,12 @@ fn main() {\n     let outer = Outer { inner: 0 };\n     let inner = (&outer).inner;\n }\n+\n+struct Apple;\n+impl Apple {\n+    fn hello(&self) {}\n+}\n+struct Package(pub *const Apple);\n+fn foobar(package: *const Package) {\n+    unsafe { &*(&*package).0 }.hello();\n+}"}, {"sha": "436f4bcf7380465ac7c96598d38b8b759568126f", "filename": "tests/ui/unnecessary_ref.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/043cf97abc51bdb6df728d57957f1d194d988475/tests%2Fui%2Funnecessary_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/043cf97abc51bdb6df728d57957f1d194d988475/tests%2Fui%2Funnecessary_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_ref.stderr?ref=043cf97abc51bdb6df728d57957f1d194d988475", "patch": "@@ -10,5 +10,13 @@ note: the lint level is defined here\n LL | #[deny(clippy::ref_in_deref)]\n    |        ^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: creating a reference that is immediately dereferenced\n+  --> $DIR/unnecessary_ref.rs:22:16\n+   |\n+LL |     unsafe { &*(&*package).0 }.hello();\n+   |                ^^^^^^^^^^^ help: try this: `(*package)`\n+   |\n+   = note: `-D clippy::ref-in-deref` implied by `-D warnings`\n+\n+error: aborting due to 2 previous errors\n "}]}