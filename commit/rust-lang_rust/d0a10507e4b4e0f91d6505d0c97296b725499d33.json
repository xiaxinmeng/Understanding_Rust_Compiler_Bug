{"sha": "d0a10507e4b4e0f91d6505d0c97296b725499d33", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwYTEwNTA3ZTRiNGUwZjkxZDY1MDVkMGM5NzI5NmI3MjU0OTlkMzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-16T15:52:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-09-16T15:52:22Z"}, "message": "Auto merge of #945 - christianpoveda:ptr-align-offset, r=oli-obk\n\nUse libcore's align_offset\n\nRelated issue: https://github.com/rust-lang/miri/issues/873", "tree": {"sha": "f4be380b883ca54a36b567b30b1703ce44015fa3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4be380b883ca54a36b567b30b1703ce44015fa3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0a10507e4b4e0f91d6505d0c97296b725499d33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0a10507e4b4e0f91d6505d0c97296b725499d33", "html_url": "https://github.com/rust-lang/rust/commit/d0a10507e4b4e0f91d6505d0c97296b725499d33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0a10507e4b4e0f91d6505d0c97296b725499d33/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d88138723780d11ca2c09560111223dc20b9d5f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88138723780d11ca2c09560111223dc20b9d5f3", "html_url": "https://github.com/rust-lang/rust/commit/d88138723780d11ca2c09560111223dc20b9d5f3"}, {"sha": "55863cb88effdaa2198a22149cfae99c2377dd76", "url": "https://api.github.com/repos/rust-lang/rust/commits/55863cb88effdaa2198a22149cfae99c2377dd76", "html_url": "https://github.com/rust-lang/rust/commit/55863cb88effdaa2198a22149cfae99c2377dd76"}], "stats": {"total": 36, "additions": 33, "deletions": 3}, "files": [{"sha": "a0da364ff0b9c792409a31e0b73c1d9e2c3b0cce", "filename": "src/shims/mod.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d0a10507e4b4e0f91d6505d0c97296b725499d33/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a10507e4b4e0f91d6505d0c97296b725499d33/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=d0a10507e4b4e0f91d6505d0c97296b725499d33", "patch": "@@ -27,9 +27,25 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n         // There are some more lang items we want to hook that CTFE does not hook (yet).\n         if this.tcx.lang_items().align_offset_fn() == Some(instance.def.def_id()) {\n-            // FIXME: return a real value in case the target allocation has an\n-            // alignment bigger than the one requested.\n-            let n = u128::max_value();\n+\n+            let n = {\n+                let ptr = this.force_ptr(this.read_scalar(args[0])?.not_undef()?)?;\n+                let align = this.force_bits(\n+                    this.read_scalar(args[1])?.not_undef()?,\n+                    this.pointer_size()\n+                )? as usize;\n+\n+                let stride = this.memory().get(ptr.alloc_id)?.align.bytes() as usize;\n+                // if the allocation alignment is at least the required alignment, we use the\n+                // libcore implementation\n+                if stride >= align {\n+                    ((stride + ptr.offset.bytes() as usize) as *const ())\n+                        .align_offset(align) as u128\n+                } else {\n+                    u128::max_value()\n+                }\n+            };\n+\n             let dest = dest.unwrap();\n             let n = this.truncate(n, dest.layout);\n             this.write_scalar(Scalar::from_uint(n, dest.layout.size), dest)?;"}, {"sha": "202856b3bde9a78d25a9a415b0b43c5b76b2fe1d", "filename": "tests/run-pass/aligned_utf8_check.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d0a10507e4b4e0f91d6505d0c97296b725499d33/tests%2Frun-pass%2Faligned_utf8_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0a10507e4b4e0f91d6505d0c97296b725499d33/tests%2Frun-pass%2Faligned_utf8_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Faligned_utf8_check.rs?ref=d0a10507e4b4e0f91d6505d0c97296b725499d33", "patch": "@@ -0,0 +1,13 @@\n+fn main() {\n+    const N: usize = 10;\n+\n+    let x = vec![0x4141u16; N];\n+\n+    let mut y: Vec<u8> = unsafe { std::mem::transmute(x) };\n+    unsafe { y.set_len(2 * N) };\n+\n+    println!(\"{:?}\", std::str::from_utf8(&y).unwrap());\n+\n+    let mut x: Vec<u16> = unsafe { std::mem::transmute(y) };\n+    unsafe { x.set_len(N) };\n+}"}, {"sha": "8d08312cac7b5287a8bb12ee6606d78a0856bdae", "filename": "tests/run-pass/aligned_utf8_check.stdout", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d0a10507e4b4e0f91d6505d0c97296b725499d33/tests%2Frun-pass%2Faligned_utf8_check.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/d0a10507e4b4e0f91d6505d0c97296b725499d33/tests%2Frun-pass%2Faligned_utf8_check.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Faligned_utf8_check.stdout?ref=d0a10507e4b4e0f91d6505d0c97296b725499d33", "patch": "@@ -0,0 +1 @@\n+\"AAAAAAAAAAAAAAAAAAAA\""}]}