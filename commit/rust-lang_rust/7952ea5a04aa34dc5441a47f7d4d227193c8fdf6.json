{"sha": "7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5NTJlYTVhMDRhYTM0ZGM1NDQxYTQ3ZjdkNGQyMjcxOTNjOGZkZjY=", "commit": {"author": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-10T18:10:09Z"}, "committer": {"name": "Cl\u00e9ment Renault", "email": "clement@meilisearch.com", "date": "2020-12-10T18:44:37Z"}, "message": "Fix the fmt issues", "tree": {"sha": "1fbb0c9643172fd64edbd070157ec205db979c6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fbb0c9643172fd64edbd070157ec205db979c6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEAUNXpSBlykwfjB4xkq2k6TXnH6QFAl/SbJUACgkQkq2k6TXn\nH6RB3xAAqHLwdaCSEMNazssKeqPsL6/1umua3811RRWrWABpRlUb8fg57DIbYqfu\nmB3AKXTrhPoZZqZDnWnDCU+y62Dhume2ZlcYzDPYKmK6qkogGa1Iz5MPxw3h/hKl\ntgvZhUJdSxchAFxCah1EEJTbidpgrxUt5Q3NOoyip+NUqXjz2pHoVgRZmh6KvRYn\nPeoFiiXj3eZR7wJndfOEDkOsxne1SF9WsSX4jqDiUsO/knU2wFLdkAFfRUfwqNTz\nOX0yLB4Mk3quC18Q03H993hnptl7goB87lQXxp31EsWNmd3DlGtNy9ZKoRFQDXJd\nFxC+6+pfcsAPdD6zzikdzVjab+AuJ7VA/yguAs7rStFlZEJg76DtwU4ccHGINg9b\nCeE16RroRocmLBF36ebnYYSbptFBNW4zdsuMTmnY/hteuMBQ8u2ENhW3tpfWQqTq\nM3fQM7tKTqwgVdR5W+lqo9/fF8BpxwqEQu0E7l4IodsW4/0HLD6S9eG4sPzW0gU1\n0Q8cNtEUsd6MuxO3pd+jVRhwKQTmdmpI2dtvJNk5lznZfhZhGrJA9SPVsaMIcY8R\nq14zNpAuAnUtL4aomc/1GBJfIcw6H1qw0BAo2RjMlIVuHKjD1R5x6rp/+YMZ4gK1\nqP4EnUPgA1A+pzYL3GCqQpaDYyH2x2nNDUcTDyxw/FUjLPUGHQw=\n=m8tI\n-----END PGP SIGNATURE-----", "payload": "tree 1fbb0c9643172fd64edbd070157ec205db979c6f\nparent 45693b43a5e779545cf6c6af909ab5c27d94e4c8\nauthor Cl\u00e9ment Renault <clement@meilisearch.com> 1607623809 +0100\ncommitter Cl\u00e9ment Renault <clement@meilisearch.com> 1607625877 +0100\n\nFix the fmt issues\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "html_url": "https://github.com/rust-lang/rust/commit/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/comments", "author": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kerollmops", "id": 3610253, "node_id": "MDQ6VXNlcjM2MTAyNTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3610253?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kerollmops", "html_url": "https://github.com/Kerollmops", "followers_url": "https://api.github.com/users/Kerollmops/followers", "following_url": "https://api.github.com/users/Kerollmops/following{/other_user}", "gists_url": "https://api.github.com/users/Kerollmops/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kerollmops/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kerollmops/subscriptions", "organizations_url": "https://api.github.com/users/Kerollmops/orgs", "repos_url": "https://api.github.com/users/Kerollmops/repos", "events_url": "https://api.github.com/users/Kerollmops/events{/privacy}", "received_events_url": "https://api.github.com/users/Kerollmops/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45693b43a5e779545cf6c6af909ab5c27d94e4c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/45693b43a5e779545cf6c6af909ab5c27d94e4c8", "html_url": "https://github.com/rust-lang/rust/commit/45693b43a5e779545cf6c6af909ab5c27d94e4c8"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "72da781da3cc41af5b59bdc6996336cc6ee43afa", "filename": "library/alloc/src/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/library%2Falloc%2Fsrc%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/library%2Falloc%2Fsrc%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fslice.rs?ref=7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "patch": "@@ -110,6 +110,8 @@ pub use core::slice::{Chunks, Windows};\n pub use core::slice::{ChunksExact, ChunksExactMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{ChunksMut, Split, SplitMut};\n+#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+pub use core::slice::{GroupBy, GroupByMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{Iter, IterMut};\n #[stable(feature = \"rchunks\", since = \"1.31.0\")]\n@@ -118,8 +120,6 @@ pub use core::slice::{RChunks, RChunksExact, RChunksExactMut, RChunksMut};\n pub use core::slice::{RSplit, RSplitMut};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use core::slice::{RSplitN, RSplitNMut, SplitN, SplitNMut};\n-#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n-pub use core::slice::{GroupBy, GroupByMut};\n \n ////////////////////////////////////////////////////////////////////////////////\n // Basic slice extension methods"}, {"sha": "423cbd113501bf40d658d893be751257afe5652d", "filename": "library/core/src/slice/iter.rs", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter.rs?ref=7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "patch": "@@ -2991,7 +2991,8 @@ impl<'a, T: 'a, P> GroupBy<'a, T, P> {\n \n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n impl<'a, T: 'a, P> Iterator for GroupBy<'a, T, P>\n-where P: FnMut(&T, &T) -> bool,\n+where\n+    P: FnMut(&T, &T) -> bool,\n {\n     type Item = &'a [T];\n \n@@ -3013,11 +3014,7 @@ where P: FnMut(&T, &T) -> bool,\n \n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        if self.slice.is_empty() {\n-            (0, Some(0))\n-        } else {\n-            (1, Some(self.slice.len()))\n-        }\n+        if self.slice.is_empty() { (0, Some(0)) } else { (1, Some(self.slice.len())) }\n     }\n \n     #[inline]\n@@ -3028,7 +3025,8 @@ where P: FnMut(&T, &T) -> bool,\n \n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n impl<'a, T: 'a, P> DoubleEndedIterator for GroupBy<'a, T, P>\n-where P: FnMut(&T, &T) -> bool,\n+where\n+    P: FnMut(&T, &T) -> bool,\n {\n     #[inline]\n     fn next_back(&mut self) -> Option<Self::Item> {\n@@ -3048,9 +3046,7 @@ where P: FnMut(&T, &T) -> bool,\n }\n \n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n-impl<'a, T: 'a, P> FusedIterator for GroupBy<'a, T, P>\n-where P: FnMut(&T, &T) -> bool,\n-{ }\n+impl<'a, T: 'a, P> FusedIterator for GroupBy<'a, T, P> where P: FnMut(&T, &T) -> bool {}\n \n /// An iterator over slice in (non-overlapping) mutable chunks separated\n /// by a predicate.\n@@ -3075,7 +3071,8 @@ impl<'a, T: 'a, P> GroupByMut<'a, T, P> {\n \n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n impl<'a, T: 'a, P> Iterator for GroupByMut<'a, T, P>\n-where P: FnMut(&T, &T) -> bool,\n+where\n+    P: FnMut(&T, &T) -> bool,\n {\n     type Item = &'a mut [T];\n \n@@ -3098,11 +3095,7 @@ where P: FnMut(&T, &T) -> bool,\n \n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) {\n-        if self.slice.is_empty() {\n-            (0, Some(0))\n-        } else {\n-            (1, Some(self.slice.len()))\n-        }\n+        if self.slice.is_empty() { (0, Some(0)) } else { (1, Some(self.slice.len())) }\n     }\n \n     #[inline]\n@@ -3113,7 +3106,8 @@ where P: FnMut(&T, &T) -> bool,\n \n #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n impl<'a, T: 'a, P> DoubleEndedIterator for GroupByMut<'a, T, P>\n-where P: FnMut(&T, &T) -> bool,\n+where\n+    P: FnMut(&T, &T) -> bool,\n {\n     #[inline]\n     fn next_back(&mut self) -> Option<Self::Item> {\n@@ -3132,3 +3126,6 @@ where P: FnMut(&T, &T) -> bool,\n         }\n     }\n }\n+\n+#[unstable(feature = \"slice_group_by\", issue = \"none\")]\n+impl<'a, T: 'a, P> FusedIterator for GroupByMut<'a, T, P> where P: FnMut(&T, &T) -> bool {}"}, {"sha": "648cf88b7ef79b5cdc9a8945c484d9b4ae884f93", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7952ea5a04aa34dc5441a47f7d4d227193c8fdf6/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=7952ea5a04aa34dc5441a47f7d4d227193c8fdf6", "patch": "@@ -1234,7 +1234,8 @@ impl<T> [T] {\n     #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n     #[inline]\n     pub fn group_by<F>(&self, pred: F) -> GroupBy<'_, T, F>\n-    where F: FnMut(&T, &T) -> bool\n+    where\n+        F: FnMut(&T, &T) -> bool,\n     {\n         GroupBy::new(self, pred)\n     }\n@@ -1263,7 +1264,8 @@ impl<T> [T] {\n     #[unstable(feature = \"slice_group_by\", issue = \"none\")]\n     #[inline]\n     pub fn group_by_mut<F>(&mut self, pred: F) -> GroupByMut<'_, T, F>\n-    where F: FnMut(&T, &T) -> bool\n+    where\n+        F: FnMut(&T, &T) -> bool,\n     {\n         GroupByMut::new(self, pred)\n     }"}]}