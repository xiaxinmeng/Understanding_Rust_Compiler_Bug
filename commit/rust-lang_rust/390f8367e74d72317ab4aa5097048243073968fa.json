{"sha": "390f8367e74d72317ab4aa5097048243073968fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MGY4MzY3ZTc0ZDcyMzE3YWI0YWE1MDk3MDQ4MjQzMDczOTY4ZmE=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-04-02T16:31:04Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2018-04-03T22:25:55Z"}, "message": "Add performance notes to BufReader/BufWriter docs", "tree": {"sha": "8374fdff8aad6a27d0b06acdc8571f03127eedb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8374fdff8aad6a27d0b06acdc8571f03127eedb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/390f8367e74d72317ab4aa5097048243073968fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/390f8367e74d72317ab4aa5097048243073968fa", "html_url": "https://github.com/rust-lang/rust/commit/390f8367e74d72317ab4aa5097048243073968fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/390f8367e74d72317ab4aa5097048243073968fa/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ce98f34d38fa9338ff696f904bcb8c01856f935", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ce98f34d38fa9338ff696f904bcb8c01856f935", "html_url": "https://github.com/rust-lang/rust/commit/1ce98f34d38fa9338ff696f904bcb8c01856f935"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "91f07ecc6639ef816d06f82b918cd10cda317b36", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/390f8367e74d72317ab4aa5097048243073968fa/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/390f8367e74d72317ab4aa5097048243073968fa/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=390f8367e74d72317ab4aa5097048243073968fa", "patch": "@@ -25,6 +25,12 @@ use memchr;\n /// results in a system call. A `BufReader` performs large, infrequent reads on\n /// the underlying [`Read`] and maintains an in-memory buffer of the results.\n ///\n+/// `BufReader` can improve the speed of programs that make *small* and\n+/// *repeated* read calls to the same file or network socket.  It does not\n+/// help when reading very large amounts at once, or reading just one or a few\n+/// times.  It also provides no advantage when reading from a source that is\n+/// already in memory, like a `Vec<u8>`.\n+///\n /// [`Read`]: ../../std/io/trait.Read.html\n /// [`TcpStream::read`]: ../../std/net/struct.TcpStream.html#method.read\n /// [`TcpStream`]: ../../std/net/struct.TcpStream.html\n@@ -359,6 +365,12 @@ impl<R: Seek> Seek for BufReader<R> {\n /// `BufWriter` keeps an in-memory buffer of data and writes it to an underlying\n /// writer in large, infrequent batches.\n ///\n+/// `BufWriter` can improve the speed of programs that make *small* and\n+/// *repeated* write calls to the same file or network socket.  It does not\n+/// help when writing very large amounts at once, or writing just one or a few\n+/// times.  It also provides no advantage when writing to a destination that is\n+/// in memory, like a `Vec<u8>`.\n+///\n /// When the `BufWriter` is dropped, the contents of its buffer will be written\n /// out. However, any errors that happen in the process of flushing the buffer\n /// when the writer is dropped will be ignored. Code that wishes to handle such"}]}