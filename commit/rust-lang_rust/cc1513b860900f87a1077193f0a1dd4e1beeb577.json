{"sha": "cc1513b860900f87a1077193f0a1dd4e1beeb577", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjMTUxM2I4NjA5MDBmODdhMTA3NzE5M2YwYTFkZDRlMWJlZWI1Nzc=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-10-01T00:13:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-01T00:13:48Z"}, "message": "Rollup merge of #77360 - oli-obk:zst_const_pat_regression, r=RalfJung\n\nReferences to ZSTs may be at arbitrary aligned addresses\n\nfixes #77320\n\nr? @RalfJung", "tree": {"sha": "fb545713633b4e35b4fd62ef703e09e9c12f49c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb545713633b4e35b4fd62ef703e09e9c12f49c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cc1513b860900f87a1077193f0a1dd4e1beeb577", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfdR88CRBK7hj4Ov3rIwAAdHIIAI9TJTHJr5G5VGVfkRQziLai\nUUfXDSycnT9qipA4l8W5XFKVFhC3HiaFizpmwX8eWALwIi1U/2ZgbAr1GdoGNRHC\noBe0NUZjNv2U5/mJlOQ947pxwA/RWyyCT1FKdRUt6cEwbBH6qoDiJEIgwXzYrxX5\n+qEEe8l6Z4lNAOtzNBUWAUQUN2hrAKxecXUT4nPUGiSCMDcJdAhk3LpY8zb1AWTk\nXBfB5PekScgPQvfF0XYqz/IYWFNAc8UWpD2HFsfDbnkqZ3N5dVDtt4bo1Ktnb0SJ\nXcscTo1E1+2TWHvfe4sLhIof8OHCb21ogY1uRg2iX2uvZqiwpbDEcG/vjRc+Jng=\n=qvI3\n-----END PGP SIGNATURE-----\n", "payload": "tree fb545713633b4e35b4fd62ef703e09e9c12f49c4\nparent ffb771bc7988ffb5ba862d2d794246ab0ede747d\nparent ce6c25da5887dcdb446b56892ace1d2463a743f3\nauthor Dylan DPC <dylan.dpc@gmail.com> 1601511228 +0200\ncommitter GitHub <noreply@github.com> 1601511228 +0200\n\nRollup merge of #77360 - oli-obk:zst_const_pat_regression, r=RalfJung\n\nReferences to ZSTs may be at arbitrary aligned addresses\n\nfixes #77320\n\nr? @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cc1513b860900f87a1077193f0a1dd4e1beeb577", "html_url": "https://github.com/rust-lang/rust/commit/cc1513b860900f87a1077193f0a1dd4e1beeb577", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cc1513b860900f87a1077193f0a1dd4e1beeb577/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffb771bc7988ffb5ba862d2d794246ab0ede747d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffb771bc7988ffb5ba862d2d794246ab0ede747d", "html_url": "https://github.com/rust-lang/rust/commit/ffb771bc7988ffb5ba862d2d794246ab0ede747d"}, {"sha": "ce6c25da5887dcdb446b56892ace1d2463a743f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce6c25da5887dcdb446b56892ace1d2463a743f3", "html_url": "https://github.com/rust-lang/rust/commit/ce6c25da5887dcdb446b56892ace1d2463a743f3"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "57aa216850aabc3181e064ff1c0111eccf84aee5", "filename": "compiler/rustc_mir/src/const_eval/eval_queries.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cc1513b860900f87a1077193f0a1dd4e1beeb577/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc1513b860900f87a1077193f0a1dd4e1beeb577/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Feval_queries.rs?ref=cc1513b860900f87a1077193f0a1dd4e1beeb577", "patch": "@@ -14,7 +14,7 @@ use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::{self, subst::Subst, TyCtxt};\n use rustc_span::source_map::Span;\n use rustc_target::abi::{Abi, LayoutOf};\n-use std::convert::TryInto;\n+use std::convert::{TryFrom, TryInto};\n \n pub fn note_on_undefined_behavior_error() -> &'static str {\n     \"The rules on what exactly is undefined behavior aren't clear, \\\n@@ -148,10 +148,10 @@ pub(super) fn op_to_const<'tcx>(\n         Scalar::Raw { data, .. } => {\n             assert!(mplace.layout.is_zst());\n             assert_eq!(\n-                data,\n-                mplace.layout.align.abi.bytes().into(),\n-                \"this MPlaceTy must come from `try_as_mplace` being used on a zst, so we know what\n-                 value this integer address must have\",\n+                u64::try_from(data).unwrap() % mplace.layout.align.abi.bytes(),\n+                0,\n+                \"this MPlaceTy must come from a validated constant, thus we can assume the \\\n+                alignment is correct\",\n             );\n             ConstValue::Scalar(Scalar::zst())\n         }"}, {"sha": "a114fafb6473012e88b9975ee88deb085cef82cd", "filename": "src/test/ui/match/const_non_normal_zst_ref_pattern.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cc1513b860900f87a1077193f0a1dd4e1beeb577/src%2Ftest%2Fui%2Fmatch%2Fconst_non_normal_zst_ref_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc1513b860900f87a1077193f0a1dd4e1beeb577/src%2Ftest%2Fui%2Fmatch%2Fconst_non_normal_zst_ref_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fconst_non_normal_zst_ref_pattern.rs?ref=cc1513b860900f87a1077193f0a1dd4e1beeb577", "patch": "@@ -0,0 +1,9 @@\n+// check-pass\n+\n+const FOO: isize = 10;\n+const ZST: &() = unsafe { std::mem::transmute(FOO) };\n+fn main() {\n+    match &() {\n+        ZST => 9,\n+    };\n+}"}]}