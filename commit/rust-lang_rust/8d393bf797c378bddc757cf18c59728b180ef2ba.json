{"sha": "8d393bf797c378bddc757cf18c59728b180ef2ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMzkzYmY3OTdjMzc4YmRkYzc1N2NmMThjNTk3MjhiMTgwZWYyYmE=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-13T03:51:04Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2018-12-20T18:47:39Z"}, "message": "display rustc_private APIs as \"Internal\"", "tree": {"sha": "3335b05c918354c7e78d3428263c6bfb339a5e09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3335b05c918354c7e78d3428263c6bfb339a5e09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d393bf797c378bddc757cf18c59728b180ef2ba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlwb49cWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdBBCCACUCSpLTUxJtv3+WXF3U0z9atVL\n8kYO35qsZl+RJNj27w90wuYrwhIrjvyZGE0Wy2+DWXDy4YU7YusQwYvvMoialVWn\n1u/6XgnqiTlEvHWO2qlAMi9QVrZBChkqNIYdtCCaZwANrzCaUTdXrM9Xqo2H57GH\nTDJVXyOxvUkWitd/fe2YWU7QY50F187x0HfsuGaWOzCFXzXfn9DfNwS0zZ5XkV/w\nXBILi8mfKSfwJ8057kr8HRpVeKzyQpsIFQJHXYo1QVeXMqED1KpRA9593IudSeqW\ny3rBYE1FxzRgoN6KkCNz1VtvLXb3ed6YCcOsJvDusPmsRf0fHeAYWPUTPlxi\n=13j+\n-----END PGP SIGNATURE-----", "payload": "tree 3335b05c918354c7e78d3428263c6bfb339a5e09\nparent 5f3431691dd2b2b2b3c48ad5bfa6ca782a9a6d09\nauthor Andy Russell <arussell123@gmail.com> 1544673064 -0500\ncommitter Andy Russell <arussell123@gmail.com> 1545331659 -0500\n\ndisplay rustc_private APIs as \"Internal\"\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d393bf797c378bddc757cf18c59728b180ef2ba", "html_url": "https://github.com/rust-lang/rust/commit/8d393bf797c378bddc757cf18c59728b180ef2ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d393bf797c378bddc757cf18c59728b180ef2ba/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f3431691dd2b2b2b3c48ad5bfa6ca782a9a6d09", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f3431691dd2b2b2b3c48ad5bfa6ca782a9a6d09", "html_url": "https://github.com/rust-lang/rust/commit/5f3431691dd2b2b2b3c48ad5bfa6ca782a9a6d09"}], "stats": {"total": 60, "additions": 52, "deletions": 8}, "files": [{"sha": "397eeb7433f903ea14475bdf2f26f533443182ff", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 31, "deletions": 7, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=8d393bf797c378bddc757cf18c59728b180ef2ba", "patch": "@@ -2703,13 +2703,16 @@ fn stability_tags(item: &clean::Item) -> String {\n         tags.push_str(\"[<div class='stab deprecated'>Deprecated</div>] \");\n     }\n \n-    if item\n+    if let Some(stab) = item\n         .stability\n         .as_ref()\n         .filter(|s| s.level == stability::Unstable)\n-        .is_some()\n     {\n-        tags.push_str(\"[<div class='stab unstable'>Experimental</div>] \");\n+        if stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\") {\n+            tags.push_str(\"[<div class='stab internal'>Internal</div>] \");\n+        } else {\n+            tags.push_str(\"[<div class='stab unstable'>Experimental</div>] \");\n+        }\n     }\n \n     if let Some(ref cfg) = item.attrs.cfg {\n@@ -2752,9 +2755,14 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n         .as_ref()\n         .filter(|stab| stab.level == stability::Unstable)\n     {\n-        let mut message = String::from(\n-            \"<span class=microscope>\ud83d\udd2c</span> This is a nightly-only experimental API.\",\n-        );\n+        let is_rustc_private = stab.feature.as_ref().map(|s| &**s) == Some(\"rustc_private\");\n+\n+        let mut message = if is_rustc_private {\n+            \"<span class='emoji'>\u2699\ufe0f</span> This is an internal compiler API.\"\n+        } else {\n+            \"<span class='emoji'>\ud83d\udd2c</span> This is a nightly-only experimental API.\"\n+        }\n+        .to_owned();\n \n         if let Some(feature) = stab.feature.as_ref() {\n             let mut feature = format!(\"<code>{}</code>\", Escape(&feature));\n@@ -2770,6 +2778,17 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n         }\n \n         if let Some(unstable_reason) = &stab.unstable_reason {\n+            // Provide a more informative message than the compiler help.\n+            let unstable_reason = if is_rustc_private {\n+                \"This crate is being loaded from the sysroot, a permanently unstable location \\\n+                for private compiler dependencies. It is not intended for general use. Prefer \\\n+                using a public version of this crate from \\\n+                [crates.io](https://crates.io) via [`Cargo.toml`]\\\n+                (https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html).\"\n+            } else {\n+                unstable_reason\n+            };\n+\n             let mut ids = cx.id_map.borrow_mut();\n             message = format!(\n                 \"<details><summary>{}</summary>{}</details>\",\n@@ -2778,7 +2797,12 @@ fn short_stability(item: &clean::Item, cx: &Context) -> Vec<String> {\n             );\n         }\n \n-        stability.push(format!(\"<div class='stab unstable'>{}</div>\", message))\n+        let class = if is_rustc_private {\n+            \"internal\"\n+        } else {\n+            \"unstable\"\n+        };\n+        stability.push(format!(\"<div class='stab {}'>{}</div>\", class, message));\n     }\n \n     if let Some(ref cfg) = item.attrs.cfg {"}, {"sha": "b1648fbb1bc3e6154a310a5b3fb199ba4b7c9df7", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=8d393bf797c378bddc757cf18c59728b180ef2ba", "patch": "@@ -765,7 +765,7 @@ body.blur > :not(#help) {\n \tdisplay: list-item;\n }\n \n-.stab .microscope {\n+.stab .emoji {\n \tfont-size: 1.5em;\n }\n "}, {"sha": "be3ffed2b2659f70e8b7933258e0536bcdd21c96", "filename": "src/librustdoc/html/static/themes/dark.css", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Fdark.css?ref=8d393bf797c378bddc757cf18c59728b180ef2ba", "patch": "@@ -174,6 +174,10 @@ a {\n \tcolor: #D2991D;\n }\n \n+.stab.internal a {\n+\tcolor: #304FFE;\n+}\n+\n a.test-arrow {\n \tcolor: #dedede;\n }\n@@ -199,6 +203,7 @@ a.test-arrow {\n }\n \n .stab.unstable { background: #FFF5D6; border-color: #FFC600; color: #404040; }\n+.stab.internal { background: #FFB9B3; border-color: #B71C1C; color: #404040; }\n .stab.deprecated { background: #F3DFFF; border-color: #7F0087;  color: #404040; }\n .stab.portability { background: #C4ECFF; border-color: #7BA5DB;  color: #404040; }\n "}, {"sha": "4ae10492ae6b2a23e55b20567102a62e76f80dd9", "filename": "src/librustdoc/html/static/themes/light.css", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fthemes%2Flight.css?ref=8d393bf797c378bddc757cf18c59728b180ef2ba", "patch": "@@ -174,6 +174,10 @@ a {\n \tcolor: #3873AD;\n }\n \n+.stab.internal a {\n+\tcolor: #304FFE;\n+}\n+\n a.test-arrow {\n \tcolor: #f5f5f5;\n }\n@@ -200,6 +204,7 @@ a.test-arrow {\n }\n \n .stab.unstable { background: #FFF5D6; border-color: #FFC600; }\n+.stab.internal { background: #FFB9B3; border-color: #B71C1C; }\n .stab.deprecated { background: #F3DFFF; border-color: #7F0087; }\n .stab.portability { background: #C4ECFF; border-color: #7BA5DB; }\n "}, {"sha": "ba58da138a8c07c1891a251fab8db29505279af8", "filename": "src/test/rustdoc/internal.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Ftest%2Frustdoc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d393bf797c378bddc757cf18c59728b180ef2ba/src%2Ftest%2Frustdoc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finternal.rs?ref=8d393bf797c378bddc757cf18c59728b180ef2ba", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Z force-unstable-if-unmarked\n+\n+// @matches internal/index.html '//*[@class=\"docblock-short\"]' \\\n+//      '^\\[Internal\\] Docs'\n+// @has internal/struct.S.html '//*[@class=\"stab internal\"]' \\\n+//      'This is an internal compiler API. (rustc_private)'\n+/// Docs\n+pub struct S;\n+\n+fn main() {}"}]}