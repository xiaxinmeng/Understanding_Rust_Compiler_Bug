{"sha": "e070b45e6acb1cb2bbe06485721cb77de1e2469c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNzBiNDVlNmFjYjFjYjJiYmUwNjQ4NTcyMWNiNzdkZTFlMjQ2OWM=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-15T09:26:26Z"}, "committer": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-07-15T11:06:47Z"}, "message": "unsafety_check_result_for_const_arg", "tree": {"sha": "45482be0327f6f2a94181e118c9c71e5cd4878f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45482be0327f6f2a94181e118c9c71e5cd4878f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e070b45e6acb1cb2bbe06485721cb77de1e2469c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e070b45e6acb1cb2bbe06485721cb77de1e2469c", "html_url": "https://github.com/rust-lang/rust/commit/e070b45e6acb1cb2bbe06485721cb77de1e2469c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e070b45e6acb1cb2bbe06485721cb77de1e2469c/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca66bd052cc078edfdaee8500b41d0303e99cf3", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca66bd052cc078edfdaee8500b41d0303e99cf3", "html_url": "https://github.com/rust-lang/rust/commit/aca66bd052cc078edfdaee8500b41d0303e99cf3"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0893a0f084470f56be444444775a09175cf9c582", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e070b45e6acb1cb2bbe06485721cb77de1e2469c/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e070b45e6acb1cb2bbe06485721cb77de1e2469c/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=e070b45e6acb1cb2bbe06485721cb77de1e2469c", "patch": "@@ -501,7 +501,7 @@ rustc_queries! {\n             desc { |tcx| \"unsafety-checking `{}`\", tcx.def_path_str(key.to_def_id()) }\n             cache_on_disk_if { true }\n         }\n-        query unsafety_check_result_const_arg(key: (LocalDefId, DefId)) -> &'tcx mir::UnsafetyCheckResult {\n+        query unsafety_check_result_for_const_arg(key: (LocalDefId, DefId)) -> &'tcx mir::UnsafetyCheckResult {\n             desc {\n                 |tcx| \"unsafety-checking the const argument `{}`\",\n                 tcx.def_path_str(key.0.to_def_id())"}, {"sha": "2605d45f8101e3ab97934aa2f0136c92b36a4c48", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e070b45e6acb1cb2bbe06485721cb77de1e2469c/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e070b45e6acb1cb2bbe06485721cb77de1e2469c/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=e070b45e6acb1cb2bbe06485721cb77de1e2469c", "patch": "@@ -493,7 +493,7 @@ pub(crate) fn provide(providers: &mut Providers) {\n         unsafety_check_result: |tcx, def_id| {\n             unsafety_check_result(tcx, ty::WithOptConstParam::unknown(def_id))\n         },\n-        unsafety_check_result_const_arg: |tcx, (did, param_did)| {\n+        unsafety_check_result_for_const_arg: |tcx, (did, param_did)| {\n             unsafety_check_result(\n                 tcx,\n                 ty::WithOptConstParam { did, const_param_did: Some(param_did) },\n@@ -553,7 +553,7 @@ fn unsafety_check_result<'tcx>(\n ) -> &'tcx UnsafetyCheckResult {\n     if def.const_param_did.is_none() {\n         if let Some(param_did) = tcx.opt_const_param_of(def.did) {\n-            return tcx.unsafety_check_result_const_arg((def.did, param_did));\n+            return tcx.unsafety_check_result_for_const_arg((def.did, param_did));\n         }\n     }\n "}, {"sha": "51a9e76e762ebe50a66548dd4db53e0214da7417", "filename": "src/librustc_mir/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e070b45e6acb1cb2bbe06485721cb77de1e2469c/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e070b45e6acb1cb2bbe06485721cb77de1e2469c/src%2Flibrustc_mir%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fmod.rs?ref=e070b45e6acb1cb2bbe06485721cb77de1e2469c", "patch": "@@ -274,7 +274,7 @@ fn mir_const<'tcx>(\n \n     // Unsafety check uses the raw mir, so make sure it is run.\n     if let Some(param_did) = def.const_param_did {\n-        tcx.ensure().unsafety_check_result_const_arg((def.did, param_did));\n+        tcx.ensure().unsafety_check_result_for_const_arg((def.did, param_did));\n     } else {\n         tcx.ensure().unsafety_check_result(def.did);\n     }"}]}