{"sha": "8f66fafebd13d46ffc0982f1ca336055dc657043", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNjZmYWZlYmQxM2Q0NmZmYzA5ODJmMWNhMzM2MDU1ZGM2NTcwNDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-03T22:49:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-03T22:49:11Z"}, "message": "Auto merge of #42391 - photoszzt:master, r=Manishearth\n\nBetter suggestion for unknown method\n\nr? @Manishearth\n\nfixes #42386", "tree": {"sha": "e25ef0e9a5e41042237836f1b872e31b0a81f225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e25ef0e9a5e41042237836f1b872e31b0a81f225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f66fafebd13d46ffc0982f1ca336055dc657043", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f66fafebd13d46ffc0982f1ca336055dc657043", "html_url": "https://github.com/rust-lang/rust/commit/8f66fafebd13d46ffc0982f1ca336055dc657043", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f66fafebd13d46ffc0982f1ca336055dc657043/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6684d176c78647c467870c75e276f5d37ffd3e3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6684d176c78647c467870c75e276f5d37ffd3e3c", "html_url": "https://github.com/rust-lang/rust/commit/6684d176c78647c467870c75e276f5d37ffd3e3c"}, {"sha": "f113f54bacff1d670b8f935b84cbaf2620bb8e2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f113f54bacff1d670b8f935b84cbaf2620bb8e2f", "html_url": "https://github.com/rust-lang/rust/commit/f113f54bacff1d670b8f935b84cbaf2620bb8e2f"}], "stats": {"total": 46, "additions": 30, "deletions": 16}, "files": [{"sha": "3ac5994cd1ac36354a07c1620f5a3a1592681f16", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -176,7 +176,18 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                      if mode == Mode::MethodCall {\n                                          \"method\"\n                                      } else {\n-                                         \"associated item\"\n+                                         match item_name.as_str().chars().next() {\n+                                             Some(name) => {\n+                                                 if name.is_lowercase() {\n+                                                     \"function or associated item\"\n+                                                 } else {\n+                                                     \"associated item\"\n+                                                 }\n+                                             },\n+                                             None => {\n+                                                 \"\"\n+                                             },\n+                                         }\n                                      },\n                                      item_name,\n                                      self.ty_to_string(actual))"}, {"sha": "c388d47da6e517b1dbbd66e36b33f3832b210f29", "filename": "src/test/compile-fail/bogus-tag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbogus-tag.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -15,6 +15,6 @@ fn main() {\n     let red: color = color::rgb(255, 0, 0);\n     match red {\n       color::rgb(r, g, b) => { println!(\"rgb\"); }\n-      color::hsl(h, s, l) => { println!(\"hsl\"); }  //~ ERROR no associated\n+      color::hsl(h, s, l) => { println!(\"hsl\"); }  //~ ERROR no function\n     }\n }"}, {"sha": "d28c314640449cc990bc1e5a89cf3aacbf89ad4c", "filename": "src/test/compile-fail/issue-28344.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-28344.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-28344.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28344.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -13,9 +13,9 @@ use std::ops::BitXor;\n fn main() {\n     let x: u8 = BitXor::bitor(0 as u8, 0 as u8);\n     //~^ ERROR must be specified\n-    //~| no associated item named\n+    //~| no function or associated item named\n \n     let g = BitXor::bitor;\n     //~^ ERROR must be specified\n-    //~| no associated item named\n-}\n\\ No newline at end of file\n+    //~| no function or associated item named\n+}"}, {"sha": "653097ad69f726bdf297fb07040b2197c5f1ba67", "filename": "src/test/compile-fail/issue-30123.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-30123.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-30123.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30123.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -15,5 +15,5 @@ use issue_30123_aux::*;\n \n fn main() {\n     let ug = Graph::<i32, i32>::new_undirected();\n-    //~^ ERROR no associated item named `new_undirected` found for type\n+    //~^ ERROR no function or associated item named `new_undirected` found for type\n }"}, {"sha": "8bc1cc7bd1ace3877f8c9eebb773e51c6c0de50b", "filename": "src/test/compile-fail/issue-39559.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-39559.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-39559.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-39559.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -22,7 +22,7 @@ impl Dim for Dim3 {\n \n pub struct Vector<T, D: Dim> {\n     entries: [T; D::dim()]\n-    //~^ ERROR no associated item named `dim` found for type `D` in the current scope\n+    //~^ ERROR no function or associated item named `dim` found for type `D` in the current scope\n }\n \n fn main() {}"}, {"sha": "67a934fccce4ef79db73855d3b7bb2add1cb09be", "filename": "src/test/compile-fail/issue-3973.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-3973.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-3973.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3973.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -30,6 +30,6 @@ impl ToString_ for Point {\n \n fn main() {\n     let p = Point::new(0.0, 0.0);\n-    //~^ ERROR no associated item named `new` found for type `Point` in the current scope\n+    //~^ ERROR no function or associated item named `new` found for type `Point`\n     println!(\"{}\", p.to_string());\n }"}, {"sha": "dd3a48cb15559175237f75bcd179f1ddde0c3fc5", "filename": "src/test/compile-fail/issue-7950.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-7950.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Fissue-7950.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7950.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -13,5 +13,6 @@\n struct Foo;\n \n fn main() {\n-    Foo::bar(); //~ ERROR no associated item named `bar` found for type `Foo` in the current scope\n+    Foo::bar();\n+    //~^ ERROR no function or associated item named `bar` found for type `Foo`\n }"}, {"sha": "39da0d47a95f351a75adc7dc8128e010b68f3065", "filename": "src/test/compile-fail/lexical-scopes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Flexical-scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Flexical-scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flexical-scopes.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -17,7 +17,7 @@ mod Foo {\n     pub fn f() {}\n }\n fn g<Foo>() {\n-    Foo::f(); //~ ERROR no associated item named `f`\n+    Foo::f(); //~ ERROR no function or associated item named `f`\n }\n \n fn main() {}"}, {"sha": "e915ca05f6751c1cf849a1dca2fb6aff3229caf1", "filename": "src/test/compile-fail/trait-item-privacy.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Ftrait-item-privacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Ftrait-item-privacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-item-privacy.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -86,8 +86,10 @@ fn check_method() {\n \n     // Methods, UFCS\n     // a, b, c are resolved as trait items, their traits need to be in scope\n-    S::a(&S); //~ ERROR no associated item named `a` found for type `S` in the current scope\n-    S::b(&S); //~ ERROR no associated item named `b` found for type `S` in the current scope\n+    S::a(&S);\n+    //~^ ERROR no function or associated item named `a` found for type `S`\n+    S::b(&S);\n+    //~^ ERROR no function or associated item named `b` found for type `S`\n     S::c(&S); // OK\n     // a, b, c are resolved as inherent items, their traits don't need to be in scope\n     C::a(&S); //~ ERROR method `a` is private"}, {"sha": "cf8f3e916022cbfe1d6f59574549419a5f51a8f2", "filename": "src/test/compile-fail/unspecified-self-in-trait-ref.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Funspecified-self-in-trait-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f66fafebd13d46ffc0982f1ca336055dc657043/src%2Ftest%2Fcompile-fail%2Funspecified-self-in-trait-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funspecified-self-in-trait-ref.rs?ref=8f66fafebd13d46ffc0982f1ca336055dc657043", "patch": "@@ -18,13 +18,13 @@ pub trait Bar<X=usize, A=Self> {\n \n fn main() {\n     let a = Foo::lol();\n-    //~^ ERROR no associated item named\n+    //~^ ERROR no function or associated item named\n     let b = Foo::<_>::lol();\n-    //~^ ERROR no associated item named\n+    //~^ ERROR no function or associated item named\n     let c = Bar::lol();\n-    //~^ ERROR no associated item named\n+    //~^ ERROR no function or associated item named\n     let d = Bar::<usize, _>::lol();\n-    //~^ ERROR no associated item named\n+    //~^ ERROR no function or associated item named\n     let e = Bar::<usize>::lol();\n     //~^ ERROR must be explicitly specified\n }"}]}