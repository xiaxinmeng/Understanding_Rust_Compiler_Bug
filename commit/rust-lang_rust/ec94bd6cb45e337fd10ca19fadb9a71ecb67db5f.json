{"sha": "ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjOTRiZDZjYjQ1ZTMzN2ZkMTBjYTE5ZmFkYjlhNzFlY2I2N2RiNWY=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T13:43:45Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-09-27T13:43:45Z"}, "message": "split up the `manual_memcpy` test", "tree": {"sha": "acfff5a47216e1590cc8e9ca35738abd9adc3d9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acfff5a47216e1590cc8e9ca35738abd9adc3d9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "html_url": "https://github.com/rust-lang/rust/commit/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9725f00f4dd089b875a5d5306ff906494e041f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/9725f00f4dd089b875a5d5306ff906494e041f38", "html_url": "https://github.com/rust-lang/rust/commit/9725f00f4dd089b875a5d5306ff906494e041f38"}], "stats": {"total": 335, "additions": 171, "deletions": 164}, "files": [{"sha": "a49ba9eb10afa3460292652bdcae21ca98674e00", "filename": "tests/ui/manual_memcpy/with_loop_counters.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.rs?ref=ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "patch": "@@ -0,0 +1,64 @@\n+#![warn(clippy::needless_range_loop, clippy::manual_memcpy)]\n+\n+pub fn manual_copy_with_counters(src: &[i32], dst: &mut [i32], dst2: &mut [i32]) {\n+    let mut count = 0;\n+    for i in 3..src.len() {\n+        dst[i] = src[count];\n+        count += 1;\n+    }\n+\n+    let mut count = 0;\n+    for i in 3..src.len() {\n+        dst[count] = src[i];\n+        count += 1;\n+    }\n+\n+    let mut count = 3;\n+    for i in 0..src.len() {\n+        dst[count] = src[i];\n+        count += 1;\n+    }\n+\n+    let mut count = 3;\n+    for i in 0..src.len() {\n+        dst[i] = src[count];\n+        count += 1;\n+    }\n+\n+    let mut count = 0;\n+    for i in 3..(3 + src.len()) {\n+        dst[i] = src[count];\n+        count += 1;\n+    }\n+\n+    let mut count = 3;\n+    for i in 5..src.len() {\n+        dst[i] = src[count - 2];\n+        count += 1;\n+    }\n+\n+    let mut count = 5;\n+    for i in 3..10 {\n+        dst[i] = src[count];\n+        count += 1;\n+    }\n+\n+    let mut count = 3;\n+    let mut count2 = 30;\n+    for i in 0..src.len() {\n+        dst[count] = src[i];\n+        dst2[count2] = src[i];\n+        count += 1;\n+        count2 += 1;\n+    }\n+\n+    // make sure parentheses are added properly to bitwise operators, which have lower precedence than\n+    // arithmetric ones\n+    let mut count = 0 << 1;\n+    for i in 0..1 << 1 {\n+        dst[count] = src[i + 2];\n+        count += 1;\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "24393ad9b4d422682940e6b269acac2b76dc1790", "filename": "tests/ui/manual_memcpy/with_loop_counters.stderr", "status": "added", "additions": 93, "deletions": 0, "changes": 93, "blob_url": "https://github.com/rust-lang/rust/blob/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwith_loop_counters.stderr?ref=ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "patch": "@@ -0,0 +1,93 @@\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:5:5\n+   |\n+LL | /     for i in 3..src.len() {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)]);`\n+   |\n+   = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:11:5\n+   |\n+LL | /     for i in 3..src.len() {\n+LL | |         dst[count] = src[i];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..(src.len() - 3)].clone_from_slice(&src[3..]);`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:17:5\n+   |\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[count] = src[i];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..(src.len() + 3)].clone_from_slice(&src[..]);`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:23:5\n+   |\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[3..(src.len() + 3)]);`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:29:5\n+   |\n+LL | /     for i in 3..(3 + src.len()) {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..((3 + src.len()))].clone_from_slice(&src[..((3 + src.len()) - 3)]);`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:35:5\n+   |\n+LL | /     for i in 5..src.len() {\n+LL | |         dst[i] = src[count - 2];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[5..src.len()].clone_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)]);`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:41:5\n+   |\n+LL | /     for i in 3..10 {\n+LL | |         dst[i] = src[count];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[3..10].clone_from_slice(&src[5..(10 + 5 - 3)]);`\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:48:5\n+   |\n+LL | /     for i in 0..src.len() {\n+LL | |         dst[count] = src[i];\n+LL | |         dst2[count2] = src[i];\n+LL | |         count += 1;\n+LL | |         count2 += 1;\n+LL | |     }\n+   | |_____^\n+   |\n+help: try replacing the loop by\n+   |\n+LL |     dst[3..(src.len() + 3)].clone_from_slice(&src[..]);\n+LL |     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]);\n+   |\n+\n+error: it looks like you're manually copying between slices\n+  --> $DIR/with_loop_counters.rs:58:5\n+   |\n+LL | /     for i in 0..1 << 1 {\n+LL | |         dst[count] = src[i + 2];\n+LL | |         count += 1;\n+LL | |     }\n+   | |_____^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)]);`\n+\n+error: aborting due to 9 previous errors\n+"}, {"sha": "0083f94798fe4b2c650998d439f05cda4e7b0d0c", "filename": "tests/ui/manual_memcpy/without_loop_counters.rs", "status": "renamed", "additions": 0, "deletions": 61, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.rs?ref=ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "patch": "@@ -115,67 +115,6 @@ pub fn manual_copy(src: &[i32], dst: &mut [i32], dst2: &mut [i32]) {\n     }\n }\n \n-pub fn manual_copy_with_counters(src: &[i32], dst: &mut [i32], dst2: &mut [i32]) {\n-    let mut count = 0;\n-    for i in 3..src.len() {\n-        dst[i] = src[count];\n-        count += 1;\n-    }\n-\n-    let mut count = 0;\n-    for i in 3..src.len() {\n-        dst[count] = src[i];\n-        count += 1;\n-    }\n-\n-    let mut count = 3;\n-    for i in 0..src.len() {\n-        dst[count] = src[i];\n-        count += 1;\n-    }\n-\n-    let mut count = 3;\n-    for i in 0..src.len() {\n-        dst[i] = src[count];\n-        count += 1;\n-    }\n-\n-    let mut count = 0;\n-    for i in 3..(3 + src.len()) {\n-        dst[i] = src[count];\n-        count += 1;\n-    }\n-\n-    let mut count = 3;\n-    for i in 5..src.len() {\n-        dst[i] = src[count - 2];\n-        count += 1;\n-    }\n-\n-    let mut count = 5;\n-    for i in 3..10 {\n-        dst[i] = src[count];\n-        count += 1;\n-    }\n-\n-    let mut count = 3;\n-    let mut count2 = 30;\n-    for i in 0..src.len() {\n-        dst[count] = src[i];\n-        dst2[count2] = src[i];\n-        count += 1;\n-        count2 += 1;\n-    }\n-\n-    // make sure parentheses are added properly to bitwise operators, which have lower precedence than\n-    // arithmetric ones\n-    let mut count = 0 << 1;\n-    for i in 0..1 << 1 {\n-        dst[count] = src[i + 2];\n-        count += 1;\n-    }\n-}\n-\n #[warn(clippy::needless_range_loop, clippy::manual_memcpy)]\n pub fn manual_clone(src: &[String], dst: &mut [String]) {\n     for i in 0..src.len() {", "previous_filename": "tests/ui/manual_memcpy.rs"}, {"sha": "54b966f6e5419d375623fee09c6c58c66273ca7e", "filename": "tests/ui/manual_memcpy/without_loop_counters.stderr", "status": "renamed", "additions": 14, "deletions": 103, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy%2Fwithout_loop_counters.stderr?ref=ec94bd6cb45e337fd10ca19fadb9a71ecb67db5f", "patch": "@@ -1,5 +1,5 @@\n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:7:5\n+  --> $DIR/without_loop_counters.rs:7:5\n    |\n LL | /     for i in 0..src.len() {\n LL | |         dst[i] = src[i];\n@@ -9,39 +9,39 @@ LL | |     }\n    = note: `-D clippy::manual-memcpy` implied by `-D warnings`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:12:5\n+  --> $DIR/without_loop_counters.rs:12:5\n    |\n LL | /     for i in 0..src.len() {\n LL | |         dst[i + 10] = src[i];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[10..(src.len() + 10)].clone_from_slice(&src[..]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:17:5\n+  --> $DIR/without_loop_counters.rs:17:5\n    |\n LL | /     for i in 0..src.len() {\n LL | |         dst[i] = src[i + 10];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[10..(src.len() + 10)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:22:5\n+  --> $DIR/without_loop_counters.rs:22:5\n    |\n LL | /     for i in 11..src.len() {\n LL | |         dst[i] = src[i - 10];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[11..src.len()].clone_from_slice(&src[(11 - 10)..(src.len() - 10)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:27:5\n+  --> $DIR/without_loop_counters.rs:27:5\n    |\n LL | /     for i in 0..dst.len() {\n LL | |         dst[i] = src[i];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst.clone_from_slice(&src[..dst.len()]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:40:5\n+  --> $DIR/without_loop_counters.rs:40:5\n    |\n LL | /     for i in 10..256 {\n LL | |         dst[i] = src[i - 5];\n@@ -56,149 +56,60 @@ LL |     dst2[(10 + 500)..(256 + 500)].clone_from_slice(&src[10..256]);\n    |\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:52:5\n+  --> $DIR/without_loop_counters.rs:52:5\n    |\n LL | /     for i in 10..LOOP_OFFSET {\n LL | |         dst[i + LOOP_OFFSET] = src[i - some_var];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[(10 + LOOP_OFFSET)..(LOOP_OFFSET + LOOP_OFFSET)].clone_from_slice(&src[(10 - some_var)..(LOOP_OFFSET - some_var)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:65:5\n+  --> $DIR/without_loop_counters.rs:65:5\n    |\n LL | /     for i in 0..src_vec.len() {\n LL | |         dst_vec[i] = src_vec[i];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst_vec[..src_vec.len()].clone_from_slice(&src_vec[..]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:94:5\n+  --> $DIR/without_loop_counters.rs:94:5\n    |\n LL | /     for i in from..from + src.len() {\n LL | |         dst[i] = src[i - from];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[from..(from + src.len())].clone_from_slice(&src[..(from + src.len() - from)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:98:5\n+  --> $DIR/without_loop_counters.rs:98:5\n    |\n LL | /     for i in from..from + 3 {\n LL | |         dst[i] = src[i - from];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[from..(from + 3)].clone_from_slice(&src[..(from + 3 - from)]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:103:5\n+  --> $DIR/without_loop_counters.rs:103:5\n    |\n LL | /     for i in 0..5 {\n LL | |         dst[i - 0] = src[i];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[..5].clone_from_slice(&src[..5]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:108:5\n+  --> $DIR/without_loop_counters.rs:108:5\n    |\n LL | /     for i in 0..0 {\n LL | |         dst[i] = src[i];\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[..0].clone_from_slice(&src[..0]);`\n \n error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:120:5\n-   |\n-LL | /     for i in 3..src.len() {\n-LL | |         dst[i] = src[count];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..src.len()].clone_from_slice(&src[..(src.len() - 3)]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:126:5\n-   |\n-LL | /     for i in 3..src.len() {\n-LL | |         dst[count] = src[i];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..(src.len() - 3)].clone_from_slice(&src[3..]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:132:5\n-   |\n-LL | /     for i in 0..src.len() {\n-LL | |         dst[count] = src[i];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..(src.len() + 3)].clone_from_slice(&src[..]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:138:5\n-   |\n-LL | /     for i in 0..src.len() {\n-LL | |         dst[i] = src[count];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[3..(src.len() + 3)]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:144:5\n-   |\n-LL | /     for i in 3..(3 + src.len()) {\n-LL | |         dst[i] = src[count];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..((3 + src.len()))].clone_from_slice(&src[..((3 + src.len()) - 3)]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:150:5\n-   |\n-LL | /     for i in 5..src.len() {\n-LL | |         dst[i] = src[count - 2];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[5..src.len()].clone_from_slice(&src[(3 - 2)..((src.len() - 2) + 3 - 5)]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:156:5\n-   |\n-LL | /     for i in 3..10 {\n-LL | |         dst[i] = src[count];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[3..10].clone_from_slice(&src[5..(10 + 5 - 3)]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:163:5\n-   |\n-LL | /     for i in 0..src.len() {\n-LL | |         dst[count] = src[i];\n-LL | |         dst2[count2] = src[i];\n-LL | |         count += 1;\n-LL | |         count2 += 1;\n-LL | |     }\n-   | |_____^\n-   |\n-help: try replacing the loop by\n-   |\n-LL |     dst[3..(src.len() + 3)].clone_from_slice(&src[..]);\n-LL |     dst2[30..(src.len() + 30)].clone_from_slice(&src[..]);\n-   |\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:173:5\n-   |\n-LL | /     for i in 0..1 << 1 {\n-LL | |         dst[count] = src[i + 2];\n-LL | |         count += 1;\n-LL | |     }\n-   | |_____^ help: try replacing the loop by: `dst[(0 << 1)..((1 << 1) + (0 << 1))].clone_from_slice(&src[2..((1 << 1) + 2)]);`\n-\n-error: it looks like you're manually copying between slices\n-  --> $DIR/manual_memcpy.rs:181:5\n+  --> $DIR/without_loop_counters.rs:120:5\n    |\n LL | /     for i in 0..src.len() {\n LL | |         dst[i] = src[i].clone();\n LL | |     }\n    | |_____^ help: try replacing the loop by: `dst[..src.len()].clone_from_slice(&src[..]);`\n \n-error: aborting due to 22 previous errors\n+error: aborting due to 13 previous errors\n ", "previous_filename": "tests/ui/manual_memcpy.stderr"}]}