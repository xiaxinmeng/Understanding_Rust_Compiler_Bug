{"sha": "46f1cc69db895704100197d43ce853bb29674f11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZjFjYzY5ZGI4OTU3MDQxMDAxOTdkNDNjZTg1M2JiMjk2NzRmMTE=", "commit": {"author": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-02-23T23:57:24Z"}, "committer": {"name": "kenta7777", "email": "k.hasegw7@gmail.com", "date": "2019-02-23T23:59:19Z"}, "message": "reduce miri code repetition like (n << amt) >> amt", "tree": {"sha": "4215963965d84fb13300c1ff92fa1f393d7d4d70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4215963965d84fb13300c1ff92fa1f393d7d4d70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46f1cc69db895704100197d43ce853bb29674f11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46f1cc69db895704100197d43ce853bb29674f11", "html_url": "https://github.com/rust-lang/rust/commit/46f1cc69db895704100197d43ce853bb29674f11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46f1cc69db895704100197d43ce853bb29674f11/comments", "author": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kenta7777", "id": 16369171, "node_id": "MDQ6VXNlcjE2MzY5MTcx", "avatar_url": "https://avatars.githubusercontent.com/u/16369171?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kenta7777", "html_url": "https://github.com/kenta7777", "followers_url": "https://api.github.com/users/kenta7777/followers", "following_url": "https://api.github.com/users/kenta7777/following{/other_user}", "gists_url": "https://api.github.com/users/kenta7777/gists{/gist_id}", "starred_url": "https://api.github.com/users/kenta7777/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kenta7777/subscriptions", "organizations_url": "https://api.github.com/users/kenta7777/orgs", "repos_url": "https://api.github.com/users/kenta7777/repos", "events_url": "https://api.github.com/users/kenta7777/events{/privacy}", "received_events_url": "https://api.github.com/users/kenta7777/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aadbc459bd97a0325897e2ff94999efbec6a499c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aadbc459bd97a0325897e2ff94999efbec6a499c", "html_url": "https://github.com/rust-lang/rust/commit/aadbc459bd97a0325897e2ff94999efbec6a499c"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "caadc6055b5c617cbb34635c6624409dfb55660f", "filename": "src/librustc_mir/hair/constant.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/46f1cc69db895704100197d43ce853bb29674f11/src%2Flibrustc_mir%2Fhair%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f1cc69db895704100197d43ce853bb29674f11/src%2Flibrustc_mir%2Fhair%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fconstant.rs?ref=46f1cc69db895704100197d43ce853bb29674f11", "patch": "@@ -21,8 +21,7 @@ crate fn lit_to_const<'a, 'gcx, 'tcx>(\n         let param_ty = ParamEnv::reveal_all().and(tcx.lift_to_global(&ty).unwrap());\n         let width = tcx.layout_of(param_ty).map_err(|_| LitToConstError::Reported)?.size;\n         trace!(\"trunc {} with size {} and shift {}\", n, width.bits(), 128 - width.bits());\n-        let shift = 128 - width.bits();\n-        let result = (n << shift) >> shift;\n+        let result = truncate(n, width);\n         trace!(\"trunc result: {}\", result);\n         Ok(ConstValue::Scalar(Scalar::Bits {\n             bits: result,"}]}