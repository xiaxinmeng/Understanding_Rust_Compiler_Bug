{"sha": "49c6dac47aa93d11b2d4c8deeded4626e23081e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YzZkYWM0N2FhOTNkMTFiMmQ0YzhkZWVkZWQ0NjI2ZTIzMDgxZTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-06-05T22:50:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-06-05T22:50:46Z"}, "message": "rustc: Fix some more cyclic imports", "tree": {"sha": "b419cab7d5539ddb8fff0703b8924f1ca1ca62a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b419cab7d5539ddb8fff0703b8924f1ca1ca62a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49c6dac47aa93d11b2d4c8deeded4626e23081e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49c6dac47aa93d11b2d4c8deeded4626e23081e7", "html_url": "https://github.com/rust-lang/rust/commit/49c6dac47aa93d11b2d4c8deeded4626e23081e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49c6dac47aa93d11b2d4c8deeded4626e23081e7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aabf84cdd81351cc63ebdc9e2427203621d19950", "url": "https://api.github.com/repos/rust-lang/rust/commits/aabf84cdd81351cc63ebdc9e2427203621d19950", "html_url": "https://github.com/rust-lang/rust/commit/aabf84cdd81351cc63ebdc9e2427203621d19950"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "5e88df1de5ecfd2c043d9233b82693bafe33af94", "filename": "src/rustc/driver/rustc.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Frustc.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -15,7 +15,8 @@ import std::map::hashmap;\n import getopts::{opt_present};\n import rustc::driver::driver::*;\n import syntax::codemap;\n-import rustc::driver::{diagnostic, session};\n+import syntax::diagnostic;\n+import rustc::driver::session;\n import rustc::middle::lint;\n import io::reader_util;\n "}, {"sha": "4df45033a77c3d953756a2693c45ec09eeeb54d9", "filename": "src/rustc/metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmetadata%2Fdecoder.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -7,14 +7,14 @@ import syntax::{ast, ast_util};\n import syntax::attr;\n import middle::ty;\n import syntax::ast_map;\n-import common::*;\n import tydecode::{parse_ty_data, parse_def_id, parse_bounds_data,\n         parse_ident};\n import syntax::print::pprust;\n import cmd=cstore::crate_metadata;\n import util::ppaux::ty_to_str;\n import ebml::deserializer;\n import syntax::diagnostic::span_handler;\n+import common::*;\n \n export class_dtor;\n export get_class_fields;"}, {"sha": "a41812f72a795b06cbcf7a16d90d1c0121d7a21b", "filename": "src/rustc/middle/tstate/auxiliary.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fauxiliary.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -13,9 +13,8 @@ import tstate::ann::{pre_and_post, pre_and_post_state, empty_ann, prestate,\n                      set_postcondition, ts_ann,\n                      clear_in_postcond,\n                      clear_in_poststate_};\n-import tritv::*;\n-import bitvectors::promises_;\n import driver::session::session;\n+import tritv::{dont_care, tfalse, tritv_get, ttrue};\n \n import syntax::print::pprust::{constr_args_to_str, lit_to_str};\n \n@@ -811,7 +810,7 @@ fn copy_in_poststate_two(fcx: fn_ctxt, src_post: poststate,\n         // dest def_id\n         let insts = find_instances(fcx, subst, val);\n         for insts.each {|p|\n-            if promises_(p.from, src_post) {\n+            if bitvectors::promises_(p.from, src_post) {\n                 set_in_poststate_(p.to, target_post);\n             }\n         }"}, {"sha": "73f601cf4b0635f4f9c00a1d63ead365555dfc6e", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -4,19 +4,19 @@ import std::map::hashmap;\n import driver::session;\n import session::session;\n import syntax::{ast, ast_map};\n-import syntax::ast::*;\n import syntax::ast_util;\n import syntax::ast_util::{is_local, local_def, split_class_items,\n                           new_def_hash};\n import syntax::codemap::span;\n import metadata::csearch;\n-import util::common::*;\n import util::ppaux::region_to_str;\n import util::ppaux::vstore_to_str;\n import util::ppaux::{ty_to_str, tys_to_str, ty_constr_to_str};\n-import syntax::print::pprust::*;\n import middle::lint::{get_warning_level, vecs_not_implicitly_copyable,\n                       ignore};\n+import syntax::ast::*;\n+import syntax::print::pprust::*;\n+\n export ty_vid, region_vid, vid;\n export br_hashmap;\n export is_instantiable;"}, {"sha": "476ef9d3ba55143dc723fa73330183c37f5db3c8", "filename": "src/rustc/middle/typeck/astconv.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Ftypeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fastconv.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -45,7 +45,8 @@ an rptr (`&r.T`) use the region `r` that appears in the rptr.\n \"];\n \n import check::fn_ctxt;\n-import rscope::*;\n+import rscope::{anon_rscope, binding_rscope, empty_rscope, in_anon_rscope};\n+import rscope::{in_binding_rscope, region_scope, type_rscope};\n \n iface ast_conv {\n     fn tcx() -> ty::ctxt;"}, {"sha": "70167192afc8830b2e3aa7f15519d82b7d60f2f9", "filename": "src/rustc/middle/typeck/check.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftypeck%2Fcheck.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -71,7 +71,8 @@ import collect::{methods}; // ccx.to_ty()\n import method::{methods};  // methods for method::lookup\n import middle::ty::tys_in_fn_ty;\n import regionmanip::{replace_bound_regions_in_fn_ty, region_of};\n-import rscope::*;\n+import rscope::{anon_rscope, binding_rscope, empty_rscope, in_anon_rscope};\n+import rscope::{in_binding_rscope, region_scope, type_rscope};\n \n type fn_ctxt =\n     // var_bindings, locals and next_var_id are shared"}, {"sha": "c5c445702d517f1074550f478c0fb4ab85d18a75", "filename": "src/rustc/util/ppaux.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49c6dac47aa93d11b2d4c8deeded4626e23081e7/src%2Frustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Futil%2Fppaux.rs?ref=49c6dac47aa93d11b2d4c8deeded4626e23081e7", "patch": "@@ -1,6 +1,14 @@\n import std::map::hashmap;\n import middle::ty;\n-import middle::ty::*;\n+import middle::ty::{arg, bound_region, br_anon, br_named, canon_mode};\n+import middle::ty::{ck_block, ck_box, ck_uniq, constr, ctxt, field, method};\n+import middle::ty::{mt, re_bound, re_free, re_scope, re_var, region, t};\n+import middle::ty::{ty_bool, ty_bot, ty_box, ty_class, ty_constr, ty_enum};\n+import middle::ty::{ty_estr, ty_evec, ty_float, ty_fn, ty_iface, ty_int};\n+import middle::ty::{ty_nil, ty_opaque_box, ty_opaque_closure_ptr, ty_param};\n+import middle::ty::{ty_ptr, ty_rec, ty_res, ty_rptr, ty_self, ty_str, ty_tup};\n+import middle::ty::{ty_type, ty_uniq, ty_uint, ty_var, ty_var_integral};\n+import middle::ty::{ty_vec, vid};\n import metadata::encoder;\n import syntax::codemap;\n import syntax::print::pprust;"}]}