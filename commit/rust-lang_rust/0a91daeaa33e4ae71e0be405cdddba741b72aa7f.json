{"sha": "0a91daeaa33e4ae71e0be405cdddba741b72aa7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhOTFkYWVhYTMzZTRhZTcxZTBiZTQwNWNkZGRiYTc0MWI3MmFhN2Y=", "commit": {"author": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-02-08T21:04:14Z"}, "committer": {"name": "Rune Tynan", "email": "runetynan@gmail.com", "date": "2021-02-08T21:04:14Z"}, "message": "Vec -> HashSet", "tree": {"sha": "2c4aa47745f44ff949c9d186163b2701c135bd8e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c4aa47745f44ff949c9d186163b2701c135bd8e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a91daeaa33e4ae71e0be405cdddba741b72aa7f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEETdpCnQmiF6hBYUqdfsyTL4sscx4FAmAhp04ACgkQfsyTL4ss\ncx4Xug/+PU+aDMY+BxAr4rF3w0vLDwEmyn05mY6O2/vWfSdP7AROv7lTPIi0E0PQ\n6mQffXRivLFWbHIGqw5vBpvOBjXW7JVk+RIlTw4TrB97gGBnLD4OLzwfio/p374q\nIEi5f8iaFFdnjk/+dlUiV9Ill/C5V5CrodzrQn2chwQvnERHmMBMxSOdpndc9b0o\ndHda96iDJAdHs2vyaGVqFvGvK5ddgCfyc9P7eM2CG4dj7cmdRgDrFMh0S+cChYf6\n+rQHw0Mng6yRccdnqyjmvjRhXqC5CWJnEXE8hoq/+Av++Wh7nOZ1XjgYuOxdY/vg\n17VvZnQktCj2bLbKEK/9sDZLgnnNWhkOo4wWBMe9XBGGkYWbf3AHUL05G8JveKLd\ngzvbq6kvEimle5YvDUNC2Lv2Rm4ZQfN/TtB90gDlJcTSOkoukp/68Sh/AJ5UjGL/\nlY0usAzeGR3rfvQXGYSasGzUJ8h96XKTuHg9CseH8Crl+X/+HbJkFoA0g5RwU7EP\nf6rkMNlZL3lVmzN3CwiITShBJF9W+UuPywYOZZMBuePFB22HNTLPVWGQY9H5oylF\nQM1IWFQTgOEgvk9XeXl5bBkcw88wiJAhsSFnyM2xib0KcSU7P2qLux4wCaHYGi/U\nYEVJdrLUZO5gHu0j6m+Fv8BNTaxsfu+VcXfNwRzmoRslcr1LPcA=\n=fzxW\n-----END PGP SIGNATURE-----", "payload": "tree 2c4aa47745f44ff949c9d186163b2701c135bd8e\nparent ce02b7f7a6f554dbf80b7cabc09c3d84d92d0c3a\nauthor Rune Tynan <runetynan@gmail.com> 1612818254 -0500\ncommitter Rune Tynan <runetynan@gmail.com> 1612818254 -0500\n\nVec -> HashSet\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a91daeaa33e4ae71e0be405cdddba741b72aa7f", "html_url": "https://github.com/rust-lang/rust/commit/0a91daeaa33e4ae71e0be405cdddba741b72aa7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a91daeaa33e4ae71e0be405cdddba741b72aa7f/comments", "author": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CraftSpider", "id": 13342132, "node_id": "MDQ6VXNlcjEzMzQyMTMy", "avatar_url": "https://avatars.githubusercontent.com/u/13342132?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CraftSpider", "html_url": "https://github.com/CraftSpider", "followers_url": "https://api.github.com/users/CraftSpider/followers", "following_url": "https://api.github.com/users/CraftSpider/following{/other_user}", "gists_url": "https://api.github.com/users/CraftSpider/gists{/gist_id}", "starred_url": "https://api.github.com/users/CraftSpider/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CraftSpider/subscriptions", "organizations_url": "https://api.github.com/users/CraftSpider/orgs", "repos_url": "https://api.github.com/users/CraftSpider/repos", "events_url": "https://api.github.com/users/CraftSpider/events{/privacy}", "received_events_url": "https://api.github.com/users/CraftSpider/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce02b7f7a6f554dbf80b7cabc09c3d84d92d0c3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce02b7f7a6f554dbf80b7cabc09c3d84d92d0c3a", "html_url": "https://github.com/rust-lang/rust/commit/ce02b7f7a6f554dbf80b7cabc09c3d84d92d0c3a"}], "stats": {"total": 27, "additions": 15, "deletions": 12}, "files": [{"sha": "de0240f28f7cc142126a0178cfa6169763aea6c1", "filename": "src/librustdoc/json/conversions.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0a91daeaa33e4ae71e0be405cdddba741b72aa7f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a91daeaa33e4ae71e0be405cdddba741b72aa7f/src%2Flibrustdoc%2Fjson%2Fconversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fjson%2Fconversions.rs?ref=0a91daeaa33e4ae71e0be405cdddba741b72aa7f", "patch": "@@ -14,6 +14,7 @@ use rustdoc_json_types::*;\n use crate::clean;\n use crate::formats::item_type::ItemType;\n use crate::json::JsonRenderer;\n+use std::collections::HashSet;\n \n impl JsonRenderer<'_> {\n     pub(super) fn convert_item(&self, item: clean::Item) -> Option<Item> {\n@@ -225,19 +226,19 @@ crate fn from_ctor_kind(struct_type: CtorKind) -> StructType {\n     }\n }\n \n-crate fn from_fn_header(header: &rustc_hir::FnHeader) -> Vec<Modifiers> {\n-    let mut v = Vec::new();\n+crate fn from_fn_header(header: &rustc_hir::FnHeader) -> HashSet<Modifiers> {\n+    let mut v = HashSet::new();\n \n     if let rustc_hir::Unsafety::Unsafe = header.unsafety {\n-        v.push(Modifiers::Unsafe);\n+        v.insert(Modifiers::Unsafe);\n     }\n \n     if let rustc_hir::IsAsync::Async = header.asyncness {\n-        v.push(Modifiers::Async);\n+        v.insert(Modifiers::Async);\n     }\n \n     if let rustc_hir::Constness::Const = header.constness {\n-        v.push(Modifiers::Const);\n+        v.insert(Modifiers::Const);\n     }\n \n     v\n@@ -372,9 +373,11 @@ impl From<clean::BareFunctionDecl> for FunctionPointer {\n         let clean::BareFunctionDecl { unsafety, generic_params, decl, abi } = bare_decl;\n         FunctionPointer {\n             header: if let rustc_hir::Unsafety::Unsafe = unsafety {\n-                vec![Modifiers::Unsafe]\n+                let mut hs = HashSet::new();\n+                hs.insert(Modifiers::Unsafe);\n+                hs\n             } else {\n-                vec![]\n+                HashSet::new()\n             },\n             generic_params: generic_params.into_iter().map(Into::into).collect(),\n             decl: decl.into(),"}, {"sha": "a2f323699c1997c7a29a1ae6d78c8aeb654d1263", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0a91daeaa33e4ae71e0be405cdddba741b72aa7f/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a91daeaa33e4ae71e0be405cdddba741b72aa7f/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=0a91daeaa33e4ae71e0be405cdddba741b72aa7f", "patch": "@@ -3,7 +3,7 @@\n //! These types are the public API exposed through the `--output-format json` flag. The [`Crate`]\n //! struct is the root of the JSON blob and all other items are contained within.\n \n-use std::collections::HashMap;\n+use std::collections::{HashMap, HashSet};\n use std::path::PathBuf;\n \n use serde::{Deserialize, Serialize};\n@@ -282,7 +282,7 @@ pub enum StructType {\n }\n \n #[non_exhaustive]\n-#[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]\n+#[derive(Clone, Debug, Serialize, Deserialize, PartialEq, Eq, Hash)]\n #[serde(rename_all = \"snake_case\")]\n pub enum Modifiers {\n     Const,\n@@ -294,15 +294,15 @@ pub enum Modifiers {\n pub struct Function {\n     pub decl: FnDecl,\n     pub generics: Generics,\n-    pub header: Vec<Modifiers>,\n+    pub header: HashSet<Modifiers>,\n     pub abi: String,\n }\n \n #[derive(Clone, Debug, Serialize, Deserialize, PartialEq)]\n pub struct Method {\n     pub decl: FnDecl,\n     pub generics: Generics,\n-    pub header: Vec<Modifiers>,\n+    pub header: HashSet<Modifiers>,\n     pub abi: String,\n     pub has_body: bool,\n }\n@@ -415,7 +415,7 @@ pub enum Type {\n pub struct FunctionPointer {\n     pub decl: FnDecl,\n     pub generic_params: Vec<GenericParamDef>,\n-    pub header: Vec<Modifiers>,\n+    pub header: HashSet<Modifiers>,\n     pub abi: String,\n }\n "}]}