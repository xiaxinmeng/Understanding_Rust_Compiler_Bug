{"sha": "498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ODA5OGE1ZDk2OGYwNmYwOGZhMDkzZjFmZDVhNDNhOWE2MWVjZjM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T00:55:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-07T00:55:16Z"}, "message": "cast expr", "tree": {"sha": "79311ef5a12ee1625657101570bad758c63c0a75", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79311ef5a12ee1625657101570bad758c63c0a75"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "html_url": "https://github.com/rust-lang/rust/commit/498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/66bd1ffa327b4b1691a260107ef53a7ef112c8ea", "html_url": "https://github.com/rust-lang/rust/commit/66bd1ffa327b4b1691a260107ef53a7ef112c8ea"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "b525476c2bdb06feb68462b3c00a68957e697f16", "filename": "src/grammar.ron", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -162,6 +162,7 @@ Grammar(\n         \"METHOD_CALL_EXPR\",\n         \"FIELD_EXPR\",\n         \"TRY_EXPR\",\n+        \"CAST_EXPR\",\n \n         // unary\n         \"REF_EXPR\","}, {"sha": "c137fe6542f3c68bb6c6a2c4d2b3915ed3697cd9", "filename": "src/grammar/expressions/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/src%2Fgrammar%2Fexpressions%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/src%2Fgrammar%2Fexpressions%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fexpressions%2Fmod.rs?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -183,6 +183,7 @@ fn postfix_expr(p: &mut Parser, mut lhs: CompletedMarker) -> CompletedMarker {\n                 m.complete(p, RANGE_EXPR)\n             }\n             QUESTION => try_expr(p, lhs),\n+            AS_KW => cast_expr(p, lhs),\n             _ => break,\n         }\n     }\n@@ -260,6 +261,18 @@ fn try_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     m.complete(p, TRY_EXPR)\n }\n \n+// test cast_expr\n+// fn foo() {\n+//     82 as i32;\n+// }\n+fn cast_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n+    assert!(p.at(AS_KW));\n+    let m = lhs.precede(p);\n+    p.bump();\n+    types::type_(p);\n+    m.complete(p, CAST_EXPR)\n+}\n+\n fn arg_list(p: &mut Parser) {\n     assert!(p.at(L_PAREN));\n     let m = p.start();"}, {"sha": "005f4a9dc611766cff2f2251b619636985ff3b52", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -150,6 +150,7 @@ pub enum SyntaxKind {\n     METHOD_CALL_EXPR,\n     FIELD_EXPR,\n     TRY_EXPR,\n+    CAST_EXPR,\n     REF_EXPR,\n     DEREF_EXPR,\n     NOT_EXPR,\n@@ -383,6 +384,7 @@ impl SyntaxKind {\n             METHOD_CALL_EXPR => &SyntaxInfo { name: \"METHOD_CALL_EXPR\" },\n             FIELD_EXPR => &SyntaxInfo { name: \"FIELD_EXPR\" },\n             TRY_EXPR => &SyntaxInfo { name: \"TRY_EXPR\" },\n+            CAST_EXPR => &SyntaxInfo { name: \"CAST_EXPR\" },\n             REF_EXPR => &SyntaxInfo { name: \"REF_EXPR\" },\n             DEREF_EXPR => &SyntaxInfo { name: \"DEREF_EXPR\" },\n             NOT_EXPR => &SyntaxInfo { name: \"NOT_EXPR\" },"}, {"sha": "3e53d56d64105781139950abe3d7123dc5100468", "filename": "tests/data/parser/inline/0087_cast_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0087_cast_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0087_cast_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0087_cast_expr.rs?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    82 as i32;\n+}"}, {"sha": "78210f0d5804e855ade1a13efb30294aebb781c0", "filename": "tests/data/parser/inline/0087_cast_expr.txt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0087_cast_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/498098a5d968f06f08fa093f1fd5a43a9a61ecf3/tests%2Fdata%2Fparser%2Finline%2F0087_cast_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0087_cast_expr.txt?ref=498098a5d968f06f08fa093f1fd5a43a9a61ecf3", "patch": "@@ -0,0 +1,29 @@\n+FILE@[0; 28)\n+  FN_ITEM@[0; 27)\n+    FN_KW@[0; 2)\n+    WHITESPACE@[2; 3)\n+    NAME@[3; 6)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 8)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+    WHITESPACE@[8; 9)\n+    BLOCK_EXPR@[9; 27)\n+      L_CURLY@[9; 10)\n+      WHITESPACE@[10; 15)\n+      EXPR_STMT@[15; 25)\n+        CAST_EXPR@[15; 24)\n+          LITERAL@[15; 17)\n+            INT_NUMBER@[15; 17) \"82\"\n+          WHITESPACE@[17; 18)\n+          AS_KW@[18; 20)\n+          WHITESPACE@[20; 21)\n+          PATH_TYPE@[21; 24)\n+            PATH@[21; 24)\n+              PATH_SEGMENT@[21; 24)\n+                NAME_REF@[21; 24)\n+                  IDENT@[21; 24) \"i32\"\n+        SEMI@[24; 25)\n+      WHITESPACE@[25; 26)\n+      R_CURLY@[26; 27)\n+  WHITESPACE@[27; 28)"}]}