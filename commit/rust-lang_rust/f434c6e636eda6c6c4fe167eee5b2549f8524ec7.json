{"sha": "f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MzRjNmU2MzZlZGE2YzZjNGZlMTY3ZWVlNWIyNTQ5Zjg1MjRlYzc=", "commit": {"author": {"name": "David Ross", "email": "daboross@daboross.net", "date": "2020-02-22T20:33:06Z"}, "committer": {"name": "David Ross", "email": "daboross@daboross.net", "date": "2020-02-22T20:33:06Z"}, "message": "Use multipart suggestion\n\nThis is a modified version of estebank's suggestion, with a bit of\nextra cleanup now that we don't need the different cases for if we can\nturn a span into a string or not.", "tree": {"sha": "80cff81d2f4212e98bb027268c6c6841ea7de291", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80cff81d2f4212e98bb027268c6c6841ea7de291"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "html_url": "https://github.com/rust-lang/rust/commit/f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/comments", "author": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "committer": {"login": "daboross", "id": 1152146, "node_id": "MDQ6VXNlcjExNTIxNDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1152146?v=4", "gravatar_id": "", "url": "https://api.github.com/users/daboross", "html_url": "https://github.com/daboross", "followers_url": "https://api.github.com/users/daboross/followers", "following_url": "https://api.github.com/users/daboross/following{/other_user}", "gists_url": "https://api.github.com/users/daboross/gists{/gist_id}", "starred_url": "https://api.github.com/users/daboross/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/daboross/subscriptions", "organizations_url": "https://api.github.com/users/daboross/orgs", "repos_url": "https://api.github.com/users/daboross/repos", "events_url": "https://api.github.com/users/daboross/events{/privacy}", "received_events_url": "https://api.github.com/users/daboross/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa1f547f82d66f986af2c33220199b042fcb5f99", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa1f547f82d66f986af2c33220199b042fcb5f99", "html_url": "https://github.com/rust-lang/rust/commit/fa1f547f82d66f986af2c33220199b042fcb5f99"}], "stats": {"total": 304, "additions": 238, "deletions": 66}, "files": [{"sha": "12729019e9bdc0809381c3a27600e4d3bd5df5ab", "filename": "src/librustc_parse/parser/expr.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/src%2Flibrustc_parse%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fexpr.rs?ref=f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "patch": "@@ -648,8 +648,6 @@ impl<'a> Parser<'a> {\n         if !matches!(with_postfix.kind, ExprKind::Cast(_, _) | ExprKind::Type(_, _))\n             || after_hash != before_hash\n         {\n-            let expr_str = self.span_to_snippet(span);\n-\n             let msg = format!(\n                 \"casts cannot be followed by {}\",\n                 match with_postfix.kind {\n@@ -663,22 +661,20 @@ impl<'a> Parser<'a> {\n                 }\n             );\n             let mut err = self.struct_span_err(span, &msg);\n-            let suggestion = \"try surrounding the expression in parentheses\";\n             // if type ascription is \"likely an error\", the user will already be getting a useful\n             // help message, and doesn't need a second.\n             if self.last_type_ascription.map_or(false, |last_ascription| last_ascription.1) {\n                 self.maybe_annotate_with_ascription(&mut err, false);\n             } else {\n-                if let Ok(expr_str) = expr_str {\n-                    err.span_suggestion(\n-                        span,\n-                        suggestion,\n-                        format!(\"({})\", expr_str),\n-                        Applicability::MachineApplicable,\n-                    );\n-                } else {\n-                    err.span_help(span, suggestion);\n-                }\n+                let suggestions = vec![\n+                    (span.shrink_to_lo(), \"(\".to_string()),\n+                    (span.shrink_to_hi(), \")\".to_string()),\n+                ];\n+                err.multipart_suggestion(\n+                    \"try surrounding the expression in parentheses\",\n+                    suggestions,\n+                    Applicability::MachineApplicable,\n+                );\n             }\n             err.emit();\n         };"}, {"sha": "e725aa5d73d1f97d00f6f2a0c924826ffc1c7922", "filename": "src/test/ui/parser/issue-35813-postfix-after-cast.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.rs?ref=f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "patch": "@@ -58,6 +58,13 @@ pub fn cast_cast_method_call() {\n     //~^ ERROR: casts cannot be followed by a method call\n }\n \n+pub fn multiline_error() {\n+    let _ = 0\n+        as i32\n+        .count_ones();\n+    //~^^^ ERROR: casts cannot be followed by a method call\n+}\n+\n // this tests that the precedence for `!x as Y.Z` is still what we expect\n pub fn precedence() {\n     let x: i32 = &vec![1, 2, 3] as &Vec<i32>[0];"}, {"sha": "255e9f409218b9df6d25c8f73d3a519c7793574c", "filename": "src/test/ui/parser/issue-35813-postfix-after-cast.stderr", "status": "modified", "additions": 222, "deletions": 53, "changes": 275, "blob_url": "https://github.com/rust-lang/rust/blob/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f434c6e636eda6c6c4fe167eee5b2549f8524ec7/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-35813-postfix-after-cast.stderr?ref=f434c6e636eda6c6c4fe167eee5b2549f8524ec7", "patch": "@@ -2,148 +2,282 @@ error: casts cannot be followed by indexing\n   --> $DIR/issue-35813-postfix-after-cast.rs:10:5\n    |\n LL |     vec![1, 2, 3] as Vec<i32>[0];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(vec![1, 2, 3] as Vec<i32>)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (vec![1, 2, 3] as Vec<i32>)[0];\n+   |     ^                         ^\n \n error: casts cannot be followed by indexing\n   --> $DIR/issue-35813-postfix-after-cast.rs:12:5\n    |\n LL |     vec![1, 2, 3]: Vec<i32>[0];\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(vec![1, 2, 3]: Vec<i32>)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (vec![1, 2, 3]: Vec<i32>)[0];\n+   |     ^                       ^\n \n error: casts cannot be followed by indexing\n   --> $DIR/issue-35813-postfix-after-cast.rs:17:5\n    |\n LL |     (&[0]) as &[i32][0];\n-   |     ^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `((&[0]) as &[i32])`\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     ((&[0]) as &[i32])[0];\n+   |     ^                ^\n \n error: casts cannot be followed by indexing\n   --> $DIR/issue-35813-postfix-after-cast.rs:19:5\n    |\n LL |     (&[0i32]): &[i32; 1][0];\n-   |     ^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `((&[0i32]): &[i32; 1])`\n+   |     ^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     ((&[0i32]): &[i32; 1])[0];\n+   |     ^                    ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:39:13\n    |\n LL |     let _ = 0i32: i32: i32.count_ones();\n-   |             ^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32: i32)`\n+   |             ^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0i32: i32: i32).count_ones();\n+   |             ^              ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:41:13\n    |\n LL |     let _ = 0 as i32: i32.count_ones();\n-   |             ^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32: i32)`\n+   |             ^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0 as i32: i32).count_ones();\n+   |             ^             ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:43:13\n    |\n LL |     let _ = 0i32: i32 as i32.count_ones();\n-   |             ^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32 as i32)`\n+   |             ^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0i32: i32 as i32).count_ones();\n+   |             ^                ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:45:13\n    |\n LL |     let _ = 0 as i32 as i32.count_ones();\n-   |             ^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32 as i32)`\n+   |             ^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0 as i32 as i32).count_ones();\n+   |             ^               ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:47:13\n    |\n LL |     let _ = 0i32: i32: i32 as u32 as i32.count_ones();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32: i32 as u32 as i32)`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0i32: i32: i32 as u32 as i32).count_ones();\n+   |             ^                            ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:49:13\n    |\n LL |     let _ = 0i32: i32.count_ones(): u32;\n-   |             ^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32)`\n+   |             ^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0i32: i32).count_ones(): u32;\n+   |             ^         ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:51:13\n    |\n LL |     let _ = 0 as i32.count_ones(): u32;\n-   |             ^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32)`\n+   |             ^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0 as i32).count_ones(): u32;\n+   |             ^        ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:53:13\n    |\n LL |     let _ = 0i32: i32.count_ones() as u32;\n-   |             ^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32)`\n+   |             ^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0i32: i32).count_ones() as u32;\n+   |             ^         ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:55:13\n    |\n LL |     let _ = 0 as i32.count_ones() as u32;\n-   |             ^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32)`\n+   |             ^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0 as i32).count_ones() as u32;\n+   |             ^        ^\n \n error: casts cannot be followed by a method call\n   --> $DIR/issue-35813-postfix-after-cast.rs:57:13\n    |\n LL |     let _ = 0i32: i32: i32.count_ones() as u32 as i32;\n-   |             ^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(0i32: i32: i32)`\n+   |             ^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0i32: i32: i32).count_ones() as u32 as i32;\n+   |             ^              ^\n+\n+error: casts cannot be followed by a method call\n+  --> $DIR/issue-35813-postfix-after-cast.rs:62:13\n+   |\n+LL |       let _ = 0\n+   |  _____________^\n+LL | |         as i32\n+   | |______________^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let _ = (0\n+LL |         as i32)\n+   |\n \n error: casts cannot be followed by indexing\n-  --> $DIR/issue-35813-postfix-after-cast.rs:63:18\n+  --> $DIR/issue-35813-postfix-after-cast.rs:70:18\n    |\n LL |     let x: i32 = &vec![1, 2, 3] as &Vec<i32>[0];\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(&vec![1, 2, 3] as &Vec<i32>)`\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     let x: i32 = (&vec![1, 2, 3] as &Vec<i32>)[0];\n+   |                  ^                           ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:68:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:75:5\n    |\n LL |     0 as i32.max(0);\n-   |     ^^^^^^^^ help: try surrounding the expression in parentheses: `(0 as i32)`\n+   |     ^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (0 as i32).max(0);\n+   |     ^        ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:70:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:77:5\n    |\n LL |     0: i32.max(0);\n-   |     ^^^^^^ help: try surrounding the expression in parentheses: `(0: i32)`\n+   |     ^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (0: i32).max(0);\n+   |     ^      ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:85:8\n+  --> $DIR/issue-35813-postfix-after-cast.rs:92:8\n    |\n LL |     if 5u64 as i32.max(0) == 0 {\n-   |        ^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64 as i32)`\n+   |        ^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     if (5u64 as i32).max(0) == 0 {\n+   |        ^           ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:88:8\n+  --> $DIR/issue-35813-postfix-after-cast.rs:95:8\n    |\n LL |     if 5u64: u64.max(0) == 0 {\n-   |        ^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64: u64)`\n+   |        ^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     if (5u64: u64).max(0) == 0 {\n+   |        ^         ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:95:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:102:9\n    |\n LL |         5u64 as u32.max(0) == 0\n-   |         ^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64 as u32)`\n+   |         ^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |         (5u64 as u32).max(0) == 0\n+   |         ^           ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:99:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:106:9\n    |\n LL |         5u64: u64.max(0) == 0\n-   |         ^^^^^^^^^ help: try surrounding the expression in parentheses: `(5u64: u64)`\n+   |         ^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |         (5u64: u64).max(0) == 0\n+   |         ^         ^\n \n error: casts cannot be followed by indexing\n-  --> $DIR/issue-35813-postfix-after-cast.rs:104:24\n+  --> $DIR/issue-35813-postfix-after-cast.rs:111:24\n    |\n LL | static bar: &[i32] = &(&[1,2,3] as &[i32][0..1]);\n-   |                        ^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(&[1,2,3] as &[i32])`\n+   |                        ^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL | static bar: &[i32] = &((&[1,2,3] as &[i32])[0..1]);\n+   |                        ^                  ^\n \n error: casts cannot be followed by indexing\n-  --> $DIR/issue-35813-postfix-after-cast.rs:107:25\n+  --> $DIR/issue-35813-postfix-after-cast.rs:114:25\n    |\n LL | static bar2: &[i32] = &(&[1i32,2,3]: &[i32; 3][0..1]);\n-   |                         ^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(&[1i32,2,3]: &[i32; 3])`\n+   |                         ^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL | static bar2: &[i32] = &((&[1i32,2,3]: &[i32; 3])[0..1]);\n+   |                         ^                      ^\n \n error: casts cannot be followed by ?\n-  --> $DIR/issue-35813-postfix-after-cast.rs:112:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:119:5\n    |\n LL |     Err(0u64) as Result<u64,u64>?;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Err(0u64) as Result<u64,u64>)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (Err(0u64) as Result<u64,u64>)?;\n+   |     ^                            ^\n \n error: casts cannot be followed by ?\n-  --> $DIR/issue-35813-postfix-after-cast.rs:114:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:121:5\n    |\n LL |     Err(0u64): Result<u64,u64>?;\n    |     ^^^^^^^^^-^^^^^^^^^^^^^^^^\n@@ -154,25 +288,40 @@ LL |     Err(0u64): Result<u64,u64>?;\n    = note: see issue #23416 <https://github.com/rust-lang/rust/issues/23416> for more information\n \n error: casts cannot be followed by a function call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:138:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:145:5\n    |\n LL |     drop as fn(u8)(0);\n-   |     ^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(drop as fn(u8))`\n+   |     ^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (drop as fn(u8))(0);\n+   |     ^              ^\n \n error: casts cannot be followed by a function call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:140:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:147:5\n    |\n LL |     drop_ptr: fn(u8)(0);\n-   |     ^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(drop_ptr: fn(u8))`\n+   |     ^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (drop_ptr: fn(u8))(0);\n+   |     ^                ^\n \n error: casts cannot be followed by `.await`\n-  --> $DIR/issue-35813-postfix-after-cast.rs:145:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:152:5\n    |\n LL |     Box::pin(noop()) as Pin<Box<dyn Future<Output = ()>>>.await;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Box::pin(noop()) as Pin<Box<dyn Future<Output = ()>>>)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (Box::pin(noop()) as Pin<Box<dyn Future<Output = ()>>>).await;\n+   |     ^                                                     ^\n \n error: casts cannot be followed by `.await`\n-  --> $DIR/issue-35813-postfix-after-cast.rs:148:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:155:5\n    |\n LL |     Box::pin(noop()): Pin<Box<_>>.await;\n    |     ^^^^^^^^^^^^^^^^-^^^^^^^^^^^^\n@@ -183,41 +332,61 @@ LL |     Box::pin(noop()): Pin<Box<_>>.await;\n    = note: see issue #23416 <https://github.com/rust-lang/rust/issues/23416> for more information\n \n error: casts cannot be followed by a field access\n-  --> $DIR/issue-35813-postfix-after-cast.rs:160:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:167:5\n    |\n LL |     Foo::default() as Foo.bar;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Foo::default() as Foo)`\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (Foo::default() as Foo).bar;\n+   |     ^                     ^\n \n error: casts cannot be followed by a field access\n-  --> $DIR/issue-35813-postfix-after-cast.rs:162:5\n+  --> $DIR/issue-35813-postfix-after-cast.rs:169:5\n    |\n LL |     Foo::default(): Foo.bar;\n-   |     ^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(Foo::default(): Foo)`\n+   |     ^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |     (Foo::default(): Foo).bar;\n+   |     ^                   ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:77:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:84:9\n    |\n LL |         if true { 33 } else { 44 } as i32.max(0),\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(if true { 33 } else { 44 } as i32)`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |         (if true { 33 } else { 44 } as i32).max(0),\n+   |         ^                                 ^\n \n error: casts cannot be followed by a method call\n-  --> $DIR/issue-35813-postfix-after-cast.rs:79:9\n+  --> $DIR/issue-35813-postfix-after-cast.rs:86:9\n    |\n LL |         if true { 33 } else { 44 }: i32.max(0)\n-   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try surrounding the expression in parentheses: `(if true { 33 } else { 44 }: i32)`\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+help: try surrounding the expression in parentheses\n+   |\n+LL |         (if true { 33 } else { 44 }: i32).max(0)\n+   |         ^                               ^\n \n error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n-  --> $DIR/issue-35813-postfix-after-cast.rs:124:13\n+  --> $DIR/issue-35813-postfix-after-cast.rs:131:13\n    |\n LL |     drop as F();\n    |             ^^^ only `Fn` traits may use parentheses\n \n error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n-  --> $DIR/issue-35813-postfix-after-cast.rs:126:15\n+  --> $DIR/issue-35813-postfix-after-cast.rs:133:15\n    |\n LL |     drop_ptr: F();\n    |               ^^^ only `Fn` traits may use parentheses\n \n-error: aborting due to 35 previous errors\n+error: aborting due to 36 previous errors\n \n For more information about this error, try `rustc --explain E0214`."}]}