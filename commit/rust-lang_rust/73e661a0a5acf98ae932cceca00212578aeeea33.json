{"sha": "73e661a0a5acf98ae932cceca00212578aeeea33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczZTY2MWEwYTVhY2Y5OGFlOTMyY2NlY2EwMDIxMjU3OGFlZWVhMzM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-23T08:25:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-23T08:25:29Z"}, "message": "Rollup merge of #58595 - stjepang:make-duration-consts-associated, r=oli-obk\n\nTurn duration consts into associated consts\n\nAs suggested in https://github.com/rust-lang/rust/issues/57391#issuecomment-459658236, I'm moving `Duration` constants (`SECOND`, `MILLISECOND` and so on; currently behind unstable `duration_constants` feature) into the `impl Duration` block.\n\ncc @frewsxcv @SimonSapin", "tree": {"sha": "1214bd97d1bc2ab3a7a5709c667c5b8f7e225fcf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1214bd97d1bc2ab3a7a5709c667c5b8f7e225fcf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73e661a0a5acf98ae932cceca00212578aeeea33", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJccQN5CRBK7hj4Ov3rIwAAdHIIAC9rcV+quzPEbBLKP7HuL3hN\nL3kWoykYGDCW4aXD3ddKcnmOYHu9TuNOg3AG8V7QMMmP1kKlshtwAcveHJtKUZOC\nxk+O7Eacr6yBW3lt8Kwb8bar8xnw+T8g1xv6eBMqdLizor2nl12FXRGNIHtpeoKb\n7AWZx3gxYkWgybkJt84D88LnmGNMKmlbXb6HrRkyqtUzHy2vMhHuhIhmBjOIAwAD\nMqp7xgwQZwNkdotfPX5bQb5tXqVJhnkZMR9O8txrklnpGRF5lPPp0ky+UXHv90iN\nVpgxU52X103reKZcxOeNCSxFP8JUUW9e43oao0aq2+rW2pMuEdfkjti/GP6cMjk=\n=JYwj\n-----END PGP SIGNATURE-----\n", "payload": "tree 1214bd97d1bc2ab3a7a5709c667c5b8f7e225fcf\nparent 18dd2d2fbe3cacc4bea71c0a7df831a62605a367\nparent c6d24cd50435f008cc8bf1a00a656b36ca892b5d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550910329 +0100\ncommitter GitHub <noreply@github.com> 1550910329 +0100\n\nRollup merge of #58595 - stjepang:make-duration-consts-associated, r=oli-obk\n\nTurn duration consts into associated consts\n\nAs suggested in https://github.com/rust-lang/rust/issues/57391#issuecomment-459658236, I'm moving `Duration` constants (`SECOND`, `MILLISECOND` and so on; currently behind unstable `duration_constants` feature) into the `impl Duration` block.\n\ncc @frewsxcv @SimonSapin\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73e661a0a5acf98ae932cceca00212578aeeea33", "html_url": "https://github.com/rust-lang/rust/commit/73e661a0a5acf98ae932cceca00212578aeeea33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73e661a0a5acf98ae932cceca00212578aeeea33/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18dd2d2fbe3cacc4bea71c0a7df831a62605a367", "url": "https://api.github.com/repos/rust-lang/rust/commits/18dd2d2fbe3cacc4bea71c0a7df831a62605a367", "html_url": "https://github.com/rust-lang/rust/commit/18dd2d2fbe3cacc4bea71c0a7df831a62605a367"}, {"sha": "c6d24cd50435f008cc8bf1a00a656b36ca892b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6d24cd50435f008cc8bf1a00a656b36ca892b5d", "html_url": "https://github.com/rust-lang/rust/commit/c6d24cd50435f008cc8bf1a00a656b36ca892b5d"}], "stats": {"total": 71, "additions": 52, "deletions": 19}, "files": [{"sha": "91161ca477e398ff2d675125af8aeb352e274751", "filename": "src/libcore/time.rs", "status": "modified", "additions": 52, "deletions": 16, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/73e661a0a5acf98ae932cceca00212578aeeea33/src%2Flibcore%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e661a0a5acf98ae932cceca00212578aeeea33/src%2Flibcore%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftime.rs?ref=73e661a0a5acf98ae932cceca00212578aeeea33", "patch": "@@ -23,22 +23,6 @@ const MILLIS_PER_SEC: u64 = 1_000;\n const MICROS_PER_SEC: u64 = 1_000_000;\n const MAX_NANOS_F64: f64 = ((u64::MAX as u128 + 1)*(NANOS_PER_SEC as u128)) as f64;\n \n-/// The duration of one second.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const SECOND: Duration = Duration::from_secs(1);\n-\n-/// The duration of one millisecond.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const MILLISECOND: Duration = Duration::from_millis(1);\n-\n-/// The duration of one microsecond.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const MICROSECOND: Duration = Duration::from_micros(1);\n-\n-/// The duration of one nanosecond.\n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub const NANOSECOND: Duration = Duration::from_nanos(1);\n-\n /// A `Duration` type to represent a span of time, typically used for system\n /// timeouts.\n ///\n@@ -75,6 +59,58 @@ pub struct Duration {\n }\n \n impl Duration {\n+    /// The duration of one second.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_constants)]\n+    /// use std::time::Duration;\n+    ///\n+    /// assert_eq!(Duration::SECOND, Duration::from_secs(1));\n+    /// ```\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const SECOND: Duration = Duration::from_secs(1);\n+\n+    /// The duration of one millisecond.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_constants)]\n+    /// use std::time::Duration;\n+    ///\n+    /// assert_eq!(Duration::MILLISECOND, Duration::from_millis(1));\n+    /// ```\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const MILLISECOND: Duration = Duration::from_millis(1);\n+\n+    /// The duration of one microsecond.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_constants)]\n+    /// use std::time::Duration;\n+    ///\n+    /// assert_eq!(Duration::MICROSECOND, Duration::from_micros(1));\n+    /// ```\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const MICROSECOND: Duration = Duration::from_micros(1);\n+\n+    /// The duration of one nanosecond.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(duration_constants)]\n+    /// use std::time::Duration;\n+    ///\n+    /// assert_eq!(Duration::NANOSECOND, Duration::from_nanos(1));\n+    /// ```\n+    #[unstable(feature = \"duration_constants\", issue = \"57391\")]\n+    pub const NANOSECOND: Duration = Duration::from_nanos(1);\n+\n     /// Creates a new `Duration` from the specified number of whole seconds and\n     /// additional nanoseconds.\n     ///"}, {"sha": "e1f5e1fcb938dde5e46349af963edfdc149cc9eb", "filename": "src/libstd/time.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/73e661a0a5acf98ae932cceca00212578aeeea33/src%2Flibstd%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73e661a0a5acf98ae932cceca00212578aeeea33/src%2Flibstd%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime.rs?ref=73e661a0a5acf98ae932cceca00212578aeeea33", "patch": "@@ -23,9 +23,6 @@ use sys_common::mutex::Mutex;\n #[stable(feature = \"time\", since = \"1.3.0\")]\n pub use core::time::Duration;\n \n-#[unstable(feature = \"duration_constants\", issue = \"57391\")]\n-pub use core::time::{SECOND, MILLISECOND, MICROSECOND, NANOSECOND};\n-\n /// A measurement of a monotonically nondecreasing clock.\n /// Opaque and useful only with `Duration`.\n ///"}]}