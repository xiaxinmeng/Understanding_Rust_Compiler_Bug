{"sha": "0f32fd8484d3282648dc18985b7d29abad2d6b70", "node_id": "C_kwDOAAsO6NoAKDBmMzJmZDg0ODRkMzI4MjY0OGRjMTg5ODViN2QyOWFiYWQyZDZiNzA", "commit": {"author": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2023-03-17T21:24:11Z"}, "committer": {"name": "Jubilee Young", "email": "workingjubilee@gmail.com", "date": "2023-03-17T21:26:02Z"}, "message": "Remove irrelevant docs on error kinds", "tree": {"sha": "c8d2fa33bd2cec4bc9fb9d561780f596e6c24ef0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8d2fa33bd2cec4bc9fb9d561780f596e6c24ef0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f32fd8484d3282648dc18985b7d29abad2d6b70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f32fd8484d3282648dc18985b7d29abad2d6b70", "html_url": "https://github.com/rust-lang/rust/commit/0f32fd8484d3282648dc18985b7d29abad2d6b70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f32fd8484d3282648dc18985b7d29abad2d6b70/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d927cc1941cce6f320640836941ca480e958ead", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d927cc1941cce6f320640836941ca480e958ead", "html_url": "https://github.com/rust-lang/rust/commit/2d927cc1941cce6f320640836941ca480e958ead"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "6dd7859fcb40b3d63a7d76c1d840166196fed35c", "filename": "library/std/src/io/error.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f32fd8484d3282648dc18985b7d29abad2d6b70/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f32fd8484d3282648dc18985b7d29abad2d6b70/library%2Fstd%2Fsrc%2Fio%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Ferror.rs?ref=0f32fd8484d3282648dc18985b7d29abad2d6b70", "patch": "@@ -565,12 +565,6 @@ impl Error {\n     /// other standard library functions may call platform functions that may\n     /// (or may not) reset the error value even if they succeed.\n     ///\n-    /// If this is used in a case where no error has yet occurred in a program,\n-    /// e.g. right after the beginning of `fn main`,\n-    /// then in principle any possible Error may be returned.\n-    /// The error code may have been set by a previous program (e.g. `execve`)\n-    /// or the OS may have initialized it to an arbitrary, even random, value.\n-    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -877,9 +871,9 @@ impl Error {\n \n     /// Returns the corresponding [`ErrorKind`] for this error.\n     ///\n-    /// In some cases, the ErrorKind variant may not make much sense,\n-    /// either because the situation does not actually involve an error, or\n-    /// because of a new error code the standard library has not been taught.\n+    /// This may be a value set by Rust code constructing custom `io::Error`s,\n+    /// or if this `io::Error` was sourced from the operating system,\n+    /// it will be a value inferred from the system's error encoding.\n     /// See [`last_os_error`] for more details.\n     ///\n     /// [`last_os_error`]: Error::last_os_error\n@@ -894,7 +888,7 @@ impl Error {\n     /// }\n     ///\n     /// fn main() {\n-    ///     // As no error has occurred, this may print anything!\n+    ///     // As no error has (visibly) occurred, this may print anything!\n     ///     // It likely prints a placeholder for unidentified (non-)errors.\n     ///     print_error(Error::last_os_error());\n     ///     // Will print \"AddrInUse\"."}]}