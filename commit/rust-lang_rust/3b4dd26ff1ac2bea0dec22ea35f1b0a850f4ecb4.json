{"sha": "3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNGRkMjZmZjFhYzJiZWEwZGVjMjJlYTM1ZjFiMGE4NTBmNGVjYjQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:29:03Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-03T02:29:03Z"}, "message": "rt: Remove lock_and_signal::signal_all", "tree": {"sha": "98db750a2406166d8a70b138c5243281a0d7f01b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98db750a2406166d8a70b138c5243281a0d7f01b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "html_url": "https://github.com/rust-lang/rust/commit/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c33f2c561c77567738ee949d0c39122daec063b", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c33f2c561c77567738ee949d0c39122daec063b", "html_url": "https://github.com/rust-lang/rust/commit/9c33f2c561c77567738ee949d0c39122daec063b"}], "stats": {"total": 19, "additions": 1, "deletions": 18}, "files": [{"sha": "4262c34c6dc0ba795fefcd6b13b2f24cff6bbcea", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "patch": "@@ -358,7 +358,7 @@ rust_scheduler::exit() {\n     A(this, !lock.lock_held_by_current_thread(), \"Shouldn't have lock\");\n     scoped_lock with(lock);\n     should_exit = true;\n-    lock.signal_all();\n+    lock.signal();\n }\n \n //"}, {"sha": "e82e6dc51b73118249f29ce1a0a669ecb05457df", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "patch": "@@ -18,11 +18,6 @@\n lock_and_signal::lock_and_signal()\n     : _holding_thread(INVALID_THREAD)\n {\n-    // FIXME: In order to match the behavior of pthread_cond_broadcast on\n-    // Windows, we create manual reset events. This however breaks the\n-    // behavior of pthread_cond_signal, fixing this is quite involved:\n-    // refer to: http://www.cs.wustl.edu/~schmidt/win32-cv-1.html\n-\n     _event = CreateEvent(NULL, TRUE, FALSE, NULL);\n     InitializeCriticalSection(&_cs);\n }\n@@ -92,17 +87,6 @@ void lock_and_signal::signal() {\n #endif\n }\n \n-/**\n- * Signal condition, and resume all waiting threads.\n- */\n-void lock_and_signal::signal_all() {\n-#if defined(__WIN32__)\n-    SetEvent(_event);\n-#else\n-    CHECKED(pthread_cond_broadcast(&_cond));\n-#endif\n-}\n-\n bool lock_and_signal::lock_held_by_current_thread()\n {\n #if defined(__WIN32__)"}, {"sha": "4fc629b9fac5131596d935c1a06892de89d06ff6", "filename": "src/rt/sync/lock_and_signal.h", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/src%2Frt%2Fsync%2Flock_and_signal.h", "raw_url": "https://github.com/rust-lang/rust/raw/3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4/src%2Frt%2Fsync%2Flock_and_signal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.h?ref=3b4dd26ff1ac2bea0dec22ea35f1b0a850f4ecb4", "patch": "@@ -22,7 +22,6 @@ class lock_and_signal {\n     void unlock();\n     void wait();\n     void signal();\n-    void signal_all();\n \n     bool lock_held_by_current_thread();\n };"}]}