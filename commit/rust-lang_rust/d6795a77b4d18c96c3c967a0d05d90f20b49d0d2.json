{"sha": "d6795a77b4d18c96c3c967a0d05d90f20b49d0d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2Nzk1YTc3YjRkMThjOTZjM2M5NjdhMGQwNWQ5MGYyMGI0OWQwZDI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T16:47:00Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T16:47:00Z"}, "message": "precise getrandom return type and align_offset arithmetic", "tree": {"sha": "76e4f88ef976922ffc7b7d6b64eea46af6860f41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76e4f88ef976922ffc7b7d6b64eea46af6860f41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2", "html_url": "https://github.com/rust-lang/rust/commit/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f", "html_url": "https://github.com/rust-lang/rust/commit/b7fec6b17f1f4cbe228c964cfb8a0f76b46f749f"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "f56d5b3959c75c621cdf27b0cc7de84a438c1b9a", "filename": "src/shims/foreign_items/posix/linux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fforeign_items%2Fposix%2Flinux.rs?ref=d6795a77b4d18c96c3c967a0d05d90f20b49d0d2", "patch": "@@ -140,6 +140,6 @@ fn getrandom<'tcx>(\n     let _flags = this.read_scalar(args[2])?.to_i32()?;\n \n     this.gen_random(ptr, len)?;\n-    this.write_scalar(Scalar::from_uint(len, dest.layout.size), dest)?;\n+    this.write_scalar(Scalar::from_machine_usize(len, this), dest)?;\n     Ok(())\n }"}, {"sha": "58972731fb1d8bc511b5f510d546000c194f80c3", "filename": "src/shims/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6795a77b4d18c96c3c967a0d05d90f20b49d0d2/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=d6795a77b4d18c96c3c967a0d05d90f20b49d0d2", "patch": "@@ -75,7 +75,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let ptr_scalar = this.read_scalar(ptr_op)?.not_undef()?;\n \n         // Default: no result.\n-        let mut result = this.truncate(u128::MAX, dest.layout);\n+        let mut result = this.usize_max();\n         if let Ok(ptr) = this.force_ptr(ptr_scalar) {\n             // Only do anything if we can identify the allocation this goes to.\n             let cur_align =\n@@ -84,15 +84,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // If the allocation alignment is at least the required alignment we use the\n                 // libcore implementation.\n                 // FIXME: is this correct in case of truncation?\n-                result = u128::try_from(\n+                result = u64::try_from(\n                     (this.force_bits(ptr_scalar, this.pointer_size())? as *const i8)\n                         .align_offset(usize::try_from(req_align).unwrap())\n                 ).unwrap();\n             }\n         }\n \n         // Return result, and jump to caller.\n-        this.write_scalar(Scalar::from_uint(result, this.pointer_size()), dest)?;\n+        this.write_scalar(Scalar::from_machine_usize(result, this), dest)?;\n         this.go_to_block(ret);\n         Ok(())\n     }"}]}