{"sha": "443e1e455756df60c93a71b13dc132e289b7f032", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0M2UxZTQ1NTc1NmRmNjBjOTNhNzFiMTNkYzEzMmUyODliN2YwMzI=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T05:25:03Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-05-22T16:28:27Z"}, "message": "stdlib: Use if/alt expressions in std::option", "tree": {"sha": "19b439b828a3a6f72e961d7ecc6b8149b24d623e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19b439b828a3a6f72e961d7ecc6b8149b24d623e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/443e1e455756df60c93a71b13dc132e289b7f032", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/443e1e455756df60c93a71b13dc132e289b7f032", "html_url": "https://github.com/rust-lang/rust/commit/443e1e455756df60c93a71b13dc132e289b7f032", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/443e1e455756df60c93a71b13dc132e289b7f032/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "820ccf4a1335dd3940118e41f72a11bd654bac99", "url": "https://api.github.com/repos/rust-lang/rust/commits/820ccf4a1335dd3940118e41f72a11bd654bac99", "html_url": "https://github.com/rust-lang/rust/commit/820ccf4a1335dd3940118e41f72a11bd654bac99"}], "stats": {"total": 34, "additions": 16, "deletions": 18}, "files": [{"sha": "fe42132721a29a7b340281c265907cb7a12e4d99", "filename": "src/lib/option.rs", "status": "modified", "additions": 16, "deletions": 18, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/443e1e455756df60c93a71b13dc132e289b7f032/src%2Flib%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/443e1e455756df60c93a71b13dc132e289b7f032/src%2Flib%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Foption.rs?ref=443e1e455756df60c93a71b13dc132e289b7f032", "patch": "@@ -8,34 +8,32 @@ tag t[T] {\n type operator[T, U] = fn(&T) -> U;\n \n fn get[T](&t[T] opt) -> T {\n-    alt (opt) {\n+    ret alt (opt) {\n         case (some[T](?x)) {\n-            ret x;\n+            x\n         }\n         case (none[T]) {\n-            fail;\n+            fail\n         }\n-    }\n-    fail;   // FIXME: remove me when exhaustiveness checking works\n+    };\n }\n \n fn map[T, U](&operator[T, U] f, &t[T] opt) -> t[U] {\n-    alt (opt) {\n+    ret alt (opt) {\n         case (some[T](?x)) {\n-            ret some[U](f(x));\n+            some[U](f(x))\n         }\n         case (none[T]) {\n-            ret none[U];\n+            none[U]\n         }\n-    }\n-    fail;   // FIXME: remove me when exhaustiveness checking works\n+    };\n }\n \n fn is_none[T](&t[T] opt) -> bool {\n-    alt (opt) {\n-        case (none[T])      { ret true; }\n-        case (some[T](_))   { ret false; }\n-    }\n+    ret alt (opt) {\n+        case (none[T])      { true }\n+        case (some[T](_))   { false }\n+    };\n }\n \n fn from_maybe[T](&T def, &t[T] opt) -> T {\n@@ -44,10 +42,10 @@ fn from_maybe[T](&T def, &t[T] opt) -> T {\n }\n \n fn maybe[T, U](&U def, fn(&T) -> U f, &t[T] opt) -> U {\n-    alt (opt) {\n-        case (none[T]) { ret def; }\n-        case (some[T](?t)) { ret f(t); }\n-    }\n+    ret alt (opt) {\n+        case (none[T]) { def }\n+        case (some[T](?t)) { f(t) }\n+    };\n }\n \n // Can be defined in terms of the above when/if we have const bind."}]}