{"sha": "081bf75aea3d44631b2ff8a836a911584efe820e", "node_id": "C_kwDOAAsO6NoAKDA4MWJmNzVhZWEzZDQ0NjMxYjJmZjhhODM2YTkxMTU4NGVmZTgyMGU", "commit": {"author": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2022-01-23T18:34:26Z"}, "committer": {"name": "mark", "email": "markm@cs.wisc.edu", "date": "2022-03-02T15:45:25Z"}, "message": "rename ErrorReported -> ErrorGuaranteed", "tree": {"sha": "e194386e7590085a83d016e27e9a6ef6bacd253b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e194386e7590085a83d016e27e9a6ef6bacd253b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/081bf75aea3d44631b2ff8a836a911584efe820e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/081bf75aea3d44631b2ff8a836a911584efe820e", "html_url": "https://github.com/rust-lang/rust/commit/081bf75aea3d44631b2ff8a836a911584efe820e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/081bf75aea3d44631b2ff8a836a911584efe820e/comments", "author": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mark-i-m", "id": 8827840, "node_id": "MDQ6VXNlcjg4Mjc4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/8827840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mark-i-m", "html_url": "https://github.com/mark-i-m", "followers_url": "https://api.github.com/users/mark-i-m/followers", "following_url": "https://api.github.com/users/mark-i-m/following{/other_user}", "gists_url": "https://api.github.com/users/mark-i-m/gists{/gist_id}", "starred_url": "https://api.github.com/users/mark-i-m/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mark-i-m/subscriptions", "organizations_url": "https://api.github.com/users/mark-i-m/orgs", "repos_url": "https://api.github.com/users/mark-i-m/repos", "events_url": "https://api.github.com/users/mark-i-m/events{/privacy}", "received_events_url": "https://api.github.com/users/mark-i-m/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7df92e44c0d13caf1b42099482585e6ab8f5adca", "url": "https://api.github.com/repos/rust-lang/rust/commits/7df92e44c0d13caf1b42099482585e6ab8f5adca", "html_url": "https://github.com/rust-lang/rust/commit/7df92e44c0d13caf1b42099482585e6ab8f5adca"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ef95dfb6e2e0079c0c182ba19769b681d7929880", "filename": "src/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/081bf75aea3d44631b2ff8a836a911584efe820e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/081bf75aea3d44631b2ff8a836a911584efe820e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=081bf75aea3d44631b2ff8a836a911584efe820e", "patch": "@@ -57,7 +57,7 @@ use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModul\n use rustc_codegen_ssa::target_features::supported_target_features;\n use rustc_codegen_ssa::traits::{CodegenBackend, ExtraBackendMethods, ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{ErrorReported, Handler};\n+use rustc_errors::{ErrorGuaranteed, Handler};\n use rustc_metadata::EncodedMetadata;\n use rustc_middle::dep_graph::{WorkProduct, WorkProductId};\n use rustc_middle::ty::TyCtxt;\n@@ -93,7 +93,7 @@ impl CodegenBackend for GccCodegenBackend {\n         Box::new(res)\n     }\n \n-    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session, _outputs: &OutputFilenames) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorReported> {\n+    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session, _outputs: &OutputFilenames) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorGuaranteed> {\n         let (codegen_results, work_products) = ongoing_codegen\n             .downcast::<rustc_codegen_ssa::back::write::OngoingCodegen<GccCodegenBackend>>()\n             .expect(\"Expected GccCodegenBackend's OngoingCodegen, found Box<Any>\")\n@@ -102,7 +102,7 @@ impl CodegenBackend for GccCodegenBackend {\n         Ok((codegen_results, work_products))\n     }\n \n-    fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorReported> {\n+    fn link(&self, sess: &Session, codegen_results: CodegenResults, outputs: &OutputFilenames) -> Result<(), ErrorGuaranteed> {\n         use rustc_codegen_ssa::back::link::link_binary;\n \n         link_binary::<crate::archive::ArArchiveBuilder<'_>>("}]}