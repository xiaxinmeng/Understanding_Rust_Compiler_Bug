{"sha": "846a0bd1b92c7b3db112bfc9677c32e0976fb0cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0NmEwYmQxYjkyYzdiM2RiMTEyYmZjOTY3N2MzMmUwOTc2ZmIwY2M=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T05:47:05Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-09-07T07:26:26Z"}, "message": "Rollup merge of #53299 - MagnumOpus21:fix-macro-write, r=steveklabnik\n\nUpdated core/macros.rs to note it works in a no_std environment.\n\nFixes #45797\nThis PR updates the documentation of `write!` to note it works in a `no_std` environment, and adds an\nexample to showcase this. In a `no_std` environment, the author of the code is responsible for the\nimplementation of the `Write` trait. This example will work out of the box with `no_std`, but the\nimplementation of `Write` is expected to be provided by the user.\n\nr? @steveklabnik", "tree": {"sha": "39cde32ff93765a53fdc05d01494afa8e6a9ed72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39cde32ff93765a53fdc05d01494afa8e6a9ed72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/846a0bd1b92c7b3db112bfc9677c32e0976fb0cc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAluSKCMACgkQ/vbIBR0O\nATxiEw//VCaLmbVp2Bt2COAQNRSOjFyrFkZw1IB7ywLJhH52anXDErvJatN0wCFl\np/3VYJZcDP7jTEdDTUlAzMjVUCvph0cT6mdQNuJGnqZF8N31mwAXRgF/wvTZ4E53\n061/PW3kA1qDPkzfAWWMXVg4Gk+8aLER6197bDPqf52An2DC6/fwceJ1/2WhU51e\ntVps9iS6QTAZEf+U+K6Tu18rspdB8x8uinCmzWGz0JQuswXO1YlrT8BrVQ+zIbxy\n6Y7jkQNW+WACZJS1FhiFw6Kau4/JKjt4n6jhfm7uQ5q7gk2t40ENyJbFIAUnx9xa\nKJv2eV+cZHb69J8AAfPC5vRoKjMTA++k44hnBocb1BMAGIuOaSKlfql8+BVsLwPk\nAcJ1wd/a+uba+DUsUDtPG8uG8liezmi1//jy9yfoqVazhybMZY3gZbNJz40O3LwN\njPVgcMuAYQfVahxoHLbo5qXN5eahUt1WvnOL4IaXgY9Ctz7+giO/R3eQ+b8ACJGx\ncqJhhnMsmMcn1Hyf4oynKyfjaUgAn+izwKsBYse6mwyXlEe4u0R01sfnr7kjTxyi\nZFGXNCc97oRVdY1epis0CErLaw20McQELYtnq9SgYLd2GLvcBL2K5lt9TdYj07ug\ncVK3tuV1DFRJqOh1i4ipKTM0MQ4SdNOtuduAmQM5PoVSTSYkws8=\n=eLQS\n-----END PGP SIGNATURE-----", "payload": "tree 39cde32ff93765a53fdc05d01494afa8e6a9ed72\nparent 9804689b587c698e718ccdf91d7dbed4cd3dea50\nparent 9d440d578d3ec724cae93d9fac3a2701724e780a\nauthor kennytm <kennytm@gmail.com> 1536299225 +0800\ncommitter kennytm <kennytm@gmail.com> 1536305186 +0800\n\nRollup merge of #53299 - MagnumOpus21:fix-macro-write, r=steveklabnik\n\nUpdated core/macros.rs to note it works in a no_std environment.\n\nFixes #45797\nThis PR updates the documentation of `write!` to note it works in a `no_std` environment, and adds an\nexample to showcase this. In a `no_std` environment, the author of the code is responsible for the\nimplementation of the `Write` trait. This example will work out of the box with `no_std`, but the\nimplementation of `Write` is expected to be provided by the user.\n\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/846a0bd1b92c7b3db112bfc9677c32e0976fb0cc", "html_url": "https://github.com/rust-lang/rust/commit/846a0bd1b92c7b3db112bfc9677c32e0976fb0cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/846a0bd1b92c7b3db112bfc9677c32e0976fb0cc/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9804689b587c698e718ccdf91d7dbed4cd3dea50", "url": "https://api.github.com/repos/rust-lang/rust/commits/9804689b587c698e718ccdf91d7dbed4cd3dea50", "html_url": "https://github.com/rust-lang/rust/commit/9804689b587c698e718ccdf91d7dbed4cd3dea50"}, {"sha": "9d440d578d3ec724cae93d9fac3a2701724e780a", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d440d578d3ec724cae93d9fac3a2701724e780a", "html_url": "https://github.com/rust-lang/rust/commit/9d440d578d3ec724cae93d9fac3a2701724e780a"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "a0c87f13e5d5a4debd4b5ad1728f3ffb2a320c3e", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/846a0bd1b92c7b3db112bfc9677c32e0976fb0cc/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/846a0bd1b92c7b3db112bfc9677c32e0976fb0cc/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=846a0bd1b92c7b3db112bfc9677c32e0976fb0cc", "patch": "@@ -349,6 +349,26 @@ macro_rules! try {\n /// write!(&mut v, \"s = {:?}\", s).unwrap(); // uses io::Write::write_fmt\n /// assert_eq!(v, b\"s = \\\"abc 123\\\"\");\n /// ```\n+///\n+/// Note: This macro can be used in `no_std` setups as well\n+/// In a `no_std` setup you are responsible for the\n+/// implementation details of the components.\n+///\n+/// ```no_run\n+/// # extern crate core;\n+/// use core::fmt::Write;\n+///\n+/// struct Example;\n+///\n+/// impl Write for Example {\n+///     fn write_str(&mut self, _s: &str) -> core::fmt::Result {\n+///          unimplemented!();\n+///     }\n+/// }\n+///\n+/// let mut m = Example{};\n+/// write!(&mut m, \"Hello World\").expect(\"Not written\");\n+/// ```\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n macro_rules! write {"}]}