{"sha": "0010d62cad875aac76cad0efd143d4a318e8d2cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwMTBkNjJjYWQ4NzVhYWM3NmNhZDBlZmQxNDNkNGEzMThlOGQyY2Q=", "commit": {"author": {"name": "pcpthm", "email": "pcpthm@gmail.com", "date": "2019-04-04T09:57:10Z"}, "committer": {"name": "pcpthm", "email": "pcpthm@gmail.com", "date": "2019-04-04T09:57:10Z"}, "message": "Make robust about target directory", "tree": {"sha": "6107e790eaca45a6bbc0231ea36ab19390296be3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6107e790eaca45a6bbc0231ea36ab19390296be3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0010d62cad875aac76cad0efd143d4a318e8d2cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0010d62cad875aac76cad0efd143d4a318e8d2cd", "html_url": "https://github.com/rust-lang/rust/commit/0010d62cad875aac76cad0efd143d4a318e8d2cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0010d62cad875aac76cad0efd143d4a318e8d2cd/comments", "author": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcpthm", "id": 43881370, "node_id": "MDQ6VXNlcjQzODgxMzcw", "avatar_url": "https://avatars.githubusercontent.com/u/43881370?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcpthm", "html_url": "https://github.com/pcpthm", "followers_url": "https://api.github.com/users/pcpthm/followers", "following_url": "https://api.github.com/users/pcpthm/following{/other_user}", "gists_url": "https://api.github.com/users/pcpthm/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcpthm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcpthm/subscriptions", "organizations_url": "https://api.github.com/users/pcpthm/orgs", "repos_url": "https://api.github.com/users/pcpthm/repos", "events_url": "https://api.github.com/users/pcpthm/events{/privacy}", "received_events_url": "https://api.github.com/users/pcpthm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c083515eec3db48bb0226d198e7b1af3bc7eef05", "url": "https://api.github.com/repos/rust-lang/rust/commits/c083515eec3db48bb0226d198e7b1af3bc7eef05", "html_url": "https://github.com/rust-lang/rust/commit/c083515eec3db48bb0226d198e7b1af3bc7eef05"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "5bb47afb271fb320fc258484c5eccffe6b2b457a", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0010d62cad875aac76cad0efd143d4a318e8d2cd/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0010d62cad875aac76cad0efd143d4a318e8d2cd/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=0010d62cad875aac76cad0efd143d4a318e8d2cd", "patch": "@@ -126,10 +126,7 @@ mod tests {\n \n     #[test]\n     fn test_loading_rust_analyzer() {\n-        let mut path = std::env::current_exe().unwrap();\n-        while !path.join(\"Cargo.toml\").is_file() {\n-            path = path.parent().unwrap().to_owned();\n-        }\n+        let path = Path::new(env!(\"CARGO_MANIFEST_DIR\")).parent().unwrap().parent().unwrap();\n         let (db, roots) = BatchDatabase::load_cargo(path).unwrap();\n         let mut n_crates = 0;\n         for root in roots {"}]}