{"sha": "c45ee4bb29000cc0d02b11afa682852b5174b8a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NWVlNGJiMjkwMDBjYzBkMDJiMTFhZmE2ODI4NTJiNTE3NGI4YTU=", "commit": {"author": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-11-16T17:14:28Z"}, "committer": {"name": "Rich Kadel", "email": "richkadel@google.com", "date": "2020-12-03T17:50:09Z"}, "message": "Coverage tests for remaining TerminatorKinds and async, improve Assert\n\nTested and validate results for panic unwind, panic abort, assert!()\nmacro, TerminatorKind::Assert (for example, numeric overflow), and\nasync/await.\n\nImplemented a previous documented idea to change Assert handling to be\nthe same as FalseUnwind and Goto, so it doesn't get its own\nBasicCoverageBlock anymore. This changed a couple of coverage regions,\nbut I validated those changes are not any worse than the prior results,\nand probably help assure some consistency (even if some people might\ndisagree with how the code region is consistently computed).\n\nFixed issue with async/await. AggregateKind::Generator needs to be\nhandled like AggregateKind::Closure; coverage span for the outer async\nfunction should not \"cover\" the async body, which is actually executed\nin a separate \"closure\" MIR.", "tree": {"sha": "61e32e64c7145b33632db2f83a941c7550dc6c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61e32e64c7145b33632db2f83a941c7550dc6c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c45ee4bb29000cc0d02b11afa682852b5174b8a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c45ee4bb29000cc0d02b11afa682852b5174b8a5", "html_url": "https://github.com/rust-lang/rust/commit/c45ee4bb29000cc0d02b11afa682852b5174b8a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c45ee4bb29000cc0d02b11afa682852b5174b8a5/comments", "author": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "richkadel", "id": 3827298, "node_id": "MDQ6VXNlcjM4MjcyOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/3827298?v=4", "gravatar_id": "", "url": "https://api.github.com/users/richkadel", "html_url": "https://github.com/richkadel", "followers_url": "https://api.github.com/users/richkadel/followers", "following_url": "https://api.github.com/users/richkadel/following{/other_user}", "gists_url": "https://api.github.com/users/richkadel/gists{/gist_id}", "starred_url": "https://api.github.com/users/richkadel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/richkadel/subscriptions", "organizations_url": "https://api.github.com/users/richkadel/orgs", "repos_url": "https://api.github.com/users/richkadel/repos", "events_url": "https://api.github.com/users/richkadel/events{/privacy}", "received_events_url": "https://api.github.com/users/richkadel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f95c91c887acb2d0c49f549a07025178b818d87", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f95c91c887acb2d0c49f549a07025178b818d87", "html_url": "https://github.com/rust-lang/rust/commit/1f95c91c887acb2d0c49f549a07025178b818d87"}], "stats": {"total": 10969, "additions": 10102, "deletions": 867}, "files": [{"sha": "fd55a4dfc4c9223f5b68fef6e1a83748867174d5", "filename": "compiler/rustc_mir/src/util/generic_graphviz.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgeneric_graphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgeneric_graphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Futil%2Fgeneric_graphviz.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -116,9 +116,13 @@ impl<\n \n         write!(w, r#\"<table border=\"0\" cellborder=\"1\" cellspacing=\"0\">\"#)?;\n \n-        // FIXME(richkadel): Need generic way to know if node header should have a different color\n+        // FIXME(richkadel): If/when migrating the MIR graphviz to this generic implementation,\n+        // we need generic way to know if node header should have a different color. For example,\n+        // for MIR:\n+        //\n         // let (blk, bgcolor) = if data.is_cleanup {\n-        //    (format!(\"{:?} (cleanup)\", node), \"lightblue\")\n+        //     let color = if dark_mode { \"royalblue\" } else { \"lightblue\" };\n+        //     (format!(\"{:?} (cleanup)\", node), color)\n         // } else {\n         //     let color = if dark_mode { \"dimgray\" } else { \"gray\" };\n         //     (format!(\"{:?}\", node), color)"}, {"sha": "0eb425e42aad7a6966749c501133c74ce878e5d8", "filename": "src/doc/unstable-book/src/compiler-flags/source-based-code-coverage.md", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fcompiler-flags%2Fsource-based-code-coverage.md?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,8 +1,6 @@\n # `source-based-code-coverage`\n \n-The feature request for this feature is: [#34701]\n-\n-The Major Change Proposal (MCP) for this feature is: [#278](https://github.com/rust-lang/compiler-team/issues/278)\n+The tracking issue for this feature is: [#79121](https://github.com/rust-lang/rust/issues/79121).\n \n ------------------------\n "}, {"sha": "6ccff43dcdfd881559b709eb9ad5339f885e653d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/Makefile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2FMakefile?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -54,6 +54,9 @@ endif\n %: $(SOURCEDIR)/%.rs\n \t# Compile the test program with coverage instrumentation and generate relevant MIR.\n \t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n+\t\t\t$$( grep -q '^\\/\\/ require-rust-edition-2018' $(SOURCEDIR)/$@.rs && \\\n+\t\t\t\techo \"--edition=2018\" \\\n+\t\t\t) \\\n \t\t\t-Zinstrument-coverage \\\n \t\t\t-Clink-dead-code=$(LINK_DEAD_CODE)\n "}, {"sha": "33cfc9f3ed72c5efa1730cb1c7c6e43d74cb666a", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.abort.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.abort.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.abort.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.abort.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/abort.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 15,\n+              \"covered\": 13,\n+              \"percent\": 86.66666666666667\n+            },\n+            \"regions\": {\n+              \"count\": 10,\n+              \"covered\": 9,\n+              \"notcovered\": 1,\n+              \"percent\": 90\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 15,\n+          \"covered\": 13,\n+          \"percent\": 86.66666666666667\n+        },\n+        \"regions\": {\n+          \"count\": 10,\n+          \"covered\": 9,\n+          \"notcovered\": 1,\n+          \"percent\": 90\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "aa2a0cbebe77efcda5e37910b65febc89de72b2c", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.assert.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.assert.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.assert.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.assert.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/assert.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 13,\n+              \"covered\": 10,\n+              \"percent\": 76.92307692307693\n+            },\n+            \"regions\": {\n+              \"count\": 14,\n+              \"covered\": 12,\n+              \"notcovered\": 2,\n+              \"percent\": 85.71428571428571\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 13,\n+          \"covered\": 10,\n+          \"percent\": 76.92307692307693\n+        },\n+        \"regions\": {\n+          \"count\": 14,\n+          \"covered\": 12,\n+          \"notcovered\": 2,\n+          \"percent\": 85.71428571428571\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "004bedeea62808df70fc33f72938b9716b9a2f0c", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.async.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.async.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.async.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.async.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/async.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 9,\n+              \"covered\": 9,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 9,\n+              \"covered\": 9,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 31,\n+              \"covered\": 30,\n+              \"percent\": 96.7741935483871\n+            },\n+            \"regions\": {\n+              \"count\": 21,\n+              \"covered\": 18,\n+              \"notcovered\": 3,\n+              \"percent\": 85.71428571428571\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 9,\n+          \"covered\": 9,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 9,\n+          \"covered\": 9,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 31,\n+          \"covered\": 30,\n+          \"percent\": 96.7741935483871\n+        },\n+        \"regions\": {\n+          \"count\": 21,\n+          \"covered\": 18,\n+          \"notcovered\": 3,\n+          \"percent\": 85.71428571428571\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "d69ca80839a30240614d838ffa778b9515ea6c01", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.conditions.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.conditions.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 49,\n-              \"covered\": 23,\n-              \"percent\": 46.93877551020408\n+              \"count\": 64,\n+              \"covered\": 33,\n+              \"percent\": 51.5625\n             },\n             \"regions\": {\n-              \"count\": 69,\n-              \"covered\": 18,\n-              \"notcovered\": 51,\n-              \"percent\": 26.08695652173913\n+              \"count\": 88,\n+              \"covered\": 25,\n+              \"notcovered\": 63,\n+              \"percent\": 28.40909090909091\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 49,\n-          \"covered\": 23,\n-          \"percent\": 46.93877551020408\n+          \"count\": 64,\n+          \"covered\": 33,\n+          \"percent\": 51.5625\n         },\n         \"regions\": {\n-          \"count\": 69,\n-          \"covered\": 18,\n-          \"notcovered\": 51,\n-          \"percent\": 26.08695652173913\n+          \"count\": 88,\n+          \"covered\": 25,\n+          \"notcovered\": 63,\n+          \"percent\": 28.40909090909091\n         }\n       }\n     }"}, {"sha": "5dc82d2168ccdac96e1668811dbb900d5ebda483", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.inner_items.json", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.inner_items.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 26,\n-              \"covered\": 26,\n+              \"count\": 27,\n+              \"covered\": 27,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 15,\n-              \"covered\": 13,\n+              \"count\": 11,\n+              \"covered\": 9,\n               \"notcovered\": 2,\n-              \"percent\": 86.66666666666667\n+              \"percent\": 81.81818181818183\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 26,\n-          \"covered\": 26,\n+          \"count\": 27,\n+          \"covered\": 27,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 15,\n-          \"covered\": 13,\n+          \"count\": 11,\n+          \"covered\": 9,\n           \"notcovered\": 2,\n-          \"percent\": 86.66666666666667\n+          \"percent\": 81.81818181818183\n         }\n       }\n     }"}, {"sha": "ce3c957e660c585220b17aaa18a617dd3e28e98d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.nested_loops.json", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.nested_loops.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 21,\n+              \"count\": 22,\n               \"covered\": 16,\n-              \"percent\": 76.19047619047619\n+              \"percent\": 72.72727272727273\n             },\n             \"regions\": {\n-              \"count\": 18,\n-              \"covered\": 14,\n+              \"count\": 17,\n+              \"covered\": 13,\n               \"notcovered\": 4,\n-              \"percent\": 77.77777777777779\n+              \"percent\": 76.47058823529412\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 21,\n+          \"count\": 22,\n           \"covered\": 16,\n-          \"percent\": 76.19047619047619\n+          \"percent\": 72.72727272727273\n         },\n         \"regions\": {\n-          \"count\": 18,\n-          \"covered\": 14,\n+          \"count\": 17,\n+          \"covered\": 13,\n           \"notcovered\": 4,\n-          \"percent\": 77.77777777777779\n+          \"percent\": 76.47058823529412\n         }\n       }\n     }"}, {"sha": "176bfd7abebac84975a093923195f7d1b6b93483", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.overflow.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.overflow.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.overflow.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.overflow.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/overflow.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 21,\n+              \"covered\": 17,\n+              \"percent\": 80.95238095238095\n+            },\n+            \"regions\": {\n+              \"count\": 14,\n+              \"covered\": 12,\n+              \"notcovered\": 2,\n+              \"percent\": 85.71428571428571\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 21,\n+          \"covered\": 17,\n+          \"percent\": 80.95238095238095\n+        },\n+        \"regions\": {\n+          \"count\": 14,\n+          \"covered\": 12,\n+          \"notcovered\": 2,\n+          \"percent\": 85.71428571428571\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "5b13109dbe6b25ad4c0a8b96a4598b0d9e83696c", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.panic_unwind.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.panic_unwind.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.panic_unwind.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.panic_unwind.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/panic_unwind.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 17,\n+              \"covered\": 14,\n+              \"percent\": 82.35294117647058\n+            },\n+            \"regions\": {\n+              \"count\": 13,\n+              \"covered\": 11,\n+              \"notcovered\": 2,\n+              \"percent\": 84.61538461538461\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 17,\n+          \"covered\": 14,\n+          \"percent\": 82.35294117647058\n+        },\n+        \"regions\": {\n+          \"count\": 13,\n+          \"covered\": 11,\n+          \"notcovered\": 2,\n+          \"percent\": 84.61538461538461\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "9f25bc971c55887b22f7b1e1fe147385e13f1b52", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_export_coverage.yield.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.yield.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.yield.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_export_coverage.yield.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/yield.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 3,\n+              \"covered\": 3,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 3,\n+              \"covered\": 3,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 23,\n+              \"covered\": 16,\n+              \"percent\": 69.56521739130434\n+            },\n+            \"regions\": {\n+              \"count\": 22,\n+              \"covered\": 16,\n+              \"notcovered\": 6,\n+              \"percent\": 72.72727272727273\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 3,\n+          \"covered\": 3,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 3,\n+          \"covered\": 3,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 23,\n+          \"covered\": 16,\n+          \"percent\": 69.56521739130434\n+        },\n+        \"regions\": {\n+          \"count\": 22,\n+          \"covered\": 16,\n+          \"notcovered\": 6,\n+          \"percent\": 72.72727272727273\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "40c9c71a2aad4439331ea72aef1efa971cadce53", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.abort.txt", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.abort.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.abort.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.abort.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,35 @@\n+    1|       |#![feature(unwind_attributes)]\n+    2|       |#![allow(unused_assignments)]\n+    3|       |\n+    4|       |#[unwind(aborts)]\n+    5|       |fn might_abort(should_abort: bool) {\n+    6|      4|    if should_abort {\n+    7|      0|        println!(\"aborting...\");\n+    8|      0|        panic!(\"panics and aborts\");\n+    9|      4|    } else {\n+   10|      4|        println!(\"Don't Panic\");\n+   11|      4|    }\n+   12|      4|}\n+   13|       |\n+   14|       |fn main() -> Result<(),u8> {\n+   15|      1|    let mut countdown = 10;\n+   16|     11|    while countdown > 0 {\n+   17|     10|        if countdown < 5 {\n+   18|      4|            might_abort(false);\n+   19|      6|        }\n+   20|     10|        countdown -= 1;\n+   21|       |    }\n+   22|      1|    Ok(())\n+   23|      1|}\n+   24|       |\n+   25|       |// Notes:\n+   26|       |//   1. Compare this program and its coverage results to those of the similar tests\n+   27|       |//      `panic_unwind.rs` and `try_error_result.rs`.\n+   28|       |//   2. This test confirms the coverage generated when a program includes `TerminatorKind::Abort`.\n+   29|       |//   3. The test does not invoke the abort. By executing to a successful completion, the coverage\n+   30|       |//      results show where the program did and did not execute.\n+   31|       |//   4. If the program actually aborted, the coverage counters would not be saved (which \"works as\n+   32|       |//      intended\"). Coverage results would show no executed coverage regions.\n+   33|       |//   6. If `should_abort` is `true` and the program aborts, the program exits with a `132` status\n+   34|       |//      (on Linux at least).\n+"}, {"sha": "a6efcbabd35228c189ace40d44b79ed8a3b2035f", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.assert.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.assert.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.assert.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.assert.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,34 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|       |fn might_fail_assert(one_plus_one: u32) {\n+    5|      4|    println!(\"does 1 + 1 = {}?\", one_plus_one);\n+    6|      4|    assert_eq!(1 + 1, one_plus_one, \"the argument was wrong\");\n+                                                  ^1\n+    7|      3|}\n+    8|       |\n+    9|       |fn main() -> Result<(),u8> {\n+   10|      1|    let mut countdown = 10;\n+   11|     10|    while countdown > 0 {\n+   12|     10|        if countdown == 1 {\n+   13|      0|            might_fail_assert(3);\n+   14|     10|        } else if countdown < 5 {\n+   15|      3|            might_fail_assert(2);\n+   16|     15|        }\n+   17|      9|        countdown -= 1;\n+   18|       |    }\n+   19|      0|    Ok(())\n+   20|      0|}\n+   21|       |\n+   22|       |// Notes:\n+   23|       |//   1. Compare this program and its coverage results to those of the very similar test\n+   24|       |//      `panic_unwind.rs`, and similar tests `abort.rs` and `try_error_result.rs`.\n+   25|       |//   2. This test confirms the coverage generated when a program passes or fails an `assert!()` or\n+   26|       |//      related `assert_*!()` macro.\n+   27|       |//   3. Notably, the `assert` macros *do not* generate `TerminatorKind::Assert`. The macros produce\n+   28|       |//      conditional expressions, `TerminatorKind::SwitchInt` branches, and a possible call to\n+   29|       |//      `begin_panic_fmt()` (that begins a panic unwind, if the assertion test fails).\n+   30|       |//   4. `TerminatoKind::Assert` is, however, also present in the MIR generated for this test\n+   31|       |//      (and in many other coverage tests). The `Assert` terminator is typically generated by the\n+   32|       |//      Rust compiler to check for runtime failures, such as numeric overflows.\n+"}, {"sha": "b5d99732102d05e835d8d50e2effe75666c3be4f", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.async.txt", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.async.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,66 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |// require-rust-edition-2018\n+    4|       |\n+    5|      1|async fn f() -> u8 { 1 }\n+    6|       |\n+    7|       |async fn foo() -> [bool; 10] { [false; 10] }\n+    8|       |\n+    9|       |pub async fn g(x: u8) {\n+   10|       |    match x {\n+   11|       |        y if f().await == y => (),\n+   12|       |        _ => (),\n+   13|       |    }\n+   14|      1|}\n+   15|       |\n+   16|       |// #78366: check the reference to the binding is recorded even if the binding is not autorefed\n+   17|       |\n+   18|       |async fn h(x: usize) {\n+   19|       |    match x {\n+   20|       |        y if foo().await[y] => (),\n+   21|       |        _ => (),\n+   22|       |    }\n+   23|      1|}\n+   24|       |\n+   25|      1|async fn i(x: u8) {\n+   26|      1|    match x {\n+   27|      1|        y if f().await == y + 1 => (),\n+                      ^0                         ^0\n+   28|      1|        _ => (),\n+   29|       |    }\n+   30|      2|}\n+   31|       |\n+   32|      1|fn main() {\n+   33|      1|    let _ = g(10);\n+   34|      1|    let _ = h(9);\n+   35|      1|    let mut future = Box::pin(i(8));\n+   36|      1|    executor::block_on(future.as_mut());\n+   37|      1|}\n+   38|       |\n+   39|       |mod executor {\n+   40|       |    use core::{\n+   41|       |        future::Future,\n+   42|       |        pin::Pin,\n+   43|       |        task::{Context, Poll, RawWaker, RawWakerVTable, Waker},\n+   44|       |    };\n+   45|       |\n+   46|       |    pub fn block_on<F: Future>(mut future: F) -> F::Output {\n+   47|      1|        let mut future = unsafe { Pin::new_unchecked(&mut future) };\n+   48|      1|\n+   49|      1|        static VTABLE: RawWakerVTable = RawWakerVTable::new(\n+   50|      1|            |_| unimplemented!(\"clone\"),\n+   51|      1|            |_| unimplemented!(\"wake\"),\n+   52|      1|            |_| unimplemented!(\"wake_by_ref\"),\n+   53|      1|            |_| (),\n+   54|      1|        );\n+   55|      1|        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &VTABLE)) };\n+   56|      1|        let mut context = Context::from_waker(&waker);\n+   57|       |\n+   58|       |        loop {\n+   59|      1|            if let Poll::Ready(val) = future.as_mut().poll(&mut context) {\n+   60|      1|                break val;\n+   61|       |            }\n+   62|      0|        }\n+   63|      1|    }\n+   64|       |}\n+"}, {"sha": "e55a574c056b8b4158f342265c0ee188ff9c8880", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.conditions.txt", "status": "modified", "additions": 67, "deletions": 30, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.conditions.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -27,7 +27,8 @@\n    27|       |\n    28|      1|    if countdown > 7 {\n    29|      1|        countdown -= 4;\n-   30|      0|    } else if countdown > 2 {\n+   30|      1|    } else if countdown > 2 {\n+                            ^0\n    31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n    32|      0|            countdown = 0;\n    33|      0|        }\n@@ -36,34 +37,70 @@\n    36|      0|        return;\n    37|       |    }\n    38|       |\n-   39|      1|    let mut countdown = 0;\n-   40|      1|    if true {\n-   41|      1|        countdown = 1;\n-   42|      1|    }\n-   43|       |\n-   44|      1|    let z = if countdown > 7 {\n-                      ^0\n-   45|      0|        countdown -= 4;\n-   46|      1|    } else if countdown > 2 {\n-   47|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   48|      0|            countdown = 0;\n-   49|      0|        }\n-   50|      0|        countdown -= 5;\n-   51|       |    } else {\n-   52|      1|        let should_be_reachable = countdown;\n-   53|      1|        println!(\"reached\");\n-   54|      1|        return;\n-   55|       |    };\n+   39|      1|    if true {\n+   40|       |        // Demonstrate the difference with `TerminatorKind::Assert` as of 2020-11-15. Assert is no\n+   41|       |        // longer treated as a `BasicCoverageBlock` terminator, which changed the coverage region,\n+   42|       |        // for the executed `then` block above, to include the closing brace on line 30. That\n+   43|       |        // changed the line count, but the coverage code region (for the `else if` condition) is\n+   44|       |        // still valid.\n+   45|       |        //\n+   46|       |        // Note that `if` (then) and `else` blocks include the closing brace in their coverage\n+   47|       |        // code regions when the last line in the block ends in a semicolon, because the Rust\n+   48|       |        // compiler inserts a `StatementKind::Assign` to assign `const ()` to a `Place`, for the\n+   49|       |        // empty value for the executed block. When the last line does not end in a semicolon\n+   50|       |        // (that is, when the block actually results in a value), the additional `Assign` is not\n+   51|       |        // generated, and the brace is not included.\n+   52|      1|        let mut countdown = 0;\n+   53|      1|        if true {\n+   54|      1|            countdown = 10;\n+   55|      1|        }\n    56|       |\n-   57|      0|    let w = if countdown > 7 {\n-   58|      0|        countdown -= 4;\n-   59|      0|    } else if countdown > 2 {\n-   60|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   61|      0|            countdown = 0;\n-   62|      0|        }\n-   63|      0|        countdown -= 5;\n-   64|       |    } else {\n-   65|      0|        return;\n-   66|       |    };\n-   67|      1|}\n+   57|      1|        if countdown > 7 {\n+   58|      1|            countdown -= 4;\n+   59|      1|        }\n+   60|       |        // The closing brace of the `then` branch is now included in the coverage region, and shown\n+   61|       |        // as \"executed\" (giving its line a count of 1 here). Since, in the original version above,\n+   62|       |        // the closing brace shares the same line as the `else if` conditional expression (which is\n+   63|       |        // not executed if the first `then` condition is true), only the condition's code region is\n+   64|       |        // marked with a count of 0 now.\n+   65|      0|        else if countdown > 2 {\n+   66|      0|            if countdown < 1 || countdown > 5 || countdown != 9 {\n+   67|      0|                countdown = 0;\n+   68|      0|            }\n+   69|      0|            countdown -= 5;\n+   70|       |        } else {\n+   71|      0|            return;\n+   72|       |        }\n+   73|      1|    }\n+   74|       |\n+   75|      1|    let mut countdown = 0;\n+   76|      1|    if true {\n+   77|      1|        countdown = 1;\n+   78|      1|    }\n+   79|       |\n+   80|      1|    let z = if countdown > 7 {\n+                      ^0\n+   81|      0|        countdown -= 4;\n+   82|      1|    } else if countdown > 2 {\n+   83|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   84|      0|            countdown = 0;\n+   85|      0|        }\n+   86|      0|        countdown -= 5;\n+   87|       |    } else {\n+   88|      1|        let should_be_reachable = countdown;\n+   89|      1|        println!(\"reached\");\n+   90|      1|        return;\n+   91|       |    };\n+   92|       |\n+   93|      0|    let w = if countdown > 7 {\n+   94|      0|        countdown -= 4;\n+   95|      0|    } else if countdown > 2 {\n+   96|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   97|      0|            countdown = 0;\n+   98|      0|        }\n+   99|      0|        countdown -= 5;\n+  100|       |    } else {\n+  101|      0|        return;\n+  102|       |    };\n+  103|      1|}\n "}, {"sha": "efd9cd4f72d3ec34a62b190bc360fc844bf9affd", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.inner_items.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.inner_items.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -38,7 +38,7 @@\n    37|       |    }\n    38|       |\n    39|       |    impl InTrait for InStruct {\n-   40|       |        fn trait_func(&mut self, incr: u32) {\n+   40|      1|        fn trait_func(&mut self, incr: u32) {\n    41|      1|            self.in_struct_field += incr;\n    42|      1|            in_func(self.in_struct_field);\n    43|      1|        }"}, {"sha": "dd86a85815b3bf829428536f57c6279ce8d42695", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.nested_loops.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.nested_loops.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -15,7 +15,7 @@\n    15|      1|                a -= 10;\n    16|      1|                if is_true {\n    17|      1|                    break 'outer;\n-   18|       |                } else {\n+   18|      0|                } else {\n    19|      0|                    a -= 2;\n    20|      0|                }\n    21|      2|            }"}, {"sha": "322de1da25a264d130b31cdbdb9df38eb02af131", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.overflow.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.overflow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.overflow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.overflow.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,64 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|       |fn might_overflow(to_add: u32) -> u32 {\n+    5|      4|    if to_add > 5 {\n+    6|      1|        println!(\"this will probably overflow\");\n+    7|      3|    }\n+    8|      4|    let add_to = u32::MAX - 5;\n+    9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+   10|      4|    let result = to_add + add_to;\n+   11|      4|    println!(\"continuing after overflow check\");\n+   12|      4|    result\n+   13|      4|}\n+   14|       |\n+   15|       |fn main() -> Result<(),u8> {\n+   16|      1|    let mut countdown = 10;\n+   17|     10|    while countdown > 0 {\n+   18|     10|        if countdown == 1 {\n+   19|      0|            let result = might_overflow(10);\n+   20|      0|            println!(\"Result: {}\", result);\n+   21|     10|        } else if countdown < 5 {\n+   22|      3|            let result = might_overflow(1);\n+   23|      3|            println!(\"Result: {}\", result);\n+   24|     15|        }\n+   25|      9|        countdown -= 1;\n+   26|       |    }\n+   27|      0|    Ok(())\n+   28|      0|}\n+   29|       |\n+   30|       |// Notes:\n+   31|       |//   1. Compare this program and its coverage results to those of the very similar test `assert.rs`,\n+   32|       |//      and similar tests `panic_unwind.rs`, abort.rs` and `try_error_result.rs`.\n+   33|       |//   2. This test confirms the coverage generated when a program passes or fails a\n+   34|       |//      compiler-generated `TerminatorKind::Assert` (based on an overflow check, in this case).\n+   35|       |//   3. Similar to how the coverage instrumentation handles `TerminatorKind::Call`,\n+   36|       |//      compiler-generated assertion failures are assumed to be a symptom of a program bug, not\n+   37|       |//      expected behavior. To simplify the coverage graphs and keep instrumented programs as\n+   38|       |//      small and fast as possible, `Assert` terminators are assumed to always succeed, and\n+   39|       |//      therefore are considered \"non-branching\" terminators. So, an `Assert` terminator does not\n+   40|       |//      get its own coverage counter.\n+   41|       |//   4. After an unhandled panic or failed Assert, coverage results may not always be intuitive.\n+   42|       |//      In this test, the final count for the statements after the `if` block in `might_overflow()`\n+   43|       |//      is 4, even though the lines after `to_add + add_to` were executed only 3 times. Depending\n+   44|       |//      on the MIR graph and the structure of the code, this count could have been 3 (which might\n+   45|       |//      have been valid for the overflowed add `+`, but should have been 4 for the lines before\n+   46|       |//      the overflow. The reason for this potential uncertainty is, a `CounterKind` is incremented\n+   47|       |//      via StatementKind::Counter at the end of the block, but (as in the case in this test),\n+   48|       |//      a CounterKind::Expression is always evaluated. In this case, the expression was based on\n+   49|       |//      a `Counter` incremented as part of the evaluation of the `if` expression, which was\n+   50|       |//      executed, and counted, 4 times, before reaching the overflow add.\n+   51|       |\n+   52|       |// If the program did not overflow, the coverage for `might_overflow()` would look like this:\n+   53|       |//\n+   54|       |//     4|       |fn might_overflow(to_add: u32) -> u32 {\n+   55|       |//     5|      4|    if to_add > 5 {\n+   56|       |//     6|      0|        println!(\"this will probably overflow\");\n+   57|       |//     7|      4|    }\n+   58|       |//     8|      4|    let add_to = u32::MAX - 5;\n+   59|       |//     9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+   60|       |//    10|      4|    let result = to_add + add_to;\n+   61|       |//    11|      4|    println!(\"continuing after overflow check\");\n+   62|       |//    12|      4|    result\n+   63|       |//    13|      4|}\n+"}, {"sha": "f5149c11b7be094fe65cdbd860ac1b57fcbaaac8", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.panic_unwind.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.panic_unwind.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.panic_unwind.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.panic_unwind.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,50 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|       |fn might_panic(should_panic: bool) {\n+    5|      4|    if should_panic {\n+    6|      1|        println!(\"panicking...\");\n+    7|      1|        panic!(\"panics\");\n+    8|      3|    } else {\n+    9|      3|        println!(\"Don't Panic\");\n+   10|      3|    }\n+   11|      3|}\n+   12|       |\n+   13|       |fn main() -> Result<(),u8> {\n+   14|      1|    let mut countdown = 10;\n+   15|     10|    while countdown > 0 {\n+   16|     10|        if countdown == 1 {\n+   17|      0|            might_panic(true);\n+   18|     10|        } else if countdown < 5 {\n+   19|      3|            might_panic(false);\n+   20|     15|        }\n+   21|      9|        countdown -= 1;\n+   22|       |    }\n+   23|      0|    Ok(())\n+   24|      0|}\n+   25|       |\n+   26|       |// Notes:\n+   27|       |//   1. Compare this program and its coverage results to those of the similar tests `abort.rs` and\n+   28|       |//      `try_error_result.rs`.\n+   29|       |//   2. Since the `panic_unwind.rs` test is allowed to unwind, it is also allowed to execute the\n+   30|       |//      normal program exit cleanup, including writing out the current values of the coverage\n+   31|       |//      counters.\n+   32|       |//   3. The coverage results show (interestingly) that the `panic!()` call did execute, but it does\n+   33|       |//      not show coverage of the `if countdown == 1` branch in `main()` that calls\n+   34|       |//      `might_panic(true)` (causing the call to `panic!()`).\n+   35|       |//   4. The reason `main()`s `if countdown == 1` branch, calling `might_panic(true)`, appears\n+   36|       |//      \"uncovered\" is, InstrumentCoverage (intentionally) treats `TerminatorKind::Call` terminators\n+   37|       |//      as non-branching, because when a program executes normally, they always are. Errors handled\n+   38|       |//      via the try `?` operator produce error handling branches that *are* treated as branches in\n+   39|       |//      coverage results. By treating calls without try `?` operators as non-branching (assumed to\n+   40|       |//      return normally and continue) the coverage graph can be simplified, producing smaller,\n+   41|       |//      faster binaries, and cleaner coverage results.\n+   42|       |//   5. The reason the coverage results actually show `panic!()` was called is most likely because\n+   43|       |//      `panic!()` is a macro, not a simple function call, and there are other `Statement`s and/or\n+   44|       |//      `Terminator`s that execute with a coverage counter before the panic and unwind occur.\n+   45|       |//   6. By best practice, programs should not panic. By design, the coverage implementation will not\n+   46|       |//      incur additional cost (in program size and execution time) to improve coverage results for\n+   47|       |//      an event that is not supposted to happen.\n+   48|       |//   7. FIXME(#78544): This issue describes a feature request for a proposed option to enable\n+   49|       |//      more accurate coverage results for tests that intentionally panic.\n+"}, {"sha": "28813dd6d0b07c72bcefed22dd1be184354339c9", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage.yield.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.yield.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.yield.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage.yield.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,38 @@\n+    1|       |#![feature(generators, generator_trait)]\n+    2|       |#![allow(unused_assignments)]\n+    3|       |\n+    4|       |use std::ops::{Generator, GeneratorState};\n+    5|       |use std::pin::Pin;\n+    6|       |\n+    7|       |fn main() {\n+    8|      1|    let mut generator = || {\n+    9|      1|        yield 1;\n+   10|      1|        return \"foo\"\n+   11|      1|    };\n+   12|       |\n+   13|      1|    match Pin::new(&mut generator).resume(()) {\n+   14|      1|        GeneratorState::Yielded(1) => {}\n+   15|      0|        _ => panic!(\"unexpected value from resume\"),\n+   16|       |    }\n+   17|      1|    match Pin::new(&mut generator).resume(()) {\n+   18|      1|        GeneratorState::Complete(\"foo\") => {}\n+   19|      0|        _ => panic!(\"unexpected value from resume\"),\n+   20|       |    }\n+   21|       |\n+   22|      1|    let mut generator = || {\n+   23|      1|        yield 1;\n+   24|      1|        yield 2;\n+   25|      0|        yield 3;\n+   26|      0|        return \"foo\"\n+   27|      0|    };\n+   28|       |\n+   29|      1|    match Pin::new(&mut generator).resume(()) {\n+   30|      1|        GeneratorState::Yielded(1) => {}\n+   31|      0|        _ => panic!(\"unexpected value from resume\"),\n+   32|       |    }\n+   33|      1|    match Pin::new(&mut generator).resume(()) {\n+   34|      1|        GeneratorState::Yielded(2) => {}\n+   35|      0|        _ => panic!(\"unexpected value from resume\"),\n+   36|       |    }\n+   37|      1|}\n+"}, {"sha": "e787e5e152d56696d81c5783167a0a8f65cbcb04", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.abort.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.abort.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.abort.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.abort.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,41 @@\n+Counter in file 0 15:9 -> 15:27, #1\n+Counter in file 0 16:11 -> 16:24, (#1 + (#2 + #3))\n+Counter in file 0 17:12 -> 17:25, ((#1 + (#2 + #3)) - #4)\n+Counter in file 0 17:26 -> 19:10, #2\n+Counter in file 0 19:10 -> 19:11, #3\n+Counter in file 0 20:9 -> 20:23, (#2 + #3)\n+Counter in file 0 22:5 -> 23:2, #4\n+Counter in file 0 6:8 -> 6:20, #1\n+Counter in file 0 7:9 -> 8:37, #2\n+Counter in file 0 9:12 -> 12:2, (#1 - #2)\n+Emitting segments for file: ../coverage/abort.rs\n+Combined regions:\n+  6:8 -> 6:20 (count=4)\n+  7:9 -> 8:37 (count=0)\n+  9:12 -> 12:2 (count=4)\n+  15:9 -> 15:27 (count=1)\n+  16:11 -> 16:24 (count=11)\n+  17:12 -> 17:25 (count=10)\n+  17:26 -> 19:10 (count=4)\n+  19:10 -> 19:11 (count=6)\n+  20:9 -> 20:23 (count=10)\n+  22:5 -> 23:2 (count=1)\n+Segment at 6:8 (count = 4), RegionEntry\n+Segment at 6:20 (count = 0), Skipped\n+Segment at 7:9 (count = 0), RegionEntry\n+Segment at 8:37 (count = 0), Skipped\n+Segment at 9:12 (count = 4), RegionEntry\n+Segment at 12:2 (count = 0), Skipped\n+Segment at 15:9 (count = 1), RegionEntry\n+Segment at 15:27 (count = 0), Skipped\n+Segment at 16:11 (count = 11), RegionEntry\n+Segment at 16:24 (count = 0), Skipped\n+Segment at 17:12 (count = 10), RegionEntry\n+Segment at 17:25 (count = 0), Skipped\n+Segment at 17:26 (count = 4), RegionEntry\n+Segment at 19:10 (count = 6), RegionEntry\n+Segment at 19:11 (count = 0), Skipped\n+Segment at 20:9 (count = 10), RegionEntry\n+Segment at 20:23 (count = 0), Skipped\n+Segment at 22:5 (count = 1), RegionEntry\n+Segment at 23:2 (count = 0), Skipped"}, {"sha": "81cb6c03da702ed7ae07d8a43f3b62df78edab20", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.assert.txt", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.assert.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.assert.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.assert.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,54 @@\n+Counter in file 0 10:9 -> 10:27, #1\n+Counter in file 0 11:11 -> 11:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 12:12 -> 12:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 12:27 -> 14:10, #2\n+Counter in file 0 14:19 -> 14:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 14:33 -> 16:10, #3\n+Counter in file 0 16:10 -> 16:11, #4\n+Counter in file 0 16:10 -> 16:11, (#3 + #4)\n+Counter in file 0 17:9 -> 17:23, (#2 + (#3 + #4))\n+Counter in file 0 19:5 -> 20:2, #5\n+Counter in file 0 5:5 -> 5:48, #1\n+Counter in file 0 6:16 -> 6:21, (#1 + 0)\n+Counter in file 0 6:37 -> 6:61, #2\n+Counter in file 0 7:1 -> 7:2, (#1 - #2)\n+Emitting segments for file: ../coverage/assert.rs\n+Combined regions:\n+  5:5 -> 5:48 (count=4)\n+  6:16 -> 6:21 (count=4)\n+  6:37 -> 6:61 (count=1)\n+  7:1 -> 7:2 (count=3)\n+  10:9 -> 10:27 (count=1)\n+  11:11 -> 11:24 (count=10)\n+  12:12 -> 12:26 (count=10)\n+  12:27 -> 14:10 (count=0)\n+  14:19 -> 14:32 (count=10)\n+  14:33 -> 16:10 (count=3)\n+  16:10 -> 16:11 (count=15)\n+  17:9 -> 17:23 (count=9)\n+  19:5 -> 20:2 (count=0)\n+Segment at 5:5 (count = 4), RegionEntry\n+Segment at 5:48 (count = 0), Skipped\n+Segment at 6:16 (count = 4), RegionEntry\n+Segment at 6:21 (count = 0), Skipped\n+Segment at 6:37 (count = 1), RegionEntry\n+Segment at 6:61 (count = 0), Skipped\n+Segment at 7:1 (count = 3), RegionEntry\n+Segment at 7:2 (count = 0), Skipped\n+Segment at 10:9 (count = 1), RegionEntry\n+Segment at 10:27 (count = 0), Skipped\n+Segment at 11:11 (count = 10), RegionEntry\n+Segment at 11:24 (count = 0), Skipped\n+Segment at 12:12 (count = 10), RegionEntry\n+Segment at 12:26 (count = 0), Skipped\n+Segment at 12:27 (count = 0), RegionEntry\n+Segment at 14:10 (count = 0), Skipped\n+Segment at 14:19 (count = 10), RegionEntry\n+Segment at 14:32 (count = 0), Skipped\n+Segment at 14:33 (count = 3), RegionEntry\n+Segment at 16:10 (count = 15), RegionEntry\n+Segment at 16:11 (count = 0), Skipped\n+Segment at 17:9 (count = 9), RegionEntry\n+Segment at 17:23 (count = 0), Skipped\n+Segment at 19:5 (count = 0), RegionEntry\n+Segment at 20:2 (count = 0), Skipped"}, {"sha": "0490a319856b7a6b16557bb25df86badbc0e9a3d", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.async.txt", "status": "added", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.async.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,84 @@\n+Counter in file 0 15:9 -> 15:75, #1\n+Counter in file 0 15:9 -> 15:75, #1\n+Counter in file 0 15:9 -> 15:75, #1\n+Counter in file 0 47:13 -> 56:54, #1\n+Counter in file 0 59:32 -> 59:35, ((#1 + #2) - #2)\n+Counter in file 0 59:39 -> 59:73, (#1 + #2)\n+Counter in file 0 60:23 -> 60:26, (((#1 + #2) - #2) + 0)\n+Counter in file 0 62:10 -> 62:11, #2\n+Counter in file 0 63:5 -> 63:6, (((#1 + #2) - #2) + 0)\n+Counter in file 0 53:17 -> 53:19, #1\n+Counter in file 0 30:1 -> 30:2, #1\n+Counter in file 0 5:24 -> 5:25, #1\n+Counter in file 0 14:1 -> 14:2, #1\n+Counter in file 0 5:22 -> 5:25, #1\n+Counter in file 0 25:19 -> 26:12, #1\n+Counter in file 0 27:9 -> 27:10, #3\n+Counter in file 0 27:14 -> 27:17, (#1 + 0)\n+Counter in file 0 27:27 -> 27:32, #2\n+Counter in file 0 27:32 -> 27:33, (#2 - #3)\n+Counter in file 0 27:36 -> 27:38, (#3 + 0)\n+Counter in file 0 28:14 -> 28:16, #4\n+Counter in file 0 30:1 -> 30:2, (#3 + #4)\n+Counter in file 0 23:1 -> 23:2, #1\n+Counter in file 0 32:11 -> 37:2, #1\n+Emitting segments for file: ../coverage/async.rs\n+Combined regions:\n+  5:22 -> 5:25 (count=1)\n+  5:24 -> 5:25 (count=1)\n+  14:1 -> 14:2 (count=1)\n+  23:1 -> 23:2 (count=1)\n+  25:19 -> 26:12 (count=1)\n+  27:9 -> 27:10 (count=0)\n+  27:14 -> 27:17 (count=1)\n+  27:27 -> 27:32 (count=1)\n+  27:32 -> 27:33 (count=1)\n+  27:36 -> 27:38 (count=0)\n+  28:14 -> 28:16 (count=1)\n+  30:1 -> 30:2 (count=2)\n+  32:11 -> 37:2 (count=1)\n+  47:13 -> 56:54 (count=1)\n+  53:17 -> 53:19 (count=1)\n+  59:32 -> 59:35 (count=1)\n+  59:39 -> 59:73 (count=1)\n+  60:23 -> 60:26 (count=1)\n+  62:10 -> 62:11 (count=0)\n+  63:5 -> 63:6 (count=1)\n+Segment at 5:22 (count = 1), RegionEntry\n+Segment at 5:24 (count = 1), RegionEntry\n+Segment at 5:25 (count = 0), Skipped\n+Segment at 14:1 (count = 1), RegionEntry\n+Segment at 14:2 (count = 0), Skipped\n+Segment at 23:1 (count = 1), RegionEntry\n+Segment at 23:2 (count = 0), Skipped\n+Segment at 25:19 (count = 1), RegionEntry\n+Segment at 26:12 (count = 0), Skipped\n+Segment at 27:9 (count = 0), RegionEntry\n+Segment at 27:10 (count = 0), Skipped\n+Segment at 27:14 (count = 1), RegionEntry\n+Segment at 27:17 (count = 0), Skipped\n+Segment at 27:27 (count = 1), RegionEntry\n+Segment at 27:32 (count = 1), RegionEntry\n+Segment at 27:33 (count = 0), Skipped\n+Segment at 27:36 (count = 0), RegionEntry\n+Segment at 27:38 (count = 0), Skipped\n+Segment at 28:14 (count = 1), RegionEntry\n+Segment at 28:16 (count = 0), Skipped\n+Segment at 30:1 (count = 2), RegionEntry\n+Segment at 30:2 (count = 0), Skipped\n+Segment at 32:11 (count = 1), RegionEntry\n+Segment at 37:2 (count = 0), Skipped\n+Segment at 47:13 (count = 1), RegionEntry\n+Segment at 53:17 (count = 1), RegionEntry\n+Segment at 53:19 (count = 1)\n+Segment at 56:54 (count = 0), Skipped\n+Segment at 59:32 (count = 1), RegionEntry\n+Segment at 59:35 (count = 0), Skipped\n+Segment at 59:39 (count = 1), RegionEntry\n+Segment at 59:73 (count = 0), Skipped\n+Segment at 60:23 (count = 1), RegionEntry\n+Segment at 60:26 (count = 0), Skipped\n+Segment at 62:10 (count = 0), RegionEntry\n+Segment at 62:11 (count = 0), Skipped\n+Segment at 63:5 (count = 1), RegionEntry\n+Segment at 63:6 (count = 0), Skipped"}, {"sha": "a4c1a9c0f121a9a17f47186a1ddbbe8eb077afcb", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.conditions.txt", "status": "modified", "additions": 212, "deletions": 146, "changes": 358, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.conditions.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,72 +1,91 @@\n Counter in file 0 4:9 -> 4:26, #1\n Counter in file 0 5:8 -> 5:12, (#1 + 0)\n Counter in file 0 5:13 -> 7:6, #2\n-Counter in file 0 10:9 -> 10:10, (#4 + #11)\n+Counter in file 0 10:9 -> 10:10, (#3 + (#12 + #13))\n Counter in file 0 10:16 -> 10:29, (#2 + 0)\n-Counter in file 0 11:9 -> 12:10, #4\n+Counter in file 0 11:9 -> 12:10, #3\n Counter in file 0 13:15 -> 13:28, ((#2 + 0) - #3)\n-Counter in file 0 14:12 -> 14:25, #5\n-Counter in file 0 14:29 -> 14:42, (#5 - #13)\n-Counter in file 0 14:42 -> 14:43, (#13 + #14)\n-Counter in file 0 14:42 -> 14:43, ((#5 - #13) - #14)\n-Counter in file 0 14:46 -> 14:60, #21\n-Counter in file 0 14:60 -> 14:61, (#17 + #18)\n-Counter in file 0 14:60 -> 14:61, (#21 - #18)\n-Counter in file 0 14:61 -> 16:10, #22\n-Counter in file 0 16:10 -> 16:11, #23\n-Counter in file 0 17:9 -> 18:18, #11\n-Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #5)\n-Counter in file 0 23:9 -> 23:26, ((#4 + #11) + 0)\n-Counter in file 0 24:8 -> 24:12, ((#4 + #11) + 0)\n-Counter in file 0 24:13 -> 26:6, #12\n-Counter in file 0 28:8 -> 28:21, (#12 + 0)\n-Counter in file 0 29:9 -> 29:23, #16\n-Counter in file 0 30:15 -> 30:28, ((#12 + 0) - #15)\n-Counter in file 0 31:12 -> 31:25, (((#12 + 0) - #15) - #8)\n-Counter in file 0 31:29 -> 31:42, ((((#12 + 0) - #15) - #8) - #24)\n-Counter in file 0 31:42 -> 31:43, (((((#12 + 0) - #15) - #8) - #24) - #25)\n+Counter in file 0 14:12 -> 14:25, #4\n+Counter in file 0 14:29 -> 14:42, (#4 - #15)\n+Counter in file 0 14:42 -> 14:43, ((#4 - #15) - #16)\n+Counter in file 0 14:42 -> 14:43, (#15 + #16)\n+Counter in file 0 14:46 -> 14:60, #23\n+Counter in file 0 14:60 -> 14:61, (#18 + #19)\n+Counter in file 0 14:60 -> 14:61, (#23 - #19)\n+Counter in file 0 14:61 -> 16:10, #12\n+Counter in file 0 16:10 -> 16:11, #13\n+Counter in file 0 17:9 -> 18:18, (#12 + #13)\n+Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #4)\n+Counter in file 0 23:9 -> 23:26, ((#3 + (#12 + #13)) + 0)\n+Counter in file 0 24:8 -> 24:12, ((#3 + (#12 + #13)) + 0)\n+Counter in file 0 24:13 -> 26:6, #14\n+Counter in file 0 28:8 -> 28:21, (#14 + 0)\n+Counter in file 0 28:22 -> 30:6, #17\n+Counter in file 0 30:15 -> 30:28, ((#14 + 0) - #17)\n+Counter in file 0 31:12 -> 31:25, (((#14 + 0) - #17) - #8)\n+Counter in file 0 31:29 -> 31:42, ((((#14 + 0) - #17) - #8) - #24)\n+Counter in file 0 31:42 -> 31:43, (((((#14 + 0) - #17) - #8) - #24) - #25)\n Counter in file 0 31:42 -> 31:43, (#24 + #25)\n-Counter in file 0 31:46 -> 31:60, #32\n-Counter in file 0 31:60 -> 31:61, (#28 + #29)\n-Counter in file 0 31:60 -> 31:61, (#32 - #29)\n-Counter in file 0 31:61 -> 33:10, #33\n-Counter in file 0 33:10 -> 33:11, #34\n-Counter in file 0 34:9 -> 34:23, #19\n+Counter in file 0 31:46 -> 31:60, #34\n+Counter in file 0 31:60 -> 31:61, (#34 - #32)\n+Counter in file 0 31:60 -> 31:61, (#31 + #32)\n+Counter in file 0 31:61 -> 33:10, #20\n+Counter in file 0 33:10 -> 33:11, #21\n+Counter in file 0 34:9 -> 34:23, (#20 + #21)\n Counter in file 0 36:9 -> 36:15, #8\n-Counter in file 0 39:9 -> 39:26, (#16 + #19)\n-Counter in file 0 40:8 -> 40:12, ((#16 + #19) + 0)\n-Counter in file 0 40:13 -> 42:6, #20\n-Counter in file 0 44:9 -> 44:10, (#27 + #30)\n-Counter in file 0 44:16 -> 44:29, (#20 + 0)\n-Counter in file 0 45:9 -> 45:23, #27\n-Counter in file 0 46:15 -> 46:28, ((#20 + 0) - #26)\n-Counter in file 0 47:12 -> 47:25, (((#20 + 0) - #26) - #7)\n-Counter in file 0 47:29 -> 47:42, ((((#20 + 0) - #26) - #7) - #35)\n-Counter in file 0 47:42 -> 47:43, (#35 + #36)\n-Counter in file 0 47:42 -> 47:43, (((((#20 + 0) - #26) - #7) - #35) - #36)\n-Counter in file 0 47:46 -> 47:60, #41\n-Counter in file 0 47:60 -> 47:61, (#37 + #38)\n-Counter in file 0 47:60 -> 47:61, (#41 - #38)\n-Counter in file 0 47:61 -> 49:10, #42\n-Counter in file 0 49:10 -> 49:11, #43\n-Counter in file 0 50:9 -> 50:23, #30\n-Counter in file 0 52:13 -> 54:15, #7\n-Counter in file 0 57:9 -> 57:10, (#9 + #10)\n-Counter in file 0 57:16 -> 57:29, ((#27 + #30) + 0)\n-Counter in file 0 58:9 -> 58:23, #9\n-Counter in file 0 59:15 -> 59:28, ((#27 + #30) - #31)\n-Counter in file 0 60:12 -> 60:25, (((#27 + #30) - #31) - #6)\n-Counter in file 0 60:29 -> 60:42, ((((#27 + #30) - #31) - #6) - #39)\n-Counter in file 0 60:42 -> 60:43, (#39 + #40)\n-Counter in file 0 60:42 -> 60:43, (((((#27 + #30) - #31) - #6) - #39) - #40)\n-Counter in file 0 60:46 -> 60:60, #46\n-Counter in file 0 60:60 -> 60:61, (#46 - #45)\n-Counter in file 0 60:60 -> 60:61, (#44 + #45)\n-Counter in file 0 60:61 -> 62:10, #47\n-Counter in file 0 62:10 -> 62:11, #48\n-Counter in file 0 63:9 -> 63:23, #10\n-Counter in file 0 65:9 -> 65:15, #6\n-Counter in file 0 67:1 -> 67:2, ((#9 + #10) + (((#6 + #7) + #8) + (((#2 + 0) - #3) - #5)))\n+Counter in file 0 39:8 -> 39:12, (#17 + (#20 + #21))\n+Counter in file 0 52:13 -> 52:30, #22\n+Counter in file 0 53:12 -> 53:16, (#22 + 0)\n+Counter in file 0 53:17 -> 55:10, #26\n+Counter in file 0 57:12 -> 57:25, (#26 + 0)\n+Counter in file 0 57:26 -> 59:10, #27\n+Counter in file 0 65:17 -> 65:30, ((#26 + 0) - #27)\n+Counter in file 0 66:16 -> 66:29, (((#26 + 0) - #27) - #7)\n+Counter in file 0 66:33 -> 66:46, ((((#26 + 0) - #27) - #7) - #37)\n+Counter in file 0 66:46 -> 66:47, (#37 + #38)\n+Counter in file 0 66:46 -> 66:47, (((((#26 + 0) - #27) - #7) - #37) - #38)\n+Counter in file 0 66:50 -> 66:64, #47\n+Counter in file 0 66:64 -> 66:65, (#47 - #42)\n+Counter in file 0 66:64 -> 66:65, (#41 + #42)\n+Counter in file 0 66:65 -> 68:14, #28\n+Counter in file 0 68:14 -> 68:15, #29\n+Counter in file 0 69:13 -> 69:27, (#28 + #29)\n+Counter in file 0 71:13 -> 71:19, #7\n+Counter in file 0 73:6 -> 73:7, (#27 + (#28 + #29))\n+Counter in file 0 75:9 -> 75:26, ((#27 + (#28 + #29)) + 0)\n+Counter in file 0 76:8 -> 76:12, (((#27 + (#28 + #29)) + 0) + 0)\n+Counter in file 0 76:13 -> 78:6, #30\n+Counter in file 0 80:9 -> 80:10, (#33 + (#35 + #36))\n+Counter in file 0 80:16 -> 80:29, (#30 + 0)\n+Counter in file 0 80:30 -> 82:6, #33\n+Counter in file 0 82:15 -> 82:28, ((#30 + 0) - #33)\n+Counter in file 0 83:12 -> 83:25, (((#30 + 0) - #33) - #6)\n+Counter in file 0 83:29 -> 83:42, ((((#30 + 0) - #33) - #6) - #39)\n+Counter in file 0 83:42 -> 83:43, (#39 + #40)\n+Counter in file 0 83:42 -> 83:43, (((((#30 + 0) - #33) - #6) - #39) - #40)\n+Counter in file 0 83:46 -> 83:60, #48\n+Counter in file 0 83:60 -> 83:61, (#43 + #44)\n+Counter in file 0 83:60 -> 83:61, (#48 - #44)\n+Counter in file 0 83:61 -> 85:10, #35\n+Counter in file 0 85:10 -> 85:11, #36\n+Counter in file 0 86:9 -> 86:23, (#35 + #36)\n+Counter in file 0 88:13 -> 90:15, #6\n+Counter in file 0 93:9 -> 93:10, (#9 + (#10 + #11))\n+Counter in file 0 93:16 -> 93:29, ((#33 + (#35 + #36)) + 0)\n+Counter in file 0 93:30 -> 95:6, #9\n+Counter in file 0 95:15 -> 95:28, ((#33 + (#35 + #36)) - #9)\n+Counter in file 0 96:12 -> 96:25, (((#33 + (#35 + #36)) - #9) - #5)\n+Counter in file 0 96:29 -> 96:42, ((((#33 + (#35 + #36)) - #9) - #5) - #45)\n+Counter in file 0 96:42 -> 96:43, (#45 + #46)\n+Counter in file 0 96:42 -> 96:43, (((((#33 + (#35 + #36)) - #9) - #5) - #45) - #46)\n+Counter in file 0 96:46 -> 96:60, #51\n+Counter in file 0 96:60 -> 96:61, (#49 + #50)\n+Counter in file 0 96:60 -> 96:61, (#51 - #50)\n+Counter in file 0 96:61 -> 98:10, #10\n+Counter in file 0 98:10 -> 98:11, #11\n+Counter in file 0 99:9 -> 99:23, (#10 + #11)\n+Counter in file 0 101:9 -> 101:15, #5\n+Counter in file 0 103:1 -> 103:2, ((#9 + (#10 + #11)) + (((#5 + #6) + (#7 + #8)) + (((#2 + 0) - #3) - #4)))\n Emitting segments for file: ../coverage/conditions.rs\n Combined regions:\n   4:9 -> 4:26 (count=1)\n@@ -89,7 +108,7 @@ Combined regions:\n   24:8 -> 24:12 (count=1)\n   24:13 -> 26:6 (count=1)\n   28:8 -> 28:21 (count=1)\n-  29:9 -> 29:23 (count=1)\n+  28:22 -> 30:6 (count=1)\n   30:15 -> 30:28 (count=0)\n   31:12 -> 31:25 (count=0)\n   31:29 -> 31:42 (count=0)\n@@ -100,36 +119,53 @@ Combined regions:\n   33:10 -> 33:11 (count=0)\n   34:9 -> 34:23 (count=0)\n   36:9 -> 36:15 (count=0)\n-  39:9 -> 39:26 (count=1)\n-  40:8 -> 40:12 (count=1)\n-  40:13 -> 42:6 (count=1)\n-  44:9 -> 44:10 (count=0)\n-  44:16 -> 44:29 (count=1)\n-  45:9 -> 45:23 (count=0)\n-  46:15 -> 46:28 (count=1)\n-  47:12 -> 47:25 (count=0)\n-  47:29 -> 47:42 (count=0)\n-  47:42 -> 47:43 (count=0)\n-  47:46 -> 47:60 (count=0)\n-  47:60 -> 47:61 (count=0)\n-  47:61 -> 49:10 (count=0)\n-  49:10 -> 49:11 (count=0)\n-  50:9 -> 50:23 (count=0)\n-  52:13 -> 54:15 (count=1)\n-  57:9 -> 57:10 (count=0)\n-  57:16 -> 57:29 (count=0)\n-  58:9 -> 58:23 (count=0)\n-  59:15 -> 59:28 (count=0)\n-  60:12 -> 60:25 (count=0)\n-  60:29 -> 60:42 (count=0)\n-  60:42 -> 60:43 (count=0)\n-  60:46 -> 60:60 (count=0)\n-  60:60 -> 60:61 (count=0)\n-  60:61 -> 62:10 (count=0)\n-  62:10 -> 62:11 (count=0)\n-  63:9 -> 63:23 (count=0)\n-  65:9 -> 65:15 (count=0)\n-  67:1 -> 67:2 (count=1)\n+  39:8 -> 39:12 (count=1)\n+  52:13 -> 52:30 (count=1)\n+  53:12 -> 53:16 (count=1)\n+  53:17 -> 55:10 (count=1)\n+  57:12 -> 57:25 (count=1)\n+  57:26 -> 59:10 (count=1)\n+  65:17 -> 65:30 (count=0)\n+  66:16 -> 66:29 (count=0)\n+  66:33 -> 66:46 (count=0)\n+  66:46 -> 66:47 (count=0)\n+  66:50 -> 66:64 (count=0)\n+  66:64 -> 66:65 (count=0)\n+  66:65 -> 68:14 (count=0)\n+  68:14 -> 68:15 (count=0)\n+  69:13 -> 69:27 (count=0)\n+  71:13 -> 71:19 (count=0)\n+  73:6 -> 73:7 (count=1)\n+  75:9 -> 75:26 (count=1)\n+  76:8 -> 76:12 (count=1)\n+  76:13 -> 78:6 (count=1)\n+  80:9 -> 80:10 (count=0)\n+  80:16 -> 80:29 (count=1)\n+  80:30 -> 82:6 (count=0)\n+  82:15 -> 82:28 (count=1)\n+  83:12 -> 83:25 (count=0)\n+  83:29 -> 83:42 (count=0)\n+  83:42 -> 83:43 (count=0)\n+  83:46 -> 83:60 (count=0)\n+  83:60 -> 83:61 (count=0)\n+  83:61 -> 85:10 (count=0)\n+  85:10 -> 85:11 (count=0)\n+  86:9 -> 86:23 (count=0)\n+  88:13 -> 90:15 (count=1)\n+  93:9 -> 93:10 (count=0)\n+  93:16 -> 93:29 (count=0)\n+  93:30 -> 95:6 (count=0)\n+  95:15 -> 95:28 (count=0)\n+  96:12 -> 96:25 (count=0)\n+  96:29 -> 96:42 (count=0)\n+  96:42 -> 96:43 (count=0)\n+  96:46 -> 96:60 (count=0)\n+  96:60 -> 96:61 (count=0)\n+  96:61 -> 98:10 (count=0)\n+  98:10 -> 98:11 (count=0)\n+  99:9 -> 99:23 (count=0)\n+  101:9 -> 101:15 (count=0)\n+  103:1 -> 103:2 (count=1)\n Segment at 4:9 (count = 1), RegionEntry\n Segment at 4:26 (count = 0), Skipped\n Segment at 5:8 (count = 1), RegionEntry\n@@ -166,8 +202,8 @@ Segment at 24:13 (count = 1), RegionEntry\n Segment at 26:6 (count = 0), Skipped\n Segment at 28:8 (count = 1), RegionEntry\n Segment at 28:21 (count = 0), Skipped\n-Segment at 29:9 (count = 1), RegionEntry\n-Segment at 29:23 (count = 0), Skipped\n+Segment at 28:22 (count = 1), RegionEntry\n+Segment at 30:6 (count = 0), Skipped\n Segment at 30:15 (count = 0), RegionEntry\n Segment at 30:28 (count = 0), Skipped\n Segment at 31:12 (count = 0), RegionEntry\n@@ -184,55 +220,85 @@ Segment at 34:9 (count = 0), RegionEntry\n Segment at 34:23 (count = 0), Skipped\n Segment at 36:9 (count = 0), RegionEntry\n Segment at 36:15 (count = 0), Skipped\n-Segment at 39:9 (count = 1), RegionEntry\n-Segment at 39:26 (count = 0), Skipped\n-Segment at 40:8 (count = 1), RegionEntry\n-Segment at 40:12 (count = 0), Skipped\n-Segment at 40:13 (count = 1), RegionEntry\n-Segment at 42:6 (count = 0), Skipped\n-Segment at 44:9 (count = 0), RegionEntry\n-Segment at 44:10 (count = 0), Skipped\n-Segment at 44:16 (count = 1), RegionEntry\n-Segment at 44:29 (count = 0), Skipped\n-Segment at 45:9 (count = 0), RegionEntry\n-Segment at 45:23 (count = 0), Skipped\n-Segment at 46:15 (count = 1), RegionEntry\n-Segment at 46:28 (count = 0), Skipped\n-Segment at 47:12 (count = 0), RegionEntry\n-Segment at 47:25 (count = 0), Skipped\n-Segment at 47:29 (count = 0), RegionEntry\n-Segment at 47:42 (count = 0), RegionEntry\n-Segment at 47:43 (count = 0), Skipped\n-Segment at 47:46 (count = 0), RegionEntry\n-Segment at 47:60 (count = 0), RegionEntry\n-Segment at 47:61 (count = 0), RegionEntry\n-Segment at 49:10 (count = 0), RegionEntry\n-Segment at 49:11 (count = 0), Skipped\n-Segment at 50:9 (count = 0), RegionEntry\n-Segment at 50:23 (count = 0), Skipped\n+Segment at 39:8 (count = 1), RegionEntry\n+Segment at 39:12 (count = 0), Skipped\n Segment at 52:13 (count = 1), RegionEntry\n-Segment at 54:15 (count = 0), Skipped\n-Segment at 57:9 (count = 0), RegionEntry\n-Segment at 57:10 (count = 0), Skipped\n-Segment at 57:16 (count = 0), RegionEntry\n-Segment at 57:29 (count = 0), Skipped\n-Segment at 58:9 (count = 0), RegionEntry\n-Segment at 58:23 (count = 0), Skipped\n-Segment at 59:15 (count = 0), RegionEntry\n-Segment at 59:28 (count = 0), Skipped\n-Segment at 60:12 (count = 0), RegionEntry\n-Segment at 60:25 (count = 0), Skipped\n-Segment at 60:29 (count = 0), RegionEntry\n-Segment at 60:42 (count = 0), RegionEntry\n-Segment at 60:43 (count = 0), Skipped\n-Segment at 60:46 (count = 0), RegionEntry\n-Segment at 60:60 (count = 0), RegionEntry\n-Segment at 60:61 (count = 0), RegionEntry\n-Segment at 62:10 (count = 0), RegionEntry\n-Segment at 62:11 (count = 0), Skipped\n-Segment at 63:9 (count = 0), RegionEntry\n-Segment at 63:23 (count = 0), Skipped\n-Segment at 65:9 (count = 0), RegionEntry\n-Segment at 65:15 (count = 0), Skipped\n-Segment at 67:1 (count = 1), RegionEntry\n-Segment at 67:2 (count = 0), Skipped\n+Segment at 52:30 (count = 0), Skipped\n+Segment at 53:12 (count = 1), RegionEntry\n+Segment at 53:16 (count = 0), Skipped\n+Segment at 53:17 (count = 1), RegionEntry\n+Segment at 55:10 (count = 0), Skipped\n+Segment at 57:12 (count = 1), RegionEntry\n+Segment at 57:25 (count = 0), Skipped\n+Segment at 57:26 (count = 1), RegionEntry\n+Segment at 59:10 (count = 0), Skipped\n+Segment at 65:17 (count = 0), RegionEntry\n+Segment at 65:30 (count = 0), Skipped\n+Segment at 66:16 (count = 0), RegionEntry\n+Segment at 66:29 (count = 0), Skipped\n+Segment at 66:33 (count = 0), RegionEntry\n+Segment at 66:46 (count = 0), RegionEntry\n+Segment at 66:47 (count = 0), Skipped\n+Segment at 66:50 (count = 0), RegionEntry\n+Segment at 66:64 (count = 0), RegionEntry\n+Segment at 66:65 (count = 0), RegionEntry\n+Segment at 68:14 (count = 0), RegionEntry\n+Segment at 68:15 (count = 0), Skipped\n+Segment at 69:13 (count = 0), RegionEntry\n+Segment at 69:27 (count = 0), Skipped\n+Segment at 71:13 (count = 0), RegionEntry\n+Segment at 71:19 (count = 0), Skipped\n+Segment at 73:6 (count = 1), RegionEntry\n+Segment at 73:7 (count = 0), Skipped\n+Segment at 75:9 (count = 1), RegionEntry\n+Segment at 75:26 (count = 0), Skipped\n+Segment at 76:8 (count = 1), RegionEntry\n+Segment at 76:12 (count = 0), Skipped\n+Segment at 76:13 (count = 1), RegionEntry\n+Segment at 78:6 (count = 0), Skipped\n+Segment at 80:9 (count = 0), RegionEntry\n+Segment at 80:10 (count = 0), Skipped\n+Segment at 80:16 (count = 1), RegionEntry\n+Segment at 80:29 (count = 0), Skipped\n+Segment at 80:30 (count = 0), RegionEntry\n+Segment at 82:6 (count = 0), Skipped\n+Segment at 82:15 (count = 1), RegionEntry\n+Segment at 82:28 (count = 0), Skipped\n+Segment at 83:12 (count = 0), RegionEntry\n+Segment at 83:25 (count = 0), Skipped\n+Segment at 83:29 (count = 0), RegionEntry\n+Segment at 83:42 (count = 0), RegionEntry\n+Segment at 83:43 (count = 0), Skipped\n+Segment at 83:46 (count = 0), RegionEntry\n+Segment at 83:60 (count = 0), RegionEntry\n+Segment at 83:61 (count = 0), RegionEntry\n+Segment at 85:10 (count = 0), RegionEntry\n+Segment at 85:11 (count = 0), Skipped\n+Segment at 86:9 (count = 0), RegionEntry\n+Segment at 86:23 (count = 0), Skipped\n+Segment at 88:13 (count = 1), RegionEntry\n+Segment at 90:15 (count = 0), Skipped\n+Segment at 93:9 (count = 0), RegionEntry\n+Segment at 93:10 (count = 0), Skipped\n+Segment at 93:16 (count = 0), RegionEntry\n+Segment at 93:29 (count = 0), Skipped\n+Segment at 93:30 (count = 0), RegionEntry\n+Segment at 95:6 (count = 0), Skipped\n+Segment at 95:15 (count = 0), RegionEntry\n+Segment at 95:28 (count = 0), Skipped\n+Segment at 96:12 (count = 0), RegionEntry\n+Segment at 96:25 (count = 0), Skipped\n+Segment at 96:29 (count = 0), RegionEntry\n+Segment at 96:42 (count = 0), RegionEntry\n+Segment at 96:43 (count = 0), Skipped\n+Segment at 96:46 (count = 0), RegionEntry\n+Segment at 96:60 (count = 0), RegionEntry\n+Segment at 96:61 (count = 0), RegionEntry\n+Segment at 98:10 (count = 0), RegionEntry\n+Segment at 98:11 (count = 0), Skipped\n+Segment at 99:9 (count = 0), RegionEntry\n+Segment at 99:23 (count = 0), Skipped\n+Segment at 101:9 (count = 0), RegionEntry\n+Segment at 101:15 (count = 0), Skipped\n+Segment at 103:1 (count = 1), RegionEntry\n+Segment at 103:2 (count = 0), Skipped"}, {"sha": "e4dfae76817832682ccd493f063339ce1ef1df10", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.inner_items.txt", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.inner_items.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,7 +1,4 @@\n-Counter in file 0 19:13 -> 19:18, #1\n-Counter in file 0 20:13 -> 20:14, #2\n-Counter in file 0 20:17 -> 20:22, (#1 + 0)\n-Counter in file 0 21:9 -> 22:6, (#2 + 0)\n+Counter in file 0 19:13 -> 22:6, #1\n Counter in file 0 7:9 -> 9:26, #1\n Counter in file 0 10:8 -> 10:15, (#1 + 0)\n Counter in file 0 10:16 -> 12:6, #2\n@@ -11,21 +8,16 @@ Counter in file 0 48:16 -> 50:6, #3\n Counter in file 0 50:6 -> 50:7, ((#2 + (#1 - #2)) - #3)\n Counter in file 0 52:9 -> 57:2, (#3 + ((#2 + (#1 - #2)) - #3))\n Counter in file 0 33:42 -> 36:10, #1\n-Counter in file 0 41:37 -> 41:41, #1\n-Counter in file 0 42:13 -> 43:10, #2\n+Counter in file 0 40:45 -> 43:10, #1\n Emitting segments for file: ../coverage/inner_items.rs\n Combined regions:\n   7:9 -> 9:26 (count=1)\n   10:8 -> 10:15 (count=1)\n   10:16 -> 12:6 (count=1)\n   12:6 -> 12:7 (count=0)\n-  19:13 -> 19:18 (count=3)\n-  20:13 -> 20:14 (count=3)\n-  20:17 -> 20:22 (count=3)\n-  21:9 -> 22:6 (count=3)\n+  19:13 -> 22:6 (count=3)\n   33:42 -> 36:10 (count=1)\n-  41:37 -> 41:41 (count=1)\n-  42:13 -> 43:10 (count=1)\n+  40:45 -> 43:10 (count=1)\n   48:8 -> 48:15 (count=1)\n   48:16 -> 50:6 (count=1)\n   50:6 -> 50:7 (count=0)\n@@ -38,18 +30,10 @@ Segment at 10:16 (count = 1), RegionEntry\n Segment at 12:6 (count = 0), RegionEntry\n Segment at 12:7 (count = 0), Skipped\n Segment at 19:13 (count = 3), RegionEntry\n-Segment at 19:18 (count = 0), Skipped\n-Segment at 20:13 (count = 3), RegionEntry\n-Segment at 20:14 (count = 0), Skipped\n-Segment at 20:17 (count = 3), RegionEntry\n-Segment at 20:22 (count = 0), Skipped\n-Segment at 21:9 (count = 3), RegionEntry\n Segment at 22:6 (count = 0), Skipped\n Segment at 33:42 (count = 1), RegionEntry\n Segment at 36:10 (count = 0), Skipped\n-Segment at 41:37 (count = 1), RegionEntry\n-Segment at 41:41 (count = 0), Skipped\n-Segment at 42:13 (count = 1), RegionEntry\n+Segment at 40:45 (count = 1), RegionEntry\n Segment at 43:10 (count = 0), Skipped\n Segment at 48:8 (count = 1), RegionEntry\n Segment at 48:15 (count = 0), Skipped"}, {"sha": "f8e504c56c48e3b3695e89197c3ca9156b0f5557", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.nested_loops.txt", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.nested_loops.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,21 +1,20 @@\n Counter in file 0 2:9 -> 3:27, #1\n-Counter in file 0 5:19 -> 5:32, (#1 + #2)\n-Counter in file 0 6:13 -> 7:24, ((#1 + #2) - #3)\n-Counter in file 0 8:13 -> 8:14, ((((#1 + #2) - #3) + (#5 + #6)) - #7)\n-Counter in file 0 8:18 -> 8:23, (((#1 + #2) - #3) + (#5 + #6))\n-Counter in file 0 9:16 -> 9:22, (((((#1 + #2) - #3) + (#5 + #6)) - #7) + 0)\n-Counter in file 0 10:17 -> 10:22, #8\n-Counter in file 0 12:13 -> 12:19, #9\n-Counter in file 0 13:13 -> 13:19, #10\n-Counter in file 0 14:16 -> 14:22, (#10 + 0)\n-Counter in file 0 15:17 -> 16:27, #11\n-Counter in file 0 17:21 -> 17:33, #4\n-Counter in file 0 19:21 -> 21:14, #5\n-Counter in file 0 21:14 -> 21:15, #6\n-Counter in file 0 22:10 -> 22:11, (#5 + #6)\n-Counter in file 0 23:9 -> 23:23, #2\n-Counter in file 0 24:6 -> 24:7, #3\n-Counter in file 0 25:1 -> 25:2, (#4 + #3)\n+Counter in file 0 5:19 -> 5:32, (#1 + (#2 + #3))\n+Counter in file 0 6:13 -> 7:24, ((#1 + (#2 + #3)) - #4)\n+Counter in file 0 8:13 -> 8:14, ((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3)\n+Counter in file 0 8:18 -> 8:23, (((#1 + (#2 + #3)) - #4) + (#6 + #7))\n+Counter in file 0 9:16 -> 9:22, (((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) + 0)\n+Counter in file 0 10:17 -> 10:22, #2\n+Counter in file 0 12:13 -> 13:19, (((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2)\n+Counter in file 0 14:16 -> 14:22, ((((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2) + 0)\n+Counter in file 0 15:17 -> 16:27, ((((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2) - #7)\n+Counter in file 0 17:21 -> 17:33, #5\n+Counter in file 0 18:24 -> 21:14, #6\n+Counter in file 0 21:14 -> 21:15, #7\n+Counter in file 0 22:10 -> 22:11, (#6 + #7)\n+Counter in file 0 23:9 -> 23:23, (#2 + #3)\n+Counter in file 0 24:6 -> 24:7, #4\n+Counter in file 0 25:1 -> 25:2, (#5 + #4)\n Emitting segments for file: ../coverage/nested_loops.rs\n Combined regions:\n   2:9 -> 3:27 (count=1)\n@@ -25,12 +24,11 @@ Combined regions:\n   8:18 -> 8:23 (count=3)\n   9:16 -> 9:22 (count=3)\n   10:17 -> 10:22 (count=0)\n-  12:13 -> 12:19 (count=3)\n-  13:13 -> 13:19 (count=3)\n+  12:13 -> 13:19 (count=3)\n   14:16 -> 14:22 (count=3)\n   15:17 -> 16:27 (count=1)\n   17:21 -> 17:33 (count=1)\n-  19:21 -> 21:14 (count=0)\n+  18:24 -> 21:14 (count=0)\n   21:14 -> 21:15 (count=2)\n   22:10 -> 22:11 (count=2)\n   23:9 -> 23:23 (count=0)\n@@ -51,16 +49,14 @@ Segment at 9:22 (count = 0), Skipped\n Segment at 10:17 (count = 0), RegionEntry\n Segment at 10:22 (count = 0), Skipped\n Segment at 12:13 (count = 3), RegionEntry\n-Segment at 12:19 (count = 0), Skipped\n-Segment at 13:13 (count = 3), RegionEntry\n Segment at 13:19 (count = 0), Skipped\n Segment at 14:16 (count = 3), RegionEntry\n Segment at 14:22 (count = 0), Skipped\n Segment at 15:17 (count = 1), RegionEntry\n Segment at 16:27 (count = 0), Skipped\n Segment at 17:21 (count = 1), RegionEntry\n Segment at 17:33 (count = 0), Skipped\n-Segment at 19:21 (count = 0), RegionEntry\n+Segment at 18:24 (count = 0), RegionEntry\n Segment at 21:14 (count = 2), RegionEntry\n Segment at 21:15 (count = 0), Skipped\n Segment at 22:10 (count = 2), RegionEntry"}, {"sha": "8696e102b568e9947ebf7017c78dc92c919180cc", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.overflow.txt", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.overflow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.overflow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.overflow.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,53 @@\n+Counter in file 0 16:9 -> 16:27, #1\n+Counter in file 0 17:11 -> 17:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 18:12 -> 18:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 18:27 -> 21:10, #2\n+Counter in file 0 21:19 -> 21:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 21:33 -> 24:10, #3\n+Counter in file 0 24:10 -> 24:11, #4\n+Counter in file 0 24:10 -> 24:11, (#3 + #4)\n+Counter in file 0 25:9 -> 25:23, (#2 + (#3 + #4))\n+Counter in file 0 27:5 -> 28:2, #5\n+Counter in file 0 5:8 -> 5:18, #1\n+Counter in file 0 5:19 -> 7:6, #2\n+Counter in file 0 7:6 -> 7:7, (#1 - #2)\n+Counter in file 0 8:9 -> 13:2, (#2 + (#1 - #2))\n+Emitting segments for file: ../coverage/overflow.rs\n+Combined regions:\n+  5:8 -> 5:18 (count=4)\n+  5:19 -> 7:6 (count=1)\n+  7:6 -> 7:7 (count=3)\n+  8:9 -> 13:2 (count=4)\n+  16:9 -> 16:27 (count=1)\n+  17:11 -> 17:24 (count=10)\n+  18:12 -> 18:26 (count=10)\n+  18:27 -> 21:10 (count=0)\n+  21:19 -> 21:32 (count=10)\n+  21:33 -> 24:10 (count=3)\n+  24:10 -> 24:11 (count=15)\n+  25:9 -> 25:23 (count=9)\n+  27:5 -> 28:2 (count=0)\n+Segment at 5:8 (count = 4), RegionEntry\n+Segment at 5:18 (count = 0), Skipped\n+Segment at 5:19 (count = 1), RegionEntry\n+Segment at 7:6 (count = 3), RegionEntry\n+Segment at 7:7 (count = 0), Skipped\n+Segment at 8:9 (count = 4), RegionEntry\n+Segment at 13:2 (count = 0), Skipped\n+Segment at 16:9 (count = 1), RegionEntry\n+Segment at 16:27 (count = 0), Skipped\n+Segment at 17:11 (count = 10), RegionEntry\n+Segment at 17:24 (count = 0), Skipped\n+Segment at 18:12 (count = 10), RegionEntry\n+Segment at 18:26 (count = 0), Skipped\n+Segment at 18:27 (count = 0), RegionEntry\n+Segment at 21:10 (count = 0), Skipped\n+Segment at 21:19 (count = 10), RegionEntry\n+Segment at 21:32 (count = 0), Skipped\n+Segment at 21:33 (count = 3), RegionEntry\n+Segment at 24:10 (count = 15), RegionEntry\n+Segment at 24:11 (count = 0), Skipped\n+Segment at 25:9 (count = 9), RegionEntry\n+Segment at 25:23 (count = 0), Skipped\n+Segment at 27:5 (count = 0), RegionEntry\n+Segment at 28:2 (count = 0), Skipped"}, {"sha": "9602ff1a985aafcef928bea0a6f01b1948abd286", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.panic_unwind.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.panic_unwind.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.panic_unwind.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.panic_unwind.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,50 @@\n+Counter in file 0 14:9 -> 14:27, #1\n+Counter in file 0 15:11 -> 15:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 16:12 -> 16:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 16:27 -> 18:10, #2\n+Counter in file 0 18:19 -> 18:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 18:33 -> 20:10, #3\n+Counter in file 0 20:10 -> 20:11, #4\n+Counter in file 0 20:10 -> 20:11, (#3 + #4)\n+Counter in file 0 21:9 -> 21:23, (#2 + (#3 + #4))\n+Counter in file 0 23:5 -> 24:2, #5\n+Counter in file 0 5:8 -> 5:20, #1\n+Counter in file 0 6:9 -> 7:26, #2\n+Counter in file 0 8:12 -> 11:2, (#1 - #2)\n+Emitting segments for file: ../coverage/panic_unwind.rs\n+Combined regions:\n+  5:8 -> 5:20 (count=4)\n+  6:9 -> 7:26 (count=1)\n+  8:12 -> 11:2 (count=3)\n+  14:9 -> 14:27 (count=1)\n+  15:11 -> 15:24 (count=10)\n+  16:12 -> 16:26 (count=10)\n+  16:27 -> 18:10 (count=0)\n+  18:19 -> 18:32 (count=10)\n+  18:33 -> 20:10 (count=3)\n+  20:10 -> 20:11 (count=15)\n+  21:9 -> 21:23 (count=9)\n+  23:5 -> 24:2 (count=0)\n+Segment at 5:8 (count = 4), RegionEntry\n+Segment at 5:20 (count = 0), Skipped\n+Segment at 6:9 (count = 1), RegionEntry\n+Segment at 7:26 (count = 0), Skipped\n+Segment at 8:12 (count = 3), RegionEntry\n+Segment at 11:2 (count = 0), Skipped\n+Segment at 14:9 (count = 1), RegionEntry\n+Segment at 14:27 (count = 0), Skipped\n+Segment at 15:11 (count = 10), RegionEntry\n+Segment at 15:24 (count = 0), Skipped\n+Segment at 16:12 (count = 10), RegionEntry\n+Segment at 16:26 (count = 0), Skipped\n+Segment at 16:27 (count = 0), RegionEntry\n+Segment at 18:10 (count = 0), Skipped\n+Segment at 18:19 (count = 10), RegionEntry\n+Segment at 18:32 (count = 0), Skipped\n+Segment at 18:33 (count = 3), RegionEntry\n+Segment at 20:10 (count = 15), RegionEntry\n+Segment at 20:11 (count = 0), Skipped\n+Segment at 21:9 (count = 9), RegionEntry\n+Segment at 21:23 (count = 0), Skipped\n+Segment at 23:5 (count = 0), RegionEntry\n+Segment at 24:2 (count = 0), Skipped"}, {"sha": "6ea09248d65cae20751486e0c26d443f5bffac2e", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.simple_loop.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.simple_loop.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -3,10 +3,10 @@ Counter in file 0 12:9 -> 12:16, (#1 + 0)\n Counter in file 0 13:5 -> 18:6, #2\n Counter in file 0 18:6 -> 18:7, (#1 - #2)\n Counter in file 0 23:13 -> 25:14, ((#2 + (#1 - #2)) + #3)\n-Counter in file 0 27:13 -> 27:18, #4\n+Counter in file 0 27:13 -> 27:18, (((#2 + (#1 - #2)) + #3) - #3)\n Counter in file 0 30:9 -> 32:10, #3\n Counter in file 0 34:6 -> 34:7, (#2 + (#1 - #2))\n-Counter in file 0 35:1 -> 35:2, (#4 + 0)\n+Counter in file 0 35:1 -> 35:2, ((((#2 + (#1 - #2)) + #3) - #3) + 0)\n Emitting segments for file: ../coverage/simple_loop.rs\n Combined regions:\n   7:9 -> 9:26 (count=1)"}, {"sha": "5b7f5496af819bfee0b4af6942ede68cfbeed09c", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.try_error_result.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.try_error_result.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,12 +1,12 @@\n Counter in file 0 13:9 -> 14:23, #1\n Counter in file 0 17:9 -> 17:10, ((#1 + (#2 + #3)) - #4)\n Counter in file 0 19:9 -> 19:14, (#1 + (#2 + #3))\n-Counter in file 0 21:9 -> 25:26, #8\n-Counter in file 0 27:13 -> 27:41, #9\n+Counter in file 0 21:9 -> 25:26, (((#1 + (#2 + #3)) - #4) + 0)\n+Counter in file 0 27:13 -> 27:41, #8\n Counter in file 0 27:41 -> 27:42, #5\n-Counter in file 0 28:13 -> 28:42, (#9 - #5)\n+Counter in file 0 28:13 -> 28:42, (#8 - #5)\n Counter in file 0 28:42 -> 28:43, #6\n-Counter in file 0 32:13 -> 32:42, (#8 - #9)\n+Counter in file 0 32:13 -> 32:42, (((#1 + (#2 + #3)) - #4) - #8)\n Counter in file 0 32:42 -> 32:43, #7\n Counter in file 0 33:10 -> 33:11, #2\n Counter in file 0 33:10 -> 33:11, #3"}, {"sha": "7e79a8f00e1a6bf34643f5115d4ce602d93429f2", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.while_early_ret.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.while_early_ret.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,7 +1,7 @@\n Counter in file 0 5:9 -> 5:27, #1\n Counter in file 0 7:9 -> 9:10, (#1 + #2)\n Counter in file 0 12:13 -> 14:14, ((#1 + #2) - #3)\n-Counter in file 0 18:21 -> 20:22, #6\n+Counter in file 0 18:21 -> 20:22, (((#1 + #2) - #3) - #2)\n Counter in file 0 22:21 -> 22:27, #4\n Counter in file 0 26:21 -> 26:27, #5\n Counter in file 0 30:9 -> 32:10, #2"}, {"sha": "a1075358211648ba9e74644a8db870dcd4147764", "filename": "src/test/run-make-fulldeps/coverage-reports-base/expected_show_coverage_counters.yield.txt", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.yield.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.yield.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-base%2Fexpected_show_coverage_counters.yield.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,90 @@\n+Counter in file 0 8:9 -> 8:22, #1\n+Counter in file 0 13:11 -> 14:35, (#1 + 0)\n+Counter in file 0 14:39 -> 14:41, #4\n+Counter in file 0 15:14 -> 15:52, (#2 + #3)\n+Counter in file 0 17:11 -> 17:46, (#4 + 0)\n+Counter in file 0 18:34 -> 18:39, (#4 - #5)\n+Counter in file 0 18:44 -> 18:46, ((#4 - #5) - #6)\n+Counter in file 0 19:14 -> 19:52, (#5 + #6)\n+Counter in file 0 22:9 -> 22:22, (((#4 - #5) - #6) + 0)\n+Counter in file 0 29:11 -> 30:35, (((#4 - #5) - #6) + 0)\n+Counter in file 0 30:39 -> 30:41, #9\n+Counter in file 0 31:14 -> 31:52, (#7 + #8)\n+Counter in file 0 33:11 -> 34:35, (#9 + 0)\n+Counter in file 0 34:39 -> 34:41, #12\n+Counter in file 0 35:14 -> 35:52, (#10 + #11)\n+Counter in file 0 37:1 -> 37:2, (#12 + 0)\n+Counter in file 0 9:9 -> 9:16, #1\n+Counter in file 0 10:16 -> 11:6, #2\n+Counter in file 0 23:9 -> 23:16, #1\n+Counter in file 0 24:9 -> 24:16, #2\n+Counter in file 0 25:9 -> 25:16, #3\n+Counter in file 0 26:16 -> 27:6, #4\n+Emitting segments for file: ../coverage/yield.rs\n+Combined regions:\n+  8:9 -> 8:22 (count=1)\n+  9:9 -> 9:16 (count=1)\n+  10:16 -> 11:6 (count=1)\n+  13:11 -> 14:35 (count=1)\n+  14:39 -> 14:41 (count=1)\n+  15:14 -> 15:52 (count=0)\n+  17:11 -> 17:46 (count=1)\n+  18:34 -> 18:39 (count=1)\n+  18:44 -> 18:46 (count=1)\n+  19:14 -> 19:52 (count=0)\n+  22:9 -> 22:22 (count=1)\n+  23:9 -> 23:16 (count=1)\n+  24:9 -> 24:16 (count=1)\n+  25:9 -> 25:16 (count=0)\n+  26:16 -> 27:6 (count=0)\n+  29:11 -> 30:35 (count=1)\n+  30:39 -> 30:41 (count=1)\n+  31:14 -> 31:52 (count=0)\n+  33:11 -> 34:35 (count=1)\n+  34:39 -> 34:41 (count=1)\n+  35:14 -> 35:52 (count=0)\n+  37:1 -> 37:2 (count=1)\n+Segment at 8:9 (count = 1), RegionEntry\n+Segment at 8:22 (count = 0), Skipped\n+Segment at 9:9 (count = 1), RegionEntry\n+Segment at 9:16 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 11:6 (count = 0), Skipped\n+Segment at 13:11 (count = 1), RegionEntry\n+Segment at 14:35 (count = 0), Skipped\n+Segment at 14:39 (count = 1), RegionEntry\n+Segment at 14:41 (count = 0), Skipped\n+Segment at 15:14 (count = 0), RegionEntry\n+Segment at 15:52 (count = 0), Skipped\n+Segment at 17:11 (count = 1), RegionEntry\n+Segment at 17:46 (count = 0), Skipped\n+Segment at 18:34 (count = 1), RegionEntry\n+Segment at 18:39 (count = 0), Skipped\n+Segment at 18:44 (count = 1), RegionEntry\n+Segment at 18:46 (count = 0), Skipped\n+Segment at 19:14 (count = 0), RegionEntry\n+Segment at 19:52 (count = 0), Skipped\n+Segment at 22:9 (count = 1), RegionEntry\n+Segment at 22:22 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 23:16 (count = 0), Skipped\n+Segment at 24:9 (count = 1), RegionEntry\n+Segment at 24:16 (count = 0), Skipped\n+Segment at 25:9 (count = 0), RegionEntry\n+Segment at 25:16 (count = 0), Skipped\n+Segment at 26:16 (count = 0), RegionEntry\n+Segment at 27:6 (count = 0), Skipped\n+Segment at 29:11 (count = 1), RegionEntry\n+Segment at 30:35 (count = 0), Skipped\n+Segment at 30:39 (count = 1), RegionEntry\n+Segment at 30:41 (count = 0), Skipped\n+Segment at 31:14 (count = 0), RegionEntry\n+Segment at 31:52 (count = 0), Skipped\n+Segment at 33:11 (count = 1), RegionEntry\n+Segment at 34:35 (count = 0), Skipped\n+Segment at 34:39 (count = 1), RegionEntry\n+Segment at 34:41 (count = 0), Skipped\n+Segment at 35:14 (count = 0), RegionEntry\n+Segment at 35:52 (count = 0), Skipped\n+Segment at 37:1 (count = 1), RegionEntry\n+Segment at 37:2 (count = 0), Skipped"}, {"sha": "33cfc9f3ed72c5efa1730cb1c7c6e43d74cb666a", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.abort.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.abort.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.abort.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.abort.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/abort.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 15,\n+              \"covered\": 13,\n+              \"percent\": 86.66666666666667\n+            },\n+            \"regions\": {\n+              \"count\": 10,\n+              \"covered\": 9,\n+              \"notcovered\": 1,\n+              \"percent\": 90\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 15,\n+          \"covered\": 13,\n+          \"percent\": 86.66666666666667\n+        },\n+        \"regions\": {\n+          \"count\": 10,\n+          \"covered\": 9,\n+          \"notcovered\": 1,\n+          \"percent\": 90\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "aa2a0cbebe77efcda5e37910b65febc89de72b2c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.assert.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.assert.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.assert.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.assert.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/assert.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 13,\n+              \"covered\": 10,\n+              \"percent\": 76.92307692307693\n+            },\n+            \"regions\": {\n+              \"count\": 14,\n+              \"covered\": 12,\n+              \"notcovered\": 2,\n+              \"percent\": 85.71428571428571\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 13,\n+          \"covered\": 10,\n+          \"percent\": 76.92307692307693\n+        },\n+        \"regions\": {\n+          \"count\": 14,\n+          \"covered\": 12,\n+          \"notcovered\": 2,\n+          \"percent\": 85.71428571428571\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "004bedeea62808df70fc33f72938b9716b9a2f0c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.async.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.async.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.async.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.async.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/async.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 9,\n+              \"covered\": 9,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 9,\n+              \"covered\": 9,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 31,\n+              \"covered\": 30,\n+              \"percent\": 96.7741935483871\n+            },\n+            \"regions\": {\n+              \"count\": 21,\n+              \"covered\": 18,\n+              \"notcovered\": 3,\n+              \"percent\": 85.71428571428571\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 9,\n+          \"covered\": 9,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 9,\n+          \"covered\": 9,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 31,\n+          \"covered\": 30,\n+          \"percent\": 96.7741935483871\n+        },\n+        \"regions\": {\n+          \"count\": 21,\n+          \"covered\": 18,\n+          \"notcovered\": 3,\n+          \"percent\": 85.71428571428571\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "d69ca80839a30240614d838ffa778b9515ea6c01", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.conditions.json", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.conditions.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.conditions.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.conditions.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 49,\n-              \"covered\": 23,\n-              \"percent\": 46.93877551020408\n+              \"count\": 64,\n+              \"covered\": 33,\n+              \"percent\": 51.5625\n             },\n             \"regions\": {\n-              \"count\": 69,\n-              \"covered\": 18,\n-              \"notcovered\": 51,\n-              \"percent\": 26.08695652173913\n+              \"count\": 88,\n+              \"covered\": 25,\n+              \"notcovered\": 63,\n+              \"percent\": 28.40909090909091\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 49,\n-          \"covered\": 23,\n-          \"percent\": 46.93877551020408\n+          \"count\": 64,\n+          \"covered\": 33,\n+          \"percent\": 51.5625\n         },\n         \"regions\": {\n-          \"count\": 69,\n-          \"covered\": 18,\n-          \"notcovered\": 51,\n-          \"percent\": 26.08695652173913\n+          \"count\": 88,\n+          \"covered\": 25,\n+          \"notcovered\": 63,\n+          \"percent\": 28.40909090909091\n         }\n       }\n     }"}, {"sha": "5dc82d2168ccdac96e1668811dbb900d5ebda483", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.inner_items.json", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.inner_items.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 26,\n-              \"covered\": 26,\n+              \"count\": 27,\n+              \"covered\": 27,\n               \"percent\": 100\n             },\n             \"regions\": {\n-              \"count\": 15,\n-              \"covered\": 13,\n+              \"count\": 11,\n+              \"covered\": 9,\n               \"notcovered\": 2,\n-              \"percent\": 86.66666666666667\n+              \"percent\": 81.81818181818183\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 26,\n-          \"covered\": 26,\n+          \"count\": 27,\n+          \"covered\": 27,\n           \"percent\": 100\n         },\n         \"regions\": {\n-          \"count\": 15,\n-          \"covered\": 13,\n+          \"count\": 11,\n+          \"covered\": 9,\n           \"notcovered\": 2,\n-          \"percent\": 86.66666666666667\n+          \"percent\": 81.81818181818183\n         }\n       }\n     }"}, {"sha": "ce3c957e660c585220b17aaa18a617dd3e28e98d", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.nested_loops.json", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.nested_loops.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -16,15 +16,15 @@\n               \"percent\": 100\n             },\n             \"lines\": {\n-              \"count\": 21,\n+              \"count\": 22,\n               \"covered\": 16,\n-              \"percent\": 76.19047619047619\n+              \"percent\": 72.72727272727273\n             },\n             \"regions\": {\n-              \"count\": 18,\n-              \"covered\": 14,\n+              \"count\": 17,\n+              \"covered\": 13,\n               \"notcovered\": 4,\n-              \"percent\": 77.77777777777779\n+              \"percent\": 76.47058823529412\n             }\n           }\n         }\n@@ -41,15 +41,15 @@\n           \"percent\": 100\n         },\n         \"lines\": {\n-          \"count\": 21,\n+          \"count\": 22,\n           \"covered\": 16,\n-          \"percent\": 76.19047619047619\n+          \"percent\": 72.72727272727273\n         },\n         \"regions\": {\n-          \"count\": 18,\n-          \"covered\": 14,\n+          \"count\": 17,\n+          \"covered\": 13,\n           \"notcovered\": 4,\n-          \"percent\": 77.77777777777779\n+          \"percent\": 76.47058823529412\n         }\n       }\n     }"}, {"sha": "176bfd7abebac84975a093923195f7d1b6b93483", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.overflow.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.overflow.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.overflow.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.overflow.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/overflow.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 21,\n+              \"covered\": 17,\n+              \"percent\": 80.95238095238095\n+            },\n+            \"regions\": {\n+              \"count\": 14,\n+              \"covered\": 12,\n+              \"notcovered\": 2,\n+              \"percent\": 85.71428571428571\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 21,\n+          \"covered\": 17,\n+          \"percent\": 80.95238095238095\n+        },\n+        \"regions\": {\n+          \"count\": 14,\n+          \"covered\": 12,\n+          \"notcovered\": 2,\n+          \"percent\": 85.71428571428571\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "5b13109dbe6b25ad4c0a8b96a4598b0d9e83696c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.panic_unwind.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.panic_unwind.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.panic_unwind.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.panic_unwind.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/panic_unwind.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 2,\n+              \"covered\": 2,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 17,\n+              \"covered\": 14,\n+              \"percent\": 82.35294117647058\n+            },\n+            \"regions\": {\n+              \"count\": 13,\n+              \"covered\": 11,\n+              \"notcovered\": 2,\n+              \"percent\": 84.61538461538461\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 2,\n+          \"covered\": 2,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 17,\n+          \"covered\": 14,\n+          \"percent\": 82.35294117647058\n+        },\n+        \"regions\": {\n+          \"count\": 13,\n+          \"covered\": 11,\n+          \"notcovered\": 2,\n+          \"percent\": 84.61538461538461\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "9f25bc971c55887b22f7b1e1fe147385e13f1b52", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_export_coverage.yield.json", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.yield.json", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.yield.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_export_coverage.yield.json?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,59 @@\n+{\n+  \"data\": [\n+    {\n+      \"files\": [\n+        {\n+          \"filename\": \"../coverage/yield.rs\",\n+          \"summary\": {\n+            \"functions\": {\n+              \"count\": 3,\n+              \"covered\": 3,\n+              \"percent\": 100\n+            },\n+            \"instantiations\": {\n+              \"count\": 3,\n+              \"covered\": 3,\n+              \"percent\": 100\n+            },\n+            \"lines\": {\n+              \"count\": 23,\n+              \"covered\": 16,\n+              \"percent\": 69.56521739130434\n+            },\n+            \"regions\": {\n+              \"count\": 22,\n+              \"covered\": 16,\n+              \"notcovered\": 6,\n+              \"percent\": 72.72727272727273\n+            }\n+          }\n+        }\n+      ],\n+      \"totals\": {\n+        \"functions\": {\n+          \"count\": 3,\n+          \"covered\": 3,\n+          \"percent\": 100\n+        },\n+        \"instantiations\": {\n+          \"count\": 3,\n+          \"covered\": 3,\n+          \"percent\": 100\n+        },\n+        \"lines\": {\n+          \"count\": 23,\n+          \"covered\": 16,\n+          \"percent\": 69.56521739130434\n+        },\n+        \"regions\": {\n+          \"count\": 22,\n+          \"covered\": 16,\n+          \"notcovered\": 6,\n+          \"percent\": 72.72727272727273\n+        }\n+      }\n+    }\n+  ],\n+  \"type\": \"llvm.coverage.json.export\",\n+  \"version\": \"2.0.1\"\n+}"}, {"sha": "40c9c71a2aad4439331ea72aef1efa971cadce53", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.abort.txt", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.abort.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.abort.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.abort.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,35 @@\n+    1|       |#![feature(unwind_attributes)]\n+    2|       |#![allow(unused_assignments)]\n+    3|       |\n+    4|       |#[unwind(aborts)]\n+    5|       |fn might_abort(should_abort: bool) {\n+    6|      4|    if should_abort {\n+    7|      0|        println!(\"aborting...\");\n+    8|      0|        panic!(\"panics and aborts\");\n+    9|      4|    } else {\n+   10|      4|        println!(\"Don't Panic\");\n+   11|      4|    }\n+   12|      4|}\n+   13|       |\n+   14|       |fn main() -> Result<(),u8> {\n+   15|      1|    let mut countdown = 10;\n+   16|     11|    while countdown > 0 {\n+   17|     10|        if countdown < 5 {\n+   18|      4|            might_abort(false);\n+   19|      6|        }\n+   20|     10|        countdown -= 1;\n+   21|       |    }\n+   22|      1|    Ok(())\n+   23|      1|}\n+   24|       |\n+   25|       |// Notes:\n+   26|       |//   1. Compare this program and its coverage results to those of the similar tests\n+   27|       |//      `panic_unwind.rs` and `try_error_result.rs`.\n+   28|       |//   2. This test confirms the coverage generated when a program includes `TerminatorKind::Abort`.\n+   29|       |//   3. The test does not invoke the abort. By executing to a successful completion, the coverage\n+   30|       |//      results show where the program did and did not execute.\n+   31|       |//   4. If the program actually aborted, the coverage counters would not be saved (which \"works as\n+   32|       |//      intended\"). Coverage results would show no executed coverage regions.\n+   33|       |//   6. If `should_abort` is `true` and the program aborts, the program exits with a `132` status\n+   34|       |//      (on Linux at least).\n+"}, {"sha": "a6efcbabd35228c189ace40d44b79ed8a3b2035f", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.assert.txt", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.assert.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.assert.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.assert.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,34 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|       |fn might_fail_assert(one_plus_one: u32) {\n+    5|      4|    println!(\"does 1 + 1 = {}?\", one_plus_one);\n+    6|      4|    assert_eq!(1 + 1, one_plus_one, \"the argument was wrong\");\n+                                                  ^1\n+    7|      3|}\n+    8|       |\n+    9|       |fn main() -> Result<(),u8> {\n+   10|      1|    let mut countdown = 10;\n+   11|     10|    while countdown > 0 {\n+   12|     10|        if countdown == 1 {\n+   13|      0|            might_fail_assert(3);\n+   14|     10|        } else if countdown < 5 {\n+   15|      3|            might_fail_assert(2);\n+   16|     15|        }\n+   17|      9|        countdown -= 1;\n+   18|       |    }\n+   19|      0|    Ok(())\n+   20|      0|}\n+   21|       |\n+   22|       |// Notes:\n+   23|       |//   1. Compare this program and its coverage results to those of the very similar test\n+   24|       |//      `panic_unwind.rs`, and similar tests `abort.rs` and `try_error_result.rs`.\n+   25|       |//   2. This test confirms the coverage generated when a program passes or fails an `assert!()` or\n+   26|       |//      related `assert_*!()` macro.\n+   27|       |//   3. Notably, the `assert` macros *do not* generate `TerminatorKind::Assert`. The macros produce\n+   28|       |//      conditional expressions, `TerminatorKind::SwitchInt` branches, and a possible call to\n+   29|       |//      `begin_panic_fmt()` (that begins a panic unwind, if the assertion test fails).\n+   30|       |//   4. `TerminatoKind::Assert` is, however, also present in the MIR generated for this test\n+   31|       |//      (and in many other coverage tests). The `Assert` terminator is typically generated by the\n+   32|       |//      Rust compiler to check for runtime failures, such as numeric overflows.\n+"}, {"sha": "b5d99732102d05e835d8d50e2effe75666c3be4f", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.async.txt", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.async.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,66 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |\n+    3|       |// require-rust-edition-2018\n+    4|       |\n+    5|      1|async fn f() -> u8 { 1 }\n+    6|       |\n+    7|       |async fn foo() -> [bool; 10] { [false; 10] }\n+    8|       |\n+    9|       |pub async fn g(x: u8) {\n+   10|       |    match x {\n+   11|       |        y if f().await == y => (),\n+   12|       |        _ => (),\n+   13|       |    }\n+   14|      1|}\n+   15|       |\n+   16|       |// #78366: check the reference to the binding is recorded even if the binding is not autorefed\n+   17|       |\n+   18|       |async fn h(x: usize) {\n+   19|       |    match x {\n+   20|       |        y if foo().await[y] => (),\n+   21|       |        _ => (),\n+   22|       |    }\n+   23|      1|}\n+   24|       |\n+   25|      1|async fn i(x: u8) {\n+   26|      1|    match x {\n+   27|      1|        y if f().await == y + 1 => (),\n+                      ^0                         ^0\n+   28|      1|        _ => (),\n+   29|       |    }\n+   30|      2|}\n+   31|       |\n+   32|      1|fn main() {\n+   33|      1|    let _ = g(10);\n+   34|      1|    let _ = h(9);\n+   35|      1|    let mut future = Box::pin(i(8));\n+   36|      1|    executor::block_on(future.as_mut());\n+   37|      1|}\n+   38|       |\n+   39|       |mod executor {\n+   40|       |    use core::{\n+   41|       |        future::Future,\n+   42|       |        pin::Pin,\n+   43|       |        task::{Context, Poll, RawWaker, RawWakerVTable, Waker},\n+   44|       |    };\n+   45|       |\n+   46|       |    pub fn block_on<F: Future>(mut future: F) -> F::Output {\n+   47|      1|        let mut future = unsafe { Pin::new_unchecked(&mut future) };\n+   48|      1|\n+   49|      1|        static VTABLE: RawWakerVTable = RawWakerVTable::new(\n+   50|      1|            |_| unimplemented!(\"clone\"),\n+   51|      1|            |_| unimplemented!(\"wake\"),\n+   52|      1|            |_| unimplemented!(\"wake_by_ref\"),\n+   53|      1|            |_| (),\n+   54|      1|        );\n+   55|      1|        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &VTABLE)) };\n+   56|      1|        let mut context = Context::from_waker(&waker);\n+   57|       |\n+   58|       |        loop {\n+   59|      1|            if let Poll::Ready(val) = future.as_mut().poll(&mut context) {\n+   60|      1|                break val;\n+   61|       |            }\n+   62|      0|        }\n+   63|      1|    }\n+   64|       |}\n+"}, {"sha": "e55a574c056b8b4158f342265c0ee188ff9c8880", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.conditions.txt", "status": "modified", "additions": 67, "deletions": 30, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.conditions.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -27,7 +27,8 @@\n    27|       |\n    28|      1|    if countdown > 7 {\n    29|      1|        countdown -= 4;\n-   30|      0|    } else if countdown > 2 {\n+   30|      1|    } else if countdown > 2 {\n+                            ^0\n    31|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n    32|      0|            countdown = 0;\n    33|      0|        }\n@@ -36,34 +37,70 @@\n    36|      0|        return;\n    37|       |    }\n    38|       |\n-   39|      1|    let mut countdown = 0;\n-   40|      1|    if true {\n-   41|      1|        countdown = 1;\n-   42|      1|    }\n-   43|       |\n-   44|      1|    let z = if countdown > 7 {\n-                      ^0\n-   45|      0|        countdown -= 4;\n-   46|      1|    } else if countdown > 2 {\n-   47|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   48|      0|            countdown = 0;\n-   49|      0|        }\n-   50|      0|        countdown -= 5;\n-   51|       |    } else {\n-   52|      1|        let should_be_reachable = countdown;\n-   53|      1|        println!(\"reached\");\n-   54|      1|        return;\n-   55|       |    };\n+   39|      1|    if true {\n+   40|       |        // Demonstrate the difference with `TerminatorKind::Assert` as of 2020-11-15. Assert is no\n+   41|       |        // longer treated as a `BasicCoverageBlock` terminator, which changed the coverage region,\n+   42|       |        // for the executed `then` block above, to include the closing brace on line 30. That\n+   43|       |        // changed the line count, but the coverage code region (for the `else if` condition) is\n+   44|       |        // still valid.\n+   45|       |        //\n+   46|       |        // Note that `if` (then) and `else` blocks include the closing brace in their coverage\n+   47|       |        // code regions when the last line in the block ends in a semicolon, because the Rust\n+   48|       |        // compiler inserts a `StatementKind::Assign` to assign `const ()` to a `Place`, for the\n+   49|       |        // empty value for the executed block. When the last line does not end in a semicolon\n+   50|       |        // (that is, when the block actually results in a value), the additional `Assign` is not\n+   51|       |        // generated, and the brace is not included.\n+   52|      1|        let mut countdown = 0;\n+   53|      1|        if true {\n+   54|      1|            countdown = 10;\n+   55|      1|        }\n    56|       |\n-   57|      0|    let w = if countdown > 7 {\n-   58|      0|        countdown -= 4;\n-   59|      0|    } else if countdown > 2 {\n-   60|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n-   61|      0|            countdown = 0;\n-   62|      0|        }\n-   63|      0|        countdown -= 5;\n-   64|       |    } else {\n-   65|      0|        return;\n-   66|       |    };\n-   67|      1|}\n+   57|      1|        if countdown > 7 {\n+   58|      1|            countdown -= 4;\n+   59|      1|        }\n+   60|       |        // The closing brace of the `then` branch is now included in the coverage region, and shown\n+   61|       |        // as \"executed\" (giving its line a count of 1 here). Since, in the original version above,\n+   62|       |        // the closing brace shares the same line as the `else if` conditional expression (which is\n+   63|       |        // not executed if the first `then` condition is true), only the condition's code region is\n+   64|       |        // marked with a count of 0 now.\n+   65|      0|        else if countdown > 2 {\n+   66|      0|            if countdown < 1 || countdown > 5 || countdown != 9 {\n+   67|      0|                countdown = 0;\n+   68|      0|            }\n+   69|      0|            countdown -= 5;\n+   70|       |        } else {\n+   71|      0|            return;\n+   72|       |        }\n+   73|      1|    }\n+   74|       |\n+   75|      1|    let mut countdown = 0;\n+   76|      1|    if true {\n+   77|      1|        countdown = 1;\n+   78|      1|    }\n+   79|       |\n+   80|      1|    let z = if countdown > 7 {\n+                      ^0\n+   81|      0|        countdown -= 4;\n+   82|      1|    } else if countdown > 2 {\n+   83|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   84|      0|            countdown = 0;\n+   85|      0|        }\n+   86|      0|        countdown -= 5;\n+   87|       |    } else {\n+   88|      1|        let should_be_reachable = countdown;\n+   89|      1|        println!(\"reached\");\n+   90|      1|        return;\n+   91|       |    };\n+   92|       |\n+   93|      0|    let w = if countdown > 7 {\n+   94|      0|        countdown -= 4;\n+   95|      0|    } else if countdown > 2 {\n+   96|      0|        if countdown < 1 || countdown > 5 || countdown != 9 {\n+   97|      0|            countdown = 0;\n+   98|      0|        }\n+   99|      0|        countdown -= 5;\n+  100|       |    } else {\n+  101|      0|        return;\n+  102|       |    };\n+  103|      1|}\n "}, {"sha": "efd9cd4f72d3ec34a62b190bc360fc844bf9affd", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.inner_items.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.inner_items.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -38,7 +38,7 @@\n    37|       |    }\n    38|       |\n    39|       |    impl InTrait for InStruct {\n-   40|       |        fn trait_func(&mut self, incr: u32) {\n+   40|      1|        fn trait_func(&mut self, incr: u32) {\n    41|      1|            self.in_struct_field += incr;\n    42|      1|            in_func(self.in_struct_field);\n    43|      1|        }"}, {"sha": "dd86a85815b3bf829428536f57c6279ce8d42695", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.nested_loops.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.nested_loops.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -15,7 +15,7 @@\n    15|      1|                a -= 10;\n    16|      1|                if is_true {\n    17|      1|                    break 'outer;\n-   18|       |                } else {\n+   18|      0|                } else {\n    19|      0|                    a -= 2;\n    20|      0|                }\n    21|      2|            }"}, {"sha": "322de1da25a264d130b31cdbdb9df38eb02af131", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.overflow.txt", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.overflow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.overflow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.overflow.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,64 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|       |fn might_overflow(to_add: u32) -> u32 {\n+    5|      4|    if to_add > 5 {\n+    6|      1|        println!(\"this will probably overflow\");\n+    7|      3|    }\n+    8|      4|    let add_to = u32::MAX - 5;\n+    9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+   10|      4|    let result = to_add + add_to;\n+   11|      4|    println!(\"continuing after overflow check\");\n+   12|      4|    result\n+   13|      4|}\n+   14|       |\n+   15|       |fn main() -> Result<(),u8> {\n+   16|      1|    let mut countdown = 10;\n+   17|     10|    while countdown > 0 {\n+   18|     10|        if countdown == 1 {\n+   19|      0|            let result = might_overflow(10);\n+   20|      0|            println!(\"Result: {}\", result);\n+   21|     10|        } else if countdown < 5 {\n+   22|      3|            let result = might_overflow(1);\n+   23|      3|            println!(\"Result: {}\", result);\n+   24|     15|        }\n+   25|      9|        countdown -= 1;\n+   26|       |    }\n+   27|      0|    Ok(())\n+   28|      0|}\n+   29|       |\n+   30|       |// Notes:\n+   31|       |//   1. Compare this program and its coverage results to those of the very similar test `assert.rs`,\n+   32|       |//      and similar tests `panic_unwind.rs`, abort.rs` and `try_error_result.rs`.\n+   33|       |//   2. This test confirms the coverage generated when a program passes or fails a\n+   34|       |//      compiler-generated `TerminatorKind::Assert` (based on an overflow check, in this case).\n+   35|       |//   3. Similar to how the coverage instrumentation handles `TerminatorKind::Call`,\n+   36|       |//      compiler-generated assertion failures are assumed to be a symptom of a program bug, not\n+   37|       |//      expected behavior. To simplify the coverage graphs and keep instrumented programs as\n+   38|       |//      small and fast as possible, `Assert` terminators are assumed to always succeed, and\n+   39|       |//      therefore are considered \"non-branching\" terminators. So, an `Assert` terminator does not\n+   40|       |//      get its own coverage counter.\n+   41|       |//   4. After an unhandled panic or failed Assert, coverage results may not always be intuitive.\n+   42|       |//      In this test, the final count for the statements after the `if` block in `might_overflow()`\n+   43|       |//      is 4, even though the lines after `to_add + add_to` were executed only 3 times. Depending\n+   44|       |//      on the MIR graph and the structure of the code, this count could have been 3 (which might\n+   45|       |//      have been valid for the overflowed add `+`, but should have been 4 for the lines before\n+   46|       |//      the overflow. The reason for this potential uncertainty is, a `CounterKind` is incremented\n+   47|       |//      via StatementKind::Counter at the end of the block, but (as in the case in this test),\n+   48|       |//      a CounterKind::Expression is always evaluated. In this case, the expression was based on\n+   49|       |//      a `Counter` incremented as part of the evaluation of the `if` expression, which was\n+   50|       |//      executed, and counted, 4 times, before reaching the overflow add.\n+   51|       |\n+   52|       |// If the program did not overflow, the coverage for `might_overflow()` would look like this:\n+   53|       |//\n+   54|       |//     4|       |fn might_overflow(to_add: u32) -> u32 {\n+   55|       |//     5|      4|    if to_add > 5 {\n+   56|       |//     6|      0|        println!(\"this will probably overflow\");\n+   57|       |//     7|      4|    }\n+   58|       |//     8|      4|    let add_to = u32::MAX - 5;\n+   59|       |//     9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+   60|       |//    10|      4|    let result = to_add + add_to;\n+   61|       |//    11|      4|    println!(\"continuing after overflow check\");\n+   62|       |//    12|      4|    result\n+   63|       |//    13|      4|}\n+"}, {"sha": "f5149c11b7be094fe65cdbd860ac1b57fcbaaac8", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.panic_unwind.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.panic_unwind.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.panic_unwind.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.panic_unwind.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,50 @@\n+    1|       |#![allow(unused_assignments)]\n+    2|       |// expect-exit-status-101\n+    3|       |\n+    4|       |fn might_panic(should_panic: bool) {\n+    5|      4|    if should_panic {\n+    6|      1|        println!(\"panicking...\");\n+    7|      1|        panic!(\"panics\");\n+    8|      3|    } else {\n+    9|      3|        println!(\"Don't Panic\");\n+   10|      3|    }\n+   11|      3|}\n+   12|       |\n+   13|       |fn main() -> Result<(),u8> {\n+   14|      1|    let mut countdown = 10;\n+   15|     10|    while countdown > 0 {\n+   16|     10|        if countdown == 1 {\n+   17|      0|            might_panic(true);\n+   18|     10|        } else if countdown < 5 {\n+   19|      3|            might_panic(false);\n+   20|     15|        }\n+   21|      9|        countdown -= 1;\n+   22|       |    }\n+   23|      0|    Ok(())\n+   24|      0|}\n+   25|       |\n+   26|       |// Notes:\n+   27|       |//   1. Compare this program and its coverage results to those of the similar tests `abort.rs` and\n+   28|       |//      `try_error_result.rs`.\n+   29|       |//   2. Since the `panic_unwind.rs` test is allowed to unwind, it is also allowed to execute the\n+   30|       |//      normal program exit cleanup, including writing out the current values of the coverage\n+   31|       |//      counters.\n+   32|       |//   3. The coverage results show (interestingly) that the `panic!()` call did execute, but it does\n+   33|       |//      not show coverage of the `if countdown == 1` branch in `main()` that calls\n+   34|       |//      `might_panic(true)` (causing the call to `panic!()`).\n+   35|       |//   4. The reason `main()`s `if countdown == 1` branch, calling `might_panic(true)`, appears\n+   36|       |//      \"uncovered\" is, InstrumentCoverage (intentionally) treats `TerminatorKind::Call` terminators\n+   37|       |//      as non-branching, because when a program executes normally, they always are. Errors handled\n+   38|       |//      via the try `?` operator produce error handling branches that *are* treated as branches in\n+   39|       |//      coverage results. By treating calls without try `?` operators as non-branching (assumed to\n+   40|       |//      return normally and continue) the coverage graph can be simplified, producing smaller,\n+   41|       |//      faster binaries, and cleaner coverage results.\n+   42|       |//   5. The reason the coverage results actually show `panic!()` was called is most likely because\n+   43|       |//      `panic!()` is a macro, not a simple function call, and there are other `Statement`s and/or\n+   44|       |//      `Terminator`s that execute with a coverage counter before the panic and unwind occur.\n+   45|       |//   6. By best practice, programs should not panic. By design, the coverage implementation will not\n+   46|       |//      incur additional cost (in program size and execution time) to improve coverage results for\n+   47|       |//      an event that is not supposted to happen.\n+   48|       |//   7. FIXME(#78544): This issue describes a feature request for a proposed option to enable\n+   49|       |//      more accurate coverage results for tests that intentionally panic.\n+"}, {"sha": "28813dd6d0b07c72bcefed22dd1be184354339c9", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage.yield.txt", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.yield.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.yield.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage.yield.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,38 @@\n+    1|       |#![feature(generators, generator_trait)]\n+    2|       |#![allow(unused_assignments)]\n+    3|       |\n+    4|       |use std::ops::{Generator, GeneratorState};\n+    5|       |use std::pin::Pin;\n+    6|       |\n+    7|       |fn main() {\n+    8|      1|    let mut generator = || {\n+    9|      1|        yield 1;\n+   10|      1|        return \"foo\"\n+   11|      1|    };\n+   12|       |\n+   13|      1|    match Pin::new(&mut generator).resume(()) {\n+   14|      1|        GeneratorState::Yielded(1) => {}\n+   15|      0|        _ => panic!(\"unexpected value from resume\"),\n+   16|       |    }\n+   17|      1|    match Pin::new(&mut generator).resume(()) {\n+   18|      1|        GeneratorState::Complete(\"foo\") => {}\n+   19|      0|        _ => panic!(\"unexpected value from resume\"),\n+   20|       |    }\n+   21|       |\n+   22|      1|    let mut generator = || {\n+   23|      1|        yield 1;\n+   24|      1|        yield 2;\n+   25|      0|        yield 3;\n+   26|      0|        return \"foo\"\n+   27|      0|    };\n+   28|       |\n+   29|      1|    match Pin::new(&mut generator).resume(()) {\n+   30|      1|        GeneratorState::Yielded(1) => {}\n+   31|      0|        _ => panic!(\"unexpected value from resume\"),\n+   32|       |    }\n+   33|      1|    match Pin::new(&mut generator).resume(()) {\n+   34|      1|        GeneratorState::Yielded(2) => {}\n+   35|      0|        _ => panic!(\"unexpected value from resume\"),\n+   36|       |    }\n+   37|      1|}\n+"}, {"sha": "e787e5e152d56696d81c5783167a0a8f65cbcb04", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.abort.txt", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.abort.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.abort.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.abort.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,41 @@\n+Counter in file 0 15:9 -> 15:27, #1\n+Counter in file 0 16:11 -> 16:24, (#1 + (#2 + #3))\n+Counter in file 0 17:12 -> 17:25, ((#1 + (#2 + #3)) - #4)\n+Counter in file 0 17:26 -> 19:10, #2\n+Counter in file 0 19:10 -> 19:11, #3\n+Counter in file 0 20:9 -> 20:23, (#2 + #3)\n+Counter in file 0 22:5 -> 23:2, #4\n+Counter in file 0 6:8 -> 6:20, #1\n+Counter in file 0 7:9 -> 8:37, #2\n+Counter in file 0 9:12 -> 12:2, (#1 - #2)\n+Emitting segments for file: ../coverage/abort.rs\n+Combined regions:\n+  6:8 -> 6:20 (count=4)\n+  7:9 -> 8:37 (count=0)\n+  9:12 -> 12:2 (count=4)\n+  15:9 -> 15:27 (count=1)\n+  16:11 -> 16:24 (count=11)\n+  17:12 -> 17:25 (count=10)\n+  17:26 -> 19:10 (count=4)\n+  19:10 -> 19:11 (count=6)\n+  20:9 -> 20:23 (count=10)\n+  22:5 -> 23:2 (count=1)\n+Segment at 6:8 (count = 4), RegionEntry\n+Segment at 6:20 (count = 0), Skipped\n+Segment at 7:9 (count = 0), RegionEntry\n+Segment at 8:37 (count = 0), Skipped\n+Segment at 9:12 (count = 4), RegionEntry\n+Segment at 12:2 (count = 0), Skipped\n+Segment at 15:9 (count = 1), RegionEntry\n+Segment at 15:27 (count = 0), Skipped\n+Segment at 16:11 (count = 11), RegionEntry\n+Segment at 16:24 (count = 0), Skipped\n+Segment at 17:12 (count = 10), RegionEntry\n+Segment at 17:25 (count = 0), Skipped\n+Segment at 17:26 (count = 4), RegionEntry\n+Segment at 19:10 (count = 6), RegionEntry\n+Segment at 19:11 (count = 0), Skipped\n+Segment at 20:9 (count = 10), RegionEntry\n+Segment at 20:23 (count = 0), Skipped\n+Segment at 22:5 (count = 1), RegionEntry\n+Segment at 23:2 (count = 0), Skipped"}, {"sha": "81cb6c03da702ed7ae07d8a43f3b62df78edab20", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.assert.txt", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.assert.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.assert.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.assert.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,54 @@\n+Counter in file 0 10:9 -> 10:27, #1\n+Counter in file 0 11:11 -> 11:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 12:12 -> 12:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 12:27 -> 14:10, #2\n+Counter in file 0 14:19 -> 14:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 14:33 -> 16:10, #3\n+Counter in file 0 16:10 -> 16:11, #4\n+Counter in file 0 16:10 -> 16:11, (#3 + #4)\n+Counter in file 0 17:9 -> 17:23, (#2 + (#3 + #4))\n+Counter in file 0 19:5 -> 20:2, #5\n+Counter in file 0 5:5 -> 5:48, #1\n+Counter in file 0 6:16 -> 6:21, (#1 + 0)\n+Counter in file 0 6:37 -> 6:61, #2\n+Counter in file 0 7:1 -> 7:2, (#1 - #2)\n+Emitting segments for file: ../coverage/assert.rs\n+Combined regions:\n+  5:5 -> 5:48 (count=4)\n+  6:16 -> 6:21 (count=4)\n+  6:37 -> 6:61 (count=1)\n+  7:1 -> 7:2 (count=3)\n+  10:9 -> 10:27 (count=1)\n+  11:11 -> 11:24 (count=10)\n+  12:12 -> 12:26 (count=10)\n+  12:27 -> 14:10 (count=0)\n+  14:19 -> 14:32 (count=10)\n+  14:33 -> 16:10 (count=3)\n+  16:10 -> 16:11 (count=15)\n+  17:9 -> 17:23 (count=9)\n+  19:5 -> 20:2 (count=0)\n+Segment at 5:5 (count = 4), RegionEntry\n+Segment at 5:48 (count = 0), Skipped\n+Segment at 6:16 (count = 4), RegionEntry\n+Segment at 6:21 (count = 0), Skipped\n+Segment at 6:37 (count = 1), RegionEntry\n+Segment at 6:61 (count = 0), Skipped\n+Segment at 7:1 (count = 3), RegionEntry\n+Segment at 7:2 (count = 0), Skipped\n+Segment at 10:9 (count = 1), RegionEntry\n+Segment at 10:27 (count = 0), Skipped\n+Segment at 11:11 (count = 10), RegionEntry\n+Segment at 11:24 (count = 0), Skipped\n+Segment at 12:12 (count = 10), RegionEntry\n+Segment at 12:26 (count = 0), Skipped\n+Segment at 12:27 (count = 0), RegionEntry\n+Segment at 14:10 (count = 0), Skipped\n+Segment at 14:19 (count = 10), RegionEntry\n+Segment at 14:32 (count = 0), Skipped\n+Segment at 14:33 (count = 3), RegionEntry\n+Segment at 16:10 (count = 15), RegionEntry\n+Segment at 16:11 (count = 0), Skipped\n+Segment at 17:9 (count = 9), RegionEntry\n+Segment at 17:23 (count = 0), Skipped\n+Segment at 19:5 (count = 0), RegionEntry\n+Segment at 20:2 (count = 0), Skipped"}, {"sha": "f1f02faba5365608352c2f486b6831e2d0b986aa", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.async.txt", "status": "added", "additions": 85, "deletions": 0, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.async.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.async.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.async.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,85 @@\n+Counter in file 0 15:9 -> 15:75, #1\n+Counter in file 0 15:9 -> 15:75, #1\n+Counter in file 0 15:9 -> 15:75, #1\n+Counter in file 0 47:13 -> 56:54, #1\n+Counter in file 0 59:32 -> 59:35, ((#1 + #2) - #2)\n+Counter in file 0 59:39 -> 59:73, (#1 + #2)\n+Counter in file 0 60:23 -> 60:26, (((#1 + #2) - #2) + 0)\n+Counter in file 0 62:10 -> 62:11, #2\n+Counter in file 0 63:5 -> 63:6, (((#1 + #2) - #2) + 0)\n+Counter in file 0 53:17 -> 53:19, #1\n+Counter in file 0 7:44 -> 7:45, #1\n+Counter in file 0 5:24 -> 5:25, #1\n+Counter in file 0 5:22 -> 5:25, #1\n+Counter in file 0 25:19 -> 26:12, #1\n+Counter in file 0 27:9 -> 27:10, #3\n+Counter in file 0 27:14 -> 27:17, (#1 + 0)\n+Counter in file 0 27:27 -> 27:32, #2\n+Counter in file 0 27:32 -> 27:33, (#2 - #3)\n+Counter in file 0 27:36 -> 27:38, (#3 + 0)\n+Counter in file 0 28:14 -> 28:16, #4\n+Counter in file 0 30:1 -> 30:2, (#3 + #4)\n+Counter in file 0 32:11 -> 37:2, #1\n+Counter in file 0 30:1 -> 30:2, #1\n+Counter in file 0 14:1 -> 14:2, #1\n+Counter in file 0 23:1 -> 23:2, #1\n+Emitting segments for file: ../coverage/async.rs\n+Combined regions:\n+  5:22 -> 5:25 (count=1)\n+  5:24 -> 5:25 (count=1)\n+  14:1 -> 14:2 (count=1)\n+  23:1 -> 23:2 (count=1)\n+  25:19 -> 26:12 (count=1)\n+  27:9 -> 27:10 (count=0)\n+  27:14 -> 27:17 (count=1)\n+  27:27 -> 27:32 (count=1)\n+  27:32 -> 27:33 (count=1)\n+  27:36 -> 27:38 (count=0)\n+  28:14 -> 28:16 (count=1)\n+  30:1 -> 30:2 (count=2)\n+  32:11 -> 37:2 (count=1)\n+  47:13 -> 56:54 (count=1)\n+  53:17 -> 53:19 (count=1)\n+  59:32 -> 59:35 (count=1)\n+  59:39 -> 59:73 (count=1)\n+  60:23 -> 60:26 (count=1)\n+  62:10 -> 62:11 (count=0)\n+  63:5 -> 63:6 (count=1)\n+Segment at 5:22 (count = 1), RegionEntry\n+Segment at 5:24 (count = 1), RegionEntry\n+Segment at 5:25 (count = 0), Skipped\n+Segment at 14:1 (count = 1), RegionEntry\n+Segment at 14:2 (count = 0), Skipped\n+Segment at 23:1 (count = 1), RegionEntry\n+Segment at 23:2 (count = 0), Skipped\n+Segment at 25:19 (count = 1), RegionEntry\n+Segment at 26:12 (count = 0), Skipped\n+Segment at 27:9 (count = 0), RegionEntry\n+Segment at 27:10 (count = 0), Skipped\n+Segment at 27:14 (count = 1), RegionEntry\n+Segment at 27:17 (count = 0), Skipped\n+Segment at 27:27 (count = 1), RegionEntry\n+Segment at 27:32 (count = 1), RegionEntry\n+Segment at 27:33 (count = 0), Skipped\n+Segment at 27:36 (count = 0), RegionEntry\n+Segment at 27:38 (count = 0), Skipped\n+Segment at 28:14 (count = 1), RegionEntry\n+Segment at 28:16 (count = 0), Skipped\n+Segment at 30:1 (count = 2), RegionEntry\n+Segment at 30:2 (count = 0), Skipped\n+Segment at 32:11 (count = 1), RegionEntry\n+Segment at 37:2 (count = 0), Skipped\n+Segment at 47:13 (count = 1), RegionEntry\n+Segment at 53:17 (count = 1), RegionEntry\n+Segment at 53:19 (count = 1)\n+Segment at 56:54 (count = 0), Skipped\n+Segment at 59:32 (count = 1), RegionEntry\n+Segment at 59:35 (count = 0), Skipped\n+Segment at 59:39 (count = 1), RegionEntry\n+Segment at 59:73 (count = 0), Skipped\n+Segment at 60:23 (count = 1), RegionEntry\n+Segment at 60:26 (count = 0), Skipped\n+Segment at 62:10 (count = 0), RegionEntry\n+Segment at 62:11 (count = 0), Skipped\n+Segment at 63:5 (count = 1), RegionEntry\n+Segment at 63:6 (count = 0), Skipped"}, {"sha": "a4c1a9c0f121a9a17f47186a1ddbbe8eb077afcb", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.conditions.txt", "status": "modified", "additions": 212, "deletions": 146, "changes": 358, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.conditions.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.conditions.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.conditions.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,72 +1,91 @@\n Counter in file 0 4:9 -> 4:26, #1\n Counter in file 0 5:8 -> 5:12, (#1 + 0)\n Counter in file 0 5:13 -> 7:6, #2\n-Counter in file 0 10:9 -> 10:10, (#4 + #11)\n+Counter in file 0 10:9 -> 10:10, (#3 + (#12 + #13))\n Counter in file 0 10:16 -> 10:29, (#2 + 0)\n-Counter in file 0 11:9 -> 12:10, #4\n+Counter in file 0 11:9 -> 12:10, #3\n Counter in file 0 13:15 -> 13:28, ((#2 + 0) - #3)\n-Counter in file 0 14:12 -> 14:25, #5\n-Counter in file 0 14:29 -> 14:42, (#5 - #13)\n-Counter in file 0 14:42 -> 14:43, (#13 + #14)\n-Counter in file 0 14:42 -> 14:43, ((#5 - #13) - #14)\n-Counter in file 0 14:46 -> 14:60, #21\n-Counter in file 0 14:60 -> 14:61, (#17 + #18)\n-Counter in file 0 14:60 -> 14:61, (#21 - #18)\n-Counter in file 0 14:61 -> 16:10, #22\n-Counter in file 0 16:10 -> 16:11, #23\n-Counter in file 0 17:9 -> 18:18, #11\n-Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #5)\n-Counter in file 0 23:9 -> 23:26, ((#4 + #11) + 0)\n-Counter in file 0 24:8 -> 24:12, ((#4 + #11) + 0)\n-Counter in file 0 24:13 -> 26:6, #12\n-Counter in file 0 28:8 -> 28:21, (#12 + 0)\n-Counter in file 0 29:9 -> 29:23, #16\n-Counter in file 0 30:15 -> 30:28, ((#12 + 0) - #15)\n-Counter in file 0 31:12 -> 31:25, (((#12 + 0) - #15) - #8)\n-Counter in file 0 31:29 -> 31:42, ((((#12 + 0) - #15) - #8) - #24)\n-Counter in file 0 31:42 -> 31:43, (((((#12 + 0) - #15) - #8) - #24) - #25)\n+Counter in file 0 14:12 -> 14:25, #4\n+Counter in file 0 14:29 -> 14:42, (#4 - #15)\n+Counter in file 0 14:42 -> 14:43, ((#4 - #15) - #16)\n+Counter in file 0 14:42 -> 14:43, (#15 + #16)\n+Counter in file 0 14:46 -> 14:60, #23\n+Counter in file 0 14:60 -> 14:61, (#18 + #19)\n+Counter in file 0 14:60 -> 14:61, (#23 - #19)\n+Counter in file 0 14:61 -> 16:10, #12\n+Counter in file 0 16:10 -> 16:11, #13\n+Counter in file 0 17:9 -> 18:18, (#12 + #13)\n+Counter in file 0 20:9 -> 20:15, (((#2 + 0) - #3) - #4)\n+Counter in file 0 23:9 -> 23:26, ((#3 + (#12 + #13)) + 0)\n+Counter in file 0 24:8 -> 24:12, ((#3 + (#12 + #13)) + 0)\n+Counter in file 0 24:13 -> 26:6, #14\n+Counter in file 0 28:8 -> 28:21, (#14 + 0)\n+Counter in file 0 28:22 -> 30:6, #17\n+Counter in file 0 30:15 -> 30:28, ((#14 + 0) - #17)\n+Counter in file 0 31:12 -> 31:25, (((#14 + 0) - #17) - #8)\n+Counter in file 0 31:29 -> 31:42, ((((#14 + 0) - #17) - #8) - #24)\n+Counter in file 0 31:42 -> 31:43, (((((#14 + 0) - #17) - #8) - #24) - #25)\n Counter in file 0 31:42 -> 31:43, (#24 + #25)\n-Counter in file 0 31:46 -> 31:60, #32\n-Counter in file 0 31:60 -> 31:61, (#28 + #29)\n-Counter in file 0 31:60 -> 31:61, (#32 - #29)\n-Counter in file 0 31:61 -> 33:10, #33\n-Counter in file 0 33:10 -> 33:11, #34\n-Counter in file 0 34:9 -> 34:23, #19\n+Counter in file 0 31:46 -> 31:60, #34\n+Counter in file 0 31:60 -> 31:61, (#34 - #32)\n+Counter in file 0 31:60 -> 31:61, (#31 + #32)\n+Counter in file 0 31:61 -> 33:10, #20\n+Counter in file 0 33:10 -> 33:11, #21\n+Counter in file 0 34:9 -> 34:23, (#20 + #21)\n Counter in file 0 36:9 -> 36:15, #8\n-Counter in file 0 39:9 -> 39:26, (#16 + #19)\n-Counter in file 0 40:8 -> 40:12, ((#16 + #19) + 0)\n-Counter in file 0 40:13 -> 42:6, #20\n-Counter in file 0 44:9 -> 44:10, (#27 + #30)\n-Counter in file 0 44:16 -> 44:29, (#20 + 0)\n-Counter in file 0 45:9 -> 45:23, #27\n-Counter in file 0 46:15 -> 46:28, ((#20 + 0) - #26)\n-Counter in file 0 47:12 -> 47:25, (((#20 + 0) - #26) - #7)\n-Counter in file 0 47:29 -> 47:42, ((((#20 + 0) - #26) - #7) - #35)\n-Counter in file 0 47:42 -> 47:43, (#35 + #36)\n-Counter in file 0 47:42 -> 47:43, (((((#20 + 0) - #26) - #7) - #35) - #36)\n-Counter in file 0 47:46 -> 47:60, #41\n-Counter in file 0 47:60 -> 47:61, (#37 + #38)\n-Counter in file 0 47:60 -> 47:61, (#41 - #38)\n-Counter in file 0 47:61 -> 49:10, #42\n-Counter in file 0 49:10 -> 49:11, #43\n-Counter in file 0 50:9 -> 50:23, #30\n-Counter in file 0 52:13 -> 54:15, #7\n-Counter in file 0 57:9 -> 57:10, (#9 + #10)\n-Counter in file 0 57:16 -> 57:29, ((#27 + #30) + 0)\n-Counter in file 0 58:9 -> 58:23, #9\n-Counter in file 0 59:15 -> 59:28, ((#27 + #30) - #31)\n-Counter in file 0 60:12 -> 60:25, (((#27 + #30) - #31) - #6)\n-Counter in file 0 60:29 -> 60:42, ((((#27 + #30) - #31) - #6) - #39)\n-Counter in file 0 60:42 -> 60:43, (#39 + #40)\n-Counter in file 0 60:42 -> 60:43, (((((#27 + #30) - #31) - #6) - #39) - #40)\n-Counter in file 0 60:46 -> 60:60, #46\n-Counter in file 0 60:60 -> 60:61, (#46 - #45)\n-Counter in file 0 60:60 -> 60:61, (#44 + #45)\n-Counter in file 0 60:61 -> 62:10, #47\n-Counter in file 0 62:10 -> 62:11, #48\n-Counter in file 0 63:9 -> 63:23, #10\n-Counter in file 0 65:9 -> 65:15, #6\n-Counter in file 0 67:1 -> 67:2, ((#9 + #10) + (((#6 + #7) + #8) + (((#2 + 0) - #3) - #5)))\n+Counter in file 0 39:8 -> 39:12, (#17 + (#20 + #21))\n+Counter in file 0 52:13 -> 52:30, #22\n+Counter in file 0 53:12 -> 53:16, (#22 + 0)\n+Counter in file 0 53:17 -> 55:10, #26\n+Counter in file 0 57:12 -> 57:25, (#26 + 0)\n+Counter in file 0 57:26 -> 59:10, #27\n+Counter in file 0 65:17 -> 65:30, ((#26 + 0) - #27)\n+Counter in file 0 66:16 -> 66:29, (((#26 + 0) - #27) - #7)\n+Counter in file 0 66:33 -> 66:46, ((((#26 + 0) - #27) - #7) - #37)\n+Counter in file 0 66:46 -> 66:47, (#37 + #38)\n+Counter in file 0 66:46 -> 66:47, (((((#26 + 0) - #27) - #7) - #37) - #38)\n+Counter in file 0 66:50 -> 66:64, #47\n+Counter in file 0 66:64 -> 66:65, (#47 - #42)\n+Counter in file 0 66:64 -> 66:65, (#41 + #42)\n+Counter in file 0 66:65 -> 68:14, #28\n+Counter in file 0 68:14 -> 68:15, #29\n+Counter in file 0 69:13 -> 69:27, (#28 + #29)\n+Counter in file 0 71:13 -> 71:19, #7\n+Counter in file 0 73:6 -> 73:7, (#27 + (#28 + #29))\n+Counter in file 0 75:9 -> 75:26, ((#27 + (#28 + #29)) + 0)\n+Counter in file 0 76:8 -> 76:12, (((#27 + (#28 + #29)) + 0) + 0)\n+Counter in file 0 76:13 -> 78:6, #30\n+Counter in file 0 80:9 -> 80:10, (#33 + (#35 + #36))\n+Counter in file 0 80:16 -> 80:29, (#30 + 0)\n+Counter in file 0 80:30 -> 82:6, #33\n+Counter in file 0 82:15 -> 82:28, ((#30 + 0) - #33)\n+Counter in file 0 83:12 -> 83:25, (((#30 + 0) - #33) - #6)\n+Counter in file 0 83:29 -> 83:42, ((((#30 + 0) - #33) - #6) - #39)\n+Counter in file 0 83:42 -> 83:43, (#39 + #40)\n+Counter in file 0 83:42 -> 83:43, (((((#30 + 0) - #33) - #6) - #39) - #40)\n+Counter in file 0 83:46 -> 83:60, #48\n+Counter in file 0 83:60 -> 83:61, (#43 + #44)\n+Counter in file 0 83:60 -> 83:61, (#48 - #44)\n+Counter in file 0 83:61 -> 85:10, #35\n+Counter in file 0 85:10 -> 85:11, #36\n+Counter in file 0 86:9 -> 86:23, (#35 + #36)\n+Counter in file 0 88:13 -> 90:15, #6\n+Counter in file 0 93:9 -> 93:10, (#9 + (#10 + #11))\n+Counter in file 0 93:16 -> 93:29, ((#33 + (#35 + #36)) + 0)\n+Counter in file 0 93:30 -> 95:6, #9\n+Counter in file 0 95:15 -> 95:28, ((#33 + (#35 + #36)) - #9)\n+Counter in file 0 96:12 -> 96:25, (((#33 + (#35 + #36)) - #9) - #5)\n+Counter in file 0 96:29 -> 96:42, ((((#33 + (#35 + #36)) - #9) - #5) - #45)\n+Counter in file 0 96:42 -> 96:43, (#45 + #46)\n+Counter in file 0 96:42 -> 96:43, (((((#33 + (#35 + #36)) - #9) - #5) - #45) - #46)\n+Counter in file 0 96:46 -> 96:60, #51\n+Counter in file 0 96:60 -> 96:61, (#49 + #50)\n+Counter in file 0 96:60 -> 96:61, (#51 - #50)\n+Counter in file 0 96:61 -> 98:10, #10\n+Counter in file 0 98:10 -> 98:11, #11\n+Counter in file 0 99:9 -> 99:23, (#10 + #11)\n+Counter in file 0 101:9 -> 101:15, #5\n+Counter in file 0 103:1 -> 103:2, ((#9 + (#10 + #11)) + (((#5 + #6) + (#7 + #8)) + (((#2 + 0) - #3) - #4)))\n Emitting segments for file: ../coverage/conditions.rs\n Combined regions:\n   4:9 -> 4:26 (count=1)\n@@ -89,7 +108,7 @@ Combined regions:\n   24:8 -> 24:12 (count=1)\n   24:13 -> 26:6 (count=1)\n   28:8 -> 28:21 (count=1)\n-  29:9 -> 29:23 (count=1)\n+  28:22 -> 30:6 (count=1)\n   30:15 -> 30:28 (count=0)\n   31:12 -> 31:25 (count=0)\n   31:29 -> 31:42 (count=0)\n@@ -100,36 +119,53 @@ Combined regions:\n   33:10 -> 33:11 (count=0)\n   34:9 -> 34:23 (count=0)\n   36:9 -> 36:15 (count=0)\n-  39:9 -> 39:26 (count=1)\n-  40:8 -> 40:12 (count=1)\n-  40:13 -> 42:6 (count=1)\n-  44:9 -> 44:10 (count=0)\n-  44:16 -> 44:29 (count=1)\n-  45:9 -> 45:23 (count=0)\n-  46:15 -> 46:28 (count=1)\n-  47:12 -> 47:25 (count=0)\n-  47:29 -> 47:42 (count=0)\n-  47:42 -> 47:43 (count=0)\n-  47:46 -> 47:60 (count=0)\n-  47:60 -> 47:61 (count=0)\n-  47:61 -> 49:10 (count=0)\n-  49:10 -> 49:11 (count=0)\n-  50:9 -> 50:23 (count=0)\n-  52:13 -> 54:15 (count=1)\n-  57:9 -> 57:10 (count=0)\n-  57:16 -> 57:29 (count=0)\n-  58:9 -> 58:23 (count=0)\n-  59:15 -> 59:28 (count=0)\n-  60:12 -> 60:25 (count=0)\n-  60:29 -> 60:42 (count=0)\n-  60:42 -> 60:43 (count=0)\n-  60:46 -> 60:60 (count=0)\n-  60:60 -> 60:61 (count=0)\n-  60:61 -> 62:10 (count=0)\n-  62:10 -> 62:11 (count=0)\n-  63:9 -> 63:23 (count=0)\n-  65:9 -> 65:15 (count=0)\n-  67:1 -> 67:2 (count=1)\n+  39:8 -> 39:12 (count=1)\n+  52:13 -> 52:30 (count=1)\n+  53:12 -> 53:16 (count=1)\n+  53:17 -> 55:10 (count=1)\n+  57:12 -> 57:25 (count=1)\n+  57:26 -> 59:10 (count=1)\n+  65:17 -> 65:30 (count=0)\n+  66:16 -> 66:29 (count=0)\n+  66:33 -> 66:46 (count=0)\n+  66:46 -> 66:47 (count=0)\n+  66:50 -> 66:64 (count=0)\n+  66:64 -> 66:65 (count=0)\n+  66:65 -> 68:14 (count=0)\n+  68:14 -> 68:15 (count=0)\n+  69:13 -> 69:27 (count=0)\n+  71:13 -> 71:19 (count=0)\n+  73:6 -> 73:7 (count=1)\n+  75:9 -> 75:26 (count=1)\n+  76:8 -> 76:12 (count=1)\n+  76:13 -> 78:6 (count=1)\n+  80:9 -> 80:10 (count=0)\n+  80:16 -> 80:29 (count=1)\n+  80:30 -> 82:6 (count=0)\n+  82:15 -> 82:28 (count=1)\n+  83:12 -> 83:25 (count=0)\n+  83:29 -> 83:42 (count=0)\n+  83:42 -> 83:43 (count=0)\n+  83:46 -> 83:60 (count=0)\n+  83:60 -> 83:61 (count=0)\n+  83:61 -> 85:10 (count=0)\n+  85:10 -> 85:11 (count=0)\n+  86:9 -> 86:23 (count=0)\n+  88:13 -> 90:15 (count=1)\n+  93:9 -> 93:10 (count=0)\n+  93:16 -> 93:29 (count=0)\n+  93:30 -> 95:6 (count=0)\n+  95:15 -> 95:28 (count=0)\n+  96:12 -> 96:25 (count=0)\n+  96:29 -> 96:42 (count=0)\n+  96:42 -> 96:43 (count=0)\n+  96:46 -> 96:60 (count=0)\n+  96:60 -> 96:61 (count=0)\n+  96:61 -> 98:10 (count=0)\n+  98:10 -> 98:11 (count=0)\n+  99:9 -> 99:23 (count=0)\n+  101:9 -> 101:15 (count=0)\n+  103:1 -> 103:2 (count=1)\n Segment at 4:9 (count = 1), RegionEntry\n Segment at 4:26 (count = 0), Skipped\n Segment at 5:8 (count = 1), RegionEntry\n@@ -166,8 +202,8 @@ Segment at 24:13 (count = 1), RegionEntry\n Segment at 26:6 (count = 0), Skipped\n Segment at 28:8 (count = 1), RegionEntry\n Segment at 28:21 (count = 0), Skipped\n-Segment at 29:9 (count = 1), RegionEntry\n-Segment at 29:23 (count = 0), Skipped\n+Segment at 28:22 (count = 1), RegionEntry\n+Segment at 30:6 (count = 0), Skipped\n Segment at 30:15 (count = 0), RegionEntry\n Segment at 30:28 (count = 0), Skipped\n Segment at 31:12 (count = 0), RegionEntry\n@@ -184,55 +220,85 @@ Segment at 34:9 (count = 0), RegionEntry\n Segment at 34:23 (count = 0), Skipped\n Segment at 36:9 (count = 0), RegionEntry\n Segment at 36:15 (count = 0), Skipped\n-Segment at 39:9 (count = 1), RegionEntry\n-Segment at 39:26 (count = 0), Skipped\n-Segment at 40:8 (count = 1), RegionEntry\n-Segment at 40:12 (count = 0), Skipped\n-Segment at 40:13 (count = 1), RegionEntry\n-Segment at 42:6 (count = 0), Skipped\n-Segment at 44:9 (count = 0), RegionEntry\n-Segment at 44:10 (count = 0), Skipped\n-Segment at 44:16 (count = 1), RegionEntry\n-Segment at 44:29 (count = 0), Skipped\n-Segment at 45:9 (count = 0), RegionEntry\n-Segment at 45:23 (count = 0), Skipped\n-Segment at 46:15 (count = 1), RegionEntry\n-Segment at 46:28 (count = 0), Skipped\n-Segment at 47:12 (count = 0), RegionEntry\n-Segment at 47:25 (count = 0), Skipped\n-Segment at 47:29 (count = 0), RegionEntry\n-Segment at 47:42 (count = 0), RegionEntry\n-Segment at 47:43 (count = 0), Skipped\n-Segment at 47:46 (count = 0), RegionEntry\n-Segment at 47:60 (count = 0), RegionEntry\n-Segment at 47:61 (count = 0), RegionEntry\n-Segment at 49:10 (count = 0), RegionEntry\n-Segment at 49:11 (count = 0), Skipped\n-Segment at 50:9 (count = 0), RegionEntry\n-Segment at 50:23 (count = 0), Skipped\n+Segment at 39:8 (count = 1), RegionEntry\n+Segment at 39:12 (count = 0), Skipped\n Segment at 52:13 (count = 1), RegionEntry\n-Segment at 54:15 (count = 0), Skipped\n-Segment at 57:9 (count = 0), RegionEntry\n-Segment at 57:10 (count = 0), Skipped\n-Segment at 57:16 (count = 0), RegionEntry\n-Segment at 57:29 (count = 0), Skipped\n-Segment at 58:9 (count = 0), RegionEntry\n-Segment at 58:23 (count = 0), Skipped\n-Segment at 59:15 (count = 0), RegionEntry\n-Segment at 59:28 (count = 0), Skipped\n-Segment at 60:12 (count = 0), RegionEntry\n-Segment at 60:25 (count = 0), Skipped\n-Segment at 60:29 (count = 0), RegionEntry\n-Segment at 60:42 (count = 0), RegionEntry\n-Segment at 60:43 (count = 0), Skipped\n-Segment at 60:46 (count = 0), RegionEntry\n-Segment at 60:60 (count = 0), RegionEntry\n-Segment at 60:61 (count = 0), RegionEntry\n-Segment at 62:10 (count = 0), RegionEntry\n-Segment at 62:11 (count = 0), Skipped\n-Segment at 63:9 (count = 0), RegionEntry\n-Segment at 63:23 (count = 0), Skipped\n-Segment at 65:9 (count = 0), RegionEntry\n-Segment at 65:15 (count = 0), Skipped\n-Segment at 67:1 (count = 1), RegionEntry\n-Segment at 67:2 (count = 0), Skipped\n+Segment at 52:30 (count = 0), Skipped\n+Segment at 53:12 (count = 1), RegionEntry\n+Segment at 53:16 (count = 0), Skipped\n+Segment at 53:17 (count = 1), RegionEntry\n+Segment at 55:10 (count = 0), Skipped\n+Segment at 57:12 (count = 1), RegionEntry\n+Segment at 57:25 (count = 0), Skipped\n+Segment at 57:26 (count = 1), RegionEntry\n+Segment at 59:10 (count = 0), Skipped\n+Segment at 65:17 (count = 0), RegionEntry\n+Segment at 65:30 (count = 0), Skipped\n+Segment at 66:16 (count = 0), RegionEntry\n+Segment at 66:29 (count = 0), Skipped\n+Segment at 66:33 (count = 0), RegionEntry\n+Segment at 66:46 (count = 0), RegionEntry\n+Segment at 66:47 (count = 0), Skipped\n+Segment at 66:50 (count = 0), RegionEntry\n+Segment at 66:64 (count = 0), RegionEntry\n+Segment at 66:65 (count = 0), RegionEntry\n+Segment at 68:14 (count = 0), RegionEntry\n+Segment at 68:15 (count = 0), Skipped\n+Segment at 69:13 (count = 0), RegionEntry\n+Segment at 69:27 (count = 0), Skipped\n+Segment at 71:13 (count = 0), RegionEntry\n+Segment at 71:19 (count = 0), Skipped\n+Segment at 73:6 (count = 1), RegionEntry\n+Segment at 73:7 (count = 0), Skipped\n+Segment at 75:9 (count = 1), RegionEntry\n+Segment at 75:26 (count = 0), Skipped\n+Segment at 76:8 (count = 1), RegionEntry\n+Segment at 76:12 (count = 0), Skipped\n+Segment at 76:13 (count = 1), RegionEntry\n+Segment at 78:6 (count = 0), Skipped\n+Segment at 80:9 (count = 0), RegionEntry\n+Segment at 80:10 (count = 0), Skipped\n+Segment at 80:16 (count = 1), RegionEntry\n+Segment at 80:29 (count = 0), Skipped\n+Segment at 80:30 (count = 0), RegionEntry\n+Segment at 82:6 (count = 0), Skipped\n+Segment at 82:15 (count = 1), RegionEntry\n+Segment at 82:28 (count = 0), Skipped\n+Segment at 83:12 (count = 0), RegionEntry\n+Segment at 83:25 (count = 0), Skipped\n+Segment at 83:29 (count = 0), RegionEntry\n+Segment at 83:42 (count = 0), RegionEntry\n+Segment at 83:43 (count = 0), Skipped\n+Segment at 83:46 (count = 0), RegionEntry\n+Segment at 83:60 (count = 0), RegionEntry\n+Segment at 83:61 (count = 0), RegionEntry\n+Segment at 85:10 (count = 0), RegionEntry\n+Segment at 85:11 (count = 0), Skipped\n+Segment at 86:9 (count = 0), RegionEntry\n+Segment at 86:23 (count = 0), Skipped\n+Segment at 88:13 (count = 1), RegionEntry\n+Segment at 90:15 (count = 0), Skipped\n+Segment at 93:9 (count = 0), RegionEntry\n+Segment at 93:10 (count = 0), Skipped\n+Segment at 93:16 (count = 0), RegionEntry\n+Segment at 93:29 (count = 0), Skipped\n+Segment at 93:30 (count = 0), RegionEntry\n+Segment at 95:6 (count = 0), Skipped\n+Segment at 95:15 (count = 0), RegionEntry\n+Segment at 95:28 (count = 0), Skipped\n+Segment at 96:12 (count = 0), RegionEntry\n+Segment at 96:25 (count = 0), Skipped\n+Segment at 96:29 (count = 0), RegionEntry\n+Segment at 96:42 (count = 0), RegionEntry\n+Segment at 96:43 (count = 0), Skipped\n+Segment at 96:46 (count = 0), RegionEntry\n+Segment at 96:60 (count = 0), RegionEntry\n+Segment at 96:61 (count = 0), RegionEntry\n+Segment at 98:10 (count = 0), RegionEntry\n+Segment at 98:11 (count = 0), Skipped\n+Segment at 99:9 (count = 0), RegionEntry\n+Segment at 99:23 (count = 0), Skipped\n+Segment at 101:9 (count = 0), RegionEntry\n+Segment at 101:15 (count = 0), Skipped\n+Segment at 103:1 (count = 1), RegionEntry\n+Segment at 103:2 (count = 0), Skipped"}, {"sha": "e4dfae76817832682ccd493f063339ce1ef1df10", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.inner_items.txt", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.inner_items.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,7 +1,4 @@\n-Counter in file 0 19:13 -> 19:18, #1\n-Counter in file 0 20:13 -> 20:14, #2\n-Counter in file 0 20:17 -> 20:22, (#1 + 0)\n-Counter in file 0 21:9 -> 22:6, (#2 + 0)\n+Counter in file 0 19:13 -> 22:6, #1\n Counter in file 0 7:9 -> 9:26, #1\n Counter in file 0 10:8 -> 10:15, (#1 + 0)\n Counter in file 0 10:16 -> 12:6, #2\n@@ -11,21 +8,16 @@ Counter in file 0 48:16 -> 50:6, #3\n Counter in file 0 50:6 -> 50:7, ((#2 + (#1 - #2)) - #3)\n Counter in file 0 52:9 -> 57:2, (#3 + ((#2 + (#1 - #2)) - #3))\n Counter in file 0 33:42 -> 36:10, #1\n-Counter in file 0 41:37 -> 41:41, #1\n-Counter in file 0 42:13 -> 43:10, #2\n+Counter in file 0 40:45 -> 43:10, #1\n Emitting segments for file: ../coverage/inner_items.rs\n Combined regions:\n   7:9 -> 9:26 (count=1)\n   10:8 -> 10:15 (count=1)\n   10:16 -> 12:6 (count=1)\n   12:6 -> 12:7 (count=0)\n-  19:13 -> 19:18 (count=3)\n-  20:13 -> 20:14 (count=3)\n-  20:17 -> 20:22 (count=3)\n-  21:9 -> 22:6 (count=3)\n+  19:13 -> 22:6 (count=3)\n   33:42 -> 36:10 (count=1)\n-  41:37 -> 41:41 (count=1)\n-  42:13 -> 43:10 (count=1)\n+  40:45 -> 43:10 (count=1)\n   48:8 -> 48:15 (count=1)\n   48:16 -> 50:6 (count=1)\n   50:6 -> 50:7 (count=0)\n@@ -38,18 +30,10 @@ Segment at 10:16 (count = 1), RegionEntry\n Segment at 12:6 (count = 0), RegionEntry\n Segment at 12:7 (count = 0), Skipped\n Segment at 19:13 (count = 3), RegionEntry\n-Segment at 19:18 (count = 0), Skipped\n-Segment at 20:13 (count = 3), RegionEntry\n-Segment at 20:14 (count = 0), Skipped\n-Segment at 20:17 (count = 3), RegionEntry\n-Segment at 20:22 (count = 0), Skipped\n-Segment at 21:9 (count = 3), RegionEntry\n Segment at 22:6 (count = 0), Skipped\n Segment at 33:42 (count = 1), RegionEntry\n Segment at 36:10 (count = 0), Skipped\n-Segment at 41:37 (count = 1), RegionEntry\n-Segment at 41:41 (count = 0), Skipped\n-Segment at 42:13 (count = 1), RegionEntry\n+Segment at 40:45 (count = 1), RegionEntry\n Segment at 43:10 (count = 0), Skipped\n Segment at 48:8 (count = 1), RegionEntry\n Segment at 48:15 (count = 0), Skipped"}, {"sha": "f8e504c56c48e3b3695e89197c3ca9156b0f5557", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.nested_loops.txt", "status": "modified", "additions": 19, "deletions": 23, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.nested_loops.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,21 +1,20 @@\n Counter in file 0 2:9 -> 3:27, #1\n-Counter in file 0 5:19 -> 5:32, (#1 + #2)\n-Counter in file 0 6:13 -> 7:24, ((#1 + #2) - #3)\n-Counter in file 0 8:13 -> 8:14, ((((#1 + #2) - #3) + (#5 + #6)) - #7)\n-Counter in file 0 8:18 -> 8:23, (((#1 + #2) - #3) + (#5 + #6))\n-Counter in file 0 9:16 -> 9:22, (((((#1 + #2) - #3) + (#5 + #6)) - #7) + 0)\n-Counter in file 0 10:17 -> 10:22, #8\n-Counter in file 0 12:13 -> 12:19, #9\n-Counter in file 0 13:13 -> 13:19, #10\n-Counter in file 0 14:16 -> 14:22, (#10 + 0)\n-Counter in file 0 15:17 -> 16:27, #11\n-Counter in file 0 17:21 -> 17:33, #4\n-Counter in file 0 19:21 -> 21:14, #5\n-Counter in file 0 21:14 -> 21:15, #6\n-Counter in file 0 22:10 -> 22:11, (#5 + #6)\n-Counter in file 0 23:9 -> 23:23, #2\n-Counter in file 0 24:6 -> 24:7, #3\n-Counter in file 0 25:1 -> 25:2, (#4 + #3)\n+Counter in file 0 5:19 -> 5:32, (#1 + (#2 + #3))\n+Counter in file 0 6:13 -> 7:24, ((#1 + (#2 + #3)) - #4)\n+Counter in file 0 8:13 -> 8:14, ((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3)\n+Counter in file 0 8:18 -> 8:23, (((#1 + (#2 + #3)) - #4) + (#6 + #7))\n+Counter in file 0 9:16 -> 9:22, (((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) + 0)\n+Counter in file 0 10:17 -> 10:22, #2\n+Counter in file 0 12:13 -> 13:19, (((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2)\n+Counter in file 0 14:16 -> 14:22, ((((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2) + 0)\n+Counter in file 0 15:17 -> 16:27, ((((((#1 + (#2 + #3)) - #4) + (#6 + #7)) - #3) - #2) - #7)\n+Counter in file 0 17:21 -> 17:33, #5\n+Counter in file 0 18:24 -> 21:14, #6\n+Counter in file 0 21:14 -> 21:15, #7\n+Counter in file 0 22:10 -> 22:11, (#6 + #7)\n+Counter in file 0 23:9 -> 23:23, (#2 + #3)\n+Counter in file 0 24:6 -> 24:7, #4\n+Counter in file 0 25:1 -> 25:2, (#5 + #4)\n Emitting segments for file: ../coverage/nested_loops.rs\n Combined regions:\n   2:9 -> 3:27 (count=1)\n@@ -25,12 +24,11 @@ Combined regions:\n   8:18 -> 8:23 (count=3)\n   9:16 -> 9:22 (count=3)\n   10:17 -> 10:22 (count=0)\n-  12:13 -> 12:19 (count=3)\n-  13:13 -> 13:19 (count=3)\n+  12:13 -> 13:19 (count=3)\n   14:16 -> 14:22 (count=3)\n   15:17 -> 16:27 (count=1)\n   17:21 -> 17:33 (count=1)\n-  19:21 -> 21:14 (count=0)\n+  18:24 -> 21:14 (count=0)\n   21:14 -> 21:15 (count=2)\n   22:10 -> 22:11 (count=2)\n   23:9 -> 23:23 (count=0)\n@@ -51,16 +49,14 @@ Segment at 9:22 (count = 0), Skipped\n Segment at 10:17 (count = 0), RegionEntry\n Segment at 10:22 (count = 0), Skipped\n Segment at 12:13 (count = 3), RegionEntry\n-Segment at 12:19 (count = 0), Skipped\n-Segment at 13:13 (count = 3), RegionEntry\n Segment at 13:19 (count = 0), Skipped\n Segment at 14:16 (count = 3), RegionEntry\n Segment at 14:22 (count = 0), Skipped\n Segment at 15:17 (count = 1), RegionEntry\n Segment at 16:27 (count = 0), Skipped\n Segment at 17:21 (count = 1), RegionEntry\n Segment at 17:33 (count = 0), Skipped\n-Segment at 19:21 (count = 0), RegionEntry\n+Segment at 18:24 (count = 0), RegionEntry\n Segment at 21:14 (count = 2), RegionEntry\n Segment at 21:15 (count = 0), Skipped\n Segment at 22:10 (count = 2), RegionEntry"}, {"sha": "8696e102b568e9947ebf7017c78dc92c919180cc", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.overflow.txt", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.overflow.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.overflow.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.overflow.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,53 @@\n+Counter in file 0 16:9 -> 16:27, #1\n+Counter in file 0 17:11 -> 17:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 18:12 -> 18:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 18:27 -> 21:10, #2\n+Counter in file 0 21:19 -> 21:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 21:33 -> 24:10, #3\n+Counter in file 0 24:10 -> 24:11, #4\n+Counter in file 0 24:10 -> 24:11, (#3 + #4)\n+Counter in file 0 25:9 -> 25:23, (#2 + (#3 + #4))\n+Counter in file 0 27:5 -> 28:2, #5\n+Counter in file 0 5:8 -> 5:18, #1\n+Counter in file 0 5:19 -> 7:6, #2\n+Counter in file 0 7:6 -> 7:7, (#1 - #2)\n+Counter in file 0 8:9 -> 13:2, (#2 + (#1 - #2))\n+Emitting segments for file: ../coverage/overflow.rs\n+Combined regions:\n+  5:8 -> 5:18 (count=4)\n+  5:19 -> 7:6 (count=1)\n+  7:6 -> 7:7 (count=3)\n+  8:9 -> 13:2 (count=4)\n+  16:9 -> 16:27 (count=1)\n+  17:11 -> 17:24 (count=10)\n+  18:12 -> 18:26 (count=10)\n+  18:27 -> 21:10 (count=0)\n+  21:19 -> 21:32 (count=10)\n+  21:33 -> 24:10 (count=3)\n+  24:10 -> 24:11 (count=15)\n+  25:9 -> 25:23 (count=9)\n+  27:5 -> 28:2 (count=0)\n+Segment at 5:8 (count = 4), RegionEntry\n+Segment at 5:18 (count = 0), Skipped\n+Segment at 5:19 (count = 1), RegionEntry\n+Segment at 7:6 (count = 3), RegionEntry\n+Segment at 7:7 (count = 0), Skipped\n+Segment at 8:9 (count = 4), RegionEntry\n+Segment at 13:2 (count = 0), Skipped\n+Segment at 16:9 (count = 1), RegionEntry\n+Segment at 16:27 (count = 0), Skipped\n+Segment at 17:11 (count = 10), RegionEntry\n+Segment at 17:24 (count = 0), Skipped\n+Segment at 18:12 (count = 10), RegionEntry\n+Segment at 18:26 (count = 0), Skipped\n+Segment at 18:27 (count = 0), RegionEntry\n+Segment at 21:10 (count = 0), Skipped\n+Segment at 21:19 (count = 10), RegionEntry\n+Segment at 21:32 (count = 0), Skipped\n+Segment at 21:33 (count = 3), RegionEntry\n+Segment at 24:10 (count = 15), RegionEntry\n+Segment at 24:11 (count = 0), Skipped\n+Segment at 25:9 (count = 9), RegionEntry\n+Segment at 25:23 (count = 0), Skipped\n+Segment at 27:5 (count = 0), RegionEntry\n+Segment at 28:2 (count = 0), Skipped"}, {"sha": "9602ff1a985aafcef928bea0a6f01b1948abd286", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.panic_unwind.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.panic_unwind.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.panic_unwind.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.panic_unwind.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,50 @@\n+Counter in file 0 14:9 -> 14:27, #1\n+Counter in file 0 15:11 -> 15:24, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 16:12 -> 16:26, ((#1 + (#2 + (#3 + #4))) - #5)\n+Counter in file 0 16:27 -> 18:10, #2\n+Counter in file 0 18:19 -> 18:32, (((#1 + (#2 + (#3 + #4))) - #5) - #2)\n+Counter in file 0 18:33 -> 20:10, #3\n+Counter in file 0 20:10 -> 20:11, #4\n+Counter in file 0 20:10 -> 20:11, (#3 + #4)\n+Counter in file 0 21:9 -> 21:23, (#2 + (#3 + #4))\n+Counter in file 0 23:5 -> 24:2, #5\n+Counter in file 0 5:8 -> 5:20, #1\n+Counter in file 0 6:9 -> 7:26, #2\n+Counter in file 0 8:12 -> 11:2, (#1 - #2)\n+Emitting segments for file: ../coverage/panic_unwind.rs\n+Combined regions:\n+  5:8 -> 5:20 (count=4)\n+  6:9 -> 7:26 (count=1)\n+  8:12 -> 11:2 (count=3)\n+  14:9 -> 14:27 (count=1)\n+  15:11 -> 15:24 (count=10)\n+  16:12 -> 16:26 (count=10)\n+  16:27 -> 18:10 (count=0)\n+  18:19 -> 18:32 (count=10)\n+  18:33 -> 20:10 (count=3)\n+  20:10 -> 20:11 (count=15)\n+  21:9 -> 21:23 (count=9)\n+  23:5 -> 24:2 (count=0)\n+Segment at 5:8 (count = 4), RegionEntry\n+Segment at 5:20 (count = 0), Skipped\n+Segment at 6:9 (count = 1), RegionEntry\n+Segment at 7:26 (count = 0), Skipped\n+Segment at 8:12 (count = 3), RegionEntry\n+Segment at 11:2 (count = 0), Skipped\n+Segment at 14:9 (count = 1), RegionEntry\n+Segment at 14:27 (count = 0), Skipped\n+Segment at 15:11 (count = 10), RegionEntry\n+Segment at 15:24 (count = 0), Skipped\n+Segment at 16:12 (count = 10), RegionEntry\n+Segment at 16:26 (count = 0), Skipped\n+Segment at 16:27 (count = 0), RegionEntry\n+Segment at 18:10 (count = 0), Skipped\n+Segment at 18:19 (count = 10), RegionEntry\n+Segment at 18:32 (count = 0), Skipped\n+Segment at 18:33 (count = 3), RegionEntry\n+Segment at 20:10 (count = 15), RegionEntry\n+Segment at 20:11 (count = 0), Skipped\n+Segment at 21:9 (count = 9), RegionEntry\n+Segment at 21:23 (count = 0), Skipped\n+Segment at 23:5 (count = 0), RegionEntry\n+Segment at 24:2 (count = 0), Skipped"}, {"sha": "329e0f3889a98d63e31becc5863044c7e5213112", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.partial_eq.txt", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.partial_eq.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,28 +1,28 @@\n-Counter in file 0 4:32 -> 4:33, (#3 + (#1 + #2))\n Counter in file 0 4:48 -> 4:49, ((#1 + #2) + ((#3 + #4) + ((#5 + #6) + #7)))\n+Counter in file 0 7:5 -> 7:6, #1\n Counter in file 0 21:11 -> 26:2, #1\n-Counter in file 0 8:5 -> 8:17, #1\n-Counter in file 0 8:5 -> 8:17, #1\n Counter in file 0 4:39 -> 4:40, #1\n Counter in file 0 4:48 -> 4:49, (#1 + 0)\n+Counter in file 0 7:5 -> 7:6, #1\n Counter in file 0 4:39 -> 4:40, #1\n Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 8:5 -> 8:17, #1\n Counter in file 0 4:32 -> 4:33, ((#4 + #5) + #6)\n+Counter in file 0 7:5 -> 7:6, #1\n Counter in file 0 4:53 -> 4:54, (#1 + (#2 + (#3 + #4)))\n+Counter in file 0 8:5 -> 8:17, #1\n Counter in file 0 13:9 -> 18:6, #1\n+Counter in file 0 7:5 -> 7:6, #1\n Counter in file 0 4:39 -> 4:40, #1\n Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 7:5 -> 7:6, #1\n Counter in file 0 4:10 -> 4:15, #1\n+Counter in file 0 8:5 -> 8:17, #1\n Counter in file 0 4:35 -> 4:37, #1\n-Counter in file 0 7:5 -> 7:6, #1\n-Counter in file 0 7:5 -> 7:6, #1\n-Counter in file 0 4:17 -> 4:22, #1\n Counter in file 0 8:5 -> 8:17, #1\n+Counter in file 0 8:5 -> 8:17, #1\n+Counter in file 0 4:17 -> 4:22, #1\n Counter in file 0 4:39 -> 4:40, #1\n Counter in file 0 4:48 -> 4:49, (#1 + 0)\n-Counter in file 0 7:5 -> 7:6, #1\n+Counter in file 0 4:32 -> 4:33, (#3 + (#1 + #2))\n Emitting segments for file: ../coverage/partial_eq.rs\n Combined regions:\n   4:17 -> 4:22 (count=2)"}, {"sha": "6ea09248d65cae20751486e0c26d443f5bffac2e", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.simple_loop.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.simple_loop.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -3,10 +3,10 @@ Counter in file 0 12:9 -> 12:16, (#1 + 0)\n Counter in file 0 13:5 -> 18:6, #2\n Counter in file 0 18:6 -> 18:7, (#1 - #2)\n Counter in file 0 23:13 -> 25:14, ((#2 + (#1 - #2)) + #3)\n-Counter in file 0 27:13 -> 27:18, #4\n+Counter in file 0 27:13 -> 27:18, (((#2 + (#1 - #2)) + #3) - #3)\n Counter in file 0 30:9 -> 32:10, #3\n Counter in file 0 34:6 -> 34:7, (#2 + (#1 - #2))\n-Counter in file 0 35:1 -> 35:2, (#4 + 0)\n+Counter in file 0 35:1 -> 35:2, ((((#2 + (#1 - #2)) + #3) - #3) + 0)\n Emitting segments for file: ../coverage/simple_loop.rs\n Combined regions:\n   7:9 -> 9:26 (count=1)"}, {"sha": "5b7f5496af819bfee0b4af6942ede68cfbeed09c", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.try_error_result.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.try_error_result.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.try_error_result.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.try_error_result.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,12 +1,12 @@\n Counter in file 0 13:9 -> 14:23, #1\n Counter in file 0 17:9 -> 17:10, ((#1 + (#2 + #3)) - #4)\n Counter in file 0 19:9 -> 19:14, (#1 + (#2 + #3))\n-Counter in file 0 21:9 -> 25:26, #8\n-Counter in file 0 27:13 -> 27:41, #9\n+Counter in file 0 21:9 -> 25:26, (((#1 + (#2 + #3)) - #4) + 0)\n+Counter in file 0 27:13 -> 27:41, #8\n Counter in file 0 27:41 -> 27:42, #5\n-Counter in file 0 28:13 -> 28:42, (#9 - #5)\n+Counter in file 0 28:13 -> 28:42, (#8 - #5)\n Counter in file 0 28:42 -> 28:43, #6\n-Counter in file 0 32:13 -> 32:42, (#8 - #9)\n+Counter in file 0 32:13 -> 32:42, (((#1 + (#2 + #3)) - #4) - #8)\n Counter in file 0 32:42 -> 32:43, #7\n Counter in file 0 33:10 -> 33:11, #2\n Counter in file 0 33:10 -> 33:11, #3"}, {"sha": "7e79a8f00e1a6bf34643f5115d4ce602d93429f2", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.while_early_ret.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while_early_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while_early_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.while_early_ret.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -1,7 +1,7 @@\n Counter in file 0 5:9 -> 5:27, #1\n Counter in file 0 7:9 -> 9:10, (#1 + #2)\n Counter in file 0 12:13 -> 14:14, ((#1 + #2) - #3)\n-Counter in file 0 18:21 -> 20:22, #6\n+Counter in file 0 18:21 -> 20:22, (((#1 + #2) - #3) - #2)\n Counter in file 0 22:21 -> 22:27, #4\n Counter in file 0 26:21 -> 26:27, #5\n Counter in file 0 30:9 -> 32:10, #2"}, {"sha": "a1075358211648ba9e74644a8db870dcd4147764", "filename": "src/test/run-make-fulldeps/coverage-reports-deadcode/expected_show_coverage_counters.yield.txt", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.yield.txt", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.yield.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-reports-deadcode%2Fexpected_show_coverage_counters.yield.txt?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,90 @@\n+Counter in file 0 8:9 -> 8:22, #1\n+Counter in file 0 13:11 -> 14:35, (#1 + 0)\n+Counter in file 0 14:39 -> 14:41, #4\n+Counter in file 0 15:14 -> 15:52, (#2 + #3)\n+Counter in file 0 17:11 -> 17:46, (#4 + 0)\n+Counter in file 0 18:34 -> 18:39, (#4 - #5)\n+Counter in file 0 18:44 -> 18:46, ((#4 - #5) - #6)\n+Counter in file 0 19:14 -> 19:52, (#5 + #6)\n+Counter in file 0 22:9 -> 22:22, (((#4 - #5) - #6) + 0)\n+Counter in file 0 29:11 -> 30:35, (((#4 - #5) - #6) + 0)\n+Counter in file 0 30:39 -> 30:41, #9\n+Counter in file 0 31:14 -> 31:52, (#7 + #8)\n+Counter in file 0 33:11 -> 34:35, (#9 + 0)\n+Counter in file 0 34:39 -> 34:41, #12\n+Counter in file 0 35:14 -> 35:52, (#10 + #11)\n+Counter in file 0 37:1 -> 37:2, (#12 + 0)\n+Counter in file 0 9:9 -> 9:16, #1\n+Counter in file 0 10:16 -> 11:6, #2\n+Counter in file 0 23:9 -> 23:16, #1\n+Counter in file 0 24:9 -> 24:16, #2\n+Counter in file 0 25:9 -> 25:16, #3\n+Counter in file 0 26:16 -> 27:6, #4\n+Emitting segments for file: ../coverage/yield.rs\n+Combined regions:\n+  8:9 -> 8:22 (count=1)\n+  9:9 -> 9:16 (count=1)\n+  10:16 -> 11:6 (count=1)\n+  13:11 -> 14:35 (count=1)\n+  14:39 -> 14:41 (count=1)\n+  15:14 -> 15:52 (count=0)\n+  17:11 -> 17:46 (count=1)\n+  18:34 -> 18:39 (count=1)\n+  18:44 -> 18:46 (count=1)\n+  19:14 -> 19:52 (count=0)\n+  22:9 -> 22:22 (count=1)\n+  23:9 -> 23:16 (count=1)\n+  24:9 -> 24:16 (count=1)\n+  25:9 -> 25:16 (count=0)\n+  26:16 -> 27:6 (count=0)\n+  29:11 -> 30:35 (count=1)\n+  30:39 -> 30:41 (count=1)\n+  31:14 -> 31:52 (count=0)\n+  33:11 -> 34:35 (count=1)\n+  34:39 -> 34:41 (count=1)\n+  35:14 -> 35:52 (count=0)\n+  37:1 -> 37:2 (count=1)\n+Segment at 8:9 (count = 1), RegionEntry\n+Segment at 8:22 (count = 0), Skipped\n+Segment at 9:9 (count = 1), RegionEntry\n+Segment at 9:16 (count = 0), Skipped\n+Segment at 10:16 (count = 1), RegionEntry\n+Segment at 11:6 (count = 0), Skipped\n+Segment at 13:11 (count = 1), RegionEntry\n+Segment at 14:35 (count = 0), Skipped\n+Segment at 14:39 (count = 1), RegionEntry\n+Segment at 14:41 (count = 0), Skipped\n+Segment at 15:14 (count = 0), RegionEntry\n+Segment at 15:52 (count = 0), Skipped\n+Segment at 17:11 (count = 1), RegionEntry\n+Segment at 17:46 (count = 0), Skipped\n+Segment at 18:34 (count = 1), RegionEntry\n+Segment at 18:39 (count = 0), Skipped\n+Segment at 18:44 (count = 1), RegionEntry\n+Segment at 18:46 (count = 0), Skipped\n+Segment at 19:14 (count = 0), RegionEntry\n+Segment at 19:52 (count = 0), Skipped\n+Segment at 22:9 (count = 1), RegionEntry\n+Segment at 22:22 (count = 0), Skipped\n+Segment at 23:9 (count = 1), RegionEntry\n+Segment at 23:16 (count = 0), Skipped\n+Segment at 24:9 (count = 1), RegionEntry\n+Segment at 24:16 (count = 0), Skipped\n+Segment at 25:9 (count = 0), RegionEntry\n+Segment at 25:16 (count = 0), Skipped\n+Segment at 26:16 (count = 0), RegionEntry\n+Segment at 27:6 (count = 0), Skipped\n+Segment at 29:11 (count = 1), RegionEntry\n+Segment at 30:35 (count = 0), Skipped\n+Segment at 30:39 (count = 1), RegionEntry\n+Segment at 30:41 (count = 0), Skipped\n+Segment at 31:14 (count = 0), RegionEntry\n+Segment at 31:52 (count = 0), Skipped\n+Segment at 33:11 (count = 1), RegionEntry\n+Segment at 34:35 (count = 0), Skipped\n+Segment at 34:39 (count = 1), RegionEntry\n+Segment at 34:41 (count = 0), Skipped\n+Segment at 35:14 (count = 0), RegionEntry\n+Segment at 35:52 (count = 0), Skipped\n+Segment at 37:1 (count = 1), RegionEntry\n+Segment at 37:2 (count = 0), Skipped"}, {"sha": "c62cbc1c91f79d57e1c0a10051918b650b5aaec9", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/Makefile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2FMakefile?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -43,6 +43,9 @@ endif\n %: $(SOURCEDIR)/%.rs\n \t# Compile the test program with coverage instrumentation and generate relevant MIR.\n \t$(RUSTC) $(SOURCEDIR)/$@.rs \\\n+\t\t\t$$( grep -q '^\\/\\/ require-rust-edition-2018' $(SOURCEDIR)/$@.rs && \\\n+\t\t\t\techo \"--edition=2018\" \\\n+\t\t\t) \\\n \t\t\t-Zinstrument-coverage \\\n \t\t\t-Clink-dead-code=$(LINK_DEAD_CODE) \\\n \t\t\t-Zdump-mir=InstrumentCoverage \\"}, {"sha": "a8227cffc60f6747001831a375c7a0004805ec14", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,99 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>abort.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:25-15:27: @0[1]: _1 = const 10_i32\n+15:9-15:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:11-16:20: @2[2]: _5 = _1\n+16:11-16:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+16:11-16:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:12-17:21: @5[3]: _8 = _1\n+17:12-17:25: @5[4]: _7 = Lt(move _8, const 5_i32)\n+17:12-17:25: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb12]\n+17:26-19:10: @9[1]: _6 = const ()\n+19:10-19:10: @9.Goto: goto -&gt; bb10\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb12]\n+17:26-19:10: @9[1]: _6 = const ()\n+19:10-19:10: @9.Goto: goto -&gt; bb10\">            might_abort(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb12]\n+17:26-19:10: @9[1]: _6 = const ()\n+19:10-19:10: @9.Goto: goto -&gt; bb10\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:10-19:10: @7.Goto: goto -&gt; bb10\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:23: @10[2]: _10 = CheckedSub(_1, const 1_i32)\n+20:9-20:23: @11[0]: _1 = move (_10.0: i32)\"><span class=\"annotation\">@10,11\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:8-22:10: @4[4]: _12 = ()\n+22:5-22:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\n+23:2-23:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:8-22:10: @4[4]: _12 = ()\n+22:5-22:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\n+23:2-23:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "daef056a19aa1acd90e5400f26f7ae63f355c59d", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,164 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>abort.might_abort - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_abort(should_abort: bool) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:20: @0[1]: _2 = _1\n+6:8-6:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_abort<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @3[7]: _9 = &amp;(*_33)\n+7:18-7:31: @3[8]: _8 = &amp;(*_9)\n+7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @3[15]: _15 = ()\n+7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @3[18]: _13 = &amp;(*_32)\n+7:9-7:33: @3[19]: _12 = &amp;(*_13)\n+7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+7:9-7:33: @5[5]: _4 = const ()\n+8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"aborting...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @3[7]: _9 = &amp;(*_33)\n+7:18-7:31: @3[8]: _8 = &amp;(*_9)\n+7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @3[15]: _15 = ()\n+7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @3[18]: _13 = &amp;(*_32)\n+7:9-7:33: @3[19]: _12 = &amp;(*_13)\n+7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+7:9-7:33: @5[5]: _4 = const ()\n+8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">    }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "499825445aceaa7eeb01025df79b84fe69a6d9c7", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,103 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>assert.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:25-10:27: @0[1]: _1 = const 10_i32\n+10:9-10:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:11-11:20: @2[2]: _5 = _1\n+11:11-11:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+11:11-11:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:12-12:21: @5[3]: _8 = _1\n+12:12-12:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+12:12-12:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\">            might_fail_assert(3);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:19-14:28: @7[2]: _11 = _1\n+14:19-14:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n+14:19-14:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\">            might_fail_assert(2);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:10-16:10: @11.Goto: goto -&gt; bb14\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n+17:9-17:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+20:2-20:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+20:2-20:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "98be3485a4179c9397bc516e19831896c1eb39e0", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,97 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>assert.might_fail_assert - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_fail_assert(one_plus_one: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:32: @0[6]: _75 = const might_fail_assert::promoted[4]\n+5:14-5:32: @0[7]: _7 = &amp;(*_75)\n+5:14-5:32: @0[8]: _6 = &amp;(*_7)\n+5:14-5:32: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+5:34-5:46: @0[17]: _14 = &amp;_1\n+5:5-5:48: @0[18]: _13 = (move _14,)\n+5:5-5:48: @0[20]: FakeRead(ForMatchedPlace, _13)\n+5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n+5:5-5:48: @0[25]: _17 = &amp;(*_15)\n+5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:5-5:48: @0.Call: _16 = ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb13]\n+5:5-5:48: @1[2]: _12 = [move _16]\n+5:5-5:48: @1[5]: _11 = &amp;_12\n+5:5-5:48: @1[6]: _10 = &amp;(*_11)\n+5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+5:5-5:48: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb13]\n+5:5-5:48: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb13]\n+5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @7[30]: _72 = const might_fail_assert::promoted[1]\n+6:37-6:61: @7[31]: _52 = &amp;(*_72)\n+6:37-6:61: @7[32]: _51 = &amp;(*_52)\n+6:37-6:61: @7[33]: _50 = move _51 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7,8,9,10,11,12\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:2-7:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "31646f8ce81dcec6731ecfd65a69e208635e352a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\">                                 <span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:38-15:74: @1[3]: _15 = (move _16,)\n+15:38-15:74: @1[5]: FakeRead(ForMatchedPlace, _15)\n+15:38-15:74: @1[7]: _27 = (_15.0: &amp;std::fmt::Arguments)\n+15:38-15:74: @1[10]: _29 = &amp;(*_27)\n+15:38-15:74: @1[12]: _30 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+15:38-15:74: @1.Call: _28 = ArgumentV1::new::&lt;Arguments&gt;(move _29, move _30) -&gt; [return: bb2, unwind: bb4]\n+15:38-15:74: @2[2]: _14 = [move _28]\n+15:38-15:74: @2[5]: _13 = &amp;_14\n+15:38-15:74: @2[6]: _12 = &amp;(*_13)\n+15:38-15:74: @2[7]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:38-15:74: @2.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb4]\n+15:37-15:74: @3[2]: _5 = &amp;_6\n+15:37-15:74: @3[3]: _4 = &amp;(*_5)\n+15:9-15:75: @3.Call: begin_panic_fmt(move _4) -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>$crate::rt::begin_panic_fmt(&amp;$crate::format_args!($fmt, $($arg)+))<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span></div>\n+</body>\n+</html>"}, {"sha": "ddc791f074fbbf1a013b3aa2d692f6ea25351f96", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#1}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#1} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\">                                 <span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:38-15:74: @1[3]: _15 = (move _16,)\n+15:38-15:74: @1[5]: FakeRead(ForMatchedPlace, _15)\n+15:38-15:74: @1[7]: _27 = (_15.0: &amp;std::fmt::Arguments)\n+15:38-15:74: @1[10]: _29 = &amp;(*_27)\n+15:38-15:74: @1[12]: _30 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+15:38-15:74: @1.Call: _28 = ArgumentV1::new::&lt;Arguments&gt;(move _29, move _30) -&gt; [return: bb2, unwind: bb4]\n+15:38-15:74: @2[2]: _14 = [move _28]\n+15:38-15:74: @2[5]: _13 = &amp;_14\n+15:38-15:74: @2[6]: _12 = &amp;(*_13)\n+15:38-15:74: @2[7]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:38-15:74: @2.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb4]\n+15:37-15:74: @3[2]: _5 = &amp;_6\n+15:37-15:74: @3[3]: _4 = &amp;(*_5)\n+15:9-15:75: @3.Call: begin_panic_fmt(move _4) -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>$crate::rt::begin_panic_fmt(&amp;$crate::format_args!($fmt, $($arg)+))<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span></div>\n+</body>\n+</html>"}, {"sha": "709b87fc50198c1f4bfaffcce03e42bcf3b00173", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#2}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#2} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\">                                 <span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:38-15:74: @1[3]: _15 = (move _16,)\n+15:38-15:74: @1[5]: FakeRead(ForMatchedPlace, _15)\n+15:38-15:74: @1[7]: _27 = (_15.0: &amp;std::fmt::Arguments)\n+15:38-15:74: @1[10]: _29 = &amp;(*_27)\n+15:38-15:74: @1[12]: _30 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+15:38-15:74: @1.Call: _28 = ArgumentV1::new::&lt;Arguments&gt;(move _29, move _30) -&gt; [return: bb2, unwind: bb4]\n+15:38-15:74: @2[2]: _14 = [move _28]\n+15:38-15:74: @2[5]: _13 = &amp;_14\n+15:38-15:74: @2[6]: _12 = &amp;(*_13)\n+15:38-15:74: @2[7]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:38-15:74: @2.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb4]\n+15:37-15:74: @3[2]: _5 = &amp;_6\n+15:37-15:74: @3[3]: _4 = &amp;(*_5)\n+15:9-15:75: @3.Call: begin_panic_fmt(move _4) -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>$crate::rt::begin_panic_fmt(&amp;$crate::format_args!($fmt, $($arg)+))<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span></div>\n+</body>\n+</html>"}, {"sha": "abd2621481a3531b827b2c266da5f48e78b45378", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#3}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#3} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 52\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">|_| </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:17-53:19: @0[0]: _0 = ()\n+53:19-53:19: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>()<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9d71d8ccc6e08436b264da416915cb4218dfd53a", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,226 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 45\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">pub fn block_on&lt;F: Future&gt;(mut future: F) -&gt; F::Output {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>mut future = unsafe { Pin::new_unchecked(&amp;mut future) };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        static VTABLE: RawWakerVTable = RawWakerVTable::new(</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"clone\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake_by_ref\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| (),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        );</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &amp;VTABLE)) };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        let mut context = Context::from_waker(&amp;waker)<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        loop {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if let Poll::Ready(</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"59:32-59:35: @12[1]: _20 = move ((_14 as Ready).0: &lt;F as std::future::Future&gt;::Output)\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">) = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:39-59:45: @7[3]: _16 = &amp;mut _2\n+59:39-59:54: @7.Call: _15 = Pin::&lt;&amp;mut F&gt;::as_mut(move _16) -&gt; [return: bb8, unwind: bb19]\n+59:60-59:72: @8[3]: _18 = &amp;mut _10\n+59:60-59:72: @8[4]: _17 = &amp;mut (*_18)\n+59:39-59:73: @8.Call: _14 = &lt;F as Future&gt;::poll(move _15, move _17) -&gt; [return: bb9, unwind: bb19]\n+59:39-59:73: @9[2]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@6,7,8,9\u298a</span>future.as_mut().poll(&amp;mut context)<span class=\"annotation\">\u2989@6,7,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                break </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:23-60:26: @12[2]: _0 = move _20\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:10-62:10: @13.Goto: goto -&gt; bb6\"><span class=\"annotation\">@11,13\u298a</span>\u2038<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"63:6-63:6: @17.Return: return\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "779f67fd7c10158f49c983a78a5a79a2019d985b", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.f-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.f-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\">                   <span class=\"code\" style=\"--layer: 0\">{ </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:22-5:23: @0[0]: _0 = const 1_u8\n+5:25-5:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "050ae67efc98ef30fc54c0d89cd862a6aa5656d6", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.f - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn f() -&gt; u8 { 1 }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:25: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "d176a607d3b5444ca58c89ad0dd4e2cf47c07a62", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.foo-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.foo-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">                             <span class=\"code\" style=\"--layer: 0\">{ </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:32-7:43: @0[0]: _0 = [const false; 10]\n+7:45-7:45: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>[false; 10] }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "64eeaefa89468291bb3046317704f001699c4dec", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.foo - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn foo() -&gt; [bool; 10] { [false; 10] }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:45-7:45: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4e894eecd16aee967a5e30d77461c0b15a0d9e9f", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.g-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.g-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:11-10:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:11-10:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:10: @16[3]: _4 = _3\"><span class=\"annotation\">@16\u298a</span>y<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:14-11:17: @2.Call: _8 = f() -&gt; [return: bb3, unwind: bb30]\n+11:14-11:17: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>f()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:27-11:28: @14[2]: _24 = (*_5)\"><span class=\"annotation\">@9,12,14,15\u298a</span>y<span class=\"annotation\">\u2989@9,12,14,15</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:28-11:28: @17.Goto: goto -&gt; bb1\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:32-11:34: @16[4]: _0 = ()\"><span class=\"annotation\">@16\u298a</span>()<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:14-12:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:2-14:2: @19.Return: return\"><span class=\"annotation\">@18,19\u298a</span>\u2038<span class=\"annotation\">\u2989@18,19</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4788562a9d4fda006c55777571beec0d83c5fb66", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.g - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">pub async fn g(x: u8) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:2-14:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "de48232efde620ef02d6acff789a03bd59da8e1e", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.h-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.h-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">                     <span><span class=\"code even\" style=\"--layer: 1\" title=\"19:11-19:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:11-19:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:14-20:19: @2.Call: _8 = foo() -&gt; [return: bb3, unwind: bb33]\n+20:14-20:19: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>foo()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await[</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:26-20:27: @14[2]: _24 = (*_5)\"><span class=\"annotation\">@9,12,14,15,16\u298a</span>y<span class=\"annotation\">\u2989@9,12,14,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">]</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:28-20:28: @18.Goto: goto -&gt; bb1\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:32-20:34: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:2-23:2: @20.Return: return\"><span class=\"annotation\">@19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@19,20</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "83b0a3e0d43aa2025f9e2612bdfc540ff1c344a7", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.h - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn h(x: usize) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if foo().await[y] =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:2-23:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "71397d39625399beac5e0dd4cb5f3dd3c595995c", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.i-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.i-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 24\"><span class=\"line\">                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"26:11-26:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:11-26:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:9-27:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:14-27:17: @2.Call: _8 = f() -&gt; [return: bb3, unwind: bb33]\n+27:14-27:17: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>f()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:27-27:28: @14[3]: _25 = (*_5)\n+27:27-27:32: @14[4]: _26 = CheckedAdd(_25, const 1_u8)\n+27:27-27:32: @15[0]: _24 = move (_26.0: u8)\"><span class=\"annotation\">@9,12,14,15,16\u298a</span>y + 1<span class=\"annotation\">\u2989@9,12,14,15,16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:32-27:32: @18.Goto: goto -&gt; bb1\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:36-27:38: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:14-28:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:2-30:2: @20.Return: return\"><span class=\"annotation\">@19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@19,20</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "55efca7448176dc190122bb583c8ba99a1a4cb13", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.i - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 24\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn i(x: u8) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y + 1 =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:2-30:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2f14339d9e95b03fe9ebbb1cf1f38b20ea1dbb63", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,133 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 31\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    let _ = g(10);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    let _ = h(9);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    let mut future = Box::pin(i(8));</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    executor::block_on(future.as_mut());</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "09adc12cefdb2cfaef5dd6d2961de9b82e28b2fa", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 204, "deletions": 114, "changes": 318, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -87,10 +87,12 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n 10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n 10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\n+11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@5,7,8\u298a</span>countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\n+11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@5,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n 13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n 13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n@@ -106,10 +108,12 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n 14:61-16:10: @22[1]: _10 = const ()\n 16:10-16:10: @22.Goto: goto -&gt; bb23\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown -= 5;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\n+17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@23,24\u298a</span>countdown -= 5;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\n+17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@23,24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n@@ -129,9 +133,15 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n 28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n-28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @33[0]: _21 = move (_27.0: i32)\"><span class=\"annotation\">@33\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n+28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @33[1]: _24 = const ()\"><span class=\"annotation\">@30,32,33\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @33[1]: _24 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @33[1]: _24 = const ()\">    }<span class=\"annotation\">\u2989@30,32,33</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n 30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n 30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n@@ -146,118 +156,198 @@\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n 31:61-33:10: @47[1]: _30 = const ()\n 33:10-33:10: @47.Goto: goto -&gt; bb48\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46.Goto: goto -&gt; bb48\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\n+34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@48,49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48,49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:25-39:26: @50[3]: _41 = const 0_i32\n-39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n-40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">        countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @52.Goto: goto -&gt; bb54\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:8-39:12: @50[4]: _42 = const true\n+39:8-39:12: @50[5]: FakeRead(ForMatchedPlace, _42)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // Demonstrate the difference with `TerminatorKind::Assert` as of 2020-11-15. Assert is no</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // longer treated as a `BasicCoverageBlock` terminator, which changed the coverage region,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // for the executed `then` block above, to include the closing brace on line 30. That</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // changed the line count, but the coverage code region (for the `else if` condition) is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // still valid.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        //</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // Note that `if` (then) and `else` blocks include the closing brace in their coverage</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // code regions when the last line in the block ends in a semicolon, because the Rust</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // compiler inserts a `StatementKind::Assign` to assign `const ()` to a `Place`, for the</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // empty value for the executed block. When the last line does not end in a semicolon</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // (that is, when the block actually results in a value), the additional `Assign` is not</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // generated, and the brace is not included.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:29-52:30: @53[1]: _43 = const 0_i32\n+52:13-52:26: @53[2]: FakeRead(ForLet, _43)\"><span class=\"annotation\">@51,53\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:12-53:16: @53[5]: _45 = const true\n+53:12-53:16: @53[6]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@51,53\u298a</span>true<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"54:13-54:27: @56[0]: _43 = const 10_i32\n+53:17-55:10: @56[1]: _44 = const ()\n+55:10-55:10: @56.Goto: goto -&gt; bb57\"><span class=\"annotation\">@54,56\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"54:13-54:27: @56[0]: _43 = const 10_i32\n+53:17-55:10: @56[1]: _44 = const ()\n+55:10-55:10: @56.Goto: goto -&gt; bb57\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"54:13-54:27: @56[0]: _43 = const 10_i32\n+53:17-55:10: @56[1]: _44 = const ()\n+55:10-55:10: @56.Goto: goto -&gt; bb57\">        }<span class=\"annotation\">\u2989@54,56</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"55:10-55:10: @55.Goto: goto -&gt; bb57\"><span class=\"annotation\">@55\u298a</span>\u2038<span class=\"annotation\">\u2989@55</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n-44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n-44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:9-45:23: @58[0]: _41 = move (_47.0: i32)\"><span class=\"annotation\">@58\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n-46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n-46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n-47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n-47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:42-47:42: @66.Goto: goto -&gt; bb69\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:42-47:42: @67.Goto: goto -&gt; bb69\"><span class=\"annotation\">@67\u298a</span>\u2038<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n-47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:60-47:60: @62.Goto: goto -&gt; bb65\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:60-47:60: @63.Goto: goto -&gt; bb65\"><span class=\"annotation\">@63\u298a</span>\u2038<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:10-49:10: @71.Goto: goto -&gt; bb73\"><span class=\"annotation\">@71\u298a</span>\u2038<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @74[0]: _41 = move (_59.0: i32)\"><span class=\"annotation\">@74\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:12-57:21: @57[4]: _47 = _43\n+57:12-57:25: @57[5]: _46 = Gt(move _47, const 7_i32)\n+57:12-57:25: @57[7]: FakeRead(ForMatchedPlace, _46)\"><span class=\"annotation\">@57\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@57</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"58:13-58:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n+58:13-58:27: @61[0]: _43 = move (_48.0: i32)\n+57:26-59:10: @61[1]: _41 = const ()\"><span class=\"annotation\">@58,60,61\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"58:13-58:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n+58:13-58:27: @61[0]: _43 = move (_48.0: i32)\n+57:26-59:10: @61[1]: _41 = const ()\">            countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"58:13-58:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n+58:13-58:27: @61[0]: _43 = move (_48.0: i32)\n+57:26-59:10: @61[1]: _41 = const ()\">        }<span class=\"annotation\">\u2989@58,60,61</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // The closing brace of the `then` branch is now included in the coverage region, and shown</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // as \"executed\" (giving its line a count of 1 here). Since, in the original version above,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // the closing brace shares the same line as the `else if` conditional expression (which is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // not executed if the first `then` condition is true), only the condition's code region is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // marked with a count of 0 now.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:17-65:26: @59[2]: _50 = _43\n+65:17-65:30: @59[3]: _49 = Gt(move _50, const 2_i32)\n+65:17-65:30: @59[5]: FakeRead(ForMatchedPlace, _49)\"><span class=\"annotation\">@59\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@59</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:16-66:25: @64[5]: _55 = _43\n+66:16-66:29: @64[6]: _54 = Lt(move _55, const 1_i32)\"><span class=\"annotation\">@62,64\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@62,64</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:33-66:42: @71[2]: _57 = _43\n+66:33-66:46: @71[3]: _56 = Gt(move _57, const 5_i32)\"><span class=\"annotation\">@71\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@71</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:46-66:46: @69.Goto: goto -&gt; bb72\"><span class=\"annotation\">@69\u298a</span>\u2038<span class=\"annotation\">\u2989@69</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:46-66:46: @70.Goto: goto -&gt; bb72\"><span class=\"annotation\">@70\u298a</span>\u2038<span class=\"annotation\">\u2989@70</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:50-66:59: @67[2]: _59 = _43\n+66:50-66:64: @67[3]: _58 = Ne(move _59, const 9_i32)\"><span class=\"annotation\">@67\u298a</span>countdown != 9<span class=\"annotation\">\u2989@67</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:64-66:64: @65.Goto: goto -&gt; bb68\"><span class=\"annotation\">@65\u298a</span>\u2038<span class=\"annotation\">\u2989@65</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:64-66:64: @66.Goto: goto -&gt; bb68\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:17-67:30: @75[0]: _43 = const 0_i32\n+66:65-68:14: @75[1]: _51 = const ()\n+68:14-68:14: @75.Goto: goto -&gt; bb76\"><span class=\"annotation\">@73,75\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"67:17-67:30: @75[0]: _43 = const 0_i32\n+66:65-68:14: @75[1]: _51 = const ()\n+68:14-68:14: @75.Goto: goto -&gt; bb76\">                countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"67:17-67:30: @75[0]: _43 = const 0_i32\n+66:65-68:14: @75[1]: _51 = const ()\n+68:14-68:14: @75.Goto: goto -&gt; bb76\">            }<span class=\"annotation\">\u2989@73,75</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:14-68:14: @74.Goto: goto -&gt; bb76\"><span class=\"annotation\">@74\u298a</span>\u2038<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:13-69:27: @76[2]: _60 = CheckedSub(_43, const 5_i32)\n+69:13-69:27: @77[0]: _43 = move (_60.0: i32)\"><span class=\"annotation\">@76,77\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@76,77</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"71:13-71:19: @63[0]: _0 = const ()\"><span class=\"annotation\">@63\u298a</span>return<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"73:6-73:6: @78.Goto: goto -&gt; bb79\"><span class=\"annotation\">@78\u298a</span>\u2038<span class=\"annotation\">\u2989@78</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"73:6-73:6: @52.Goto: goto -&gt; bb79\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:25-75:26: @79[3]: _62 = const 0_i32\n+75:9-75:22: @79[4]: FakeRead(ForLet, _62)\"><span class=\"annotation\">@79\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"76:8-76:12: @79[7]: _64 = const true\n+76:8-76:12: @79[8]: FakeRead(ForMatchedPlace, _64)\"><span class=\"annotation\">@79\u298a</span>true<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:22: @82[0]: _62 = const 1_i32\n+76:13-78:6: @82[1]: _63 = const ()\n+78:6-78:6: @82.Goto: goto -&gt; bb83\"><span class=\"annotation\">@80,82\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:22: @82[0]: _62 = const 1_i32\n+76:13-78:6: @82[1]: _63 = const ()\n+78:6-78:6: @82.Goto: goto -&gt; bb83\">        countdown = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:22: @82[0]: _62 = const 1_i32\n+76:13-78:6: @82[1]: _63 = const ()\n+78:6-78:6: @82.Goto: goto -&gt; bb83\">    }<span class=\"annotation\">\u2989@80,82</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"78:6-78:6: @81.Goto: goto -&gt; bb83\"><span class=\"annotation\">@81\u298a</span>\u2038<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:9-80:10: @106[0]: FakeRead(ForLet, _65)\"><span class=\"annotation\">@106\u298a</span>z<span class=\"annotation\">\u2989@106</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"80:16-80:25: @83[5]: _67 = _62\n+80:16-80:29: @83[6]: _66 = Gt(move _67, const 7_i32)\n+80:16-80:29: @83[8]: FakeRead(ForMatchedPlace, _66)\"><span class=\"annotation\">@83\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n+81:9-81:23: @87[0]: _62 = move (_68.0: i32)\n+80:30-82:6: @87[1]: _65 = const ()\"><span class=\"annotation\">@84,86,87\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n+81:9-81:23: @87[0]: _62 = move (_68.0: i32)\n+80:30-82:6: @87[1]: _65 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n+81:9-81:23: @87[0]: _62 = move (_68.0: i32)\n+80:30-82:6: @87[1]: _65 = const ()\">    }<span class=\"annotation\">\u2989@84,86,87</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"82:15-82:24: @85[2]: _70 = _62\n+82:15-82:28: @85[3]: _69 = Gt(move _70, const 2_i32)\n+82:15-82:28: @85[5]: FakeRead(ForMatchedPlace, _69)\"><span class=\"annotation\">@85\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@85</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:12-83:21: @90[5]: _75 = _62\n+83:12-83:25: @90[6]: _74 = Lt(move _75, const 1_i32)\"><span class=\"annotation\">@88,90\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@88,90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:29-83:38: @97[2]: _77 = _62\n+83:29-83:42: @97[3]: _76 = Gt(move _77, const 5_i32)\"><span class=\"annotation\">@97\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@97</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:42-83:42: @95.Goto: goto -&gt; bb98\"><span class=\"annotation\">@95\u298a</span>\u2038<span class=\"annotation\">\u2989@95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:42-83:42: @96.Goto: goto -&gt; bb98\"><span class=\"annotation\">@96\u298a</span>\u2038<span class=\"annotation\">\u2989@96</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:46-83:55: @93[2]: _79 = _62\n+83:46-83:60: @93[3]: _78 = Ne(move _79, const 9_i32)\"><span class=\"annotation\">@93\u298a</span>countdown != 9<span class=\"annotation\">\u2989@93</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:60-83:60: @91.Goto: goto -&gt; bb94\"><span class=\"annotation\">@91\u298a</span>\u2038<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:60-83:60: @92.Goto: goto -&gt; bb94\"><span class=\"annotation\">@92\u298a</span>\u2038<span class=\"annotation\">\u2989@92</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"84:13-84:26: @101[0]: _62 = const 0_i32\n+83:61-85:10: @101[1]: _71 = const ()\n+85:10-85:10: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@99,101\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"84:13-84:26: @101[0]: _62 = const 0_i32\n+83:61-85:10: @101[1]: _71 = const ()\n+85:10-85:10: @101.Goto: goto -&gt; bb102\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"84:13-84:26: @101[0]: _62 = const 0_i32\n+83:61-85:10: @101[1]: _71 = const ()\n+85:10-85:10: @101.Goto: goto -&gt; bb102\">        }<span class=\"annotation\">\u2989@99,101</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"85:10-85:10: @100.Goto: goto -&gt; bb102\"><span class=\"annotation\">@100\u298a</span>\u2038<span class=\"annotation\">\u2989@100</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"86:9-86:23: @102[2]: _80 = CheckedSub(_62, const 5_i32)\n+86:9-86:23: @103[0]: _62 = move (_80.0: i32)\"><span class=\"annotation\">@102,103\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@102,103</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\"><span class=\"annotation\">@60,75,76\u298a</span>should_be_reachable = countdown;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@60,75,76</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"88:35-88:44: @89[1]: _82 = _62\n+88:13-88:32: @89[2]: FakeRead(ForLet, _82)\n+89:18-89:27: @89[9]: _113 = const main::promoted[1]\n+89:18-89:27: @89[10]: _88 = &amp;(*_113)\n+89:18-89:27: @89[11]: _87 = &amp;(*_88)\n+89:18-89:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+89:9-89:29: @89[18]: _94 = ()\n+89:9-89:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n+89:9-89:29: @89[20]: _112 = const main::promoted[0]\n+89:9-89:29: @89[21]: _92 = &amp;(*_112)\n+89:9-89:29: @89[22]: _91 = &amp;(*_92)\n+89:9-89:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+89:9-89:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n+89:9-89:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n+89:9-89:29: @105[5]: _83 = const ()\n+90:9-90:15: @105[7]: _0 = const ()\"><span class=\"annotation\">@89,104,105\u298a</span>should_be_reachable = countdown;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"88:35-88:44: @89[1]: _82 = _62\n+88:13-88:32: @89[2]: FakeRead(ForLet, _82)\n+89:18-89:27: @89[9]: _113 = const main::promoted[1]\n+89:18-89:27: @89[10]: _88 = &amp;(*_113)\n+89:18-89:27: @89[11]: _87 = &amp;(*_88)\n+89:18-89:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+89:9-89:29: @89[18]: _94 = ()\n+89:9-89:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n+89:9-89:29: @89[20]: _112 = const main::promoted[0]\n+89:9-89:29: @89[21]: _92 = &amp;(*_112)\n+89:9-89:29: @89[22]: _91 = &amp;(*_92)\n+89:9-89:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+89:9-89:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n+89:9-89:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n+89:9-89:29: @105[5]: _83 = const ()\n+90:9-90:15: @105[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"88:35-88:44: @89[1]: _82 = _62\n+88:13-88:32: @89[2]: FakeRead(ForLet, _82)\n+89:18-89:27: @89[9]: _113 = const main::promoted[1]\n+89:18-89:27: @89[10]: _88 = &amp;(*_113)\n+89:18-89:27: @89[11]: _87 = &amp;(*_88)\n+89:18-89:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+89:9-89:29: @89[18]: _94 = ()\n+89:9-89:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n+89:9-89:29: @89[20]: _112 = const main::promoted[0]\n+89:9-89:29: @89[21]: _92 = &amp;(*_112)\n+89:9-89:29: @89[22]: _91 = &amp;(*_92)\n+89:9-89:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+89:9-89:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n+89:9-89:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n+89:9-89:29: @105[5]: _83 = const ()\n+90:9-90:15: @105[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@89,104,105</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n-57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n-57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @81[0]: _41 = move (_77.0: i32)\"><span class=\"annotation\">@81\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n-59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n-59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n-60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n-60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:42-60:42: @89.Goto: goto -&gt; bb92\"><span class=\"annotation\">@89\u298a</span>\u2038<span class=\"annotation\">\u2989@89</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:42-60:42: @90.Goto: goto -&gt; bb92\"><span class=\"annotation\">@90\u298a</span>\u2038<span class=\"annotation\">\u2989@90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n-60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:60-60:60: @85.Goto: goto -&gt; bb88\"><span class=\"annotation\">@85\u298a</span>\u2038<span class=\"annotation\">\u2989@85</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:60-60:60: @86.Goto: goto -&gt; bb88\"><span class=\"annotation\">@86\u298a</span>\u2038<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"62:10-62:10: @94.Goto: goto -&gt; bb96\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:9-63:23: @97[0]: _41 = move (_89.0: i32)\"><span class=\"annotation\">@97\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"93:9-93:10: @127[0]: FakeRead(ForLet, _95)\"><span class=\"annotation\">@127\u298a</span>w<span class=\"annotation\">\u2989@127</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"93:16-93:25: @106[5]: _97 = _62\n+93:16-93:29: @106[6]: _96 = Gt(move _97, const 7_i32)\n+93:16-93:29: @106[8]: FakeRead(ForMatchedPlace, _96)\"><span class=\"annotation\">@106\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@106</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"94:9-94:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n+94:9-94:23: @110[0]: _62 = move (_98.0: i32)\n+93:30-95:6: @110[1]: _95 = const ()\"><span class=\"annotation\">@107,109,110\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"94:9-94:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n+94:9-94:23: @110[0]: _62 = move (_98.0: i32)\n+93:30-95:6: @110[1]: _95 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"94:9-94:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n+94:9-94:23: @110[0]: _62 = move (_98.0: i32)\n+93:30-95:6: @110[1]: _95 = const ()\">    }<span class=\"annotation\">\u2989@107,109,110</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"95:15-95:24: @108[2]: _100 = _62\n+95:15-95:28: @108[3]: _99 = Gt(move _100, const 2_i32)\n+95:15-95:28: @108[5]: FakeRead(ForMatchedPlace, _99)\"><span class=\"annotation\">@108\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@108</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:12-96:21: @113[5]: _105 = _62\n+96:12-96:25: @113[6]: _104 = Lt(move _105, const 1_i32)\"><span class=\"annotation\">@111,113\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@111,113</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"96:29-96:38: @120[2]: _107 = _62\n+96:29-96:42: @120[3]: _106 = Gt(move _107, const 5_i32)\"><span class=\"annotation\">@120\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@120</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:42-96:42: @118.Goto: goto -&gt; bb121\"><span class=\"annotation\">@118\u298a</span>\u2038<span class=\"annotation\">\u2989@118</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"96:42-96:42: @119.Goto: goto -&gt; bb121\"><span class=\"annotation\">@119\u298a</span>\u2038<span class=\"annotation\">\u2989@119</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:46-96:55: @116[2]: _109 = _62\n+96:46-96:60: @116[3]: _108 = Ne(move _109, const 9_i32)\"><span class=\"annotation\">@116\u298a</span>countdown != 9<span class=\"annotation\">\u2989@116</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"96:60-96:60: @114.Goto: goto -&gt; bb117\"><span class=\"annotation\">@114\u298a</span>\u2038<span class=\"annotation\">\u2989@114</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:60-96:60: @115.Goto: goto -&gt; bb117\"><span class=\"annotation\">@115\u298a</span>\u2038<span class=\"annotation\">\u2989@115</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"97:13-97:26: @124[0]: _62 = const 0_i32\n+96:61-98:10: @124[1]: _101 = const ()\n+98:10-98:10: @124.Goto: goto -&gt; bb125\"><span class=\"annotation\">@122,124\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"97:13-97:26: @124[0]: _62 = const 0_i32\n+96:61-98:10: @124[1]: _101 = const ()\n+98:10-98:10: @124.Goto: goto -&gt; bb125\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"97:13-97:26: @124[0]: _62 = const 0_i32\n+96:61-98:10: @124[1]: _101 = const ()\n+98:10-98:10: @124.Goto: goto -&gt; bb125\">        }<span class=\"annotation\">\u2989@122,124</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"98:10-98:10: @123.Goto: goto -&gt; bb125\"><span class=\"annotation\">@123\u298a</span>\u2038<span class=\"annotation\">\u2989@123</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"99:9-99:23: @125[2]: _110 = CheckedSub(_62, const 5_i32)\n+99:9-99:23: @126[0]: _62 = move (_110.0: i32)\"><span class=\"annotation\">@125,126\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@125,126</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:9-101:15: @112[0]: _0 = const ()\"><span class=\"annotation\">@112\u298a</span>return<span class=\"annotation\">\u2989@112</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:2-67:2: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"103:2-103:2: @130.Goto: goto -&gt; bb131\"><span class=\"annotation\">@130\u298a</span>\u2038<span class=\"annotation\">\u2989@130</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:2-103:2: @131.Return: return\"><span class=\"annotation\">@131\u298a</span>\u2038<span class=\"annotation\">\u2989@131</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "fc9f54143ed2a9761007e80aa1f5662ede0583e4", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 69, "deletions": 7, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -71,10 +71,13 @@\n <body>\n <div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn in_func(a: u32) {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -92,8 +95,15 @@\n 21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n 21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\"><span class=\"annotation\">@1,2,3,4\u298a</span>println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+22:6-22:6: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>b = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -111,6 +121,58 @@\n 21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n 21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@1,2,3,4</span></span></span></span></div>\n+22:6-22:6: @4.Return: return\">        let c = a + b;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\">        println!(\"c = {}\", c)</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "325d4483223b56ea6c939119219caf99e3de1fad", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -69,13 +69,33 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\"><span class=\"annotation\">@0\u298a</span>incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n 42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n 42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@1,2</span></span></span></span></div>\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\">            self.in_struct_field += incr;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\">            in_func(self.in_struct_field);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "509a949cfcf59d6f99c5b7a4fe1e14e720024d80", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 37, "deletions": 19, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -108,28 +108,46 @@\n 9:16-9:22: @16[18]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @19[0]: _11 = const ()\"><span class=\"annotation\">@17,19\u298a</span>break<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @20[0]: _9 = move (_29.0: i32)\"><span class=\"annotation\">@20\u298a</span>a -= 5<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@21\u298a</span>b -= 5<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n+12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@18,20,21\u298a</span>a -= 5;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n+12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @21[0]: _10 = move (_30.0: i32)\">            b -= 5<span class=\"annotation\">\u2989@18,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n 14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@18,20,21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@18,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @24[0]: _33 = CheckedSub(_9, const 10_i32)\n+15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n 16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@25\u298a</span>a -= 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@22,24,25\u298a</span>a -= 10;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @24[0]: _33 = CheckedSub(_9, const 10_i32)\n+15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n 16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@29\u298a</span>a -= 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@22,24,25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n+21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@27,29\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">                    a -= 2;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n 21:14-21:14: @29.Goto: goto -&gt; bb30\">                }</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@27,29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @31[4]: _37 = CheckedSub(_5, const 1_i32)\n+23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@31,32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@31,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "2be6bad619ed2f9f3a575b1c1587f02a8ec69e96", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 259, "deletions": 0, "changes": 259, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,259 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>overflow.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:25-16:27: @0[1]: _1 = const 10_i32\n+16:9-16:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:11-17:20: @2[2]: _5 = _1\n+17:11-17:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+17:11-17:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:21: @5[3]: _8 = _1\n+18:12-18:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+18:12-18:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\"><span class=\"annotation\">@6,8,9,10,11,12\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\">            let result = might_overflow(10);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:19-21:28: @7[2]: _28 = _1\n+21:19-21:32: @7[3]: _27 = Lt(move _28, const 5_i32)\n+21:19-21:32: @7[5]: FakeRead(ForMatchedPlace, _27)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\"><span class=\"annotation\">@13,15,16,17,18,19\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\">            let result = might_overflow(1);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@13,15,16,17,18,19</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:10-24:10: @14.Goto: goto -&gt; bb20\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:10-24:10: @20.Goto: goto -&gt; bb21\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:9-25:23: @21[2]: _47 = CheckedSub(_1, const 1_i32)\n+25:9-25:23: @22[0]: _1 = move (_47.0: i32)\"><span class=\"annotation\">@21,22\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n+27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n+28:2-28:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n+27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n+28:2-28:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "44fabaf0d7d270612620eda792b9ae52db19ddad", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html", "status": "added", "additions": 397, "deletions": 0, "changes": 397, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,397 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>overflow.might_overflow - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_overflow(to_add: u32) -&gt; u32 {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:14: @0[3]: _4 = _1\n+5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\n+5:8-5:18: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>to_add &gt; 5<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @3[7]: _10 = &amp;(*_61)\n+6:18-6:47: @3[8]: _9 = &amp;(*_10)\n+6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @3[15]: _16 = ()\n+6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @3[18]: _14 = &amp;(*_60)\n+6:9-6:49: @3[19]: _13 = &amp;(*_14)\n+6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n+6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n+6:9-6:49: @5[5]: _5 = const ()\n+5:19-7:6: @5[7]: _2 = const ()\n+7:6-7:6: @5.Goto: goto -&gt; bb6\"><span class=\"annotation\">@1,3,4,5\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @3[7]: _10 = &amp;(*_61)\n+6:18-6:47: @3[8]: _9 = &amp;(*_10)\n+6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @3[15]: _16 = ()\n+6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @3[18]: _14 = &amp;(*_60)\n+6:9-6:49: @3[19]: _13 = &amp;(*_14)\n+6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n+6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n+6:9-6:49: @5[5]: _5 = const ()\n+5:19-7:6: @5[7]: _2 = const ()\n+7:6-7:6: @5.Goto: goto -&gt; bb6\">        println!(\"this will probably overflow\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @3[7]: _10 = &amp;(*_61)\n+6:18-6:47: @3[8]: _9 = &amp;(*_10)\n+6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @3[15]: _16 = ()\n+6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @3[18]: _14 = &amp;(*_60)\n+6:9-6:49: @3[19]: _13 = &amp;(*_14)\n+6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n+6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n+6:9-6:49: @5[5]: _5 = const ()\n+5:19-7:6: @5[7]: _2 = const ()\n+7:6-7:6: @5.Goto: goto -&gt; bb6\">    }<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2.Goto: goto -&gt; bb6\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\"><span class=\"annotation\">@6,7,8,9,10,11,12,13,14\u298a</span>add_to = u32::MAX - 5;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    println!(\"does {} + {} overflow?\", add_to, to_add);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    let result = to_add + add_to;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    println!(\"continuing after overflow check\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    result</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">}<span class=\"annotation\">\u2989@6,7,8,9,10,11,12,13,14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4a44ca0a97bf530d8716203f319fd19b2e265f05", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,103 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>panic_unwind.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:25-14:27: @0[1]: _1 = const 10_i32\n+14:9-14:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:11-15:20: @2[2]: _5 = _1\n+15:11-15:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+15:11-15:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:12-16:21: @5[3]: _8 = _1\n+16:12-16:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+16:12-16:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n+16:27-18:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n+16:27-18:10: @9[1]: _6 = const ()\">            might_panic(true);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n+16:27-18:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:19-18:28: @7[2]: _11 = _1\n+18:19-18:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n+18:19-18:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n+18:33-20:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n+18:33-20:10: @13[1]: _6 = const ()\">            might_panic(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n+18:33-20:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:10-20:10: @11.Goto: goto -&gt; bb14\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:10-20:10: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n+21:9-21:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n+23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+24:2-24:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n+23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+24:2-24:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "b209ea9eee980837c9eea799eeaf0104f9dd8da1", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,164 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>panic_unwind.might_panic - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_panic(should_panic: bool) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n+5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_panic<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @3[6]: _33 = const might_panic::promoted[3]\n+6:18-6:32: @3[7]: _9 = &amp;(*_33)\n+6:18-6:32: @3[8]: _8 = &amp;(*_9)\n+6:18-6:32: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:34: @3[15]: _15 = ()\n+6:9-6:34: @3[16]: FakeRead(ForMatchedPlace, _15)\n+6:9-6:34: @3[17]: _32 = const might_panic::promoted[2]\n+6:9-6:34: @3[18]: _13 = &amp;(*_32)\n+6:9-6:34: @3[19]: _12 = &amp;(*_13)\n+6:9-6:34: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:34: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+6:9-6:34: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+6:9-6:34: @5[5]: _4 = const ()\n+7:9-7:26: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"panicking...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @3[6]: _33 = const might_panic::promoted[3]\n+6:18-6:32: @3[7]: _9 = &amp;(*_33)\n+6:18-6:32: @3[8]: _8 = &amp;(*_9)\n+6:18-6:32: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:34: @3[15]: _15 = ()\n+6:9-6:34: @3[16]: FakeRead(ForMatchedPlace, _15)\n+6:9-6:34: @3[17]: _32 = const might_panic::promoted[2]\n+6:9-6:34: @3[18]: _13 = &amp;(*_32)\n+6:9-6:34: @3[19]: _12 = &amp;(*_13)\n+6:9-6:34: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:34: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+6:9-6:34: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+6:9-6:34: @5[5]: _4 = const ()\n+7:9-7:26: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb8\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\">    }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "bc3e67b8c9909d4d33ae868f2a9f7e55a9f57241", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -133,9 +133,12 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@13\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@11,13\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @7.Goto: goto -&gt; bb8\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>"}, {"sha": "23b3549984677438fb6019b6cd00939e6f74ee5f", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -79,33 +79,38 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @8[1]: _13 = ((_9 as Some).0: i32)\n 17:9-17:10: @8[3]: _14 = _13\n 17:9-17:10: @8[4]: _7 = move _14\n-17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8\u298a</span>_<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>_<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n 19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n 19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb40]\n 19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@6,8,9\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n 25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            -= 1</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n 25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n 25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        if</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb40]\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @18[1]: _24 = ((_21 as Err).0: ())\n 27:41-27:42: @18[4]: _27 = _24"}, {"sha": "b16355c3339a79a42f9b13ebb9ab87523a2408aa", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -115,9 +115,12 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@12\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n+30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@7,12\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n+30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n+30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@7,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()"}, {"sha": "078f67530fb88938367f87f62498bcb5bc85d5ef", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>yield.main-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 7\"><span class=\"line\">                        <span class=\"code\" style=\"--layer: 0\">|| {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb2]\"><span class=\"annotation\">@0\u298a</span>yield 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:21: @1[1]: _0 = const &quot;foo&quot;\n+11:6-11:6: @1.Return: return\"><span class=\"annotation\">@1\u298a</span>\"foo\"</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:21: @1[1]: _0 = const &quot;foo&quot;\n+11:6-11:6: @1.Return: return\">    }<span class=\"annotation\">\u2989@1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "00b2b35f3ddc4fac40559bb7df05fade5e82db56", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,81 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>yield.main-{closure#1} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\">                        <span class=\"code\" style=\"--layer: 0\">|| {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb6]\"><span class=\"annotation\">@0\u298a</span>yield 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:9-24:16: @1.Yield: _4 = yield(const 2_i32) -&gt; [resume: bb2, drop: bb5]\"><span class=\"annotation\">@1\u298a</span>yield 2<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:9-25:16: @2.Yield: _5 = yield(const 3_i32) -&gt; [resume: bb3, drop: bb4]\"><span class=\"annotation\">@2\u298a</span>yield 3<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:16-26:21: @3[1]: _0 = const &quot;foo&quot;\n+27:6-27:6: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\"foo\"</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:16-26:21: @3[1]: _0 = const &quot;foo&quot;\n+27:6-27:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "f5ea50692bfdd3c268d46e573def3f284d3c4b89", "filename": "src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-base%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,138 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>yield.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:9-8:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1,2\u298a</span>mut generator<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 1;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return \"foo\"</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n+13:11-13:35: @0.Call: _4 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n+13:43-13:45: @1[2]: _6 = ()\n+13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n+13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n+14:9-14:35: @2[3]: _7 = discriminant(_3)\"><span class=\"annotation\">@0,1,2\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n+13:11-13:35: @0.Call: _4 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n+13:43-13:45: @1[2]: _6 = ()\n+13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n+13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n+14:9-14:35: @2[3]: _7 = discriminant(_3)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:39-14:41: @6[0]: _2 = const ()\"><span class=\"annotation\">@4,6,7,8\u298a</span>{}<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:14-15:52: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@5\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:20-17:34: @6[7]: _12 = &amp;mut _1\n+17:11-17:35: @6.Call: _11 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _12) -&gt; [return: bb7, unwind: bb26]\n+17:43-17:45: @7[2]: _13 = ()\n+17:11-17:46: @7.Call: _10 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _11, move _13) -&gt; [return: bb8, unwind: bb26]\n+17:11-17:46: @8[2]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@4,6,7,8\u298a</span>Pin::new(&amp;mut generator).resume(())<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        GeneratorState::Complete(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:34-18:39: @10.Call: _14 = &lt;str as PartialEq&gt;::eq(((_10 as Complete).0: &amp;str), const &quot;foo&quot;) -&gt; [return: bb11, unwind: bb26]\"><span class=\"annotation\">@10,11\u298a</span>\"foo\"<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">) =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:44-18:46: @13[0]: _9 = const ()\"><span class=\"annotation\">@12,13,14,15\u298a</span>{}<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:14-19:52: @9.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@9\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:22: @13[5]: FakeRead(ForLet, _17)\"><span class=\"annotation\">@12,13,14,15\u298a</span>mut generator<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 1;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 2;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 3;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return \"foo\"</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n+29:11-29:35: @13.Call: _20 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n+29:43-29:45: @14[2]: _22 = ()\n+29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n+29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n+30:9-30:35: @15[3]: _23 = discriminant(_19)\"><span class=\"annotation\">@12,13,14,15\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n+29:11-29:35: @13.Call: _20 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n+29:43-29:45: @14[2]: _22 = ()\n+29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n+29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n+30:9-30:35: @15[3]: _23 = discriminant(_19)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:39-30:41: @19[0]: _18 = const ()\"><span class=\"annotation\">@17,19,20,21\u298a</span>{}<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:14-31:52: @18.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@18\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n+33:11-33:35: @19.Call: _26 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n+33:43-33:45: @20[2]: _28 = ()\n+33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n+33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n+34:9-34:35: @21[3]: _29 = discriminant(_25)\"><span class=\"annotation\">@17,19,20,21\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n+33:11-33:35: @19.Call: _26 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n+33:43-33:45: @20[2]: _28 = ()\n+33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n+33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n+34:9-34:35: @21[3]: _29 = discriminant(_25)\">        GeneratorState::Yielded(2)<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:39-34:41: @25[0]: _0 = const ()\"><span class=\"annotation\">@23,25\u298a</span>{}<span class=\"annotation\">\u2989@23,25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:14-35:52: @24.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@24\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @25.Return: return\"><span class=\"annotation\">@23,25\u298a</span>\u2038<span class=\"annotation\">\u2989@23,25</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "a8227cffc60f6747001831a375c7a0004805ec14", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 99, "deletions": 0, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.abort%2Fabort.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,99 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.abort/abort.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>abort.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:25-15:27: @0[1]: _1 = const 10_i32\n+15:9-15:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:11-16:20: @2[2]: _5 = _1\n+16:11-16:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+16:11-16:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:12-17:21: @5[3]: _8 = _1\n+17:12-17:25: @5[4]: _7 = Lt(move _8, const 5_i32)\n+17:12-17:25: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb12]\n+17:26-19:10: @9[1]: _6 = const ()\n+19:10-19:10: @9.Goto: goto -&gt; bb10\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb12]\n+17:26-19:10: @9[1]: _6 = const ()\n+19:10-19:10: @9.Goto: goto -&gt; bb10\">            might_abort(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"18:13-18:31: @8.Call: _9 = might_abort(const false) -&gt; [return: bb9, unwind: bb12]\n+17:26-19:10: @9[1]: _6 = const ()\n+19:10-19:10: @9.Goto: goto -&gt; bb10\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:10-19:10: @7.Goto: goto -&gt; bb10\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:23: @10[2]: _10 = CheckedSub(_1, const 1_i32)\n+20:9-20:23: @11[0]: _1 = move (_10.0: i32)\"><span class=\"annotation\">@10,11\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:8-22:10: @4[4]: _12 = ()\n+22:5-22:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\n+23:2-23:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"22:8-22:10: @4[4]: _12 = ()\n+22:5-22:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _12)\n+23:2-23:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "daef056a19aa1acd90e5400f26f7ae63f355c59d", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.abort%2Fabort.might_abort.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,164 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.abort/abort.might_abort.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>abort.might_abort - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_abort(should_abort: bool) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:8-6:20: @0[1]: _2 = _1\n+6:8-6:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_abort<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @3[7]: _9 = &amp;(*_33)\n+7:18-7:31: @3[8]: _8 = &amp;(*_9)\n+7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @3[15]: _15 = ()\n+7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @3[18]: _13 = &amp;(*_32)\n+7:9-7:33: @3[19]: _12 = &amp;(*_13)\n+7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+7:9-7:33: @5[5]: _4 = const ()\n+8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"aborting...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"7:18-7:31: @3[6]: _33 = const might_abort::promoted[3]\n+7:18-7:31: @3[7]: _9 = &amp;(*_33)\n+7:18-7:31: @3[8]: _8 = &amp;(*_9)\n+7:18-7:31: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+7:9-7:33: @3[15]: _15 = ()\n+7:9-7:33: @3[16]: FakeRead(ForMatchedPlace, _15)\n+7:9-7:33: @3[17]: _32 = const might_abort::promoted[2]\n+7:9-7:33: @3[18]: _13 = &amp;(*_32)\n+7:9-7:33: @3[19]: _12 = &amp;(*_13)\n+7:9-7:33: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+7:9-7:33: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+7:9-7:33: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+7:9-7:33: @5[5]: _4 = const ()\n+8:9-8:37: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics and aborts&quot;) -&gt; bb8\">        panic!(\"panics and aborts\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">    }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:18-10:31: @2[6]: _31 = const might_abort::promoted[1]\n+10:18-10:31: @2[7]: _23 = &amp;(*_31)\n+10:18-10:31: @2[8]: _22 = &amp;(*_23)\n+10:18-10:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+10:9-10:33: @2[15]: _29 = ()\n+10:9-10:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+10:9-10:33: @2[17]: _30 = const might_abort::promoted[0]\n+10:9-10:33: @2[18]: _27 = &amp;(*_30)\n+10:9-10:33: @2[19]: _26 = &amp;(*_27)\n+10:9-10:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+10:9-10:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+10:9-10:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+10:9-10:33: @7[5]: _18 = const ()\n+9:12-11:6: @7[7]: _0 = const ()\n+12:2-12:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "499825445aceaa7eeb01025df79b84fe69a6d9c7", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.assert%2Fassert.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,103 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.assert/assert.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>assert.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:25-10:27: @0[1]: _1 = const 10_i32\n+10:9-10:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:11-11:20: @2[2]: _5 = _1\n+11:11-11:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+11:11-11:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:12-12:21: @5[3]: _8 = _1\n+12:12-12:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+12:12-12:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\">            might_fail_assert(3);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"13:13-13:33: @8.Call: _9 = might_fail_assert(const 3_u32) -&gt; [return: bb9, unwind: bb17]\n+12:27-14:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:19-14:28: @7[2]: _11 = _1\n+14:19-14:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n+14:19-14:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\">            might_fail_assert(2);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:13-15:33: @12.Call: _12 = might_fail_assert(const 2_u32) -&gt; [return: bb13, unwind: bb17]\n+14:33-16:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:10-16:10: @11.Goto: goto -&gt; bb14\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n+17:9-17:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+20:2-20:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:8-19:10: @4[4]: _15 = ()\n+19:5-19:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+20:2-20:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "98be3485a4179c9397bc516e19831896c1eb39e0", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html", "status": "added", "additions": 97, "deletions": 0, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.assert%2Fassert.might_fail_assert.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,97 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.assert/assert.might_fail_assert.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>assert.might_fail_assert - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_fail_assert(one_plus_one: u32) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:14-5:32: @0[6]: _75 = const might_fail_assert::promoted[4]\n+5:14-5:32: @0[7]: _7 = &amp;(*_75)\n+5:14-5:32: @0[8]: _6 = &amp;(*_7)\n+5:14-5:32: @0[9]: _5 = move _6 as &amp;[&amp;str] (Pointer(Unsize))\n+5:34-5:46: @0[17]: _14 = &amp;_1\n+5:5-5:48: @0[18]: _13 = (move _14,)\n+5:5-5:48: @0[20]: FakeRead(ForMatchedPlace, _13)\n+5:5-5:48: @0[22]: _15 = (_13.0: &amp;u32)\n+5:5-5:48: @0[25]: _17 = &amp;(*_15)\n+5:5-5:48: @0[27]: _18 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+5:5-5:48: @0.Call: _16 = ArgumentV1::new::&lt;u32&gt;(move _17, move _18) -&gt; [return: bb1, unwind: bb13]\n+5:5-5:48: @1[2]: _12 = [move _16]\n+5:5-5:48: @1[5]: _11 = &amp;_12\n+5:5-5:48: @1[6]: _10 = &amp;(*_11)\n+5:5-5:48: @1[7]: _9 = move _10 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+5:5-5:48: @1.Call: _4 = Arguments::new_v1(move _5, move _9) -&gt; [return: bb2, unwind: bb13]\n+5:5-5:48: @2.Call: _3 = _print(move _4) -&gt; [return: bb3, unwind: bb13]\n+5:5-5:48: @3[6]: _2 = const ()\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>println!(\"does 1 + 1 = {}?\", one_plus_one);<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    assert_eq!(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"6:16-6:21: @3[11]: _23 = CheckedAdd(const 1_u32, const 1_u32)\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>1 + 1<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\">, one_plus_one, </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:37-6:61: @7[30]: _72 = const might_fail_assert::promoted[1]\n+6:37-6:61: @7[31]: _52 = &amp;(*_72)\n+6:37-6:61: @7[32]: _51 = &amp;(*_52)\n+6:37-6:61: @7[33]: _50 = move _51 as &amp;[&amp;str] (Pointer(Unsize))\"><span class=\"annotation\">@5,7,8,9,10,11,12\u298a</span>\"the argument was wrong\"<span class=\"annotation\">\u2989@5,7,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\">);</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:2-7:2: @6.Return: return\"><span class=\"annotation\">@6\u298a</span>\u2038<span class=\"annotation\">\u2989@6</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "31646f8ce81dcec6731ecfd65a69e208635e352a", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\">                                 <span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:38-15:74: @1[3]: _15 = (move _16,)\n+15:38-15:74: @1[5]: FakeRead(ForMatchedPlace, _15)\n+15:38-15:74: @1[7]: _27 = (_15.0: &amp;std::fmt::Arguments)\n+15:38-15:74: @1[10]: _29 = &amp;(*_27)\n+15:38-15:74: @1[12]: _30 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+15:38-15:74: @1.Call: _28 = ArgumentV1::new::&lt;Arguments&gt;(move _29, move _30) -&gt; [return: bb2, unwind: bb4]\n+15:38-15:74: @2[2]: _14 = [move _28]\n+15:38-15:74: @2[5]: _13 = &amp;_14\n+15:38-15:74: @2[6]: _12 = &amp;(*_13)\n+15:38-15:74: @2[7]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:38-15:74: @2.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb4]\n+15:37-15:74: @3[2]: _5 = &amp;_6\n+15:37-15:74: @3[3]: _4 = &amp;(*_5)\n+15:9-15:75: @3.Call: begin_panic_fmt(move _4) -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>$crate::rt::begin_panic_fmt(&amp;$crate::format_args!($fmt, $($arg)+))<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span></div>\n+</body>\n+</html>"}, {"sha": "ddc791f074fbbf1a013b3aa2d692f6ea25351f96", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#1}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#1} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\">                                 <span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:38-15:74: @1[3]: _15 = (move _16,)\n+15:38-15:74: @1[5]: FakeRead(ForMatchedPlace, _15)\n+15:38-15:74: @1[7]: _27 = (_15.0: &amp;std::fmt::Arguments)\n+15:38-15:74: @1[10]: _29 = &amp;(*_27)\n+15:38-15:74: @1[12]: _30 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+15:38-15:74: @1.Call: _28 = ArgumentV1::new::&lt;Arguments&gt;(move _29, move _30) -&gt; [return: bb2, unwind: bb4]\n+15:38-15:74: @2[2]: _14 = [move _28]\n+15:38-15:74: @2[5]: _13 = &amp;_14\n+15:38-15:74: @2[6]: _12 = &amp;(*_13)\n+15:38-15:74: @2[7]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:38-15:74: @2.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb4]\n+15:37-15:74: @3[2]: _5 = &amp;_6\n+15:37-15:74: @3[3]: _4 = &amp;(*_5)\n+15:9-15:75: @3.Call: begin_panic_fmt(move _4) -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>$crate::rt::begin_panic_fmt(&amp;$crate::format_args!($fmt, $($arg)+))<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span></div>\n+</body>\n+</html>"}, {"sha": "709b87fc50198c1f4bfaffcce03e42bcf3b00173", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#2}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,89 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%232%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#2} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 13\"><span class=\"line\">                                 <span class=\"code\" style=\"--layer: 0\">{</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:38-15:74: @1[3]: _15 = (move _16,)\n+15:38-15:74: @1[5]: FakeRead(ForMatchedPlace, _15)\n+15:38-15:74: @1[7]: _27 = (_15.0: &amp;std::fmt::Arguments)\n+15:38-15:74: @1[10]: _29 = &amp;(*_27)\n+15:38-15:74: @1[12]: _30 = &lt;Arguments as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r std::fmt::Arguments, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+15:38-15:74: @1.Call: _28 = ArgumentV1::new::&lt;Arguments&gt;(move _29, move _30) -&gt; [return: bb2, unwind: bb4]\n+15:38-15:74: @2[2]: _14 = [move _28]\n+15:38-15:74: @2[5]: _13 = &amp;_14\n+15:38-15:74: @2[6]: _12 = &amp;(*_13)\n+15:38-15:74: @2[7]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+15:38-15:74: @2.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb3, unwind: bb4]\n+15:37-15:74: @3[2]: _5 = &amp;_6\n+15:37-15:74: @3[3]: _4 = &amp;(*_5)\n+15:9-15:75: @3.Call: begin_panic_fmt(move _4) -&gt; bb4\"><span class=\"annotation\">@0,1,2,3\u298a</span>$crate::rt::begin_panic_fmt(&amp;$crate::format_args!($fmt, $($arg)+))<span class=\"annotation\">\u2989@0,1,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span></div>\n+</body>\n+</html>"}, {"sha": "abd2621481a3531b827b2c266da5f48e78b45378", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.executor-block_on-VTABLE-{closure#3}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on-VTABLE-%7Bclosure%233%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on-VTABLE-{closure#3} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 52\"><span class=\"line\">            <span class=\"code\" style=\"--layer: 0\">|_| </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:17-53:19: @0[0]: _0 = ()\n+53:19-53:19: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>()<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "9d71d8ccc6e08436b264da416915cb4218dfd53a", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html", "status": "added", "additions": 226, "deletions": 0, "changes": 226, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.executor-block_on.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,226 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.executor-block_on.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.executor-block_on - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 45\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">pub fn block_on&lt;F: Future&gt;(mut future: F) -&gt; F::Output {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\"><span class=\"annotation\">@0,1,2,3,4,5\u298a</span>mut future = unsafe { Pin::new_unchecked(&amp;mut future) };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\"></span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        static VTABLE: RawWakerVTable = RawWakerVTable::new(</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"clone\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| unimplemented!(\"wake_by_ref\"),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">            |_| (),</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        );</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &amp;VTABLE)) };</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"47:54-47:65: @0[2]: _3 = &amp;mut _1\n+47:35-47:66: @0.Call: _2 = Pin::&lt;&amp;mut F&gt;::new_unchecked(move _3) -&gt; [return: bb1, unwind: bb20]\n+47:13-47:23: @1[1]: FakeRead(ForLet, _2)\n+55:60-55:77: @1.Call: _6 = null::&lt;()&gt;() -&gt; [return: bb2, unwind: bb20]\n+55:80-55:86: @2[3]: _9 = const {alloc0: &amp;RawWakerVTable}\n+55:79-55:86: @2[4]: _8 = &amp;(*_9)\n+55:79-55:86: @2[5]: _7 = &amp;(*_8)\n+55:46-55:87: @2.Call: _5 = RawWaker::new(move _6, move _7) -&gt; [return: bb3, unwind: bb20]\n+55:30-55:88: @3.Call: _4 = Waker::from_raw(move _5) -&gt; [return: bb4, unwind: bb20]\n+55:13-55:18: @4[1]: FakeRead(ForLet, _4)\n+56:47-56:53: @4[7]: _12 = &amp;_4\n+56:47-56:53: @4[8]: _11 = &amp;(*_12)\n+56:27-56:54: @4.Call: _10 = Context::from_waker(move _11) -&gt; [return: bb5, unwind: bb19]\n+56:13-56:24: @5[1]: FakeRead(ForLet, _10)\">        let mut context = Context::from_waker(&amp;waker)<span class=\"annotation\">\u2989@0,1,2,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        loop {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if let Poll::Ready(</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"59:32-59:35: @12[1]: _20 = move ((_14 as Ready).0: &lt;F as std::future::Future&gt;::Output)\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">) = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:39-59:45: @7[3]: _16 = &amp;mut _2\n+59:39-59:54: @7.Call: _15 = Pin::&lt;&amp;mut F&gt;::as_mut(move _16) -&gt; [return: bb8, unwind: bb19]\n+59:60-59:72: @8[3]: _18 = &amp;mut _10\n+59:60-59:72: @8[4]: _17 = &amp;mut (*_18)\n+59:39-59:73: @8.Call: _14 = &lt;F as Future&gt;::poll(move _15, move _17) -&gt; [return: bb9, unwind: bb19]\n+59:39-59:73: @9[2]: FakeRead(ForMatchedPlace, _14)\"><span class=\"annotation\">@6,7,8,9\u298a</span>future.as_mut().poll(&amp;mut context)<span class=\"annotation\">\u2989@6,7,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                break </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:23-60:26: @12[2]: _0 = move _20\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>val<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"62:10-62:10: @13.Goto: goto -&gt; bb6\"><span class=\"annotation\">@11,13\u298a</span>\u2038<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"63:6-63:6: @17.Return: return\"><span class=\"annotation\">@10,12,14,15,16,17\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12,14,15,16,17</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "779f67fd7c10158f49c983a78a5a79a2019d985b", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.f-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.f-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.f-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\">                   <span class=\"code\" style=\"--layer: 0\">{ </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:22-5:23: @0[0]: _0 = const 1_u8\n+5:25-5:25: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>1 }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "050ae67efc98ef30fc54c0d89cd862a6aa5656d6", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.f.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.f.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.f - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 4\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn f() -&gt; u8 { 1 }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:25-5:25: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "d176a607d3b5444ca58c89ad0dd4e2cf47c07a62", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.foo-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,75 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.foo-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.foo-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\">                             <span class=\"code\" style=\"--layer: 0\">{ </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:32-7:43: @0[0]: _0 = [const false; 10]\n+7:45-7:45: @0.Return: return\"><span class=\"annotation\">@0\u298a</span>[false; 10] }<span class=\"annotation\">\u2989@0</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "64eeaefa89468291bb3046317704f001699c4dec", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.foo.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,74 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.foo.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.foo - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn foo() -&gt; [bool; 10] { [false; 10] }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:45-7:45: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4e894eecd16aee967a5e30d77461c0b15a0d9e9f", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.g-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.g-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.g-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\">                      <span><span class=\"code even\" style=\"--layer: 1\" title=\"10:11-10:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"10:11-10:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:10: @16[3]: _4 = _3\"><span class=\"annotation\">@16\u298a</span>y<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:14-11:17: @2.Call: _8 = f() -&gt; [return: bb3, unwind: bb30]\n+11:14-11:17: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>f()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:27-11:28: @14[2]: _24 = (*_5)\"><span class=\"annotation\">@9,12,14,15\u298a</span>y<span class=\"annotation\">\u2989@9,12,14,15</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"11:28-11:28: @17.Goto: goto -&gt; bb1\"><span class=\"annotation\">@17\u298a</span>\u2038<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:32-11:34: @16[4]: _0 = ()\"><span class=\"annotation\">@16\u298a</span>()<span class=\"annotation\">\u2989@16</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"12:14-12:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:2-14:2: @19.Return: return\"><span class=\"annotation\">@18,19\u298a</span>\u2038<span class=\"annotation\">\u2989@18,19</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4788562a9d4fda006c55777571beec0d83c5fb66", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.g.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.g.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.g - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 8\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">pub async fn g(x: u8) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:2-14:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "de48232efde620ef02d6acff789a03bd59da8e1e", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.h-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 80, "deletions": 0, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,80 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.h-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.h-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">                     <span><span class=\"code even\" style=\"--layer: 1\" title=\"19:11-19:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:11-19:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:14-20:19: @2.Call: _8 = foo() -&gt; [return: bb3, unwind: bb33]\n+20:14-20:19: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>foo()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await[</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:26-20:27: @14[2]: _24 = (*_5)\"><span class=\"annotation\">@9,12,14,15,16\u298a</span>y<span class=\"annotation\">\u2989@9,12,14,15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">]</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:28-20:28: @18.Goto: goto -&gt; bb1\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:32-20:34: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:2-23:2: @20.Return: return\"><span class=\"annotation\">@19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@19,20</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "83b0a3e0d43aa2025f9e2612bdfc540ff1c344a7", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.h.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.h.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.h - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn h(x: usize) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if foo().await[y] =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:2-23:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "71397d39625399beac5e0dd4cb5f3dd3c595995c", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.i-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,82 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.i-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.i-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 24\"><span class=\"line\">                  <span><span class=\"code even\" style=\"--layer: 1\" title=\"26:11-26:12: @0[3]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0,2,3\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"26:11-26:12: @0[3]: FakeRead(ForMatchedPlace, _3)\">    match x<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:9-27:10: @17[3]: _4 = _3\"><span class=\"annotation\">@17\u298a</span>y<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\"> if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:14-27:17: @2.Call: _8 = f() -&gt; [return: bb3, unwind: bb33]\n+27:14-27:17: @3[0]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@0,2,3\u298a</span>f()<span class=\"annotation\">\u2989@0,2,3</span></span></span><span class=\"code\" style=\"--layer: 0\">.await == </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:27-27:28: @14[3]: _25 = (*_5)\n+27:27-27:32: @14[4]: _26 = CheckedAdd(_25, const 1_u8)\n+27:27-27:32: @15[0]: _24 = move (_26.0: u8)\"><span class=\"annotation\">@9,12,14,15,16\u298a</span>y + 1<span class=\"annotation\">\u2989@9,12,14,15,16</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:32-27:32: @18.Goto: goto -&gt; bb1\"><span class=\"annotation\">@18\u298a</span>\u2038<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:36-27:38: @17[4]: _0 = ()\"><span class=\"annotation\">@17\u298a</span>()<span class=\"annotation\">\u2989@17</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"28:14-28:16: @1[0]: _0 = ()\"><span class=\"annotation\">@1\u298a</span>()<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:2-30:2: @20.Return: return\"><span class=\"annotation\">@19,20\u298a</span>\u2038<span class=\"annotation\">\u2989@19,20</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "55efca7448176dc190122bb583c8ba99a1a4cb13", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.i.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.i.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.i - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 24\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">async fn i(x: u8) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match x {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        y if f().await == y + 1 =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; (),</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:2-30:2: @1.Return: return\"><span class=\"annotation\">@0,1\u298a</span>\u2038<span class=\"annotation\">\u2989@0,1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "2f14339d9e95b03fe9ebbb1cf1f38b20ea1dbb63", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 133, "deletions": 0, "changes": 133, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.async%2Fasync.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,133 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.async/async.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>async.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 31\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\"><span class=\"annotation\">@0,1,2,3,4,5,6,7,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    let _ = g(10);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    let _ = h(9);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    let mut future = Box::pin(i(8));</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">    executor::block_on(future.as_mut());</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:13-33:18: @0.Call: _1 = g(const 10_u8) -&gt; [return: bb1, unwind: bb12]\n+34:13-34:17: @2.Call: _2 = h(const 9_usize) -&gt; [return: bb3, unwind: bb12]\n+35:31-35:35: @4.Call: _4 = i(const 8_u8) -&gt; [return: bb5, unwind: bb12]\n+35:22-35:36: @5.Call: _3 = Box::&lt;impl Future&gt;::pin(move _4) -&gt; [return: bb6, unwind: bb11]\n+35:9-35:19: @6[1]: FakeRead(ForLet, _3)\n+36:24-36:30: @6[5]: _7 = &amp;mut _3\n+36:24-36:39: @6.Call: _6 = Pin::&lt;Box&lt;impl Future&gt;&gt;::as_mut(move _7) -&gt; [return: bb7, unwind: bb10]\n+36:5-36:40: @7.Call: _5 = block_on::&lt;Pin&lt;&amp;mut impl Future&gt;&gt;(move _6) -&gt; [return: bb8, unwind: bb10]\n+32:11-37:2: @8[2]: _0 = const ()\n+37:2-37:2: @9.Return: return\">}<span class=\"annotation\">\u2989@0,1,2,3,4,5,6,7,8,9</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "09adc12cefdb2cfaef5dd6d2961de9b82e28b2fa", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.conditions/conditions.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 204, "deletions": 114, "changes": 318, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.conditions%2Fconditions.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -87,10 +87,12 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:9-10:10: @25[0]: FakeRead(ForLet, _4)\"><span class=\"annotation\">@25\u298a</span>x<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:16-10:25: @4[5]: _6 = _1\n 10:16-10:29: @4[6]: _5 = Gt(move _6, const 7_u32)\n 10:16-10:29: @4[8]: FakeRead(ForMatchedPlace, _5)\"><span class=\"annotation\">@4\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@4</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@8\u298a</span>countdown -= 4;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n-12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\n+11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\"><span class=\"annotation\">@5,7,8\u298a</span>countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"11:9-11:23: @7[0]: _7 = CheckedSub(_1, const 4_u32)\n+11:9-11:23: @8[0]: _1 = move (_7.0: u32)\n+12:9-12:10: @8[1]: _4 = const B\">        B<span class=\"annotation\">\u2989@5,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:15-13:24: @6[2]: _9 = _1\n 13:15-13:28: @6[3]: _8 = Gt(move _9, const 2_u32)\n 13:15-13:28: @6[5]: FakeRead(ForMatchedPlace, _8)\"><span class=\"annotation\">@6\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@6</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n@@ -106,10 +108,12 @@\n <span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:13-15:26: @22[0]: _1 = const 0_u32\n 14:61-16:10: @22[1]: _10 = const ()\n 16:10-16:10: @22.Goto: goto -&gt; bb23\">        }<span class=\"annotation\">\u2989@20,22</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"16:10-16:10: @21.Goto: goto -&gt; bb23\"><span class=\"annotation\">@21\u298a</span>\u2038<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@24\u298a</span>countdown -= 5;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n-18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\n+17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\"><span class=\"annotation\">@23,24\u298a</span>countdown -= 5;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"17:9-17:23: @23[2]: _19 = CheckedSub(_1, const 5_u32)\n+17:9-17:23: @24[0]: _1 = move (_19.0: u32)\n+18:9-18:18: @24[1]: _4 = _1\">        countdown<span class=\"annotation\">\u2989@23,24</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:9-20:15: @10[0]: _0 = const ()\"><span class=\"annotation\">@10\u298a</span>return<span class=\"annotation\">\u2989@10</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n@@ -129,9 +133,15 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"28:8-28:17: @29[5]: _26 = _21\n 28:8-28:21: @29[6]: _25 = Gt(move _26, const 7_i32)\n-28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @33[0]: _21 = move (_27.0: i32)\"><span class=\"annotation\">@33\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@33</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n+28:8-28:21: @29[8]: FakeRead(ForMatchedPlace, _25)\"><span class=\"annotation\">@29\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@29</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @33[1]: _24 = const ()\"><span class=\"annotation\">@30,32,33\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @33[1]: _24 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"29:9-29:23: @32[0]: _27 = CheckedSub(_21, const 4_i32)\n+29:9-29:23: @33[0]: _21 = move (_27.0: i32)\n+28:22-30:6: @33[1]: _24 = const ()\">    }<span class=\"annotation\">\u2989@30,32,33</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:15-30:24: @31[2]: _29 = _21\n 30:15-30:28: @31[3]: _28 = Gt(move _29, const 2_i32)\n 30:15-30:28: @31[5]: FakeRead(ForMatchedPlace, _28)\"><span class=\"annotation\">@31\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@31</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"31:12-31:21: @36[5]: _34 = _21\n@@ -146,118 +156,198 @@\n <span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"32:13-32:26: @47[0]: _21 = const 0_i32\n 31:61-33:10: @47[1]: _30 = const ()\n 33:10-33:10: @47.Goto: goto -&gt; bb48\">        }<span class=\"annotation\">\u2989@45,47</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:10-33:10: @46.Goto: goto -&gt; bb48\"><span class=\"annotation\">@46\u298a</span>\u2038<span class=\"annotation\">\u2989@46</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:9-34:23: @48[2]: _39 = CheckedSub(_21, const 5_i32)\n+34:9-34:23: @49[0]: _21 = move (_39.0: i32)\"><span class=\"annotation\">@48,49\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@48,49</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"36:9-36:15: @35[0]: _0 = const ()\"><span class=\"annotation\">@35\u298a</span>return<span class=\"annotation\">\u2989@35</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:25-39:26: @50[3]: _41 = const 0_i32\n-39:9-39:22: @50[4]: FakeRead(ForLet, _41)\"><span class=\"annotation\">@50\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"40:8-40:12: @50[7]: _43 = const true\n-40:8-40:12: @50[8]: FakeRead(ForMatchedPlace, _43)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\"><span class=\"annotation\">@51,53\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">        countdown = 1;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:9-41:22: @53[0]: _41 = const 1_i32\n-40:13-42:6: @53[1]: _42 = const ()\n-42:6-42:6: @53.Goto: goto -&gt; bb54\">    }<span class=\"annotation\">\u2989@51,53</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:6-42:6: @52.Goto: goto -&gt; bb54\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"39:8-39:12: @50[4]: _42 = const true\n+39:8-39:12: @50[5]: FakeRead(ForMatchedPlace, _42)\"><span class=\"annotation\">@50\u298a</span>true<span class=\"annotation\">\u2989@50</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // Demonstrate the difference with `TerminatorKind::Assert` as of 2020-11-15. Assert is no</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // longer treated as a `BasicCoverageBlock` terminator, which changed the coverage region,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // for the executed `then` block above, to include the closing brace on line 30. That</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // changed the line count, but the coverage code region (for the `else if` condition) is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // still valid.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        //</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // Note that `if` (then) and `else` blocks include the closing brace in their coverage</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // code regions when the last line in the block ends in a semicolon, because the Rust</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // compiler inserts a `StatementKind::Assign` to assign `const ()` to a `Place`, for the</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // empty value for the executed block. When the last line does not end in a semicolon</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // (that is, when the block actually results in a value), the additional `Assign` is not</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // generated, and the brace is not included.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:29-52:30: @53[1]: _43 = const 0_i32\n+52:13-52:26: @53[2]: FakeRead(ForLet, _43)\"><span class=\"annotation\">@51,53\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"53:12-53:16: @53[5]: _45 = const true\n+53:12-53:16: @53[6]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@51,53\u298a</span>true<span class=\"annotation\">\u2989@51,53</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"54:13-54:27: @56[0]: _43 = const 10_i32\n+53:17-55:10: @56[1]: _44 = const ()\n+55:10-55:10: @56.Goto: goto -&gt; bb57\"><span class=\"annotation\">@54,56\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"54:13-54:27: @56[0]: _43 = const 10_i32\n+53:17-55:10: @56[1]: _44 = const ()\n+55:10-55:10: @56.Goto: goto -&gt; bb57\">            countdown = 10;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"54:13-54:27: @56[0]: _43 = const 10_i32\n+53:17-55:10: @56[1]: _44 = const ()\n+55:10-55:10: @56.Goto: goto -&gt; bb57\">        }<span class=\"annotation\">\u2989@54,56</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"55:10-55:10: @55.Goto: goto -&gt; bb57\"><span class=\"annotation\">@55\u298a</span>\u2038<span class=\"annotation\">\u2989@55</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"44:9-44:10: @77[0]: FakeRead(ForLet, _44)\"><span class=\"annotation\">@77\u298a</span>z<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"44:16-44:25: @54[5]: _46 = _41\n-44:16-44:29: @54[6]: _45 = Gt(move _46, const 7_i32)\n-44:16-44:29: @54[8]: FakeRead(ForMatchedPlace, _45)\"><span class=\"annotation\">@54\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@54</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"45:9-45:23: @58[0]: _41 = move (_47.0: i32)\"><span class=\"annotation\">@58\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@58</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"46:15-46:24: @56[2]: _49 = _41\n-46:15-46:28: @56[3]: _48 = Gt(move _49, const 2_i32)\n-46:15-46:28: @56[5]: FakeRead(ForMatchedPlace, _48)\"><span class=\"annotation\">@56\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@56</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:12-47:21: @61[5]: _54 = _41\n-47:12-47:25: @61[6]: _53 = Lt(move _54, const 1_i32)\"><span class=\"annotation\">@59,61\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@59,61</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:29-47:38: @68[2]: _56 = _41\n-47:29-47:42: @68[3]: _55 = Gt(move _56, const 5_i32)\"><span class=\"annotation\">@68\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@68</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:42-47:42: @66.Goto: goto -&gt; bb69\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:42-47:42: @67.Goto: goto -&gt; bb69\"><span class=\"annotation\">@67\u298a</span>\u2038<span class=\"annotation\">\u2989@67</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:46-47:55: @64[2]: _58 = _41\n-47:46-47:60: @64[3]: _57 = Ne(move _58, const 9_i32)\"><span class=\"annotation\">@64\u298a</span>countdown != 9<span class=\"annotation\">\u2989@64</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"47:60-47:60: @62.Goto: goto -&gt; bb65\"><span class=\"annotation\">@62\u298a</span>\u2038<span class=\"annotation\">\u2989@62</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"47:60-47:60: @63.Goto: goto -&gt; bb65\"><span class=\"annotation\">@63\u298a</span>\u2038<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\"><span class=\"annotation\">@70,72\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"48:13-48:26: @72[0]: _41 = const 0_i32\n-47:61-49:10: @72[1]: _50 = const ()\n-49:10-49:10: @72.Goto: goto -&gt; bb73\">        }<span class=\"annotation\">\u2989@70,72</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"49:10-49:10: @71.Goto: goto -&gt; bb73\"><span class=\"annotation\">@71\u298a</span>\u2038<span class=\"annotation\">\u2989@71</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"50:9-50:23: @74[0]: _41 = move (_59.0: i32)\"><span class=\"annotation\">@74\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:12-57:21: @57[4]: _47 = _43\n+57:12-57:25: @57[5]: _46 = Gt(move _47, const 7_i32)\n+57:12-57:25: @57[7]: FakeRead(ForMatchedPlace, _46)\"><span class=\"annotation\">@57\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@57</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"58:13-58:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n+58:13-58:27: @61[0]: _43 = move (_48.0: i32)\n+57:26-59:10: @61[1]: _41 = const ()\"><span class=\"annotation\">@58,60,61\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"58:13-58:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n+58:13-58:27: @61[0]: _43 = move (_48.0: i32)\n+57:26-59:10: @61[1]: _41 = const ()\">            countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"58:13-58:27: @60[0]: _48 = CheckedSub(_43, const 4_i32)\n+58:13-58:27: @61[0]: _43 = move (_48.0: i32)\n+57:26-59:10: @61[1]: _41 = const ()\">        }<span class=\"annotation\">\u2989@58,60,61</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // The closing brace of the `then` branch is now included in the coverage region, and shown</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // as \"executed\" (giving its line a count of 1 here). Since, in the original version above,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // the closing brace shares the same line as the `else if` conditional expression (which is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // not executed if the first `then` condition is true), only the condition's code region is</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        // marked with a count of 0 now.</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:17-65:26: @59[2]: _50 = _43\n+65:17-65:30: @59[3]: _49 = Gt(move _50, const 2_i32)\n+65:17-65:30: @59[5]: FakeRead(ForMatchedPlace, _49)\"><span class=\"annotation\">@59\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@59</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:16-66:25: @64[5]: _55 = _43\n+66:16-66:29: @64[6]: _54 = Lt(move _55, const 1_i32)\"><span class=\"annotation\">@62,64\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@62,64</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:33-66:42: @71[2]: _57 = _43\n+66:33-66:46: @71[3]: _56 = Gt(move _57, const 5_i32)\"><span class=\"annotation\">@71\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@71</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:46-66:46: @69.Goto: goto -&gt; bb72\"><span class=\"annotation\">@69\u298a</span>\u2038<span class=\"annotation\">\u2989@69</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:46-66:46: @70.Goto: goto -&gt; bb72\"><span class=\"annotation\">@70\u298a</span>\u2038<span class=\"annotation\">\u2989@70</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:50-66:59: @67[2]: _59 = _43\n+66:50-66:64: @67[3]: _58 = Ne(move _59, const 9_i32)\"><span class=\"annotation\">@67\u298a</span>countdown != 9<span class=\"annotation\">\u2989@67</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"66:64-66:64: @65.Goto: goto -&gt; bb68\"><span class=\"annotation\">@65\u298a</span>\u2038<span class=\"annotation\">\u2989@65</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"66:64-66:64: @66.Goto: goto -&gt; bb68\"><span class=\"annotation\">@66\u298a</span>\u2038<span class=\"annotation\">\u2989@66</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:17-67:30: @75[0]: _43 = const 0_i32\n+66:65-68:14: @75[1]: _51 = const ()\n+68:14-68:14: @75.Goto: goto -&gt; bb76\"><span class=\"annotation\">@73,75\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"67:17-67:30: @75[0]: _43 = const 0_i32\n+66:65-68:14: @75[1]: _51 = const ()\n+68:14-68:14: @75.Goto: goto -&gt; bb76\">                countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"67:17-67:30: @75[0]: _43 = const 0_i32\n+66:65-68:14: @75[1]: _51 = const ()\n+68:14-68:14: @75.Goto: goto -&gt; bb76\">            }<span class=\"annotation\">\u2989@73,75</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"68:14-68:14: @74.Goto: goto -&gt; bb76\"><span class=\"annotation\">@74\u298a</span>\u2038<span class=\"annotation\">\u2989@74</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"69:13-69:27: @76[2]: _60 = CheckedSub(_43, const 5_i32)\n+69:13-69:27: @77[0]: _43 = move (_60.0: i32)\"><span class=\"annotation\">@76,77\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@76,77</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        } else {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"71:13-71:19: @63[0]: _0 = const ()\"><span class=\"annotation\">@63\u298a</span>return<span class=\"annotation\">\u2989@63</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"73:6-73:6: @78.Goto: goto -&gt; bb79\"><span class=\"annotation\">@78\u298a</span>\u2038<span class=\"annotation\">\u2989@78</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"73:6-73:6: @52.Goto: goto -&gt; bb79\"><span class=\"annotation\">@52\u298a</span>\u2038<span class=\"annotation\">\u2989@52</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"75:25-75:26: @79[3]: _62 = const 0_i32\n+75:9-75:22: @79[4]: FakeRead(ForLet, _62)\"><span class=\"annotation\">@79\u298a</span>mut countdown = 0<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"76:8-76:12: @79[7]: _64 = const true\n+76:8-76:12: @79[8]: FakeRead(ForMatchedPlace, _64)\"><span class=\"annotation\">@79\u298a</span>true<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:22: @82[0]: _62 = const 1_i32\n+76:13-78:6: @82[1]: _63 = const ()\n+78:6-78:6: @82.Goto: goto -&gt; bb83\"><span class=\"annotation\">@80,82\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:22: @82[0]: _62 = const 1_i32\n+76:13-78:6: @82[1]: _63 = const ()\n+78:6-78:6: @82.Goto: goto -&gt; bb83\">        countdown = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"77:9-77:22: @82[0]: _62 = const 1_i32\n+76:13-78:6: @82[1]: _63 = const ()\n+78:6-78:6: @82.Goto: goto -&gt; bb83\">    }<span class=\"annotation\">\u2989@80,82</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"78:6-78:6: @81.Goto: goto -&gt; bb83\"><span class=\"annotation\">@81\u298a</span>\u2038<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"80:9-80:10: @106[0]: FakeRead(ForLet, _65)\"><span class=\"annotation\">@106\u298a</span>z<span class=\"annotation\">\u2989@106</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"80:16-80:25: @83[5]: _67 = _62\n+80:16-80:29: @83[6]: _66 = Gt(move _67, const 7_i32)\n+80:16-80:29: @83[8]: FakeRead(ForMatchedPlace, _66)\"><span class=\"annotation\">@83\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n+81:9-81:23: @87[0]: _62 = move (_68.0: i32)\n+80:30-82:6: @87[1]: _65 = const ()\"><span class=\"annotation\">@84,86,87\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n+81:9-81:23: @87[0]: _62 = move (_68.0: i32)\n+80:30-82:6: @87[1]: _65 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"81:9-81:23: @86[0]: _68 = CheckedSub(_62, const 4_i32)\n+81:9-81:23: @87[0]: _62 = move (_68.0: i32)\n+80:30-82:6: @87[1]: _65 = const ()\">    }<span class=\"annotation\">\u2989@84,86,87</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"82:15-82:24: @85[2]: _70 = _62\n+82:15-82:28: @85[3]: _69 = Gt(move _70, const 2_i32)\n+82:15-82:28: @85[5]: FakeRead(ForMatchedPlace, _69)\"><span class=\"annotation\">@85\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@85</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:12-83:21: @90[5]: _75 = _62\n+83:12-83:25: @90[6]: _74 = Lt(move _75, const 1_i32)\"><span class=\"annotation\">@88,90\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@88,90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:29-83:38: @97[2]: _77 = _62\n+83:29-83:42: @97[3]: _76 = Gt(move _77, const 5_i32)\"><span class=\"annotation\">@97\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@97</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:42-83:42: @95.Goto: goto -&gt; bb98\"><span class=\"annotation\">@95\u298a</span>\u2038<span class=\"annotation\">\u2989@95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:42-83:42: @96.Goto: goto -&gt; bb98\"><span class=\"annotation\">@96\u298a</span>\u2038<span class=\"annotation\">\u2989@96</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:46-83:55: @93[2]: _79 = _62\n+83:46-83:60: @93[3]: _78 = Ne(move _79, const 9_i32)\"><span class=\"annotation\">@93\u298a</span>countdown != 9<span class=\"annotation\">\u2989@93</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"83:60-83:60: @91.Goto: goto -&gt; bb94\"><span class=\"annotation\">@91\u298a</span>\u2038<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"83:60-83:60: @92.Goto: goto -&gt; bb94\"><span class=\"annotation\">@92\u298a</span>\u2038<span class=\"annotation\">\u2989@92</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"84:13-84:26: @101[0]: _62 = const 0_i32\n+83:61-85:10: @101[1]: _71 = const ()\n+85:10-85:10: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@99,101\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"84:13-84:26: @101[0]: _62 = const 0_i32\n+83:61-85:10: @101[1]: _71 = const ()\n+85:10-85:10: @101.Goto: goto -&gt; bb102\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"84:13-84:26: @101[0]: _62 = const 0_i32\n+83:61-85:10: @101[1]: _71 = const ()\n+85:10-85:10: @101.Goto: goto -&gt; bb102\">        }<span class=\"annotation\">\u2989@99,101</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"85:10-85:10: @100.Goto: goto -&gt; bb102\"><span class=\"annotation\">@100\u298a</span>\u2038<span class=\"annotation\">\u2989@100</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"86:9-86:23: @102[2]: _80 = CheckedSub(_62, const 5_i32)\n+86:9-86:23: @103[0]: _62 = move (_80.0: i32)\"><span class=\"annotation\">@102,103\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@102,103</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\"><span class=\"annotation\">@60,75,76\u298a</span>should_be_reachable = countdown;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"52:35-52:44: @60[1]: _61 = _41\n-52:13-52:32: @60[2]: FakeRead(ForLet, _61)\n-53:18-53:27: @60[9]: _92 = const main::promoted[1]\n-53:18-53:27: @60[10]: _67 = &amp;(*_92)\n-53:18-53:27: @60[11]: _66 = &amp;(*_67)\n-53:18-53:27: @60[12]: _65 = move _66 as &amp;[&amp;str] (Pointer(Unsize))\n-53:9-53:29: @60[18]: _73 = ()\n-53:9-53:29: @60[19]: FakeRead(ForMatchedPlace, _73)\n-53:9-53:29: @60[20]: _91 = const main::promoted[0]\n-53:9-53:29: @60[21]: _71 = &amp;(*_91)\n-53:9-53:29: @60[22]: _70 = &amp;(*_71)\n-53:9-53:29: @60[23]: _69 = move _70 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n-53:9-53:29: @60.Call: _64 = Arguments::new_v1(move _65, move _69) -&gt; [return: bb75, unwind: bb103]\n-53:9-53:29: @75.Call: _63 = _print(move _64) -&gt; [return: bb76, unwind: bb103]\n-53:9-53:29: @76[5]: _62 = const ()\n-54:9-54:15: @76[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@60,75,76</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"88:35-88:44: @89[1]: _82 = _62\n+88:13-88:32: @89[2]: FakeRead(ForLet, _82)\n+89:18-89:27: @89[9]: _113 = const main::promoted[1]\n+89:18-89:27: @89[10]: _88 = &amp;(*_113)\n+89:18-89:27: @89[11]: _87 = &amp;(*_88)\n+89:18-89:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+89:9-89:29: @89[18]: _94 = ()\n+89:9-89:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n+89:9-89:29: @89[20]: _112 = const main::promoted[0]\n+89:9-89:29: @89[21]: _92 = &amp;(*_112)\n+89:9-89:29: @89[22]: _91 = &amp;(*_92)\n+89:9-89:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+89:9-89:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n+89:9-89:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n+89:9-89:29: @105[5]: _83 = const ()\n+90:9-90:15: @105[7]: _0 = const ()\"><span class=\"annotation\">@89,104,105\u298a</span>should_be_reachable = countdown;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"88:35-88:44: @89[1]: _82 = _62\n+88:13-88:32: @89[2]: FakeRead(ForLet, _82)\n+89:18-89:27: @89[9]: _113 = const main::promoted[1]\n+89:18-89:27: @89[10]: _88 = &amp;(*_113)\n+89:18-89:27: @89[11]: _87 = &amp;(*_88)\n+89:18-89:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+89:9-89:29: @89[18]: _94 = ()\n+89:9-89:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n+89:9-89:29: @89[20]: _112 = const main::promoted[0]\n+89:9-89:29: @89[21]: _92 = &amp;(*_112)\n+89:9-89:29: @89[22]: _91 = &amp;(*_92)\n+89:9-89:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+89:9-89:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n+89:9-89:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n+89:9-89:29: @105[5]: _83 = const ()\n+90:9-90:15: @105[7]: _0 = const ()\">        println!(\"reached\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"88:35-88:44: @89[1]: _82 = _62\n+88:13-88:32: @89[2]: FakeRead(ForLet, _82)\n+89:18-89:27: @89[9]: _113 = const main::promoted[1]\n+89:18-89:27: @89[10]: _88 = &amp;(*_113)\n+89:18-89:27: @89[11]: _87 = &amp;(*_88)\n+89:18-89:27: @89[12]: _86 = move _87 as &amp;[&amp;str] (Pointer(Unsize))\n+89:9-89:29: @89[18]: _94 = ()\n+89:9-89:29: @89[19]: FakeRead(ForMatchedPlace, _94)\n+89:9-89:29: @89[20]: _112 = const main::promoted[0]\n+89:9-89:29: @89[21]: _92 = &amp;(*_112)\n+89:9-89:29: @89[22]: _91 = &amp;(*_92)\n+89:9-89:29: @89[23]: _90 = move _91 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+89:9-89:29: @89.Call: _85 = Arguments::new_v1(move _86, move _90) -&gt; [return: bb104, unwind: bb132]\n+89:9-89:29: @104.Call: _84 = _print(move _85) -&gt; [return: bb105, unwind: bb132]\n+89:9-89:29: @105[5]: _83 = const ()\n+90:9-90:15: @105[7]: _0 = const ()\">        return<span class=\"annotation\">\u2989@89,104,105</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"57:9-57:10: @98[0]: FakeRead(ForLet, _74)\"><span class=\"annotation\">@98\u298a</span>w<span class=\"annotation\">\u2989@98</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"57:16-57:25: @77[5]: _76 = _41\n-57:16-57:29: @77[6]: _75 = Gt(move _76, const 7_i32)\n-57:16-57:29: @77[8]: FakeRead(ForMatchedPlace, _75)\"><span class=\"annotation\">@77\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@77</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"58:9-58:23: @81[0]: _41 = move (_77.0: i32)\"><span class=\"annotation\">@81\u298a</span>countdown -= 4<span class=\"annotation\">\u2989@81</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"59:15-59:24: @79[2]: _79 = _41\n-59:15-59:28: @79[3]: _78 = Gt(move _79, const 2_i32)\n-59:15-59:28: @79[5]: FakeRead(ForMatchedPlace, _78)\"><span class=\"annotation\">@79\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@79</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:12-60:21: @84[5]: _84 = _41\n-60:12-60:25: @84[6]: _83 = Lt(move _84, const 1_i32)\"><span class=\"annotation\">@82,84\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@82,84</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:29-60:38: @91[2]: _86 = _41\n-60:29-60:42: @91[3]: _85 = Gt(move _86, const 5_i32)\"><span class=\"annotation\">@91\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@91</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:42-60:42: @89.Goto: goto -&gt; bb92\"><span class=\"annotation\">@89\u298a</span>\u2038<span class=\"annotation\">\u2989@89</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:42-60:42: @90.Goto: goto -&gt; bb92\"><span class=\"annotation\">@90\u298a</span>\u2038<span class=\"annotation\">\u2989@90</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:46-60:55: @87[2]: _88 = _41\n-60:46-60:60: @87[3]: _87 = Ne(move _88, const 9_i32)\"><span class=\"annotation\">@87\u298a</span>countdown != 9<span class=\"annotation\">\u2989@87</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"60:60-60:60: @85.Goto: goto -&gt; bb88\"><span class=\"annotation\">@85\u298a</span>\u2038<span class=\"annotation\">\u2989@85</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"60:60-60:60: @86.Goto: goto -&gt; bb88\"><span class=\"annotation\">@86\u298a</span>\u2038<span class=\"annotation\">\u2989@86</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\"><span class=\"annotation\">@93,95\u298a</span>{</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">            countdown = 0;</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"61:13-61:26: @95[0]: _41 = const 0_i32\n-60:61-62:10: @95[1]: _80 = const ()\n-62:10-62:10: @95.Goto: goto -&gt; bb96\">        }<span class=\"annotation\">\u2989@93,95</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"62:10-62:10: @94.Goto: goto -&gt; bb96\"><span class=\"annotation\">@94\u298a</span>\u2038<span class=\"annotation\">\u2989@94</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"63:9-63:23: @97[0]: _41 = move (_89.0: i32)\"><span class=\"annotation\">@97\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@97</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"93:9-93:10: @127[0]: FakeRead(ForLet, _95)\"><span class=\"annotation\">@127\u298a</span>w<span class=\"annotation\">\u2989@127</span></span></span><span class=\"code\" style=\"--layer: 0\"> = if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"93:16-93:25: @106[5]: _97 = _62\n+93:16-93:29: @106[6]: _96 = Gt(move _97, const 7_i32)\n+93:16-93:29: @106[8]: FakeRead(ForMatchedPlace, _96)\"><span class=\"annotation\">@106\u298a</span>countdown &gt; 7<span class=\"annotation\">\u2989@106</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"94:9-94:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n+94:9-94:23: @110[0]: _62 = move (_98.0: i32)\n+93:30-95:6: @110[1]: _95 = const ()\"><span class=\"annotation\">@107,109,110\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"94:9-94:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n+94:9-94:23: @110[0]: _62 = move (_98.0: i32)\n+93:30-95:6: @110[1]: _95 = const ()\">        countdown -= 4;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"94:9-94:23: @109[0]: _98 = CheckedSub(_62, const 4_i32)\n+94:9-94:23: @110[0]: _62 = move (_98.0: i32)\n+93:30-95:6: @110[1]: _95 = const ()\">    }<span class=\"annotation\">\u2989@107,109,110</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"95:15-95:24: @108[2]: _100 = _62\n+95:15-95:28: @108[3]: _99 = Gt(move _100, const 2_i32)\n+95:15-95:28: @108[5]: FakeRead(ForMatchedPlace, _99)\"><span class=\"annotation\">@108\u298a</span>countdown &gt; 2<span class=\"annotation\">\u2989@108</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:12-96:21: @113[5]: _105 = _62\n+96:12-96:25: @113[6]: _104 = Lt(move _105, const 1_i32)\"><span class=\"annotation\">@111,113\u298a</span>countdown &lt; 1<span class=\"annotation\">\u2989@111,113</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"96:29-96:38: @120[2]: _107 = _62\n+96:29-96:42: @120[3]: _106 = Gt(move _107, const 5_i32)\"><span class=\"annotation\">@120\u298a</span>countdown &gt; 5<span class=\"annotation\">\u2989@120</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:42-96:42: @118.Goto: goto -&gt; bb121\"><span class=\"annotation\">@118\u298a</span>\u2038<span class=\"annotation\">\u2989@118</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"96:42-96:42: @119.Goto: goto -&gt; bb121\"><span class=\"annotation\">@119\u298a</span>\u2038<span class=\"annotation\">\u2989@119</span></span></span><span class=\"code\" style=\"--layer: 0\"> || </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:46-96:55: @116[2]: _109 = _62\n+96:46-96:60: @116[3]: _108 = Ne(move _109, const 9_i32)\"><span class=\"annotation\">@116\u298a</span>countdown != 9<span class=\"annotation\">\u2989@116</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"96:60-96:60: @114.Goto: goto -&gt; bb117\"><span class=\"annotation\">@114\u298a</span>\u2038<span class=\"annotation\">\u2989@114</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"96:60-96:60: @115.Goto: goto -&gt; bb117\"><span class=\"annotation\">@115\u298a</span>\u2038<span class=\"annotation\">\u2989@115</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"97:13-97:26: @124[0]: _62 = const 0_i32\n+96:61-98:10: @124[1]: _101 = const ()\n+98:10-98:10: @124.Goto: goto -&gt; bb125\"><span class=\"annotation\">@122,124\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"97:13-97:26: @124[0]: _62 = const 0_i32\n+96:61-98:10: @124[1]: _101 = const ()\n+98:10-98:10: @124.Goto: goto -&gt; bb125\">            countdown = 0;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"97:13-97:26: @124[0]: _62 = const 0_i32\n+96:61-98:10: @124[1]: _101 = const ()\n+98:10-98:10: @124.Goto: goto -&gt; bb125\">        }<span class=\"annotation\">\u2989@122,124</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"98:10-98:10: @123.Goto: goto -&gt; bb125\"><span class=\"annotation\">@123\u298a</span>\u2038<span class=\"annotation\">\u2989@123</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"99:9-99:23: @125[2]: _110 = CheckedSub(_62, const 5_i32)\n+99:9-99:23: @126[0]: _62 = move (_110.0: i32)\"><span class=\"annotation\">@125,126\u298a</span>countdown -= 5<span class=\"annotation\">\u2989@125,126</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"65:9-65:15: @83[0]: _0 = const ()\"><span class=\"annotation\">@83\u298a</span>return<span class=\"annotation\">\u2989@83</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"101:9-101:15: @112[0]: _0 = const ()\"><span class=\"annotation\">@112\u298a</span>return<span class=\"annotation\">\u2989@112</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"67:2-67:2: @101.Goto: goto -&gt; bb102\"><span class=\"annotation\">@101\u298a</span>\u2038<span class=\"annotation\">\u2989@101</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"67:2-67:2: @102.Return: return\"><span class=\"annotation\">@102\u298a</span>\u2038<span class=\"annotation\">\u2989@102</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"103:2-103:2: @130.Goto: goto -&gt; bb131\"><span class=\"annotation\">@130\u298a</span>\u2038<span class=\"annotation\">\u2989@130</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"103:2-103:2: @131.Return: return\"><span class=\"annotation\">@131\u298a</span>\u2038<span class=\"annotation\">\u2989@131</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "fc9f54143ed2a9761007e80aa1f5662ede0583e4", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-in_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 69, "deletions": 7, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-in_func.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -71,10 +71,13 @@\n <body>\n <div class=\"code\" style=\"counter-reset: line 17\"><span class=\"line\">    <span class=\"code\" style=\"--layer: 0\">fn in_func(a: u32) {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n-19:13-19:14: @0[2]: FakeRead(ForLet, _2)\"><span class=\"annotation\">@0\u298a</span>b = 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:13-20:14: @1[3]: FakeRead(ForLet, _3)\"><span class=\"annotation\">@1,2,3,4\u298a</span>c<span class=\"annotation\">\u2989@1,2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"> = </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:17-20:18: @0[5]: _4 = _1\n-20:21-20:22: @0[7]: _5 = _2\"><span class=\"annotation\">@0\u298a</span>a + b<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -92,8 +95,15 @@\n 21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n 21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\"><span class=\"annotation\">@1,2,3,4\u298a</span>println!(\"c = {}\", c)</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+22:6-22:6: @4.Return: return\"><span class=\"annotation\">@0,1,2,3,4\u298a</span>b = 1;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n 21:18-21:26: @1[10]: _11 = &amp;(*_23)\n 21:18-21:26: @1[11]: _10 = &amp;(*_11)\n 21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n@@ -111,6 +121,58 @@\n 21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n 21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n 21:9-21:30: @4[6]: _0 = const ()\n-22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@1,2,3,4</span></span></span></span></div>\n+22:6-22:6: @4.Return: return\">        let c = a + b;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\">        println!(\"c = {}\", c)</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:17-19:18: @0[1]: _2 = const 1_u32\n+19:13-19:14: @0[2]: FakeRead(ForLet, _2)\n+20:17-20:18: @0[5]: _4 = _1\n+20:21-20:22: @0[7]: _5 = _2\n+20:17-20:22: @0[8]: _6 = CheckedAdd(_4, _5)\n+20:17-20:22: @1[0]: _3 = move (_6.0: u32)\n+20:13-20:14: @1[3]: FakeRead(ForLet, _3)\n+21:18-21:26: @1[9]: _23 = const in_func::promoted[0]\n+21:18-21:26: @1[10]: _11 = &amp;(*_23)\n+21:18-21:26: @1[11]: _10 = &amp;(*_11)\n+21:18-21:26: @1[12]: _9 = move _10 as &amp;[&amp;str] (Pointer(Unsize))\n+21:28-21:29: @1[20]: _18 = &amp;_3\n+21:9-21:30: @1[21]: _17 = (move _18,)\n+21:9-21:30: @1[23]: FakeRead(ForMatchedPlace, _17)\n+21:9-21:30: @1[25]: _19 = (_17.0: &amp;u32)\n+21:9-21:30: @1[28]: _21 = &amp;(*_19)\n+21:9-21:30: @1[30]: _22 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+21:9-21:30: @1.Call: _20 = ArgumentV1::new::&lt;u32&gt;(move _21, move _22) -&gt; [return: bb2, unwind: bb5]\n+21:9-21:30: @2[2]: _16 = [move _20]\n+21:9-21:30: @2[5]: _15 = &amp;_16\n+21:9-21:30: @2[6]: _14 = &amp;(*_15)\n+21:9-21:30: @2[7]: _13 = move _14 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+21:9-21:30: @2.Call: _8 = Arguments::new_v1(move _9, move _13) -&gt; [return: bb3, unwind: bb5]\n+21:9-21:30: @3.Call: _7 = _print(move _8) -&gt; [return: bb4, unwind: bb5]\n+21:9-21:30: @4[6]: _0 = const ()\n+22:6-22:6: @4.Return: return\">    }<span class=\"annotation\">\u2989@0,1,2,3,4</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "325d4483223b56ea6c939119219caf99e3de1fad", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.inner_items/inner_items.main-{impl#0}-trait_func.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 26, "deletions": 6, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.inner_items%2Finner_items.main-%7Bimpl%230%7D-trait_func.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -69,13 +69,33 @@\n </style>\n </head>\n <body>\n-<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            self.in_struct_field += </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\"><span class=\"annotation\">@0\u298a</span>incr<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+<div class=\"code\" style=\"counter-reset: line 39\"><span class=\"line\">        <span class=\"code\" style=\"--layer: 0\">fn trait_func(&amp;mut self, incr: u32) </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n 42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\"><span class=\"annotation\">@1,2\u298a</span>in_func(self.in_struct_field);</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\"><span class=\"annotation\">@0,1,2\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n 42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n-43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@1,2</span></span></span></span></div>\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\">            self.in_struct_field += incr;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\">            in_func(self.in_struct_field);</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"41:37-41:41: @0[1]: _3 = _2\n+41:13-41:41: @0[2]: _4 = CheckedAdd(((*_1).0: u32), _3)\n+41:13-41:41: @1[0]: ((*_1).0: u32) = move (_4.0: u32)\n+42:21-42:41: @1[4]: _6 = ((*_1).0: u32)\n+42:13-42:42: @1.Call: _5 = in_func(move _6) -&gt; [return: bb2, unwind: bb3]\n+40:45-43:10: @2[2]: _0 = const ()\n+43:10-43:10: @2.Return: return\">        }<span class=\"annotation\">\u2989@0,1,2</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "509a949cfcf59d6f99c5b7a4fe1e14e720024d80", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.nested_loops/nested_loops.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 37, "deletions": 19, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.nested_loops%2Fnested_loops.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -108,28 +108,46 @@\n 9:16-9:22: @16[18]: FakeRead(ForMatchedPlace, _26)\"><span class=\"annotation\">@14,16\u298a</span>a &lt; 30<span class=\"annotation\">\u2989@14,16</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"10:17-10:22: @19[0]: _11 = const ()\"><span class=\"annotation\">@17,19\u298a</span>break<span class=\"annotation\">\u2989@17,19</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @20[0]: _9 = move (_29.0: i32)\"><span class=\"annotation\">@20\u298a</span>a -= 5<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@21\u298a</span>b -= 5<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n+12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @21[0]: _10 = move (_30.0: i32)\"><span class=\"annotation\">@18,20,21\u298a</span>a -= 5;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"12:13-12:19: @18[3]: _29 = CheckedSub(_9, const 5_i32)\n+12:13-12:19: @20[0]: _9 = move (_29.0: i32)\n+13:13-13:19: @20[1]: _30 = CheckedSub(_10, const 5_i32)\n+13:13-13:19: @21[0]: _10 = move (_30.0: i32)\">            b -= 5<span class=\"annotation\">\u2989@18,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            if </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:16-14:17: @21[3]: _32 = _10\n 14:16-14:22: @21[4]: _31 = Lt(move _32, const 90_i32)\n-14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+14:16-14:22: @21[6]: FakeRead(ForMatchedPlace, _31)\"><span class=\"annotation\">@18,20,21\u298a</span>b &lt; 90<span class=\"annotation\">\u2989@18,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @24[0]: _33 = CheckedSub(_9, const 10_i32)\n+15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n 16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@25\u298a</span>a -= 10;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\"><span class=\"annotation\">@22,24,25\u298a</span>a -= 10;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"15:17-15:24: @24[0]: _33 = CheckedSub(_9, const 10_i32)\n+15:17-15:24: @25[0]: _9 = move (_33.0: i32)\n 16:20-16:27: @25[2]: _34 = _1\n-16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@29\u298a</span>a -= 2;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+16:20-16:27: @25[3]: FakeRead(ForMatchedPlace, _34)\">                if is_true<span class=\"annotation\">\u2989@22,24,25</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:21-17:33: @28[0]: _0 = const ()\"><span class=\"annotation\">@26,28\u298a</span>break 'outer<span class=\"annotation\">\u2989@26,28</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n+21:14-21:14: @29.Goto: goto -&gt; bb30\"><span class=\"annotation\">@27,29\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">                    a -= 2;</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n 21:14-21:14: @29.Goto: goto -&gt; bb30\">                }</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n-21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@29</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"19:21-19:27: @27[0]: _36 = CheckedSub(_9, const 2_i32)\n+19:21-19:27: @29[0]: _9 = move (_36.0: i32)\n+18:24-20:18: @29[1]: _24 = const ()\n+21:14-21:14: @29.Goto: goto -&gt; bb30\">            }<span class=\"annotation\">\u2989@27,29</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:14-21:14: @23.Goto: goto -&gt; bb30\"><span class=\"annotation\">@23\u298a</span>\u2038<span class=\"annotation\">\u2989@23</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"22:10-22:10: @30.Goto: goto -&gt; bb10\"><span class=\"annotation\">@30\u298a</span>\u2038<span class=\"annotation\">\u2989@30</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:9-23:23: @31[4]: _37 = CheckedSub(_5, const 1_i32)\n+23:9-23:23: @32[0]: _5 = move (_37.0: i32)\"><span class=\"annotation\">@31,32\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@31,32</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:6-24:6: @7.Goto: goto -&gt; bb33\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"25:2-25:2: @33.Return: return\"><span class=\"annotation\">@33\u298a</span>\u2038<span class=\"annotation\">\u2989@33</span></span></span></span></div>\n </body>\n </html>"}, {"sha": "2be6bad619ed2f9f3a575b1c1587f02a8ec69e96", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 259, "deletions": 0, "changes": 259, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.overflow%2Foverflow.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,259 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.overflow/overflow.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>overflow.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 14\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:25-16:27: @0[1]: _1 = const 10_i32\n+16:9-16:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:11-17:20: @2[2]: _5 = _1\n+17:11-17:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+17:11-17:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:12-18:21: @5[3]: _8 = _1\n+18:12-18:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+18:12-18:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\"><span class=\"annotation\">@6,8,9,10,11,12\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\">            let result = might_overflow(10);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:26-19:44: @8.Call: _9 = might_overflow(const 10_u32) -&gt; [return: bb9, unwind: bb23]\n+19:17-19:23: @9[0]: FakeRead(ForLet, _9)\n+20:22-20:34: @9[7]: _51 = const main::promoted[1]\n+20:22-20:34: @9[8]: _15 = &amp;(*_51)\n+20:22-20:34: @9[9]: _14 = &amp;(*_15)\n+20:22-20:34: @9[10]: _13 = move _14 as &amp;[&amp;str] (Pointer(Unsize))\n+20:36-20:42: @9[18]: _22 = &amp;_9\n+20:13-20:44: @9[19]: _21 = (move _22,)\n+20:13-20:44: @9[21]: FakeRead(ForMatchedPlace, _21)\n+20:13-20:44: @9[23]: _23 = (_21.0: &amp;u32)\n+20:13-20:44: @9[26]: _25 = &amp;(*_23)\n+20:13-20:44: @9[28]: _26 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+20:13-20:44: @9.Call: _24 = ArgumentV1::new::&lt;u32&gt;(move _25, move _26) -&gt; [return: bb10, unwind: bb23]\n+20:13-20:44: @10[2]: _20 = [move _24]\n+20:13-20:44: @10[5]: _19 = &amp;_20\n+20:13-20:44: @10[6]: _18 = &amp;(*_19)\n+20:13-20:44: @10[7]: _17 = move _18 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+20:13-20:44: @10.Call: _12 = Arguments::new_v1(move _13, move _17) -&gt; [return: bb11, unwind: bb23]\n+20:13-20:44: @11.Call: _11 = _print(move _12) -&gt; [return: bb12, unwind: bb23]\n+20:13-20:44: @12[6]: _10 = const ()\n+18:27-21:10: @12[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9,10,11,12</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:19-21:28: @7[2]: _28 = _1\n+21:19-21:32: @7[3]: _27 = Lt(move _28, const 5_i32)\n+21:19-21:32: @7[5]: FakeRead(ForMatchedPlace, _27)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\"><span class=\"annotation\">@13,15,16,17,18,19\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\">            let result = might_overflow(1);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\">            println!(\"Result: {}\", result);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"22:26-22:43: @15.Call: _29 = might_overflow(const 1_u32) -&gt; [return: bb16, unwind: bb23]\n+22:17-22:23: @16[0]: FakeRead(ForLet, _29)\n+23:22-23:34: @16[7]: _50 = const main::promoted[0]\n+23:22-23:34: @16[8]: _35 = &amp;(*_50)\n+23:22-23:34: @16[9]: _34 = &amp;(*_35)\n+23:22-23:34: @16[10]: _33 = move _34 as &amp;[&amp;str] (Pointer(Unsize))\n+23:36-23:42: @16[18]: _42 = &amp;_29\n+23:13-23:44: @16[19]: _41 = (move _42,)\n+23:13-23:44: @16[21]: FakeRead(ForMatchedPlace, _41)\n+23:13-23:44: @16[23]: _43 = (_41.0: &amp;u32)\n+23:13-23:44: @16[26]: _45 = &amp;(*_43)\n+23:13-23:44: @16[28]: _46 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+23:13-23:44: @16.Call: _44 = ArgumentV1::new::&lt;u32&gt;(move _45, move _46) -&gt; [return: bb17, unwind: bb23]\n+23:13-23:44: @17[2]: _40 = [move _44]\n+23:13-23:44: @17[5]: _39 = &amp;_40\n+23:13-23:44: @17[6]: _38 = &amp;(*_39)\n+23:13-23:44: @17[7]: _37 = move _38 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+23:13-23:44: @17.Call: _32 = Arguments::new_v1(move _33, move _37) -&gt; [return: bb18, unwind: bb23]\n+23:13-23:44: @18.Call: _31 = _print(move _32) -&gt; [return: bb19, unwind: bb23]\n+23:13-23:44: @19[6]: _30 = const ()\n+21:33-24:10: @19[8]: _6 = const ()\">        }<span class=\"annotation\">\u2989@13,15,16,17,18,19</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"24:10-24:10: @14.Goto: goto -&gt; bb20\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:10-24:10: @20.Goto: goto -&gt; bb21\"><span class=\"annotation\">@20\u298a</span>\u2038<span class=\"annotation\">\u2989@20</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:9-25:23: @21[2]: _47 = CheckedSub(_1, const 1_i32)\n+25:9-25:23: @22[0]: _1 = move (_47.0: i32)\"><span class=\"annotation\">@21,22\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@21,22</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n+27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n+28:2-28:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"27:8-27:10: @4[4]: _49 = ()\n+27:5-27:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _49)\n+28:2-28:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "44fabaf0d7d270612620eda792b9ae52db19ddad", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html", "status": "added", "additions": 397, "deletions": 0, "changes": 397, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.overflow%2Foverflow.might_overflow.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,397 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.overflow/overflow.might_overflow.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>overflow.might_overflow - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_overflow(to_add: u32) -&gt; u32 {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:14: @0[3]: _4 = _1\n+5:8-5:18: @0[4]: _3 = Gt(move _4, const 5_u32)\n+5:8-5:18: @0[6]: FakeRead(ForMatchedPlace, _3)\"><span class=\"annotation\">@0\u298a</span>to_add &gt; 5<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @3[7]: _10 = &amp;(*_61)\n+6:18-6:47: @3[8]: _9 = &amp;(*_10)\n+6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @3[15]: _16 = ()\n+6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @3[18]: _14 = &amp;(*_60)\n+6:9-6:49: @3[19]: _13 = &amp;(*_14)\n+6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n+6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n+6:9-6:49: @5[5]: _5 = const ()\n+5:19-7:6: @5[7]: _2 = const ()\n+7:6-7:6: @5.Goto: goto -&gt; bb6\"><span class=\"annotation\">@1,3,4,5\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @3[7]: _10 = &amp;(*_61)\n+6:18-6:47: @3[8]: _9 = &amp;(*_10)\n+6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @3[15]: _16 = ()\n+6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @3[18]: _14 = &amp;(*_60)\n+6:9-6:49: @3[19]: _13 = &amp;(*_14)\n+6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n+6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n+6:9-6:49: @5[5]: _5 = const ()\n+5:19-7:6: @5[7]: _2 = const ()\n+7:6-7:6: @5.Goto: goto -&gt; bb6\">        println!(\"this will probably overflow\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:47: @3[6]: _61 = const might_overflow::promoted[4]\n+6:18-6:47: @3[7]: _10 = &amp;(*_61)\n+6:18-6:47: @3[8]: _9 = &amp;(*_10)\n+6:18-6:47: @3[9]: _8 = move _9 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:49: @3[15]: _16 = ()\n+6:9-6:49: @3[16]: FakeRead(ForMatchedPlace, _16)\n+6:9-6:49: @3[17]: _60 = const might_overflow::promoted[3]\n+6:9-6:49: @3[18]: _14 = &amp;(*_60)\n+6:9-6:49: @3[19]: _13 = &amp;(*_14)\n+6:9-6:49: @3[20]: _12 = move _13 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:49: @3.Call: _7 = Arguments::new_v1(move _8, move _12) -&gt; [return: bb4, unwind: bb15]\n+6:9-6:49: @4.Call: _6 = _print(move _7) -&gt; [return: bb5, unwind: bb15]\n+6:9-6:49: @5[5]: _5 = const ()\n+5:19-7:6: @5[7]: _2 = const ()\n+7:6-7:6: @5.Goto: goto -&gt; bb6\">    }<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"7:6-7:6: @2.Goto: goto -&gt; bb6\"><span class=\"annotation\">@2\u298a</span>\u2038<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\"><span class=\"annotation\">@6,7,8,9,10,11,12,13,14\u298a</span>add_to = u32::MAX - 5;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    println!(\"does {} + {} overflow?\", add_to, to_add);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    let result = to_add + add_to;</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    println!(\"continuing after overflow check\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">    result</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"8:18-8:30: @6[3]: _18 = CheckedSub(const core::num::&lt;impl u32&gt;::MAX, const 5_u32)\n+8:18-8:30: @7[0]: _17 = move (_18.0: u32)\n+8:9-8:15: @7[1]: FakeRead(ForLet, _17)\n+9:14-9:38: @7[8]: _59 = const might_overflow::promoted[2]\n+9:14-9:38: @7[9]: _24 = &amp;(*_59)\n+9:14-9:38: @7[10]: _23 = &amp;(*_24)\n+9:14-9:38: @7[11]: _22 = move _23 as &amp;[&amp;str] (Pointer(Unsize))\n+9:40-9:46: @7[19]: _31 = &amp;_17\n+9:48-9:54: @7[21]: _32 = &amp;_1\n+9:5-9:56: @7[22]: _30 = (move _31, move _32)\n+9:5-9:56: @7[25]: FakeRead(ForMatchedPlace, _30)\n+9:5-9:56: @7[27]: _33 = (_30.0: &amp;u32)\n+9:5-9:56: @7[29]: _34 = (_30.1: &amp;u32)\n+9:5-9:56: @7[32]: _36 = &amp;(*_33)\n+9:5-9:56: @7[34]: _37 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @7.Call: _35 = ArgumentV1::new::&lt;u32&gt;(move _36, move _37) -&gt; [return: bb8, unwind: bb15]\n+9:5-9:56: @8[4]: _39 = &amp;(*_34)\n+9:5-9:56: @8[6]: _40 = &lt;u32 as std::fmt::Display&gt;::fmt as for&lt;&#39;r, &#39;s, &#39;t0&gt; fn(&amp;&#39;r u32, &amp;&#39;s mut std::fmt::Formatter&lt;&#39;t0&gt;) -&gt; std::result::Result&lt;(), std::fmt::Error&gt; (Pointer(ReifyFnPointer))\n+9:5-9:56: @8.Call: _38 = ArgumentV1::new::&lt;u32&gt;(move _39, move _40) -&gt; [return: bb9, unwind: bb15]\n+9:5-9:56: @9[2]: _29 = [move _35, move _38]\n+9:5-9:56: @9[7]: _28 = &amp;_29\n+9:5-9:56: @9[8]: _27 = &amp;(*_28)\n+9:5-9:56: @9[9]: _26 = move _27 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:5-9:56: @9.Call: _21 = Arguments::new_v1(move _22, move _26) -&gt; [return: bb10, unwind: bb15]\n+9:5-9:56: @10.Call: _20 = _print(move _21) -&gt; [return: bb11, unwind: bb15]\n+9:5-9:56: @11[6]: _19 = const ()\n+10:18-10:24: @11[10]: _42 = _1\n+10:27-10:33: @11[12]: _43 = _17\n+10:18-10:33: @11[13]: _44 = CheckedAdd(_42, _43)\n+10:18-10:33: @12[0]: _41 = move (_44.0: u32)\n+10:9-10:15: @12[3]: FakeRead(ForLet, _41)\n+11:14-11:47: @12[10]: _58 = const might_overflow::promoted[1]\n+11:14-11:47: @12[11]: _50 = &amp;(*_58)\n+11:14-11:47: @12[12]: _49 = &amp;(*_50)\n+11:14-11:47: @12[13]: _48 = move _49 as &amp;[&amp;str] (Pointer(Unsize))\n+11:5-11:49: @12[19]: _56 = ()\n+11:5-11:49: @12[20]: FakeRead(ForMatchedPlace, _56)\n+11:5-11:49: @12[21]: _57 = const might_overflow::promoted[0]\n+11:5-11:49: @12[22]: _54 = &amp;(*_57)\n+11:5-11:49: @12[23]: _53 = &amp;(*_54)\n+11:5-11:49: @12[24]: _52 = move _53 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+11:5-11:49: @12.Call: _47 = Arguments::new_v1(move _48, move _52) -&gt; [return: bb13, unwind: bb15]\n+11:5-11:49: @13.Call: _46 = _print(move _47) -&gt; [return: bb14, unwind: bb15]\n+11:5-11:49: @14[5]: _45 = const ()\n+12:5-12:11: @14[7]: _0 = _41\n+13:2-13:2: @14.Return: return\">}<span class=\"annotation\">\u2989@6,7,8,9,10,11,12,13,14</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "4a44ca0a97bf530d8716203f319fd19b2e265f05", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 103, "deletions": 0, "changes": 103, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,103 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.panic_unwind/panic_unwind.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>panic_unwind.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 12\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() -&gt; Result&lt;(),u8&gt; {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"14:25-14:27: @0[1]: _1 = const 10_i32\n+14:9-14:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0\u298a</span>mut countdown = 10<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    while </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"15:11-15:20: @2[2]: _5 = _1\n+15:11-15:24: @2[3]: _4 = Gt(move _5, const 0_i32)\n+15:11-15:24: @2[5]: FakeRead(ForMatchedPlace, _4)\"><span class=\"annotation\">@1,2\u298a</span>countdown &gt; 0<span class=\"annotation\">\u2989@1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"16:12-16:21: @5[3]: _8 = _1\n+16:12-16:26: @5[4]: _7 = Eq(move _8, const 1_i32)\n+16:12-16:26: @5[6]: FakeRead(ForMatchedPlace, _7)\"><span class=\"annotation\">@3,5\u298a</span>countdown == 1<span class=\"annotation\">\u2989@3,5</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n+16:27-18:10: @9[1]: _6 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n+16:27-18:10: @9[1]: _6 = const ()\">            might_panic(true);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"17:13-17:30: @8.Call: _9 = might_panic(const true) -&gt; [return: bb9, unwind: bb17]\n+16:27-18:10: @9[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"> else if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:19-18:28: @7[2]: _11 = _1\n+18:19-18:32: @7[3]: _10 = Lt(move _11, const 5_i32)\n+18:19-18:32: @7[5]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@7\u298a</span>countdown &lt; 5<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"> </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n+18:33-20:10: @13[1]: _6 = const ()\"><span class=\"annotation\">@10,12,13\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n+18:33-20:10: @13[1]: _6 = const ()\">            might_panic(false);</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"19:13-19:31: @12.Call: _12 = might_panic(const false) -&gt; [return: bb13, unwind: bb17]\n+18:33-20:10: @13[1]: _6 = const ()\">        }<span class=\"annotation\">\u2989@10,12,13</span></span></span><span><span class=\"code even\" style=\"--layer: 1\" title=\"20:10-20:10: @11.Goto: goto -&gt; bb14\"><span class=\"annotation\">@11\u298a</span>\u2038<span class=\"annotation\">\u2989@11</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"20:10-20:10: @14.Goto: goto -&gt; bb15\"><span class=\"annotation\">@14\u298a</span>\u2038<span class=\"annotation\">\u2989@14</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"21:9-21:23: @15[2]: _13 = CheckedSub(_1, const 1_i32)\n+21:9-21:23: @16[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@15,16\u298a</span>countdown -= 1<span class=\"annotation\">\u2989@15,16</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n+23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+24:2-24:2: @4.Return: return\"><span class=\"annotation\">@4\u298a</span>Ok(())</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"23:8-23:10: @4[4]: _15 = ()\n+23:5-23:11: @4[5]: _0 = std::result::Result::&lt;(), u8&gt;::Ok(move _15)\n+24:2-24:2: @4.Return: return\">}<span class=\"annotation\">\u2989@4</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "b209ea9eee980837c9eea799eeaf0104f9dd8da1", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html", "status": "added", "additions": 164, "deletions": 0, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.panic_unwind%2Fpanic_unwind.might_panic.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,164 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.panic_unwind/panic_unwind.might_panic.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>panic_unwind.might_panic - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 3\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn might_panic(should_panic: bool) {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    if </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"5:8-5:20: @0[1]: _2 = _1\n+5:8-5:20: @0[2]: FakeRead(ForMatchedPlace, _2)\"><span class=\"annotation\">@0\u298a</span>should_panic<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @3[6]: _33 = const might_panic::promoted[3]\n+6:18-6:32: @3[7]: _9 = &amp;(*_33)\n+6:18-6:32: @3[8]: _8 = &amp;(*_9)\n+6:18-6:32: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:34: @3[15]: _15 = ()\n+6:9-6:34: @3[16]: FakeRead(ForMatchedPlace, _15)\n+6:9-6:34: @3[17]: _32 = const might_panic::promoted[2]\n+6:9-6:34: @3[18]: _13 = &amp;(*_32)\n+6:9-6:34: @3[19]: _12 = &amp;(*_13)\n+6:9-6:34: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:34: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+6:9-6:34: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+6:9-6:34: @5[5]: _4 = const ()\n+7:9-7:26: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb8\"><span class=\"annotation\">@1,3,4,5\u298a</span>println!(\"panicking...\");</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"6:18-6:32: @3[6]: _33 = const might_panic::promoted[3]\n+6:18-6:32: @3[7]: _9 = &amp;(*_33)\n+6:18-6:32: @3[8]: _8 = &amp;(*_9)\n+6:18-6:32: @3[9]: _7 = move _8 as &amp;[&amp;str] (Pointer(Unsize))\n+6:9-6:34: @3[15]: _15 = ()\n+6:9-6:34: @3[16]: FakeRead(ForMatchedPlace, _15)\n+6:9-6:34: @3[17]: _32 = const might_panic::promoted[2]\n+6:9-6:34: @3[18]: _13 = &amp;(*_32)\n+6:9-6:34: @3[19]: _12 = &amp;(*_13)\n+6:9-6:34: @3[20]: _11 = move _12 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+6:9-6:34: @3.Call: _6 = Arguments::new_v1(move _7, move _11) -&gt; [return: bb4, unwind: bb8]\n+6:9-6:34: @4.Call: _5 = _print(move _6) -&gt; [return: bb5, unwind: bb8]\n+6:9-6:34: @5[5]: _4 = const ()\n+7:9-7:26: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;panics&quot;) -&gt; bb8\">        panic!(\"panics\");<span class=\"annotation\">\u2989@1,3,4,5</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    } else </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\"><span class=\"annotation\">@2,6,7\u298a</span>{</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\">        println!(\"Don't Panic\");</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\">    }</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"9:18-9:31: @2[6]: _31 = const might_panic::promoted[1]\n+9:18-9:31: @2[7]: _23 = &amp;(*_31)\n+9:18-9:31: @2[8]: _22 = &amp;(*_23)\n+9:18-9:31: @2[9]: _21 = move _22 as &amp;[&amp;str] (Pointer(Unsize))\n+9:9-9:33: @2[15]: _29 = ()\n+9:9-9:33: @2[16]: FakeRead(ForMatchedPlace, _29)\n+9:9-9:33: @2[17]: _30 = const might_panic::promoted[0]\n+9:9-9:33: @2[18]: _27 = &amp;(*_30)\n+9:9-9:33: @2[19]: _26 = &amp;(*_27)\n+9:9-9:33: @2[20]: _25 = move _26 as &amp;[std::fmt::ArgumentV1] (Pointer(Unsize))\n+9:9-9:33: @2.Call: _20 = Arguments::new_v1(move _21, move _25) -&gt; [return: bb6, unwind: bb8]\n+9:9-9:33: @6.Call: _19 = _print(move _20) -&gt; [return: bb7, unwind: bb8]\n+9:9-9:33: @7[5]: _18 = const ()\n+8:12-10:6: @7[7]: _0 = const ()\n+11:2-11:2: @7.Return: return\">}<span class=\"annotation\">\u2989@2,6,7</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "bc3e67b8c9909d4d33ae868f2a9f7e55a9f57241", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.simple_loop/simple_loop.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.simple_loop%2Fsimple_loop.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -133,9 +133,12 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:18: @12[0]: _0 = const ()\"><span class=\"annotation\">@10,12\u298a</span>break<span class=\"annotation\">\u2989@10,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@13\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @13[0]: _5 = move (_13.0: i32)\"><span class=\"annotation\">@11,13\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        -=</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"30:9-32:10: @11[3]: _13 = CheckedSub(_5, const 1_i32)\n+30:9-32:10: @13[0]: _5 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@11,13</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"34:6-34:6: @7.Goto: goto -&gt; bb8\"><span class=\"annotation\">@7\u298a</span>\u2038<span class=\"annotation\">\u2989@7</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:2-35:2: @12.Return: return\"><span class=\"annotation\">@10,12\u298a</span>\u2038<span class=\"annotation\">\u2989@10,12</span></span></span></span></div>"}, {"sha": "23b3549984677438fb6019b6cd00939e6f74ee5f", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.try_error_result/try_error_result.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 13, "deletions": 8, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.try_error_result%2Ftry_error_result.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -79,33 +79,38 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:9-17:10: @8[1]: _13 = ((_9 as Some).0: i32)\n 17:9-17:10: @8[3]: _14 = _13\n 17:9-17:10: @8[4]: _7 = move _14\n-17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8\u298a</span>_<span class=\"annotation\">\u2989@6,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+17:9-17:10: @8[5]: _8 = const ()\"><span class=\"annotation\">@6,8,9\u298a</span>_<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    in</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:9-19:14: @3[5]: _11 = &amp;mut _5\n 19:9-19:14: @3[6]: _10 = &amp;mut (*_11)\n 19:9-19:14: @3.Call: _9 = &lt;std::ops::Range&lt;i32&gt; as Iterator&gt;::next(move _10) -&gt; [return: bb4, unwind: bb40]\n 19:9-19:14: @4[1]: FakeRead(ForMatchedPlace, _9)\"><span class=\"annotation\">@2,3,4\u298a</span>0..10<span class=\"annotation\">\u2989@2,3,4</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    {</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@9\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\"><span class=\"annotation\">@6,8,9\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n 25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            -= 1</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n 25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        ;</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n 25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">        if</span></span>\n-<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"21:9-22:17: @8[12]: _17 = CheckedSub(_1, const 1_i32)\n+21:9-22:17: @9[0]: _1 = move (_17.0: i32)\n 25:13-25:22: @9[3]: _19 = _1\n 25:13-25:26: @9[4]: _18 = Lt(move _19, const 5_i32)\n-25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+25:13-25:26: @9[6]: FakeRead(ForMatchedPlace, _18)\">            countdown &lt; 5<span class=\"annotation\">\u2989@6,8,9</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        {</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">            </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"27:13-27:41: @12.Call: _22 = call(const true) -&gt; [return: bb13, unwind: bb40]\"><span class=\"annotation\">@10,12,13,14\u298a</span>call(/*return_error=*/ true)<span class=\"annotation\">\u2989@10,12,13,14</span></span></span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"27:41-27:42: @18[1]: _24 = ((_21 as Err).0: ())\n 27:41-27:42: @18[4]: _27 = _24"}, {"sha": "b16355c3339a79a42f9b13ebb9ab87523a2408aa", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.while_early_ret/while_early_ret.main.-------.InstrumentCoverage.0.html", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.while_early_ret%2Fwhile_early_ret.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -115,9 +115,12 @@\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">                ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        }</span></span>\n-<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@12\u298a</span>countdown</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n-<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n+30:9-32:10: @12[0]: _1 = move (_13.0: i32)\"><span class=\"annotation\">@7,12\u298a</span>countdown</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n+30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">            -=</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"30:9-32:10: @7[3]: _13 = CheckedSub(_1, const 1_i32)\n+30:9-32:10: @12[0]: _1 = move (_13.0: i32)\">        1<span class=\"annotation\">\u2989@7,12</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        ;</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n <span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"35:8-35:10: @4[4]: _15 = ()"}, {"sha": "078f67530fb88938367f87f62498bcb5bc85d5ef", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.yield/yield.main-{closure#0}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 79, "deletions": 0, "changes": 79, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,79 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main-%7Bclosure%230%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>yield.main-{closure#0} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 7\"><span class=\"line\">                        <span class=\"code\" style=\"--layer: 0\">|| {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"9:9-9:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb2]\"><span class=\"annotation\">@0\u298a</span>yield 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:21: @1[1]: _0 = const &quot;foo&quot;\n+11:6-11:6: @1.Return: return\"><span class=\"annotation\">@1\u298a</span>\"foo\"</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"10:16-10:21: @1[1]: _0 = const &quot;foo&quot;\n+11:6-11:6: @1.Return: return\">    }<span class=\"annotation\">\u2989@1</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "00b2b35f3ddc4fac40559bb7df05fade5e82db56", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.yield/yield.main-{closure#1}.-------.InstrumentCoverage.0.html", "status": "added", "additions": 81, "deletions": 0, "changes": 81, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,81 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main-%7Bclosure%231%7D.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>yield.main-{closure#1} - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 21\"><span class=\"line\">                        <span class=\"code\" style=\"--layer: 0\">|| {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"23:9-23:16: @0.Yield: _3 = yield(const 1_i32) -&gt; [resume: bb1, drop: bb6]\"><span class=\"annotation\">@0\u298a</span>yield 1<span class=\"annotation\">\u2989@0</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"24:9-24:16: @1.Yield: _4 = yield(const 2_i32) -&gt; [resume: bb2, drop: bb5]\"><span class=\"annotation\">@1\u298a</span>yield 2<span class=\"annotation\">\u2989@1</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"25:9-25:16: @2.Yield: _5 = yield(const 3_i32) -&gt; [resume: bb3, drop: bb4]\"><span class=\"annotation\">@2\u298a</span>yield 3<span class=\"annotation\">\u2989@2</span></span></span><span class=\"code\" style=\"--layer: 0\">;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"26:16-26:21: @3[1]: _0 = const &quot;foo&quot;\n+27:6-27:6: @3.Return: return\"><span class=\"annotation\">@3\u298a</span>\"foo\"</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"26:16-26:21: @3[1]: _0 = const &quot;foo&quot;\n+27:6-27:6: @3.Return: return\">    }<span class=\"annotation\">\u2989@3</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "f5ea50692bfdd3c268d46e573def3f284d3c4b89", "filename": "src/test/run-make-fulldeps/coverage-spanview-deadcode/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html", "status": "added", "additions": 138, "deletions": 0, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage-spanview-deadcode%2Fexpected_mir_dump.yield%2Fyield.main.-------.InstrumentCoverage.0.html?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,138 @@\n+<!DOCTYPE html>\n+<!--\n+\n+Preview this file as rendered HTML from the github source at:\n+https://htmlpreview.github.io/?https://github.com/rust-lang/rust/blob/master/src/test/run-make-fulldeps/coverage-spanview-base/expected_mir_dump.yield/yield.main.-------.InstrumentCoverage.0.html\n+\n+For revisions in Pull Requests (PR):\n+  * Replace \"rust-lang\" with the github PR author\n+  * Replace \"master\" with the PR branch name\n+\n+-->\n+<html>\n+<head>\n+<title>yield.main - Coverage Spans</title>\n+<style>\n+    .line {\n+        counter-increment: line;\n+    }\n+    .line:before {\n+        content: counter(line) \": \";\n+        font-family: Menlo, Monaco, monospace;\n+        font-style: italic;\n+        width: 3.8em;\n+        display: inline-block;\n+        text-align: right;\n+        filter: opacity(50%);\n+        -webkit-user-select: none;\n+    }\n+    .code {\n+        color: #dddddd;\n+        background-color: #222222;\n+        font-family: Menlo, Monaco, monospace;\n+        line-height: 1.4em;\n+        border-bottom: 2px solid #222222;\n+        white-space: pre;\n+        display: inline-block;\n+    }\n+    .odd {\n+        background-color: #55bbff;\n+        color: #223311;\n+    }\n+    .even {\n+        background-color: #ee7756;\n+        color: #551133;\n+    }\n+    .code {\n+        --index: calc(var(--layer) - 1);\n+        padding-top: calc(var(--index) * 0.15em);\n+        filter:\n+            hue-rotate(calc(var(--index) * 25deg))\n+            saturate(calc(100% - (var(--index) * 2%)))\n+            brightness(calc(100% - (var(--index) * 1.5%)));\n+    }\n+    .annotation {\n+        color: #4444ff;\n+        font-family: monospace;\n+        font-style: italic;\n+        display: none;\n+        -webkit-user-select: none;\n+    }\n+    body:active .annotation {\n+        /* requires holding mouse down anywhere on the page */\n+        display: inline-block;\n+    }\n+    span:hover .annotation {\n+        /* requires hover over a span ONLY on its first line */\n+        display: inline-block;\n+    }\n+</style>\n+</head>\n+<body>\n+<div class=\"code\" style=\"counter-reset: line 6\"><span class=\"line\"><span class=\"code\" style=\"--layer: 0\">fn main() {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"8:9-8:22: @0[2]: FakeRead(ForLet, _1)\"><span class=\"annotation\">@0,1,2\u298a</span>mut generator<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 1;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return \"foo\"</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n+13:11-13:35: @0.Call: _4 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n+13:43-13:45: @1[2]: _6 = ()\n+13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n+13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n+14:9-14:35: @2[3]: _7 = discriminant(_3)\"><span class=\"annotation\">@0,1,2\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"13:20-13:34: @0[7]: _5 = &amp;mut _1\n+13:11-13:35: @0.Call: _4 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _5) -&gt; [return: bb1, unwind: bb26]\n+13:43-13:45: @1[2]: _6 = ()\n+13:11-13:46: @1.Call: _3 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _4, move _6) -&gt; [return: bb2, unwind: bb26]\n+13:11-13:46: @2[2]: FakeRead(ForMatchedPlace, _3)\n+14:9-14:35: @2[3]: _7 = discriminant(_3)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@0,1,2</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"14:39-14:41: @6[0]: _2 = const ()\"><span class=\"annotation\">@4,6,7,8\u298a</span>{}<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"15:14-15:52: @5.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@5\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@5</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"17:20-17:34: @6[7]: _12 = &amp;mut _1\n+17:11-17:35: @6.Call: _11 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}]&gt;::new(move _12) -&gt; [return: bb7, unwind: bb26]\n+17:43-17:45: @7[2]: _13 = ()\n+17:11-17:46: @7.Call: _10 = &lt;[generator@../coverage/yield.rs:8:25: 11:6 {i32, ()}] as Generator&gt;::resume(move _11, move _13) -&gt; [return: bb8, unwind: bb26]\n+17:11-17:46: @8[2]: FakeRead(ForMatchedPlace, _10)\"><span class=\"annotation\">@4,6,7,8\u298a</span>Pin::new(&amp;mut generator).resume(())<span class=\"annotation\">\u2989@4,6,7,8</span></span></span><span class=\"code\" style=\"--layer: 0\"> {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        GeneratorState::Complete(</span><span><span class=\"code even\" style=\"--layer: 1\" title=\"18:34-18:39: @10.Call: _14 = &lt;str as PartialEq&gt;::eq(((_10 as Complete).0: &amp;str), const &quot;foo&quot;) -&gt; [return: bb11, unwind: bb26]\"><span class=\"annotation\">@10,11\u298a</span>\"foo\"<span class=\"annotation\">\u2989@10,11</span></span></span><span class=\"code\" style=\"--layer: 0\">) =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"18:44-18:46: @13[0]: _9 = const ()\"><span class=\"annotation\">@12,13,14,15\u298a</span>{}<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"19:14-19:52: @9.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@9\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@9</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    let </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"22:9-22:22: @13[5]: FakeRead(ForLet, _17)\"><span class=\"annotation\">@12,13,14,15\u298a</span>mut generator<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> = || {</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 1;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 2;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        yield 3;</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        return \"foo\"</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    };</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n+29:11-29:35: @13.Call: _20 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n+29:43-29:45: @14[2]: _22 = ()\n+29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n+29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n+30:9-30:35: @15[3]: _23 = discriminant(_19)\"><span class=\"annotation\">@12,13,14,15\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n+<span class=\"line\"><span class=\"code odd\" style=\"--layer: 1\" title=\"29:20-29:34: @13[10]: _21 = &amp;mut _17\n+29:11-29:35: @13.Call: _20 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _21) -&gt; [return: bb14, unwind: bb26]\n+29:43-29:45: @14[2]: _22 = ()\n+29:11-29:46: @14.Call: _19 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _20, move _22) -&gt; [return: bb15, unwind: bb26]\n+29:11-29:46: @15[2]: FakeRead(ForMatchedPlace, _19)\n+30:9-30:35: @15[3]: _23 = discriminant(_19)\">        GeneratorState::Yielded(1)<span class=\"annotation\">\u2989@12,13,14,15</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"30:39-30:41: @19[0]: _18 = const ()\"><span class=\"annotation\">@17,19,20,21\u298a</span>{}<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"31:14-31:52: @18.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@18\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@18</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    match </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n+33:11-33:35: @19.Call: _26 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n+33:43-33:45: @20[2]: _28 = ()\n+33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n+33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n+34:9-34:35: @21[3]: _29 = discriminant(_25)\"><span class=\"annotation\">@17,19,20,21\u298a</span>Pin::new(&amp;mut generator).resume(()) {</span></span>\n+<span class=\"line\"><span class=\"code even\" style=\"--layer: 1\" title=\"33:20-33:34: @19[6]: _27 = &amp;mut _17\n+33:11-33:35: @19.Call: _26 = Pin::&lt;&amp;mut [generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}]&gt;::new(move _27) -&gt; [return: bb20, unwind: bb26]\n+33:43-33:45: @20[2]: _28 = ()\n+33:11-33:46: @20.Call: _25 = &lt;[generator@../coverage/yield.rs:22:25: 27:6 {i32, ()}] as Generator&gt;::resume(move _26, move _28) -&gt; [return: bb21, unwind: bb26]\n+33:11-33:46: @21[2]: FakeRead(ForMatchedPlace, _25)\n+34:9-34:35: @21[3]: _29 = discriminant(_25)\">        GeneratorState::Yielded(2)<span class=\"annotation\">\u2989@17,19,20,21</span></span></span><span class=\"code\" style=\"--layer: 0\"> =&gt; </span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"34:39-34:41: @25[0]: _0 = const ()\"><span class=\"annotation\">@23,25\u298a</span>{}<span class=\"annotation\">\u2989@23,25</span></span></span><span class=\"code\" style=\"--layer: 0\"></span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">        _ =&gt; </span><span><span class=\"code even\" style=\"--layer: 1\" title=\"35:14-35:52: @24.Call: begin_panic::&lt;&amp;str&gt;(const &quot;unexpected value from resume&quot;) -&gt; bb26\"><span class=\"annotation\">@24\u298a</span>panic!(\"unexpected value from resume\")<span class=\"annotation\">\u2989@24</span></span></span><span class=\"code\" style=\"--layer: 0\">,</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">    }</span></span>\n+<span class=\"line\"><span class=\"code\" style=\"--layer: 0\">}</span><span><span class=\"code odd\" style=\"--layer: 1\" title=\"37:2-37:2: @25.Return: return\"><span class=\"annotation\">@23,25\u298a</span>\u2038<span class=\"annotation\">\u2989@23,25</span></span></span></span></div>\n+</body>\n+</html>"}, {"sha": "01c5c92054717b39126e6ebe51da161f8cd0fa89", "filename": "src/test/run-make-fulldeps/coverage/abort.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fabort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fabort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fabort.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,34 @@\n+#![feature(unwind_attributes)]\n+#![allow(unused_assignments)]\n+\n+#[unwind(aborts)]\n+fn might_abort(should_abort: bool) {\n+    if should_abort {\n+        println!(\"aborting...\");\n+        panic!(\"panics and aborts\");\n+    } else {\n+        println!(\"Don't Panic\");\n+    }\n+}\n+\n+fn main() -> Result<(),u8> {\n+    let mut countdown = 10;\n+    while countdown > 0 {\n+        if countdown < 5 {\n+            might_abort(false);\n+        }\n+        countdown -= 1;\n+    }\n+    Ok(())\n+}\n+\n+// Notes:\n+//   1. Compare this program and its coverage results to those of the similar tests\n+//      `panic_unwind.rs` and `try_error_result.rs`.\n+//   2. This test confirms the coverage generated when a program includes `TerminatorKind::Abort`.\n+//   3. The test does not invoke the abort. By executing to a successful completion, the coverage\n+//      results show where the program did and did not execute.\n+//   4. If the program actually aborted, the coverage counters would not be saved (which \"works as\n+//      intended\"). Coverage results would show no executed coverage regions.\n+//   6. If `should_abort` is `true` and the program aborts, the program exits with a `132` status\n+//      (on Linux at least)."}, {"sha": "c85f2748eb9d893b4eb8f4941c991601a1f2adc3", "filename": "src/test/run-make-fulldeps/coverage/assert.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fassert.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,32 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-101\n+\n+fn might_fail_assert(one_plus_one: u32) {\n+    println!(\"does 1 + 1 = {}?\", one_plus_one);\n+    assert_eq!(1 + 1, one_plus_one, \"the argument was wrong\");\n+}\n+\n+fn main() -> Result<(),u8> {\n+    let mut countdown = 10;\n+    while countdown > 0 {\n+        if countdown == 1 {\n+            might_fail_assert(3);\n+        } else if countdown < 5 {\n+            might_fail_assert(2);\n+        }\n+        countdown -= 1;\n+    }\n+    Ok(())\n+}\n+\n+// Notes:\n+//   1. Compare this program and its coverage results to those of the very similar test\n+//      `panic_unwind.rs`, and similar tests `abort.rs` and `try_error_result.rs`.\n+//   2. This test confirms the coverage generated when a program passes or fails an `assert!()` or\n+//      related `assert_*!()` macro.\n+//   3. Notably, the `assert` macros *do not* generate `TerminatorKind::Assert`. The macros produce\n+//      conditional expressions, `TerminatorKind::SwitchInt` branches, and a possible call to\n+//      `begin_panic_fmt()` (that begins a panic unwind, if the assertion test fails).\n+//   4. `TerminatoKind::Assert` is, however, also present in the MIR generated for this test\n+//      (and in many other coverage tests). The `Assert` terminator is typically generated by the\n+//      Rust compiler to check for runtime failures, such as numeric overflows."}, {"sha": "f69b8dce89339f3662c65a368a569b32e51bc40a", "filename": "src/test/run-make-fulldeps/coverage/async.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fasync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fasync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fasync.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,64 @@\n+#![allow(unused_assignments)]\n+\n+// require-rust-edition-2018\n+\n+async fn f() -> u8 { 1 }\n+\n+async fn foo() -> [bool; 10] { [false; 10] }\n+\n+pub async fn g(x: u8) {\n+    match x {\n+        y if f().await == y => (),\n+        _ => (),\n+    }\n+}\n+\n+// #78366: check the reference to the binding is recorded even if the binding is not autorefed\n+\n+async fn h(x: usize) {\n+    match x {\n+        y if foo().await[y] => (),\n+        _ => (),\n+    }\n+}\n+\n+async fn i(x: u8) {\n+    match x {\n+        y if f().await == y + 1 => (),\n+        _ => (),\n+    }\n+}\n+\n+fn main() {\n+    let _ = g(10);\n+    let _ = h(9);\n+    let mut future = Box::pin(i(8));\n+    executor::block_on(future.as_mut());\n+}\n+\n+mod executor {\n+    use core::{\n+        future::Future,\n+        pin::Pin,\n+        task::{Context, Poll, RawWaker, RawWakerVTable, Waker},\n+    };\n+\n+    pub fn block_on<F: Future>(mut future: F) -> F::Output {\n+        let mut future = unsafe { Pin::new_unchecked(&mut future) };\n+\n+        static VTABLE: RawWakerVTable = RawWakerVTable::new(\n+            |_| unimplemented!(\"clone\"),\n+            |_| unimplemented!(\"wake\"),\n+            |_| unimplemented!(\"wake_by_ref\"),\n+            |_| (),\n+        );\n+        let waker = unsafe { Waker::from_raw(RawWaker::new(core::ptr::null(), &VTABLE)) };\n+        let mut context = Context::from_waker(&waker);\n+\n+        loop {\n+            if let Poll::Ready(val) = future.as_mut().poll(&mut context) {\n+                break val;\n+            }\n+        }\n+    }\n+}"}, {"sha": "1a8bafa50d468188f03217548d92febb5e921ef6", "filename": "src/test/run-make-fulldeps/coverage/conditions.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fconditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fconditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fconditions.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -36,6 +36,42 @@ fn main() {\n         return;\n     }\n \n+    if true {\n+        // Demonstrate the difference with `TerminatorKind::Assert` as of 2020-11-15. Assert is no\n+        // longer treated as a `BasicCoverageBlock` terminator, which changed the coverage region,\n+        // for the executed `then` block above, to include the closing brace on line 30. That\n+        // changed the line count, but the coverage code region (for the `else if` condition) is\n+        // still valid.\n+        //\n+        // Note that `if` (then) and `else` blocks include the closing brace in their coverage\n+        // code regions when the last line in the block ends in a semicolon, because the Rust\n+        // compiler inserts a `StatementKind::Assign` to assign `const ()` to a `Place`, for the\n+        // empty value for the executed block. When the last line does not end in a semicolon\n+        // (that is, when the block actually results in a value), the additional `Assign` is not\n+        // generated, and the brace is not included.\n+        let mut countdown = 0;\n+        if true {\n+            countdown = 10;\n+        }\n+\n+        if countdown > 7 {\n+            countdown -= 4;\n+        }\n+        // The closing brace of the `then` branch is now included in the coverage region, and shown\n+        // as \"executed\" (giving its line a count of 1 here). Since, in the original version above,\n+        // the closing brace shares the same line as the `else if` conditional expression (which is\n+        // not executed if the first `then` condition is true), only the condition's code region is\n+        // marked with a count of 0 now.\n+        else if countdown > 2 {\n+            if countdown < 1 || countdown > 5 || countdown != 9 {\n+                countdown = 0;\n+            }\n+            countdown -= 5;\n+        } else {\n+            return;\n+        }\n+    }\n+\n     let mut countdown = 0;\n     if true {\n         countdown = 1;"}, {"sha": "867a3566ac3afb6af46c7ecb8f49d7f588d348ef", "filename": "src/test/run-make-fulldeps/coverage/coverage_tools.mk", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fcoverage_tools.mk?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -44,8 +44,3 @@ LLVM_VERSION_11_PLUS := $(shell \\\n \t\tLLVM_VERSION=$$(\"$(LLVM_BIN_DIR)\"/llvm-config --version) && \\\n \t\tLLVM_VERSION_MAJOR=$${LLVM_VERSION/.*/} && \\\n \t\t[ $$LLVM_VERSION_MAJOR -ge 11 ] && echo true || echo false)\n-\n-# FIXME(richkadel): Can any of the features tested by `run-make-fulldeps/coverage-*` tests be tested\n-# just as completely by more focused unit tests of the code logic itself, to reduce the number of\n-# test result files generated and maintained, and to help identify specific test failures and root\n-# causes more easily?"}, {"sha": "e537b0e95c32a5226b1ddcfc06848f4a048e11fe", "filename": "src/test/run-make-fulldeps/coverage/overflow.rs", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Foverflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Foverflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Foverflow.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,63 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-101\n+\n+fn might_overflow(to_add: u32) -> u32 {\n+    if to_add > 5 {\n+        println!(\"this will probably overflow\");\n+    }\n+    let add_to = u32::MAX - 5;\n+    println!(\"does {} + {} overflow?\", add_to, to_add);\n+    let result = to_add + add_to;\n+    println!(\"continuing after overflow check\");\n+    result\n+}\n+\n+fn main() -> Result<(),u8> {\n+    let mut countdown = 10;\n+    while countdown > 0 {\n+        if countdown == 1 {\n+            let result = might_overflow(10);\n+            println!(\"Result: {}\", result);\n+        } else if countdown < 5 {\n+            let result = might_overflow(1);\n+            println!(\"Result: {}\", result);\n+        }\n+        countdown -= 1;\n+    }\n+    Ok(())\n+}\n+\n+// Notes:\n+//   1. Compare this program and its coverage results to those of the very similar test `assert.rs`,\n+//      and similar tests `panic_unwind.rs`, abort.rs` and `try_error_result.rs`.\n+//   2. This test confirms the coverage generated when a program passes or fails a\n+//      compiler-generated `TerminatorKind::Assert` (based on an overflow check, in this case).\n+//   3. Similar to how the coverage instrumentation handles `TerminatorKind::Call`,\n+//      compiler-generated assertion failures are assumed to be a symptom of a program bug, not\n+//      expected behavior. To simplify the coverage graphs and keep instrumented programs as\n+//      small and fast as possible, `Assert` terminators are assumed to always succeed, and\n+//      therefore are considered \"non-branching\" terminators. So, an `Assert` terminator does not\n+//      get its own coverage counter.\n+//   4. After an unhandled panic or failed Assert, coverage results may not always be intuitive.\n+//      In this test, the final count for the statements after the `if` block in `might_overflow()`\n+//      is 4, even though the lines after `to_add + add_to` were executed only 3 times. Depending\n+//      on the MIR graph and the structure of the code, this count could have been 3 (which might\n+//      have been valid for the overflowed add `+`, but should have been 4 for the lines before\n+//      the overflow. The reason for this potential uncertainty is, a `CounterKind` is incremented\n+//      via StatementKind::Counter at the end of the block, but (as in the case in this test),\n+//      a CounterKind::Expression is always evaluated. In this case, the expression was based on\n+//      a `Counter` incremented as part of the evaluation of the `if` expression, which was\n+//      executed, and counted, 4 times, before reaching the overflow add.\n+\n+// If the program did not overflow, the coverage for `might_overflow()` would look like this:\n+//\n+//     4|       |fn might_overflow(to_add: u32) -> u32 {\n+//     5|      4|    if to_add > 5 {\n+//     6|      0|        println!(\"this will probably overflow\");\n+//     7|      4|    }\n+//     8|      4|    let add_to = u32::MAX - 5;\n+//     9|      4|    println!(\"does {} + {} overflow?\", add_to, to_add);\n+//    10|      4|    let result = to_add + add_to;\n+//    11|      4|    println!(\"continuing after overflow check\");\n+//    12|      4|    result\n+//    13|      4|}"}, {"sha": "02fa01ab962341d2f2721841910d9509c0678673", "filename": "src/test/run-make-fulldeps/coverage/panic_unwind.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fpanic_unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fpanic_unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fpanic_unwind.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,49 @@\n+#![allow(unused_assignments)]\n+// expect-exit-status-101\n+\n+fn might_panic(should_panic: bool) {\n+    if should_panic {\n+        println!(\"panicking...\");\n+        panic!(\"panics\");\n+    } else {\n+        println!(\"Don't Panic\");\n+    }\n+}\n+\n+fn main() -> Result<(),u8> {\n+    let mut countdown = 10;\n+    while countdown > 0 {\n+        if countdown == 1 {\n+            might_panic(true);\n+        } else if countdown < 5 {\n+            might_panic(false);\n+        }\n+        countdown -= 1;\n+    }\n+    Ok(())\n+}\n+\n+// Notes:\n+//   1. Compare this program and its coverage results to those of the similar tests `abort.rs` and\n+//      `try_error_result.rs`.\n+//   2. Since the `panic_unwind.rs` test is allowed to unwind, it is also allowed to execute the\n+//      normal program exit cleanup, including writing out the current values of the coverage\n+//      counters.\n+//   3. The coverage results show (interestingly) that the `panic!()` call did execute, but it does\n+//      not show coverage of the `if countdown == 1` branch in `main()` that calls\n+//      `might_panic(true)` (causing the call to `panic!()`).\n+//   4. The reason `main()`s `if countdown == 1` branch, calling `might_panic(true)`, appears\n+//      \"uncovered\" is, InstrumentCoverage (intentionally) treats `TerminatorKind::Call` terminators\n+//      as non-branching, because when a program executes normally, they always are. Errors handled\n+//      via the try `?` operator produce error handling branches that *are* treated as branches in\n+//      coverage results. By treating calls without try `?` operators as non-branching (assumed to\n+//      return normally and continue) the coverage graph can be simplified, producing smaller,\n+//      faster binaries, and cleaner coverage results.\n+//   5. The reason the coverage results actually show `panic!()` was called is most likely because\n+//      `panic!()` is a macro, not a simple function call, and there are other `Statement`s and/or\n+//      `Terminator`s that execute with a coverage counter before the panic and unwind occur.\n+//   6. By best practice, programs should not panic. By design, the coverage implementation will not\n+//      incur additional cost (in program size and execution time) to improve coverage results for\n+//      an event that is not supposted to happen.\n+//   7. FIXME(#78544): This issue describes a feature request for a proposed option to enable\n+//      more accurate coverage results for tests that intentionally panic."}, {"sha": "ff7616656ff507da51eac66051a226dfb2b4dd79", "filename": "src/test/run-make-fulldeps/coverage/yield.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fyield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fyield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fcoverage%2Fyield.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -0,0 +1,37 @@\n+#![feature(generators, generator_trait)]\n+#![allow(unused_assignments)]\n+\n+use std::ops::{Generator, GeneratorState};\n+use std::pin::Pin;\n+\n+fn main() {\n+    let mut generator = || {\n+        yield 1;\n+        return \"foo\"\n+    };\n+\n+    match Pin::new(&mut generator).resume(()) {\n+        GeneratorState::Yielded(1) => {}\n+        _ => panic!(\"unexpected value from resume\"),\n+    }\n+    match Pin::new(&mut generator).resume(()) {\n+        GeneratorState::Complete(\"foo\") => {}\n+        _ => panic!(\"unexpected value from resume\"),\n+    }\n+\n+    let mut generator = || {\n+        yield 1;\n+        yield 2;\n+        yield 3;\n+        return \"foo\"\n+    };\n+\n+    match Pin::new(&mut generator).resume(()) {\n+        GeneratorState::Yielded(1) => {}\n+        _ => panic!(\"unexpected value from resume\"),\n+    }\n+    match Pin::new(&mut generator).resume(()) {\n+        GeneratorState::Yielded(2) => {}\n+        _ => panic!(\"unexpected value from resume\"),\n+    }\n+}"}, {"sha": "5177dae8a66043454a330ef735e021f6e5d93f60", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c45ee4bb29000cc0d02b11afa682852b5174b8a5/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=c45ee4bb29000cc0d02b11afa682852b5174b8a5", "patch": "@@ -508,8 +508,6 @@ fn common_inputs_stamp(config: &Config) -> Stamp {\n         stamp.add_path(&rustdoc_path);\n         stamp.add_path(&rust_src_dir.join(\"src/etc/htmldocck.py\"));\n     }\n-    // FIXME(richkadel): Do I need to add an `if let Some(rust_demangler_path) contribution to the\n-    // stamp here as well?\n \n     // Compiletest itself.\n     stamp.add_dir(&rust_src_dir.join(\"src/tools/compiletest/\"));"}]}