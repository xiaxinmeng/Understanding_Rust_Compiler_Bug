{"sha": "4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiNTlhZTBhYTkwNTFlNmE1ZmJlYzQzZDBjOWJiOGExMmMwNzExZTA=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-22T01:14:39Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-22T01:14:39Z"}, "message": "Add some support for using a map like a set.", "tree": {"sha": "9b5960aaa6d03643d2052bfebff73d56ec203251", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b5960aaa6d03643d2052bfebff73d56ec203251"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "html_url": "https://github.com/rust-lang/rust/commit/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb024253765c9537d1fa1f789caa4d3f9afe03e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb024253765c9537d1fa1f789caa4d3f9afe03e8", "html_url": "https://github.com/rust-lang/rust/commit/cb024253765c9537d1fa1f789caa4d3f9afe03e8"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "78f99f75f18f3a6ec57fe6404fe3ec831da162a6", "filename": "src/comp/middle/ast_map.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0/src%2Fcomp%2Fmiddle%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0/src%2Fcomp%2Fmiddle%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fast_map.rs?ref=4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "patch": "@@ -105,6 +105,11 @@ fn new_smallintmap_adapter[K, V](fn(&K) -> uint key_idx,\n                 idx += 1u;\n             }\n         }\n+        iter keys() -> K {\n+            for each (@tup(K, V) p in self.items()) {\n+                put p._0;\n+            }\n+        }\n     }\n \n     auto map = smallintmap::mk[V]();"}, {"sha": "61572308427af42ff57a03642059ca9fe26df282", "filename": "src/lib/map.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0/src%2Flib%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0/src%2Flib%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fmap.rs?ref=4b59ae0aa9051e6a5fbec43d0c9bb8a12c0711e0", "patch": "@@ -1,6 +1,5 @@\n /**\n- * At the moment, this is a partial hashmap implementation, not yet fit for\n- * use, but useful as a stress test for rustboot.\n+ * Hashmap implementation.\n  */\n type hashfn[K] = fn(&K) -> uint ;\n \n@@ -16,7 +15,13 @@ type hashmap[K, V] =\n         fn remove(&K) -> option::t[V] ;\n         fn rehash() ;\n         iter items() -> @tup(K, V) ;\n+        iter keys() -> K ;\n     };\n+type hashset[K] = hashmap[K, ()];\n+\n+fn set_add[K](hashset[K] set, &K key) -> bool {\n+    ret set.insert(key, ());\n+}\n \n fn mk_hashmap[K, V](&hashfn[K] hasher, &eqfn[K] eqer) -> hashmap[K, V] {\n     let uint initial_capacity = 32u; // 2^5\n@@ -188,6 +193,14 @@ fn mk_hashmap[K, V](&hashfn[K] hasher, &eqfn[K] eqer) -> hashmap[K, V] {\n                 }\n             }\n         }\n+        iter keys() -> K {\n+            for (bucket[K, V] b in bkts) {\n+                alt (b) {\n+                    case (some(?k, _)) { put k; }\n+                    case (_) { }\n+                }\n+            }\n+        }\n     }\n     auto bkts = make_buckets[K, V](initial_capacity);\n     ret hashmap[K, V](hasher, eqer, bkts, initial_capacity, 0u, load_factor);"}]}