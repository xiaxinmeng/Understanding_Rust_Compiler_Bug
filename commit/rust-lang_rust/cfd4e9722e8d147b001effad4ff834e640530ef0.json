{"sha": "cfd4e9722e8d147b001effad4ff834e640530ef0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmZDRlOTcyMmU4ZDE0N2IwMDFlZmZhZDRmZjgzNGU2NDA1MzBlZjA=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-12T11:09:02Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-11-14T12:05:56Z"}, "message": "Fix ui tests with better error code usage", "tree": {"sha": "43a50ebf1c5b8f45b15e67955a02d912c96a07c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43a50ebf1c5b8f45b15e67955a02d912c96a07c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfd4e9722e8d147b001effad4ff834e640530ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd4e9722e8d147b001effad4ff834e640530ef0", "html_url": "https://github.com/rust-lang/rust/commit/cfd4e9722e8d147b001effad4ff834e640530ef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfd4e9722e8d147b001effad4ff834e640530ef0/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cd274632f8c78dbd534c016d5298655a5c116221", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd274632f8c78dbd534c016d5298655a5c116221", "html_url": "https://github.com/rust-lang/rust/commit/cd274632f8c78dbd534c016d5298655a5c116221"}], "stats": {"total": 61, "additions": 39, "deletions": 22}, "files": [{"sha": "a279421241facb67424d8d0940118f2643e8edfb", "filename": "src/test/ui/asm/asm-bad-clobber.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fasm-bad-clobber.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fasm-bad-clobber.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fasm-bad-clobber.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |         asm!(\"xor %eax, %eax\" : : : \"{eax}\");\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0664`."}, {"sha": "d45b3e57038cd15e3094a70736ee1f6af718f692", "filename": "src/test/ui/asm/asm-in-bad-modifier.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fasm-in-bad-modifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fasm-in-bad-modifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fasm-in-bad-modifier.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -12,3 +12,5 @@ LL |         asm!(\"mov $1, $0\" : \"=r\"(y) : \"+r\"(5));\n \n error: aborting due to 2 previous errors\n \n+Some errors have detailed explanations: E0662, E0663.\n+For more information about an error, try `rustc --explain E0662`."}, {"sha": "99134ceba33274d252cb8ae8c6811a410ef063cd", "filename": "src/test/ui/asm/asm-out-no-modifier.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fasm-out-no-modifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fasm-out-no-modifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fasm-out-no-modifier.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |         asm!(\"mov $1, $0\" : \"r\"(x) : \"r\"(5));\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0661`."}, {"sha": "f78d1831973b6ecbdbf895aa5c045afca61155a0", "filename": "src/test/ui/asm/issue-51431.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fissue-51431.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fasm%2Fissue-51431.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fissue-51431.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |         asm! {\"mov $0,$1\"::\"0\"(\"bx\"),\"1\"(0x00)}\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0669`."}, {"sha": "dee33f574d84a5bbb799e485d10b30a56473f70d", "filename": "src/test/ui/bad/bad-intrinsic-monomorphization.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fbad%2Fbad-intrinsic-monomorphization.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fbad%2Fbad-intrinsic-monomorphization.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-intrinsic-monomorphization.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -18,3 +18,4 @@ LL |     simd_add(a, b)\n \n error: aborting due to 3 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "1362a3d1f254a558ce459fe3f2b6b8c3ca8cf367", "filename": "src/test/ui/error-codes/E0511.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0511.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0511.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0511.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |     unsafe { simd_add(0, 1); }\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "d355531ef5d91fa3c7977efad3b3725aee31ce48", "filename": "src/test/ui/error-codes/E0660.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0660.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0660.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0660.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -12,3 +12,4 @@ LL |     asm!(\"nop\" \"nop\" : \"=r\"(a));\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0660`."}, {"sha": "6e849649aca2a87a43b775240970644002da2d35", "filename": "src/test/ui/error-codes/E0661.stderr", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0661.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0661.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0661.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -12,4 +12,5 @@ LL |     let a;\n \n error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0282`.\n+Some errors have detailed explanations: E0282, E0661.\n+For more information about an error, try `rustc --explain E0282`."}, {"sha": "7480f03c3d4c3077524b31d470b24613bb2eff4e", "filename": "src/test/ui/error-codes/E0662.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0662.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0662.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0662.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |          : \"=test\"(\"a\")\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0662`."}, {"sha": "2b7598d1577a638be27f3e1422e0addce9638eff", "filename": "src/test/ui/error-codes/E0663.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0663.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0663.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0663.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |          : \"+test\"(\"a\")\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0663`."}, {"sha": "224fc63696a995490ac6ec1d8c599489edc41564", "filename": "src/test/ui/error-codes/E0664.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0664.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0664.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0664.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |          : \"{eax}\"\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0664`."}, {"sha": "2c2b498e39a43c85502d21828fe50d1e9b89abbb", "filename": "src/test/ui/error-codes/E0665.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0665.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Ferror-codes%2FE0665.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0665.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL | #[derive(Default)]\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0665`."}, {"sha": "391ac68041e0b51501b0f14dd85c6ec28980af42", "filename": "src/test/ui/explain.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fexplain.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fexplain.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexplain.stdout?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -1,4 +1,4 @@\n-Per [RFC 401][rfc401], if you have a function declaration `foo`:\n+er [RFC 401][rfc401], if you have a function declaration `foo`:\n \n ```\n // For the purposes of this explanation, all of these"}, {"sha": "59066e5e7fc7cf3cf986acad9cb4209c76ec9eab", "filename": "src/test/ui/inline-asm-bad-constraint.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Finline-asm-bad-constraint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Finline-asm-bad-constraint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-asm-bad-constraint.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -18,3 +18,4 @@ LL |         asm!(\"addb $1, $0\" : \"={rax}\"((0i32, rax)));\n \n error: aborting due to 3 previous errors\n \n+For more information about this error, try `rustc --explain E0668`."}, {"sha": "b8e7e9acfecae1e4d24ce4066f90d59a472b3a9e", "filename": "src/test/ui/inline-asm-bad-operand.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Finline-asm-bad-operand.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Finline-asm-bad-operand.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-asm-bad-operand.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -42,3 +42,4 @@ LL | ...                   \"r\"(\"hello e0669\"));\n \n error: aborting due to 7 previous errors\n \n+For more information about this error, try `rustc --explain E0669`."}, {"sha": "956694fc2cd7e2c9026c68f7c6689317929cf806", "filename": "src/test/ui/issues/issue-37433.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fissues%2Fissue-37433.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fissues%2Fissue-37433.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37433.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |         asm!(\"\" :: \"r\"(\"\"));\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0669`."}, {"sha": "f96bcaa492c0749d53fe368f83432a285c3a024e", "filename": "src/test/ui/issues/issue-53787-inline-assembler-macro.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fissues%2Fissue-53787-inline-assembler-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fissues%2Fissue-53787-inline-assembler-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53787-inline-assembler-macro.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -6,3 +6,4 @@ LL |     fake_jump!(\"FirstFunc\");\n \n error: aborting due to previous error\n \n+For more information about this error, try `rustc --explain E0669`."}, {"sha": "39f6b69bbecaad7c9108433d4470fbb952cd2457", "filename": "src/test/ui/json-bom-plus-crlf-multifile.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fjson-bom-plus-crlf-multifile.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fjson-bom-plus-crlf-multifile.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-bom-plus-crlf-multifile.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -1,5 +1,4 @@\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the\n@@ -19,8 +18,7 @@ let x: i32 = \\\"I am not a number!\\\";\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `std::string::String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected type `std::string::String`\n    found type `{integer}`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:17:22: error[E0308]: mismatched types\n \"}\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the\n@@ -40,8 +38,7 @@ let x: i32 = \\\"I am not a number!\\\";\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `std::string::String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected type `std::string::String`\n    found type `{integer}`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:19:22: error[E0308]: mismatched types\n \"}\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the\n@@ -61,8 +58,7 @@ let x: i32 = \\\"I am not a number!\\\";\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":\"expected struct `std::string::String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected type `std::string::String`\n    found type `{integer}`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:23:1: error[E0308]: mismatched types\n \"}\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the"}, {"sha": "d62140e4de765ebf3dbde7add3898049d3756564", "filename": "src/test/ui/json-bom-plus-crlf.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fjson-bom-plus-crlf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fjson-bom-plus-crlf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-bom-plus-crlf.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -1,5 +1,4 @@\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the\n@@ -19,8 +18,7 @@ let x: i32 = \\\"I am not a number!\\\";\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `std::string::String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected type `std::string::String`\n    found type `{integer}`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:17:22: error[E0308]: mismatched types\n \"}\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the\n@@ -40,8 +38,7 @@ let x: i32 = \\\"I am not a number!\\\";\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `std::string::String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected type `std::string::String`\n    found type `{integer}`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:19:22: error[E0308]: mismatched types\n \"}\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the\n@@ -61,8 +58,7 @@ let x: i32 = \\\"I am not a number!\\\";\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":\"expected struct `std::string::String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"expected type `std::string::String`\n    found type `{integer}`\",\"code\":null,\"level\":\"note\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:23:1: error[E0308]: mismatched types\n \"}\n-{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"\n-This error occurs when the compiler was unable to infer the concrete type of a\n+{\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"This error occurs when the compiler was unable to infer the concrete type of a\n variable. It can occur for several cases, the most common of which is a\n mismatch in the expected type that the compiler inferred for a variable's\n initializing expression, and the actual type explicitly assigned to the"}, {"sha": "83fc83778a8538a9b81101df6126b3bc7ae4bfa9", "filename": "src/test/ui/json-short.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fjson-short.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fjson-short.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-short.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -1,5 +1,4 @@\n-{\"message\":\"`main` function not found in crate `json_short`\",\"code\":{\"code\":\"E0601\",\"explanation\":\"\n-No `main` function was found in a binary crate. To fix this error, add a\n+{\"message\":\"`main` function not found in crate `json_short`\",\"code\":{\"code\":\"E0601\",\"explanation\":\"No `main` function was found in a binary crate. To fix this error, add a\n `main` function. For example:\n \n ```"}, {"sha": "0dc0d247af5c13265ac9748681a0dae0b7dd689a", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -2,8 +2,7 @@\n   \"message\": \"cannot find type `Iter` in this scope\",\n   \"code\": {\n     \"code\": \"E0412\",\n-    \"explanation\": \"\n-The type name used is not in scope.\n+    \"explanation\": \"The type name used is not in scope.\n \n Erroneous code examples:\n "}, {"sha": "d29e6b4d46f63e11e6ccb3d865c1e27b784e1f29", "filename": "src/test/ui/macros/macros-nonfatal-errors.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -89,3 +89,4 @@ LL |     trace_macros!(invalid);\n \n error: aborting due to 14 previous errors\n \n+For more information about this error, try `rustc --explain E0665`."}, {"sha": "2a06b617aec0eba99536ea6d162b0c4a393607fc", "filename": "src/test/ui/non-integer-atomic.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fnon-integer-atomic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fnon-integer-atomic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-integer-atomic.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -96,3 +96,4 @@ LL |     intrinsics::atomic_cxchg(p, v, v);\n \n error: aborting due to 16 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "0e88540bcc8e509def586b61793f79569d419900", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-arithmetic-saturating.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic-saturating.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -12,3 +12,4 @@ LL |         simd_saturating_sub(z, z);\n \n error: aborting due to 2 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "27493950af0c6ce8fff5049b5d284e255f8ffb01", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-arithmetic.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-arithmetic.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -84,3 +84,4 @@ LL |         simd_xor(z, z);\n \n error: aborting due to 14 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "d016838d098d49473682300733ce45d0e467b27a", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-bitmask.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-bitmask.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -30,3 +30,4 @@ LL |         let _: u128 = simd_bitmask(m64);\n \n error: aborting due to 5 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "6e33e3b30f505da8fc8d5778fc5d48578b4408ec", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-cast.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-cast.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -24,3 +24,4 @@ LL |         simd_cast::<_, i32x8>(x);\n \n error: aborting due to 4 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "d8da2e5ee57884d6d61e86c64ebd32e89905175e", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-comparison.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-comparison.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -108,3 +108,4 @@ LL |         simd_ge::<_, i16x8>(x, x);\n \n error: aborting due to 18 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "2f8ffb6035e53bf0268740ed7c39f5583cb13117", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-elements.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -90,3 +90,4 @@ LL |         simd_shuffle8::<_, i32x2>(x, x, [0; 8]);\n \n error: aborting due to 15 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "5f2a67dc14e6c742383cc2d95c7c87cc8e3395a9", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-reduction.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-reduction.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-reduction.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-reduction.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -60,3 +60,4 @@ LL |         let _: bool = simd_reduce_any(z);\n \n error: aborting due to 10 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}, {"sha": "a46352c730802964688e1393ec854d89f3e30126", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-select.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-select.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cfd4e9722e8d147b001effad4ff834e640530ef0/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-select.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-select.stderr?ref=cfd4e9722e8d147b001effad4ff834e640530ef0", "patch": "@@ -48,3 +48,4 @@ LL |         simd_select_bitmask(\"x\", x, x);\n \n error: aborting due to 8 previous errors\n \n+For more information about this error, try `rustc --explain E0511`."}]}