{"sha": "9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhMTdmNjI5NDdkMGMwNzlmMWM4NzdkZTRmZTFkYWI1YjJjNTAwZDk=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-03T15:54:06Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-02-03T15:54:06Z"}, "message": "Optimize rposition\n\nThe extra check caused by the expect() call can, in general, not be\noptimized away, because the length of the iterator is unknown at compile\ntime, causing a noticable slow-down. Since the check only triggers if\nthe element isn't actually found in the iterator, i.e. it isn't\nguaranteed to trigger for ill-behaved ExactSizeIterators, it seems\nreasonable to switch to an implementation that doesn't need the check\nand just always returns None if the value isn't found.\n\nBenchmark:\n````rust\nlet v: Vec<u8> = (0..1024*65).map(|_| 0).collect();\nb.iter(|| {\n    v.as_slice().iter().rposition(|&c| c == 1)\n});\n````\n\nBefore:\n````\ntest rposition  ... bench:     49939 ns/iter (+/- 23)\n````\n\nAfter:\n````\ntest rposition  ... bench:     33306 ns/iter (+/- 68)\n````", "tree": {"sha": "c173d432fbc6cd1158f504cf69794ba45e545930", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c173d432fbc6cd1158f504cf69794ba45e545930"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "html_url": "https://github.com/rust-lang/rust/commit/9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a17f62947d0c079f1c877de4fe1dab5b2c500d9/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d072a193bfcb76206aab576049e696d6d8db25d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d072a193bfcb76206aab576049e696d6d8db25d", "html_url": "https://github.com/rust-lang/rust/commit/3d072a193bfcb76206aab576049e696d6d8db25d"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "417bcab5140aff56c234f9f67473daa054a41da9", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9a17f62947d0c079f1c877de4fe1dab5b2c500d9/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a17f62947d0c079f1c877de4fe1dab5b2c500d9/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=9a17f62947d0c079f1c877de4fe1dab5b2c500d9", "patch": "@@ -723,11 +723,12 @@ pub trait IteratorExt: Iterator + Sized {\n         P: FnMut(Self::Item) -> bool,\n         Self: ExactSizeIterator + DoubleEndedIterator\n     {\n-        let len = self.len();\n-        for i in (0..len).rev() {\n-            if predicate(self.next_back().expect(\"rposition: incorrect ExactSizeIterator\")) {\n+        let mut i = self.len() - 1;\n+        while let Some(v) = self.next_back() {\n+            if predicate(v) {\n                 return Some(i);\n             }\n+            i -= 1;\n         }\n         None\n     }"}]}