{"sha": "f81cd87eeae2b02ebfcf309764cd9e648040b988", "node_id": "C_kwDOAAsO6NoAKGY4MWNkODdlZWFlMmIwMmViZmNmMzA5NzY0Y2Q5ZTY0ODA0MGI5ODg", "commit": {"author": {"name": "Finn Bear", "email": "finnbearlabs@gmail.com", "date": "2022-10-20T02:07:45Z"}, "committer": {"name": "Finn Bear", "email": "finnbearlabs@gmail.com", "date": "2022-10-20T02:07:45Z"}, "message": "Copy of #102941.", "tree": {"sha": "fbbee311ca09224d07017e1d2113195c5aa22e45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fbbee311ca09224d07017e1d2113195c5aa22e45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f81cd87eeae2b02ebfcf309764cd9e648040b988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f81cd87eeae2b02ebfcf309764cd9e648040b988", "html_url": "https://github.com/rust-lang/rust/commit/f81cd87eeae2b02ebfcf309764cd9e648040b988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f81cd87eeae2b02ebfcf309764cd9e648040b988/comments", "author": {"login": "finnbear", "id": 20015102, "node_id": "MDQ6VXNlcjIwMDE1MTAy", "avatar_url": "https://avatars.githubusercontent.com/u/20015102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finnbear", "html_url": "https://github.com/finnbear", "followers_url": "https://api.github.com/users/finnbear/followers", "following_url": "https://api.github.com/users/finnbear/following{/other_user}", "gists_url": "https://api.github.com/users/finnbear/gists{/gist_id}", "starred_url": "https://api.github.com/users/finnbear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finnbear/subscriptions", "organizations_url": "https://api.github.com/users/finnbear/orgs", "repos_url": "https://api.github.com/users/finnbear/repos", "events_url": "https://api.github.com/users/finnbear/events{/privacy}", "received_events_url": "https://api.github.com/users/finnbear/received_events", "type": "User", "site_admin": false}, "committer": {"login": "finnbear", "id": 20015102, "node_id": "MDQ6VXNlcjIwMDE1MTAy", "avatar_url": "https://avatars.githubusercontent.com/u/20015102?v=4", "gravatar_id": "", "url": "https://api.github.com/users/finnbear", "html_url": "https://github.com/finnbear", "followers_url": "https://api.github.com/users/finnbear/followers", "following_url": "https://api.github.com/users/finnbear/following{/other_user}", "gists_url": "https://api.github.com/users/finnbear/gists{/gist_id}", "starred_url": "https://api.github.com/users/finnbear/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/finnbear/subscriptions", "organizations_url": "https://api.github.com/users/finnbear/orgs", "repos_url": "https://api.github.com/users/finnbear/repos", "events_url": "https://api.github.com/users/finnbear/events{/privacy}", "received_events_url": "https://api.github.com/users/finnbear/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57781b24c54f9548722927ba88c343ff28da94ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/57781b24c54f9548722927ba88c343ff28da94ce", "html_url": "https://github.com/rust-lang/rust/commit/57781b24c54f9548722927ba88c343ff28da94ce"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "9bda7f5dc37352c15a3ea804758458ed2d7f924a", "filename": "library/alloc/src/string.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f81cd87eeae2b02ebfcf309764cd9e648040b988/library%2Falloc%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f81cd87eeae2b02ebfcf309764cd9e648040b988/library%2Falloc%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fstring.rs?ref=f81cd87eeae2b02ebfcf309764cd9e648040b988", "patch": "@@ -67,7 +67,7 @@ use core::str::Utf8Chunks;\n use crate::borrow::{Cow, ToOwned};\n use crate::boxed::Box;\n use crate::collections::TryReserveError;\n-use crate::str::{self, Chars, Utf8Error};\n+use crate::str::{self, from_utf8_unchecked_mut, Chars, Utf8Error};\n #[cfg(not(no_global_oom_handling))]\n use crate::str::{from_boxed_utf8_unchecked, FromStr};\n use crate::vec::Vec;\n@@ -2691,6 +2691,35 @@ impl From<String> for Box<str> {\n     fn from(s: String) -> Box<str> {\n         s.into_boxed_str()\n     }\n+\n+    /// Consumes and leaks the `String`, returning a mutable reference to the contents,\n+    /// `&'a mut str`.\n+    ///\n+    /// This is mainly useful for data that lives for the remainder of\n+    /// the program's life. Dropping the returned reference will cause a memory\n+    /// leak.\n+    ///\n+    /// It does not reallocate or shrink the `String`,\n+    /// so the leaked allocation may include unused capacity that is not part\n+    /// of the returned slice.\n+    ///\n+    /// # Examples\n+    ///\n+    /// Simple usage:\n+    ///\n+    /// ```\n+    /// #![feature(string_leak)]\n+    ///\n+    /// let x = String::from(\"bucket\");\n+    /// let static_ref: &'static mut str = x.leak();\n+    /// assert_eq!(static_ref, \"bucket\");\n+    /// ```\n+    #[unstable(feature = \"string_leak\", issue = \"102929\")]\n+    #[inline]\n+    pub fn leak(self) -> &'static mut str {\n+        let slice = self.vec.leak();\n+        unsafe { from_utf8_unchecked_mut(slice) }\n+    }\n }\n \n #[cfg(not(no_global_oom_handling))]"}]}