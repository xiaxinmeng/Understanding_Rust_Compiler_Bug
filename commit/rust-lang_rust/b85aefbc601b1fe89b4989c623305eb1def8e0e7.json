{"sha": "b85aefbc601b1fe89b4989c623305eb1def8e0e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4NWFlZmJjNjAxYjFmZTg5YjQ5ODljNjIzMzA1ZWIxZGVmOGUwZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-21T03:38:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-01-21T03:38:34Z"}, "message": "Auto merge of #47495 - nikomatsakis:nll-issue-47153, r=pnkfelix\n\nremove bogus assertion and comments\n\nThe code (incorrectly) assumed that constants could not have generics\nin scope, but it's not really a problem if they do.\n\nFixes #47153\n\nr? @pnkfelix", "tree": {"sha": "13c671a0d061dd5c974934033a78d7c5094e00d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13c671a0d061dd5c974934033a78d7c5094e00d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b85aefbc601b1fe89b4989c623305eb1def8e0e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b85aefbc601b1fe89b4989c623305eb1def8e0e7", "html_url": "https://github.com/rust-lang/rust/commit/b85aefbc601b1fe89b4989c623305eb1def8e0e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b85aefbc601b1fe89b4989c623305eb1def8e0e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15a1e2844dfea7850be5c6c901b67ceff370b0eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/15a1e2844dfea7850be5c6c901b67ceff370b0eb", "html_url": "https://github.com/rust-lang/rust/commit/15a1e2844dfea7850be5c6c901b67ceff370b0eb"}, {"sha": "3b390e5420e9fd8b142f90cc5fd74ddb85ce9ef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b390e5420e9fd8b142f90cc5fd74ddb85ce9ef4", "html_url": "https://github.com/rust-lang/rust/commit/3b390e5420e9fd8b142f90cc5fd74ddb85ce9ef4"}], "stats": {"total": 40, "additions": 31, "deletions": 9}, "files": [{"sha": "7703235b4b7411acae1f3b74a69f8c19f18aa282", "filename": "src/librustc_mir/borrow_check/nll/universal_regions.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b85aefbc601b1fe89b4989c623305eb1def8e0e7/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b85aefbc601b1fe89b4989c623305eb1def8e0e7/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Funiversal_regions.rs?ref=b85aefbc601b1fe89b4989c623305eb1def8e0e7", "patch": "@@ -584,13 +584,9 @@ impl<'cx, 'gcx, 'tcx> UniversalRegionsBuilder<'cx, 'gcx, 'tcx> {\n \n             DefiningTy::FnDef(_, substs) => substs,\n \n-            // When we encounter other sorts of constant\n-            // expressions, such as the `22` in `[foo; 22]`, we can\n-            // get the type `usize` here. For now, just return an\n-            // empty vector of substs in this case, since there are no\n-            // generics in scope in such expressions right now.\n+            // When we encounter a constant body, just return whatever\n+            // substitutions are in scope for that constant.\n             DefiningTy::Const(_) => {\n-                assert!(identity_substs.is_empty());\n                 identity_substs\n             }\n         };\n@@ -654,9 +650,8 @@ impl<'cx, 'gcx, 'tcx> UniversalRegionsBuilder<'cx, 'gcx, 'tcx> {\n                 sig.inputs_and_output()\n             }\n \n-            // This happens on things like `[foo; 22]`. Hence, no\n-            // inputs, one output, but it seems like we need a more\n-            // general way to handle this category of MIR.\n+            // For a constant body, there are no inputs, and one\n+            // \"output\" (the type of the constant).\n             DefiningTy::Const(ty) => ty::Binder::dummy(tcx.mk_type_list(iter::once(ty))),\n         }\n     }"}, {"sha": "9708ca1c14279a23f90ac29947cdeec15cbb7b61", "filename": "src/test/run-pass/nll/issue-47153-generic-const.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/b85aefbc601b1fe89b4989c623305eb1def8e0e7/src%2Ftest%2Frun-pass%2Fnll%2Fissue-47153-generic-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b85aefbc601b1fe89b4989c623305eb1def8e0e7/src%2Ftest%2Frun-pass%2Fnll%2Fissue-47153-generic-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnll%2Fissue-47153-generic-const.rs?ref=b85aefbc601b1fe89b4989c623305eb1def8e0e7", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Regression test for #47153: constants in a generic context (such as\n+// a trait) used to ICE.\n+\n+#![feature(nll)]\n+#![allow(warnings)]\n+\n+trait Foo {\n+    const B: bool = true;\n+}\n+\n+struct Bar<T> { x: T }\n+\n+impl<T> Bar<T> {\n+    const B: bool = true;\n+}\n+\n+fn main() { }"}]}