{"sha": "4473b945bf1f4b189fc452591444b3e0e99f84ff", "node_id": "C_kwDOAAsO6NoAKDQ0NzNiOTQ1YmYxZjRiMTg5ZmM0NTI1OTE0NDRiM2UwZTk5Zjg0ZmY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-10-10T16:22:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-10T16:22:18Z"}, "message": "Rollup merge of #88713 - falk-hueffner:int-log10-documentation-fixes, r=scottmcm\n\nImprove docs for int_log\n\n* Clarify rounding.\n* Avoid \"wrapping\" wording.\n* Omit wrong claim on 0 only being returned in error cases.\n* Typo fix for one_less_than_next_power_of_two.", "tree": {"sha": "85610432048d0acf9c60029d1486bc88298db527", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85610432048d0acf9c60029d1486bc88298db527"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4473b945bf1f4b189fc452591444b3e0e99f84ff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhYxM6CRBK7hj4Ov3rIwAAgOQIAKZ/7Vvu2q0dFWu3ahzKr5ww\nYjRnOtlw2+hGkLxNjaNuq9nGSFsqGG8H2P5uoFYyCRR7M08FseO4QpRQA+TGuQRr\nxLWP4m44Cck1Jbf+DFaYMp4+8mbvhpvWgnuGw0Eyk0MoXtI+sTgRUsNqfhnGmYVq\n9UKQ+MmRNMbULtScLHfbrE+3ZqFWUyKPbb0RXqDZFq6aZ445jQrCHmEuwFfaDGaJ\nA1vG6AcNLuPzEVn1/h9rppunXtps+EydHzAyKiDMz9/4LLRdOGtpUc+mW+eToSD4\nouWIeQGevVrLGH63SlYkfyW6PbRtrSpx/zKIjcucY0/Yhjtg/qGnjoQL4c0UixM=\n=dE1J\n-----END PGP SIGNATURE-----\n", "payload": "tree 85610432048d0acf9c60029d1486bc88298db527\nparent fd5bed73d0e0cd04e5616436950cf01df4cb30f8\nparent 138ebd19c696996a8f4c99586d207bf02f7eeaf5\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1633882938 +0200\ncommitter GitHub <noreply@github.com> 1633882938 +0200\n\nRollup merge of #88713 - falk-hueffner:int-log10-documentation-fixes, r=scottmcm\n\nImprove docs for int_log\n\n* Clarify rounding.\n* Avoid \"wrapping\" wording.\n* Omit wrong claim on 0 only being returned in error cases.\n* Typo fix for one_less_than_next_power_of_two.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4473b945bf1f4b189fc452591444b3e0e99f84ff", "html_url": "https://github.com/rust-lang/rust/commit/4473b945bf1f4b189fc452591444b3e0e99f84ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4473b945bf1f4b189fc452591444b3e0e99f84ff/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd5bed73d0e0cd04e5616436950cf01df4cb30f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd5bed73d0e0cd04e5616436950cf01df4cb30f8", "html_url": "https://github.com/rust-lang/rust/commit/fd5bed73d0e0cd04e5616436950cf01df4cb30f8"}, {"sha": "138ebd19c696996a8f4c99586d207bf02f7eeaf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/138ebd19c696996a8f4c99586d207bf02f7eeaf5", "html_url": "https://github.com/rust-lang/rust/commit/138ebd19c696996a8f4c99586d207bf02f7eeaf5"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "7e8a55d12ddce5850e383a7ff129f213173468e3", "filename": "library/core/src/num/int_macros.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/4473b945bf1f4b189fc452591444b3e0e99f84ff/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4473b945bf1f4b189fc452591444b3e0e99f84ff/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fint_macros.rs?ref=4473b945bf1f4b189fc452591444b3e0e99f84ff", "patch": "@@ -2199,7 +2199,8 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Returns the logarithm of the number with respect to an arbitrary base.\n+        /// Returns the logarithm of the number with respect to an arbitrary base,\n+        /// rounded down.\n         ///\n         /// This method might not be optimized owing to implementation details;\n         /// `log2` can produce results more efficiently for base 2, and `log10`\n@@ -2208,8 +2209,8 @@ macro_rules! int_impl {\n         /// # Panics\n         ///\n         /// When the number is zero, or if the base is not at least 2; it\n-        /// panics in debug mode and the return value is wrapped to 0 in release\n-        /// mode (the only situation in which the method can return 0).\n+        /// panics in debug mode and the return value is 0 in release\n+        /// mode.\n         ///\n         /// # Examples\n         ///\n@@ -2237,13 +2238,12 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Returns the base 2 logarithm of the number.\n+        /// Returns the base 2 logarithm of the number, rounded down.\n         ///\n         /// # Panics\n         ///\n         /// When the number is zero it panics in debug mode and the return value\n-        /// is wrapped to 0 in release mode (the only situation in which the\n-        /// method can return 0).\n+        /// is 0 in release mode.\n         ///\n         /// # Examples\n         ///\n@@ -2271,13 +2271,12 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Returns the base 10 logarithm of the number.\n+        /// Returns the base 10 logarithm of the number, rounded down.\n         ///\n         /// # Panics\n         ///\n         /// When the number is zero it panics in debug mode and the return value\n-        /// is wrapped to 0 in release mode (the only situation in which the\n-        /// method can return 0).\n+        /// is 0 in release mode.\n         ///\n         /// # Example\n         ///\n@@ -2305,7 +2304,8 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Returns the logarithm of the number with respect to an arbitrary base.\n+        /// Returns the logarithm of the number with respect to an arbitrary base,\n+        /// rounded down.\n         ///\n         /// Returns `None` if the number is negative or zero, or if the base is not at least 2.\n         ///\n@@ -2345,7 +2345,7 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Returns the base 2 logarithm of the number.\n+        /// Returns the base 2 logarithm of the number, rounded down.\n         ///\n         /// Returns `None` if the number is negative or zero.\n         ///\n@@ -2369,7 +2369,7 @@ macro_rules! int_impl {\n             }\n         }\n \n-        /// Returns the base 10 logarithm of the number.\n+        /// Returns the base 10 logarithm of the number, rounded down.\n         ///\n         /// Returns `None` if the number is negative or zero.\n         ///"}, {"sha": "bed9d4b23ef983ead64c15cec2907ae33f7851a3", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4473b945bf1f4b189fc452591444b3e0e99f84ff/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4473b945bf1f4b189fc452591444b3e0e99f84ff/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=4473b945bf1f4b189fc452591444b3e0e99f84ff", "patch": "@@ -658,7 +658,8 @@ macro_rules! uint_impl {\n             }\n         }\n \n-        /// Returns the logarithm of the number with respect to an arbitrary base.\n+        /// Returns the logarithm of the number with respect to an arbitrary base,\n+        /// rounded down.\n         ///\n         /// This method might not be optimized owing to implementation details;\n         /// `log2` can produce results more efficiently for base 2, and `log10`\n@@ -667,8 +668,7 @@ macro_rules! uint_impl {\n         /// # Panics\n         ///\n         /// When the number is negative, zero, or if the base is not at least 2;\n-        /// it panics in debug mode and the return value is wrapped to 0 in\n-        /// release mode (the only situation in which the method can return 0).\n+        /// it panics in debug mode and the return value is 0 in release mode.\n         ///\n         /// # Examples\n         ///\n@@ -696,13 +696,12 @@ macro_rules! uint_impl {\n             }\n         }\n \n-        /// Returns the base 2 logarithm of the number.\n+        /// Returns the base 2 logarithm of the number, rounded down.\n         ///\n         /// # Panics\n         ///\n         /// When the number is negative or zero it panics in debug mode and\n-        /// the return value is wrapped to 0 in release mode (the only situation in\n-        /// which the method can return 0).\n+        /// the return value is 0 in release mode.\n         ///\n         /// # Examples\n         ///\n@@ -730,13 +729,12 @@ macro_rules! uint_impl {\n             }\n         }\n \n-        /// Returns the base 10 logarithm of the number.\n+        /// Returns the base 10 logarithm of the number, rounded down.\n         ///\n         /// # Panics\n         ///\n         /// When the number is negative or zero it panics in debug mode and the\n-        /// return value is wrapped to 0 in release mode (the only situation in\n-        /// which the method can return 0).\n+        /// return value is 0 in release mode.\n         ///\n         /// # Example\n         ///\n@@ -764,7 +762,8 @@ macro_rules! uint_impl {\n             }\n         }\n \n-        /// Returns the logarithm of the number with respect to an arbitrary base.\n+        /// Returns the logarithm of the number with respect to an arbitrary base,\n+        /// rounded down.\n         ///\n         /// Returns `None` if the number is zero, or if the base is not at least 2.\n         ///\n@@ -804,7 +803,7 @@ macro_rules! uint_impl {\n             }\n         }\n \n-        /// Returns the base 2 logarithm of the number.\n+        /// Returns the base 2 logarithm of the number, rounded down.\n         ///\n         /// Returns `None` if the number is zero.\n         ///\n@@ -828,7 +827,7 @@ macro_rules! uint_impl {\n             }\n         }\n \n-        /// Returns the base 10 logarithm of the number.\n+        /// Returns the base 10 logarithm of the number, rounded down.\n         ///\n         /// Returns `None` if the number is zero.\n         ///\n@@ -2120,7 +2119,7 @@ macro_rules! uint_impl {\n         /// Returns the smallest power of two greater than or equal to `self`.\n         ///\n         /// When return value overflows (i.e., `self > (1 << (N-1))` for type\n-        /// `uN`), it panics in debug mode and return value is wrapped to 0 in\n+        /// `uN`), it panics in debug mode and the return value is wrapped to 0 in\n         /// release mode (the only situation in which method can return 0).\n         ///\n         /// # Examples"}]}