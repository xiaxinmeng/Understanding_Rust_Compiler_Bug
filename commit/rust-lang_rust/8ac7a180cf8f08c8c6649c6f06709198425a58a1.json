{"sha": "8ac7a180cf8f08c8c6649c6f06709198425a58a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYzdhMTgwY2Y4ZjA4YzhjNjY0OWM2ZjA2NzA5MTk4NDI1YTU4YTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-04T16:31:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-04T16:31:41Z"}, "message": "Merge pull request #3456 from matklad/nighly-release\n\nNightly binary releases", "tree": {"sha": "08ce28b3d0e6352a6bf600b968e6ccac03df6893", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08ce28b3d0e6352a6bf600b968e6ccac03df6893"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ac7a180cf8f08c8c6649c6f06709198425a58a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeX9ftCRBK7hj4Ov3rIwAAdHIIAGx5nXW+/ckdXXjUFxWjIk2L\nQX+SSoKMSSC5XlxdGPbjhfr02G+G0X/pu3AgC9z9herkGneilNxD2YmPFXkckO+Y\nIhKsxY3kdmI50YC0nFiyMDJtMAEINzVBynpYQGsH5OcLH9ECzKSPnrTKjlxjmCK8\nznZbUDEn98+xJVCWhFFd3m1G2NRSDeEbOE6CGESHG5lA1ziTx3KtWq02x3Mzmss7\nye+ymHJMoqSFDGhHkxbXtMCcf49x1ScS4o09PO6caEsEWBCueDrHfB+K/F91SL8J\nVBI/UDmL18aZnjqv3jrTeN4wopN5EEStOX/yXiAKbwqs+MFrXD2m75x0ppUiWfU=\n=VmZ1\n-----END PGP SIGNATURE-----\n", "payload": "tree 08ce28b3d0e6352a6bf600b968e6ccac03df6893\nparent 56f0f15805813b91a7a0778163d977a71adc4d00\nparent 86ec5b391732679770c8706f9d336e1f0d34bf02\nauthor Aleksey Kladov <aleksey.kladov@gmail.com> 1583339501 +0100\ncommitter GitHub <noreply@github.com> 1583339501 +0100\n\nMerge pull request #3456 from matklad/nighly-release\n\nNightly binary releases"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac7a180cf8f08c8c6649c6f06709198425a58a1", "html_url": "https://github.com/rust-lang/rust/commit/8ac7a180cf8f08c8c6649c6f06709198425a58a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ac7a180cf8f08c8c6649c6f06709198425a58a1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56f0f15805813b91a7a0778163d977a71adc4d00", "url": "https://api.github.com/repos/rust-lang/rust/commits/56f0f15805813b91a7a0778163d977a71adc4d00", "html_url": "https://github.com/rust-lang/rust/commit/56f0f15805813b91a7a0778163d977a71adc4d00"}, {"sha": "86ec5b391732679770c8706f9d336e1f0d34bf02", "url": "https://api.github.com/repos/rust-lang/rust/commits/86ec5b391732679770c8706f9d336e1f0d34bf02", "html_url": "https://github.com/rust-lang/rust/commit/86ec5b391732679770c8706f9d336e1f0d34bf02"}], "stats": {"total": 230, "additions": 183, "deletions": 47}, "files": [{"sha": "5849eac7d246a30549ffff371a5e54ae0d099967", "filename": ".github/actions/github-release/Dockerfile", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Factions%2Fgithub-release%2FDockerfile?ref=8ac7a180cf8f08c8c6649c6f06709198425a58a1", "patch": "@@ -0,0 +1,8 @@\n+FROM node:slim\n+\n+COPY . /action\n+WORKDIR /action\n+\n+RUN npm install --production\n+\n+ENTRYPOINT [\"node\", \"/action/main.js\"]"}, {"sha": "7b50d002001ee85a3fcdf0d4ac67638332b176d5", "filename": ".github/actions/github-release/README.md", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Factions%2Fgithub-release%2FREADME.md?ref=8ac7a180cf8f08c8c6649c6f06709198425a58a1", "patch": "@@ -0,0 +1,21 @@\n+# github-release\n+\n+Copy-pasted from\n+https://github.com/bytecodealliance/wasmtime/tree/8acfdbdd8aa550d1b84e0ce1e6222a6605d14e38/.github/actions/github-release\n+\n+An action used to publish GitHub releases for `wasmtime`.\n+\n+As of the time of this writing there's a few actions floating around which\n+perform github releases but they all tend to have their set of drawbacks.\n+Additionally nothing handles deleting releases which we need for our rolling\n+`dev` release.\n+\n+To handle all this this action rolls-its-own implementation using the\n+actions/toolkit repository and packages published there. These run in a Docker\n+container and take various inputs to orchestrate the release from the build.\n+\n+More comments can be found in `main.js`.\n+\n+Testing this is really hard. If you want to try though run `npm install` and\n+then `node main.js`. You'll have to configure a bunch of env vars though to get\n+anything reasonably working."}, {"sha": "51a074adfaa886dba302f4e019002cb19ba23e15", "filename": ".github/actions/github-release/action.yml", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2Faction.yml", "raw_url": "https://github.com/rust-lang/rust/raw/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2Faction.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Factions%2Fgithub-release%2Faction.yml?ref=8ac7a180cf8f08c8c6649c6f06709198425a58a1", "patch": "@@ -0,0 +1,15 @@\n+name: 'wasmtime github releases'\n+description: 'wasmtime github releases'\n+inputs:\n+  token:\n+    description: ''\n+    required: true\n+  name:\n+    description: ''\n+    required: true\n+  files:\n+    description: ''\n+    required: true\n+runs:\n+  using: 'docker'\n+  image: 'Dockerfile'"}, {"sha": "295c026261677b10229bc5b96eb7f844a6b37a01", "filename": ".github/actions/github-release/main.js", "status": "added", "additions": 117, "deletions": 0, "changes": 117, "blob_url": "https://github.com/rust-lang/rust/blob/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Factions%2Fgithub-release%2Fmain.js?ref=8ac7a180cf8f08c8c6649c6f06709198425a58a1", "patch": "@@ -0,0 +1,117 @@\n+const core = require('@actions/core');\n+const path = require(\"path\");\n+const fs = require(\"fs\");\n+const github = require('@actions/github');\n+const glob = require('glob');\n+\n+function sleep(milliseconds) {\n+  return new Promise(resolve => setTimeout(resolve, milliseconds))\n+}\n+\n+async function runOnce() {\n+  // Load all our inputs and env vars. Note that `getInput` reads from `INPUT_*`\n+  const files = core.getInput('files');\n+  const name = core.getInput('name');\n+  const token = core.getInput('token');\n+  const slug = process.env.GITHUB_REPOSITORY;\n+  const owner = slug.split('/')[0];\n+  const repo = slug.split('/')[1];\n+  const sha = process.env.GITHUB_SHA;\n+\n+  core.info(`files: ${files}`);\n+  core.info(`name: ${name}`);\n+  core.info(`token: ${token}`);\n+\n+  const octokit = new github.GitHub(token);\n+\n+  // Delete the previous release since we can't overwrite one. This may happen\n+  // due to retrying an upload or it may happen because we're doing the dev\n+  // release.\n+  const releases = await octokit.paginate(\"GET /repos/:owner/:repo/releases\", { owner, repo });\n+  for (const release of releases) {\n+    if (release.tag_name !== name) {\n+      continue;\n+    }\n+    const release_id = release.id;\n+    core.info(`deleting release ${release_id}`);\n+    await octokit.repos.deleteRelease({ owner, repo, release_id });\n+  }\n+\n+  // We also need to update the `dev` tag while we're at it on the `dev` branch.\n+  if (name == 'nightly') {\n+    try {\n+      core.info(`updating nightly tag`);\n+      await octokit.git.updateRef({\n+          owner,\n+          repo,\n+          ref: 'tags/nightly',\n+          sha,\n+          force: true,\n+      });\n+    } catch (e) {\n+      console.log(\"ERROR: \", JSON.stringify(e, null, 2));\n+      core.info(`creating nightly tag`);\n+      await octokit.git.createTag({\n+        owner,\n+        repo,\n+        tag: 'nightly',\n+        message: 'nightly release',\n+        object: sha,\n+        type: 'commit',\n+      });\n+    }\n+  }\n+\n+  // Creates an official GitHub release for this `tag`, and if this is `dev`\n+  // then we know that from the previous block this should be a fresh release.\n+  core.info(`creating a release`);\n+  const release = await octokit.repos.createRelease({\n+    owner,\n+    repo,\n+    tag_name: name,\n+    prerelease: name === 'nightly',\n+  });\n+\n+  // Upload all the relevant assets for this release as just general blobs.\n+  for (const file of glob.sync(files)) {\n+    const size = fs.statSync(file).size;\n+    core.info(`upload ${file}`);\n+    await octokit.repos.uploadReleaseAsset({\n+      data: fs.createReadStream(file),\n+      headers: { 'content-length': size, 'content-type': 'application/octet-stream' },\n+      name: path.basename(file),\n+      url: release.data.upload_url,\n+    });\n+  }\n+}\n+\n+async function run() {\n+  const retries = 10;\n+  for (let i = 0; i < retries; i++) {\n+    try {\n+      await runOnce();\n+      break;\n+    } catch (e) {\n+      if (i === retries - 1)\n+        throw e;\n+      logError(e);\n+      console.log(\"RETRYING after 10s\");\n+      await sleep(10000)\n+    }\n+  }\n+}\n+\n+function logError(e) {\n+  console.log(\"ERROR: \", e.message);\n+  try {\n+    console.log(JSON.stringify(e, null, 2));\n+  } catch (e) {\n+    // ignore json errors for now\n+  }\n+  console.log(e.stack);\n+}\n+\n+run().catch(err => {\n+  logError(err);\n+  core.setFailed(err.message);\n+});"}, {"sha": "abfc55f6ff2b53e432de70257d4c6c758eb505c6", "filename": ".github/actions/github-release/package.json", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Factions%2Fgithub-release%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Factions%2Fgithub-release%2Fpackage.json?ref=8ac7a180cf8f08c8c6649c6f06709198425a58a1", "patch": "@@ -0,0 +1,10 @@\n+{\n+  \"name\": \"wasmtime-github-release\",\n+  \"version\": \"0.0.0\",\n+  \"main\": \"main.js\",\n+  \"dependencies\": {\n+    \"@actions/core\": \"^1.0.0\",\n+    \"@actions/github\": \"^1.0.0\",\n+    \"glob\": \"^7.1.5\"\n+  }\n+}"}, {"sha": "30f1ff22f3a33c0d4eb4aa80ce0a4c65e2150960", "filename": ".github/workflows/release.yaml", "status": "modified", "additions": 12, "deletions": 47, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Fworkflows%2Frelease.yaml", "raw_url": "https://github.com/rust-lang/rust/raw/8ac7a180cf8f08c8c6649c6f06709198425a58a1/.github%2Fworkflows%2Frelease.yaml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Frelease.yaml?ref=8ac7a180cf8f08c8c6649c6f06709198425a58a1", "patch": "@@ -1,5 +1,8 @@\n name: release\n on:\n+  schedule:\n+  - cron: '0 0 * * *' # midnight UTC\n+\n   push:\n     branches:\n     - release\n@@ -113,6 +116,9 @@ jobs:\n         node-version: 12.x\n \n     - run: echo \"::set-env name=TAG::$(date --iso)\"\n+      if: github.event_name == 'push'\n+    - run: echo \"::set-env name=TAG::nightly\"\n+      if: github.event_name != 'push'\n     - run: 'echo \"TAG: $TAG\"'\n \n     - name: Checkout repository\n@@ -136,59 +142,18 @@ jobs:\n         path: dist\n     - run: ls -all ./dist\n \n-    - name: Create Release\n-      id: create_release\n-      # uses: actions/create-release@v1\n-      # https://github.com/actions/create-release/pull/32\n-      uses: fleskesvor/create-release@1a72e235c178bf2ae6c51a8ae36febc24568c5fe\n-      env:\n-        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-      with:\n-        tag_name: ${{ env.TAG }}\n-        release_name: ${{ env.TAG }}\n-        draft: false\n-        prerelease: false\n-\n-    - uses: actions/upload-release-asset@v1.0.1\n-      env:\n-        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-      with:\n-        upload_url: ${{ steps.create_release.outputs.upload_url }}\n-        asset_path: ./dist/rust-analyzer-linux\n-        asset_name: rust-analyzer-linux\n-        asset_content_type: application/octet-stream\n-\n-    - uses: actions/upload-release-asset@v1.0.1\n-      env:\n-        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-      with:\n-        upload_url: ${{ steps.create_release.outputs.upload_url }}\n-        asset_path: ./dist/rust-analyzer-mac\n-        asset_name: rust-analyzer-mac\n-        asset_content_type: application/octet-stream\n-\n-    - uses: actions/upload-release-asset@v1.0.1\n-      env:\n-        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n-      with:\n-        upload_url: ${{ steps.create_release.outputs.upload_url }}\n-        asset_path: ./dist/rust-analyzer-windows.exe\n-        asset_name: rust-analyzer-windows.exe\n-        asset_content_type: application/octet-stream\n-\n-    - uses: actions/upload-release-asset@v1.0.1\n-      env:\n-        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+    - name: Publish Release\n+      uses: ./.github/actions/github-release\n       with:\n-        upload_url: ${{ steps.create_release.outputs.upload_url }}\n-        asset_path: ./dist/rust-analyzer.vsix\n-        asset_name: rust-analyzer.vsix\n-        asset_content_type: application/octet-stream\n+        files: \"dist/*\"\n+        name: ${{ env.TAG }}\n+        token: ${{ secrets.GITHUB_TOKEN }}\n \n     - run: npm ci\n       working-directory: ./editors/code\n \n     - name: Publish Extension\n+      if: github.event_name == 'push'\n       working-directory: ./editors/code\n       # token from https://dev.azure.com/rust-analyzer/\n       run: npx vsce publish 0.1.$(date +%Y%m%d) --pat ${{ secrets.MARKETPLACE_TOKEN }}"}]}