{"sha": "4d4574f5b69bca3938408bb324863a61d62950c2", "node_id": "C_kwDOAAsO6NoAKDRkNDU3NGY1YjY5YmNhMzkzODQwOGJiMzI0ODYzYTYxZDYyOTUwYzI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-03T14:40:41Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-04T16:36:58Z"}, "message": "Enable markdown tables", "tree": {"sha": "c2a68529c226639c2ed69baaedc5581d28d08816", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2a68529c226639c2ed69baaedc5581d28d08816"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d4574f5b69bca3938408bb324863a61d62950c2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d4574f5b69bca3938408bb324863a61d62950c2", "html_url": "https://github.com/rust-lang/rust/commit/4d4574f5b69bca3938408bb324863a61d62950c2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d4574f5b69bca3938408bb324863a61d62950c2/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9fa37f5b4e452a496bd7c4baeba08cbdebf6336", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9fa37f5b4e452a496bd7c4baeba08cbdebf6336", "html_url": "https://github.com/rust-lang/rust/commit/b9fa37f5b4e452a496bd7c4baeba08cbdebf6336"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "a34ef87eac5de943d0a7aaa3d314a675f8817211", "filename": "crates/ide/src/doc_links.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4d4574f5b69bca3938408bb324863a61d62950c2/crates%2Fide%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d4574f5b69bca3938408bb324863a61d62950c2/crates%2Fide%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdoc_links.rs?ref=4d4574f5b69bca3938408bb324863a61d62950c2", "patch": "@@ -32,11 +32,13 @@ use crate::{\n /// Weblink to an item's documentation.\n pub(crate) type DocumentationLink = String;\n \n+const MARKDOWN_OPTIONS: Options =\n+    Options::ENABLE_FOOTNOTES.union(Options::ENABLE_TABLES).union(Options::ENABLE_TASKLISTS);\n+\n /// Rewrite documentation links in markdown to point to an online host (e.g. docs.rs)\n pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: Definition) -> String {\n     let mut cb = broken_link_clone_cb;\n-    let doc =\n-        Parser::new_with_broken_link_callback(markdown, Options::ENABLE_TASKLISTS, Some(&mut cb));\n+    let doc = Parser::new_with_broken_link_callback(markdown, MARKDOWN_OPTIONS, Some(&mut cb));\n \n     let doc = map_links(doc, |target, title| {\n         // This check is imperfect, there's some overlap between valid intra-doc links\n@@ -75,13 +77,11 @@ pub(crate) fn rewrite_links(db: &RootDatabase, markdown: &str, definition: Defin\n pub(crate) fn remove_links(markdown: &str) -> String {\n     let mut drop_link = false;\n \n-    let opts = Options::ENABLE_TASKLISTS | Options::ENABLE_FOOTNOTES;\n-\n     let mut cb = |_: BrokenLink| {\n         let empty = InlineStr::try_from(\"\").unwrap();\n         Some((CowStr::Inlined(empty), CowStr::Inlined(empty)))\n     };\n-    let doc = Parser::new_with_broken_link_callback(markdown, opts, Some(&mut cb));\n+    let doc = Parser::new_with_broken_link_callback(markdown, MARKDOWN_OPTIONS, Some(&mut cb));\n     let doc = doc.filter_map(move |evt| match evt {\n         Event::Start(Tag::Link(link_type, target, title)) => {\n             if link_type == LinkType::Inline && target.contains(\"://\") {\n@@ -151,7 +151,7 @@ pub(crate) fn extract_definitions_from_docs(\n ) -> Vec<(TextRange, String, Option<hir::Namespace>)> {\n     Parser::new_with_broken_link_callback(\n         docs.as_str(),\n-        Options::ENABLE_TASKLISTS,\n+        MARKDOWN_OPTIONS,\n         Some(&mut broken_link_clone_cb),\n     )\n     .into_offset_iter()"}]}