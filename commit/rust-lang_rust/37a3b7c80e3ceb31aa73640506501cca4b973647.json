{"sha": "37a3b7c80e3ceb31aa73640506501cca4b973647", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3YTNiN2M4MGUzY2ViMzFhYTczNjQwNTA2NTAxY2NhNGI5NzM2NDc=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-14T09:43:10Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-12-14T09:43:10Z"}, "message": "format: remove unreachable condition", "tree": {"sha": "22df3b9d2f6730582ec720919050b3ca123de3b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22df3b9d2f6730582ec720919050b3ca123de3b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37a3b7c80e3ceb31aa73640506501cca4b973647", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37a3b7c80e3ceb31aa73640506501cca4b973647", "html_url": "https://github.com/rust-lang/rust/commit/37a3b7c80e3ceb31aa73640506501cca4b973647", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37a3b7c80e3ceb31aa73640506501cca4b973647/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97a0bd60820374165427962e9802f4f3c3f7ff7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/97a0bd60820374165427962e9802f4f3c3f7ff7b", "html_url": "https://github.com/rust-lang/rust/commit/97a0bd60820374165427962e9802f4f3c3f7ff7b"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "dff5309dd950f13db49b276247860dfff2edd67f", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/37a3b7c80e3ceb31aa73640506501cca4b973647/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37a3b7c80e3ceb31aa73640506501cca4b973647/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=37a3b7c80e3ceb31aa73640506501cca4b973647", "patch": "@@ -158,28 +158,15 @@ fn parse_args(ecx: &mut ExtCtxt,\n         } // accept trailing commas\n         if named || (p.token.is_ident() && p.look_ahead(1, |t| *t == token::Eq)) {\n             named = true;\n-            let ident = match p.token {\n-                token::Ident(i, _) => {\n-                    p.bump();\n-                    i\n-                }\n-                _ if named => {\n-                    ecx.span_err(\n-                        p.span,\n-                        \"expected ident, positional arguments cannot follow named arguments\",\n-                    );\n-                    return None;\n-                }\n-                _ => {\n-                    ecx.span_err(\n-                        p.span,\n-                        &format!(\n-                            \"expected ident for named argument, found `{}`\",\n-                            p.this_token_to_string()\n-                        ),\n-                    );\n-                    return None;\n-                }\n+            let ident = if let token::Ident(i, _) = p.token {\n+                p.bump();\n+                i\n+            } else {\n+                ecx.span_err(\n+                    p.span,\n+                    \"expected ident, positional arguments cannot follow named arguments\",\n+                );\n+                return None;\n             };\n             let name: &str = &ident.as_str();\n "}]}