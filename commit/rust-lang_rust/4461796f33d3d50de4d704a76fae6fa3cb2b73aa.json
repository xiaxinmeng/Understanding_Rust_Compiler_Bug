{"sha": "4461796f33d3d50de4d704a76fae6fa3cb2b73aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NjE3OTZmMzNkM2Q1MGRlNGQ3MDRhNzZmYWU2ZmEzY2IyYjczYWE=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-06-04T02:05:55Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-06-04T02:06:02Z"}, "message": "Fix type inference failure when built with log/kv_unstable\n\nThis code is broken by an `impl From<kv::Error> for fmt::Error` in the\nlog crate when building in a codebase that has the log/kv_unstable\nfeature enabled.\n\n    $ cargo check --manifest-path crates/ra_hir_def/Cargo.toml\n        Checking ra_hir_def v0.1.0\n        Finished dev [unoptimized] target(s) in 0.75s\n\n    $ cargo check --manifest-path crates/ra_hir_def/Cargo.toml --features log/kv_unstable\n        Checking ra_hir_def v0.1.0\n    error[E0282]: type annotations needed for the closure `fn(&str) -> std::result::Result<(), _>`\n       --> crates/ra_hir_def/src/path.rs:278:17\n        |\n    278 |                 f.write_str(\"::\")?;\n        |                 ^^^^^^^^^^^^^^^^^^ cannot infer type\n        |\n    help: give this closure an explicit return type without `_` placeholders\n        |\n    276 |         let mut add_segment = |s| -> std::result::Result<(), _> {\n        |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^", "tree": {"sha": "22a5e599efa77abdfa3dbd3043387f6c15e25dc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22a5e599efa77abdfa3dbd3043387f6c15e25dc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4461796f33d3d50de4d704a76fae6fa3cb2b73aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl7YV3EACgkQ+boUO5X/\nbYI5hxAAnQo0qrtR9Sgd3NMeu4y/Lewr9+cQ/Pg7YKVfQbpJPjKu3Mh+Ehfpveo3\nR2W2R3sxSx7YAnpCBR0bEvkdhI+v0i4cqb357S0GL3JjFetB4mU0fFPWP6lRkjqg\n49IV9hZYS8l51rNFT4rKPloAJktMRymz1bONH6ALkv7a1hQpe+9unq+haOyZTENY\nlozlkm49CKxb2A2TMpmwfRL9091W1O9fkH/pYeleu+vuUKaCbqcDQd9Ln00iM7vm\nDXBM8RTPXd2bRLYFMQ/V/vnXpTbuFHmVxwfD7sOd3sEiaYO/GjU3tZ92wmlkzX1y\nE9Tm2Lxp/kQlmOx5QYjl7GEkKpMUygqQtHpPyG9w2aonuMSTJA8zUn5asw6ZQbfN\ne1ygjCDoKAOxkolC07PdZVcYcSXzoykHkSmkmi05kKpSbR97AAl4RGobmzpkPBZ7\nDE+S8TozcYr4MyDun2GUvBfTxbvnVxUdbzT0n2EibJg5ErYDZ5WtsAPhVuQ82iiq\nRcoHlKNS1OfbcaMjGSyZG5c/pvCIhQ4k7BwUHPhEJJqrXyK3Nn6RDMv01zPxptNq\n/Xt90GzuJurB1ECnY+TyE9Ax3pCFd/f92mS2xIVyk9ZrXiJzPxHVG2Ldpbhsf4+w\nkXpHky88zjV/33YN2ObAWIUeiukNw3oIgi32P/q0d9qEvoDQDxs=\n=42Eh\n-----END PGP SIGNATURE-----", "payload": "tree 22a5e599efa77abdfa3dbd3043387f6c15e25dc6\nparent 1dba84019e0f3e7175f204624629a52013332e52\nauthor David Tolnay <dtolnay@gmail.com> 1591236355 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1591236362 -0700\n\nFix type inference failure when built with log/kv_unstable\n\nThis code is broken by an `impl From<kv::Error> for fmt::Error` in the\nlog crate when building in a codebase that has the log/kv_unstable\nfeature enabled.\n\n    $ cargo check --manifest-path crates/ra_hir_def/Cargo.toml\n        Checking ra_hir_def v0.1.0\n        Finished dev [unoptimized] target(s) in 0.75s\n\n    $ cargo check --manifest-path crates/ra_hir_def/Cargo.toml --features log/kv_unstable\n        Checking ra_hir_def v0.1.0\n    error[E0282]: type annotations needed for the closure `fn(&str) -> std::result::Result<(), _>`\n       --> crates/ra_hir_def/src/path.rs:278:17\n        |\n    278 |                 f.write_str(\"::\")?;\n        |                 ^^^^^^^^^^^^^^^^^^ cannot infer type\n        |\n    help: give this closure an explicit return type without `_` placeholders\n        |\n    276 |         let mut add_segment = |s| -> std::result::Result<(), _> {\n        |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4461796f33d3d50de4d704a76fae6fa3cb2b73aa", "html_url": "https://github.com/rust-lang/rust/commit/4461796f33d3d50de4d704a76fae6fa3cb2b73aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4461796f33d3d50de4d704a76fae6fa3cb2b73aa/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dba84019e0f3e7175f204624629a52013332e52", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dba84019e0f3e7175f204624629a52013332e52", "html_url": "https://github.com/rust-lang/rust/commit/1dba84019e0f3e7175f204624629a52013332e52"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "4512448e0284b352c11b1129d0dc54100b92f5ef", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4461796f33d3d50de4d704a76fae6fa3cb2b73aa/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4461796f33d3d50de4d704a76fae6fa3cb2b73aa/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=4461796f33d3d50de4d704a76fae6fa3cb2b73aa", "patch": "@@ -273,7 +273,7 @@ impl From<Name> for ModPath {\n impl Display for ModPath {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         let mut first_segment = true;\n-        let mut add_segment = |s| {\n+        let mut add_segment = |s| -> fmt::Result {\n             if !first_segment {\n                 f.write_str(\"::\")?;\n             }"}]}