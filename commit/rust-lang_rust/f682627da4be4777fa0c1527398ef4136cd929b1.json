{"sha": "f682627da4be4777fa0c1527398ef4136cd929b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ODI2MjdkYTRiZTQ3NzdmYTBjMTUyNzM5OGVmNDEzNmNkOTI5YjE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-27T14:56:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-27T14:56:24Z"}, "message": "Merge #7797\n\n7797: Format generated lints and features manually r=matklad a=lnicola\n\nAs `quote` and `rustfmt` leave them on a single line, which makes running `grep` in the repository quite annoying.\r\n\r\nAlso removes a dead `gen_features.rs` file (`gen_lint_completions.rs` does the same thing).\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "31317659408bc153c113df7b839582d7ba974c78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31317659408bc153c113df7b839582d7ba974c78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f682627da4be4777fa0c1527398ef4136cd929b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOl2YCRBK7hj4Ov3rIwAAdHIIADq61EL/NHRUFKJkRFmMVKHa\nbkFUih8JmrRu3n+czGHvg1opAis3zdXnTYnb2/iJM55+XByq1ltDrpKR52lBZ8s0\nz/7mQshuvq6WfcTlJi2GdLQiWgCOBjb0ATqbYgKuCPk05lgj5oGficg0z6rnTmD3\n8Qn6RT0ehJRNqz1E4TiAFaUBsZiWNBL5O8aEBvRc8xF/RTxwEBig456M329OLmip\nkue3V/sFBDEyWKYM9ePc6ZRHlpiOkUD87zN+7kcfsVfjOWUVFjbFijBaWRFJa1yV\nfO6wVKl+KTVpAGL/o+/4pBMxFyxcWCdGFleApldhEkc59tIQbbW+IanFtUpntV4=\n=ZRC/\n-----END PGP SIGNATURE-----\n", "payload": "tree 31317659408bc153c113df7b839582d7ba974c78\nparent a8cf346b972b5e79a3b18de5a7f71e49a228be7c\nparent 351670f6201d7ceabaec3e4b79e5dcf4c5048e12\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614437784 +0000\ncommitter GitHub <noreply@github.com> 1614437784 +0000\n\nMerge #7797\n\n7797: Format generated lints and features manually r=matklad a=lnicola\n\nAs `quote` and `rustfmt` leave them on a single line, which makes running `grep` in the repository quite annoying.\r\n\r\nAlso removes a dead `gen_features.rs` file (`gen_lint_completions.rs` does the same thing).\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f682627da4be4777fa0c1527398ef4136cd929b1", "html_url": "https://github.com/rust-lang/rust/commit/f682627da4be4777fa0c1527398ef4136cd929b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f682627da4be4777fa0c1527398ef4136cd929b1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8cf346b972b5e79a3b18de5a7f71e49a228be7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8cf346b972b5e79a3b18de5a7f71e49a228be7c", "html_url": "https://github.com/rust-lang/rust/commit/a8cf346b972b5e79a3b18de5a7f71e49a228be7c"}, {"sha": "351670f6201d7ceabaec3e4b79e5dcf4c5048e12", "url": "https://api.github.com/repos/rust-lang/rust/commits/351670f6201d7ceabaec3e4b79e5dcf4c5048e12", "html_url": "https://github.com/rust-lang/rust/commit/351670f6201d7ceabaec3e4b79e5dcf4c5048e12"}], "stats": {"total": 6493, "additions": 6411, "deletions": 82}, "files": [{"sha": "0d405350dd496ac1b023c980a411dae7ce6f9b10", "filename": "crates/ide_completion/src/generated_lint_completions.rs", "status": "modified", "additions": 6377, "deletions": 2, "changes": 6379, "blob_url": "https://github.com/rust-lang/rust/blob/f682627da4be4777fa0c1527398ef4136cd929b1/crates%2Fide_completion%2Fsrc%2Fgenerated_lint_completions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f682627da4be4777fa0c1527398ef4136cd929b1/crates%2Fide_completion%2Fsrc%2Fgenerated_lint_completions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fgenerated_lint_completions.rs?ref=f682627da4be4777fa0c1527398ef4136cd929b1"}, {"sha": "3cf15ce021741804f5e91aebb1bdcb0b7763e736", "filename": "xtask/src/codegen/gen_features.rs", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/a8cf346b972b5e79a3b18de5a7f71e49a228be7c/xtask%2Fsrc%2Fcodegen%2Fgen_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8cf346b972b5e79a3b18de5a7f71e49a228be7c/xtask%2Fsrc%2Fcodegen%2Fgen_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_features.rs?ref=a8cf346b972b5e79a3b18de5a7f71e49a228be7c", "patch": "@@ -1,48 +0,0 @@\n-//! Generates descriptors structure for unstable feature from Unstable Book\n-use std::path::{Path, PathBuf};\n-\n-use quote::quote;\n-use walkdir::WalkDir;\n-use xshell::{cmd, read_file};\n-\n-use crate::codegen::{project_root, reformat, update, Mode, Result};\n-\n-pub fn generate_features(mode: Mode) -> Result<()> {\n-    if !Path::new(\"./target/rust\").exists() {\n-        cmd!(\"git clone https://github.com/rust-lang/rust ./target/rust\").run()?;\n-    }\n-\n-    let contents = generate_descriptor(\"./target/rust/src/doc/unstable-book/src\".into())?;\n-\n-    let destination = project_root().join(\"crates/ide/src/completion/generated_features.rs\");\n-    update(destination.as_path(), &contents, mode)?;\n-\n-    Ok(())\n-}\n-\n-fn generate_descriptor(src_dir: PathBuf) -> Result<String> {\n-    let definitions = [\"language-features\", \"library-features\"]\n-        .iter()\n-        .flat_map(|it| WalkDir::new(src_dir.join(it)))\n-        .filter_map(|e| e.ok())\n-        .filter(|entry| {\n-            // Get all `.md ` files\n-            entry.file_type().is_file() && entry.path().extension().unwrap_or_default() == \"md\"\n-        })\n-        .map(|entry| {\n-            let path = entry.path();\n-            let feature_ident = path.file_stem().unwrap().to_str().unwrap().replace(\"-\", \"_\");\n-            let doc = read_file(path).unwrap();\n-\n-            quote! { LintCompletion { label: #feature_ident, description: #doc } }\n-        });\n-\n-    let ts = quote! {\n-        use crate::completion::complete_attribute::LintCompletion;\n-\n-        pub(super) const FEATURES:  &[LintCompletion] = &[\n-            #(#definitions),*\n-        ];\n-    };\n-    reformat(&ts.to_string())\n-}"}, {"sha": "8c51d35c78108dd6611b1d3e47b1c8265414aa21", "filename": "xtask/src/codegen/gen_lint_completions.rs", "status": "modified", "additions": 34, "deletions": 32, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/f682627da4be4777fa0c1527398ef4136cd929b1/xtask%2Fsrc%2Fcodegen%2Fgen_lint_completions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f682627da4be4777fa0c1527398ef4136cd929b1/xtask%2Fsrc%2Fcodegen%2Fgen_lint_completions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fcodegen%2Fgen_lint_completions.rs?ref=f682627da4be4777fa0c1527398ef4136cd929b1", "patch": "@@ -1,7 +1,7 @@\n //! Generates descriptors structure for unstable feature from Unstable Book\n+use std::fmt::Write;\n use std::path::{Path, PathBuf};\n \n-use quote::quote;\n use walkdir::WalkDir;\n use xshell::{cmd, read_file};\n \n@@ -15,16 +15,13 @@ pub fn generate_lint_completions(mode: Mode) -> Result<()> {\n         cmd!(\"git clone --depth=1 https://github.com/rust-lang/rust ./target/rust\").run()?;\n     }\n \n-    let ts_features = generate_descriptor(\"./target/rust/src/doc/unstable-book/src\".into())?;\n-    cmd!(\"curl http://rust-lang.github.io/rust-clippy/master/lints.json --output ./target/clippy_lints.json\").run()?;\n+    let mut contents = String::from(\"use crate::completions::attribute::LintCompletion;\\n\\n\");\n+    generate_descriptor(&mut contents, \"./target/rust/src/doc/unstable-book/src\".into())?;\n+    contents.push('\\n');\n \n-    let ts_clippy = generate_descriptor_clippy(&Path::new(\"./target/clippy_lints.json\"))?;\n-    let ts = quote! {\n-        use crate::completions::attribute::LintCompletion;\n-        #ts_features\n-        #ts_clippy\n-    };\n-    let contents = reformat(ts.to_string().as_str())?;\n+    cmd!(\"curl http://rust-lang.github.io/rust-clippy/master/lints.json --output ./target/clippy_lints.json\").run()?;\n+    generate_descriptor_clippy(&mut contents, &Path::new(\"./target/clippy_lints.json\"))?;\n+    let contents = reformat(&contents)?;\n \n     let destination =\n         project_root().join(\"crates/ide_completion/src/generated_lint_completions.rs\");\n@@ -34,30 +31,26 @@ pub fn generate_lint_completions(mode: Mode) -> Result<()> {\n     Ok(())\n }\n \n-fn generate_descriptor(src_dir: PathBuf) -> Result<proc_macro2::TokenStream> {\n-    let definitions = [\"language-features\", \"library-features\"]\n+fn generate_descriptor(buf: &mut String, src_dir: PathBuf) -> Result<()> {\n+    buf.push_str(r#\"pub(super) const FEATURES: &[LintCompletion] = &[\"#);\n+    buf.push('\\n');\n+    [\"language-features\", \"library-features\"]\n         .iter()\n         .flat_map(|it| WalkDir::new(src_dir.join(it)))\n         .filter_map(|e| e.ok())\n         .filter(|entry| {\n             // Get all `.md ` files\n             entry.file_type().is_file() && entry.path().extension().unwrap_or_default() == \"md\"\n         })\n-        .map(|entry| {\n+        .for_each(|entry| {\n             let path = entry.path();\n             let feature_ident = path.file_stem().unwrap().to_str().unwrap().replace(\"-\", \"_\");\n             let doc = read_file(path).unwrap();\n \n-            quote! { LintCompletion { label: #feature_ident, description: #doc } }\n+            push_lint_completion(buf, &feature_ident, &doc);\n         });\n-\n-    let ts = quote! {\n-        pub(super) const FEATURES:  &[LintCompletion] = &[\n-            #(#definitions),*\n-        ];\n-    };\n-\n-    Ok(ts)\n+    buf.push_str(\"];\\n\");\n+    Ok(())\n }\n \n #[derive(Default)]\n@@ -66,7 +59,7 @@ struct ClippyLint {\n     id: String,\n }\n \n-fn generate_descriptor_clippy(path: &Path) -> Result<proc_macro2::TokenStream> {\n+fn generate_descriptor_clippy(buf: &mut String, path: &Path) -> Result<()> {\n     let file_content = read_file(path)?;\n     let mut clippy_lints: Vec<ClippyLint> = vec![];\n \n@@ -97,18 +90,27 @@ fn generate_descriptor_clippy(path: &Path) -> Result<proc_macro2::TokenStream> {\n         }\n     }\n \n-    let definitions = clippy_lints.into_iter().map(|clippy_lint| {\n+    buf.push_str(r#\"pub(super) const CLIPPY_LINTS: &[LintCompletion] = &[\"#);\n+    buf.push('\\n');\n+    clippy_lints.into_iter().for_each(|clippy_lint| {\n         let lint_ident = format!(\"clippy::{}\", clippy_lint.id);\n         let doc = clippy_lint.help;\n-\n-        quote! { LintCompletion { label: #lint_ident, description: #doc } }\n+        push_lint_completion(buf, &lint_ident, &doc);\n     });\n \n-    let ts = quote! {\n-        pub(super) const CLIPPY_LINTS:  &[LintCompletion] = &[\n-            #(#definitions),*\n-        ];\n-    };\n+    buf.push_str(\"];\\n\");\n+\n+    Ok(())\n+}\n \n-    Ok(ts)\n+fn push_lint_completion(buf: &mut String, label: &str, description: &str) {\n+    writeln!(\n+        buf,\n+        r###\"    LintCompletion {{\n+        label: \"{}\",\n+        description: r##\"{}\"##\n+    }},\"###,\n+        label, description\n+    )\n+    .unwrap();\n }"}]}