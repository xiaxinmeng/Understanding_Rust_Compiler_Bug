{"sha": "d106a336cc7a5f8b7a5aeadd851dd77937da0b36", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxMDZhMzM2Y2M3YTVmOGI3YTVhZWFkZDg1MWRkNzc5MzdkYTBiMzY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T19:49:19Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-28T19:49:19Z"}, "message": "rustc: Change --OptLevel to --opt-level", "tree": {"sha": "f041c535c05958e57e6a1e25555b9e767b844ae3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f041c535c05958e57e6a1e25555b9e767b844ae3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d106a336cc7a5f8b7a5aeadd851dd77937da0b36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d106a336cc7a5f8b7a5aeadd851dd77937da0b36", "html_url": "https://github.com/rust-lang/rust/commit/d106a336cc7a5f8b7a5aeadd851dd77937da0b36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d106a336cc7a5f8b7a5aeadd851dd77937da0b36/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8d9c95fe0b9b66ae5d703c33752bfea55c068b77", "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9c95fe0b9b66ae5d703c33752bfea55c068b77", "html_url": "https://github.com/rust-lang/rust/commit/8d9c95fe0b9b66ae5d703c33752bfea55c068b77"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "0cc94386c8909bee256c9d55cdbacea00136c875", "filename": "man/rustc.1", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d106a336cc7a5f8b7a5aeadd851dd77937da0b36/man%2Frustc.1", "raw_url": "https://github.com/rust-lang/rust/raw/d106a336cc7a5f8b7a5aeadd851dd77937da0b36/man%2Frustc.1", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/man%2Frustc.1?ref=d106a336cc7a5f8b7a5aeadd851dd77937da0b36", "patch": "@@ -69,11 +69,11 @@ Run all passes except translation. Produces no output.\n \\fB-g\\fR:\n Produce debug info.\n .TP\n-\\fB--OptLevel\\fR=\\fIlevel\\fR:\n+\\fB--opt-level\\fR=\\fIlevel\\fR:\n Set optimization level to \\fIlevel\\fR.\n .TP\n \\fB-O\\fR:\n-Equal to --OptLevel=2\n+Equal to --opt-level=2\n .TP\n \\fB-S\\fR:\n Compile to assembly, but do not assemble or link."}, {"sha": "40f7ebbc8b8f3a239bec5e0bcbd0a5cf012ea62a", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d106a336cc7a5f8b7a5aeadd851dd77937da0b36/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d106a336cc7a5f8b7a5aeadd851dd77937da0b36/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=d106a336cc7a5f8b7a5aeadd851dd77937da0b36", "patch": "@@ -250,8 +250,8 @@ options:\n     --parse-only       parse only; do not compile, assemble, or link\n     --no-trans         run all passes except translation; no output\n     -g                 produce debug info\n-    --OptLevel=        optimize with possible levels 0-3\n-    -O                 equivalent to --OptLevel=2\n+    --opt-level=       optimize with possible levels 0-3\n+    -O                 equivalent to --opt-level=2\n     -S                 compile only; do not assemble or link\n     -c                 compile and assemble, but do not link\n     --emit-llvm        produce an LLVM bitcode file\n@@ -347,12 +347,12 @@ fn build_session_options(match: getopts::match)\n     let target_opt = getopts::opt_maybe_str(match, \"target\");\n     let opt_level: uint =\n         if opt_present(match, \"O\") {\n-            if opt_present(match, \"OptLevel\") {\n-                early_error(\"-O and --OptLevel both provided\");\n+            if opt_present(match, \"opt-level\") {\n+                early_error(\"-O and --opt-level both provided\");\n             }\n             2u\n-        } else if opt_present(match, \"OptLevel\") {\n-            alt getopts::opt_str(match, \"OptLevel\") {\n+        } else if opt_present(match, \"opt-level\") {\n+            alt getopts::opt_str(match, \"opt-level\") {\n               \"0\" { 0u }\n               \"1\" { 1u }\n               \"2\" { 2u }\n@@ -426,7 +426,7 @@ fn opts() -> [getopts::opt] {\n     ret [optflag(\"h\"), optflag(\"help\"), optflag(\"v\"), optflag(\"version\"),\n          optflag(\"emit-llvm\"), optflagopt(\"pretty\"),\n          optflag(\"ls\"), optflag(\"parse-only\"), optflag(\"no-trans\"),\n-         optflag(\"O\"), optopt(\"OptLevel\"), optmulti(\"L\"), optflag(\"S\"),\n+         optflag(\"O\"), optopt(\"opt-level\"), optmulti(\"L\"), optflag(\"S\"),\n          optflag(\"c\"), optopt(\"o\"), optflag(\"g\"), optflag(\"save-temps\"),\n          optopt(\"sysroot\"), optopt(\"target\"), optflag(\"stats\"),\n          optflag(\"time-passes\"), optflag(\"time-llvm-passes\"),"}]}