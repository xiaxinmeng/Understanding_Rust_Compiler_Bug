{"sha": "7f7a16675d9c6f60141956eda27cf56b94a5d36c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmN2ExNjY3NWQ5YzZmNjAxNDE5NTZlZGEyN2NmNTZiOTRhNWQzNmM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-28T12:52:45Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-31T14:20:19Z"}, "message": "Use jod_thread", "tree": {"sha": "c1509f5f957988eb406e1ac933206123713726ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1509f5f957988eb406e1ac933206123713726ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f7a16675d9c6f60141956eda27cf56b94a5d36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f7a16675d9c6f60141956eda27cf56b94a5d36c", "html_url": "https://github.com/rust-lang/rust/commit/7f7a16675d9c6f60141956eda27cf56b94a5d36c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f7a16675d9c6f60141956eda27cf56b94a5d36c/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39706a5786522c6c62cee50974ce4052160f30a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/39706a5786522c6c62cee50974ce4052160f30a8", "html_url": "https://github.com/rust-lang/rust/commit/39706a5786522c6c62cee50974ce4052160f30a8"}], "stats": {"total": 33, "additions": 16, "deletions": 17}, "files": [{"sha": "f618fcc3db137b77f24a9a035e20badb9ae4aa8a", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a16675d9c6f60141956eda27cf56b94a5d36c/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a16675d9c6f60141956eda27cf56b94a5d36c/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=7f7a16675d9c6f60141956eda27cf56b94a5d36c", "patch": "@@ -1076,6 +1076,7 @@ name = \"ra_proc_macro\"\n version = \"0.1.0\"\n dependencies = [\n  \"crossbeam-channel\",\n+ \"jod-thread\",\n  \"log\",\n  \"ra_tt\",\n  \"serde\","}, {"sha": "d009ceb82e53283c4655a7ce982a3807ef0c9b25", "filename": "crates/ra_proc_macro/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a16675d9c6f60141956eda27cf56b94a5d36c/crates%2Fra_proc_macro%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a16675d9c6f60141956eda27cf56b94a5d36c/crates%2Fra_proc_macro%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2FCargo.toml?ref=7f7a16675d9c6f60141956eda27cf56b94a5d36c", "patch": "@@ -14,3 +14,4 @@ serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0\"\n log = \"0.4.8\"\n crossbeam-channel = \"0.4.0\"\n+jod-thread = \"0.1.1\""}, {"sha": "3978d1c9b7c26fd88c1408eb40b87ca95b366d62", "filename": "crates/ra_proc_macro/src/process.rs", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/7f7a16675d9c6f60141956eda27cf56b94a5d36c/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f7a16675d9c6f60141956eda27cf56b94a5d36c/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs?ref=7f7a16675d9c6f60141956eda27cf56b94a5d36c", "patch": "@@ -12,7 +12,6 @@ use std::{\n     io::{self, Write},\n     path::{Path, PathBuf},\n     process::{Child, Command, Stdio},\n-    thread::{spawn, JoinHandle},\n };\n \n #[derive(Debug, Default)]\n@@ -22,8 +21,18 @@ pub(crate) struct ProcMacroProcessSrv {\n \n #[derive(Debug)]\n pub(crate) struct ProcMacroProcessThread {\n-    handle: Option<JoinHandle<()>>,\n-    sender: Sender<Task>,\n+    // XXX: drop order is significant\n+    sender: SenderGuard,\n+    handle: jod_thread::JoinHandle<()>,\n+}\n+\n+#[derive(Debug)]\n+struct SenderGuard(pub Sender<Task>);\n+\n+impl std::ops::Drop for SenderGuard {\n+    fn drop(&mut self) {\n+        let _ = self.0.send(Task::Close);\n+    }\n }\n \n enum Task {\n@@ -62,31 +71,19 @@ impl Process {\n     }\n }\n \n-impl std::ops::Drop for ProcMacroProcessThread {\n-    fn drop(&mut self) {\n-        if let Some(handle) = self.handle.take() {\n-            let _ = self.sender.send(Task::Close);\n-\n-            // Join the thread, it should finish shortly. We don't really care\n-            // whether it panicked, so it is safe to ignore the result\n-            let _ = handle.join();\n-        }\n-    }\n-}\n-\n impl ProcMacroProcessSrv {\n     pub fn run(\n         process_path: &Path,\n     ) -> Result<(ProcMacroProcessThread, ProcMacroProcessSrv), io::Error> {\n         let process = Process::run(process_path)?;\n \n         let (task_tx, task_rx) = bounded(0);\n-        let handle = spawn(move || {\n+        let handle = jod_thread::spawn(move || {\n             client_loop(task_rx, process);\n         });\n \n         let srv = ProcMacroProcessSrv { inner: Some(task_tx.clone()) };\n-        let thread = ProcMacroProcessThread { handle: Some(handle), sender: task_tx };\n+        let thread = ProcMacroProcessThread { handle, sender: SenderGuard(task_tx) };\n \n         Ok((thread, srv))\n     }"}]}