{"sha": "d57e8f841939c433b541dd185af91483a88f0f4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1N2U4Zjg0MTkzOWM0MzNiNTQxZGQxODVhZjkxNDgzYTg4ZjBmNGQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-07-10T23:00:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-07-17T21:57:54Z"}, "message": "librustc: Change repeated vector expressions to use implicit copyability.", "tree": {"sha": "f3b926a97f0f98f8520cf04372e8b56df8b23d4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3b926a97f0f98f8520cf04372e8b56df8b23d4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d57e8f841939c433b541dd185af91483a88f0f4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d57e8f841939c433b541dd185af91483a88f0f4d", "html_url": "https://github.com/rust-lang/rust/commit/d57e8f841939c433b541dd185af91483a88f0f4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d57e8f841939c433b541dd185af91483a88f0f4d/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2dbb3c3887ff23c064aa762eb4dafaf4967c6416", "url": "https://api.github.com/repos/rust-lang/rust/commits/2dbb3c3887ff23c064aa762eb4dafaf4967c6416", "html_url": "https://github.com/rust-lang/rust/commit/2dbb3c3887ff23c064aa762eb4dafaf4967c6416"}], "stats": {"total": 40, "additions": 34, "deletions": 6}, "files": [{"sha": "b182a9057bd54e32c8ee00533bca13063660639d", "filename": "src/libextra/terminfo/parm.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibextra%2Fterminfo%2Fparm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibextra%2Fterminfo%2Fparm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fparm.rs?ref=d57e8f841939c433b541dd185af91483a88f0f4d", "patch": "@@ -56,7 +56,24 @@ pub struct Variables {\n impl Variables {\n     /// Return a new zero-initialized Variables\n     pub fn new() -> Variables {\n-        Variables{ sta: [Number(0), ..26], dyn: [Number(0), ..26] }\n+        Variables {\n+            sta: [\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0),\n+            ],\n+            dyn: [\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0), Number(0), Number(0), Number(0), Number(0),\n+                Number(0),\n+            ],\n+        }\n     }\n }\n \n@@ -81,7 +98,10 @@ pub fn expand(cap: &[u8], params: &[Param], vars: &mut Variables)\n     let mut stack: ~[Param] = ~[];\n \n     // Copy parameters into a local vector for mutability\n-    let mut mparams = [Number(0), ..9];\n+    let mut mparams = [\n+        Number(0), Number(0), Number(0), Number(0), Number(0),\n+        Number(0), Number(0), Number(0), Number(0),\n+    ];\n     for mparams.mut_iter().zip(params.iter()).advance |(dst, src)| {\n         *dst = (*src).clone();\n     }"}, {"sha": "700605a698b80e5229365991be2548f6f01ea6bf", "filename": "src/librustc/middle/kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibrustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibrustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fkind.rs?ref=d57e8f841939c433b541dd185af91483a88f0f4d", "patch": "@@ -433,7 +433,7 @@ fn check_copy(cx: Context, ty: ty::t, sp: span, reason: &str) {\n     debug!(\"type_contents(%s)=%s\",\n            ty_to_str(cx.tcx, ty),\n            ty::type_contents(cx.tcx, ty).to_str());\n-    if !ty::type_is_copyable(cx.tcx, ty) {\n+    if ty::type_moves_by_default(cx.tcx, ty) {\n         cx.tcx.sess.span_err(\n             sp, fmt!(\"copying a value of non-copyable type `%s`\",\n                      ty_to_str(cx.tcx, ty)));"}, {"sha": "1614a303d950724b9dd6f3b32c007e8b7e3bf02a", "filename": "src/libsyntax/parse/lexer.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibsyntax%2Fparse%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibsyntax%2Fparse%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer.rs?ref=d57e8f841939c433b541dd185af91483a88f0f4d", "patch": "@@ -33,8 +33,11 @@ pub trait reader {\n     fn dup(@mut self) -> @reader;\n }\n \n-#[deriving(Eq)]\n-pub struct TokenAndSpan {tok: token::Token, sp: span}\n+#[deriving(Clone, Eq)]\n+pub struct TokenAndSpan {\n+    tok: token::Token,\n+    sp: span,\n+}\n \n pub struct StringReader {\n     span_diagnostic: @span_handler,"}, {"sha": "324be2f978dee978838cda99cf04bf0402a8316d", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57e8f841939c433b541dd185af91483a88f0f4d/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d57e8f841939c433b541dd185af91483a88f0f4d", "patch": "@@ -280,7 +280,12 @@ pub fn Parser(sess: @mut ParseSess,\n         token: @mut tok0.tok,\n         span: @mut span,\n         last_span: @mut span,\n-        buffer: @mut ([placeholder, .. 4]),\n+        buffer: @mut ([\n+            placeholder.clone(),\n+            placeholder.clone(),\n+            placeholder.clone(),\n+            placeholder.clone(),\n+        ]),\n         buffer_start: @mut 0,\n         buffer_end: @mut 0,\n         tokens_consumed: @mut 0,"}]}