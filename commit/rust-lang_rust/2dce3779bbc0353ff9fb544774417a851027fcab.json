{"sha": "2dce3779bbc0353ff9fb544774417a851027fcab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkY2UzNzc5YmJjMDM1M2ZmOWZiNTQ0Nzc0NDE3YTg1MTAyN2ZjYWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-07T23:51:20Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-08T11:15:11Z"}, "message": "resolve: More precise spans for ambiguous resolution errors\n\nAdd labels to ambiguous resolution errors", "tree": {"sha": "b1947e6ce697bd9b82be8a030d08f745e74375f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1947e6ce697bd9b82be8a030d08f745e74375f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dce3779bbc0353ff9fb544774417a851027fcab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dce3779bbc0353ff9fb544774417a851027fcab", "html_url": "https://github.com/rust-lang/rust/commit/2dce3779bbc0353ff9fb544774417a851027fcab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dce3779bbc0353ff9fb544774417a851027fcab/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9beb5c3ef3062226783529f626fb8c4a7eb7f936", "url": "https://api.github.com/repos/rust-lang/rust/commits/9beb5c3ef3062226783529f626fb8c4a7eb7f936", "html_url": "https://github.com/rust-lang/rust/commit/9beb5c3ef3062226783529f626fb8c4a7eb7f936"}], "stats": {"total": 164, "additions": 69, "deletions": 95}, "files": [{"sha": "b57a8a4d271e800c731c94c17807f0fcb9670fb2", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -1164,8 +1164,7 @@ struct UseError<'a> {\n }\n \n struct AmbiguityError<'a> {\n-    span: Span,\n-    name: Name,\n+    ident: Ident,\n     b1: &'a NameBinding<'a>,\n     b2: &'a NameBinding<'a>,\n }\n@@ -1818,7 +1817,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n         self.arenas.alloc_module(module)\n     }\n \n-    fn record_use(&mut self, ident: Ident, ns: Namespace, binding: &'a NameBinding<'a>, span: Span)\n+    fn record_use(&mut self, ident: Ident, ns: Namespace, binding: &'a NameBinding<'a>)\n                   -> bool /* true if an error was reported */ {\n         match binding.kind {\n             NameBindingKind::Import { directive, binding, ref used }\n@@ -1827,13 +1826,11 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                 directive.used.set(true);\n                 self.used_imports.insert((directive.id, ns));\n                 self.add_to_glob_map(directive.id, ident);\n-                self.record_use(ident, ns, binding, span)\n+                self.record_use(ident, ns, binding)\n             }\n             NameBindingKind::Import { .. } => false,\n             NameBindingKind::Ambiguity { b1, b2 } => {\n-                self.ambiguity_errors.push(AmbiguityError {\n-                    span, name: ident.name, b1, b2,\n-                });\n+                self.ambiguity_errors.push(AmbiguityError { ident, b1, b2 });\n                 true\n             }\n             _ => false\n@@ -2853,7 +2850,7 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                             Def::Const(..) if is_syntactic_ambiguity => {\n                                 // Disambiguate in favor of a unit struct/variant\n                                 // or constant pattern.\n-                                self.record_use(ident, ValueNS, binding.unwrap(), ident.span);\n+                                self.record_use(ident, ValueNS, binding.unwrap());\n                                 Some(PathResolution::new(def))\n                             }\n                             Def::StructCtor(..) | Def::VariantCtor(..) |\n@@ -4532,12 +4529,12 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n         vis.is_accessible_from(module.normal_ancestor_id, self)\n     }\n \n-    fn report_ambiguity_error(&self, name: Name, span: Span, b1: &NameBinding, b2: &NameBinding) {\n+    fn report_ambiguity_error(&self, ident: Ident, b1: &NameBinding, b2: &NameBinding) {\n         let participle = |is_import: bool| if is_import { \"imported\" } else { \"defined\" };\n         let msg1 =\n-            format!(\"`{}` could refer to the name {} here\", name, participle(b1.is_import()));\n+            format!(\"`{}` could refer to the name {} here\", ident, participle(b1.is_import()));\n         let msg2 =\n-            format!(\"`{}` could also refer to the name {} here\", name, participle(b2.is_import()));\n+            format!(\"`{}` could also refer to the name {} here\", ident, participle(b2.is_import()));\n         let note = if b1.expansion != Mark::root() {\n             Some(if let Def::Macro(..) = b1.def() {\n                 format!(\"macro-expanded {} do not shadow\",\n@@ -4547,16 +4544,17 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n                         if b1.is_import() { \"imports\" } else { \"items\" })\n             })\n         } else if b1.is_glob_import() {\n-            Some(format!(\"consider adding an explicit import of `{}` to disambiguate\", name))\n+            Some(format!(\"consider adding an explicit import of `{}` to disambiguate\", ident))\n         } else {\n             None\n         };\n \n-        let mut err = struct_span_err!(self.session, span, E0659, \"`{}` is ambiguous\", name);\n+        let mut err = struct_span_err!(self.session, ident.span, E0659, \"`{}` is ambiguous\", ident);\n+        err.span_label(ident.span, \"ambiguous name\");\n         err.span_note(b1.span, &msg1);\n         match b2.def() {\n             Def::Macro(..) if b2.span.is_dummy() =>\n-                err.note(&format!(\"`{}` is also a builtin macro\", name)),\n+                err.note(&format!(\"`{}` is also a builtin macro\", ident)),\n             _ => err.span_note(b2.span, &msg2),\n         };\n         if let Some(note) = note {\n@@ -4581,9 +4579,9 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n             );\n         }\n \n-        for &AmbiguityError { span, name, b1, b2 } in &self.ambiguity_errors {\n-            if reported_spans.insert(span) {\n-                self.report_ambiguity_error(name, span, b1, b2);\n+        for &AmbiguityError { ident, b1, b2 } in &self.ambiguity_errors {\n+            if reported_spans.insert(ident.span) {\n+                self.report_ambiguity_error(ident, b1, b2);\n             }\n         }\n "}, {"sha": "96c2e0a6ba7a0a5f36055ae03c84ac3f1484ea72", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -757,8 +757,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                            (innermost_result.0.is_glob_import() ||\n                             innermost_result.0.may_appear_after(invoc_id, result.0)) {\n                             self.ambiguity_errors.push(AmbiguityError {\n-                                span: path_span,\n-                                name: ident.name,\n+                                ident,\n                                 b1: innermost_result.0,\n                                 b2: result.0,\n                             });\n@@ -850,8 +849,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                         if result.def() != innermost_result.def() &&\n                            innermost_result.may_appear_after(invoc_id, result) {\n                             self.ambiguity_errors.push(AmbiguityError {\n-                                span: ident.span,\n-                                name: ident.name,\n+                                ident,\n                                 b1: innermost_result,\n                                 b2: result,\n                             });\n@@ -929,7 +927,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                 (Some(legacy_binding), Ok((binding, FromPrelude(from_prelude))))\n                         if !from_prelude || legacy_binding.may_appear_after(invoc_id, binding) => {\n                     if legacy_binding.def_ignoring_ambiguity() != binding.def_ignoring_ambiguity() {\n-                        self.report_ambiguity_error(ident.name, span, legacy_binding, binding);\n+                        self.report_ambiguity_error(ident, legacy_binding, binding);\n                     }\n                 },\n                 // OK, non-macro-expanded legacy wins over prelude even if defs are different\n@@ -942,7 +940,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                 (None, Ok((binding, FromPrelude(from_prelude)))) => {\n                     check_consistency(self, binding.def_ignoring_ambiguity());\n                     if from_prelude {\n-                        self.record_use(ident, MacroNS, binding, span);\n+                        self.record_use(ident, MacroNS, binding);\n                         self.err_if_macro_use_proc_macro(ident.name, span, binding);\n                     }\n                 }"}, {"sha": "ef7b5c58fdd1856e443c821405309c0c0fb89285", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -242,21 +242,19 @@ impl<'a, 'crateloader> Resolver<'a, 'crateloader> {\n         if record_used {\n             if let Some(binding) = resolution.binding {\n                 if let Some(shadowed_glob) = resolution.shadowed_glob {\n-                    let name = ident.name;\n                     // Forbid expanded shadowing to avoid time travel.\n                     if restricted_shadowing &&\n                        binding.expansion != Mark::root() &&\n                        ns != MacroNS && // In MacroNS, `try_define` always forbids this shadowing\n                        binding.def() != shadowed_glob.def() {\n                         self.ambiguity_errors.push(AmbiguityError {\n-                            span: path_span,\n-                            name,\n+                            ident,\n                             b1: binding,\n                             b2: shadowed_glob,\n                         });\n                     }\n                 }\n-                if self.record_use(ident, ns, binding, path_span) {\n+                if self.record_use(ident, ns, binding) {\n                     return Ok(self.dummy_binding);\n                 }\n                 if !self.is_accessible(binding.vis) {\n@@ -936,7 +934,7 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n         self.per_ns(|this, ns| if !type_ns_only || ns == TypeNS {\n             if let Ok(binding) = result[ns].get() {\n                 all_ns_err = false;\n-                if this.record_use(ident, ns, binding, directive.span) {\n+                if this.record_use(ident, ns, binding) {\n                     if let ModuleOrUniformRoot::Module(module) = module {\n                         this.resolution(module, ident, ns).borrow_mut().binding =\n                             Some(this.dummy_binding);"}, {"sha": "f168b7797ca6d0097e0833ea8410defe96d1cd2b", "filename": "src/test/ui/error-codes/E0659.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Ferror-codes%2FE0659.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Ferror-codes%2FE0659.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0659.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -1,8 +1,8 @@\n error[E0659]: `foo` is ambiguous\n-  --> $DIR/E0659.rs:25:5\n+  --> $DIR/E0659.rs:25:15\n    |\n LL |     collider::foo(); //~ ERROR E0659\n-   |     ^^^^^^^^^^^^^\n+   |               ^^^ ambiguous name\n    |\n note: `foo` could refer to the name imported here\n   --> $DIR/E0659.rs:20:13"}, {"sha": "9cdd7aa88f18e497be985f0dfdb471801434be8f", "filename": "src/test/ui/imports/duplicate.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fduplicate.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -13,10 +13,10 @@ LL |     use a::foo as other_foo; //~ ERROR the name `foo` is defined multiple t\n    |         ^^^^^^^^^^^^^^^^^^^\n \n error[E0659]: `foo` is ambiguous\n-  --> $DIR/duplicate.rs:56:9\n+  --> $DIR/duplicate.rs:56:15\n    |\n LL |     use self::foo::bar; //~ ERROR `foo` is ambiguous\n-   |         ^^^^^^^^^^^^^^\n+   |               ^^^ ambiguous name\n    |\n note: `foo` could refer to the name imported here\n   --> $DIR/duplicate.rs:53:9\n@@ -31,10 +31,10 @@ LL |     use self::m2::*;\n    = note: consider adding an explicit import of `foo` to disambiguate\n \n error[E0659]: `foo` is ambiguous\n-  --> $DIR/duplicate.rs:45:5\n+  --> $DIR/duplicate.rs:45:8\n    |\n LL |     f::foo(); //~ ERROR `foo` is ambiguous\n-   |     ^^^^^^\n+   |        ^^^ ambiguous name\n    |\n note: `foo` could refer to the name imported here\n   --> $DIR/duplicate.rs:34:13\n@@ -49,10 +49,10 @@ LL |     pub use b::*;\n    = note: consider adding an explicit import of `foo` to disambiguate\n \n error[E0659]: `foo` is ambiguous\n-  --> $DIR/duplicate.rs:46:5\n+  --> $DIR/duplicate.rs:46:8\n    |\n LL |     g::foo(); //~ ERROR `foo` is ambiguous\n-   |     ^^^^^^\n+   |        ^^^ ambiguous name\n    |\n note: `foo` could refer to the name imported here\n   --> $DIR/duplicate.rs:39:13\n@@ -70,7 +70,7 @@ error[E0659]: `foo` is ambiguous\n   --> $DIR/duplicate.rs:59:9\n    |\n LL |         foo::bar(); //~ ERROR `foo` is ambiguous\n-   |         ^^^^^^^^\n+   |         ^^^ ambiguous name\n    |\n note: `foo` could refer to the name imported here\n   --> $DIR/duplicate.rs:53:9"}, {"sha": "33a2963fa29474a7381e8d3160e1a6d571b5ecb8", "filename": "src/test/ui/imports/glob-shadowing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fglob-shadowing.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `env` is ambiguous\n   --> $DIR/glob-shadowing.rs:21:17\n    |\n LL |         let x = env!(\"PATH\"); //~ ERROR `env` is ambiguous\n-   |                 ^^^\n+   |                 ^^^ ambiguous name\n    |\n note: `env` could refer to the name imported here\n   --> $DIR/glob-shadowing.rs:19:9\n@@ -16,7 +16,7 @@ error[E0659]: `env` is ambiguous\n   --> $DIR/glob-shadowing.rs:29:21\n    |\n LL |             let x = env!(\"PATH\"); //~ ERROR `env` is ambiguous\n-   |                     ^^^\n+   |                     ^^^ ambiguous name\n    |\n note: `env` could refer to the name imported here\n   --> $DIR/glob-shadowing.rs:27:13\n@@ -30,7 +30,7 @@ error[E0659]: `fenv` is ambiguous\n   --> $DIR/glob-shadowing.rs:39:21\n    |\n LL |             let x = fenv!(); //~ ERROR `fenv` is ambiguous\n-   |                     ^^^^\n+   |                     ^^^^ ambiguous name\n    |\n note: `fenv` could refer to the name imported here\n   --> $DIR/glob-shadowing.rs:37:13"}, {"sha": "e125983151d2b6c38d12e80cbe063be62bf174f0", "filename": "src/test/ui/imports/issue-53269.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fissue-53269.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -8,7 +8,7 @@ error[E0659]: `mac` is ambiguous\n   --> $DIR/issue-53269.rs:18:5\n    |\n LL |     mac!(); //~ ERROR `mac` is ambiguous\n-   |     ^^^\n+   |     ^^^ ambiguous name\n    |\n note: `mac` could refer to the name defined here\n   --> $DIR/issue-53269.rs:13:1"}, {"sha": "fb05b95a96dc621bde8238c8ce3788dafd2b4752", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.rs?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -43,7 +43,6 @@ mod inner2 {\n \n fn main() {\n     panic!(); //~ ERROR `panic` is ambiguous\n-              //~^ ERROR `panic` is ambiguous\n }\n \n mod inner3 {"}, {"sha": "cce1fd30f1d6db14ae3e90934113884afbc47c88", "filename": "src/test/ui/imports/local-modularized-tricky-fail-1.stderr", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Flocal-modularized-tricky-fail-1.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `exported` is ambiguous\n   --> $DIR/local-modularized-tricky-fail-1.rs:38:1\n    |\n LL | exported!(); //~ ERROR `exported` is ambiguous\n-   | ^^^^^^^^\n+   | ^^^^^^^^ ambiguous name\n    |\n note: `exported` could refer to the name defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:15:5\n@@ -22,10 +22,10 @@ LL | use inner1::*;\n    = note: macro-expanded macros do not shadow\n \n error[E0659]: `include` is ambiguous\n-  --> $DIR/local-modularized-tricky-fail-1.rs:57:1\n+  --> $DIR/local-modularized-tricky-fail-1.rs:56:1\n    |\n LL | include!(); //~ ERROR `include` is ambiguous\n-   | ^^^^^^^\n+   | ^^^^^^^ ambiguous name\n    |\n note: `include` could refer to the name defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:27:5\n@@ -44,7 +44,7 @@ error[E0659]: `panic` is ambiguous\n   --> $DIR/local-modularized-tricky-fail-1.rs:45:5\n    |\n LL |     panic!(); //~ ERROR `panic` is ambiguous\n-   |     ^^^^^\n+   |     ^^^^^ ambiguous name\n    |\n note: `panic` could refer to the name defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:21:5\n@@ -60,10 +60,10 @@ LL |       define_panic!();\n    = note: macro-expanded macros do not shadow\n \n error[E0659]: `panic` is ambiguous\n-  --> $DIR/local-modularized-tricky-fail-1.rs:45:5\n+  --> <panic macros>:1:13\n    |\n-LL |     panic!(); //~ ERROR `panic` is ambiguous\n-   |     ^^^^^^^^^\n+LL | (  ) => ( { panic ! ( \"explicit panic\" ) } ) ; ( $ msg : expr ) => (\n+   |             ^^^^^ ambiguous name\n    |\n note: `panic` could refer to the name defined here\n   --> $DIR/local-modularized-tricky-fail-1.rs:21:5\n@@ -77,7 +77,6 @@ LL |       define_panic!();\n    |       ---------------- in this macro invocation\n    = note: `panic` is also a builtin macro\n    = note: macro-expanded macros do not shadow\n-   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: aborting due to 4 previous errors\n "}, {"sha": "a612c64c2f4705daf0bbadab487087b88209648d", "filename": "src/test/ui/imports/macro-paths.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacro-paths.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `bar` is ambiguous\n   --> $DIR/macro-paths.rs:23:5\n    |\n LL |     bar::m! { //~ ERROR ambiguous\n-   |     ^^^^^^\n+   |     ^^^ ambiguous name\n    |\n note: `bar` could refer to the name defined here\n   --> $DIR/macro-paths.rs:24:9\n@@ -20,7 +20,7 @@ error[E0659]: `baz` is ambiguous\n   --> $DIR/macro-paths.rs:33:5\n    |\n LL |     baz::m! { //~ ERROR ambiguous\n-   |     ^^^^^^\n+   |     ^^^ ambiguous name\n    |\n note: `baz` could refer to the name defined here\n   --> $DIR/macro-paths.rs:34:9"}, {"sha": "c54101fc6e6a8ec69d2d43f6665c58c7b98d73d2", "filename": "src/test/ui/imports/macros.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fmacros.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/macros.rs:48:5\n    |\n LL |     m!(); //~ ERROR ambiguous\n-   |     ^\n+   |     ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/macros.rs:46:5\n@@ -19,7 +19,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/macros.rs:26:5\n    |\n LL |     m! { //~ ERROR ambiguous\n-   |     ^\n+   |     ^ ambiguous name\n    |\n note: `m` could refer to the name imported here\n   --> $DIR/macros.rs:27:13\n@@ -37,7 +37,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/macros.rs:39:9\n    |\n LL |         m! { //~ ERROR ambiguous\n-   |         ^\n+   |         ^ ambiguous name\n    |\n note: `m` could refer to the name imported here\n   --> $DIR/macros.rs:40:17"}, {"sha": "91af3a4b6ac736d625116d66a3e923a43f19b94e", "filename": "src/test/ui/imports/rfc-1560-warning-cycle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Frfc-1560-warning-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Frfc-1560-warning-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Frfc-1560-warning-cycle.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `Foo` is ambiguous\n   --> $DIR/rfc-1560-warning-cycle.rs:19:17\n    |\n LL |         fn f(_: Foo) {} //~ ERROR `Foo` is ambiguous\n-   |                 ^^^\n+   |                 ^^^ ambiguous name\n    |\n note: `Foo` could refer to the name imported here\n   --> $DIR/rfc-1560-warning-cycle.rs:17:13"}, {"sha": "e554bbb4f3146073d85a8c96baaf920da8c3db17", "filename": "src/test/ui/imports/shadow_builtin_macros.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fshadow_builtin_macros.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `panic` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:43:5\n    |\n LL |     panic!(); //~ ERROR `panic` is ambiguous\n-   |     ^^^^^\n+   |     ^^^^^ ambiguous name\n    |\n note: `panic` could refer to the name defined here\n   --> $DIR/shadow_builtin_macros.rs:40:9\n@@ -19,7 +19,7 @@ error[E0659]: `panic` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:25:14\n    |\n LL |     fn f() { panic!(); } //~ ERROR ambiguous\n-   |              ^^^^^\n+   |              ^^^^^ ambiguous name\n    |\n note: `panic` could refer to the name imported here\n   --> $DIR/shadow_builtin_macros.rs:24:9\n@@ -33,7 +33,7 @@ error[E0659]: `panic` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:30:14\n    |\n LL |     fn f() { panic!(); } //~ ERROR ambiguous\n-   |              ^^^^^\n+   |              ^^^^^ ambiguous name\n    |\n note: `panic` could refer to the name imported here\n   --> $DIR/shadow_builtin_macros.rs:29:26\n@@ -47,7 +47,7 @@ error[E0659]: `n` is ambiguous\n   --> $DIR/shadow_builtin_macros.rs:59:5\n    |\n LL |     n!(); //~ ERROR ambiguous\n-   |     ^\n+   |     ^ ambiguous name\n    |\n note: `n` could refer to the name imported here\n   --> $DIR/shadow_builtin_macros.rs:58:9"}, {"sha": "607d3e100aa25cb64993429a4b32eb3f99e50542", "filename": "src/test/ui/macros/macro-path-prelude-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-shadowing.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `std` is ambiguous\n   --> $DIR/macro-path-prelude-shadowing.rs:39:9\n    |\n LL |         std::panic!(); //~ ERROR `std` is ambiguous\n-   |         ^^^^^^^^^^\n+   |         ^^^ ambiguous name\n    |\n note: `std` could refer to the name imported here\n   --> $DIR/macro-path-prelude-shadowing.rs:37:9"}, {"sha": "d996f3a7041953300d268de80ec3d8bed343ec02", "filename": "src/test/ui/macros/macro-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-shadowing.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -13,7 +13,7 @@ error[E0659]: `foo` is ambiguous\n   --> $DIR/macro-shadowing.rs:27:1\n    |\n LL | foo!(); //~ ERROR `foo` is ambiguous\n-   | ^^^\n+   | ^^^ ambiguous name\n    |\n note: `foo` could refer to the name defined here\n   --> $DIR/macro-shadowing.rs:20:5"}, {"sha": "9e0d40c44b6834d1832dd1901ea3f9aace3bcc06", "filename": "src/test/ui/macros/restricted-shadowing-legacy.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-legacy.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:101:13\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n-   |             ^\n+   |             ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -26,7 +26,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:139:42\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } } //~ ERROR `m` is ambiguous\n-   |                                          ^\n+   |                                          ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -50,7 +50,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:148:9\n    |\n LL |         m!(); //~ ERROR `m` is ambiguous\n-   |         ^\n+   |         ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -74,7 +74,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:164:9\n    |\n LL |         m!(); //~ ERROR `m` is ambiguous\n-   |         ^\n+   |         ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -98,7 +98,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:180:13\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n-   |             ^\n+   |             ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -122,7 +122,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:218:42\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } } //~ ERROR `m` is ambiguous\n-   |                                          ^\n+   |                                          ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -146,7 +146,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:232:9\n    |\n LL |         m!(); //~ ERROR `m` is ambiguous\n-   |         ^\n+   |         ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9\n@@ -170,7 +170,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-legacy.rs:262:42\n    |\n LL |         macro_rules! gen_invoc { () => { m!() } } //~ ERROR `m` is ambiguous\n-   |                                          ^\n+   |                                          ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-legacy.rs:88:9"}, {"sha": "0462438be78079a161f61bbcd833c35ba42406d1", "filename": "src/test/ui/macros/restricted-shadowing-modern.stderr", "status": "modified", "additions": 6, "deletions": 24, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frestricted-shadowing-modern.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,10 +2,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:106:17\n    |\n LL |                 m!(); //~ ERROR `m` is ambiguous\n-   |                 ^\n-...\n-LL | include!();\n-   | ----------- in this macro invocation\n+   |                 ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -29,10 +26,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:149:33\n    |\n LL |             macro gen_invoc() { m!() } //~ ERROR `m` is ambiguous\n-   |                                 ^\n-...\n-LL | include!();\n-   | ----------- in this macro invocation\n+   |                                 ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -56,10 +50,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:158:13\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n-   |             ^\n-...\n-LL | include!();\n-   | ----------- in this macro invocation\n+   |             ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -83,10 +74,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:174:13\n    |\n LL |             m!(); //~ ERROR `m` is ambiguous\n-   |             ^\n-...\n-LL | include!();\n-   | ----------- in this macro invocation\n+   |             ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -110,10 +98,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:192:17\n    |\n LL |                 m!(); //~ ERROR `m` is ambiguous\n-   |                 ^\n-...\n-LL | include!();\n-   | ----------- in this macro invocation\n+   |                 ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9\n@@ -137,10 +122,7 @@ error[E0659]: `m` is ambiguous\n   --> $DIR/restricted-shadowing-modern.rs:235:33\n    |\n LL |             macro gen_invoc() { m!() } //~ ERROR `m` is ambiguous\n-   |                                 ^\n-...\n-LL | include!();\n-   | ----------- in this macro invocation\n+   |                                 ^ ambiguous name\n    |\n note: `m` could refer to the name defined here\n   --> $DIR/restricted-shadowing-modern.rs:91:9"}, {"sha": "d96a802cb3f8f66b3a90707390534021e433cce2", "filename": "src/test/ui/out-of-order-shadowing.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fout-of-order-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2dce3779bbc0353ff9fb544774417a851027fcab/src%2Ftest%2Fui%2Fout-of-order-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fout-of-order-shadowing.stderr?ref=2dce3779bbc0353ff9fb544774417a851027fcab", "patch": "@@ -2,7 +2,7 @@ error[E0659]: `bar` is ambiguous\n   --> $DIR/out-of-order-shadowing.rs:15:1\n    |\n LL | bar!(); //~ ERROR `bar` is ambiguous\n-   | ^^^\n+   | ^^^ ambiguous name\n    |\n note: `bar` could refer to the name defined here\n   --> $DIR/out-of-order-shadowing.rs:14:1"}]}