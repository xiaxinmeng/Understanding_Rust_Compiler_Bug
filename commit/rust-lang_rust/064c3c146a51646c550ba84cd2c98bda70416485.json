{"sha": "064c3c146a51646c550ba84cd2c98bda70416485", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NGMzYzE0NmE1MTY0NmM1NTBiYTg0Y2QyYzk4YmRhNzA0MTY0ODU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-11-23T14:25:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-23T14:25:53Z"}, "message": "Rollup merge of #79337 - LingMan:map, r=jyn514\n\nUse Option::map instead of open coding it\n\nr?  `@jonas-schievink` since you're frequently sniping these minor cleanups anyway.\n`@rustbot` modify labels +C-cleanup  +T-compiler", "tree": {"sha": "52a70f3b28650502ac0055226d9288207841fc6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52a70f3b28650502ac0055226d9288207841fc6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/064c3c146a51646c550ba84cd2c98bda70416485", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfu8ZxCRBK7hj4Ov3rIwAAdHIIAG5vL2Bnpzy9wtNrxRxT3js4\n2xQ9i3o9XRhFRPxz8Qtf26tnuIUoAWfrss8F3OXMcMG+2BDDM/qCc/EKKRTbw9VZ\nv/McxsjQmvEbJ5E61mjGDPAdd//0m0I8ILYF1Lq/3kOIqIzAeO0p4RD/A2hwKH2L\nPfVXxqm/O3xJWJWlvzymLOFCoDTcp8RppqmsKerjR0h+OFSVKmGSUwqdErMiVUwl\nV6QOtuw7PZD4z8Zh2bP5mKQD+0SDSk5MkfQY7iRm0ZJiuj0SWaS3AbbWWXQSOg/X\nA6bkRCliw6p4G7apCh3R1eIf3vI1pDiLk16Cm4A/cxFcMWXSUCeu6ZpZ/qDWxz0=\n=c3Xt\n-----END PGP SIGNATURE-----\n", "payload": "tree 52a70f3b28650502ac0055226d9288207841fc6a\nparent a0cf162329c08caf1489e6838bfc24447c6f1029\nparent cd8973250dff50a2b71641659baa36c70ab3d57e\nauthor Jonas Schievink <jonasschievink@gmail.com> 1606141553 +0100\ncommitter GitHub <noreply@github.com> 1606141553 +0100\n\nRollup merge of #79337 - LingMan:map, r=jyn514\n\nUse Option::map instead of open coding it\n\nr?  `@jonas-schievink` since you're frequently sniping these minor cleanups anyway.\n`@rustbot` modify labels +C-cleanup  +T-compiler\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/064c3c146a51646c550ba84cd2c98bda70416485", "html_url": "https://github.com/rust-lang/rust/commit/064c3c146a51646c550ba84cd2c98bda70416485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/064c3c146a51646c550ba84cd2c98bda70416485/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0cf162329c08caf1489e6838bfc24447c6f1029", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0cf162329c08caf1489e6838bfc24447c6f1029", "html_url": "https://github.com/rust-lang/rust/commit/a0cf162329c08caf1489e6838bfc24447c6f1029"}, {"sha": "cd8973250dff50a2b71641659baa36c70ab3d57e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cd8973250dff50a2b71641659baa36c70ab3d57e", "html_url": "https://github.com/rust-lang/rust/commit/cd8973250dff50a2b71641659baa36c70ab3d57e"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "96484034da7cd7102384d361d20c46472c83731c", "filename": "compiler/rustc_codegen_llvm/src/debuginfo/metadata.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/064c3c146a51646c550ba84cd2c98bda70416485/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064c3c146a51646c550ba84cd2c98bda70416485/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fdebuginfo%2Fmetadata.rs?ref=064c3c146a51646c550ba84cd2c98bda70416485", "patch": "@@ -1152,10 +1152,7 @@ impl<'ll> MemberDescription<'ll> {\n                 self.size.bits(),\n                 self.align.bits() as u32,\n                 self.offset.bits(),\n-                match self.discriminant {\n-                    None => None,\n-                    Some(value) => Some(cx.const_u64(value)),\n-                },\n+                self.discriminant.map(|v| cx.const_u64(v)),\n                 self.flags,\n                 self.type_metadata,\n             )"}, {"sha": "c906b8ac901a57656a929a3b380fd0169e446214", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/064c3c146a51646c550ba84cd2c98bda70416485/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064c3c146a51646c550ba84cd2c98bda70416485/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=064c3c146a51646c550ba84cd2c98bda70416485", "patch": "@@ -1106,10 +1106,7 @@ impl<T> Binder<T> {\n \n impl<T> Binder<Option<T>> {\n     pub fn transpose(self) -> Option<Binder<T>> {\n-        match self.0 {\n-            Some(v) => Some(Binder(v)),\n-            None => None,\n-        }\n+        self.0.map(Binder)\n     }\n }\n "}, {"sha": "d12d2cb59a5a9e7dc076252ca586b564d835c8c2", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/064c3c146a51646c550ba84cd2c98bda70416485/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/064c3c146a51646c550ba84cd2c98bda70416485/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=064c3c146a51646c550ba84cd2c98bda70416485", "patch": "@@ -810,10 +810,12 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 // can be given the suggestion \"u32::from(x) > y\" rather than\n                 // \"x > y.try_into().unwrap()\".\n                 let lhs_expr_and_src = expected_ty_expr.and_then(|expr| {\n-                    match self.tcx.sess.source_map().span_to_snippet(expr.span).ok() {\n-                        Some(src) => Some((expr, src)),\n-                        None => None,\n-                    }\n+                    self.tcx\n+                        .sess\n+                        .source_map()\n+                        .span_to_snippet(expr.span)\n+                        .ok()\n+                        .map(|src| (expr, src))\n                 });\n                 let (span, msg, suggestion) = if let (Some((lhs_expr, lhs_src)), false) =\n                     (lhs_expr_and_src, exp_to_found_is_fallible)"}]}