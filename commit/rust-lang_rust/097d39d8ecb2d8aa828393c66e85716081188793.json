{"sha": "097d39d8ecb2d8aa828393c66e85716081188793", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5N2QzOWQ4ZWNiMmQ4YWE4MjgzOTNjNjZlODU3MTYwODExODg3OTM=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-12-21T22:12:15Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2018-12-21T22:51:55Z"}, "message": "Fix alignment for array indexing\n\nWe need to reduce the alignment with the used offset. If the offset\nisn't known, we need to reduce with the element size to support\narbitrary offsets.", "tree": {"sha": "aa2379ca26f87947862b7528cd3087e04c092f27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa2379ca26f87947862b7528cd3087e04c092f27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/097d39d8ecb2d8aa828393c66e85716081188793", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/097d39d8ecb2d8aa828393c66e85716081188793", "html_url": "https://github.com/rust-lang/rust/commit/097d39d8ecb2d8aa828393c66e85716081188793", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/097d39d8ecb2d8aa828393c66e85716081188793/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d34ec18c7d7e574553f6347ecf08e1e1c45c13d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d", "html_url": "https://github.com/rust-lang/rust/commit/6d34ec18c7d7e574553f6347ecf08e1e1c45c13d"}], "stats": {"total": 96, "additions": 93, "deletions": 3}, "files": [{"sha": "5fad4a24b262e342f5d6bb8d56baf4796aec01a9", "filename": "src/librustc_codegen_ssa/mir/place.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/097d39d8ecb2d8aa828393c66e85716081188793/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097d39d8ecb2d8aa828393c66e85716081188793/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fplace.rs?ref=097d39d8ecb2d8aa828393c66e85716081188793", "patch": "@@ -335,11 +335,20 @@ impl<'a, 'tcx: 'a, V: CodegenObject> PlaceRef<'tcx, V> {\n         bx: &mut Bx,\n         llindex: V\n     ) -> Self {\n+        // Statically compute the offset if we can, otherwise just use the element size,\n+        // as this will yield the lowest alignment.\n+        let layout = self.layout.field(bx, 0);\n+        let offset = if bx.is_const_integral(llindex) {\n+            layout.size.checked_mul(bx.const_to_uint(llindex), bx).unwrap_or(layout.size)\n+        } else {\n+            layout.size\n+        };\n+\n         PlaceRef {\n             llval: bx.inbounds_gep(self.llval, &[bx.cx().const_usize(0), llindex]),\n             llextra: None,\n-            layout: self.layout.field(bx.cx(), 0),\n-            align: self.align\n+            layout,\n+            align: self.align.restrict_for_offset(offset),\n         }\n     }\n "}, {"sha": "052342dd7597bf18bb6c0f0dd2efd227ff7c7268", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/097d39d8ecb2d8aa828393c66e85716081188793/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097d39d8ecb2d8aa828393c66e85716081188793/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=097d39d8ecb2d8aa828393c66e85716081188793", "patch": "@@ -131,8 +131,9 @@ impl<'a, 'tcx: 'a, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 let keep_going = header_bx.icmp(IntPredicate::IntNE, current, end);\n                 header_bx.cond_br(keep_going, body_bx.llbb(), next_bx.llbb());\n \n+                let align = dest.align.restrict_for_offset(dest.layout.field(bx.cx(), 0).size);\n                 cg_elem.val.store(&mut body_bx,\n-                    PlaceRef::new_sized(current, cg_elem.layout, dest.align));\n+                    PlaceRef::new_sized(current, cg_elem.layout, align));\n \n                 let next = body_bx.inbounds_gep(current, &[bx.cx().const_usize(1)]);\n                 body_bx.br(header_bx.llbb());"}, {"sha": "0544ff86aacfa2bb9cd17ab0b5c5c49f442b899c", "filename": "src/test/codegen/issue-56927.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/097d39d8ecb2d8aa828393c66e85716081188793/src%2Ftest%2Fcodegen%2Fissue-56927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097d39d8ecb2d8aa828393c66e85716081188793/src%2Ftest%2Fcodegen%2Fissue-56927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-56927.rs?ref=097d39d8ecb2d8aa828393c66e85716081188793", "patch": "@@ -0,0 +1,44 @@\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![crate_type=\"rlib\"]\n+use std::usize;\n+\n+#[repr(align(16))]\n+pub struct S {\n+    arr: [u32; 4],\n+}\n+\n+// CHECK-LABEL: @test1\n+// CHECK: store i32 0, i32* %{{.+}}, align 16\n+// CHECK: store i32 1, i32* %{{.+}}, align 4\n+// CHECK: store i32 2, i32* %{{.+}}, align 8\n+// CHECK: store i32 3, i32* %{{.+}}, align 4\n+#[no_mangle]\n+pub fn test1(s: &mut S) {\n+    s.arr[0] = 0;\n+    s.arr[1] = 1;\n+    s.arr[2] = 2;\n+    s.arr[3] = 3;\n+}\n+\n+// CHECK-LABEL: @test2\n+// CHECK: store i32 4, i32* %{{.+}}, align 4\n+#[allow(const_err)]\n+#[no_mangle]\n+pub fn test2(s: &mut S) {\n+    s.arr[usize::MAX / 4 + 1] = 4;\n+}\n+\n+// CHECK-LABEL: @test3\n+// CHECK: store i32 5, i32* %{{.+}}, align 4\n+#[no_mangle]\n+pub fn test3(s: &mut S, i: usize) {\n+    s.arr[i] = 5;\n+}\n+\n+// CHECK-LABEL: @test4\n+// CHECK: store i32 6, i32* %{{.+}}, align 4\n+#[no_mangle]\n+pub fn test4(s: &mut S) {\n+    s.arr = [6; 4];\n+}"}, {"sha": "e60051de559b50b719ee62630a58154708a1ece7", "filename": "src/test/codegen/packed.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/097d39d8ecb2d8aa828393c66e85716081188793/src%2Ftest%2Fcodegen%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/097d39d8ecb2d8aa828393c66e85716081188793/src%2Ftest%2Fcodegen%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpacked.rs?ref=097d39d8ecb2d8aa828393c66e85716081188793", "patch": "@@ -84,6 +84,42 @@ pub fn call_pkd2(f: fn() -> Array) -> BigPacked2 {\n     BigPacked2 { dealign: 0, data: f() }\n }\n \n+// CHECK-LABEL: @write_packed_array1\n+// CHECK: store i32 0, i32* %{{.+}}, align 1\n+// CHECK: store i32 1, i32* %{{.+}}, align 1\n+// CHECK: store i32 2, i32* %{{.+}}, align 1\n+#[no_mangle]\n+pub fn write_packed_array1(p: &mut BigPacked1) {\n+    p.data.0[0] = 0;\n+    p.data.0[1] = 1;\n+    p.data.0[2] = 2;\n+}\n+\n+// CHECK-LABEL: @write_packed_array2\n+// CHECK: store i32 0, i32* %{{.+}}, align 2\n+// CHECK: store i32 1, i32* %{{.+}}, align 2\n+// CHECK: store i32 2, i32* %{{.+}}, align 2\n+#[no_mangle]\n+pub fn write_packed_array2(p: &mut BigPacked2) {\n+    p.data.0[0] = 0;\n+    p.data.0[1] = 1;\n+    p.data.0[2] = 2;\n+}\n+\n+// CHECK-LABEL: @repeat_packed_array1\n+// CHECK: store i32 42, i32* %{{.+}}, align 1\n+#[no_mangle]\n+pub fn repeat_packed_array1(p: &mut BigPacked1) {\n+    p.data.0 = [42; 8];\n+}\n+\n+// CHECK-LABEL: @repeat_packed_array2\n+// CHECK: store i32 42, i32* %{{.+}}, align 2\n+#[no_mangle]\n+pub fn repeat_packed_array2(p: &mut BigPacked2) {\n+    p.data.0 = [42; 8];\n+}\n+\n #[repr(packed)]\n #[derive(Copy, Clone)]\n pub struct Packed1Pair(u8, u32);"}]}