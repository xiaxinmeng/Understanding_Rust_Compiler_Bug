{"sha": "92f94765ec2202ccda84a7da97c4d415ffb9b070", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkyZjk0NzY1ZWMyMjAyY2NkYTg0YTdkYTk3YzRkNDE1ZmZiOWIwNzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-31T11:33:41Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-02-01T11:13:06Z"}, "message": "Adjust the handling of trait obligations and defaults to account for\nupvar inference.  Upvar inference can cause some obligations to be\ndeferred, notably things like `F : Sized` where `F` is a closure type,\nor `F : FnMut`. Adjust the ordering therefore so that we process all\ntraits and apply fallback, do upvar inference, and only then start\nreporting errors for outstanding obligations.", "tree": {"sha": "faeeb1875e266230d39bb66901227c3a02a8f0f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faeeb1875e266230d39bb66901227c3a02a8f0f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/92f94765ec2202ccda84a7da97c4d415ffb9b070", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/92f94765ec2202ccda84a7da97c4d415ffb9b070", "html_url": "https://github.com/rust-lang/rust/commit/92f94765ec2202ccda84a7da97c4d415ffb9b070", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/92f94765ec2202ccda84a7da97c4d415ffb9b070/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61", "html_url": "https://github.com/rust-lang/rust/commit/f5281e2bb56fa9ef4debf04e6141d2ad3650ca61"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "c58377fc87bd7ac1c30fd9b0e3c3e19683df44f8", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/92f94765ec2202ccda84a7da97c4d415ffb9b070/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92f94765ec2202ccda84a7da97c4d415ffb9b070/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=92f94765ec2202ccda84a7da97c4d415ffb9b070", "patch": "@@ -493,8 +493,9 @@ fn check_bare_fn<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n             let fcx = check_fn(ccx, fn_ty.unsafety, id, &fn_sig,\n                                decl, id, body, &inh);\n \n-            vtable::select_all_fcx_obligations_or_error(&fcx);\n+            vtable::select_all_fcx_obligations_and_apply_defaults(&fcx);\n             upvar::closure_analyze_fn(&fcx, id, decl, body);\n+            vtable::select_all_fcx_obligations_or_error(&fcx);\n             regionck::regionck_fn(&fcx, id, decl, body);\n             writeback::resolve_type_vars_in_fn(&fcx, decl, body);\n         }"}, {"sha": "9921a331fa40db965277a17e73110b7a4383bb90", "filename": "src/librustc_typeck/check/vtable.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/92f94765ec2202ccda84a7da97c4d415ffb9b070/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/92f94765ec2202ccda84a7da97c4d415ffb9b070/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs?ref=92f94765ec2202ccda84a7da97c4d415ffb9b070", "patch": "@@ -277,15 +277,20 @@ fn check_object_type_binds_all_associated_types<'tcx>(tcx: &ty::ctxt<'tcx>,\n     }\n }\n \n-pub fn select_all_fcx_obligations_or_error(fcx: &FnCtxt) {\n+pub fn select_all_fcx_obligations_and_apply_defaults(fcx: &FnCtxt) {\n     debug!(\"select_all_fcx_obligations_or_error\");\n \n     fcx.inh.deferred_resolutions.borrow_mut()\n                                 .retain(|r| !r.attempt_resolution(fcx));\n-\n     select_fcx_obligations_where_possible(fcx);\n     fcx.default_type_parameters();\n+    select_fcx_obligations_where_possible(fcx);\n+}\n+\n+pub fn select_all_fcx_obligations_or_error(fcx: &FnCtxt) {\n+    debug!(\"select_all_fcx_obligations_or_error\");\n \n+    select_all_fcx_obligations_and_apply_defaults(fcx);\n     let mut fulfillment_cx = fcx.inh.fulfillment_cx.borrow_mut();\n     let r = fulfillment_cx.select_all_or_error(fcx.infcx(), fcx);\n     match r {"}]}