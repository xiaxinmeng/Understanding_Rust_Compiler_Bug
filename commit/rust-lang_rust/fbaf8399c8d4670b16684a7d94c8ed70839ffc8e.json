{"sha": "fbaf8399c8d4670b16684a7d94c8ed70839ffc8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiYWY4Mzk5YzhkNDY3MGIxNjY4NGE3ZDk0YzhlZDcwODM5ZmZjOGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-02T01:50:09Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2013-05-02T01:50:09Z"}, "message": "rustc: more fix for trans_lvalue rooted twice", "tree": {"sha": "73a518caf62e3eec46ac3d5cdd00cccd1c7056d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73a518caf62e3eec46ac3d5cdd00cccd1c7056d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbaf8399c8d4670b16684a7d94c8ed70839ffc8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbaf8399c8d4670b16684a7d94c8ed70839ffc8e", "html_url": "https://github.com/rust-lang/rust/commit/fbaf8399c8d4670b16684a7d94c8ed70839ffc8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbaf8399c8d4670b16684a7d94c8ed70839ffc8e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6210de9529f37bb4ff51050bca19dfd6f28026c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/6210de9529f37bb4ff51050bca19dfd6f28026c9", "html_url": "https://github.com/rust-lang/rust/commit/6210de9529f37bb4ff51050bca19dfd6f28026c9"}], "stats": {"total": 25, "additions": 4, "deletions": 21}, "files": [{"sha": "30c541c0c055bb7b3841e87f5759c647dde690ca", "filename": "src/librustc/middle/trans/expr.rs", "status": "modified", "additions": 4, "deletions": 21, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fbaf8399c8d4670b16684a7d94c8ed70839ffc8e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbaf8399c8d4670b16684a7d94c8ed70839ffc8e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=fbaf8399c8d4670b16684a7d94c8ed70839ffc8e", "patch": "@@ -823,7 +823,7 @@ fn trans_lvalue_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n \n     return match expr.node {\n         ast::expr_paren(e) => {\n-            unrooted(bcx, e)\n+            trans_lvalue_unadjusted(bcx, e)\n         }\n         ast::expr_path(_) => {\n             trans_def_lvalue(bcx, expr, bcx.def(expr.id))\n@@ -849,12 +849,7 @@ fn trans_lvalue_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n     fn trans_rec_field(bcx: block,\n                        base: @ast::expr,\n                        field: ast::ident) -> DatumBlock {\n-        /*!\n-         *\n-         * Translates `base.field`.  Note that this version always\n-         * yields an unrooted, unmoved version.  Rooting and possible\n-         * moves are dealt with above in trans_lvalue_unadjusted().\n-         */\n+        //! Translates `base.field`.\n \n         let mut bcx = bcx;\n         let _icx = bcx.insn_ctxt(\"trans_rec_field\");\n@@ -878,12 +873,7 @@ fn trans_lvalue_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n                    index_expr: @ast::expr,\n                    base: @ast::expr,\n                    idx: @ast::expr) -> DatumBlock {\n-        /*!\n-         *\n-         * Translates `base[idx]`.  Note that this version always\n-         * yields an unrooted, unmoved version.  Rooting and possible\n-         * moves are dealt with above in trans_lvalue_unadjusted().\n-         */\n+        //! Translates `base[idx]`.\n \n         let _icx = bcx.insn_ctxt(\"trans_index\");\n         let ccx = bcx.ccx();\n@@ -946,14 +936,7 @@ fn trans_lvalue_unadjusted(bcx: block, expr: @ast::expr) -> DatumBlock {\n                         def: ast::def)\n         -> DatumBlock\n     {\n-        /*!\n-         *\n-         * Translates a reference to a path.  Note that this version\n-         * generally yields an unrooted, unmoved version.  Rooting and\n-         * possible moves are dealt with above in\n-         * trans_lvalue_unadjusted(), with the caveat that local variables\n-         * may already be in move mode.\n-         */\n+        //! Translates a reference to a path.\n \n         let _icx = bcx.insn_ctxt(\"trans_def_lvalue\");\n         let ccx = bcx.ccx();"}]}