{"sha": "5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlOTgxMTJhZjRlOGI0MDY4YmNlZTZhNTRlMjgwMzFmYzkyZDZhM2Y=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-12-20T13:21:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-20T13:21:58Z"}, "message": "Rollup merge of #46828 - vi:hash_for_systemtime_instant, r=dtolnay\n\nAdd Hash impl for SystemTime and Instant\n\nCloses #46670.\n\nNot sure how to actually test non-Linux platforms.\n`rustc --target=i686-pc-windows-gnu --crate-name std --crate-type rlib src/libstd/lib.rs -o q.rlib` works a bit, but for Redox I'm not sure what to do.\n\nr? @dtolnay", "tree": {"sha": "5d79493d556f052fb6954cc08a593e272b2faea2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d79493d556f052fb6954cc08a593e272b2faea2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "html_url": "https://github.com/rust-lang/rust/commit/5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f35bb15fc6fc764af9d97b240b133343b82a7e24", "url": "https://api.github.com/repos/rust-lang/rust/commits/f35bb15fc6fc764af9d97b240b133343b82a7e24", "html_url": "https://github.com/rust-lang/rust/commit/f35bb15fc6fc764af9d97b240b133343b82a7e24"}, {"sha": "1d5ead453dd96c1040a12cbb3b0180027af165c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d5ead453dd96c1040a12cbb3b0180027af165c9", "html_url": "https://github.com/rust-lang/rust/commit/1d5ead453dd96c1040a12cbb3b0180027af165c9"}], "stats": {"total": 45, "additions": 34, "deletions": 11}, "files": [{"sha": "cf798500b7fd2d716dcccaaa7adb62250b879a88", "filename": "src/libstd/sys/redox/time.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Fredox%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Fredox%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fredox%2Ftime.rs?ref=5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "patch": "@@ -13,6 +13,7 @@ use fmt;\n use sys::{cvt, syscall};\n use time::Duration;\n use convert::TryInto;\n+use core::hash::{Hash, Hasher};\n \n const NSEC_PER_SEC: u64 = 1_000_000_000;\n \n@@ -110,12 +111,19 @@ impl Ord for Timespec {\n     }\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+impl Hash for Timespec {\n+    fn hash<H : Hasher>(&self, state: &mut H) {\n+        self.t.tv_sec.hash(state);\n+        self.t.tv_nsec.hash(state);\n+    }\n+}\n+\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct Instant {\n     t: Timespec,\n }\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct SystemTime {\n     t: Timespec,\n }"}, {"sha": "83127935909931211957d8df0e34e7c599e92ceb", "filename": "src/libstd/sys/unix/time.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Funix%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Funix%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftime.rs?ref=5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "patch": "@@ -11,6 +11,7 @@\n use cmp::Ordering;\n use libc;\n use time::Duration;\n+use core::hash::{Hash, Hasher};\n \n pub use self::inner::{Instant, SystemTime, UNIX_EPOCH};\n use convert::TryInto;\n@@ -111,6 +112,13 @@ impl Ord for Timespec {\n     }\n }\n \n+impl Hash for Timespec {\n+    fn hash<H : Hasher>(&self, state: &mut H) {\n+        self.t.tv_sec.hash(state);\n+        self.t.tv_nsec.hash(state);\n+    }\n+}\n+\n #[cfg(any(target_os = \"macos\", target_os = \"ios\"))]\n mod inner {\n     use fmt;\n@@ -123,12 +131,12 @@ mod inner {\n     use super::NSEC_PER_SEC;\n     use super::Timespec;\n \n-    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug)]\n+    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]\n     pub struct Instant {\n         t: u64\n     }\n \n-    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n     pub struct SystemTime {\n         t: Timespec,\n     }\n@@ -255,12 +263,12 @@ mod inner {\n \n     use super::Timespec;\n \n-    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n     pub struct Instant {\n         t: Timespec,\n     }\n \n-    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+    #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n     pub struct SystemTime {\n         t: Timespec,\n     }"}, {"sha": "c269def98f6ffdae4f226414e678871adc3e6df7", "filename": "src/libstd/sys/wasm/time.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Fwasm%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Fwasm%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwasm%2Ftime.rs?ref=5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "patch": "@@ -11,10 +11,10 @@\n use fmt;\n use time::Duration;\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]\n pub struct Instant;\n \n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct SystemTime;\n \n pub const UNIX_EPOCH: SystemTime = SystemTime;"}, {"sha": "07e64d386a1c2b7c94927fda6d73a1f6b190ba5e", "filename": "src/libstd/sys/windows/time.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Fwindows%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Fsys%2Fwindows%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ftime.rs?ref=5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "patch": "@@ -17,11 +17,12 @@ use sys::cvt;\n use sys_common::mul_div_u64;\n use time::Duration;\n use convert::TryInto;\n+use core::hash::{Hash, Hasher};\n \n const NANOS_PER_SEC: u64 = 1_000_000_000;\n const INTERVALS_PER_SEC: u64 = NANOS_PER_SEC / 100;\n \n-#[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Debug)]\n+#[derive(Copy, Clone, Eq, PartialEq, Ord, PartialOrd, Debug, Hash)]\n pub struct Instant {\n     t: c::LARGE_INTEGER,\n }\n@@ -173,6 +174,12 @@ impl From<c::FILETIME> for SystemTime {\n     }\n }\n \n+impl Hash for SystemTime {\n+    fn hash<H : Hasher>(&self, state: &mut H) {\n+        self.intervals().hash(state)\n+    }\n+}\n+\n fn dur2intervals(d: &Duration) -> i64 {\n     d.as_secs()\n         .checked_mul(INTERVALS_PER_SEC)"}, {"sha": "6ce3b3e8a003191049ab3b4ebc2d8c4e04e2cec4", "filename": "src/libstd/time/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Ftime%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e98112af4e8b4068bcee6a54e28031fc92d6a3f/src%2Flibstd%2Ftime%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime%2Fmod.rs?ref=5e98112af4e8b4068bcee6a54e28031fc92d6a3f", "patch": "@@ -66,7 +66,7 @@ mod duration;\n ///    println!(\"{}\", now.elapsed().as_secs());\n /// }\n /// ```\n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n #[stable(feature = \"time2\", since = \"1.8.0\")]\n pub struct Instant(time::Instant);\n \n@@ -118,7 +118,7 @@ pub struct Instant(time::Instant);\n ///    }\n /// }\n /// ```\n-#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord)]\n+#[derive(Copy, Clone, PartialEq, Eq, PartialOrd, Ord, Hash)]\n #[stable(feature = \"time2\", since = \"1.8.0\")]\n pub struct SystemTime(time::SystemTime);\n "}]}