{"sha": "a41aa5595b076ed4a5585ab37baea6e1e31f16ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MWFhNTU5NWIwNzZlZDRhNTU4NWFiMzdiYWVhNmUxZTMxZjE2ZWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-12T21:15:12Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-12T21:15:59Z"}, "message": "rustc: Parse tuple types", "tree": {"sha": "eab17c137db23fbc5aa3a38d769f1525098f69de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eab17c137db23fbc5aa3a38d769f1525098f69de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a41aa5595b076ed4a5585ab37baea6e1e31f16ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a41aa5595b076ed4a5585ab37baea6e1e31f16ed", "html_url": "https://github.com/rust-lang/rust/commit/a41aa5595b076ed4a5585ab37baea6e1e31f16ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a41aa5595b076ed4a5585ab37baea6e1e31f16ed/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "beb4c07e26794dde482b4de85107f1e078375036", "url": "https://api.github.com/repos/rust-lang/rust/commits/beb4c07e26794dde482b4de85107f1e078375036", "html_url": "https://github.com/rust-lang/rust/commit/beb4c07e26794dde482b4de85107f1e078375036"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "64d254090f3f339bc242eb5ece35d104ebead77d", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a41aa5595b076ed4a5585ab37baea6e1e31f16ed/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a41aa5595b076ed4a5585ab37baea6e1e31f16ed/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=a41aa5595b076ed4a5585ab37baea6e1e31f16ed", "patch": "@@ -83,6 +83,18 @@ io fn parse_ident(parser p) -> ast.ident {\n     }\n }\n \n+io fn parse_possibly_mutable_ty(parser p) -> tup(bool, @ast.ty) {\n+    auto mut;\n+    if (p.peek() == token.MUTABLE) {\n+        p.bump();\n+        mut = true;\n+    } else {\n+        mut = false;\n+    }\n+\n+    ret tup(mut, parse_ty(p));\n+}\n+\n io fn parse_ty(parser p) -> @ast.ty {\n     auto lo = p.get_span();\n     let ast.ty_ t;\n@@ -92,6 +104,15 @@ io fn parse_ty(parser p) -> @ast.ty {\n         case (token.STR) { p.bump(); t = ast.ty_str; }\n         case (token.CHAR) { p.bump(); t = ast.ty_char; }\n         case (token.MACH(?tm)) { p.bump(); t = ast.ty_machine(tm); }\n+\n+        case (token.TUP) {\n+            p.bump();\n+            auto f = parse_possibly_mutable_ty; // FIXME: trans_const_lval bug\n+            auto elems = parse_seq[tup(bool, @ast.ty)](token.LPAREN,\n+                token.RPAREN, some(token.COMMA), f, p);\n+            t = ast.ty_tup(elems.node);\n+        }\n+\n         case (_) {\n             p.err(\"expecting type\");\n             t = ast.ty_nil;"}]}