{"sha": "03ae629259b0a721c3695ba85f22048f44cc43b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYWU2MjkyNTliMGE3MjFjMzY5NWJhODVmMjIwNDhmNDRjYzQzYjA=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-20T19:14:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-05-24T20:32:06Z"}, "message": "Remove the #[merge] hack from the parser", "tree": {"sha": "5c3b48c39ecc8e7af72f1ed80a0a4ec381357420", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5c3b48c39ecc8e7af72f1ed80a0a4ec381357420"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03ae629259b0a721c3695ba85f22048f44cc43b0", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03ae629259b0a721c3695ba85f22048f44cc43b0", "html_url": "https://github.com/rust-lang/rust/commit/03ae629259b0a721c3695ba85f22048f44cc43b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03ae629259b0a721c3695ba85f22048f44cc43b0/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f", "html_url": "https://github.com/rust-lang/rust/commit/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f"}], "stats": {"total": 86, "additions": 1, "deletions": 85}, "files": [{"sha": "fe1787fca3cb0a1152cce66a2a8b703f09e69cb4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 34, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/03ae629259b0a721c3695ba85f22048f44cc43b0/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03ae629259b0a721c3695ba85f22048f44cc43b0/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=03ae629259b0a721c3695ba85f22048f44cc43b0", "patch": "@@ -3550,8 +3550,7 @@ pub impl Parser {\n     fn parse_item_mod(&self, outer_attrs: ~[ast::attribute]) -> item_info {\n         let id_span = *self.span;\n         let id = self.parse_ident();\n-        let merge = ::attr::first_attr_value_str_by_name(outer_attrs, \"merge\");\n-        let info_ = if *self.token == token::SEMI {\n+        if *self.token == token::SEMI {\n             self.bump();\n             // This mod is in an external file. Let's go get it!\n             let (m, attrs) = self.eval_src_mod(id, outer_attrs, id_span);\n@@ -3564,38 +3563,6 @@ pub impl Parser {\n             self.expect(&token::RBRACE);\n             self.pop_mod_path();\n             (id, item_mod(m), Some(inner))\n-        };\n-\n-        // XXX: Transitionary hack to do the template work inside core\n-        // (int-template, iter-trait). If there's a 'merge' attribute\n-        // on the mod, then we'll go and suck in another file and merge\n-        // its contents\n-        match merge {\n-            Some(path) => {\n-                let prefix = Path(\n-                    self.sess.cm.span_to_filename(*self.span));\n-                let prefix = prefix.dir_path();\n-                let path = Path(copy *path);\n-                let (new_mod_item, new_attrs) = self.eval_src_mod_from_path(\n-                    prefix, path, ~[], id_span);\n-\n-                let (main_id, main_mod_item, main_attrs) = info_;\n-                let main_attrs = main_attrs.get();\n-\n-                let (main_mod, new_mod) =\n-                    match (main_mod_item, new_mod_item) {\n-                    (item_mod(m), item_mod(n)) => (m, n),\n-                    _ => self.bug(\"parsed mod item should be mod\")\n-                };\n-                let merged_mod = ast::_mod {\n-                    view_items: main_mod.view_items + new_mod.view_items,\n-                    items: main_mod.items + new_mod.items\n-                };\n-\n-                let merged_attrs = main_attrs + new_attrs;\n-                (main_id, item_mod(merged_mod), Some(merged_attrs))\n-            }\n-            None => info_\n         }\n     }\n "}, {"sha": "999c6ac2a71d56db0c7806e562ba1602b93e5b38", "filename": "src/test/run-pass/mod-merge-hack-inst.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f/src%2Ftest%2Frun-pass%2Fmod-merge-hack-inst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f/src%2Ftest%2Frun-pass%2Fmod-merge-hack-inst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod-merge-hack-inst.rs?ref=ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// xfail-test not a test. used by mod-merge-hack.rs\n-\n-mod inst {\n-    pub type T = i32;\n-    pub static bits: uint = 32;\n-}"}, {"sha": "7f7dd33dc099f2486913c7c4f2c569ef9882da9d", "filename": "src/test/run-pass/mod-merge-hack-template.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f/src%2Ftest%2Frun-pass%2Fmod-merge-hack-template.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f/src%2Ftest%2Frun-pass%2Fmod-merge-hack-template.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod-merge-hack-template.rs?ref=ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// xfail-test not a test. used by mod-merge-hack.rs\n-\n-use T = self::inst::T;\n-\n-pub static bits: uint = inst::bits;\n-pub fn min(x: T, y: T) -> T { if x < y { x } else { y } }"}, {"sha": "fdef8c5b54102d69b66ea088a2a25f07c2be4e81", "filename": "src/test/run-pass/mod-merge-hack.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f/src%2Ftest%2Frun-pass%2Fmod-merge-hack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f/src%2Ftest%2Frun-pass%2Fmod-merge-hack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmod-merge-hack.rs?ref=ec8fb884e94975ed6d82a4cc0ea0a064a4b7155f", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// xfail-pretty\n-#[path = \"mod-merge-hack-template.rs\"]\n-#[merge = \"mod-merge-hack-inst.rs\"]\n-mod myint32;\n-\n-pub fn main() {\n-    assert_eq!(myint32::bits, 32);\n-    assert_eq!(myint32::min(10, 20), 10);\n-}"}]}