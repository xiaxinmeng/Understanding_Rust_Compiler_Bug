{"sha": "a05ce5a3e75fe642826e9e244aecaf599e95ed92", "node_id": "C_kwDOAAsO6NoAKGEwNWNlNWEzZTc1ZmU2NDI4MjZlOWUyNDRhZWNhZjU5OWU5NWVkOTI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-08T09:31:35Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-02-08T09:31:35Z"}, "message": "Auto merge of #13986 - MariaSolOs:limit-completions, r=Veykril\n\nAdd setting for limiting number of completions\n\nFor #13911.", "tree": {"sha": "9b7d25907b756fc22f5ebf4d17fa3c492858b857", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b7d25907b756fc22f5ebf4d17fa3c492858b857"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a05ce5a3e75fe642826e9e244aecaf599e95ed92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a05ce5a3e75fe642826e9e244aecaf599e95ed92", "html_url": "https://github.com/rust-lang/rust/commit/a05ce5a3e75fe642826e9e244aecaf599e95ed92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a05ce5a3e75fe642826e9e244aecaf599e95ed92/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c89945e78c5f164c03cabb1c5cd459a86ef963a", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c89945e78c5f164c03cabb1c5cd459a86ef963a", "html_url": "https://github.com/rust-lang/rust/commit/3c89945e78c5f164c03cabb1c5cd459a86ef963a"}, {"sha": "064fcfa016e9adac35b07ae6c63e1472c31b1616", "url": "https://api.github.com/repos/rust-lang/rust/commits/064fcfa016e9adac35b07ae6c63e1472c31b1616", "html_url": "https://github.com/rust-lang/rust/commit/064fcfa016e9adac35b07ae6c63e1472c31b1616"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "8f6a97e1e09d89634fed3ed95a534286b30f4448", "filename": "crates/ide-completion/src/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Fide-completion%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Fide-completion%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fconfig.rs?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -19,6 +19,7 @@ pub struct CompletionConfig {\n     pub insert_use: InsertUseConfig,\n     pub prefer_no_std: bool,\n     pub snippets: Vec<Snippet>,\n+    pub limit: Option<usize>,\n }\n \n #[derive(Clone, Debug, PartialEq, Eq)]"}, {"sha": "540b0fd0ef7d9dab0b7ba4a0daaa83d843c79a0d", "filename": "crates/ide-completion/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Fide-completion%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Fide-completion%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests.rs?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -75,6 +75,7 @@ pub(crate) const TEST_CONFIG: CompletionConfig = CompletionConfig {\n         skip_glob_imports: true,\n     },\n     snippets: Vec::new(),\n+    limit: None,\n };\n \n pub(crate) fn completion_list(ra_fixture: &str) -> String {"}, {"sha": "be09938c2c4a4b700574aa663744de3c5a99f1c4", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -200,6 +200,8 @@ config_data! {\n         completion_autoself_enable: bool        = \"true\",\n         /// Whether to add parenthesis and argument snippets when completing function.\n         completion_callable_snippets: CallableCompletionDef  = \"\\\"fill_arguments\\\"\",\n+        /// Maximum number of completions to return. If `None`, the limit is infinite.\n+        completion_limit: Option<usize> = \"null\",\n         /// Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\n         completion_postfix_enable: bool         = \"true\",\n         /// Enables completions of private items and fields that are defined in the current workspace even if they are not visible at the current position.\n@@ -1343,6 +1345,7 @@ impl Config {\n                     .snippet_support?\n             )),\n             snippets: self.snippets.clone(),\n+            limit: self.data.completion_limit,\n         }\n     }\n "}, {"sha": "7c13d9bad281a27c1c5874f5975ade2347230a2d", "filename": "crates/rust-analyzer/src/integrated_benchmarks.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Frust-analyzer%2Fsrc%2Fintegrated_benchmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Frust-analyzer%2Fsrc%2Fintegrated_benchmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fintegrated_benchmarks.rs?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -146,6 +146,7 @@ fn integrated_completion_benchmark() {\n             },\n             snippets: Vec::new(),\n             prefer_no_std: false,\n+            limit: None,\n         };\n         let position =\n             FilePosition { file_id, offset: TextSize::try_from(completion_offset).unwrap() };\n@@ -184,6 +185,7 @@ fn integrated_completion_benchmark() {\n             },\n             snippets: Vec::new(),\n             prefer_no_std: false,\n+            limit: None,\n         };\n         let position =\n             FilePosition { file_id, offset: TextSize::try_from(completion_offset).unwrap() };"}, {"sha": "5bdc1bf8d9bb7ea0a83814b012170dab19ad1979", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -215,8 +215,14 @@ pub(crate) fn completion_items(\n     let max_relevance = items.iter().map(|it| it.relevance().score()).max().unwrap_or_default();\n     let mut res = Vec::with_capacity(items.len());\n     for item in items {\n-        completion_item(&mut res, config, line_index, &tdpp, max_relevance, item)\n+        completion_item(&mut res, config, line_index, &tdpp, max_relevance, item);\n     }\n+\n+    if let Some(limit) = config.completion().limit {\n+        res.sort_by(|item1, item2| item1.sort_text.cmp(&item2.sort_text));\n+        res.truncate(limit);\n+    }\n+\n     res\n }\n "}, {"sha": "50e3670a7a87aa12719a13c756feb1e21aecbfda", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -227,6 +227,11 @@ with `self` prefixed to them when inside a method.\n --\n Whether to add parenthesis and argument snippets when completing function.\n --\n+[[rust-analyzer.completion.limit]]rust-analyzer.completion.limit (default: `null`)::\n++\n+--\n+Maximum number of completions to return. If `None`, the limit is infinite.\n+--\n [[rust-analyzer.completion.postfix.enable]]rust-analyzer.completion.postfix.enable (default: `true`)::\n +\n --"}, {"sha": "9f0b494a6bd8622d78e78e077801905717c665d4", "filename": "editors/code/package.json", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a05ce5a3e75fe642826e9e244aecaf599e95ed92/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/a05ce5a3e75fe642826e9e244aecaf599e95ed92/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=a05ce5a3e75fe642826e9e244aecaf599e95ed92", "patch": "@@ -705,6 +705,15 @@\n                         \"Do no snippet completions for callables.\"\n                     ]\n                 },\n+                \"rust-analyzer.completion.limit\": {\n+                    \"markdownDescription\": \"Maximum number of completions to return. If `None`, the limit is infinite.\",\n+                    \"default\": null,\n+                    \"type\": [\n+                        \"null\",\n+                        \"integer\"\n+                    ],\n+                    \"minimum\": 0\n+                },\n                 \"rust-analyzer.completion.postfix.enable\": {\n                     \"markdownDescription\": \"Whether to show postfix snippets like `dbg`, `if`, `not`, etc.\",\n                     \"default\": true,"}]}