{"sha": "19cce08662222f012a0f50ff73afd4fdd34ca683", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5Y2NlMDg2NjIyMjJmMDEyYTBmNTBmZjczYWZkNGZkZDM0Y2E2ODM=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-24T08:39:57Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2020-10-24T08:39:57Z"}, "message": "Re-export base_db from ide_db", "tree": {"sha": "6561f9a2802caff7b5fe56eeaa0c751bc5015a91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6561f9a2802caff7b5fe56eeaa0c751bc5015a91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19cce08662222f012a0f50ff73afd4fdd34ca683", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19cce08662222f012a0f50ff73afd4fdd34ca683", "html_url": "https://github.com/rust-lang/rust/commit/19cce08662222f012a0f50ff73afd4fdd34ca683", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19cce08662222f012a0f50ff73afd4fdd34ca683/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c787676c92c81a0c9efeb3e72a91c5132c8106a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c787676c92c81a0c9efeb3e72a91c5132c8106a", "html_url": "https://github.com/rust-lang/rust/commit/2c787676c92c81a0c9efeb3e72a91c5132c8106a"}], "stats": {"total": 143, "additions": 69, "deletions": 74}, "files": [{"sha": "769120fc2b4e7549738d8c51d55a6820120b35ab", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -50,7 +50,6 @@ checksum = \"cff77d8686867eceff3105329d4698d96c2391c176d5d03adc90c7389162b5b8\"\n name = \"assists\"\n version = \"0.0.0\"\n dependencies = [\n- \"base_db\",\n  \"either\",\n  \"hir\",\n  \"ide_db\",\n@@ -627,7 +626,6 @@ name = \"ide\"\n version = \"0.0.0\"\n dependencies = [\n  \"assists\",\n- \"base_db\",\n  \"cfg\",\n  \"completion\",\n  \"either\",\n@@ -1315,7 +1313,6 @@ name = \"rust-analyzer\"\n version = \"0.0.0\"\n dependencies = [\n  \"anyhow\",\n- \"base_db\",\n  \"cfg\",\n  \"crossbeam-channel 0.5.0\",\n  \"env_logger\",\n@@ -1548,7 +1545,6 @@ dependencies = [\n name = \"ssr\"\n version = \"0.0.0\"\n dependencies = [\n- \"base_db\",\n  \"expect-test\",\n  \"hir\",\n  \"ide_db\","}, {"sha": "108f656e920eecff2e6727066cd993579676fcd2", "filename": "crates/assists/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2FCargo.toml?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -18,7 +18,6 @@ stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n profile = { path = \"../profile\", version = \"0.0.0\" }\n-base_db = { path = \"../base_db\", version = \"0.0.0\" }\n ide_db = { path = \"../ide_db\", version = \"0.0.0\" }\n hir = { path = \"../hir\", version = \"0.0.0\" }\n test_utils = { path = \"../test_utils\", version = \"0.0.0\" }"}, {"sha": "d11fee196a374bbc541596d89d3c5062ddd7949f", "filename": "crates/assists/src/assist_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fassist_context.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -3,8 +3,8 @@\n use std::mem;\n \n use algo::find_covering_element;\n-use base_db::{FileId, FileRange};\n use hir::Semantics;\n+use ide_db::base_db::{FileId, FileRange};\n use ide_db::{\n     label::Label,\n     source_change::{SourceChange, SourceFileEdit},"}, {"sha": "48433feb9e98cfb07daf6c0c6cd7b90a63d9bc46", "filename": "crates/assists/src/handlers/extract_struct_from_enum_variant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fextract_struct_from_enum_variant.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,5 +1,5 @@\n-use base_db::FileId;\n use hir::{EnumVariant, Module, ModuleDef, Name};\n+use ide_db::base_db::FileId;\n use ide_db::{defs::Definition, search::Reference, RootDatabase};\n use itertools::Itertools;\n use rustc_hash::FxHashSet;"}, {"sha": "c867207877bc0a396ab2a96f0ab615a4b567db9b", "filename": "crates/assists/src/handlers/fix_visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Ffix_visibility.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,5 +1,5 @@\n-use base_db::FileId;\n use hir::{db::HirDatabase, HasSource, HasVisibility, PathResolution};\n+use ide_db::base_db::FileId;\n use syntax::{\n     ast::{self, VisibilityOwner},\n     AstNode, TextRange, TextSize,"}, {"sha": "758188a42956aa7133706a7e84f893156699b6df", "filename": "crates/assists/src/handlers/generate_function.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fgenerate_function.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,5 +1,5 @@\n-use base_db::FileId;\n use hir::HirDisplay;\n+use ide_db::base_db::FileId;\n use rustc_hash::{FxHashMap, FxHashSet};\n use syntax::{\n     ast::{"}, {"sha": "70a651e10f62754e862e5430082f7cbf1774cd26", "filename": "crates/assists/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Flib.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -17,8 +17,8 @@ mod tests;\n pub mod utils;\n pub mod ast_transform;\n \n-use base_db::FileRange;\n use hir::Semantics;\n+use ide_db::base_db::FileRange;\n use ide_db::{label::Label, source_change::SourceChange, RootDatabase};\n use syntax::TextRange;\n "}, {"sha": "849d85e7631e6c9fba69d877ca96355770943b4b", "filename": "crates/assists/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fassists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Ftests.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n mod generated;\n \n-use base_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use hir::Semantics;\n+use ide_db::base_db::{fixture::WithFixture, FileId, FileRange, SourceDatabaseExt};\n use ide_db::RootDatabase;\n use syntax::TextRange;\n use test_utils::{assert_eq_text, extract_offset, extract_range};"}, {"sha": "385911afadc2758c40caa805c54a556b9dea3d81", "filename": "crates/completion/src/complete_mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Fcomplete_mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Fcomplete_mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcomplete_mod.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n //! Completes mod declarations.\n \n-use base_db::{SourceDatabaseExt, VfsPath};\n use hir::{Module, ModuleSource};\n+use ide_db::base_db::{SourceDatabaseExt, VfsPath};\n use ide_db::RootDatabase;\n use rustc_hash::FxHashSet;\n "}, {"sha": "dca304a8f50ce722b121605e9d6486c9f9f09fee", "filename": "crates/completion/src/completion_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletion_context.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n //! See `CompletionContext` structure.\n \n-use base_db::{FilePosition, SourceDatabase};\n use hir::{Local, ScopeDef, Semantics, SemanticsScope, Type};\n+use ide_db::base_db::{FilePosition, SourceDatabase};\n use ide_db::{call_info::ActiveParameter, RootDatabase};\n use syntax::{\n     algo::{find_covering_element, find_node_at_offset},"}, {"sha": "b72fd249dcfe83824ee938c6f9fff9c6d837e3d6", "filename": "crates/completion/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Flib.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -23,7 +23,7 @@ mod complete_macro_in_item_position;\n mod complete_trait_impl;\n mod complete_mod;\n \n-use base_db::FilePosition;\n+use ide_db::base_db::FilePosition;\n use ide_db::RootDatabase;\n \n use crate::{"}, {"sha": "b02556797d9c13775f41aba6161e6862b043b166", "filename": "crates/completion/src/test_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fcompletion%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Ftest_utils.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n //! Runs completion for testing purposes.\n \n-use base_db::{fixture::ChangeFixture, FileLoader, FilePosition};\n use hir::Semantics;\n+use ide_db::base_db::{fixture::ChangeFixture, FileLoader, FilePosition};\n use ide_db::RootDatabase;\n use itertools::Itertools;\n use stdx::{format_to, trim_indent};"}, {"sha": "4d483580df378829f11059dc686956d334cd1da7", "filename": "crates/ide/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2FCargo.toml?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -23,7 +23,6 @@ url = \"2.1.1\"\n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n-base_db = { path = \"../base_db\", version = \"0.0.0\" }\n ide_db = { path = \"../ide_db\", version = \"0.0.0\" }\n cfg = { path = \"../cfg\", version = \"0.0.0\" }\n profile = { path = \"../profile\", version = \"0.0.0\" }"}, {"sha": "8ad50a2ee5ed91657d145dea80d66125a6a5562f", "filename": "crates/ide/src/call_hierarchy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fcall_hierarchy.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -137,7 +137,7 @@ impl CallLocations {\n \n #[cfg(test)]\n mod tests {\n-    use base_db::FilePosition;\n+    use ide_db::base_db::FilePosition;\n \n     use crate::fixture;\n "}, {"sha": "d0ee58858943d903b390c1981c103125982a04db", "filename": "crates/ide/src/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -9,11 +9,11 @@ mod field_shorthand;\n \n use std::cell::RefCell;\n \n-use base_db::SourceDatabase;\n use hir::{\n     diagnostics::{Diagnostic as _, DiagnosticSinkBuilder},\n     Semantics,\n };\n+use ide_db::base_db::SourceDatabase;\n use ide_db::RootDatabase;\n use itertools::Itertools;\n use rustc_hash::FxHashSet;"}, {"sha": "f41bcd61919f0d2ad600e5fc758bd9f219beb3f7", "filename": "crates/ide/src/diagnostics/field_shorthand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffield_shorthand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffield_shorthand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffield_shorthand.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n //! Suggests shortening `Foo { field: field }` to `Foo { field }` in both\n //! expressions and patterns.\n \n-use base_db::FileId;\n+use ide_db::base_db::FileId;\n use ide_db::source_change::SourceFileEdit;\n use syntax::{ast, match_ast, AstNode, SyntaxNode};\n use text_edit::TextEdit;"}, {"sha": "0c950003e14f8a3b584ec41028fbbf616cbf888a", "filename": "crates/ide/src/diagnostics/fixes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdiagnostics%2Ffixes.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,6 +1,5 @@\n //! Provides a way to attach fixes to the diagnostics.\n //! The same module also has all curret custom fixes for the diagnostics implemented.\n-use base_db::FileId;\n use hir::{\n     db::AstDatabase,\n     diagnostics::{\n@@ -9,6 +8,7 @@ use hir::{\n     },\n     HasSource, HirDisplay, Semantics, VariantDef,\n };\n+use ide_db::base_db::FileId;\n use ide_db::{\n     source_change::{FileSystemEdit, SourceFileEdit},\n     RootDatabase,"}, {"sha": "0c429a2629a00ee0a80005c4d5034462b8a73384", "filename": "crates/ide/src/display/navigation_target.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,8 +1,8 @@\n //! FIXME: write short doc here\n \n-use base_db::{FileId, SourceDatabase};\n use either::Either;\n use hir::{original_range, AssocItem, FieldSource, HasSource, InFile, ModuleSource};\n+use ide_db::base_db::{FileId, SourceDatabase};\n use ide_db::{defs::Definition, RootDatabase};\n use syntax::{\n     ast::{self, DocCommentsOwner, NameOwner},"}, {"sha": "eb57f9224d5f51191f7da110b0ce7f88d53a4bff", "filename": "crates/ide/src/fixture.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ffixture.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,5 +1,5 @@\n //! Utilities for creating `Analysis` instances for tests.\n-use base_db::fixture::ChangeFixture;\n+use ide_db::base_db::fixture::ChangeFixture;\n use test_utils::{extract_annotations, RangeOrOffset};\n \n use crate::{Analysis, AnalysisHost, FileId, FilePosition, FileRange};"}, {"sha": "15792f94725ccc9edc8055b6fc11e74fff366990", "filename": "crates/ide/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_definition.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -100,7 +100,7 @@ pub(crate) fn reference_definition(\n \n #[cfg(test)]\n mod tests {\n-    use base_db::FileRange;\n+    use ide_db::base_db::FileRange;\n     use syntax::{TextRange, TextSize};\n \n     use crate::fixture;"}, {"sha": "529004878d3241ba959c37e82f68aa89b0fe071b", "filename": "crates/ide/src/goto_implementation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_implementation.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -74,7 +74,7 @@ fn impls_for_trait(\n \n #[cfg(test)]\n mod tests {\n-    use base_db::FileRange;\n+    use ide_db::base_db::FileRange;\n \n     use crate::fixture;\n "}, {"sha": "aba6bf5dc2620cdd1fa47ab9e505e7787e94397d", "filename": "crates/ide/src/goto_type_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_type_definition.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -54,7 +54,7 @@ fn pick_best(tokens: TokenAtOffset<SyntaxToken>) -> Option<SyntaxToken> {\n \n #[cfg(test)]\n mod tests {\n-    use base_db::FileRange;\n+    use ide_db::base_db::FileRange;\n \n     use crate::fixture;\n "}, {"sha": "94d895c5e7dda38f38b26f7d71fdcceaebb9a6d6", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,8 +1,8 @@\n-use base_db::SourceDatabase;\n use hir::{\n     Adt, AsAssocItem, AssocItemContainer, Documentation, FieldSource, HasSource, HirDisplay,\n     Module, ModuleDef, ModuleSource, Semantics,\n };\n+use ide_db::base_db::SourceDatabase;\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,\n@@ -385,8 +385,8 @@ fn pick_best(tokens: TokenAtOffset<SyntaxToken>) -> Option<SyntaxToken> {\n \n #[cfg(test)]\n mod tests {\n-    use base_db::FileLoader;\n     use expect_test::{expect, Expect};\n+    use ide_db::base_db::FileLoader;\n \n     use crate::fixture;\n "}, {"sha": "4bc733b70e94b68663e01b2cc14be0a457815a21", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -48,11 +48,11 @@ mod doc_links;\n \n use std::sync::Arc;\n \n-use base_db::{\n+use cfg::CfgOptions;\n+use ide_db::base_db::{\n     salsa::{self, ParallelDatabase},\n     CheckCanceled, Env, FileLoader, FileSet, SourceDatabase, VfsPath,\n };\n-use cfg::CfgOptions;\n use ide_db::{\n     symbol_index::{self, FileSymbol},\n     LineIndexDatabase,\n@@ -88,11 +88,11 @@ pub use ide_db::call_info::CallInfo;\n pub use assists::{\n     utils::MergeBehaviour, Assist, AssistConfig, AssistId, AssistKind, ResolvedAssist,\n };\n-pub use base_db::{\n+pub use hir::{Documentation, Semantics};\n+pub use ide_db::base_db::{\n     Canceled, Change, CrateGraph, CrateId, Edition, FileId, FilePosition, FileRange, SourceRoot,\n     SourceRootId,\n };\n-pub use hir::{Documentation, Semantics};\n pub use ide_db::{\n     label::Label,\n     line_index::{LineCol, LineIndex},"}, {"sha": "6cc3b2991cdedc70d573e0e8327d8d270ed4e4c1", "filename": "crates/ide/src/parent_module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fparent_module.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,5 +1,5 @@\n-use base_db::{CrateId, FileId, FilePosition};\n use hir::Semantics;\n+use ide_db::base_db::{CrateId, FileId, FilePosition};\n use ide_db::RootDatabase;\n use syntax::{\n     algo::find_node_at_offset,"}, {"sha": "ea0acfaa0204e620ac339ce6ec60bbaf77b125a5", "filename": "crates/ide/src/prime_caches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fprime_caches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fprime_caches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fprime_caches.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -3,8 +3,8 @@\n //! request takes longer to compute. This modules implemented prepopulating of\n //! various caches, it's not really advanced at the moment.\n \n-use base_db::SourceDatabase;\n use hir::db::DefDatabase;\n+use ide_db::base_db::SourceDatabase;\n \n use crate::RootDatabase;\n "}, {"sha": "a517081d520323896a9ee18dbecbdf8476274890", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -191,8 +191,8 @@ fn get_struct_def_name_for_struct_literal_search(\n \n #[cfg(test)]\n mod tests {\n-    use base_db::FileId;\n     use expect_test::{expect, Expect};\n+    use ide_db::base_db::FileId;\n     use stdx::format_to;\n \n     use crate::{fixture, SearchScope};"}, {"sha": "26ac2371a5270ed4c86dfc2d3480acf8cd35eb30", "filename": "crates/ide/src/references/rename.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences%2Frename.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n //! FIXME: write short doc here\n \n-use base_db::SourceDatabaseExt;\n use hir::{Module, ModuleDef, ModuleSource, Semantics};\n+use ide_db::base_db::SourceDatabaseExt;\n use ide_db::{\n     defs::{Definition, NameClass, NameRefClass},\n     RootDatabase,"}, {"sha": "8e91c99d72b38f4a6eed3aa6c3a4a52e67233623", "filename": "crates/ide/src/status.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatus.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,10 +1,10 @@\n use std::{fmt, iter::FromIterator, sync::Arc};\n \n-use base_db::{\n+use hir::MacroFile;\n+use ide_db::base_db::{\n     salsa::debug::{DebugQueryTable, TableEntry},\n     CrateId, FileId, FileTextQuery, SourceDatabase, SourceRootId,\n };\n-use hir::MacroFile;\n use ide_db::{\n     symbol_index::{LibrarySymbolsQuery, SymbolIndex},\n     RootDatabase,\n@@ -16,7 +16,7 @@ use stdx::format_to;\n use syntax::{ast, Parse, SyntaxNode};\n \n fn syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n-    base_db::ParseQuery.in_db(db).entries::<SyntaxTreeStats>()\n+    ide_db::base_db::ParseQuery.in_db(db).entries::<SyntaxTreeStats>()\n }\n fn macro_syntax_tree_stats(db: &RootDatabase) -> SyntaxTreeStats {\n     hir::db::ParseMacroQuery.in_db(db).entries::<SyntaxTreeStats>()"}, {"sha": "abcc5cccc7577ed085db01d987598ba4e480bb37", "filename": "crates/ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,6 +1,6 @@\n //! Renders a bit of code as HTML.\n \n-use base_db::SourceDatabase;\n+use ide_db::base_db::SourceDatabase;\n use oorandom::Rand32;\n use stdx::format_to;\n use syntax::{AstNode, TextRange, TextSize};"}, {"sha": "7941610d6b04e9558af6f4e05f37eb0a629fd46e", "filename": "crates/ide/src/syntax_tree.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_tree.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,4 +1,4 @@\n-use base_db::{FileId, SourceDatabase};\n+use ide_db::base_db::{FileId, SourceDatabase};\n use ide_db::RootDatabase;\n use syntax::{\n     algo, AstNode, NodeOrToken, SourceFile,"}, {"sha": "43458a3a2c10e9f9776ceeb193e70e025ff0b3c0", "filename": "crates/ide/src/typing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -15,7 +15,7 @@\n \n mod on_enter;\n \n-use base_db::{FilePosition, SourceDatabase};\n+use ide_db::base_db::{FilePosition, SourceDatabase};\n use ide_db::{source_change::SourceFileEdit, RootDatabase};\n use syntax::{\n     algo::find_node_at_offset,"}, {"sha": "f4ea30352620fe6294b5c4df3de95c09827af80c", "filename": "crates/ide/src/typing/on_enter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,7 +1,7 @@\n //! Handles the `Enter` key press. At the momently, this only continues\n //! comments, but should handle indent some time in the future as well.\n \n-use base_db::{FilePosition, SourceDatabase};\n+use ide_db::base_db::{FilePosition, SourceDatabase};\n use ide_db::RootDatabase;\n use syntax::{\n     ast::{self, AstToken},"}, {"sha": "38ebdbf7917d2abc16cf78bf9abef75b911d7325", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -26,6 +26,9 @@ use rustc_hash::FxHashSet;\n \n use crate::{line_index::LineIndex, symbol_index::SymbolsDatabase};\n \n+/// `base_db` is normally also needed in places where `ide_db` is used, so this re-export is for convenience.\n+pub use base_db;\n+\n #[salsa::database(\n     base_db::SourceDatabaseStorage,\n     base_db::SourceDatabaseExtStorage,"}, {"sha": "f8f97b1d375b8faf7461e1d4911782a3963b3453", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -46,7 +46,6 @@ cfg = { path = \"../cfg\", version = \"0.0.0\" }\n toolchain = { path = \"../toolchain\", version = \"0.0.0\" }\n \n # This should only be used in CLI\n-base_db = { path = \"../base_db\", version = \"0.0.0\" }\n ide_db = { path = \"../ide_db\", version = \"0.0.0\" }\n ssr = { path = \"../ssr\", version = \"0.0.0\" }\n hir = { path = \"../hir\", version = \"0.0.0\" }"}, {"sha": "8e33986d52f9fe14da4700802459409857ae05d1", "filename": "crates/rust-analyzer/src/cli/analysis_bench.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -3,13 +3,13 @@\n use std::{env, path::PathBuf, str::FromStr, sync::Arc, time::Instant};\n \n use anyhow::{bail, format_err, Result};\n-use base_db::{\n-    salsa::{Database, Durability},\n-    FileId,\n-};\n use ide::{\n     Analysis, AnalysisHost, Change, CompletionConfig, DiagnosticsConfig, FilePosition, LineCol,\n };\n+use ide_db::base_db::{\n+    salsa::{Database, Durability},\n+    FileId,\n+};\n use vfs::AbsPathBuf;\n \n use crate::{"}, {"sha": "98ef0cd68aa8a33f7980ab7a5c3546fd8cb62f2d", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -6,16 +6,16 @@ use std::{\n     time::{SystemTime, UNIX_EPOCH},\n };\n \n-use base_db::{\n-    salsa::{self, ParallelDatabase},\n-    SourceDatabaseExt,\n-};\n use hir::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n     original_range, AssocItem, Crate, HasSource, HirDisplay, ModuleDef,\n };\n use hir_def::FunctionId;\n use hir_ty::{Ty, TypeWalk};\n+use ide_db::base_db::{\n+    salsa::{self, ParallelDatabase},\n+    SourceDatabaseExt,\n+};\n use itertools::Itertools;\n use oorandom::Rand32;\n use rayon::prelude::*;"}, {"sha": "368f627ac4f4f3eeb53e0fe92d26ef10ce365fa9", "filename": "crates/rust-analyzer/src/cli/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fdiagnostics.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -6,9 +6,9 @@ use std::path::Path;\n use anyhow::anyhow;\n use rustc_hash::FxHashSet;\n \n-use base_db::SourceDatabaseExt;\n use hir::Crate;\n use ide::{DiagnosticsConfig, Severity};\n+use ide_db::base_db::SourceDatabaseExt;\n \n use crate::cli::{load_cargo::load_cargo, Result};\n "}, {"sha": "ab1e2ab92d060cb3bf1175566098a1707a4274c0", "filename": "crates/rust-analyzer/src/cli/load_cargo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fload_cargo.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -3,9 +3,9 @@\n use std::{path::Path, sync::Arc};\n \n use anyhow::Result;\n-use base_db::CrateGraph;\n use crossbeam_channel::{unbounded, Receiver};\n use ide::{AnalysisHost, Change};\n+use ide_db::base_db::CrateGraph;\n use project_model::{CargoConfig, ProcMacroClient, ProjectManifest, ProjectWorkspace};\n use vfs::{loader::Handle, AbsPath, AbsPathBuf};\n "}, {"sha": "a06631dacabe8c107b56dab0b657d790af760492", "filename": "crates/rust-analyzer/src/cli/ssr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fssr.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -4,7 +4,7 @@ use crate::cli::{load_cargo::load_cargo, Result};\n use ssr::{MatchFinder, SsrPattern, SsrRule};\n \n pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n-    use base_db::SourceDatabaseExt;\n+    use ide_db::base_db::SourceDatabaseExt;\n     let (host, vfs) = load_cargo(&std::env::current_dir()?, true, true)?;\n     let db = host.raw_database();\n     let mut match_finder = MatchFinder::at_first_file(db)?;\n@@ -26,7 +26,7 @@ pub fn apply_ssr_rules(rules: Vec<SsrRule>) -> Result<()> {\n /// `debug_snippet`. This is intended for debugging and probably isn't in it's current form useful\n /// for much else.\n pub fn search_for_patterns(patterns: Vec<SsrPattern>, debug_snippet: Option<String>) -> Result<()> {\n-    use base_db::SourceDatabaseExt;\n+    use ide_db::base_db::SourceDatabaseExt;\n     use ide_db::symbol_index::SymbolsDatabase;\n     let (host, _vfs) = load_cargo(&std::env::current_dir()?, true, true)?;\n     let db = host.raw_database();"}, {"sha": "aa6b808d6ecfb94a7b8dd12ed21efdbdfd976351", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,8 +1,8 @@\n //! Conversion lsp_types types to rust-analyzer specific ones.\n use std::convert::TryFrom;\n \n-use base_db::{FileId, FilePosition, FileRange};\n use ide::{AssistKind, LineCol, LineIndex};\n+use ide_db::base_db::{FileId, FilePosition, FileRange};\n use syntax::{TextRange, TextSize};\n use vfs::AbsPathBuf;\n "}, {"sha": "673a2eebc98f86aa61b414dbd01060dae419ba97", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -5,10 +5,10 @@\n \n use std::{sync::Arc, time::Instant};\n \n-use base_db::{CrateId, VfsPath};\n use crossbeam_channel::{unbounded, Receiver, Sender};\n use flycheck::FlycheckHandle;\n use ide::{Analysis, AnalysisHost, Change, FileId};\n+use ide_db::base_db::{CrateId, VfsPath};\n use lsp_types::{SemanticTokens, Url};\n use parking_lot::{Mutex, RwLock};\n use project_model::{CargoWorkspace, ProcMacroClient, ProjectWorkspace, Target};"}, {"sha": "1d271a9d8b11405212094e4274f8b1df6968eff9", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,8 +1,8 @@\n //! Utilities for LSP-related boilerplate code.\n use std::{error::Error, ops::Range};\n \n-use base_db::Canceled;\n use ide::LineIndex;\n+use ide_db::base_db::Canceled;\n use lsp_server::Notification;\n \n use crate::{from_proto, global_state::GlobalState};"}, {"sha": "ed52927330439d5133d6168ad42464737b932dd0", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -5,10 +5,10 @@ use std::{\n     time::{Duration, Instant},\n };\n \n-use base_db::VfsPath;\n use crossbeam_channel::{select, Receiver};\n use ide::PrimeCachesProgress;\n use ide::{Canceled, FileId};\n+use ide_db::base_db::VfsPath;\n use lsp_server::{Connection, Notification, Request, Response};\n use lsp_types::notification::Notification as _;\n use project_model::ProjectWorkspace;"}, {"sha": "0eabd51bdbb2b5c73529eae027df7155851afd6a", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,9 +1,9 @@\n //! Project loading & configuration updates\n use std::{mem, sync::Arc};\n \n-use base_db::{CrateGraph, SourceRoot, VfsPath};\n use flycheck::{FlycheckConfig, FlycheckHandle};\n use ide::Change;\n+use ide_db::base_db::{CrateGraph, SourceRoot, VfsPath};\n use project_model::{ProcMacroClient, ProjectWorkspace};\n use vfs::{file_set::FileSetConfig, AbsPath, AbsPathBuf, ChangeKind};\n "}, {"sha": "24a658fc653d14d6f041b4d73fb9974be3748c9c", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -4,13 +4,13 @@ use std::{\n     sync::atomic::{AtomicU32, Ordering},\n };\n \n-use base_db::{FileId, FileRange};\n use ide::{\n     Assist, AssistKind, CallInfo, CompletionItem, CompletionItemKind, Documentation,\n     FileSystemEdit, Fold, FoldKind, Highlight, HighlightModifier, HighlightTag, HighlightedRange,\n     Indel, InlayHint, InlayKind, InsertTextFormat, LineIndex, Markup, NavigationTarget,\n     ReferenceAccess, ResolvedAssist, Runnable, Severity, SourceChange, SourceFileEdit, TextEdit,\n };\n+use ide_db::base_db::{FileId, FileRange};\n use itertools::Itertools;\n use syntax::{SyntaxKind, TextRange, TextSize};\n \n@@ -809,7 +809,7 @@ mod tests {\n         let completions: Vec<(String, Option<String>)> = analysis\n             .completions(\n                 &ide::CompletionConfig::default(),\n-                base_db::FilePosition { file_id, offset },\n+                ide_db::base_db::FilePosition { file_id, offset },\n             )\n             .unwrap()\n             .unwrap()"}, {"sha": "98ed25fb699f4272a127116e251fa6f565c976e4", "filename": "crates/ssr/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2FCargo.toml?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -16,7 +16,6 @@ itertools = \"0.9.0\"\n \n text_edit = { path = \"../text_edit\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }\n-base_db = { path = \"../base_db\", version = \"0.0.0\" }\n ide_db = { path = \"../ide_db\", version = \"0.0.0\" }\n hir = { path = \"../hir\", version = \"0.0.0\" }\n test_utils = { path = \"../test_utils\", version = \"0.0.0\" }"}, {"sha": "747ce495d495632309faabf54b438c0994fb9c87", "filename": "crates/ssr/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Flib.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -73,8 +73,8 @@ use crate::errors::bail;\n pub use crate::errors::SsrError;\n pub use crate::matching::Match;\n use crate::matching::MatchFailureReason;\n-use base_db::{FileId, FilePosition, FileRange};\n use hir::Semantics;\n+use ide_db::base_db::{FileId, FilePosition, FileRange};\n use ide_db::source_change::SourceFileEdit;\n use resolving::ResolvedRule;\n use rustc_hash::FxHashMap;\n@@ -126,7 +126,7 @@ impl<'db> MatchFinder<'db> {\n \n     /// Constructs an instance using the start of the first file in `db` as the lookup context.\n     pub fn at_first_file(db: &'db ide_db::RootDatabase) -> Result<MatchFinder<'db>, SsrError> {\n-        use base_db::SourceDatabaseExt;\n+        use ide_db::base_db::SourceDatabaseExt;\n         use ide_db::symbol_index::SymbolsDatabase;\n         if let Some(first_file_id) = db\n             .local_roots()\n@@ -160,7 +160,7 @@ impl<'db> MatchFinder<'db> {\n \n     /// Finds matches for all added rules and returns edits for all found matches.\n     pub fn edits(&self) -> Vec<SourceFileEdit> {\n-        use base_db::SourceDatabaseExt;\n+        use ide_db::base_db::SourceDatabaseExt;\n         let mut matches_by_file = FxHashMap::default();\n         for m in self.matches().matches {\n             matches_by_file\n@@ -205,7 +205,7 @@ impl<'db> MatchFinder<'db> {\n     /// them, while recording reasons why they don't match. This API is useful for command\n     /// line-based debugging where providing a range is difficult.\n     pub fn debug_where_text_equal(&self, file_id: FileId, snippet: &str) -> Vec<MatchDebugInfo> {\n-        use base_db::SourceDatabaseExt;\n+        use ide_db::base_db::SourceDatabaseExt;\n         let file = self.sema.parse(file_id);\n         let mut res = Vec::new();\n         let file_text = self.sema.db.file_text(file_id);"}, {"sha": "99b187311a793936d1df3b1e9d08f2d05052de27", "filename": "crates/ssr/src/matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fmatching.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -6,8 +6,8 @@ use crate::{\n     resolving::{ResolvedPattern, ResolvedRule, UfcsCallInfo},\n     SsrMatches,\n };\n-use base_db::FileRange;\n use hir::Semantics;\n+use ide_db::base_db::FileRange;\n use rustc_hash::FxHashMap;\n use std::{cell::Cell, iter::Peekable};\n use syntax::ast::{AstNode, AstToken};"}, {"sha": "f5ceb572928c51b77f87a4457d04a0cd1c5c8fcb", "filename": "crates/ssr/src/resolving.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Fresolving.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Fresolving.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fresolving.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -2,7 +2,7 @@\n \n use crate::errors::error;\n use crate::{parsing, SsrError};\n-use base_db::FilePosition;\n+use ide_db::base_db::FilePosition;\n use parsing::Placeholder;\n use rustc_hash::FxHashMap;\n use syntax::{ast, SmolStr, SyntaxKind, SyntaxNode, SyntaxToken};"}, {"sha": "44b5db029dcba84ccfa37adff562b527bf6be558", "filename": "crates/ssr/src/search.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Fsearch.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -5,7 +5,7 @@ use crate::{\n     resolving::{ResolvedPath, ResolvedPattern, ResolvedRule},\n     Match, MatchFinder,\n };\n-use base_db::{FileId, FileRange};\n+use ide_db::base_db::{FileId, FileRange};\n use ide_db::{\n     defs::Definition,\n     search::{Reference, SearchScope},\n@@ -145,7 +145,7 @@ impl<'db> MatchFinder<'db> {\n     fn search_files_do(&self, mut callback: impl FnMut(FileId)) {\n         if self.restrict_ranges.is_empty() {\n             // Unrestricted search.\n-            use base_db::SourceDatabaseExt;\n+            use ide_db::base_db::SourceDatabaseExt;\n             use ide_db::symbol_index::SymbolsDatabase;\n             for &root in self.sema.db.local_roots().iter() {\n                 let sr = self.sema.db.source_root(root);"}, {"sha": "63131f6ca5a088a2c618139a90c6be34cd84474c", "filename": "crates/ssr/src/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19cce08662222f012a0f50ff73afd4fdd34ca683/crates%2Fssr%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fssr%2Fsrc%2Ftests.rs?ref=19cce08662222f012a0f50ff73afd4fdd34ca683", "patch": "@@ -1,6 +1,6 @@\n use crate::{MatchFinder, SsrRule};\n-use base_db::{salsa::Durability, FileId, FilePosition, FileRange, SourceDatabaseExt};\n use expect_test::{expect, Expect};\n+use ide_db::base_db::{salsa::Durability, FileId, FilePosition, FileRange, SourceDatabaseExt};\n use rustc_hash::FxHashSet;\n use std::sync::Arc;\n use test_utils::{mark, RangeOrOffset};\n@@ -62,7 +62,7 @@ fn parser_undefined_placeholder_in_replacement() {\n /// `code` may optionally contain a cursor marker `<|>`. If it doesn't, then the position will be\n /// the start of the file. If there's a second cursor marker, then we'll return a single range.\n pub(crate) fn single_file(code: &str) -> (ide_db::RootDatabase, FilePosition, Vec<FileRange>) {\n-    use base_db::fixture::WithFixture;\n+    use ide_db::base_db::fixture::WithFixture;\n     use ide_db::symbol_index::SymbolsDatabase;\n     let (mut db, file_id, range_or_offset) = if code.contains(test_utils::CURSOR_MARKER) {\n         ide_db::RootDatabase::with_range_or_offset(code)\n@@ -83,7 +83,7 @@ pub(crate) fn single_file(code: &str) -> (ide_db::RootDatabase, FilePosition, Ve\n         }\n     }\n     let mut local_roots = FxHashSet::default();\n-    local_roots.insert(base_db::fixture::WORKSPACE);\n+    local_roots.insert(ide_db::base_db::fixture::WORKSPACE);\n     db.set_local_roots_with_durability(Arc::new(local_roots), Durability::HIGH);\n     (db, position, selections)\n }"}]}