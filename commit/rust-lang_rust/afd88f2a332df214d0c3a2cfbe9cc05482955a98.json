{"sha": "afd88f2a332df214d0c3a2cfbe9cc05482955a98", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZDg4ZjJhMzMyZGYyMTRkMGMzYTJjZmJlOWNjMDU0ODI5NTVhOTg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2020-05-05T21:25:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2020-05-26T14:38:43Z"}, "message": "Export ZERO_AR_DATE for macos linker invocations\n\nThis commit attempts to improve reproducibility of builds on macOS by\nexporting the `ZERO_AR_DATE=1` environment variable for all invocations\nof the linker. While it looks like this env var is targeted at just the\n`ar` command (which does actually read this) it appears that recent-ish\nversions of the linker *also* read this environment variable. This\nenv var forces the linker to set a deterministic zero value for the\nmtime in the N_OSO field of the object file.\n\nCurrently it's believe that older versions of the linker will simply\nignore this env var, while newer versions will read it and produce a\ndeterministic output for compilations with debuginfo.\n\nCloses #47086\nCloses #66568", "tree": {"sha": "1a45cba5c67b34f4fe879e667adf993a9ed7bdbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a45cba5c67b34f4fe879e667adf993a9ed7bdbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afd88f2a332df214d0c3a2cfbe9cc05482955a98", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afd88f2a332df214d0c3a2cfbe9cc05482955a98", "html_url": "https://github.com/rust-lang/rust/commit/afd88f2a332df214d0c3a2cfbe9cc05482955a98", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afd88f2a332df214d0c3a2cfbe9cc05482955a98/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb272d5d21c94f9a460d68d76817227a5913fbf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb272d5d21c94f9a460d68d76817227a5913fbf7", "html_url": "https://github.com/rust-lang/rust/commit/cb272d5d21c94f9a460d68d76817227a5913fbf7"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "bdd5a893d34e2c19c1a300b986010ceb32fd2736", "filename": "src/librustc_target/spec/apple_base.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afd88f2a332df214d0c3a2cfbe9cc05482955a98/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afd88f2a332df214d0c3a2cfbe9cc05482955a98/src%2Flibrustc_target%2Fspec%2Fapple_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fapple_base.rs?ref=afd88f2a332df214d0c3a2cfbe9cc05482955a98", "patch": "@@ -31,6 +31,17 @@ pub fn opts() -> TargetOptions {\n         has_elf_tls: version >= (10, 7),\n         abi_return_struct_as_int: true,\n         emit_debug_gdb_scripts: false,\n+\n+        // This environment variable is pretty magical but is intended for\n+        // producing deterministic builds. This was first discovered to be used\n+        // by the `ar` tool as a way to control whether or not mtime entries in\n+        // the archive headers were set to zero or not. It appears that\n+        // eventually the linker got updated to do the same thing and now reads\n+        // this environment variable too in recent versions.\n+        //\n+        // For some more info see the commentary on #47086\n+        link_env: vec![(\"ZERO_AR_DATE\".to_string(), \"1\".to_string())],\n+\n         ..Default::default()\n     }\n }"}, {"sha": "fd94516fbbaf6c72d8a095688aa65061016018ec", "filename": "src/test/run-make-fulldeps/reproducible-build-2/Makefile", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/afd88f2a332df214d0c3a2cfbe9cc05482955a98/src%2Ftest%2Frun-make-fulldeps%2Freproducible-build-2%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/afd88f2a332df214d0c3a2cfbe9cc05482955a98/src%2Ftest%2Frun-make-fulldeps%2Freproducible-build-2%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Freproducible-build-2%2FMakefile?ref=afd88f2a332df214d0c3a2cfbe9cc05482955a98", "patch": "@@ -2,7 +2,6 @@\n \n # ignore-musl\n # ignore-windows\n-# ignore-macos (rust-lang/rust#66568)\n # Objects are reproducible but their path is not.\n \n all:  \\\n@@ -21,7 +20,7 @@ sysroot:\n \trm -rf $(TMPDIR) && mkdir $(TMPDIR)\n \t$(RUSTC) reproducible-build-aux.rs\n \t$(RUSTC) reproducible-build.rs --crate-type rlib --sysroot $(shell $(RUSTC) --print sysroot) --remap-path-prefix=$(shell $(RUSTC) --print sysroot)=/sysroot\n-\tcp -r $(shell $(RUSTC) --print sysroot) $(TMPDIR)/sysroot\n+\tcp -R $(shell $(RUSTC) --print sysroot) $(TMPDIR)/sysroot\n \tcp $(TMPDIR)/libreproducible_build.rlib $(TMPDIR)/libfoo.rlib\n \t$(RUSTC) reproducible-build.rs --crate-type rlib --sysroot $(TMPDIR)/sysroot --remap-path-prefix=$(TMPDIR)/sysroot=/sysroot\n \tcmp \"$(TMPDIR)/libreproducible_build.rlib\" \"$(TMPDIR)/libfoo.rlib\" || exit 1"}]}