{"sha": "bc5c86543b1bf384555471415dee770888a1781d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNWM4NjU0M2IxYmYzODQ1NTU0NzE0MTVkZWU3NzA4ODhhMTc4MWQ=", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-03-25T19:06:48Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2021-03-25T19:06:48Z"}, "message": "Use more std::array::IntoIter", "tree": {"sha": "b4c30f7eacbe0dd03bebafc534c7a8bdbfee7aa6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4c30f7eacbe0dd03bebafc534c7a8bdbfee7aa6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc5c86543b1bf384555471415dee770888a1781d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc5c86543b1bf384555471415dee770888a1781d", "html_url": "https://github.com/rust-lang/rust/commit/bc5c86543b1bf384555471415dee770888a1781d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc5c86543b1bf384555471415dee770888a1781d/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9787bddac577a6aa24388fb91286474a7a8cf0bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9787bddac577a6aa24388fb91286474a7a8cf0bc", "html_url": "https://github.com/rust-lang/rust/commit/9787bddac577a6aa24388fb91286474a7a8cf0bc"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "8c60927e4fb26b64f88119aee496b579785a2336", "filename": "crates/syntax/src/ast/edit.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bc5c86543b1bf384555471415dee770888a1781d/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc5c86543b1bf384555471415dee770888a1781d/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs?ref=bc5c86543b1bf384555471415dee770888a1781d", "patch": "@@ -2,7 +2,7 @@\n //! immutable, all function here return a fresh copy of the tree, instead of\n //! doing an in-place modification.\n use std::{\n-    fmt, iter,\n+    array, fmt, iter,\n     ops::{self, RangeInclusive},\n };\n \n@@ -55,9 +55,8 @@ impl ast::Fn {\n \n         let anchor = self.name().expect(\"The function must have a name\").syntax().clone();\n \n-        let mut to_insert: ArrayVec<SyntaxElement, 1> = ArrayVec::new();\n-        to_insert.push(generic_args.syntax().clone().into());\n-        self.insert_children(InsertPosition::After(anchor.into()), to_insert)\n+        let to_insert = [generic_args.syntax().clone().into()];\n+        self.insert_children(InsertPosition::After(anchor.into()), array::IntoIter::new(to_insert))\n     }\n }\n "}]}