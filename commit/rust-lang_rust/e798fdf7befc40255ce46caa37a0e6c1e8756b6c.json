{"sha": "e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "node_id": "C_kwDOAAsO6NoAKGU3OThmZGY3YmVmYzQwMjU1Y2U0NmNhYTM3YTBlNmMxZTg3NTZiNmM", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2022-12-20T05:31:15Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2022-12-20T05:31:15Z"}, "message": "docs/test: add UI test and long-form error docs for `E0377`", "tree": {"sha": "5b2d54cd232fb9109c35078b00ea4f347a9e1546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b2d54cd232fb9109c35078b00ea4f347a9e1546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEINUdoc4Vb1yVx04IZ6vxb7Ds2HAFAmOhSL0ACgkQZ6vxb7Ds\n2HDLNg/+PV9MQhfKCptAKNa2tCJr94DKEbZ1EWiJWraCf/gof3MTN//WiBccwtlg\nk85NVEksq2p/+9enBxpKSCE7M1/4OkPWCXP7YKZWk5wB3Cr8HLCdb+hIgBO7KjIf\n7v7PyTHmlIwx0Y6DTvmQFbQuteQDH4qMybcJtva84Kvhp5HEm9FC5Mf11YGqg30h\nQ26+9hdLjjlIxaiAmFU1Bbl0tZacCPH3d5MB0Cxlv+okevskozY4lTEr2NyZlMDm\nUXgRuHSQpmBE12b2seeQGedymzE67j4M2HPAD8YX2+3jfszr0mUuzvFxF0/3xiYM\nHkTWlcVeIOSdLkIMLR7OiycYCQnu6SjJufxl54usCSBhzylSiEWn4B5jWvWQMXX9\nS+VWn/jvWG8fzdxPzWb1wleWXlY81Xbq5yYCPju8UVCpyTHDDLShujHzcLo71beV\n2xmW9KM25ObrZd1Dd+jZGT1VFc4y62jWXcjQ+mumxEEaNtifOqmEZCw+sOkU51fD\nDoit/fTUpdTLLJfVWbNUanQOhfigdJiSxrwiuiwl9g56uIG+qtR5V2mTkPvZxDhC\nkumwkzstnYt4YPIjqf9qvARJ7xSJyHKwOwro0suutpxqW/FpVsgff0I5L2Z4Vkz2\nBb8jCPFZSWvxUdzCLEjuCXO3wWvU4STUK3bYrwS3jdACe8yg9FQ=\n=yXmn\n-----END PGP SIGNATURE-----", "payload": "tree 5b2d54cd232fb9109c35078b00ea4f347a9e1546\nparent c43bc135628bc0d472e1a1259d56b72b7de0a274\nauthor Ezra Shaw <ezrasure@outlook.com> 1671514275 +1300\ncommitter Ezra Shaw <ezrasure@outlook.com> 1671514275 +1300\n\ndocs/test: add UI test and long-form error docs for `E0377`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "html_url": "https://github.com/rust-lang/rust/commit/e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c43bc135628bc0d472e1a1259d56b72b7de0a274", "url": "https://api.github.com/repos/rust-lang/rust/commits/c43bc135628bc0d472e1a1259d56b72b7de0a274", "html_url": "https://github.com/rust-lang/rust/commit/c43bc135628bc0d472e1a1259d56b72b7de0a274"}], "stats": {"total": 59, "additions": 55, "deletions": 4}, "files": [{"sha": "4e149fc2b9973c1aed2ba0c20a6051fa71203d74", "filename": "compiler/rustc_error_codes/src/error_codes.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes.rs?ref=e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "patch": "@@ -184,6 +184,7 @@ E0373: include_str!(\"./error_codes/E0373.md\"),\n E0374: include_str!(\"./error_codes/E0374.md\"),\n E0375: include_str!(\"./error_codes/E0375.md\"),\n E0376: include_str!(\"./error_codes/E0376.md\"),\n+E0377: include_str!(\"./error_codes/E0377.md\"),\n E0378: include_str!(\"./error_codes/E0378.md\"),\n E0379: include_str!(\"./error_codes/E0379.md\"),\n E0380: include_str!(\"./error_codes/E0380.md\"),\n@@ -579,8 +580,6 @@ E0791: include_str!(\"./error_codes/E0791.md\"),\n //  E0315, // cannot invoke closure outside of its lifetime\n //  E0319, // trait impls for defaulted traits allowed just for structs/enums\n //  E0372, // coherence not object safe\n-    E0377, // the trait `CoerceUnsized` may only be implemented for a coercion\n-           // between structures with the same definition\n //  E0385, // {} in an aliasable location\n //  E0402, // cannot use an outer type parameter in this context\n //  E0406, // merged into 420"}, {"sha": "b1d36406332bdb08bc071867da0d3791d72f2028", "filename": "compiler/rustc_error_codes/src/error_codes/E0377.md", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0377.md", "raw_url": "https://github.com/rust-lang/rust/raw/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0377.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_codes%2Fsrc%2Ferror_codes%2FE0377.md?ref=e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "patch": "@@ -0,0 +1,29 @@\n+The trait `CoerceUnsized` may only be implemented for a coercion between\n+structures with the same definition.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0377\n+#![feature(coerce_unsized)]\n+use std::ops::CoerceUnsized;\n+\n+pub struct Foo<T: ?Sized> {\n+    field_with_unsized_type: T,\n+}\n+\n+pub struct Bar<T: ?Sized> {\n+    field_with_unsized_type: T,\n+}\n+\n+// error: the trait `CoerceUnsized` may only be implemented for a coercion\n+//        between structures with the same definition\n+impl<T, U> CoerceUnsized<Bar<U>> for Foo<T> where T: CoerceUnsized<U> {}\n+```\n+\n+When attempting to implement `CoerceUnsized`, the `impl` signature must look\n+like: `impl CoerceUnsized<Type<U>> for Type<T> where T: CoerceUnsized<U>`;\n+the *implementer* and *`CoerceUnsized` type parameter* must be the same\n+type. In this example, `Bar` and `Foo` (even though structurally identical)\n+are *not* the same type and are rejected. Learn more about the `CoerceUnsized`\n+trait and DST coercion in\n+[the `CoerceUnsized` docs](../std/ops/trait.CoerceUnsized.html)."}, {"sha": "6da2c20956adb7c66d8df9e0add3706bed3d32cf", "filename": "src/test/ui/error-codes/E0377.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/src%2Ftest%2Fui%2Ferror-codes%2FE0377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/src%2Ftest%2Fui%2Ferror-codes%2FE0377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0377.rs?ref=e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "patch": "@@ -0,0 +1,14 @@\n+#![feature(coerce_unsized)]\n+use std::ops::CoerceUnsized;\n+\n+pub struct Foo<T: ?Sized> {\n+    field_with_unsized_type: T,\n+}\n+\n+pub struct Bar<T: ?Sized> {\n+    field_with_unsized_type: T,\n+}\n+\n+impl<T, U> CoerceUnsized<Bar<U>> for Foo<T> where T: CoerceUnsized<U> {} //~ ERROR E0377\n+\n+fn main() {}"}, {"sha": "bf7d8c8d39d2a09259ba6921f801e8010e556558", "filename": "src/test/ui/error-codes/E0377.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/src%2Ftest%2Fui%2Ferror-codes%2FE0377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/src%2Ftest%2Fui%2Ferror-codes%2FE0377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0377.stderr?ref=e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "patch": "@@ -0,0 +1,9 @@\n+error[E0377]: the trait `CoerceUnsized` may only be implemented for a coercion between structures with the same definition; expected `Foo`, found `Bar`\n+  --> $DIR/E0377.rs:12:1\n+   |\n+LL | impl<T, U> CoerceUnsized<Bar<U>> for Foo<T> where T: CoerceUnsized<U> {}\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0377`."}, {"sha": "1b119e4113e32bf9543255aae9810fd742b437da", "filename": "src/tools/tidy/src/error_codes_check.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e798fdf7befc40255ce46caa37a0e6c1e8756b6c/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ferror_codes_check.rs?ref=e798fdf7befc40255ce46caa37a0e6c1e8756b6c", "patch": "@@ -11,8 +11,8 @@ use regex::Regex;\n \n // A few of those error codes can't be tested but all the others can and *should* be tested!\n const EXEMPTED_FROM_TEST: &[&str] = &[\n-    \"E0313\", \"E0377\", \"E0461\", \"E0462\", \"E0465\", \"E0476\", \"E0490\", \"E0514\", \"E0519\", \"E0523\",\n-    \"E0554\", \"E0640\", \"E0717\", \"E0729\", \"E0789\",\n+    \"E0313\", \"E0461\", \"E0462\", \"E0465\", \"E0476\", \"E0490\", \"E0514\", \"E0519\", \"E0523\", \"E0554\",\n+    \"E0640\", \"E0717\", \"E0729\", \"E0789\",\n ];\n \n // Some error codes don't have any tests apparently..."}]}