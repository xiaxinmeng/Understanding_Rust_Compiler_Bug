{"sha": "ffdaf14dd90995273fd697b9b87018d5dba84379", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZGFmMTRkZDkwOTk1MjczZmQ2OTdiOWI4NzAxOGQ1ZGJhODQzNzk=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2012-04-26T21:30:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-23T05:29:15Z"}, "message": "initial stab at API for std::net::tcp", "tree": {"sha": "1889f26a5d17a187159837c73ed08d01c683c30e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1889f26a5d17a187159837c73ed08d01c683c30e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ffdaf14dd90995273fd697b9b87018d5dba84379", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ffdaf14dd90995273fd697b9b87018d5dba84379", "html_url": "https://github.com/rust-lang/rust/commit/ffdaf14dd90995273fd697b9b87018d5dba84379", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ffdaf14dd90995273fd697b9b87018d5dba84379/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27427a950aa22b966d28b3e0a3508e0d97f91252", "url": "https://api.github.com/repos/rust-lang/rust/commits/27427a950aa22b966d28b3e0a3508e0d97f91252", "html_url": "https://github.com/rust-lang/rust/commit/27427a950aa22b966d28b3e0a3508e0d97f91252"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "91ba225b7701235a699a4f0dc709248ffa0ece9e", "filename": "src/libstd/net_tcp.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/ffdaf14dd90995273fd697b9b87018d5dba84379/src%2Flibstd%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ffdaf14dd90995273fd697b9b87018d5dba84379/src%2Flibstd%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet_tcp.rs?ref=ffdaf14dd90995273fd697b9b87018d5dba84379", "patch": "@@ -0,0 +1,59 @@\n+#[doc=\"\n+High-level interface to libuv's TCP functionality\n+\"];\n+\n+#[cfg(ignore)]\n+mod test {\n+    #[test]\n+    fn test_gl_tcp_ipv4_request() {\n+        let ip = \"127.0.0.1\";\n+        let port = 80u;\n+        let expected_read_msg = \"foo\";\n+        let actual_write_msg = \"bar\";\n+        let addr = ipv4::address(ip, port);\n+\n+        let data_po = comm::port::<[u8]>();\n+        let data_ch = comm::chan(data_po);\n+        \n+        alt connect(addr) {\n+          tcp_connected(tcp_stream) {\n+            let write_data = str::as_buf(actual_write_msg);\n+            alt write(tcp_stream, [write_data]) {\n+              tcp_write_success {\n+                let mut total_read_data: [u8] = []\n+                let reader_po = read_start(tcp_stream);\n+                loop {\n+                    alt comm::recv(reader_po) {\n+                      new_read_data(data) {\n+                        total_read_data += data;\n+                        // theoretically, we could keep iterating, here, if\n+                        // we expect the server on the other end to keep\n+                        // streaming/chunking data to us, but..\n+                        read_stop(tcp_stream);\n+                        break;\n+                      }\n+                      done_reading {\n+                        break;\n+                      }\n+                      error {\n+                        fail \"erroring occured during read attempt.. FIXME need info\";\n+                      }\n+                    }\n+                }\n+                comm::send(data_ch, total_read_data);\n+              }\n+              tcp_write_error {\n+                fail \"error during write attempt.. FIXME need err info\";\n+              }\n+            }\n+          }\n+          tcp_connect_error {\n+            fail \"error during connection attempt.. FIXME need err info..\";\n+          }\n+        }\n+\n+        let actual_data = comm::recv(data_po);\n+        let resp = str::from_bytes(actual_data);\n+        log(debug, \"DATA RECEIVED: \"+resp);\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "99011c5d6494ffb77fe7bacb868e63008b489981", "filename": "src/libstd/std.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ffdaf14dd90995273fd697b9b87018d5dba84379/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/ffdaf14dd90995273fd697b9b87018d5dba84379/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=ffdaf14dd90995273fd697b9b87018d5dba84379", "patch": "@@ -23,6 +23,7 @@ export test, tempfile, serialization;\n // General io and system-services modules\n \n mod net;\n+mod net_tcp;\n \n // libuv modules\n mod uv;"}]}