{"sha": "75e4783f63fc7a788d8dff47504b29dcd63d97fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZTQ3ODNmNjNmYzdhNzg4ZDhkZmY0NzUwNGIyOWRjZDYzZDk3ZmU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-01T18:25:28Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-02T12:57:04Z"}, "message": "Normalize `syntax::source_map` imports.", "tree": {"sha": "ad3199f1bb8f8e6a1a7b68ff7d1994017f8ef914", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad3199f1bb8f8e6a1a7b68ff7d1994017f8ef914"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75e4783f63fc7a788d8dff47504b29dcd63d97fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75e4783f63fc7a788d8dff47504b29dcd63d97fe", "html_url": "https://github.com/rust-lang/rust/commit/75e4783f63fc7a788d8dff47504b29dcd63d97fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75e4783f63fc7a788d8dff47504b29dcd63d97fe/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "766fba3fdca8fe075c370a63d2f76f8407483af5", "url": "https://api.github.com/repos/rust-lang/rust/commits/766fba3fdca8fe075c370a63d2f76f8407483af5", "html_url": "https://github.com/rust-lang/rust/commit/766fba3fdca8fe075c370a63d2f76f8407483af5"}], "stats": {"total": 243, "additions": 117, "deletions": 126}, "files": [{"sha": "00026d6969bb5ba928fa09b95693e33d389c9a7a", "filename": "src/librustc/hir/map/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fcollector.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -11,10 +11,10 @@ use crate::session::Session;\n use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::Span;\n use std::iter::repeat;\n use syntax::ast::NodeId;\n-use syntax::source_map::SourceMap;\n \n use crate::ich::StableHashingContext;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};"}, {"sha": "9ea10d0c515917456fcb5380a2cac974b8640292", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -17,10 +17,10 @@ use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::svh::Svh;\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::Spanned;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, Name, NodeId};\n-use syntax::source_map::Spanned;\n \n pub mod blocks;\n mod collector;"}, {"sha": "10b8b5fe39047fb5258dac344d352ef0945104d2", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,11 +1,11 @@\n+use rustc_span::source_map::{SourceMap, Spanned};\n use rustc_span::{self, BytePos, FileName};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::print::pp::Breaks::{Consistent, Inconsistent};\n use syntax::print::pp::{self, Breaks};\n use syntax::print::pprust::{self, Comments, PrintState};\n use syntax::sess::ParseSess;\n-use syntax::source_map::{SourceMap, Spanned};\n use syntax::symbol::kw;\n use syntax::util::parser::{self, AssocOp, Fixity};\n "}, {"sha": "2c314e6935ffa18797b178c1945d62dfe07327e8", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -9,9 +9,9 @@ use crate::ty::{fast_reject, TyCtxt};\n \n use std::cmp::Ord;\n \n+use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, SourceFile};\n use syntax::ast;\n-use syntax::source_map::SourceMap;\n use syntax::symbol::Symbol;\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "a588d3d028a2cfe848a6a39b7f6572fde20510f1", "filename": "src/librustc/infer/canonical/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -30,9 +30,9 @@ use crate::ty::{self, BoundVar, List, Region, TyCtxt};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n use rustc_serialize::UseSpecializedDecodable;\n+use rustc_span::source_map::Span;\n use smallvec::SmallVec;\n use std::ops::Index;\n-use syntax::source_map::Span;\n \n mod canonicalizer;\n "}, {"sha": "41a492751e75480025be1bc122cbfc7eaedc8fbc", "filename": "src/librustc/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -6,9 +6,9 @@ use crate::infer::InferCtxt;\n use crate::ty::print::Print;\n use crate::ty::{self, DefIdTree, Infer, Ty, TyVar};\n use errors::{Applicability, DiagnosticBuilder};\n+use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n use std::borrow::Cow;\n-use syntax::source_map::DesugaringKind;\n use syntax::symbol::kw;\n \n use rustc_error_codes::*;"}, {"sha": "5da65a3019395f297455536c1b14335498a9d4be", "filename": "src/librustc/infer/error_reporting/nice_region_error/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnice_region_error%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -4,7 +4,7 @@ use crate::infer::InferCtxt;\n use crate::ty::{self, TyCtxt};\n use crate::util::common::ErrorReported;\n use errors::DiagnosticBuilder;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n mod different_lifetimes;\n mod find_anon_type;"}, {"sha": "bdc2b216449cd640db22cdcb5b928bfafe80832b", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -9,10 +9,10 @@ use crate::middle::stability;\n use crate::session::Session;\n use errors::{pluralize, Applicability, DiagnosticBuilder};\n use rustc_session::declare_lint;\n+use rustc_span::source_map::Span;\n use syntax::ast;\n use syntax::early_buffered_lints::{ILL_FORMED_ATTRIBUTE_INPUT, META_VARIABLE_MISUSE};\n use syntax::edition::Edition;\n-use syntax::source_map::Span;\n use syntax::symbol::Symbol;\n \n declare_lint! {"}, {"sha": "86e6bfb59791308800ffd4e480b9bf93c4c35fcf", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -9,11 +9,11 @@ use crate::session::Session;\n use crate::util::nodemap::FxHashMap;\n use errors::{Applicability, DiagnosticBuilder};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_span::source_map::MultiSpan;\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate;\n use syntax::print::pprust;\n-use syntax::source_map::MultiSpan;\n use syntax::symbol::{sym, Symbol};\n \n use rustc_error_codes::*;"}, {"sha": "0286a174c681bd1664694f1c6b02a84ff9b67adf", "filename": "src/librustc/lint/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Flint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Flint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -33,9 +33,9 @@ use crate::ty::TyCtxt;\n use crate::util::nodemap::NodeMap;\n use errors::{DiagnosticBuilder, DiagnosticId};\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n use rustc_span::Span;\n use syntax::ast;\n-use syntax::source_map::{DesugaringKind, ExpnKind, MultiSpan};\n use syntax::symbol::Symbol;\n \n pub use crate::lint::context::{"}, {"sha": "bf5cc58b118a0d75c95369ce72e0831b18fee8b5", "filename": "src/librustc/mir/mono.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fmir%2Fmono.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fmir%2Fmono.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmono.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -8,10 +8,10 @@ use crate::ty::{subst::InternalSubsts, Instance, InstanceDef, SymbolName, TyCtxt\n use crate::util::nodemap::FxHashMap;\n use rustc_data_structures::base_n;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n+use rustc_span::source_map::Span;\n use std::fmt;\n use std::hash::Hash;\n use syntax::attr::InlineAttr;\n-use syntax::source_map::Span;\n use syntax::symbol::Symbol;\n \n /// Describes how a monomorphization will be instantiated in object files."}, {"sha": "87f7f674dab100c0178d542b9a1dce12daef68d5", "filename": "src/librustc/traits/query/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Fdropck_outlives.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,8 +3,8 @@ use crate::infer::canonical::OriginalQueryValues;\n use crate::infer::InferOk;\n use crate::ty::subst::GenericArg;\n use crate::ty::{self, Ty, TyCtxt};\n+use rustc_span::source_map::Span;\n use std::iter::FromIterator;\n-use syntax::source_map::Span;\n \n use rustc_error_codes::*;\n "}, {"sha": "6a0bc167c078e38f73d1073d5be027c662d2cd32", "filename": "src/librustc/traits/query/outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Ftraits%2Fquery%2Foutlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Ftraits%2Fquery%2Foutlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Foutlives_bounds.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -4,7 +4,7 @@ use crate::infer::InferCtxt;\n use crate::traits::query::NoSolution;\n use crate::traits::{FulfillmentContext, ObligationCause, TraitEngine, TraitEngineExt};\n use crate::ty::{self, Ty};\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use crate::ich::StableHashingContext;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};"}, {"sha": "c1c9030b8880532b1213d512f8e0a4a408b3e4dc", "filename": "src/librustc/traits/query/type_op/custom.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -5,8 +5,8 @@ use std::fmt;\n use crate::infer::canonical::query_response;\n use crate::infer::canonical::QueryRegionConstraints;\n use crate::traits::{ObligationCause, TraitEngine, TraitEngineExt};\n+use rustc_span::source_map::DUMMY_SP;\n use std::rc::Rc;\n-use syntax::source_map::DUMMY_SP;\n \n pub struct CustomTypeOp<F, G> {\n     closure: F,"}, {"sha": "d1296bb1791e7f4f05ac1c5258fd278b0bff4cde", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -59,6 +59,7 @@ use rustc_data_structures::stable_hasher::{\n use rustc_data_structures::sync::{Lock, Lrc, WorkerLocal};\n use rustc_index::vec::{Idx, IndexVec};\n use rustc_macros::HashStable;\n+use rustc_span::source_map::MultiSpan;\n use rustc_span::Span;\n use rustc_target::spec::abi;\n use smallvec::SmallVec;\n@@ -75,7 +76,6 @@ use std::sync::Arc;\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n-use syntax::source_map::MultiSpan;\n use syntax::symbol::{kw, sym, Symbol};\n \n pub struct AllArenas {"}, {"sha": "c29c68d2148af38c2f0333314304e96eb2496383", "filename": "src/librustc/ty/query/on_disk_cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -21,10 +21,10 @@ use rustc_serialize::{\n     UseSpecializedDecodable, UseSpecializedEncodable,\n };\n use rustc_span::hygiene::{ExpnId, SyntaxContext};\n+use rustc_span::source_map::{SourceMap, StableSourceFileId};\n use rustc_span::{BytePos, SourceFile, Span, DUMMY_SP};\n use std::mem;\n use syntax::ast::{Ident, NodeId};\n-use syntax::source_map::{SourceMap, StableSourceFileId};\n \n const TAG_FILE_FOOTER: u128 = 0xC0FFEE_C0FFEE_C0FFEE_C0FFEE_C0FFEE;\n "}, {"sha": "e56955b0e44417ad31f59b5fd4bbf6426c9548f6", "filename": "src/librustc/ty/query/plumbing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fquery%2Fplumbing.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -20,12 +20,12 @@ use rustc_data_structures::fx::{FxHashMap, FxHasher};\n use rustc_data_structures::sharded::Sharded;\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_data_structures::thin_vec::ThinVec;\n+use rustc_span::source_map::DUMMY_SP;\n use rustc_span::Span;\n use std::collections::hash_map::Entry;\n use std::hash::{Hash, Hasher};\n use std::mem;\n use std::ptr;\n-use syntax::source_map::DUMMY_SP;\n \n use rustc_error_codes::*;\n "}, {"sha": "44b30118f5abe16612e3a786b8ea18631f2219bd", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -182,13 +182,13 @@ use std::iter;\n use std::vec;\n \n use rustc_expand::base::{Annotatable, ExtCtxt};\n+use rustc_span::source_map::respan;\n use rustc_span::Span;\n use syntax::ast::{self, BinOpKind, EnumDef, Expr, Generics, Ident, PatKind};\n use syntax::ast::{GenericArg, GenericParamKind, VariantData};\n use syntax::attr;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::respan;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::map_in_place::MapInPlace;\n "}, {"sha": "d2df64cac4869cdc82304d7c8ea3af4d5de0707e", "filename": "src/librustc_builtin_macros/deriving/generic/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -5,11 +5,11 @@ pub use PtrTy::*;\n pub use Ty::*;\n \n use rustc_expand::base::ExtCtxt;\n+use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::symbol::kw;\n use rustc_span::Span;\n use syntax::ast::{self, Expr, GenericArg, GenericParamKind, Generics, Ident, SelfKind};\n use syntax::ptr::P;\n-use syntax::source_map::{respan, DUMMY_SP};\n \n /// The types of pointers\n #[derive(Clone)]"}, {"sha": "2bcd76e669971f5b4369759b4de1f6ecb3cc0968", "filename": "src/librustc_builtin_macros/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -10,11 +10,11 @@\n use errors::DiagnosticBuilder;\n \n use rustc_expand::base::{self, *};\n+use rustc_span::source_map::respan;\n use rustc_span::Span;\n use smallvec::smallvec;\n use syntax::ast;\n use syntax::ptr::P;\n-use syntax::source_map::respan;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n "}, {"sha": "758f8516e0e8ffb78f46078c683febd28d01bb8e", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,11 +3,11 @@\n use crate::util::check_builtin_macro_attribute;\n \n use rustc_expand::base::*;\n+use rustc_span::source_map::respan;\n use rustc_span::Span;\n use syntax::ast;\n use syntax::attr;\n use syntax::print::pprust;\n-use syntax::source_map::respan;\n use syntax::symbol::{sym, Symbol};\n \n use std::iter;"}, {"sha": "fa3a4c2ad2d2960264f2a72f00fbeeedb9e90b90", "filename": "src/librustc_builtin_macros/test_harness.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest_harness.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -5,6 +5,7 @@ use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_feature::Features;\n use rustc_span::hygiene::{AstPass, SyntaxContext, Transparency};\n+use rustc_span::source_map::respan;\n use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::PanicStrategy;\n use smallvec::{smallvec, SmallVec};\n@@ -14,7 +15,6 @@ use syntax::entry::{self, EntryPointType};\n use syntax::mut_visit::{ExpectOne, *};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::respan;\n use syntax::symbol::{sym, Symbol};\n \n use std::{iter, mem};"}, {"sha": "cfaa0cfdca1ec50b5c0e573f5e3d1053e5d3f30d", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -27,12 +27,12 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc_target::spec::{HasTargetSpec, Target};\n \n use crate::abi::Abi;\n+use rustc_span::source_map::{Span, DUMMY_SP};\n use std::cell::{Cell, RefCell};\n use std::ffi::CStr;\n use std::iter;\n use std::str;\n use std::sync::Arc;\n-use syntax::source_map::{Span, DUMMY_SP};\n use syntax::symbol::Symbol;\n \n /// There is one `CodegenCx` per compilation unit. Each one has its own LLVM"}, {"sha": "a1d4c0c820bc6dd389c1c38015d3a4676d79de28", "filename": "src/librustc_codegen_ssa/mir/block.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fblock.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,27 +1,26 @@\n+use super::operand::OperandRef;\n+use super::operand::OperandValue::{Immediate, Pair, Ref};\n+use super::place::PlaceRef;\n+use super::{FunctionCx, LocalRef};\n+\n use crate::base;\n use crate::common::{self, IntPredicate};\n use crate::meth;\n+use crate::traits::*;\n use crate::MemFlags;\n+\n use rustc::middle::lang_items;\n use rustc::mir::interpret::PanicInfo;\n use rustc::mir::{self, PlaceBase, Static, StaticKind};\n use rustc::ty::layout::{self, FnAbiExt, HasTyCtxt, LayoutOf};\n use rustc::ty::{self, Instance, Ty, TypeFoldable};\n use rustc_index::vec::Idx;\n+use rustc_span::{source_map::Span, symbol::Symbol};\n use rustc_target::abi::call::{ArgAbi, FnAbi, PassMode};\n use rustc_target::spec::abi::Abi;\n \n-use crate::traits::*;\n-\n use std::borrow::Cow;\n \n-use syntax::{source_map::Span, symbol::Symbol};\n-\n-use super::operand::OperandRef;\n-use super::operand::OperandValue::{Immediate, Pair, Ref};\n-use super::place::PlaceRef;\n-use super::{FunctionCx, LocalRef};\n-\n /// Used by `FunctionCx::codegen_terminator` for emitting common patterns\n /// e.g., creating a basic block, calling a function, etc.\n struct TerminatorCodegenHelper<'tcx> {"}, {"sha": "f508ed90de42df1ad2bc216fb1ffd3a4529b5590", "filename": "src/librustc_codegen_ssa/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Fconstant.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -5,7 +5,7 @@ use rustc::mir::interpret::ErrorHandled;\n use rustc::ty::layout::{self, HasTyCtxt};\n use rustc::ty::{self, Ty};\n use rustc_index::vec::Idx;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use super::FunctionCx;\n "}, {"sha": "3637c72e1eb97fa72d4a7097b20ad8af3087f496", "filename": "src/librustc_codegen_ssa/mir/rvalue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fmir%2Frvalue.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -13,7 +13,7 @@ use rustc::ty::cast::{CastTy, IntTy};\n use rustc::ty::layout::{self, HasTyCtxt, LayoutOf};\n use rustc::ty::{self, adjustment::PointerCast, Instance, Ty, TyCtxt};\n use rustc_apfloat::{ieee, Float, Round, Status};\n-use syntax::source_map::{Span, DUMMY_SP};\n+use rustc_span::source_map::{Span, DUMMY_SP};\n use syntax::symbol::sym;\n \n use std::{i128, u128};"}, {"sha": "71dc1f356b1a238f57d985c24960bff01b4dde31", "filename": "src/librustc_expand/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbase.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,13 +1,13 @@\n use crate::expand::{self, AstFragment, Invocation};\n \n use rustc_parse::{self, parser, DirectoryOwnership, MACRO_ARGUMENTS};\n+use rustc_span::source_map::SourceMap;\n use syntax::ast::{self, Attribute, Name, NodeId, PatKind};\n use syntax::attr::{self, Deprecation, HasAttrs, Stability};\n use syntax::edition::Edition;\n use syntax::mut_visit::{self, MutVisitor};\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::SourceMap;\n use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::token;\n use syntax::tokenstream::{self, TokenStream};"}, {"sha": "2a01fd8a1ef2d54adc032eb34d567e4ecfa55113", "filename": "src/librustc_expand/build.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fbuild.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,9 +1,9 @@\n use crate::base::ExtCtxt;\n \n+use rustc_span::source_map::{respan, Spanned};\n use syntax::ast::{self, AttrVec, BlockCheckMode, Expr, Ident, PatKind, UnOp};\n use syntax::attr;\n use syntax::ptr::P;\n-use syntax::source_map::{respan, Spanned};\n use syntax::symbol::{kw, sym, Symbol};\n \n use rustc_span::{Pos, Span};"}, {"sha": "79834972102a51d78f8b8253ace1453d4fc35664", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -10,6 +10,8 @@ use rustc_parse::configure;\n use rustc_parse::parser::Parser;\n use rustc_parse::validate_attr;\n use rustc_parse::DirectoryOwnership;\n+use rustc_span::source_map::respan;\n+use rustc_span::{FileName, Span, DUMMY_SP};\n use syntax::ast::{self, AttrItem, Block, Ident, LitKind, NodeId, PatKind, Path};\n use syntax::ast::{ItemKind, MacArgs, MacStmtStyle, StmtKind};\n use syntax::attr::{self, is_builtin_attr, HasAttrs};\n@@ -18,15 +20,13 @@ use syntax::mut_visit::*;\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::respan;\n use syntax::symbol::{sym, Symbol};\n use syntax::token;\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::util::map_in_place::MapInPlace;\n use syntax::visit::{self, Visitor};\n \n use errors::{Applicability, FatalError, PResult};\n-use rustc_span::{FileName, Span, DUMMY_SP};\n use smallvec::{smallvec, SmallVec};\n \n use rustc_data_structures::sync::Lrc;"}, {"sha": "835f0b0108ead65a52d83799f7b8b268b5ae6feb", "filename": "src/librustc_expand/parse/lexer/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fparse%2Flexer%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fparse%2Flexer%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fparse%2Flexer%2Ftests.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,9 +1,9 @@\n use rustc_data_structures::sync::Lrc;\n use rustc_parse::lexer::StringReader;\n+use rustc_span::source_map::{FilePathMapping, SourceMap};\n use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, Span};\n use syntax::sess::ParseSess;\n-use syntax::source_map::{FilePathMapping, SourceMap};\n use syntax::token::{self, Token, TokenKind};\n use syntax::util::comments::is_doc_comment;\n use syntax::with_default_globals;"}, {"sha": "d98ccdeaebc58d5ae59251e24fc5c898349ab428", "filename": "src/librustc_expand/parse/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fparse%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fparse%2Ftests.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -2,12 +2,12 @@ use crate::tests::{matches_codepattern, string_to_stream, with_error_checking_pa\n \n use errors::PResult;\n use rustc_parse::new_parser_from_source_str;\n+use rustc_span::source_map::FilePathMapping;\n use rustc_span::{BytePos, FileName, Pos, Span};\n use syntax::ast::{self, Name, PatKind};\n use syntax::print::pprust::item_to_string;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n-use syntax::source_map::FilePathMapping;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Token};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};"}, {"sha": "8b18a5dc4bbbb1204615e1ba6ad02fc8496a1ddd", "filename": "src/librustc_expand/placeholders.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fplaceholders.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,10 +1,10 @@\n use crate::base::ExtCtxt;\n use crate::expand::{AstFragment, AstFragmentKind};\n \n+use rustc_span::source_map::{dummy_spanned, DUMMY_SP};\n use syntax::ast;\n use syntax::mut_visit::*;\n use syntax::ptr::P;\n-use syntax::source_map::{dummy_spanned, DUMMY_SP};\n \n use smallvec::{smallvec, SmallVec};\n "}, {"sha": "18dc605c9e754003e5564d7eeefa39cff919a473", "filename": "src/librustc_expand/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_expand%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Ftests.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,8 +1,8 @@\n use rustc_parse::{new_parser_from_source_str, parser::Parser, source_file_to_stream};\n+use rustc_span::source_map::{FilePathMapping, SourceMap};\n use rustc_span::{BytePos, MultiSpan, Span};\n use syntax::ast;\n use syntax::sess::ParseSess;\n-use syntax::source_map::{FilePathMapping, SourceMap};\n use syntax::tokenstream::TokenStream;\n use syntax::with_default_globals;\n "}, {"sha": "c4449945dd19d784b6ac2b21fac0c92fd278cbdc", "filename": "src/librustc_interface/interface.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_interface%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_interface%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Finterface.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -14,12 +14,12 @@ use rustc_data_structures::OnDrop;\n use rustc_errors::registry::Registry;\n use rustc_parse::new_parser_from_source_str;\n use rustc_span::edition;\n+use rustc_span::source_map::{FileLoader, FileName, SourceMap};\n use std::path::PathBuf;\n use std::result;\n use std::sync::{Arc, Mutex};\n use syntax::ast::{self, MetaItemKind};\n use syntax::sess::ParseSess;\n-use syntax::source_map::{FileLoader, FileName, SourceMap};\n use syntax::token;\n \n pub type Result<T> = result::Result<T, ErrorReported>;"}, {"sha": "7571f19e27e4d4dd90ca212e8a1fdbbf03706742", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -15,6 +15,7 @@ use rustc_errors::registry::Registry;\n use rustc_metadata::dynamic_lib::DynamicLibrary;\n use rustc_resolve::{self, Resolver};\n use rustc_span::edition::Edition;\n+use rustc_span::source_map::{FileLoader, RealFileLoader, SourceMap};\n use smallvec::SmallVec;\n use std::env;\n use std::io::{self, Write};\n@@ -27,7 +28,6 @@ use std::{panic, thread};\n use syntax::ast::{AttrVec, BlockCheckMode};\n use syntax::mut_visit::{visit_clobber, MutVisitor, *};\n use syntax::ptr::P;\n-use syntax::source_map::{FileLoader, RealFileLoader, SourceMap};\n use syntax::symbol::{sym, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::{self, ast, attr};"}, {"sha": "6e13e33a41925c410f66980820554b1f97181d20", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -37,14 +37,14 @@ use rustc::util::nodemap::FxHashSet;\n use rustc_feature::Stability;\n use rustc_feature::{deprecated_attributes, AttributeGate, AttributeTemplate, AttributeType};\n \n+use rustc_span::source_map::Spanned;\n use rustc_span::{BytePos, Span};\n use syntax::ast::{self, Expr};\n use syntax::attr::{self, HasAttrs};\n use syntax::edition::Edition;\n use syntax::errors::{Applicability, DiagnosticBuilder};\n use syntax::print::pprust::{self, expr_to_string};\n use syntax::ptr::P;\n-use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::FnKind;"}, {"sha": "67eccda5eb7e8b88010c44870fa6c946ba6ce623", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 7, "deletions": 11, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,28 +3,24 @@\n use crate::hir::def_id::DefId;\n use lint::{LateContext, LintArray, LintContext};\n use lint::{LateLintPass, LintPass};\n+use rustc::hir;\n use rustc::hir::{is_range_literal, ExprKind, Node};\n+use rustc::mir::interpret::{sign_extend, truncate};\n use rustc::ty::layout::{self, IntegerExt, LayoutOf, SizeSkeleton, VariantIdx};\n use rustc::ty::subst::SubstsRef;\n use rustc::ty::{self, AdtKind, ParamEnv, Ty, TyCtxt};\n-use rustc::{lint, util};\n+use rustc::{lint, util::nodemap::FxHashSet};\n use rustc_index::vec::Idx;\n-use util::nodemap::FxHashSet;\n-\n-use std::cmp;\n-use std::{f32, f64, i16, i32, i64, i8, u16, u32, u64, u8};\n-\n+use rustc_span::source_map;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n use rustc_target::spec::abi::Abi;\n use syntax::errors::Applicability;\n-use syntax::{ast, attr, source_map};\n-\n-use rustc::hir;\n-\n-use rustc::mir::interpret::{sign_extend, truncate};\n+use syntax::{ast, attr};\n \n use log::debug;\n+use std::cmp;\n+use std::{f32, f64, i16, i32, i64, i8, u16, u32, u64, u8};\n \n declare_lint! {\n     UNUSED_COMPARISONS,"}, {"sha": "5f9f2f6cf82a4afc55732d707ee877172b33f057", "filename": "src/librustc_metadata/native_libs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Fnative_libs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Fnative_libs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fnative_libs.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -4,10 +4,10 @@ use rustc::middle::cstore::{self, NativeLibrary};\n use rustc::session::Session;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::FxHashSet;\n+use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n use syntax::attr;\n use syntax::feature_gate::feature_err;\n-use syntax::source_map::Span;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::{span_err, struct_span_err};\n "}, {"sha": "2e133bdbf8898582a669c0b8d81399e13789a295", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -36,11 +36,11 @@ use proc_macro::bridge::client::ProcMacro;\n use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n use rustc_expand::proc_macro::{AttrProcMacro, BangProcMacro, ProcMacroDerive};\n use rustc_serialize::{opaque, Decodable, Decoder, SpecializedDecoder};\n+use rustc_span::source_map::{self, respan, Spanned};\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{self, hygiene::MacroKind, BytePos, Pos, Span, DUMMY_SP};\n use syntax::ast::{self, Ident};\n use syntax::attr;\n-use syntax::source_map::{self, respan, Spanned};\n \n pub use cstore_impl::{provide, provide_extern};\n "}, {"sha": "7e569f34e8ee7eb63d77a2a5557188b7de780516", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -26,13 +26,13 @@ use smallvec::SmallVec;\n use std::any::Any;\n use std::sync::Arc;\n \n+use rustc_span::source_map;\n+use rustc_span::source_map::Spanned;\n use rustc_span::{FileName, Span};\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::allocator::AllocatorKind;\n use syntax::ptr::P;\n-use syntax::source_map;\n-use syntax::source_map::Spanned;\n use syntax::symbol::Symbol;\n use syntax::tokenstream::DelimSpan;\n "}, {"sha": "7b30c0b0af0673315bc9b1820b726424c457cf5e", "filename": "src/librustc_metadata/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fencoder.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -25,6 +25,7 @@ use rustc_data_structures::sync::Lrc;\n use rustc_serialize::{opaque, Encodable, Encoder, SpecializedEncoder};\n \n use log::{debug, trace};\n+use rustc_span::source_map::Spanned;\n use rustc_span::{self, FileName, SourceFile, Span};\n use std::hash::Hash;\n use std::num::NonZeroUsize;\n@@ -33,7 +34,6 @@ use std::u32;\n use syntax::ast;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n-use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym, Ident, Symbol};\n \n use rustc::hir::intravisit;"}, {"sha": "61d69f8bd9d7d58999e56a81146ca6eb5edc273f", "filename": "src/librustc_mir/borrow_check/diagnostics/conflict_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fconflict_errors.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -11,8 +11,8 @@ use rustc::ty::{self, Ty};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_index::vec::Idx;\n+use rustc_span::source_map::DesugaringKind;\n use rustc_span::Span;\n-use syntax::source_map::DesugaringKind;\n \n use crate::dataflow::drop_flag_effects;\n use crate::dataflow::indexes::{MoveOutIndex, MovePathIndex};"}, {"sha": "9e3d2a7d5f63c214e6326b4900d6cf67cc5e8b76", "filename": "src/librustc_mir/borrow_check/diagnostics/var_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fdiagnostics%2Fvar_name.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,8 +3,8 @@ use crate::borrow_check::{nll::ToRegionVid, region_infer::RegionInferenceContext\n use rustc::mir::{Body, Local};\n use rustc::ty::{RegionVid, TyCtxt};\n use rustc_index::vec::{Idx, IndexVec};\n+use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n-use syntax::source_map::Span;\n \n impl<'tcx> RegionInferenceContext<'tcx> {\n     crate fn get_var_name_and_span_for_region("}, {"sha": "ac04ae285884b39887bcff556075536f111928d6", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,8 +3,7 @@\n use rustc::mir;\n use rustc::ty::layout::VariantIdx;\n use rustc::ty::{self, TyCtxt};\n-\n-use syntax::{source_map::DUMMY_SP, symbol::Symbol};\n+use rustc_span::{source_map::DUMMY_SP, symbol::Symbol};\n \n use crate::interpret::{intern_const_alloc_recursive, ConstValue, InterpCx};\n "}, {"sha": "d55620f657ba9a6b9d8372cf90569027a2c437b0", "filename": "src/librustc_mir/const_eval/eval_queries.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Feval_queries.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -10,8 +10,8 @@ use rustc::mir;\n use rustc::mir::interpret::{ConstEvalErr, ErrorHandled};\n use rustc::traits::Reveal;\n use rustc::ty::{self, layout, layout::LayoutOf, subst::Subst, TyCtxt};\n+use rustc_span::source_map::Span;\n use std::convert::TryInto;\n-use syntax::source_map::Span;\n \n pub fn note_on_undefined_behavior_error() -> &'static str {\n     \"The rules on what exactly is undefined behavior aren't clear, \\"}, {"sha": "d4556919652ecd34701234e4150dcef34b20dac0", "filename": "src/librustc_mir/const_eval/machine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval%2Fmachine.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -8,7 +8,7 @@ use std::hash::Hash;\n \n use rustc_data_structures::fx::FxHashMap;\n \n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n use crate::interpret::{\n     self, snapshot, AllocId, Allocation, AssertMessage, GlobalId, ImmTy, InterpCx, InterpResult,"}, {"sha": "5c5159749a3c527ab56e27929d2c867f1e0c02b5", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -17,7 +17,7 @@ use rustc_data_structures::fx::FxHashMap;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n-use syntax::source_map::{self, Span, DUMMY_SP};\n+use rustc_span::source_map::{self, Span, DUMMY_SP};\n \n use super::{\n     Immediate, MPlaceTy, Machine, MemPlace, Memory, OpTy, Operand, Place, PlaceTy,"}, {"sha": "6790baf31ccb2cab12f85a14647ca65538f5c46f", "filename": "src/librustc_mir/interpret/snapshot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fsnapshot.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -19,8 +19,8 @@ use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_index::vec::IndexVec;\n use rustc_macros::HashStable;\n+use rustc_span::source_map::Span;\n use syntax::ast::Mutability;\n-use syntax::source_map::Span;\n \n use super::eval_context::{LocalState, StackPopCleanup};\n use super::{Frame, Immediate, LocalValue, MemPlace, Memory, Operand, Place, ScalarMaybeUndef};"}, {"sha": "e4af30370552fbdf3870f389af65b2ec3817568e", "filename": "src/librustc_mir/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,8 +3,8 @@ use std::borrow::Cow;\n use rustc::ty::layout::{self, LayoutOf, TyLayout};\n use rustc::ty::Instance;\n use rustc::{mir, ty};\n+use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n-use syntax::source_map::Span;\n \n use super::{\n     FnVal, ImmTy, InterpCx, InterpResult, MPlaceTy, Machine, OpTy, PlaceTy, StackPopCleanup,"}, {"sha": "1b816e2b90da964cf83a580e8c744e195a292544", "filename": "src/librustc_parse/parser/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fgenerics.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,9 +1,9 @@\n use super::Parser;\n \n use rustc_errors::PResult;\n+use rustc_span::source_map::DUMMY_SP;\n use rustc_span::symbol::{kw, sym};\n use syntax::ast::{self, Attribute, GenericBounds, GenericParam, GenericParamKind, WhereClause};\n-use syntax::source_map::DUMMY_SP;\n use syntax::token;\n \n impl<'a> Parser<'a> {"}, {"sha": "59657cca1c6e3dae9277c20c6a176d6a84c808f6", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -11,13 +11,13 @@ use rustc::lint;\n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_parse::validate_attr;\n+use rustc_span::source_map::Spanned;\n use rustc_span::Span;\n use std::mem;\n use syntax::ast::*;\n use syntax::attr;\n use syntax::expand::is_proc_macro_attr;\n use syntax::print::pprust;\n-use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{span_err, struct_span_err, walk_list};"}, {"sha": "685e48e0f3558c640c239de52985337ee8019e37", "filename": "src/librustc_passes/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_passes%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_passes%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fregion.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -17,8 +17,8 @@ use rustc::ty::TyCtxt;\n use rustc::util::nodemap::FxHashSet;\n \n use rustc_index::vec::Idx;\n+use rustc_span::source_map;\n use rustc_span::Span;\n-use syntax::source_map;\n \n use std::mem;\n "}, {"sha": "66cb5b3c6531a2450a6fa35aed4a8215b9cd8bfb", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -32,12 +32,12 @@ use errors::Applicability;\n use rustc_expand::base::SyntaxExtension;\n use rustc_expand::expand::AstFragment;\n use rustc_span::hygiene::{ExpnId, MacroKind};\n+use rustc_span::source_map::{respan, Spanned};\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use syntax::ast::{Ident, Name};\n use syntax::attr;\n-use syntax::source_map::{respan, Spanned};\n use syntax::span_err;\n use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};"}, {"sha": "38b9f1ca22ad11d139cb8de3824cb6536ef8bc2f", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -11,10 +11,10 @@ use rustc::ty::{self, DefIdTree};\n use rustc::util::nodemap::FxHashSet;\n use rustc_feature::BUILTIN_ATTRIBUTES;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, MultiSpan, Span};\n use syntax::ast::{self, Ident, Path};\n use syntax::print::pprust;\n-use syntax::source_map::SourceMap;\n use syntax::struct_span_err;\n use syntax::symbol::{kw, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;"}, {"sha": "5c7f9cb6934cac16a34e9b9042318868e7003651", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -39,13 +39,13 @@ use rustc_metadata::creader::{CStore, CrateLoader};\n use errors::{Applicability, DiagnosticBuilder};\n use rustc_expand::base::SyntaxExtension;\n use rustc_span::hygiene::{ExpnId, ExpnKind, MacroKind, SyntaxContext, Transparency};\n+use rustc_span::source_map::Spanned;\n use rustc_span::{Span, DUMMY_SP};\n use syntax::ast::{self, FloatTy, Ident, IntTy, Name, NodeId, UintTy};\n use syntax::ast::{Crate, CRATE_NODE_ID};\n use syntax::ast::{ItemKind, Path};\n use syntax::attr;\n use syntax::print::pprust;\n-use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{struct_span_err, unwrap_or};"}, {"sha": "a61030afa19db25205fa1324cfe489599bee3ce2", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -23,11 +23,11 @@ use rustc_data_structures::fx::FxHashSet;\n use std::env;\n use std::path::Path;\n \n+use rustc_span::source_map::{respan, DUMMY_SP};\n use rustc_span::*;\n use syntax::ast::{self, Attribute, NodeId, PatKind};\n use syntax::print::pprust::{bounds_to_string, generic_params_to_string, ty_to_string};\n use syntax::ptr::P;\n-use syntax::source_map::{respan, DUMMY_SP};\n use syntax::token;\n use syntax::visit::{self, Visitor};\n use syntax::walk_list;"}, {"sha": "1f72d1dd847b9f6734b99c6a64252c596c87ffd5", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -26,11 +26,11 @@ use std::fs::File;\n use std::io::BufWriter;\n use std::path::{Path, PathBuf};\n \n+use rustc_span::source_map::Spanned;\n use rustc_span::*;\n use syntax::ast::{self, Attribute, NodeId, PatKind, DUMMY_NODE_ID};\n use syntax::print::pprust;\n use syntax::print::pprust::{param_to_string, ty_to_string};\n-use syntax::source_map::Spanned;\n use syntax::util::comments::strip_doc_comment_decoration;\n use syntax::visit::{self, Visitor};\n "}, {"sha": "46021f8b3991b6895346e278021078d170bc8b53", "filename": "src/librustc_traits/dropck_outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_traits%2Fdropck_outlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_traits%2Fdropck_outlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fdropck_outlives.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -8,7 +8,7 @@ use rustc::ty::query::Providers;\n use rustc::ty::subst::{InternalSubsts, Subst};\n use rustc::ty::{self, ParamEnvAnd, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::source_map::{Span, DUMMY_SP};\n+use rustc_span::source_map::{Span, DUMMY_SP};\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { dropck_outlives, adt_dtorck_constraint, ..*p };"}, {"sha": "3ad1b223a84339b0632a257a7dca4442da05df43", "filename": "src/librustc_traits/evaluate_obligation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_traits%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fevaluate_obligation.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -4,7 +4,7 @@ use rustc::traits::{\n };\n use rustc::ty::query::Providers;\n use rustc::ty::{ParamEnvAnd, TyCtxt};\n-use syntax::source_map::DUMMY_SP;\n+use rustc_span::source_map::DUMMY_SP;\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { evaluate_obligation, ..*p };"}, {"sha": "a58ec5bab5e981a70bcae1c29646816eb808883c", "filename": "src/librustc_traits/implied_outlives_bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fimplied_outlives_bounds.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -12,8 +12,8 @@ use rustc::ty::outlives::Component;\n use rustc::ty::query::Providers;\n use rustc::ty::wf;\n use rustc::ty::{self, Ty, TyCtxt, TypeFoldable};\n+use rustc_span::source_map::DUMMY_SP;\n use smallvec::{smallvec, SmallVec};\n-use syntax::source_map::DUMMY_SP;\n \n crate fn provide(p: &mut Providers<'_>) {\n     *p = Providers { implied_outlives_bounds, ..*p };"}, {"sha": "8bff95cd49740fae36a896fe0d20f5f22ecfb991", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -14,10 +14,10 @@ use rustc::traits::Obligation;\n use rustc::ty::fold::TypeFoldable;\n use rustc::ty::subst::InternalSubsts;\n use rustc::ty::{self, GenericParamDefKind, Ty};\n+use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n use std::cmp;\n use std::iter;\n-use syntax::source_map::Span;\n \n /// What signature do we *expect* the closure to have from context?\n #[derive(Debug)]"}, {"sha": "8f3b95a882f835ee5e6eef2cc8cad9d2e637fde8", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -32,8 +32,8 @@ use rustc::ty::Ty;\n use rustc::ty::TypeFoldable;\n use rustc::ty::{AdtKind, Visibility};\n use rustc_span::hygiene::DesugaringKind;\n+use rustc_span::source_map::Span;\n use syntax::ast;\n-use syntax::source_map::Span;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::lev_distance::find_best_match_for_name;\n "}, {"sha": "40ea27df4ffe28e1c563b825324bee87f606eedf", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -14,9 +14,9 @@ use rustc::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use rustc::traits::Obligation;\n use rustc::ty::print::with_crate_prefix;\n use rustc::ty::{self, ToPolyTraitRef, ToPredicate, Ty, TyCtxt, TypeFoldable};\n-use rustc_span::{FileName, Span};\n+use rustc_span::{source_map, FileName, Span};\n+use syntax::ast;\n use syntax::util::lev_distance;\n-use syntax::{ast, source_map};\n \n use rustc_error_codes::*;\n "}, {"sha": "2487859582c3393d490e0443a116aa047e4bb0ba", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -119,12 +119,12 @@ use rustc::ty::{\n };\n use rustc_index::vec::Idx;\n use rustc_span::hygiene::DesugaringKind;\n+use rustc_span::source_map::{original_sp, DUMMY_SP};\n use rustc_span::{self, BytePos, MultiSpan, Span};\n use rustc_target::spec::abi::Abi;\n use syntax::ast;\n use syntax::attr;\n use syntax::feature_gate::feature_err;\n-use syntax::source_map::{original_sp, DUMMY_SP};\n use syntax::symbol::{kw, sym, Ident};\n use syntax::util::parser::ExprPrecedence;\n "}, {"sha": "706174041deacf7ee489a060bfd883cbcecb777d", "filename": "src/librustc_typeck/constrained_generic_params.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fconstrained_generic_params.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,7 +1,7 @@\n use rustc::ty::fold::{TypeFoldable, TypeVisitor};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashSet;\n-use syntax::source_map::Span;\n+use rustc_span::source_map::Span;\n \n #[derive(Clone, PartialEq, Eq, Hash, Debug)]\n pub struct Parameter(pub u32);"}, {"sha": "6dd89dbd7f1cea639e83b8ffec60caed5df5d8dc", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -17,12 +17,12 @@ use rustc::ty::layout::VariantIdx;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_index::vec::IndexVec;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::DUMMY_SP;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_span::{self, FileName};\n use rustc_target::spec::abi::Abi;\n use syntax::ast::{self, AttrStyle, Ident};\n use syntax::attr;\n-use syntax::source_map::DUMMY_SP;\n use syntax::util::comments::strip_doc_comment_decoration;\n \n use crate::clean::cfg::Cfg;"}, {"sha": "cac3480f28d86cd55f10ad0082dc3876ac370fbc", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -17,10 +17,10 @@ use rustc_resolve as resolve;\n \n use errors::emitter::{Emitter, EmitterWriter};\n use errors::json::JsonEmitter;\n+use rustc_span::source_map;\n use rustc_span::DUMMY_SP;\n use syntax::ast::CRATE_NODE_ID;\n use syntax::attr;\n-use syntax::source_map;\n use syntax::symbol::sym;\n \n use rustc_data_structures::sync::{self, Lrc};"}, {"sha": "bf8a8fcd3a35435f4eb643afdf8c4773a2a80387", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -12,9 +12,9 @@ use std::io;\n use std::io::prelude::*;\n \n use rustc_parse::lexer;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::{FileName, Span};\n use syntax::sess::ParseSess;\n-use syntax::source_map::SourceMap;\n use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n "}, {"sha": "32d42b9c7347db9874193d3b1cd05c678447199c", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -51,12 +51,12 @@ use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_data_structures::flock;\n use rustc_feature::UnstableFeatures;\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::FileName;\n use serde::ser::SerializeSeq;\n use serde::{Serialize, Serializer};\n use syntax::ast;\n use syntax::edition::Edition;\n use syntax::print::pprust;\n-use syntax::source_map::FileName;\n use syntax::symbol::{sym, Symbol};\n \n use crate::clean::{self, AttributesExt, Deprecation, GetDefId, SelfTy};"}, {"sha": "04e7c3a6161305168eefeebbcda218bd4e2e554d", "filename": "src/librustdoc/html/render/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcache.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -3,10 +3,10 @@ use crate::fold::DocFolder;\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX};\n use rustc::middle::privacy::AccessLevels;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use rustc_span::source_map::FileName;\n use std::collections::BTreeMap;\n use std::mem;\n use std::path::{Path, PathBuf};\n-use syntax::source_map::FileName;\n use syntax::symbol::sym;\n \n use serde::Serialize;"}, {"sha": "79e7d3d783b807e422d19bab59008e9ebc7ac19a", "filename": "src/librustdoc/html/sources.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fhtml%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fsources.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -5,10 +5,10 @@ use crate::html::format::Buffer;\n use crate::html::highlight;\n use crate::html::layout;\n use crate::html::render::{Error, SharedContext, BASIC_KEYWORDS};\n+use rustc_span::source_map::FileName;\n use std::ffi::OsStr;\n use std::fs;\n use std::path::{Component, Path, PathBuf};\n-use syntax::source_map::FileName;\n \n crate fn render(\n     dst: &Path,"}, {"sha": "95edff4ba80991d0c1802b05691923fd55d6976c", "filename": "src/librustdoc/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fmarkdown.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -4,8 +4,8 @@ use std::path::PathBuf;\n \n use errors;\n use rustc_feature::UnstableFeatures;\n+use rustc_span::source_map::DUMMY_SP;\n use syntax::edition::Edition;\n-use syntax::source_map::DUMMY_SP;\n use testing;\n \n use crate::config::{Options, RenderOptions};"}, {"sha": "b568d034d89343d7769fb47c80a8203f898b3af6", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,8 +1,8 @@\n use errors::Applicability;\n use rustc_parse::lexer::StringReader as Lexer;\n+use rustc_span::source_map::FilePathMapping;\n use rustc_span::{FileName, InnerSpan};\n use syntax::sess::ParseSess;\n-use syntax::source_map::FilePathMapping;\n use syntax::token;\n \n use crate::clean;"}, {"sha": "312c6dad822aad1eef050bb7617a7d306c621e3e", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -5,6 +5,7 @@ use rustc::util::common::ErrorReported;\n use rustc_data_structures::sync::Lrc;\n use rustc_feature::UnstableFeatures;\n use rustc_interface::interface;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, FileName, Pos, Span, DUMMY_SP};\n use rustc_target::spec::TargetTriple;\n use std::env;\n@@ -15,7 +16,6 @@ use std::process::{self, Command, Stdio};\n use std::str;\n use syntax::ast;\n use syntax::edition::Edition;\n-use syntax::source_map::SourceMap;\n use syntax::symbol::sym;\n use syntax::with_globals;\n use tempfile::Builder as TempFileBuilder;\n@@ -402,10 +402,11 @@ pub fn make_test(\n     // Uses libsyntax to parse the doctest and find if there's a main fn and the extern\n     // crate already is included.\n     let (already_has_main, already_has_extern_crate, found_macro) = with_globals(edition, || {\n-        use crate::syntax::{sess::ParseSess, source_map::FilePathMapping};\n         use errors::emitter::EmitterWriter;\n         use errors::Handler;\n         use rustc_parse::maybe_new_parser_from_source_str;\n+        use rustc_span::source_map::FilePathMapping;\n+        use syntax::sess::ParseSess;\n \n         let filename = FileName::anon_source_code(s);\n         let source = crates + &everything_else;"}, {"sha": "c7a1739bb9130cc68919bdf0d87bc7fc8b696232", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -8,9 +8,9 @@ use rustc::middle::privacy::AccessLevel;\n use rustc::ty::TyCtxt;\n use rustc::util::nodemap::{FxHashMap, FxHashSet};\n use rustc_span::hygiene::MacroKind;\n+use rustc_span::source_map::Spanned;\n use rustc_span::{self, Span};\n use syntax::ast;\n-use syntax::source_map::Spanned;\n use syntax::symbol::sym;\n \n use std::mem;"}, {"sha": "47070261385a2d3aecd12e0313a4be10583d0281", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -25,19 +25,18 @@ pub use UnsafeSource::*;\n pub use rustc_span::symbol::{Ident, Symbol as Name};\n \n use crate::ptr::P;\n-use crate::source_map::{dummy_spanned, respan, Spanned};\n use crate::token::{self, DelimToken};\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree};\n \n-use rustc_span::symbol::{kw, sym, Symbol};\n-use rustc_span::{Span, DUMMY_SP};\n-\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::thin_vec::ThinVec;\n use rustc_index::vec::Idx;\n use rustc_macros::HashStable_Generic;\n use rustc_serialize::{self, Decoder, Encoder};\n+use rustc_span::source_map::{dummy_spanned, respan, Spanned};\n+use rustc_span::symbol::{kw, sym, Symbol};\n+use rustc_span::{Span, DUMMY_SP};\n \n use std::fmt;\n use std::iter;"}, {"sha": "e0040d42aaf7aca4ee8690898f6855b3111fdd34", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -14,13 +14,13 @@ use crate::ast::{Expr, GenericParam, Item, Lit, LitKind, Local, Stmt, StmtKind};\n use crate::ast::{MacArgs, MacDelimiter, MetaItem, MetaItemKind, NestedMetaItem};\n use crate::mut_visit::visit_clobber;\n use crate::ptr::P;\n-use crate::source_map::{BytePos, Spanned};\n use crate::symbol::{sym, Symbol};\n use crate::token::{self, Token};\n use crate::tokenstream::{DelimSpan, TokenStream, TokenTree, TreeAndJoint};\n use crate::GLOBALS;\n \n use log::debug;\n+use rustc_span::source_map::{BytePos, Spanned};\n use rustc_span::Span;\n \n use std::iter;"}, {"sha": "41cde019fe0fd3b6dcebb36a14eae08dd3340a45", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,25 +1,24 @@\n-use rustc_feature::{find_feature_issue, GateIssue};\n-use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n-use rustc_feature::{Feature, Features, State as FeatureState, UnstableFeatures};\n-use rustc_feature::{\n-    ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,\n-};\n-\n use crate::ast::{self, AssocTyConstraint, AssocTyConstraintKind, NodeId};\n use crate::ast::{GenericParam, GenericParamKind, PatKind, RangeEnd, VariantData};\n use crate::attr;\n use crate::edition::{Edition, ALL_EDITIONS};\n use crate::sess::ParseSess;\n-use crate::source_map::Spanned;\n use crate::symbol::{sym, Symbol};\n use crate::visit::{self, FnKind, Visitor};\n \n use errors::{Applicability, DiagnosticBuilder, Handler};\n-use log::debug;\n use rustc_data_structures::fx::FxHashMap;\n+use rustc_error_codes::*;\n+use rustc_feature::{find_feature_issue, GateIssue};\n+use rustc_feature::{AttributeGate, BUILTIN_ATTRIBUTE_MAP};\n+use rustc_feature::{Feature, Features, State as FeatureState, UnstableFeatures};\n+use rustc_feature::{\n+    ACCEPTED_FEATURES, ACTIVE_FEATURES, REMOVED_FEATURES, STABLE_REMOVED_FEATURES,\n+};\n+use rustc_span::source_map::Spanned;\n use rustc_span::{MultiSpan, Span, DUMMY_SP};\n \n-use rustc_error_codes::*;\n+use log::debug;\n \n macro_rules! gate_feature_fn {\n     ($cx: expr, $has_feature: expr, $span: expr, $name: expr, $explain: expr, $level: expr) => {{"}, {"sha": "40d86f5fb75d03f1d1b835e68d7535abfd5955a9", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -86,9 +86,8 @@ pub mod util {\n \n pub mod ast;\n pub mod attr;\n-pub mod expand;\n-pub use rustc_span::source_map;\n pub mod entry;\n+pub mod expand;\n pub mod feature_gate {\n     mod check;\n     pub use check::{check_attribute, check_crate, feature_err, feature_err_issue, get_features};"}, {"sha": "1413f1566d0438f5ebe3d028e9183c3b9aa1770b", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -9,15 +9,15 @@\n \n use crate::ast::*;\n use crate::ptr::P;\n-use crate::source_map::{respan, Spanned};\n use crate::token::{self, Token};\n use crate::tokenstream::*;\n use crate::util::map_in_place::MapInPlace;\n \n+use rustc_data_structures::sync::Lrc;\n+use rustc_span::source_map::{respan, Spanned};\n use rustc_span::Span;\n-use smallvec::{smallvec, Array, SmallVec};\n \n-use rustc_data_structures::sync::Lrc;\n+use smallvec::{smallvec, Array, SmallVec};\n use std::ops::DerefMut;\n use std::{panic, process, ptr};\n "}, {"sha": "90037324e56b96c73b46a84fd43acbc55ad3f0ce", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -6,16 +6,15 @@ use crate::print::pp::Breaks::{Consistent, Inconsistent};\n use crate::print::pp::{self, Breaks};\n use crate::ptr::P;\n use crate::sess::ParseSess;\n-use crate::source_map::{self, SourceMap, Spanned};\n use crate::symbol::{kw, sym};\n use crate::token::{self, BinOpToken, DelimToken, Nonterminal, Token, TokenKind};\n use crate::tokenstream::{self, TokenStream, TokenTree};\n use crate::util::classify;\n use crate::util::comments;\n use crate::util::parser::{self, AssocOp, Fixity};\n \n-use rustc_span::{self, BytePos};\n-use rustc_span::{FileName, Span};\n+use rustc_span::source_map::{dummy_spanned, SourceMap, Spanned};\n+use rustc_span::{BytePos, FileName, Span};\n \n use std::borrow::Cow;\n \n@@ -2709,7 +2708,7 @@ impl<'a> State<'a> {\n             ast::FnHeader { unsafety, ext, ..ast::FnHeader::default() },\n             name,\n             &generics,\n-            &source_map::dummy_spanned(ast::VisibilityKind::Inherited),\n+            &dummy_spanned(ast::VisibilityKind::Inherited),\n         );\n         self.end();\n     }"}, {"sha": "3091e3155805bd975659e3013602b02231de57fc", "filename": "src/libsyntax/print/pprust/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fprint%2Fpprust%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Fprint%2Fpprust%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust%2Ftests.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -1,9 +1,9 @@\n use super::*;\n \n use crate::ast;\n-use crate::source_map;\n use crate::with_default_globals;\n use rustc_span;\n+use rustc_span::source_map::{dummy_spanned, respan};\n \n fn fun_to_string(\n     decl: &ast::FnDecl,\n@@ -18,7 +18,7 @@ fn fun_to_string(\n             header,\n             Some(name),\n             generics,\n-            &source_map::dummy_spanned(ast::VisibilityKind::Inherited),\n+            &dummy_spanned(ast::VisibilityKind::Inherited),\n         );\n         s.end(); // Close the head box.\n         s.end(); // Close the outer box.\n@@ -53,7 +53,7 @@ fn test_variant_to_string() {\n \n         let var = ast::Variant {\n             ident,\n-            vis: source_map::respan(rustc_span::DUMMY_SP, ast::VisibilityKind::Inherited),\n+            vis: respan(rustc_span::DUMMY_SP, ast::VisibilityKind::Inherited),\n             attrs: Vec::new(),\n             id: ast::DUMMY_NODE_ID,\n             data: ast::VariantData::Unit(ast::DUMMY_NODE_ID),"}, {"sha": "c385b498ced72ab5e389e560b3f366c65b36a9b7", "filename": "src/libsyntax/util/comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Futil%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75e4783f63fc7a788d8dff47504b29dcd63d97fe/src%2Flibsyntax%2Futil%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fcomments.rs?ref=75e4783f63fc7a788d8dff47504b29dcd63d97fe", "patch": "@@ -2,8 +2,8 @@ pub use CommentStyle::*;\n \n use crate::ast;\n use crate::sess::ParseSess;\n-use crate::source_map::SourceMap;\n \n+use rustc_span::source_map::SourceMap;\n use rustc_span::{BytePos, CharPos, FileName, Pos};\n \n use std::usize;"}]}