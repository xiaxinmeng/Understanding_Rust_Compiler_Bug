{"sha": "fa01ce802f1b403a2140fd945b43af86ec3998a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMDFjZTgwMmYxYjQwM2EyMTQwZmQ5NDViNDNhZjg2ZWMzOTk4YTE=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-28T15:24:52Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2020-08-31T10:20:52Z"}, "message": "cg_llvm: `fewer_names` in `uncached_llvm_type`\n\nThis commit changes `uncached_llvm_type` so that a named struct type\n(with an empty name) is always created when the `fewer_names` option\nis enabled. By skipping the generation of names, we can improve perf.\nGiving `LLVMStructCreateNamed` an empty name works because LLVM will\nperform random renames to avoid collisions.\n\nSigned-off-by: David Wood <david@davidtw.co>", "tree": {"sha": "4eb8a9a114cba2bf3fb838a624a01e810e0d006e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4eb8a9a114cba2bf3fb838a624a01e810e0d006e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa01ce802f1b403a2140fd945b43af86ec3998a1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEfgm2/wUjk9OnjxlyJZLnbIc4H9kFAl9MzwYACgkQJZLnbIc4\nH9mB2xAAmxlNspr2+vy+Hp2MGDv6HkBJmmo+4xGSuWtNaevHdfSKSMPML5B+YdGy\nMeRpfVzjTfpiJhSzccfQe+MzGL/zRFNjvufRXZBLuHtwxLBhonPup/LXFuOjDEsP\n/fgcD6pNeiDx1JfvwAongvOUkGb9r2NPHFII/vRoxnv94sPDwgIZRE/C6PUiPoBZ\nQBPL7Kbcmy/h4HuUNhnG9MiHQbfLG1M4Na9YgMy9vwmwC1pEZCFEUSElNdKnrnQ6\naBtaBdYVOyv0u2UmTZ8RtCUWsdk7r+l5RANA3y+TAFgcW5hU+EEe/XpNql81+JqG\ndQ44ck0XkJRR7s1p0g20T4uQNTxU7+JeqYA7734FOHq6GHz+hIRvIpIFW8VSxe8J\ngIQlZpjA3zBNEK3mVYa9dZg7jzB/i7Me05XD1lUScGatdy+4tgwuRp7joSus7d4C\nXdiHEBvVI7FTOzk9NK8RKgdQg8UmbBiN1TvYRzq7EHTfuWSrfVq2EE8Y+UdtsuXG\ntSRF2YyKpfAQe0z3rWQPAbDh75g2bXMc+rwMzI51IS5SqVhNBn1nf/+7HGqSazzE\nu6UE29NQKGsW9aVYz4wNtZX7Qxc5QypSncm7MQLKwnzI/jnqVw4j3kAM4O1ewO7y\nmxGn6d6vrARCLUjr5pGDsyKewjx9D76EFfT7nQ4w9WSChOYdYEU=\n=IY5O\n-----END PGP SIGNATURE-----", "payload": "tree 4eb8a9a114cba2bf3fb838a624a01e810e0d006e\nparent 6c44bcc4ffeb0ee8059c2c167388c69dedf1ea44\nauthor David Wood <david@davidtw.co> 1598628292 +0100\ncommitter David Wood <david@davidtw.co> 1598869252 +0100\n\ncg_llvm: `fewer_names` in `uncached_llvm_type`\n\nThis commit changes `uncached_llvm_type` so that a named struct type\n(with an empty name) is always created when the `fewer_names` option\nis enabled. By skipping the generation of names, we can improve perf.\nGiving `LLVMStructCreateNamed` an empty name works because LLVM will\nperform random renames to avoid collisions.\n\nSigned-off-by: David Wood <david@davidtw.co>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa01ce802f1b403a2140fd945b43af86ec3998a1", "html_url": "https://github.com/rust-lang/rust/commit/fa01ce802f1b403a2140fd945b43af86ec3998a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa01ce802f1b403a2140fd945b43af86ec3998a1/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c44bcc4ffeb0ee8059c2c167388c69dedf1ea44", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c44bcc4ffeb0ee8059c2c167388c69dedf1ea44", "html_url": "https://github.com/rust-lang/rust/commit/6c44bcc4ffeb0ee8059c2c167388c69dedf1ea44"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "a02601eb43eb807295793ec6548098a05b674700", "filename": "compiler/rustc_codegen_llvm/src/type_of.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fa01ce802f1b403a2140fd945b43af86ec3998a1/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa01ce802f1b403a2140fd945b43af86ec3998a1/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ftype_of.rs?ref=fa01ce802f1b403a2140fd945b43af86ec3998a1", "patch": "@@ -51,30 +51,34 @@ fn uncached_llvm_type<'a, 'tcx>(\n     }\n \n     let name = match layout.ty.kind {\n-        ty::Closure(..) |\n-        ty::Generator(..) |\n-        ty::Adt(..) |\n         // FIXME(eddyb) producing readable type names for trait objects can result\n         // in problematically distinct types due to HRTB and subtyping (see #47638).\n         // ty::Dynamic(..) |\n-        ty::Foreign(..) |\n-        ty::Str => {\n+        ty::Adt(..) | ty::Closure(..) | ty::Foreign(..) | ty::Generator(..) | ty::Str\n+            if !cx.sess().fewer_names() =>\n+        {\n             let mut name = layout.ty.to_string();\n-            if let (&ty::Adt(def, _), &Variants::Single { index })\n-                 = (&layout.ty.kind, &layout.variants)\n+            if let (&ty::Adt(def, _), &Variants::Single { index }) =\n+                (&layout.ty.kind, &layout.variants)\n             {\n                 if def.is_enum() && !def.variants.is_empty() {\n                     write!(&mut name, \"::{}\", def.variants[index].ident).unwrap();\n                 }\n             }\n-            if let (&ty::Generator(_, _, _), &Variants::Single { index })\n-                 = (&layout.ty.kind, &layout.variants)\n+            if let (&ty::Generator(_, _, _), &Variants::Single { index }) =\n+                (&layout.ty.kind, &layout.variants)\n             {\n                 write!(&mut name, \"::{}\", ty::GeneratorSubsts::variant_name(index)).unwrap();\n             }\n             Some(name)\n         }\n-        _ => None\n+        ty::Adt(..) => {\n+            // If `Some` is returned then a named struct is created in LLVM. Name collisions are\n+            // avoided by LLVM (with increasing suffixes). If rustc doesn't generate names then that\n+            // can improve perf.\n+            Some(String::new())\n+        }\n+        _ => None,\n     };\n \n     match layout.fields {"}]}