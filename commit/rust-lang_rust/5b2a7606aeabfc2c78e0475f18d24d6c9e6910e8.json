{"sha": "5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8", "node_id": "C_kwDOAAsO6NoAKDViMmE3NjA2YWVhYmZjMmM3OGUwNDc1ZjE4ZDI0ZDZjOWU2OTEwZTg", "commit": {"author": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2021-12-20T02:21:07Z"}, "committer": {"name": "SparrowLii", "email": "liyuan179@huawei.com", "date": "2021-12-20T02:21:07Z"}, "message": "Fix the error of checking `base_expr` twice in type_changing_struct_update", "tree": {"sha": "68ad4f85aa90beb5b6874907cdf4b35611610dae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/68ad4f85aa90beb5b6874907cdf4b35611610dae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8", "html_url": "https://github.com/rust-lang/rust/commit/5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8/comments", "author": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SparrowLii", "id": 68270294, "node_id": "MDQ6VXNlcjY4MjcwMjk0", "avatar_url": "https://avatars.githubusercontent.com/u/68270294?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SparrowLii", "html_url": "https://github.com/SparrowLii", "followers_url": "https://api.github.com/users/SparrowLii/followers", "following_url": "https://api.github.com/users/SparrowLii/following{/other_user}", "gists_url": "https://api.github.com/users/SparrowLii/gists{/gist_id}", "starred_url": "https://api.github.com/users/SparrowLii/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SparrowLii/subscriptions", "organizations_url": "https://api.github.com/users/SparrowLii/orgs", "repos_url": "https://api.github.com/users/SparrowLii/repos", "events_url": "https://api.github.com/users/SparrowLii/events{/privacy}", "received_events_url": "https://api.github.com/users/SparrowLii/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e95e084a14870a718c712936ab5a8f8cd0159485", "url": "https://api.github.com/repos/rust-lang/rust/commits/e95e084a14870a718c712936ab5a8f8cd0159485", "html_url": "https://github.com/rust-lang/rust/commit/e95e084a14870a718c712936ab5a8f8cd0159485"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8d370e440eaf1fedd55d27844464e66b46481e91", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=5b2a7606aeabfc2c78e0475f18d24d6c9e6910e8", "patch": "@@ -1508,7 +1508,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }\n             } else {\n                 self.check_expr_has_type_or_error(base_expr, adt_ty, |_| {\n-                    let base_ty = self.check_expr(base_expr);\n+                    let base_ty = self.typeck_results.borrow().node_type(base_expr.hir_id);\n                     let same_adt = match (adt_ty.kind(), base_ty.kind()) {\n                         (ty::Adt(adt, _), ty::Adt(base_adt, _)) if adt == base_adt => true,\n                         _ => false,"}]}