{"sha": "8aab7071317749d3a7fe369377b30797f6770f18", "node_id": "C_kwDOAAsO6NoAKDhhYWI3MDcxMzE3NzQ5ZDNhN2ZlMzY5Mzc3YjMwNzk3ZjY3NzBmMTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-24T05:53:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-24T05:53:24Z"}, "message": "Rollup merge of #110566 - compiler-errors:bad-projection-term, r=cjgillot,BoxyUwU\n\nDon't create projection ty for const projection\n\nFixes #110549", "tree": {"sha": "480891d2e6805cfbf54d9d9fed066e8371fdb5cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/480891d2e6805cfbf54d9d9fed066e8371fdb5cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aab7071317749d3a7fe369377b30797f6770f18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkRhlUCRBK7hj4Ov3rIwAAO5IIAAoa0FgcmSXNKQ/B1wc+BY8/\nsi58pzGbWW5aq9iDSp1l3pBfTaZ+fIqyvYfcsmhdSvvhdAmdzL4AAq7IX5LWJiau\nhrsYbXbSWoWX+ihZ+yfZ1zFYpuDaiO9OWaxdL00g7GbP7kO8JVGl2vXwsGF9zs3T\nZsDzmGvVXBkgNYsIii1HwyURLgpxg434HYUd1ghh4GJ/yjke2MLAMXR72VnA2WOW\nP1+tsK81+aPjoXF07vrbnCpEXBJNUojXRgnuix3C2z+eM4ueBTTQkULyp8cuspnD\nibDmhsDbzqXgsStXPjw70Te1+rZ8CnMiodZ0t4RMtqnbE//BJxf+wZUp0uYBqdA=\n=jlrQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 480891d2e6805cfbf54d9d9fed066e8371fdb5cc\nparent d60c64a0c5d1bca1527ac6dde95254e8aa47d0e5\nparent cde5bcafe89658a43b7cf865f58057db29f4d531\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682315604 +0200\ncommitter GitHub <noreply@github.com> 1682315604 +0200\n\nRollup merge of #110566 - compiler-errors:bad-projection-term, r=cjgillot,BoxyUwU\n\nDon't create projection ty for const projection\n\nFixes #110549\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aab7071317749d3a7fe369377b30797f6770f18", "html_url": "https://github.com/rust-lang/rust/commit/8aab7071317749d3a7fe369377b30797f6770f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aab7071317749d3a7fe369377b30797f6770f18/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d60c64a0c5d1bca1527ac6dde95254e8aa47d0e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d60c64a0c5d1bca1527ac6dde95254e8aa47d0e5", "html_url": "https://github.com/rust-lang/rust/commit/d60c64a0c5d1bca1527ac6dde95254e8aa47d0e5"}, {"sha": "cde5bcafe89658a43b7cf865f58057db29f4d531", "url": "https://api.github.com/repos/rust-lang/rust/commits/cde5bcafe89658a43b7cf865f58057db29f4d531", "html_url": "https://github.com/rust-lang/rust/commit/cde5bcafe89658a43b7cf865f58057db29f4d531"}], "stats": {"total": 64, "additions": 56, "deletions": 8}, "files": [{"sha": "ea45412e47f1199487b517f7f3921064dcf74fcc", "filename": "compiler/rustc_trait_selection/src/traits/project.rs", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8aab7071317749d3a7fe369377b30797f6770f18/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aab7071317749d3a7fe369377b30797f6770f18/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fproject.rs?ref=8aab7071317749d3a7fe369377b30797f6770f18", "patch": "@@ -1272,14 +1272,29 @@ fn project<'cx, 'tcx>(\n         ProjectionCandidateSet::Single(candidate) => {\n             Ok(Projected::Progress(confirm_candidate(selcx, obligation, candidate)))\n         }\n-        ProjectionCandidateSet::None => Ok(Projected::NoProgress(\n-            // FIXME(associated_const_generics): this may need to change in the future?\n-            // need to investigate whether or not this is fine.\n-            selcx\n-                .tcx()\n-                .mk_projection(obligation.predicate.def_id, obligation.predicate.substs)\n-                .into(),\n-        )),\n+        ProjectionCandidateSet::None => {\n+            let tcx = selcx.tcx();\n+            let term = match tcx.def_kind(obligation.predicate.def_id) {\n+                DefKind::AssocTy | DefKind::ImplTraitPlaceholder => tcx\n+                    .mk_projection(obligation.predicate.def_id, obligation.predicate.substs)\n+                    .into(),\n+                DefKind::AssocConst => tcx\n+                    .mk_const(\n+                        ty::ConstKind::Unevaluated(ty::UnevaluatedConst::new(\n+                            obligation.predicate.def_id,\n+                            obligation.predicate.substs,\n+                        )),\n+                        tcx.type_of(obligation.predicate.def_id)\n+                            .subst(tcx, obligation.predicate.substs),\n+                    )\n+                    .into(),\n+                kind => {\n+                    bug!(\"unknown projection def-id: {}\", kind.descr(obligation.predicate.def_id))\n+                }\n+            };\n+\n+            Ok(Projected::NoProgress(term))\n+        }\n         // Error occurred while trying to processing impls.\n         ProjectionCandidateSet::Error(e) => Err(ProjectionError::TraitSelectionError(e)),\n         // Inherent ambiguity that prevents us from even enumerating the"}, {"sha": "b1a0f39962b617b951a54d295c2c890212997d62", "filename": "tests/ui/associated-consts/projection-unspecified-but-bounded.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8aab7071317749d3a7fe369377b30797f6770f18/tests%2Fui%2Fassociated-consts%2Fprojection-unspecified-but-bounded.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aab7071317749d3a7fe369377b30797f6770f18/tests%2Fui%2Fassociated-consts%2Fprojection-unspecified-but-bounded.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-consts%2Fprojection-unspecified-but-bounded.rs?ref=8aab7071317749d3a7fe369377b30797f6770f18", "patch": "@@ -0,0 +1,16 @@\n+#![feature(associated_const_equality)]\n+\n+// Issue 110549\n+\n+pub trait TraitWAssocConst {\n+    const A: usize;\n+}\n+\n+fn foo<T: TraitWAssocConst<A = 32>>() {}\n+\n+fn bar<T: TraitWAssocConst>() {\n+    foo::<T>();\n+    //~^ ERROR type mismatch resolving `<T as TraitWAssocConst>::A == 32`\n+}\n+\n+fn main() {}"}, {"sha": "8175e510a093f1e0017ce1a94c569c203c2b1003", "filename": "tests/ui/associated-consts/projection-unspecified-but-bounded.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8aab7071317749d3a7fe369377b30797f6770f18/tests%2Fui%2Fassociated-consts%2Fprojection-unspecified-but-bounded.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8aab7071317749d3a7fe369377b30797f6770f18/tests%2Fui%2Fassociated-consts%2Fprojection-unspecified-but-bounded.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fassociated-consts%2Fprojection-unspecified-but-bounded.stderr?ref=8aab7071317749d3a7fe369377b30797f6770f18", "patch": "@@ -0,0 +1,17 @@\n+error[E0271]: type mismatch resolving `<T as TraitWAssocConst>::A == 32`\n+  --> $DIR/projection-unspecified-but-bounded.rs:12:11\n+   |\n+LL |     foo::<T>();\n+   |           ^ expected `32`, found `<T as TraitWAssocConst>::A`\n+   |\n+   = note: expected constant `32`\n+              found constant `<T as TraitWAssocConst>::A`\n+note: required by a bound in `foo`\n+  --> $DIR/projection-unspecified-but-bounded.rs:9:28\n+   |\n+LL | fn foo<T: TraitWAssocConst<A = 32>>() {}\n+   |                            ^^^^^^ required by this bound in `foo`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0271`."}]}