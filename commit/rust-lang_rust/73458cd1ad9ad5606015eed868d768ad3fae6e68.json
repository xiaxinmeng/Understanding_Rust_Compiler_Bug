{"sha": "73458cd1ad9ad5606015eed868d768ad3fae6e68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczNDU4Y2QxYWQ5YWQ1NjA2MDE1ZWVkODY4ZDc2OGFkM2ZhZTZlNjg=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-07T05:57:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-07T05:57:55Z"}, "message": "Rollup merge of #58228 - taiki-e:librustc_plugin-2018, r=Centril\n\nlibrustc_plugin => 2018\n\nTransitions `librustc_plugin` to Rust 2018; cc #58099\n\nr? @Centril", "tree": {"sha": "d4f4610a279c786fc6825996139aec3282682529", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4f4610a279c786fc6825996139aec3282682529"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73458cd1ad9ad5606015eed868d768ad3fae6e68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcW8jjCRBK7hj4Ov3rIwAAdHIIAHKowOK6qqsxTAilfh9mcpxI\n93bl1AXPO1YCWB2tA/P4g5X5Tt9Jx/0mhSR5E1QZ88SHkr0LihEyyzBxjxaCbbnK\nPowbrxkRYZYX7Wa/y8it/r7Et2w7TygKFz62YUfJQGlj5b8k2X3TOkZE6+3LJpKb\nMdKoIPnrkAuIasz+FrL6seCwjFZ6mXOnEeoORO08wf4hfhewszzSE46BVxVuJRJC\n+f0UK8qku58tnGUu7/z1Sas0PGpXrl1NJ98XQc9gdYHKgBwg5xMAhYV2jQBXw975\nqNRIlvS/y8rlF5SOF8m0J3ZFu8GPq/074wy6S+ODle6XgkStYJhyZrW2n+L1kjk=\n=Jpro\n-----END PGP SIGNATURE-----\n", "payload": "tree d4f4610a279c786fc6825996139aec3282682529\nparent c0a135f541d7e984a16a56cc8ec6473baa6337e9\nparent 9f4a11c63732c2bdc623b4e66ee9bcc3f0159e95\nauthor kennytm <kennytm@gmail.com> 1549519075 +0800\ncommitter GitHub <noreply@github.com> 1549519075 +0800\n\nRollup merge of #58228 - taiki-e:librustc_plugin-2018, r=Centril\n\nlibrustc_plugin => 2018\n\nTransitions `librustc_plugin` to Rust 2018; cc #58099\n\nr? @Centril\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73458cd1ad9ad5606015eed868d768ad3fae6e68", "html_url": "https://github.com/rust-lang/rust/commit/73458cd1ad9ad5606015eed868d768ad3fae6e68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73458cd1ad9ad5606015eed868d768ad3fae6e68/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0a135f541d7e984a16a56cc8ec6473baa6337e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0a135f541d7e984a16a56cc8ec6473baa6337e9", "html_url": "https://github.com/rust-lang/rust/commit/c0a135f541d7e984a16a56cc8ec6473baa6337e9"}, {"sha": "9f4a11c63732c2bdc623b4e66ee9bcc3f0159e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f4a11c63732c2bdc623b4e66ee9bcc3f0159e95", "html_url": "https://github.com/rust-lang/rust/commit/9f4a11c63732c2bdc623b4e66ee9bcc3f0159e95"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "5e23aa0d7f74e5ad4e4585470c38728ad4583878", "filename": "src/librustc_plugin/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2FCargo.toml?ref=73458cd1ad9ad5606015eed868d768ad3fae6e68", "patch": "@@ -3,6 +3,7 @@ authors = [\"The Rust Project Developers\"]\n name = \"rustc_plugin\"\n version = \"0.0.0\"\n build = false\n+edition = \"2018\"\n \n [lib]\n name = \"rustc_plugin\""}, {"sha": "68462bd83ef60dbd09f46cb338f677d73ed5f040", "filename": "src/librustc_plugin/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fdiagnostics.rs?ref=73458cd1ad9ad5606015eed868d768ad3fae6e68", "patch": "@@ -1,5 +1,7 @@\n #![allow(non_snake_case)]\n \n+use syntax::{register_diagnostic, register_diagnostics, register_long_diagnostics};\n+\n register_long_diagnostics! {\n \n }"}, {"sha": "9a31bddc1ededfca1a31d33cd81a44b92c34e5f1", "filename": "src/librustc_plugin/lib.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Flib.rs?ref=73458cd1ad9ad5606015eed868d768ad3fae6e68", "patch": "@@ -54,19 +54,13 @@\n        html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\",\n        html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n \n-#![feature(nll)]\n #![feature(rustc_diagnostic_macros)]\n \n #![recursion_limit=\"256\"]\n \n-#[macro_use] extern crate syntax;\n+#![deny(rust_2018_idioms)]\n \n-extern crate rustc;\n-extern crate rustc_metadata;\n-extern crate syntax_pos;\n-extern crate rustc_errors as errors;\n-\n-pub use self::registry::Registry;\n+pub use registry::Registry;\n \n mod diagnostics;\n pub mod registry;"}, {"sha": "1b88cf05f40d5c52f99e3c18fd5b5a2e48e22ea6", "filename": "src/librustc_plugin/load.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2Fload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73458cd1ad9ad5606015eed868d768ad3fae6e68/src%2Flibrustc_plugin%2Fload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_plugin%2Fload.rs?ref=73458cd1ad9ad5606015eed868d768ad3fae6e68", "patch": "@@ -3,18 +3,19 @@\n use rustc::session::Session;\n use rustc_metadata::creader::CrateLoader;\n use rustc_metadata::cstore::CStore;\n-use registry::Registry;\n+use crate::registry::Registry;\n \n use std::borrow::ToOwned;\n use std::env;\n use std::mem;\n use std::path::PathBuf;\n use syntax::ast;\n+use syntax::span_err;\n use syntax_pos::{Span, DUMMY_SP};\n \n /// Pointer to a registrar function.\n pub type PluginRegistrarFun =\n-    fn(&mut Registry);\n+    fn(&mut Registry<'_>);\n \n pub struct PluginRegistrar {\n     pub fun: PluginRegistrarFun,"}]}