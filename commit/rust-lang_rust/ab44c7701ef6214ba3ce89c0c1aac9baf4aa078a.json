{"sha": "ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNDRjNzcwMWVmNjIxNGJhM2NlODljMGMxYWFjOWJhZjRhYTA3OGE=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-19T19:11:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-19T19:11:24Z"}, "message": "Rollup merge of #71310 - JohnTitor:dont-did, r=estebank\n\nDo not show DefId in diagnostics\n\nFixes #71222\nr? @estebank cc @eddyb", "tree": {"sha": "e0574c3167734058558ff452f3d8597f731598ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0574c3167734058558ff452f3d8597f731598ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJenKJcCRBK7hj4Ov3rIwAAdHIIACvYSkUpoVwaPFhoIOHBKpTr\nDH1PtJspP/eS6HYfKhP2s5e643pV2ioX6W6HyhB2p9xujmSRMDNWk/HAXP37NWj8\n/lsEAv7CkgUXJouiFRBiwKLfn0PWCrKrEjoFkzFZ1UNVyB/GleeGrP+kmOOfX2Z9\n7ZoDumnGo1xxsOmw+WqkS+rs+xZY1i9uEx93Y0u+vrzDVBOxdHUdA5hGzHW5a82+\n+Sb6Um0GJBQLf/E92vUNBK3xdM4vRUwvvqXEjO5nKCC2JVgPWfWAczTxbjtQ9h9O\nC1rdm+1mxwxKYqHbqva4s7HDa6KZAkgyiVKxxUdY5gLhNF4m0ZWyex7tssI+7nM=\n=ukUn\n-----END PGP SIGNATURE-----\n", "payload": "tree e0574c3167734058558ff452f3d8597f731598ba\nparent 9c5da9afa9cee0efda8a592305a6b8e7925e0eac\nparent e171cdaada135ef2ecc64eeff86110de6c7f9370\nauthor Dylan DPC <dylan.dpc@gmail.com> 1587323484 +0200\ncommitter GitHub <noreply@github.com> 1587323484 +0200\n\nRollup merge of #71310 - JohnTitor:dont-did, r=estebank\n\nDo not show DefId in diagnostics\n\nFixes #71222\nr? @estebank cc @eddyb\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "html_url": "https://github.com/rust-lang/rust/commit/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c5da9afa9cee0efda8a592305a6b8e7925e0eac", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c5da9afa9cee0efda8a592305a6b8e7925e0eac", "html_url": "https://github.com/rust-lang/rust/commit/9c5da9afa9cee0efda8a592305a6b8e7925e0eac"}, {"sha": "e171cdaada135ef2ecc64eeff86110de6c7f9370", "url": "https://api.github.com/repos/rust-lang/rust/commits/e171cdaada135ef2ecc64eeff86110de6c7f9370", "html_url": "https://github.com/rust-lang/rust/commit/e171cdaada135ef2ecc64eeff86110de6c7f9370"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "cff4719cc8c030df1ea3968a5fb9dc4e2a1613d2", "filename": "src/librustc_middle/ty/print/pretty.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fty%2Fprint%2Fpretty.rs?ref=ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "patch": "@@ -639,9 +639,7 @@ pub trait PrettyPrinter<'tcx>:\n                         }\n                     }\n                 } else {\n-                    // Cross-crate closure types should only be\n-                    // visible in codegen bug reports, I imagine.\n-                    p!(write(\"@{:?}\", did));\n+                    p!(write(\"@{}\", self.tcx().def_path_str(did)));\n \n                     if substs.as_generator().is_valid() {\n                         let upvar_tys = substs.as_generator().upvar_tys();\n@@ -689,9 +687,7 @@ pub trait PrettyPrinter<'tcx>:\n                         }\n                     }\n                 } else {\n-                    // Cross-crate closure types should only be\n-                    // visible in codegen bug reports, I imagine.\n-                    p!(write(\"@{:?}\", did));\n+                    p!(write(\"@{}\", self.tcx().def_path_str(did)));\n \n                     if substs.as_closure().is_valid() {\n                         let upvar_tys = substs.as_closure().upvar_tys();"}, {"sha": "9679e3807b629e76d5fa8e87894e464b4322aabb", "filename": "src/test/ui/async-await/issues/issue-67893.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.rs?ref=ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "patch": "@@ -1,7 +1,5 @@\n // aux-build: issue_67893.rs\n // edition:2018\n-// dont-check-compiler-stderr\n-// FIXME(#71222): Add above flag because of the difference of stderrs on some env.\n \n extern crate issue_67893;\n "}, {"sha": "343a35a1663ac4df9cd6badb7c1eeb429dc207be", "filename": "src/test/ui/async-await/issues/issue-67893.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-67893.stderr?ref=ab44c7701ef6214ba3ce89c0c1aac9baf4aa078a", "patch": "@@ -0,0 +1,24 @@\n+error[E0277]: `std::sync::MutexGuard<'_, ()>` cannot be sent between threads safely\n+  --> $DIR/issue-67893.rs:9:5\n+   |\n+LL | fn g(_: impl Send) {}\n+   |              ---- required by this bound in `g`\n+...\n+LL |     g(issue_67893::run())\n+   |     ^ `std::sync::MutexGuard<'_, ()>` cannot be sent between threads safely\n+   | \n+  ::: $DIR/auxiliary/issue_67893.rs:7:20\n+   |\n+LL | pub async fn run() {\n+   |                    - within this `impl std::future::Future`\n+   |\n+   = help: within `impl std::future::Future`, the trait `std::marker::Send` is not implemented for `std::sync::MutexGuard<'_, ()>`\n+   = note: required because it appears within the type `for<'r, 's, 't0, 't1, 't2, 't3> {std::future::ResumeTy, std::sync::Arc<std::sync::Mutex<()>>, &'r std::sync::Mutex<()>, std::result::Result<std::sync::MutexGuard<'s, ()>, std::sync::PoisonError<std::sync::MutexGuard<'t0, ()>>>, &'t1 std::sync::MutexGuard<'t2, ()>, std::sync::MutexGuard<'t3, ()>, (), impl std::future::Future}`\n+   = note: required because it appears within the type `[static generator@issue_67893::run::{{closure}}#0 for<'r, 's, 't0, 't1, 't2, 't3> {std::future::ResumeTy, std::sync::Arc<std::sync::Mutex<()>>, &'r std::sync::Mutex<()>, std::result::Result<std::sync::MutexGuard<'s, ()>, std::sync::PoisonError<std::sync::MutexGuard<'t0, ()>>>, &'t1 std::sync::MutexGuard<'t2, ()>, std::sync::MutexGuard<'t3, ()>, (), impl std::future::Future}]`\n+   = note: required because it appears within the type `std::future::from_generator::GenFuture<[static generator@issue_67893::run::{{closure}}#0 for<'r, 's, 't0, 't1, 't2, 't3> {std::future::ResumeTy, std::sync::Arc<std::sync::Mutex<()>>, &'r std::sync::Mutex<()>, std::result::Result<std::sync::MutexGuard<'s, ()>, std::sync::PoisonError<std::sync::MutexGuard<'t0, ()>>>, &'t1 std::sync::MutexGuard<'t2, ()>, std::sync::MutexGuard<'t3, ()>, (), impl std::future::Future}]>`\n+   = note: required because it appears within the type `impl std::future::Future`\n+   = note: required because it appears within the type `impl std::future::Future`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}