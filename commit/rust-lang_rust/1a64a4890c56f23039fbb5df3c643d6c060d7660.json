{"sha": "1a64a4890c56f23039fbb5df3c643d6c060d7660", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhNjRhNDg5MGM1NmYyMzAzOWZiYjVkZjNjNjQzZDZjMDYwZDc2NjA=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-20T20:20:56Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-20T20:20:56Z"}, "message": "Small cleanup", "tree": {"sha": "a47289a0d1c23cf7c5f5bbe63e2bd9f8d1f9517b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a47289a0d1c23cf7c5f5bbe63e2bd9f8d1f9517b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a64a4890c56f23039fbb5df3c643d6c060d7660", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a64a4890c56f23039fbb5df3c643d6c060d7660", "html_url": "https://github.com/rust-lang/rust/commit/1a64a4890c56f23039fbb5df3c643d6c060d7660", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a64a4890c56f23039fbb5df3c643d6c060d7660/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba3be834881a5a62c00cb49ac09b2d1b9f35fe5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3be834881a5a62c00cb49ac09b2d1b9f35fe5f", "html_url": "https://github.com/rust-lang/rust/commit/ba3be834881a5a62c00cb49ac09b2d1b9f35fe5f"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "901cd3f7a9bd7b4fed7fc60143ad51f0f620bd80", "filename": "src/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformat.rs?ref=1a64a4890c56f23039fbb5df3c643d6c060d7660", "patch": "@@ -44,14 +44,14 @@ impl LateLintPass for FormatMacLint {\n                         // ensure the format argument is `{}` ie. Display with no fancy option\n                         check_arg_is_display(&args[1])\n                     ], {\n-                        span_lint(cx, USELESS_FORMAT, span, &\"useless use of `format!`\");\n+                        span_lint(cx, USELESS_FORMAT, span, \"useless use of `format!`\");\n                     }}\n                 }\n                 // `format!(\"foo\")` expansion contains `match () { () => [], }`\n                 ExprMatch(ref matchee, _, _) => {\n                     if let ExprTup(ref tup) = matchee.node {\n                         if tup.is_empty() {\n-                            span_lint(cx, USELESS_FORMAT, span, &\"useless use of `format!`\");\n+                            span_lint(cx, USELESS_FORMAT, span, \"useless use of `format!`\");\n                         }\n                     }\n                 }"}, {"sha": "15f0e51f36c196139e948c311f0aaab0c5cd6c4c", "filename": "src/loops.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=1a64a4890c56f23039fbb5df3c643d6c060d7660", "patch": "@@ -317,8 +317,8 @@ impl LateLintPass for LoopsPass {\n                     span_lint(cx,\n                               UNUSED_COLLECT,\n                               expr.span,\n-                              &\"you are collect()ing an iterator and throwing away the result. \\\n-                                Consider using an explicit for loop to exhaust the iterator\");\n+                              \"you are collect()ing an iterator and throwing away the result. \\\n+                               Consider using an explicit for loop to exhaust the iterator\");\n                 }\n             }\n         }"}, {"sha": "c67e2eade14da39d1fb98a67a8338f41e59bf7f9", "filename": "src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmethods.rs?ref=1a64a4890c56f23039fbb5df3c643d6c060d7660", "patch": "@@ -589,7 +589,7 @@ fn lint_extend(cx: &LateContext, expr: &Expr, args: &MethodArgs) {\n         span_lint(cx,\n                   EXTEND_FROM_SLICE,\n                   expr.span,\n-                  &\"use of `extend` to extend a Vec by a slice\")\n+                  \"use of `extend` to extend a Vec by a slice\")\n             .span_suggestion(expr.span,\n                              \"try this\",\n                              format!(\"{}.extend_from_slice({}{})\","}, {"sha": "745d685ec801d0e00969cfb92ffc71ae96786058", "filename": "src/regex.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fregex.rs?ref=1a64a4890c56f23039fbb5df3c643d6c060d7660", "patch": "@@ -105,7 +105,7 @@ impl LateLintPass for RegexPass {\n                         Ok(r) => {\n                             if let Some(repl) = is_trivial_regex(&r) {\n                                 span_help_and_lint(cx, TRIVIAL_REGEX, args[0].span,\n-                                                   &\"trivial regex\",\n+                                                   \"trivial regex\",\n                                                    &format!(\"consider using {}\", repl));\n                             }\n                         }\n@@ -123,7 +123,7 @@ impl LateLintPass for RegexPass {\n                     Ok(r) => {\n                         if let Some(repl) = is_trivial_regex(&r) {\n                             span_help_and_lint(cx, TRIVIAL_REGEX, args[0].span,\n-                                               &\"trivial regex\",\n+                                               \"trivial regex\",\n                                                &format!(\"consider using {}\", repl));\n                         }\n                     }"}, {"sha": "eec8bd63eb7fae968be50b7be495eb581f8bf5ea", "filename": "src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a64a4890c56f23039fbb5df3c643d6c060d7660/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=1a64a4890c56f23039fbb5df3c643d6c060d7660", "patch": "@@ -496,7 +496,7 @@ fn check_type(cx: &LateContext, ty: &Ty) {\n         span_lint(cx,\n                   TYPE_COMPLEXITY,\n                   ty.span,\n-                  &\"very complex type used. Consider factoring parts into `type` definitions\");\n+                  \"very complex type used. Consider factoring parts into `type` definitions\");\n     }\n }\n "}]}