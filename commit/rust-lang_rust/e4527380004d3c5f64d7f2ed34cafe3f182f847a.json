{"sha": "e4527380004d3c5f64d7f2ed34cafe3f182f847a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NTI3MzgwMDA0ZDNjNWY2NGQ3ZjJlZDM0Y2FmZTNmMTgyZjg0N2E=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-15T12:34:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-15T12:34:04Z"}, "message": "Rollup merge of #63546 - lzutao:clouldabi-maybeuninit, r=RalfJung\n\nRemove uses of `mem::uninitialized()` from cloudabi\n\nThis PR removes uses of `mem::uninitialized` from `cloudabi` module,\nexcluding the layout test in `src/libstd/sys/cloudabi/abi/cloudabi.rs`.\n\nr? @RalfJung\ncc @EdSchouten\ncc #62397", "tree": {"sha": "8bcfec898b4449060301f87e625ed5164d221e8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bcfec898b4449060301f87e625ed5164d221e8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e4527380004d3c5f64d7f2ed34cafe3f182f847a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdVVE8CRBK7hj4Ov3rIwAAdHIIAI+c1YI0K2wJJ8YDKiGJW4OE\nJHRuB02lhSTJghnsbdvYO2upSJ4BafkB4BdLH82VJ260/sIvRAK8jrxyqlowtaeT\n9RCh5EBsd7hh1tOSh6U1GgxVGjZjuU1FH6Uhlard0tE5hB6V9GLWWN3vJowAkxiP\n44kkaBr63LTTuqhYeGE3bysylB+UJiqFy2jW6YN8xbkCkSmKqgeB6ckPkeIhNnsX\nxSpbvZpKwpC96ThFx+Bg3Jh+QTasAeQ8QDyvlIxqKKV0POXW8Nra8PR5FFxLf00V\nmlp+QU1ywl311IiYOjtSi7rJ8C7CUI0EGXG29jxCrkDIclIl1P5TPTQH57ytHMg=\n=n7Lz\n-----END PGP SIGNATURE-----\n", "payload": "tree 8bcfec898b4449060301f87e625ed5164d221e8b\nparent ae53a9e363af76f5310f4c0e108cc4a9749c1da3\nparent 6e8639a41827a50d1c479d07263a53570aad6e7e\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1565872444 +0200\ncommitter GitHub <noreply@github.com> 1565872444 +0200\n\nRollup merge of #63546 - lzutao:clouldabi-maybeuninit, r=RalfJung\n\nRemove uses of `mem::uninitialized()` from cloudabi\n\nThis PR removes uses of `mem::uninitialized` from `cloudabi` module,\nexcluding the layout test in `src/libstd/sys/cloudabi/abi/cloudabi.rs`.\n\nr? @RalfJung\ncc @EdSchouten\ncc #62397\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e4527380004d3c5f64d7f2ed34cafe3f182f847a", "html_url": "https://github.com/rust-lang/rust/commit/e4527380004d3c5f64d7f2ed34cafe3f182f847a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e4527380004d3c5f64d7f2ed34cafe3f182f847a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae53a9e363af76f5310f4c0e108cc4a9749c1da3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae53a9e363af76f5310f4c0e108cc4a9749c1da3", "html_url": "https://github.com/rust-lang/rust/commit/ae53a9e363af76f5310f4c0e108cc4a9749c1da3"}, {"sha": "6e8639a41827a50d1c479d07263a53570aad6e7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e8639a41827a50d1c479d07263a53570aad6e7e", "html_url": "https://github.com/rust-lang/rust/commit/6e8639a41827a50d1c479d07263a53570aad6e7e"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "38db4dd51657a10a864d4ab85e4ed3a9e63988d9", "filename": "src/libstd/sys/cloudabi/abi/cloudabi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fabi%2Fcloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fabi%2Fcloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fabi%2Fcloudabi.rs?ref=e4527380004d3c5f64d7f2ed34cafe3f182f847a", "patch": "@@ -115,6 +115,7 @@\n \n #![no_std]\n #![allow(non_camel_case_types)]\n+#![allow(deprecated)] // FIXME: using `mem::uninitialized()`\n \n include!(\"bitflags.rs\");\n "}, {"sha": "2fb10cc370add607dade6387b5008fae03fc310f", "filename": "src/libstd/sys/cloudabi/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fmod.rs?ref=e4527380004d3c5f64d7f2ed34cafe3f182f847a", "patch": "@@ -1,5 +1,3 @@\n-#![allow(deprecated)] // mem::uninitialized\n-\n use crate::io::ErrorKind;\n use crate::mem;\n "}, {"sha": "0e30d3a1c6cf124989c40c642db5cece663622d6", "filename": "src/libstd/sys/cloudabi/mutex.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fmutex.rs?ref=e4527380004d3c5f64d7f2ed34cafe3f182f847a", "patch": "@@ -104,10 +104,11 @@ impl ReentrantMutex {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to acquire mutex\");\n+            let event = event.assume_init();\n             assert_eq!(event.error, abi::errno::SUCCESS, \"Failed to acquire mutex\");\n         }\n     }"}, {"sha": "73499d65a067fa46e637facecd3997444be33c79", "filename": "src/libstd/sys/cloudabi/rwlock.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Frwlock.rs?ref=e4527380004d3c5f64d7f2ed34cafe3f182f847a", "patch": "@@ -1,5 +1,6 @@\n use crate::cell::UnsafeCell;\n use crate::mem;\n+use crate::mem::MaybeUninit;\n use crate::sync::atomic::{AtomicU32, Ordering};\n use crate::sys::cloudabi::abi;\n \n@@ -73,10 +74,11 @@ impl RWLock {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to acquire read lock\");\n+            let event = event.assume_init();\n             assert_eq!(\n                 event.error,\n                 abi::errno::SUCCESS,\n@@ -182,10 +184,11 @@ impl RWLock {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS, \"Failed to acquire write lock\");\n+            let event = event.assume_init();\n             assert_eq!(\n                 event.error,\n                 abi::errno::SUCCESS,"}, {"sha": "240b6ea9e57f8ede0d75755e1eca01a6d7b7737b", "filename": "src/libstd/sys/cloudabi/thread.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e4527380004d3c5f64d7f2ed34cafe3f182f847a/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcloudabi%2Fthread.rs?ref=e4527380004d3c5f64d7f2ed34cafe3f182f847a", "patch": "@@ -72,10 +72,11 @@ impl Thread {\n                 },\n                 ..mem::zeroed()\n             };\n-            let mut event: abi::event = mem::uninitialized();\n-            let mut nevents: usize = mem::uninitialized();\n-            let ret = abi::poll(&subscription, &mut event, 1, &mut nevents);\n+            let mut event = mem::MaybeUninit::<abi::event>::uninit();\n+            let mut nevents = mem::MaybeUninit::<usize>::uninit();\n+            let ret = abi::poll(&subscription, event.as_mut_ptr(), 1, nevents.as_mut_ptr());\n             assert_eq!(ret, abi::errno::SUCCESS);\n+            let event = event.assume_init();\n             assert_eq!(event.error, abi::errno::SUCCESS);\n         }\n     }"}]}