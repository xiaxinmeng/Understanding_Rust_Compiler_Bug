{"sha": "1b7896716e21b1b3518e9d51270a0c304abaae1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiNzg5NjcxNmUyMWIxYjM1MThlOWQ1MTI3MGEwYzMwNGFiYWFlMWM=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-09-17T15:41:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-17T15:41:14Z"}, "message": "Rollup merge of #87566 - JohnTitor:find-eqeq-on-assoc-type-bounds, r=estebank\n\nRecover invalid assoc type bounds using `==`\n\nFix #87493\nr? `@estebank`", "tree": {"sha": "6379ff0bc81f05c308c0821231ce588abe4a6cfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6379ff0bc81f05c308c0821231ce588abe4a6cfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b7896716e21b1b3518e9d51270a0c304abaae1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhRLcaCRBK7hj4Ov3rIwAAihYIAHj6zpljDNgnyuvQxdM9q28n\nm4/g0wcXUYt+2EGtTyNpvqZXpkOyyLcV9tAXYnGugl6PLou8hgk+ffs0AD3aoNuV\nceJNwGLpiAmy0/qhVgFfcM9Cyw96+WvoSYAgHsTzYrBu0Q63AMPIMtaIPGqgcbnQ\nTHv+hSdfj0dPolCbmFYt3gjuDQqy8YqzY/Bmf+PUQK6Yq5Ig/t2KVC9J/bGYWG4G\nrEzx2DLg+nbmeeW6M0KYSuDIqIpD1l1JmeaOZEe9xueGFCWwvOmuPw72tjRSy5kG\nf6934m/C3FtjwUbMyWEgxjn4jmOb/0ZK4xcK6HFpZqyguH5SHXdL+GutVRhbv9Q=\n=Ucsx\n-----END PGP SIGNATURE-----\n", "payload": "tree 6379ff0bc81f05c308c0821231ce588abe4a6cfe\nparent aed7f000974d240c596f20e562718e3324161fba\nparent ee99bb393953c31169e89597ec893fd15a3ff4ee\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1631893274 +0200\ncommitter GitHub <noreply@github.com> 1631893274 +0200\n\nRollup merge of #87566 - JohnTitor:find-eqeq-on-assoc-type-bounds, r=estebank\n\nRecover invalid assoc type bounds using `==`\n\nFix #87493\nr? `@estebank`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b7896716e21b1b3518e9d51270a0c304abaae1c", "html_url": "https://github.com/rust-lang/rust/commit/1b7896716e21b1b3518e9d51270a0c304abaae1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b7896716e21b1b3518e9d51270a0c304abaae1c/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aed7f000974d240c596f20e562718e3324161fba", "url": "https://api.github.com/repos/rust-lang/rust/commits/aed7f000974d240c596f20e562718e3324161fba", "html_url": "https://github.com/rust-lang/rust/commit/aed7f000974d240c596f20e562718e3324161fba"}, {"sha": "ee99bb393953c31169e89597ec893fd15a3ff4ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee99bb393953c31169e89597ec893fd15a3ff4ee", "html_url": "https://github.com/rust-lang/rust/commit/ee99bb393953c31169e89597ec893fd15a3ff4ee"}], "stats": {"total": 56, "additions": 55, "deletions": 1}, "files": [{"sha": "708df5e46d4e22ef94dca8c3bdd49f61a8f53800", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1b7896716e21b1b3518e9d51270a0c304abaae1c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7896716e21b1b3518e9d51270a0c304abaae1c/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=1b7896716e21b1b3518e9d51270a0c304abaae1c", "patch": "@@ -1950,7 +1950,19 @@ impl<'a> Parser<'a> {\n         }\n         match self.parse_expr_res(Restrictions::CONST_EXPR, None) {\n             Ok(expr) => {\n-                if token::Comma == self.token.kind || self.token.kind.should_end_const_arg() {\n+                // Find a mistake like `MyTrait<Assoc == S::Assoc>`.\n+                if token::EqEq == snapshot.token.kind {\n+                    err.span_suggestion(\n+                        snapshot.token.span,\n+                        \"if you meant to use an associated type binding, replace `==` with `=`\",\n+                        \"=\".to_string(),\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                    let value = self.mk_expr_err(start.to(expr.span));\n+                    err.emit();\n+                    return Ok(GenericArg::Const(AnonConst { id: ast::DUMMY_NODE_ID, value }));\n+                } else if token::Comma == self.token.kind || self.token.kind.should_end_const_arg()\n+                {\n                     // Avoid the following output by checking that we consumed a full const arg:\n                     // help: expressions must be enclosed in braces to be used as const generic\n                     //       arguments"}, {"sha": "d8599ab22a32b8de907eef76b216ff2dd43e0c74", "filename": "src/test/ui/const-generics/issues/issue-87493.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1b7896716e21b1b3518e9d51270a0c304abaae1c/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b7896716e21b1b3518e9d51270a0c304abaae1c/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.rs?ref=1b7896716e21b1b3518e9d51270a0c304abaae1c", "patch": "@@ -0,0 +1,14 @@\n+pub trait MyTrait {\n+    type Assoc;\n+}\n+\n+pub fn foo<S, T>(_s: S, _t: T)\n+where\n+    S: MyTrait,\n+    T: MyTrait<Assoc == S::Assoc>,\n+    //~^ ERROR: expected one of `,` or `>`, found `==`\n+    //~| ERROR: this trait takes 0 generic arguments but 1 generic argument was supplied\n+{\n+}\n+\n+fn main() {}"}, {"sha": "8f92eeaffd19db4cf60f2a0e6a4a97e75c7025bb", "filename": "src/test/ui/const-generics/issues/issue-87493.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/1b7896716e21b1b3518e9d51270a0c304abaae1c/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1b7896716e21b1b3518e9d51270a0c304abaae1c/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-87493.stderr?ref=1b7896716e21b1b3518e9d51270a0c304abaae1c", "patch": "@@ -0,0 +1,28 @@\n+error: expected one of `,` or `>`, found `==`\n+  --> $DIR/issue-87493.rs:8:22\n+   |\n+LL |     T: MyTrait<Assoc == S::Assoc>,\n+   |                      ^^ expected one of `,` or `>`\n+   |\n+help: if you meant to use an associated type binding, replace `==` with `=`\n+   |\n+LL |     T: MyTrait<Assoc = S::Assoc>,\n+   |                      ~\n+\n+error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+  --> $DIR/issue-87493.rs:8:8\n+   |\n+LL |     T: MyTrait<Assoc == S::Assoc>,\n+   |        ^^^^^^^------------------- help: remove these generics\n+   |        |\n+   |        expected 0 generic arguments\n+   |\n+note: trait defined here, with 0 generic parameters\n+  --> $DIR/issue-87493.rs:1:11\n+   |\n+LL | pub trait MyTrait {\n+   |           ^^^^^^^\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0107`."}]}