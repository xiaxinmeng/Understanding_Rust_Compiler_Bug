{"sha": "f5db351a1d502cb65f8807ec2c84f44756099ef3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGIzNTFhMWQ1MDJjYjY1Zjg4MDdlYzJjODRmNDQ3NTYwOTllZjM=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-01-22T13:56:08Z"}, "committer": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2020-02-12T08:34:26Z"}, "message": "Get {RUSTUP,MULTIRUST}_{HOME,TOOLCHAIN} from runtime environment\n\nKeep the fallback to compile-time environment", "tree": {"sha": "24ac3a834e26bc14c6ae4aa282d264985118f89a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24ac3a834e26bc14c6ae4aa282d264985118f89a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5db351a1d502cb65f8807ec2c84f44756099ef3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZxoS6lESXlRGMHWcaTCGhp1QZjcFAl5DuJIACgkQaTCGhp1Q\nZjf5ARAApIdNxpRoQYWbf5y7u7+dZywC8S25HdhHOqscSBPtOeY6XmvJTvzVwxwm\nwW7WDd3oVcOlnxTsLv0oZEJLNp4fev/KS3Dv9NSHme7zLejBD/I1dalZY96RnRda\nbfACfj34F72NoZZuMYVhg/1CyuyQKv1NL/q1/cCrpVl/+ykdx7ZLIshb3xyfrqMP\nH1tIqHrH1RUhMn39Qj7CBUsD94NmNMFgXsXwHqMdIfgVJgmo3p5GulsUjXcPhT2W\nhJ1/SDkuszPISrzsCjrHkQHopjB8qai2GDSfZ2/57WnScVetyfh/tiHic2ePLvfb\nHxWco2UvhbbGx3JOOnPzCxwIIMIPwl17/KNlx9G5mWrCGAe7UgE4YC84qmRjPUSE\nAHcDkqQO/kK9PErn7mTt4B/NPlxB9wxEGLYbkm2m9Ml4DiTc1bJvpk+E6elhP6sE\nN4/Hjy0uqA29o5cX3x/US5VhJxL4BPGPWCW34Xg8VRcHps1AWjaAnLD/U+bRSUJv\nxVkfsPtUkOFLhcJyZnqqpP/+aQmvDK2D5r/rMcYgzXcDdeabICSXf6bV0mVQHQ3I\n1qC6OzqhDovkELu1G+zZaWBfvXRHpY4SkVLQBQ0sTbMNVVrg9rA2nVJRvENQ8HIN\n7cpRqS3KKWC/4hxTSlV8uNFOO/+LAwoYzvkx3lnndK4hCL9JmSs=\n=AoJF\n-----END PGP SIGNATURE-----", "payload": "tree 24ac3a834e26bc14c6ae4aa282d264985118f89a\nparent ff8336b0a04237f3c151dd59cd915ad8eedfa093\nauthor flip1995 <hello@philkrones.com> 1579701368 +0100\ncommitter flip1995 <hello@philkrones.com> 1581496466 +0100\n\nGet {RUSTUP,MULTIRUST}_{HOME,TOOLCHAIN} from runtime environment\n\nKeep the fallback to compile-time environment\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5db351a1d502cb65f8807ec2c84f44756099ef3", "html_url": "https://github.com/rust-lang/rust/commit/f5db351a1d502cb65f8807ec2c84f44756099ef3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5db351a1d502cb65f8807ec2c84f44756099ef3/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff8336b0a04237f3c151dd59cd915ad8eedfa093", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff8336b0a04237f3c151dd59cd915ad8eedfa093", "html_url": "https://github.com/rust-lang/rust/commit/ff8336b0a04237f3c151dd59cd915ad8eedfa093"}], "stats": {"total": 39, "additions": 29, "deletions": 10}, "files": [{"sha": "097b796e785b1abcb79af905397c6b85b559873e", "filename": "src/driver.rs", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/f5db351a1d502cb65f8807ec2c84f44756099ef3/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5db351a1d502cb65f8807ec2c84f44756099ef3/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=f5db351a1d502cb65f8807ec2c84f44756099ef3", "patch": "@@ -281,6 +281,17 @@ fn report_clippy_ice(info: &panic::PanicInfo<'_>, bug_report_url: &str) {\n     }\n }\n \n+fn toolchain_path(home: Option<String>, toolchain: Option<String>) -> Option<PathBuf> {\n+    home.and_then(|home| {\n+        toolchain.map(|toolchain| {\n+            let mut path = PathBuf::from(home);\n+            path.push(\"toolchains\");\n+            path.push(toolchain);\n+            path\n+        })\n+    })\n+}\n+\n pub fn main() {\n     rustc_driver::init_rustc_env_logger();\n     lazy_static::initialize(&ICE_HOOK);\n@@ -301,22 +312,21 @@ pub fn main() {\n             //    - RUSTUP_HOME, MULTIRUST_HOME, RUSTUP_TOOLCHAIN, MULTIRUST_TOOLCHAIN\n             // - sysroot from rustc in the path\n             // - compile-time environment\n+            //    - SYSROOT\n+            //    - RUSTUP_HOME, MULTIRUST_HOME, RUSTUP_TOOLCHAIN, MULTIRUST_TOOLCHAIN\n             let sys_root_arg = arg_value(&orig_args, \"--sysroot\", |_| true);\n             let have_sys_root_arg = sys_root_arg.is_some();\n             let sys_root = sys_root_arg\n                 .map(PathBuf::from)\n                 .or_else(|| std::env::var(\"SYSROOT\").ok().map(PathBuf::from))\n                 .or_else(|| {\n-                    let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n-                    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-                    home.and_then(|home| {\n-                        toolchain.map(|toolchain| {\n-                            let mut path = PathBuf::from(home);\n-                            path.push(\"toolchains\");\n-                            path.push(toolchain);\n-                            path\n-                        })\n-                    })\n+                    let home = std::env::var(\"RUSTUP_HOME\")\n+                        .or_else(|_| std::env::var(\"MULTIRUST_HOME\"))\n+                        .ok();\n+                    let toolchain = std::env::var(\"RUSTUP_TOOLCHAIN\")\n+                        .or_else(|_| std::env::var(\"MULTIRUST_TOOLCHAIN\"))\n+                        .ok();\n+                    toolchain_path(home, toolchain)\n                 })\n                 .or_else(|| {\n                     Command::new(\"rustc\")\n@@ -328,6 +338,15 @@ pub fn main() {\n                         .map(|s| PathBuf::from(s.trim()))\n                 })\n                 .or_else(|| option_env!(\"SYSROOT\").map(PathBuf::from))\n+                .or_else(|| {\n+                    let home = option_env!(\"RUSTUP_HOME\")\n+                        .or(option_env!(\"MULTIRUST_HOME\"))\n+                        .map(ToString::to_string);\n+                    let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\")\n+                        .or(option_env!(\"MULTIRUST_TOOLCHAIN\"))\n+                        .map(ToString::to_string);\n+                    toolchain_path(home, toolchain)\n+                })\n                 .map(|pb| pb.to_string_lossy().to_string())\n                 .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\");\n "}]}