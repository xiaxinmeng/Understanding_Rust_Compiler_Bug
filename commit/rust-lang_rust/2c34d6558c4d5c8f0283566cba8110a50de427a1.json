{"sha": "2c34d6558c4d5c8f0283566cba8110a50de427a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMzRkNjU1OGM0ZDVjOGYwMjgzNTY2Y2JhODExMGE1MGRlNDI3YTE=", "commit": {"author": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-13T20:56:57Z"}, "committer": {"name": "Oliver 'ker' Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-11-13T20:56:57Z"}, "message": "also address TyStr in the null pointer optimization", "tree": {"sha": "8b7a537710fc54abe5003dee269a262003788ce7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b7a537710fc54abe5003dee269a262003788ce7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c34d6558c4d5c8f0283566cba8110a50de427a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c34d6558c4d5c8f0283566cba8110a50de427a1", "html_url": "https://github.com/rust-lang/rust/commit/2c34d6558c4d5c8f0283566cba8110a50de427a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c34d6558c4d5c8f0283566cba8110a50de427a1/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f71c31c0e866f87e7aaafc315b042c077ff302b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f71c31c0e866f87e7aaafc315b042c077ff302b5", "html_url": "https://github.com/rust-lang/rust/commit/f71c31c0e866f87e7aaafc315b042c077ff302b5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "3a4d875921a7324c9645dd1464fb8d71cae62e36", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2c34d6558c4d5c8f0283566cba8110a50de427a1/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c34d6558c4d5c8f0283566cba8110a50de427a1/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=2c34d6558c4d5c8f0283566cba8110a50de427a1", "patch": "@@ -734,12 +734,12 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n             ty::TyRef(_, ty::TypeAndMut { ty, .. }) |\n             ty::TyRawPtr(ty::TypeAndMut { ty, .. }) |\n             ty::TyBox(ty) => {\n-                assert!(!self.type_is_sized(ty));\n                 match (field_index, &self.tcx.struct_tail(ty).sty) {\n+                    (1, &ty::TyStr) |\n                     (1, &ty::TySlice(_)) => Ok(self.tcx.types.usize),\n                     (1, &ty::TyTrait(_)) |\n                     (0, _) => Ok(self.tcx.mk_imm_ptr(self.tcx.types.u8)),\n-                    _ => bug!(\"invalid fat pointee type\"),\n+                    _ => bug!(\"invalid fat pointee type: {}\", ty),\n                 }\n             }\n             _ => Err(EvalError::Unimplemented(format!(\"can't handle type: {:?}, {:?}\", ty, ty.sty))),"}]}