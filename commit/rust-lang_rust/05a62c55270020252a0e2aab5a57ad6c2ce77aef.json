{"sha": "05a62c55270020252a0e2aab5a57ad6c2ce77aef", "node_id": "C_kwDOAAsO6NoAKDA1YTYyYzU1MjcwMDIwMjUyYTBlMmFhYjVhNTdhZDZjMmNlNzdhZWY", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T10:42:29Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T10:42:29Z"}, "message": "Remove `clone_code` method", "tree": {"sha": "5ef68cfe3bdfb8f73a9fa3956e1583c5f6f492ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ef68cfe3bdfb8f73a9fa3956e1583c5f6f492ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05a62c55270020252a0e2aab5a57ad6c2ce77aef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05a62c55270020252a0e2aab5a57ad6c2ce77aef", "html_url": "https://github.com/rust-lang/rust/commit/05a62c55270020252a0e2aab5a57ad6c2ce77aef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05a62c55270020252a0e2aab5a57ad6c2ce77aef/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "html_url": "https://github.com/rust-lang/rust/commit/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23"}], "stats": {"total": 46, "additions": 15, "deletions": 31}, "files": [{"sha": "4df4de21a0f0789666f663b879ddde3f12f5f32c", "filename": "compiler/rustc_infer/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/05a62c55270020252a0e2aab5a57ad6c2ce77aef/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a62c55270020252a0e2aab5a57ad6c2ce77aef/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ftraits%2Fmod.rs?ref=05a62c55270020252a0e2aab5a57ad6c2ce77aef", "patch": "@@ -80,7 +80,7 @@ impl<'tcx> TraitObligation<'tcx> {\n \n     pub fn derived_cause(\n         &self,\n-        variant: fn(DerivedObligationCause<'tcx>) -> ObligationCauseCode<'tcx>,\n+        variant: impl FnOnce(DerivedObligationCause<'tcx>) -> ObligationCauseCode<'tcx>,\n     ) -> ObligationCause<'tcx> {\n         self.cause.clone().derived_cause(self.predicate, variant)\n     }"}, {"sha": "31744671d3a16c20397a35119c19e89adb3321fd", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/05a62c55270020252a0e2aab5a57ad6c2ce77aef/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a62c55270020252a0e2aab5a57ad6c2ce77aef/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=05a62c55270020252a0e2aab5a57ad6c2ce77aef", "patch": "@@ -163,13 +163,6 @@ impl<'tcx> ObligationCause<'tcx> {\n         self.code.as_deref().unwrap_or(&MISC_OBLIGATION_CAUSE_CODE)\n     }\n \n-    pub fn clone_code(&self) -> Lrc<ObligationCauseCode<'tcx>> {\n-        match &self.code {\n-            Some(code) => code.clone(),\n-            None => Lrc::new(MISC_OBLIGATION_CAUSE_CODE),\n-        }\n-    }\n-\n     pub fn map_code(\n         &mut self,\n         f: impl FnOnce(Lrc<ObligationCauseCode<'tcx>>) -> Lrc<ObligationCauseCode<'tcx>>,"}, {"sha": "0650e847d9ea3c4ecc42814baf4084687b29eecd", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 14, "deletions": 23, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/05a62c55270020252a0e2aab5a57ad6c2ce77aef/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a62c55270020252a0e2aab5a57ad6c2ce77aef/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=05a62c55270020252a0e2aab5a57ad6c2ce77aef", "patch": "@@ -19,14 +19,13 @@ use rustc_span::def_id::DefId;\n use crate::traits::project::{normalize_with_depth, normalize_with_depth_to};\n use crate::traits::util::{self, closure_trait_ref_and_return_type, predicate_for_trait_def};\n use crate::traits::{\n-    BuiltinDerivedObligation, DerivedObligationCause, ImplDerivedObligation,\n-    ImplDerivedObligationCause, ImplSource, ImplSourceAutoImplData, ImplSourceBuiltinData,\n-    ImplSourceClosureData, ImplSourceConstDestructData, ImplSourceDiscriminantKindData,\n-    ImplSourceFnPointerData, ImplSourceGeneratorData, ImplSourceObjectData, ImplSourcePointeeData,\n-    ImplSourceTraitAliasData, ImplSourceTraitUpcastingData, ImplSourceUserDefinedData, Normalized,\n-    ObjectCastObligation, Obligation, ObligationCause, OutputTypeParameterMismatch,\n-    PredicateObligation, Selection, SelectionError, TraitNotObjectSafe, TraitObligation,\n-    Unimplemented, VtblSegment,\n+    BuiltinDerivedObligation, ImplDerivedObligation, ImplDerivedObligationCause, ImplSource,\n+    ImplSourceAutoImplData, ImplSourceBuiltinData, ImplSourceClosureData,\n+    ImplSourceConstDestructData, ImplSourceDiscriminantKindData, ImplSourceFnPointerData,\n+    ImplSourceGeneratorData, ImplSourceObjectData, ImplSourcePointeeData, ImplSourceTraitAliasData,\n+    ImplSourceTraitUpcastingData, ImplSourceUserDefinedData, Normalized, ObjectCastObligation,\n+    Obligation, ObligationCause, OutputTypeParameterMismatch, PredicateObligation, Selection,\n+    SelectionError, TraitNotObjectSafe, TraitObligation, Unimplemented, VtblSegment,\n };\n \n use super::BuiltinImplConditions;\n@@ -1125,21 +1124,13 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 let substs = self.rematch_impl(impl_def_id, &new_obligation);\n                 debug!(?substs, \"impl substs\");\n \n-                let derived = DerivedObligationCause {\n-                    parent_trait_pred: obligation.predicate,\n-                    parent_code: obligation.cause.clone_code(),\n-                };\n-                let derived_code = ImplDerivedObligation(Box::new(ImplDerivedObligationCause {\n-                    derived,\n-                    impl_def_id,\n-                    span: obligation.cause.span,\n-                }));\n-\n-                let cause = ObligationCause::new(\n-                    obligation.cause.span,\n-                    obligation.cause.body_id,\n-                    derived_code,\n-                );\n+                let cause = obligation.derived_cause(|derived| {\n+                    ImplDerivedObligation(Box::new(ImplDerivedObligationCause {\n+                        derived,\n+                        impl_def_id,\n+                        span: obligation.cause.span,\n+                    }))\n+                });\n                 ensure_sufficient_stack(|| {\n                     self.vtable_impl(\n                         impl_def_id,"}]}