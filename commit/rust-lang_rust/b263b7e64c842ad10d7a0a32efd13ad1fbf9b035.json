{"sha": "b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "node_id": "C_kwDOAAsO6NoAKGIyNjNiN2U2NGM4NDJhZDEwZDdhMGEzMmVmZDEzYWQxZmJmOWIwMzU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-09-28T04:07:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-28T04:07:18Z"}, "message": "Rollup merge of #102338 - compiler-errors:assoc-ty-binding-in-assoc-ty-binding, r=cjgillot\n\nDeny associated type bindings within associated type bindings\n\nFixes #102335\n\nThis was made worse by #100865, which unified the way we generate substs for GATs and non-generic associated types. However, the issue was not _caused_ by #100865, evidenced by the test I added for GATs:\n\n```rust\ntrait T {\n    type A: S<C<(), i32 = ()> = ()>;\n    //~^ ERROR associated type bindings are not allowed here\n}\n\ntrait Q {}\n\ntrait S {\n    type C<T>: Q;\n}\n\nfn main() {}\n```\n\n^ which passes on beta (where GATs are stable) and presumably ever since GATs support was added to `create_substs_for_associated_item` in astconv.", "tree": {"sha": "9e9254e530abd128f8963c7fc8a210c44a11c94a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e9254e530abd128f8963c7fc8a210c44a11c94a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjM8h2CRBK7hj4Ov3rIwAAuekIAAZe9qo5SIlF6RF6Gvo2qgFx\nljVKxp856kF5yetN58CoNe4+p56oHdvxY625juh2SHKfCFmeCOXcFXXHLMajXEBi\nyVn50vHpFLVaNT1WQwK+HkLrP+50rGyaNNPGGGiNoMtDRYEA4Du7vWxJ4Qjp5I/G\na4TnfR7SJmvw1AjjK6RiyDv/01A4ej4Z8Zm/RYa95aVrutWvvTM+Bh8ByaoPQxrJ\nGwNB1kQUvn8F0ZjITXK4jVAMTtZ6vBj+BPvheQKvf2dQoIYhteS3YafRx/rKK/C3\nFWY+f139vHgs0jlqRl8B7EC9bGIBd0gg1iafklCL+0I26v/UnuQd20fb9sy/aiU=\n=0CaH\n-----END PGP SIGNATURE-----\n", "payload": "tree 9e9254e530abd128f8963c7fc8a210c44a11c94a\nparent 9436ffc226fa8e0359d19932c246b14d93d6e586\nparent ca2e0bb51ad1a00190430134c67da5cda356745e\nauthor Yuki Okushi <jtitor@2k36.org> 1664338038 +0900\ncommitter GitHub <noreply@github.com> 1664338038 +0900\n\nRollup merge of #102338 - compiler-errors:assoc-ty-binding-in-assoc-ty-binding, r=cjgillot\n\nDeny associated type bindings within associated type bindings\n\nFixes #102335\n\nThis was made worse by #100865, which unified the way we generate substs for GATs and non-generic associated types. However, the issue was not _caused_ by #100865, evidenced by the test I added for GATs:\n\n```rust\ntrait T {\n    type A: S<C<(), i32 = ()> = ()>;\n    //~^ ERROR associated type bindings are not allowed here\n}\n\ntrait Q {}\n\ntrait S {\n    type C<T>: Q;\n}\n\nfn main() {}\n```\n\n^ which passes on beta (where GATs are stable) and presumably ever since GATs support was added to `create_substs_for_associated_item` in astconv.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "html_url": "https://github.com/rust-lang/rust/commit/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9436ffc226fa8e0359d19932c246b14d93d6e586", "url": "https://api.github.com/repos/rust-lang/rust/commits/9436ffc226fa8e0359d19932c246b14d93d6e586", "html_url": "https://github.com/rust-lang/rust/commit/9436ffc226fa8e0359d19932c246b14d93d6e586"}, {"sha": "ca2e0bb51ad1a00190430134c67da5cda356745e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca2e0bb51ad1a00190430134c67da5cda356745e", "html_url": "https://github.com/rust-lang/rust/commit/ca2e0bb51ad1a00190430134c67da5cda356745e"}], "stats": {"total": 87, "additions": 82, "deletions": 5}, "files": [{"sha": "244018ebbeb7434cd6681b01319ca30a3f9c94ce", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -595,16 +595,22 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n             \"create_substs_for_associated_item(span: {:?}, item_def_id: {:?}, item_segment: {:?}\",\n             span, item_def_id, item_segment\n         );\n-        self.create_substs_for_ast_path(\n+        let (args, _) = self.create_substs_for_ast_path(\n             span,\n             item_def_id,\n             parent_substs,\n             item_segment,\n             item_segment.args(),\n             item_segment.infer_args,\n             None,\n-        )\n-        .0\n+        );\n+\n+        let assoc_bindings = self.create_assoc_bindings_for_generic_args(item_segment.args());\n+        if let Some(b) = assoc_bindings.first() {\n+            Self::prohibit_assoc_ty_binding(self.tcx(), b.span);\n+        }\n+\n+        args\n     }\n \n     /// Instantiates the path for the given trait reference, assuming that it's"}, {"sha": "f60cb92da7f6b8eb1c9e001eedab7e62fee02170", "filename": "src/test/ui/associated-consts/issue-102335-const.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-102335-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-102335-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-102335-const.rs?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -0,0 +1,12 @@\n+#![feature(associated_const_equality)]\n+\n+trait T {\n+    type A: S<C<X = 0i32> = 34>;\n+    //~^ ERROR associated type bindings are not allowed here\n+}\n+\n+trait S {\n+    const C: i32;\n+}\n+\n+fn main() {}"}, {"sha": "531d15c5900c58d81024597c2b7aa4e6ba61b88a", "filename": "src/test/ui/associated-consts/issue-102335-const.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-102335-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-102335-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-consts%2Fissue-102335-const.stderr?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -0,0 +1,9 @@\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-102335-const.rs:4:17\n+   |\n+LL |     type A: S<C<X = 0i32> = 34>;\n+   |                 ^^^^^^^^ associated type not allowed here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0229`."}, {"sha": "363df73c1ffd7d84b4376b83465e622f324a2370", "filename": "src/test/ui/associated-type-bounds/issue-102335-ty.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fissue-102335-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fissue-102335-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fissue-102335-ty.rs?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -0,0 +1,12 @@\n+trait T {\n+    type A: S<C<i32 = u32> = ()>;\n+    //~^ ERROR associated type bindings are not allowed here\n+}\n+\n+trait Q {}\n+\n+trait S {\n+    type C: Q;\n+}\n+\n+fn main() {}"}, {"sha": "8777b2965153a8b23f8ebcd5bb7ce3a407d16a68", "filename": "src/test/ui/associated-type-bounds/issue-102335-ty.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fissue-102335-ty.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fissue-102335-ty.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-type-bounds%2Fissue-102335-ty.stderr?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -0,0 +1,9 @@\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-102335-ty.rs:2:17\n+   |\n+LL |     type A: S<C<i32 = u32> = ()>;\n+   |                 ^^^^^^^^^ associated type not allowed here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0229`."}, {"sha": "a7255fdcbf5e10c569e6a78c451599ec063cb91b", "filename": "src/test/ui/generic-associated-types/issue-102335-gat.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-102335-gat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-102335-gat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-102335-gat.rs?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -0,0 +1,12 @@\n+trait T {\n+    type A: S<C<(), i32 = ()> = ()>;\n+    //~^ ERROR associated type bindings are not allowed here\n+}\n+\n+trait Q {}\n+\n+trait S {\n+    type C<T>: Q;\n+}\n+\n+fn main() {}"}, {"sha": "7a7900a1e656ab6912c828aa9dc3f77b76e77eef", "filename": "src/test/ui/generic-associated-types/issue-102335-gat.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-102335-gat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-102335-gat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fissue-102335-gat.stderr?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -0,0 +1,9 @@\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-102335-gat.rs:2:21\n+   |\n+LL |     type A: S<C<(), i32 = ()> = ()>;\n+   |                     ^^^^^^^^ associated type not allowed here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0229`."}, {"sha": "02b5fb61894e9fc60a7615532e8fcb272b2b0795", "filename": "src/test/ui/suggestions/issue-85347.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85347.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85347.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85347.rs?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -2,6 +2,7 @@ use std::ops::Deref;\n trait Foo {\n     type Bar<'a>: Deref<Target = <Self>::Bar<Target = Self>>;\n     //~^ ERROR this associated type takes 1 lifetime argument but 0 lifetime arguments were supplied\n+    //~| ERROR associated type bindings are not allowed here\n     //~| HELP add missing\n }\n "}, {"sha": "17c1b7dc4cce992a111da46f6cd0478896146722", "filename": "src/test/ui/suggestions/issue-85347.stderr", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85347.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b263b7e64c842ad10d7a0a32efd13ad1fbf9b035/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85347.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-85347.stderr?ref=b263b7e64c842ad10d7a0a32efd13ad1fbf9b035", "patch": "@@ -14,6 +14,13 @@ help: add missing lifetime argument\n LL |     type Bar<'a>: Deref<Target = <Self>::Bar<'a, Target = Self>>;\n    |                                              +++\n \n-error: aborting due to previous error\n+error[E0229]: associated type bindings are not allowed here\n+  --> $DIR/issue-85347.rs:3:46\n+   |\n+LL |     type Bar<'a>: Deref<Target = <Self>::Bar<Target = Self>>;\n+   |                                              ^^^^^^^^^^^^^ associated type not allowed here\n+\n+error: aborting due to 2 previous errors\n \n-For more information about this error, try `rustc --explain E0107`.\n+Some errors have detailed explanations: E0107, E0229.\n+For more information about an error, try `rustc --explain E0107`."}]}