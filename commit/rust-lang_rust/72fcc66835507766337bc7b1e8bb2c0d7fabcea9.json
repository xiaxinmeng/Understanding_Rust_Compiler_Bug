{"sha": "72fcc66835507766337bc7b1e8bb2c0d7fabcea9", "node_id": "C_kwDOAAsO6NoAKDcyZmNjNjY4MzU1MDc3NjYzMzdiYzdiMWU4YmIyYzBkN2ZhYmNlYTk", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2022-04-18T06:26:00Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2022-04-18T06:26:00Z"}, "message": "More visibility for switch workspaces and its states", "tree": {"sha": "039b9988e2e6205c6f95402fbc5d37ea659363d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/039b9988e2e6205c6f95402fbc5d37ea659363d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72fcc66835507766337bc7b1e8bb2c0d7fabcea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72fcc66835507766337bc7b1e8bb2c0d7fabcea9", "html_url": "https://github.com/rust-lang/rust/commit/72fcc66835507766337bc7b1e8bb2c0d7fabcea9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72fcc66835507766337bc7b1e8bb2c0d7fabcea9/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65fbe0a8d17fc257f037f4dd465bff69a3d3054a", "url": "https://api.github.com/repos/rust-lang/rust/commits/65fbe0a8d17fc257f037f4dd465bff69a3d3054a", "html_url": "https://github.com/rust-lang/rust/commit/65fbe0a8d17fc257f037f4dd465bff69a3d3054a"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "3ac64e66b521a531cecd09ca5275b594c40900b0", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/72fcc66835507766337bc7b1e8bb2c0d7fabcea9/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fcc66835507766337bc7b1e8bb2c0d7fabcea9/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=72fcc66835507766337bc7b1e8bb2c0d7fabcea9", "patch": "@@ -236,7 +236,7 @@ impl GlobalState {\n                                     self.fetch_workspaces_queue.op_completed(workspaces);\n \n                                     let old = Arc::clone(&self.workspaces);\n-                                    self.switch_workspaces();\n+                                    self.switch_workspaces(\"fetched workspace\".to_string());\n                                     let workspaces_updated = !Arc::ptr_eq(&old, &self.workspaces);\n \n                                     if self.config.run_build_scripts() && workspaces_updated {\n@@ -259,7 +259,7 @@ impl GlobalState {\n                                 BuildDataProgress::End(build_data_result) => {\n                                     self.fetch_build_data_queue.op_completed(build_data_result);\n \n-                                    self.switch_workspaces();\n+                                    self.switch_workspaces(\"fetched build data\".to_string());\n \n                                     (Some(Progress::End), None)\n                                 }"}, {"sha": "b68f9d5f59dd2ced8dfb3d2a0449ce10181bf64b", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/72fcc66835507766337bc7b1e8bb2c0d7fabcea9/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72fcc66835507766337bc7b1e8bb2c0d7fabcea9/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=72fcc66835507766337bc7b1e8bb2c0d7fabcea9", "patch": "@@ -166,9 +166,9 @@ impl GlobalState {\n         });\n     }\n \n-    pub(crate) fn switch_workspaces(&mut self) {\n+    pub(crate) fn switch_workspaces(&mut self, cause: Cause) {\n         let _p = profile::span(\"GlobalState::switch_workspaces\");\n-        tracing::info!(\"will switch workspaces\");\n+        tracing::info!(%cause, \"will switch workspaces\");\n \n         if let Err(error_message) = self.fetch_workspace_error() {\n             self.show_and_log_error(error_message, None);\n@@ -224,6 +224,8 @@ impl GlobalState {\n         if same_workspaces {\n             let (workspaces, build_scripts) = self.fetch_build_data_queue.last_op_result();\n             if Arc::ptr_eq(workspaces, &self.workspaces) {\n+                tracing::debug!(\"set build scripts to workspaces\");\n+\n                 let workspaces = workspaces\n                     .iter()\n                     .cloned()\n@@ -237,11 +239,14 @@ impl GlobalState {\n                 // Workspaces are the same, but we've updated build data.\n                 self.workspaces = Arc::new(workspaces);\n             } else {\n+                tracing::info!(\"build scrips do not match the version of the active workspace\");\n                 // Current build scripts do not match the version of the active\n                 // workspace, so there's nothing for us to update.\n                 return;\n             }\n         } else {\n+            tracing::debug!(\"abandon build scripts for workspaces\");\n+\n             // Here, we completely changed the workspace (Cargo.toml edit), so\n             // we don't care about build-script results, they are stale.\n             self.workspaces = Arc::new(workspaces)"}]}