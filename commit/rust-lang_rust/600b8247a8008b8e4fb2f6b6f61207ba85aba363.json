{"sha": "600b8247a8008b8e4fb2f6b6f61207ba85aba363", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMGI4MjQ3YTgwMDhiOGU0ZmIyZjZiNmY2MTIwN2JhODVhYmEzNjM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-10T00:14:55Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-07-16T06:53:31Z"}, "message": "Rename `sym::item_context` as `sym::ItemContext`.\n\nBecause it represents the symbol `ItemContext`, and `sym` identifiers\nare supposed to match the actual symbol whenever possible.", "tree": {"sha": "96b89b9644a01ddb5030f5d768a69b6f1fd6a473", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96b89b9644a01ddb5030f5d768a69b6f1fd6a473"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/600b8247a8008b8e4fb2f6b6f61207ba85aba363", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/600b8247a8008b8e4fb2f6b6f61207ba85aba363", "html_url": "https://github.com/rust-lang/rust/commit/600b8247a8008b8e4fb2f6b6f61207ba85aba363", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/600b8247a8008b8e4fb2f6b6f61207ba85aba363/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd8f1772347d122b223ef573aeaa34cfa93ceec5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd8f1772347d122b223ef573aeaa34cfa93ceec5", "html_url": "https://github.com/rust-lang/rust/commit/fd8f1772347d122b223ef573aeaa34cfa93ceec5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "75f588918a020185b84f1338f35e90c2fdc06fd6", "filename": "src/librustc_span/symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/600b8247a8008b8e4fb2f6b6f61207ba85aba363/src%2Flibrustc_span%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600b8247a8008b8e4fb2f6b6f61207ba85aba363/src%2Flibrustc_span%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_span%2Fsymbol.rs?ref=600b8247a8008b8e4fb2f6b6f61207ba85aba363", "patch": "@@ -145,6 +145,7 @@ symbols! {\n         HashSet,\n         Input,\n         IntoIterator,\n+        ItemContext,\n         Iterator,\n         Layout,\n         LintPass,\n@@ -553,7 +554,6 @@ symbols! {\n         issue_5723_bootstrap,\n         issue_tracker_base_url,\n         item,\n-        item_context: \"ItemContext\",\n         item_like_imports,\n         iter,\n         keyword,"}, {"sha": "d2b9f84af33ae3e100e2818cbffa13c3414ed1a8", "filename": "src/librustc_trait_selection/traits/error_reporting/on_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/600b8247a8008b8e4fb2f6b6f61207ba85aba363/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600b8247a8008b8e4fb2f6b6f61207ba85aba363/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fon_unimplemented.rs?ref=600b8247a8008b8e4fb2f6b6f61207ba85aba363", "patch": "@@ -126,7 +126,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n \n         let mut flags = vec![];\n         flags.push((\n-            sym::item_context,\n+            sym::ItemContext,\n             self.describe_enclosure(obligation.cause.body_id).map(|s| s.to_owned()),\n         ));\n "}, {"sha": "deb33708681fa3ba8e9b1781f7d4100477fd54cf", "filename": "src/librustc_trait_selection/traits/on_unimplemented.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/600b8247a8008b8e4fb2f6b6f61207ba85aba363/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600b8247a8008b8e4fb2f6b6f61207ba85aba363/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Fon_unimplemented.rs?ref=600b8247a8008b8e4fb2f6b6f61207ba85aba363", "patch": "@@ -286,7 +286,7 @@ impl<'tcx> OnUnimplementedFormatString {\n                     // `{from_desugaring}` is allowed\n                     Position::ArgumentNamed(s) if s == sym::from_desugaring => (),\n                     // `{ItemContext}` is allowed\n-                    Position::ArgumentNamed(s) if s == sym::item_context => (),\n+                    Position::ArgumentNamed(s) if s == sym::ItemContext => (),\n                     // So is `{A}` if A is a type parameter\n                     Position::ArgumentNamed(s) => {\n                         match generics.params.iter().find(|param| param.name == s) {\n@@ -350,7 +350,7 @@ impl<'tcx> OnUnimplementedFormatString {\n \n         let s = self.0.as_str();\n         let parser = Parser::new(&s, None, None, false, ParseMode::Format);\n-        let item_context = (options.get(&sym::item_context)).unwrap_or(&empty_string);\n+        let item_context = (options.get(&sym::ItemContext)).unwrap_or(&empty_string);\n         parser\n             .map(|p| match p {\n                 Piece::String(s) => s,\n@@ -364,7 +364,7 @@ impl<'tcx> OnUnimplementedFormatString {\n                             } else if s == sym::from_desugaring || s == sym::from_method {\n                                 // don't break messages using these two arguments incorrectly\n                                 &empty_string\n-                            } else if s == sym::item_context {\n+                            } else if s == sym::ItemContext {\n                                 &item_context\n                             } else {\n                                 bug!("}]}