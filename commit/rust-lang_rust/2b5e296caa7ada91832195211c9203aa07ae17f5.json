{"sha": "2b5e296caa7ada91832195211c9203aa07ae17f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNWUyOTZjYWE3YWRhOTE4MzIxOTUyMTFjOTIwM2FhMDdhZTE3ZjU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-03T14:25:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-03T14:25:04Z"}, "message": "Rollup merge of #60455 - estebank:resolve-match-arm-ty, r=davidtwco\n\nResolve match arm ty when arms diverge\n\nFix #58695.", "tree": {"sha": "8c694f050d1483790563dd301670a4e4eabd3a5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c694f050d1483790563dd301670a4e4eabd3a5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b5e296caa7ada91832195211c9203aa07ae17f5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJczE9ACRBK7hj4Ov3rIwAAdHIIAF+56KnL4Y2k7v7HENvjbztj\nnLXqUyBCAX8ZiukVhM1QcDZ9L2qMd1GhHAiA7p7XJG0nET52HIt4v3/EuY+0pyEj\nA83v0zvLf9QPFLTfYXzLVMxlVkd4pPPVSfRxSj8BgoSE7mFFzPTnOXJpQhzycD+r\nGduZWU0NUSDFgSI545dSOCu98OXoiNHqh4VHFrjyQECY9FI2LXrdsQdxcg0u9IJf\nO8QWj9dDeSTqeTL2qlFXgRaUI2vGfv8ZEsxujVXbVm3xpXer14/0A36l95t2ZRqr\nZIKb/RqZzGU+xPW2ehWOLv8O41rBr10vw6Ehj07t6vY5FL6O6s0V+W55VmLVIyg=\n=qzdE\n-----END PGP SIGNATURE-----\n", "payload": "tree 8c694f050d1483790563dd301670a4e4eabd3a5b\nparent f6228615bdc757a89f0a8225f939a64b60d19e9e\nparent 24fddb15e86a46e6057c8c0f2f0fb18844f50049\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556893504 +0200\ncommitter GitHub <noreply@github.com> 1556893504 +0200\n\nRollup merge of #60455 - estebank:resolve-match-arm-ty, r=davidtwco\n\nResolve match arm ty when arms diverge\n\nFix #58695.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b5e296caa7ada91832195211c9203aa07ae17f5", "html_url": "https://github.com/rust-lang/rust/commit/2b5e296caa7ada91832195211c9203aa07ae17f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b5e296caa7ada91832195211c9203aa07ae17f5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6228615bdc757a89f0a8225f939a64b60d19e9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6228615bdc757a89f0a8225f939a64b60d19e9e", "html_url": "https://github.com/rust-lang/rust/commit/f6228615bdc757a89f0a8225f939a64b60d19e9e"}, {"sha": "24fddb15e86a46e6057c8c0f2f0fb18844f50049", "url": "https://api.github.com/repos/rust-lang/rust/commits/24fddb15e86a46e6057c8c0f2f0fb18844f50049", "html_url": "https://github.com/rust-lang/rust/commit/24fddb15e86a46e6057c8c0f2f0fb18844f50049"}], "stats": {"total": 61, "additions": 43, "deletions": 18}, "files": [{"sha": "95b566d4a1b6933736e3c4fc12756e5f7bd7974f", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2b5e296caa7ada91832195211c9203aa07ae17f5/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b5e296caa7ada91832195211c9203aa07ae17f5/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=2b5e296caa7ada91832195211c9203aa07ae17f5", "patch": "@@ -644,7 +644,7 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n                         for sp in prior_arms {\n                             err.span_label(*sp, format!(\n                                 \"this is found to be of type `{}`\",\n-                                last_ty,\n+                                self.resolve_type_vars_if_possible(&last_ty),\n                             ));\n                         }\n                     } else if let Some(sp) = prior_arms.last() {"}, {"sha": "8dfbf1019e9a402245b73b6acd8abf86fd46cd2c", "filename": "src/test/ui/match/match-type-err-first-arm.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2b5e296caa7ada91832195211c9203aa07ae17f5/src%2Ftest%2Fui%2Fmatch%2Fmatch-type-err-first-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b5e296caa7ada91832195211c9203aa07ae17f5/src%2Ftest%2Fui%2Fmatch%2Fmatch-type-err-first-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-type-err-first-arm.rs?ref=2b5e296caa7ada91832195211c9203aa07ae17f5", "patch": "@@ -3,8 +3,7 @@ fn main() {\n     let _ = test_func2(1);\n }\n \n-fn test_func1(n: i32) -> i32 {\n-    //~^ NOTE expected `i32` because of return type\n+fn test_func1(n: i32) -> i32 { //~ NOTE expected `i32` because of return type\n     match n {\n         12 => 'b',\n         //~^ ERROR mismatched types\n@@ -14,10 +13,8 @@ fn test_func1(n: i32) -> i32 {\n }\n \n fn test_func2(n: i32) -> i32 {\n-    let x = match n {\n-    //~^ NOTE `match` arms have incompatible types\n-        12 => 'b',\n-        //~^ NOTE this is found to be of type `char`\n+    let x = match n { //~ NOTE `match` arms have incompatible types\n+        12 => 'b', //~ NOTE this is found to be of type `char`\n         _ => 42,\n         //~^ ERROR match arms have incompatible types\n         //~| NOTE expected char, found integer\n@@ -27,8 +24,7 @@ fn test_func2(n: i32) -> i32 {\n }\n \n fn test_func3(n: i32) -> i32 {\n-    let x = match n {\n-    //~^ NOTE `match` arms have incompatible types\n+    let x = match n { //~ NOTE `match` arms have incompatible types\n         1 => 'b',\n         2 => 'b',\n         3 => 'b',\n@@ -43,3 +39,15 @@ fn test_func3(n: i32) -> i32 {\n     };\n     x\n }\n+\n+fn test_func4() {\n+    match Some(0u32) { //~ NOTE `match` arms have incompatible types\n+        Some(x) => {\n+            x //~ NOTE this is found to be of type `u32`\n+        },\n+        None => {}\n+        //~^ ERROR match arms have incompatible types\n+        //~| NOTE expected u32, found ()\n+        //~| NOTE expected type `u32`\n+    };\n+}"}, {"sha": "e0553fca683a557aec0c25492fc2eda0b3bcf2d2", "filename": "src/test/ui/match/match-type-err-first-arm.stderr", "status": "modified", "additions": 26, "deletions": 9, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/2b5e296caa7ada91832195211c9203aa07ae17f5/src%2Ftest%2Fui%2Fmatch%2Fmatch-type-err-first-arm.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b5e296caa7ada91832195211c9203aa07ae17f5/src%2Ftest%2Fui%2Fmatch%2Fmatch-type-err-first-arm.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatch%2Fmatch-type-err-first-arm.stderr?ref=2b5e296caa7ada91832195211c9203aa07ae17f5", "patch": "@@ -1,24 +1,23 @@\n error[E0308]: mismatched types\n-  --> $DIR/match-type-err-first-arm.rs:9:15\n+  --> $DIR/match-type-err-first-arm.rs:8:15\n    |\n LL | fn test_func1(n: i32) -> i32 {\n    |                          --- expected `i32` because of return type\n-...\n+LL |     match n {\n LL |         12 => 'b',\n    |               ^^^ expected i32, found char\n \n error[E0308]: match arms have incompatible types\n-  --> $DIR/match-type-err-first-arm.rs:21:14\n+  --> $DIR/match-type-err-first-arm.rs:18:14\n    |\n LL |       let x = match n {\n    |  _____________-\n-LL | |\n LL | |         12 => 'b',\n    | |               --- this is found to be of type `char`\n-LL | |\n LL | |         _ => 42,\n    | |              ^^ expected char, found integer\n-...  |\n+LL | |\n+LL | |\n LL | |\n LL | |     };\n    | |_____- `match` arms have incompatible types\n@@ -27,13 +26,13 @@ LL | |     };\n               found type `{integer}`\n \n error[E0308]: match arms have incompatible types\n-  --> $DIR/match-type-err-first-arm.rs:39:14\n+  --> $DIR/match-type-err-first-arm.rs:35:14\n    |\n LL |       let x = match n {\n    |  _____________-\n-LL | |\n LL | |         1 => 'b',\n LL | |         2 => 'b',\n+LL | |         3 => 'b',\n ...  |\n LL | |         6 => 'b',\n    | |              --- this and all prior arms are found to be of type `char`\n@@ -48,6 +47,24 @@ LL | |     };\n    = note: expected type `char`\n               found type `{integer}`\n \n-error: aborting due to 3 previous errors\n+error[E0308]: match arms have incompatible types\n+  --> $DIR/match-type-err-first-arm.rs:48:17\n+   |\n+LL | /     match Some(0u32) {\n+LL | |         Some(x) => {\n+LL | |             x\n+   | |             - this is found to be of type `u32`\n+LL | |         },\n+LL | |         None => {}\n+   | |                 ^^ expected u32, found ()\n+...  |\n+LL | |\n+LL | |     };\n+   | |_____- `match` arms have incompatible types\n+   |\n+   = note: expected type `u32`\n+              found type `()`\n+\n+error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}