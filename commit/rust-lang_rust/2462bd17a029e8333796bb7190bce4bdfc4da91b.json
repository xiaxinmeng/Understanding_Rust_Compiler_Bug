{"sha": "2462bd17a029e8333796bb7190bce4bdfc4da91b", "node_id": "C_kwDOAAsO6NoAKDI0NjJiZDE3YTAyOWU4MzMzNzk2YmI3MTkwYmNlNGJkZmM0ZGE5MWI", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-08-09T05:51:16Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2022-08-09T05:51:16Z"}, "message": "compiletest: Add warning and comment about running tests without RUSTC", "tree": {"sha": "688fbf166ace4d8a5248f90a78cabffbbe8d5e1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/688fbf166ace4d8a5248f90a78cabffbbe8d5e1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2462bd17a029e8333796bb7190bce4bdfc4da91b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2462bd17a029e8333796bb7190bce4bdfc4da91b", "html_url": "https://github.com/rust-lang/rust/commit/2462bd17a029e8333796bb7190bce4bdfc4da91b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2462bd17a029e8333796bb7190bce4bdfc4da91b/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c86e523d97104d508b98747079f12edd3b53a672", "url": "https://api.github.com/repos/rust-lang/rust/commits/c86e523d97104d508b98747079f12edd3b53a672", "html_url": "https://github.com/rust-lang/rust/commit/c86e523d97104d508b98747079f12edd3b53a672"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "bcd222b5a93220f8dd010b11cd829fbdb179be83", "filename": "src/tools/compiletest/src/header/tests.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2462bd17a029e8333796bb7190bce4bdfc4da91b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2462bd17a029e8333796bb7190bce4bdfc4da91b/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Ftests.rs?ref=2462bd17a029e8333796bb7190bce4bdfc4da91b", "patch": "@@ -58,7 +58,22 @@ fn config() -> Config {\n     ];\n     let mut args: Vec<String> = args.iter().map(ToString::to_string).collect();\n     args.push(\"--rustc-path\".to_string());\n-    args.push(std::env::var(\"RUSTC\").unwrap_or_else(|_| \"rustc\".to_string()));\n+    // This is a subtle/fragile thing. On rust-lang CI, there is no global\n+    // `rustc`, and Cargo doesn't offer a convenient way to get the path to\n+    // `rustc`. Fortunately bootstrap sets `RUSTC` for us, which is pointing\n+    // to the stage0 compiler.\n+    //\n+    // Otherwise, if you are running compiletests's tests manually, you\n+    // probably don't have `RUSTC` set, in which case this falls back to the\n+    // global rustc. If your global rustc is too far out of sync with stage0,\n+    // then this may cause confusing errors. Or if for some reason you don't\n+    // have rustc in PATH, that would also fail.\n+    args.push(std::env::var(\"RUSTC\").unwrap_or_else(|_| {\n+        eprintln!(\n+            \"warning: RUSTC not set, using global rustc (are you not running via bootstrap?)\"\n+        );\n+        \"rustc\".to_string()\n+    }));\n     crate::parse_config(args)\n }\n "}]}