{"sha": "75f0f7af3172cedaa01e9bf066c06017bfe9a426", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZjBmN2FmMzE3MmNlZGFhMDFlOWJmMDY2YzA2MDE3YmZlOWE0MjY=", "commit": {"author": {"name": "Anthony Ramine", "email": "nox@nox.paris", "date": "2020-09-12T11:27:57Z"}, "committer": {"name": "Anthony Ramine", "email": "nox@nox.paris", "date": "2020-09-12T16:35:57Z"}, "message": "Fix a typo", "tree": {"sha": "09fe451b890a9c7aa75e04087ff900c7601fe5a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09fe451b890a9c7aa75e04087ff900c7601fe5a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75f0f7af3172cedaa01e9bf066c06017bfe9a426", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75f0f7af3172cedaa01e9bf066c06017bfe9a426", "html_url": "https://github.com/rust-lang/rust/commit/75f0f7af3172cedaa01e9bf066c06017bfe9a426", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75f0f7af3172cedaa01e9bf066c06017bfe9a426/comments", "author": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nox", "id": 123095, "node_id": "MDQ6VXNlcjEyMzA5NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/123095?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nox", "html_url": "https://github.com/nox", "followers_url": "https://api.github.com/users/nox/followers", "following_url": "https://api.github.com/users/nox/following{/other_user}", "gists_url": "https://api.github.com/users/nox/gists{/gist_id}", "starred_url": "https://api.github.com/users/nox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nox/subscriptions", "organizations_url": "https://api.github.com/users/nox/orgs", "repos_url": "https://api.github.com/users/nox/repos", "events_url": "https://api.github.com/users/nox/events{/privacy}", "received_events_url": "https://api.github.com/users/nox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f0047ed108889ea97ad7656307a8a829dd56636", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f0047ed108889ea97ad7656307a8a829dd56636", "html_url": "https://github.com/rust-lang/rust/commit/4f0047ed108889ea97ad7656307a8a829dd56636"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "00f27bb51ed21871919626f1c24c98d9698903ce", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75f0f7af3172cedaa01e9bf066c06017bfe9a426/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75f0f7af3172cedaa01e9bf066c06017bfe9a426/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=75f0f7af3172cedaa01e9bf066c06017bfe9a426", "patch": "@@ -839,7 +839,7 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics, ty::GenericPredicates<'tcx\n         let mut where_predicates =\n             where_predicates.into_iter().flat_map(|p| p.clean(cx)).collect::<Vec<_>>();\n \n-        // Type parameters and have a Sized bound by default unless removed with\n+        // Type parameters have a Sized bound by default unless removed with\n         // ?Sized. Scan through the predicates and mark any type parameter with\n         // a Sized bound, removing the bounds as we find them.\n         //"}]}