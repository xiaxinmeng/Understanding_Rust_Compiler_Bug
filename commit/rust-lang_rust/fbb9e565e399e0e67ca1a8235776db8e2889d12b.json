{"sha": "fbb9e565e399e0e67ca1a8235776db8e2889d12b", "node_id": "C_kwDOAAsO6NoAKGZiYjllNTY1ZTM5OWUwZTY3Y2ExYTgyMzU3NzZkYjhlMjg4OWQxMmI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-24T16:55:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-24T16:55:06Z"}, "message": "Auto merge of #8754 - guerinoni:no_effect_replace, r=llogiq\n\nNew lint `no_effect_replace`\n\nCloses #1595\n\nSigned-off-by: Federico Guerinoni <guerinoni.federico@gmail.com>\n\nchangelog: Add [`no_effect_replace`] lint.", "tree": {"sha": "1dbefd86e72274e79c97dc3f44d31074f3c59ed9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1dbefd86e72274e79c97dc3f44d31074f3c59ed9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fbb9e565e399e0e67ca1a8235776db8e2889d12b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fbb9e565e399e0e67ca1a8235776db8e2889d12b", "html_url": "https://github.com/rust-lang/rust/commit/fbb9e565e399e0e67ca1a8235776db8e2889d12b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fbb9e565e399e0e67ca1a8235776db8e2889d12b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "050cdd6689254db96b47ff86732e286839a67584", "url": "https://api.github.com/repos/rust-lang/rust/commits/050cdd6689254db96b47ff86732e286839a67584", "html_url": "https://github.com/rust-lang/rust/commit/050cdd6689254db96b47ff86732e286839a67584"}, {"sha": "ea62347a5a4b952b416dddc8053a495c9238e7d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea62347a5a4b952b416dddc8053a495c9238e7d7", "html_url": "https://github.com/rust-lang/rust/commit/ea62347a5a4b952b416dddc8053a495c9238e7d7"}], "stats": {"total": 177, "additions": 177, "deletions": 0}, "files": [{"sha": "f4a362e6c198c14258567836f985900cf247cd3e", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -3613,6 +3613,7 @@ Released 2018-09-13\n [`new_without_default`]: https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default\n [`new_without_default_derive`]: https://rust-lang.github.io/rust-clippy/master/index.html#new_without_default_derive\n [`no_effect`]: https://rust-lang.github.io/rust-clippy/master/index.html#no_effect\n+[`no_effect_replace`]: https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_replace\n [`no_effect_underscore_binding`]: https://rust-lang.github.io/rust-clippy/master/index.html#no_effect_underscore_binding\n [`non_ascii_literal`]: https://rust-lang.github.io/rust-clippy/master/index.html#non_ascii_literal\n [`non_octal_unix_permissions`]: https://rust-lang.github.io/rust-clippy/master/index.html#non_octal_unix_permissions"}, {"sha": "3b8d11449d21bcd97a19640b2d662dffb9dbf587", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -189,6 +189,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(methods::NEEDLESS_OPTION_TAKE),\n     LintId::of(methods::NEEDLESS_SPLITN),\n     LintId::of(methods::NEW_RET_NO_SELF),\n+    LintId::of(methods::NO_EFFECT_REPLACE),\n     LintId::of(methods::OK_EXPECT),\n     LintId::of(methods::OPTION_AS_REF_DEREF),\n     LintId::of(methods::OPTION_FILTER_MAP),"}, {"sha": "50c135bf74bbff220eededece8a9a5cb4c647951", "filename": "clippy_lints/src/lib.register_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Flib.register_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Flib.register_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_lints.rs?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -330,6 +330,7 @@ store.register_lints(&[\n     methods::NEEDLESS_OPTION_TAKE,\n     methods::NEEDLESS_SPLITN,\n     methods::NEW_RET_NO_SELF,\n+    methods::NO_EFFECT_REPLACE,\n     methods::OK_EXPECT,\n     methods::OPTION_AS_REF_DEREF,\n     methods::OPTION_FILTER_MAP,"}, {"sha": "20bf5a245b157c2d8d48b88d28fcb6c5e5f06370", "filename": "clippy_lints/src/lib.register_suspicious.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Flib.register_suspicious.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_suspicious.rs?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -23,6 +23,7 @@ store.register_group(true, \"clippy::suspicious\", Some(\"clippy_suspicious\"), vec!\n     LintId::of(loops::EMPTY_LOOP),\n     LintId::of(loops::FOR_LOOPS_OVER_FALLIBLES),\n     LintId::of(loops::MUT_RANGE_BOUND),\n+    LintId::of(methods::NO_EFFECT_REPLACE),\n     LintId::of(methods::SUSPICIOUS_MAP),\n     LintId::of(mut_key::MUTABLE_KEY_TYPE),\n     LintId::of(octal_escapes::OCTAL_ESCAPES),"}, {"sha": "5cfb025ebfd337d8c3ca907b516de0a5b5d3cf28", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -44,6 +44,7 @@ mod map_identity;\n mod map_unwrap_or;\n mod needless_option_as_deref;\n mod needless_option_take;\n+mod no_effect_replace;\n mod ok_expect;\n mod option_as_ref_deref;\n mod option_map_or_none;\n@@ -2195,6 +2196,24 @@ declare_clippy_lint! {\n     \"using `.as_ref().take()` on a temporary value\"\n }\n \n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Checks for `replace` statements which have no effect.\n+    ///\n+    /// ### Why is this bad?\n+    /// It's either a mistake or confusing.\n+    ///\n+    /// ### Example\n+    /// ```rust\n+    /// \"1234\".replace(\"12\", \"12\");\n+    /// \"1234\".replacen(\"12\", \"12\", 1);\n+    /// ```\n+    #[clippy::version = \"1.62.0\"]\n+    pub NO_EFFECT_REPLACE,\n+    suspicious,\n+    \"replace with no effect\"\n+}\n+\n pub struct Methods {\n     avoid_breaking_exported_api: bool,\n     msrv: Option<RustcVersion>,\n@@ -2294,6 +2313,7 @@ impl_lint_pass!(Methods => [\n     NEEDLESS_OPTION_AS_DEREF,\n     IS_DIGIT_ASCII_RADIX,\n     NEEDLESS_OPTION_TAKE,\n+    NO_EFFECT_REPLACE,\n ]);\n \n /// Extracts a method call name, args, and `Span` of the method name.\n@@ -2705,6 +2725,9 @@ impl Methods {\n                         unnecessary_lazy_eval::check(cx, expr, recv, u_arg, \"unwrap_or\");\n                     },\n                 },\n+                (\"replace\" | \"replacen\", [arg1, arg2] | [arg1, arg2, _]) => {\n+                    no_effect_replace::check(cx, expr, arg1, arg2);\n+                },\n                 _ => {},\n             }\n         }"}, {"sha": "a76341855b6db8fbb34cb2fb56f98317091acb2b", "filename": "clippy_lints/src/methods/no_effect_replace.rs", "status": "added", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Fmethods%2Fno_effect_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/clippy_lints%2Fsrc%2Fmethods%2Fno_effect_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fno_effect_replace.rs?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -0,0 +1,47 @@\n+use clippy_utils::diagnostics::span_lint;\n+use clippy_utils::ty::is_type_diagnostic_item;\n+use clippy_utils::SpanlessEq;\n+use if_chain::if_chain;\n+use rustc_ast::LitKind;\n+use rustc_hir::ExprKind;\n+use rustc_lint::LateContext;\n+use rustc_span::sym;\n+\n+use super::NO_EFFECT_REPLACE;\n+\n+pub(super) fn check<'tcx>(\n+    cx: &LateContext<'tcx>,\n+    expr: &'tcx rustc_hir::Expr<'_>,\n+    arg1: &'tcx rustc_hir::Expr<'_>,\n+    arg2: &'tcx rustc_hir::Expr<'_>,\n+) {\n+    let ty = cx.typeck_results().expr_ty(expr).peel_refs();\n+    if !(ty.is_str() || is_type_diagnostic_item(cx, ty, sym::String)) {\n+        return;\n+    }\n+\n+    if_chain! {\n+        if let ExprKind::Lit(spanned) = &arg1.kind;\n+        if let Some(param1) = lit_string_value(&spanned.node);\n+\n+        if let ExprKind::Lit(spanned) = &arg2.kind;\n+        if let LitKind::Str(param2, _) = &spanned.node;\n+        if param1 == param2.as_str();\n+\n+        then {\n+            span_lint(cx, NO_EFFECT_REPLACE, expr.span, \"replacing text with itself\");\n+        }\n+    }\n+\n+    if SpanlessEq::new(cx).eq_expr(arg1, arg2) {\n+        span_lint(cx, NO_EFFECT_REPLACE, expr.span, \"replacing text with itself\");\n+    }\n+}\n+\n+fn lit_string_value(node: &LitKind) -> Option<String> {\n+    match node {\n+        LitKind::Char(value) => Some(value.to_string()),\n+        LitKind::Str(value, _) => Some(value.as_str().to_owned()),\n+        _ => None,\n+    }\n+}"}, {"sha": "ad17d53f78906d5c4cb309f53216d6866441a2d0", "filename": "tests/ui/no_effect_replace.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/tests%2Fui%2Fno_effect_replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/tests%2Fui%2Fno_effect_replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect_replace.rs?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -0,0 +1,51 @@\n+#![warn(clippy::no_effect_replace)]\n+\n+fn main() {\n+    let _ = \"12345\".replace('1', \"1\");\n+    let _ = \"12345\".replace(\"12\", \"12\");\n+    let _ = String::new().replace(\"12\", \"12\");\n+\n+    let _ = \"12345\".replacen('1', \"1\", 1);\n+    let _ = \"12345\".replacen(\"12\", \"12\", 1);\n+    let _ = String::new().replacen(\"12\", \"12\", 1);\n+\n+    let _ = \"12345\".replace(\"12\", \"22\");\n+    let _ = \"12345\".replacen(\"12\", \"22\", 1);\n+\n+    let mut x = X::default();\n+    let _ = \"hello\".replace(&x.f(), &x.f());\n+    let _ = \"hello\".replace(&x.f(), &x.ff());\n+\n+    let _ = \"hello\".replace(&y(), &y());\n+    let _ = \"hello\".replace(&y(), &z());\n+\n+    let _ = Replaceme.replace(\"a\", \"a\");\n+}\n+\n+#[derive(Default)]\n+struct X {}\n+\n+impl X {\n+    fn f(&mut self) -> String {\n+        \"he\".to_string()\n+    }\n+\n+    fn ff(&mut self) -> String {\n+        \"hh\".to_string()\n+    }\n+}\n+\n+fn y() -> String {\n+    \"he\".to_string()\n+}\n+\n+fn z() -> String {\n+    \"hh\".to_string()\n+}\n+\n+struct Replaceme;\n+impl Replaceme {\n+    pub fn replace(&mut self, a: &str, b: &str) -> Self {\n+        Self\n+    }\n+}"}, {"sha": "53a28aa73b707e46ecae822e00e266bdace39e8a", "filename": "tests/ui/no_effect_replace.stderr", "status": "added", "additions": 52, "deletions": 0, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/fbb9e565e399e0e67ca1a8235776db8e2889d12b/tests%2Fui%2Fno_effect_replace.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fbb9e565e399e0e67ca1a8235776db8e2889d12b/tests%2Fui%2Fno_effect_replace.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fno_effect_replace.stderr?ref=fbb9e565e399e0e67ca1a8235776db8e2889d12b", "patch": "@@ -0,0 +1,52 @@\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:4:13\n+   |\n+LL |     let _ = \"12345\".replace('1', \"1\");\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `-D clippy::no-effect-replace` implied by `-D warnings`\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:5:13\n+   |\n+LL |     let _ = \"12345\".replace(\"12\", \"12\");\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:6:13\n+   |\n+LL |     let _ = String::new().replace(\"12\", \"12\");\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:8:13\n+   |\n+LL |     let _ = \"12345\".replacen('1', \"1\", 1);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:9:13\n+   |\n+LL |     let _ = \"12345\".replacen(\"12\", \"12\", 1);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:10:13\n+   |\n+LL |     let _ = String::new().replacen(\"12\", \"12\", 1);\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:16:13\n+   |\n+LL |     let _ = \"hello\".replace(&x.f(), &x.f());\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: replacing text with itself\n+  --> $DIR/no_effect_replace.rs:19:13\n+   |\n+LL |     let _ = \"hello\".replace(&y(), &y());\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 8 previous errors\n+"}]}