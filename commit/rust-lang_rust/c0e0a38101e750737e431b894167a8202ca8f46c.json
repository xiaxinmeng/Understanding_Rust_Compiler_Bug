{"sha": "c0e0a38101e750737e431b894167a8202ca8f46c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZTBhMzgxMDFlNzUwNzM3ZTQzMWI4OTQxNjdhODIwMmNhOGY0NmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-20T05:24:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-20T05:24:04Z"}, "message": "Auto merge of #45316 - goffrie:exitable-breakable-block, r=nikomatsakis\n\nMark block exits as reachable if the block can break.\n\nThis only happens when desugaring `catch` expressions for now, but regular blocks (in HIR) can be broken from - respect that when doing reachability analysis.\n\nFixes #45124.", "tree": {"sha": "c811f3c85b0f5980cc66337e01a9bb8989ffe330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c811f3c85b0f5980cc66337e01a9bb8989ffe330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0e0a38101e750737e431b894167a8202ca8f46c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e0a38101e750737e431b894167a8202ca8f46c", "html_url": "https://github.com/rust-lang/rust/commit/c0e0a38101e750737e431b894167a8202ca8f46c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0e0a38101e750737e431b894167a8202ca8f46c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "354eb160e0753620104d021fc013cc595588d7ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/354eb160e0753620104d021fc013cc595588d7ff", "html_url": "https://github.com/rust-lang/rust/commit/354eb160e0753620104d021fc013cc595588d7ff"}, {"sha": "57f03ea5ff899c6567e18ad9e6b1f45288227340", "url": "https://api.github.com/repos/rust-lang/rust/commits/57f03ea5ff899c6567e18ad9e6b1f45288227340", "html_url": "https://github.com/rust-lang/rust/commit/57f03ea5ff899c6567e18ad9e6b1f45288227340"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "848da9637a299796a0f2ab526c1a646f6d0141e0", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0e0a38101e750737e431b894167a8202ca8f46c/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e0a38101e750737e431b894167a8202ca8f46c/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=c0e0a38101e750737e431b894167a8202ca8f46c", "patch": "@@ -2547,7 +2547,7 @@ impl<'a> LoweringContext<'a> {\n                 };\n \n                 // Err(err) => #[allow(unreachable_code)]\n-                //             return Carrier::from_error(From::from(err)),\n+                //             return Try::from_error(From::from(err)),\n                 let err_arm = {\n                     let err_ident = self.str_to_ident(\"err\");\n                     let err_local = self.pat_ident(e.span, err_ident);"}, {"sha": "d4616a7c304ae8993e8a1cd7def12ab2dffe1b41", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c0e0a38101e750737e431b894167a8202ca8f46c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e0a38101e750737e431b894167a8202ca8f46c/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=c0e0a38101e750737e431b894167a8202ca8f46c", "patch": "@@ -4291,6 +4291,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             CoerceMany::with_coercion_sites(coerce_to_ty, tail_expr)\n         };\n \n+        let prev_diverges = self.diverges.get();\n         let ctxt = BreakableCtxt {\n             coerce: Some(coerce),\n             may_break: false,\n@@ -4340,6 +4341,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             }\n         });\n \n+        if ctxt.may_break {\n+            // If we can break from the block, then the block's exit is always reachable\n+            // (... as long as the entry is reachable) - regardless of the tail of the block.\n+            self.diverges.set(prev_diverges);\n+        }\n+\n         let mut ty = ctxt.coerce.unwrap().complete(self);\n \n         if self.has_errors.get() || ty.references_error() {"}, {"sha": "c65823e460be3a1d1db682f2a50867ea65004070", "filename": "src/test/run-pass/issue-45124.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c0e0a38101e750737e431b894167a8202ca8f46c/src%2Ftest%2Frun-pass%2Fissue-45124.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0e0a38101e750737e431b894167a8202ca8f46c/src%2Ftest%2Frun-pass%2Fissue-45124.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-45124.rs?ref=c0e0a38101e750737e431b894167a8202ca8f46c", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(catch_expr)]\n+\n+fn main() {\n+    let mut a = 0;\n+    let () = {\n+        let _: Result<(), ()> = do catch {\n+            let _ = Err(())?;\n+            return\n+        };\n+        a += 1;\n+    };\n+    a += 2;\n+    assert_eq!(a, 3);\n+}"}]}