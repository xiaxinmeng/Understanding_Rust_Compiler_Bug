{"sha": "152e40377aefe966486515c392d741f851510a8a", "node_id": "C_kwDOAAsO6NoAKDE1MmU0MDM3N2FlZmU5NjY0ODY1MTVjMzkyZDc0MWY4NTE1MTBhOGE", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-10-10T15:18:30Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "eddyb@lyken.rs", "date": "2021-10-10T15:18:30Z"}, "message": "ty::pretty: document \"dummy Span extern crate\" special-case in `try_print_visible_def_path_recur`.", "tree": {"sha": "f122f7b95d4d4f31d7878951efe7167230058dcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f122f7b95d4d4f31d7878951efe7167230058dcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/152e40377aefe966486515c392d741f851510a8a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/152e40377aefe966486515c392d741f851510a8a", "html_url": "https://github.com/rust-lang/rust/commit/152e40377aefe966486515c392d741f851510a8a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/152e40377aefe966486515c392d741f851510a8a/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e8356c6adf119f983651d533d2b307544086cf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8356c6adf119f983651d533d2b307544086cf9", "html_url": "https://github.com/rust-lang/rust/commit/9e8356c6adf119f983651d533d2b307544086cf9"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "ae0cc97c7044e721b25b3e1110a186b1e9b4bda5", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/152e40377aefe966486515c392d741f851510a8a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/152e40377aefe966486515c392d741f851510a8a/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=152e40377aefe966486515c392d741f851510a8a", "patch": "@@ -350,18 +350,19 @@ pub trait PrettyPrinter<'tcx>:\n             match self.tcx().extern_crate(def_id) {\n                 Some(&ExternCrate { src, dependency_of, span, .. }) => match (src, dependency_of) {\n                     (ExternCrateSource::Extern(def_id), LOCAL_CRATE) => {\n-                        debug!(\"try_print_visible_def_path: def_id={:?}\", def_id);\n-                        return Ok((\n-                            if !span.is_dummy() {\n-                                self.print_def_path(def_id, &[])?\n-                            } else {\n-                                self.path_crate(cnum)?\n-                            },\n-                            true,\n-                        ));\n+                        // NOTE(eddyb) the only reason `span` might be dummy,\n+                        // that we're aware of, is that it's the `std`/`core`\n+                        // `extern crate` injected by default.\n+                        // FIXME(eddyb) find something better to key this on,\n+                        // or avoid ending up with `ExternCrateSource::Extern`,\n+                        // for the injected `std`/`core`.\n+                        if span.is_dummy() {\n+                            return Ok((self.path_crate(cnum)?, true));\n+                        }\n+\n+                        return Ok((self.print_def_path(def_id, &[])?, true));\n                     }\n                     (ExternCrateSource::Path, LOCAL_CRATE) => {\n-                        debug!(\"try_print_visible_def_path: def_id={:?}\", def_id);\n                         return Ok((self.path_crate(cnum)?, true));\n                     }\n                     _ => {}"}]}