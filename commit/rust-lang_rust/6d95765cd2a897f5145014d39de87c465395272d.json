{"sha": "6d95765cd2a897f5145014d39de87c465395272d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkOTU3NjVjZDJhODk3ZjUxNDUwMTRkMzlkZTg3YzQ2NTM5NTI3MmQ=", "commit": {"author": {"name": "Dmitry Ermolov", "email": "epdmitry@yandex.ru", "date": "2013-08-10T22:26:40Z"}, "committer": {"name": "Dmitry Ermolov", "email": "epdmitry@yandex.ru", "date": "2013-08-15T21:01:13Z"}, "message": "Cleanup: remove useless parameter", "tree": {"sha": "fea98e826907d123d242f4931bf69506afc39ba5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fea98e826907d123d242f4931bf69506afc39ba5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d95765cd2a897f5145014d39de87c465395272d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d95765cd2a897f5145014d39de87c465395272d", "html_url": "https://github.com/rust-lang/rust/commit/6d95765cd2a897f5145014d39de87c465395272d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d95765cd2a897f5145014d39de87c465395272d/comments", "author": {"login": "dim-an", "id": 88889, "node_id": "MDQ6VXNlcjg4ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/88889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dim-an", "html_url": "https://github.com/dim-an", "followers_url": "https://api.github.com/users/dim-an/followers", "following_url": "https://api.github.com/users/dim-an/following{/other_user}", "gists_url": "https://api.github.com/users/dim-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/dim-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dim-an/subscriptions", "organizations_url": "https://api.github.com/users/dim-an/orgs", "repos_url": "https://api.github.com/users/dim-an/repos", "events_url": "https://api.github.com/users/dim-an/events{/privacy}", "received_events_url": "https://api.github.com/users/dim-an/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dim-an", "id": 88889, "node_id": "MDQ6VXNlcjg4ODg5", "avatar_url": "https://avatars.githubusercontent.com/u/88889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dim-an", "html_url": "https://github.com/dim-an", "followers_url": "https://api.github.com/users/dim-an/followers", "following_url": "https://api.github.com/users/dim-an/following{/other_user}", "gists_url": "https://api.github.com/users/dim-an/gists{/gist_id}", "starred_url": "https://api.github.com/users/dim-an/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dim-an/subscriptions", "organizations_url": "https://api.github.com/users/dim-an/orgs", "repos_url": "https://api.github.com/users/dim-an/repos", "events_url": "https://api.github.com/users/dim-an/events{/privacy}", "received_events_url": "https://api.github.com/users/dim-an/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc3297ff0574f5c4101e76e34c083c7f599cd956", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc3297ff0574f5c4101e76e34c083c7f599cd956", "html_url": "https://github.com/rust-lang/rust/commit/fc3297ff0574f5c4101e76e34c083c7f599cd956"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "1089fc5574487e2c21315355724c0640fa4e6d66", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6d95765cd2a897f5145014d39de87c465395272d/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d95765cd2a897f5145014d39de87c465395272d/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=6d95765cd2a897f5145014d39de87c465395272d", "patch": "@@ -1294,18 +1294,14 @@ fn store_non_ref_bindings(bcx: @mut Block,\n \n fn insert_lllocals(bcx: @mut Block,\n                    bindings_map: &BindingsMap,\n-                   binding_mode: IrrefutablePatternBindingMode,\n                    add_cleans: bool) -> @mut Block {\n     /*!\n      * For each binding in `data.bindings_map`, adds an appropriate entry into\n      * the `fcx.lllocals` map.  If add_cleans is true, then adds cleanups for\n      * the bindings.\n      */\n \n-    let llmap = match binding_mode {\n-        BindLocal => bcx.fcx.lllocals,\n-        BindArgument => bcx.fcx.llargs\n-    };\n+    let llmap = bcx.fcx.lllocals;\n \n     for (&ident, &binding_info) in bindings_map.iter() {\n         let llval = match binding_info.trmode {\n@@ -1358,7 +1354,7 @@ fn compile_guard(bcx: @mut Block,\n     bcx = store_non_ref_bindings(bcx,\n                                  data.bindings_map,\n                                  Some(&mut temp_cleanups));\n-    bcx = insert_lllocals(bcx, data.bindings_map, BindLocal, false);\n+    bcx = insert_lllocals(bcx, data.bindings_map, false);\n \n     let val = unpack_result!(bcx, {\n         do with_scope_result(bcx, guard_expr.info(),\n@@ -1875,7 +1871,7 @@ fn trans_match_inner(scope_cx: @mut Block,\n         }\n \n         // insert bindings into the lllocals map and add cleanups\n-        bcx = insert_lllocals(bcx, arm_data.bindings_map, BindLocal, true);\n+        bcx = insert_lllocals(bcx, arm_data.bindings_map, true);\n \n         bcx = controlflow::trans_block(bcx, &arm_data.arm.body, dest);\n         bcx = trans_block_cleanups(bcx, block_cleanups(arm_data.bodycx));"}]}