{"sha": "71f7e67dcf6819d5807b39ecaac0174095f4a446", "node_id": "C_kwDOAAsO6NoAKDcxZjdlNjdkY2Y2ODE5ZDU4MDdiMzllY2FhYzAxNzQwOTVmNGE0NDY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-12T00:44:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-12T00:44:39Z"}, "message": "Merge #11684\n\n11684: fix: Allow configuration of colons in inlay-hints r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "a0b3fe886e520c2dea3728d0c623cc48ce62bddc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b3fe886e520c2dea3728d0c623cc48ce62bddc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71f7e67dcf6819d5807b39ecaac0174095f4a446", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiK+z3CRBK7hj4Ov3rIwAAowQIAK/np38rE2s5oYLd4ICuUE6z\n/zvcS5qnQZW1iZ6RMPlxTYBmaITYfOvZZ0HPnyBwXjo3tdA8m0VB3x/KM+GDLMq6\n8kZ3DMh4HeOOHROBZdwZ/y/nEC31m8z9t0FZqgHmhNi04bT5/qWoOWqPLQPxvdpC\nL7uMgibo4eDt/YTndXzovA8OIHhCl4XMsF9INQGfa6LNHnbaKqioHaEnHCfNREfP\nr/03igLNO/mQJV+V+ereP12qrDUFx7Wr2RMEM1oryNGpr6EgtyL9WCiffP7Db55p\nZ7mqJ18NnEZ+/qSy4z6Ku95TOHOU323RQ/z/qByxTdfeMNYS1ctkaKzgOHpl6lU=\n=ardZ\n-----END PGP SIGNATURE-----\n", "payload": "tree a0b3fe886e520c2dea3728d0c623cc48ce62bddc\nparent bbe61565bb06cfbc5a0b7587467cc7c828eb0169\nparent 119ba82e4b099bf33a9eb266e518f010a6bae7be\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1647045879 +0000\ncommitter GitHub <noreply@github.com> 1647045879 +0000\n\nMerge #11684\n\n11684: fix: Allow configuration of colons in inlay-hints r=Veykril a=Veykril\n\nbors r+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71f7e67dcf6819d5807b39ecaac0174095f4a446", "html_url": "https://github.com/rust-lang/rust/commit/71f7e67dcf6819d5807b39ecaac0174095f4a446", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71f7e67dcf6819d5807b39ecaac0174095f4a446/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bbe61565bb06cfbc5a0b7587467cc7c828eb0169", "url": "https://api.github.com/repos/rust-lang/rust/commits/bbe61565bb06cfbc5a0b7587467cc7c828eb0169", "html_url": "https://github.com/rust-lang/rust/commit/bbe61565bb06cfbc5a0b7587467cc7c828eb0169"}, {"sha": "119ba82e4b099bf33a9eb266e518f010a6bae7be", "url": "https://api.github.com/repos/rust-lang/rust/commits/119ba82e4b099bf33a9eb266e518f010a6bae7be", "html_url": "https://github.com/rust-lang/rust/commit/119ba82e4b099bf33a9eb266e518f010a6bae7be"}], "stats": {"total": 76, "additions": 62, "deletions": 14}, "files": [{"sha": "322a9b820a6e42d743cf330e6fcc582c674f01ab", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -12,6 +12,7 @@ use crate::FileId;\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct InlayHintsConfig {\n+    pub render_colons: bool,\n     pub type_hints: bool,\n     pub parameter_hints: bool,\n     pub chaining_hints: bool,\n@@ -574,6 +575,7 @@ mod tests {\n     use crate::{fixture, inlay_hints::InlayHintsConfig};\n \n     const TEST_CONFIG: InlayHintsConfig = InlayHintsConfig {\n+        render_colons: true,\n         type_hints: true,\n         parameter_hints: true,\n         chaining_hints: true,\n@@ -590,6 +592,7 @@ mod tests {\n     fn check_params(ra_fixture: &str) {\n         check_with_config(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: true,\n                 type_hints: false,\n                 chaining_hints: false,\n@@ -604,6 +607,7 @@ mod tests {\n     fn check_types(ra_fixture: &str) {\n         check_with_config(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: false,\n                 type_hints: true,\n                 chaining_hints: false,\n@@ -618,6 +622,7 @@ mod tests {\n     fn check_chains(ra_fixture: &str) {\n         check_with_config(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: false,\n                 type_hints: false,\n                 chaining_hints: true,\n@@ -649,6 +654,7 @@ mod tests {\n     fn hints_disabled() {\n         check_with_config(\n             InlayHintsConfig {\n+                render_colons: true,\n                 type_hints: false,\n                 parameter_hints: false,\n                 chaining_hints: false,\n@@ -1104,6 +1110,7 @@ fn main() {\n         let inlay_hints = analysis\n             .inlay_hints(\n                 &InlayHintsConfig {\n+                    render_colons: true,\n                     parameter_hints: false,\n                     type_hints: true,\n                     chaining_hints: false,\n@@ -1413,6 +1420,7 @@ fn main() {\n     fn skip_constructor_and_enum_type_hints() {\n         check_with_config(\n             InlayHintsConfig {\n+                render_colons: true,\n                 type_hints: true,\n                 parameter_hints: true,\n                 chaining_hints: true,\n@@ -1590,6 +1598,7 @@ fn main() {\n     fn chaining_hints_ignore_comments() {\n         check_expect(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: false,\n                 type_hints: false,\n                 chaining_hints: true,\n@@ -1647,6 +1656,7 @@ fn main() {\n     fn struct_access_chaining_hints() {\n         check_expect(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: false,\n                 type_hints: false,\n                 chaining_hints: true,\n@@ -1692,6 +1702,7 @@ fn main() {\n     fn generic_chaining_hints() {\n         check_expect(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: false,\n                 type_hints: false,\n                 chaining_hints: true,\n@@ -1738,6 +1749,7 @@ fn main() {\n     fn shorten_iterator_chaining_hints() {\n         check_expect(\n             InlayHintsConfig {\n+                render_colons: true,\n                 parameter_hints: false,\n                 type_hints: false,\n                 chaining_hints: true,"}, {"sha": "ef3487545caece3d9c07de3beaa85151fa7fb381", "filename": "crates/ide/src/static_index.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Fide%2Fsrc%2Fstatic_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Fide%2Fsrc%2Fstatic_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fstatic_index.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -105,6 +105,7 @@ impl StaticIndex<'_> {\n             .analysis\n             .inlay_hints(\n                 &InlayHintsConfig {\n+                    render_colons: true,\n                     type_hints: true,\n                     parameter_hints: true,\n                     chaining_hints: true,"}, {"sha": "e50bcbb690a2577eb9609c85364055644fc1bb5a", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -242,6 +242,8 @@ config_data! {\n         /// `#rust-analyzer.hoverActions.enable#` is set.\n         hoverActions_run: bool             = \"true\",\n \n+        /// Whether to render trailing colons for parameter hints, and trailing colons for parameter hints.\n+        inlayHints_renderColons: bool               = \"true\",\n         /// Whether to show inlay type hints for method chains.\n         inlayHints_chainingHints: bool              = \"true\",\n         /// Maximum length for inlay hints. Set to null to have an unlimited length.\n@@ -846,6 +848,7 @@ impl Config {\n     }\n     pub fn inlay_hints(&self) -> InlayHintsConfig {\n         InlayHintsConfig {\n+            render_colons: self.data.inlayHints_renderColons,\n             type_hints: self.data.inlayHints_typeHints,\n             parameter_hints: self.data.inlayHints_parameterHints,\n             chaining_hints: self.data.inlayHints_chainingHints,"}, {"sha": "b5e9776000c2e9c1fb328e7e5eac8501ee273a51", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -1331,11 +1331,12 @@ pub(crate) fn handle_inlay_hints(\n             )\n         })\n         .transpose()?;\n+    let inlay_hints_config = snap.config.inlay_hints();\n     Ok(snap\n         .analysis\n-        .inlay_hints(&snap.config.inlay_hints(), file_id, range)?\n+        .inlay_hints(&inlay_hints_config, file_id, range)?\n         .into_iter()\n-        .map(|it| to_proto::inlay_hint(&line_index, it))\n+        .map(|it| to_proto::inlay_hint(inlay_hints_config.render_colons, &line_index, it))\n         .collect())\n }\n "}, {"sha": "2e131eeac95f4bd8f6bea83fd8f3314e11eb637d", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -255,14 +255,32 @@ impl InlayHintKind {\n #[derive(Debug, Deserialize, Serialize)]\n #[serde(rename_all = \"camelCase\")]\n pub struct InlayHint {\n-    pub label: String,\n+    pub label: InlayHintLabel,\n     pub position: Position,\n     pub kind: Option<InlayHintKind>,\n     pub tooltip: Option<String>,\n     pub padding_left: Option<bool>,\n     pub padding_right: Option<bool>,\n }\n \n+#[derive(Debug, Deserialize, Serialize)]\n+#[serde(untagged)]\n+pub enum InlayHintLabel {\n+    String(String),\n+    Parts(Vec<InlayHintLabelPart>),\n+}\n+\n+#[derive(Debug, Deserialize, Serialize)]\n+#[serde(rename_all = \"camelCase\")]\n+pub struct InlayHintLabelPart {\n+    pub value: String,\n+    #[serde(skip_serializing_if = \"Option::is_none\")]\n+    pub tooltip: Option<String>,\n+    #[serde(skip_serializing_if = \"Option::is_none\")]\n+    pub location: Option<lsp_types::LocationLink>,\n+    #[serde(skip_serializing_if = \"Option::is_none\")]\n+    pub command: Option<lsp_types::Command>,\n+}\n pub enum Ssr {}\n \n impl Request for Ssr {"}, {"sha": "fd6602624f302db1dcfaee440cacb739ab28557c", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -413,13 +413,17 @@ pub(crate) fn signature_help(\n     }\n }\n \n-pub(crate) fn inlay_hint(line_index: &LineIndex, inlay_hint: InlayHint) -> lsp_ext::InlayHint {\n+pub(crate) fn inlay_hint(\n+    render_colons: bool,\n+    line_index: &LineIndex,\n+    inlay_hint: InlayHint,\n+) -> lsp_ext::InlayHint {\n     lsp_ext::InlayHint {\n-        label: match inlay_hint.kind {\n-            InlayKind::ParameterHint => format!(\"{}:\", inlay_hint.label),\n-            InlayKind::TypeHint => format!(\": {}\", inlay_hint.label),\n-            InlayKind::ChainingHint => inlay_hint.label.to_string(),\n-        },\n+        label: lsp_ext::InlayHintLabel::String(match inlay_hint.kind {\n+            InlayKind::ParameterHint if render_colons => format!(\"{}:\", inlay_hint.label),\n+            InlayKind::TypeHint if render_colons => format!(\": {}\", inlay_hint.label),\n+            _ => inlay_hint.label.to_string(),\n+        }),\n         position: match inlay_hint.kind {\n             InlayKind::ParameterHint => position(line_index, inlay_hint.range.start()),\n             InlayKind::TypeHint | InlayKind::ChainingHint => {\n@@ -433,14 +437,12 @@ pub(crate) fn inlay_hint(line_index: &LineIndex, inlay_hint: InlayHint) -> lsp_e\n         },\n         tooltip: None,\n         padding_left: Some(match inlay_hint.kind {\n-            InlayKind::TypeHint => false,\n-            InlayKind::ParameterHint => false,\n+            InlayKind::TypeHint | InlayKind::ParameterHint => false,\n             InlayKind::ChainingHint => true,\n         }),\n         padding_right: Some(match inlay_hint.kind {\n-            InlayKind::TypeHint => false,\n+            InlayKind::TypeHint | InlayKind::ChainingHint => false,\n             InlayKind::ParameterHint => true,\n-            InlayKind::ChainingHint => false,\n         }),\n     }\n }"}, {"sha": "d811331ae380351c72ffcd36b619475a9660ea59", "filename": "crates/test_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Ftest_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/crates%2Ftest_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Flib.rs?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -440,6 +440,7 @@ pub fn bench(label: &'static str) -> impl Drop {\n \n /// Checks that the `file` has the specified `contents`. If that is not the\n /// case, updates the file and then fails the test.\n+#[track_caller]\n pub fn ensure_file_contents(file: &Path, contents: &str) {\n     if let Err(()) = try_ensure_file_contents(file, contents) {\n         panic!(\"Some files were not up-to-date\");"}, {"sha": "3091bdcbf072e45a5bd2eee6e238b80562fd4555", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: e32fdde032ff6ebc\n+lsp_ext.rs hash: 854109e98d02a780\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:"}, {"sha": "dd819abdd2900d2fcdb0c1f291de69fc8075759c", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -347,6 +347,11 @@ Whether to show `References` action. Only applies when\n Whether to show `Run` action. Only applies when\n `#rust-analyzer.hoverActions.enable#` is set.\n --\n+[[rust-analyzer.inlayHints.renderColons]]rust-analyzer.inlayHints.renderColons (default: `true`)::\n++\n+--\n+Whether to render trailing colons for parameter hints, and trailing colons for parameter hints.\n+--\n [[rust-analyzer.inlayHints.chainingHints]]rust-analyzer.inlayHints.chainingHints (default: `true`)::\n +\n --"}, {"sha": "6ccd6af80c0892ca036a60d3201ae379caefb897", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/71f7e67dcf6819d5807b39ecaac0174095f4a446/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/71f7e67dcf6819d5807b39ecaac0174095f4a446/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=71f7e67dcf6819d5807b39ecaac0174095f4a446", "patch": "@@ -766,6 +766,11 @@\n                     \"default\": true,\n                     \"type\": \"boolean\"\n                 },\n+                \"rust-analyzer.inlayHints.renderColons\": {\n+                    \"markdownDescription\": \"Whether to render trailing colons for parameter hints, and trailing colons for parameter hints.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n                 \"rust-analyzer.inlayHints.chainingHints\": {\n                     \"markdownDescription\": \"Whether to show inlay type hints for method chains.\",\n                     \"default\": true,"}]}