{"sha": "27e2d811e67f5fa0658f62aa55538bed250ecb68", "node_id": "C_kwDOAAsO6NoAKDI3ZTJkODExZTY3ZjVmYTA2NThmNjJhYTU1NTM4YmVkMjUwZWNiNjg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-15T18:50:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-15T18:50:43Z"}, "message": "Rollup merge of #94457 - jhpratt:stabilize-derive_default_enum, r=davidtwco\n\nStabilize `derive_default_enum`\n\nThis stabilizes `#![feature(derive_default_enum)]`, as proposed in [RFC 3107](https://github.com/rust-lang/rfcs/pull/3107) and tracked in #87517. In short, it permits you to `#[derive(Default)]` on `enum`s, indicating what the default should be by placing a `#[default]` attribute on the desired variant (which must be a unit variant in the interest of forward compatibility).\n\n```````@rustbot``````` label +S-waiting-on-review +T-lang", "tree": {"sha": "7bc28c59c246ec719f8c082463929c4d41bd2377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bc28c59c246ec719f8c082463929c4d41bd2377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27e2d811e67f5fa0658f62aa55538bed250ecb68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWb6DCRBK7hj4Ov3rIwAA8+0IAFHP9OmoBlut3A+kA/rh5WAP\nvueal8oOgNPWjIK5+1st4dKe+PDFi7HxHo+8vxQdAnqEbw44ivfAlgUm+kb74eF/\nSn0q+HjYJ/Doi98dBgumh7gMkJG52oqcwJ3JwyyEMIxjHPMV6QpsvI9WXHJJenrj\nctsD31dehB9bIXffzbef9B6FNnxb6LIkoDChiLIlDhV6vAjYWREk4xdxbswnYonr\nOWnYpMIhCOqa9dPKcqVvjawN857umrFsgPYogeaYEOUTLmSkIRQTAHU/BrORaVDW\nGNUW3EP4mIg94wPxFrGx7mAmkyzOT58czu4suxyQmNRWsC4ZSVxH28DbX3Kix/o=\n=BmQY\n-----END PGP SIGNATURE-----\n", "payload": "tree 7bc28c59c246ec719f8c082463929c4d41bd2377\nparent 1e6fe5855a115ef7f17f3e17205fab7340775701\nparent a3dd654ae9f9002d3ff47e45a9a9b6afcb484d2f\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650048643 +0200\ncommitter GitHub <noreply@github.com> 1650048643 +0200\n\nRollup merge of #94457 - jhpratt:stabilize-derive_default_enum, r=davidtwco\n\nStabilize `derive_default_enum`\n\nThis stabilizes `#![feature(derive_default_enum)]`, as proposed in [RFC 3107](https://github.com/rust-lang/rfcs/pull/3107) and tracked in #87517. In short, it permits you to `#[derive(Default)]` on `enum`s, indicating what the default should be by placing a `#[default]` attribute on the desired variant (which must be a unit variant in the interest of forward compatibility).\n\n```````@rustbot``````` label +S-waiting-on-review +T-lang\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27e2d811e67f5fa0658f62aa55538bed250ecb68", "html_url": "https://github.com/rust-lang/rust/commit/27e2d811e67f5fa0658f62aa55538bed250ecb68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27e2d811e67f5fa0658f62aa55538bed250ecb68/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e6fe5855a115ef7f17f3e17205fab7340775701", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e6fe5855a115ef7f17f3e17205fab7340775701", "html_url": "https://github.com/rust-lang/rust/commit/1e6fe5855a115ef7f17f3e17205fab7340775701"}, {"sha": "a3dd654ae9f9002d3ff47e45a9a9b6afcb484d2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3dd654ae9f9002d3ff47e45a9a9b6afcb484d2f", "html_url": "https://github.com/rust-lang/rust/commit/a3dd654ae9f9002d3ff47e45a9a9b6afcb484d2f"}], "stats": {"total": 128, "additions": 55, "deletions": 73}, "files": [{"sha": "2c5260616c7da398c6bce5a84e25e4691333aeec", "filename": "compiler/rustc_builtin_macros/src/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fdefault.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -46,18 +46,7 @@ pub fn expand_deriving_default(\n                     StaticStruct(_, fields) => {\n                         default_struct_substructure(cx, trait_span, substr, fields)\n                     }\n-                    StaticEnum(enum_def, _) => {\n-                        if !cx.sess.features_untracked().derive_default_enum {\n-                            rustc_session::parse::feature_err(\n-                                cx.parse_sess(),\n-                                sym::derive_default_enum,\n-                                span,\n-                                \"deriving `Default` on enums is experimental\",\n-                            )\n-                            .emit();\n-                        }\n-                        default_enum_substructure(cx, trait_span, enum_def)\n-                    }\n+                    StaticEnum(enum_def, _) => default_enum_substructure(cx, trait_span, enum_def),\n                     _ => cx.span_bug(trait_span, \"method in `derive(Default)`\"),\n                 }\n             })),"}, {"sha": "048039343a7a2e9bc8e6c7bf13c9b8426c7bd83d", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -126,6 +126,8 @@ declare_features! (\n     (accepted, default_type_params, \"1.0.0\", None, None),\n     /// Allows `#[deprecated]` attribute.\n     (accepted, deprecated, \"1.9.0\", Some(29935), None),\n+    /// Allows `#[derive(Default)]` and `#[default]` on enums.\n+    (accepted, derive_default_enum, \"1.62.0\", Some(86985), None),\n     /// Allows the use of destructuring assignments.\n     (accepted, destructuring_assignment, \"1.59.0\", Some(71126), None),\n     /// Allows `#[doc(alias = \"...\")]`."}, {"sha": "f3d4c8ab4384311b56a55ba6ef896bda98b40a3a", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -368,8 +368,6 @@ declare_features! (\n     (active, deprecated_safe, \"1.61.0\", Some(94978), None),\n     /// Allows having using `suggestion` in the `#[deprecated]` attribute.\n     (active, deprecated_suggestion, \"1.61.0\", Some(94785), None),\n-    /// Allows `#[derive(Default)]` and `#[default]` on enums.\n-    (active, derive_default_enum, \"1.56.0\", Some(86985), None),\n     /// Tells rustdoc to automatically generate `#[doc(cfg(...))]`.\n     (active, doc_auto_cfg, \"1.58.0\", Some(43781), None),\n     /// Allows `#[doc(cfg(...))]`."}, {"sha": "940c4ecdcc23a07b5106f74ef5c7da35c77b371a", "filename": "compiler/rustc_feature/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_feature%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Flib.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -11,7 +11,7 @@\n //! even if it is stabilized or removed, *do not remove it*. Instead, move the\n //! symbol to the `accepted` or `removed` modules respectively.\n \n-#![feature(derive_default_enum)]\n+#![cfg_attr(bootstrap, feature(derive_default_enum))]\n #![feature(once_cell)]\n \n mod accepted;"}, {"sha": "e859bcaec120692b917cba3f207019e6d8361bac", "filename": "compiler/rustc_infer/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_infer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Flib.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -17,7 +17,7 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(control_flow_enum)]\n-#![feature(derive_default_enum)]\n+#![cfg_attr(bootstrap, feature(derive_default_enum))]\n #![feature(extend_one)]\n #![feature(label_break_value)]\n #![feature(let_chains)]"}, {"sha": "199b5fa0314b35014e211763aa503f96bd125dba", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -30,7 +30,7 @@\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(core_intrinsics)]\n-#![feature(derive_default_enum)]\n+#![cfg_attr(bootstrap, feature(derive_default_enum))]\n #![feature(discriminant_kind)]\n #![feature(exhaustive_patterns)]\n #![feature(get_mut_unchecked)]"}, {"sha": "054b18b6b633aabc71cf2e5941c07a3ce4c59a79", "filename": "compiler/rustc_session/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_session%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_session%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Flib.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -1,7 +1,7 @@\n #![feature(crate_visibility_modifier)]\n-#![feature(derive_default_enum)]\n #![feature(if_let_guard)]\n #![feature(let_chains)]\n+#![cfg_attr(bootstrap, feature(derive_default_enum))]\n #![feature(let_else)]\n #![feature(min_specialization)]\n #![feature(never_type)]"}, {"sha": "2ae7f34a91e00a4b1c398f36a8924b8f080aecd5", "filename": "compiler/rustc_trait_selection/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Flib.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -16,7 +16,7 @@\n #![feature(box_patterns)]\n #![feature(control_flow_enum)]\n #![feature(crate_visibility_modifier)]\n-#![feature(derive_default_enum)]\n+#![cfg_attr(bootstrap, feature(derive_default_enum))]\n #![feature(drain_filter)]\n #![feature(hash_drain_filter)]\n #![feature(label_break_value)]"}, {"sha": "1ce00828bf3449c248c12b5a3f18ff07a62dab48", "filename": "library/core/src/default.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/library%2Fcore%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/library%2Fcore%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fdefault.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -52,6 +52,23 @@\n /// This trait can be used with `#[derive]` if all of the type's fields implement\n /// `Default`. When `derive`d, it will use the default value for each field's type.\n ///\n+/// ### `enum`s\n+///\n+/// When using `#[derive(Default)]` on an `enum`, you need to choose which unit variant will be\n+/// default. You do this by placing the `#[default]` attribute on the variant.\n+///\n+/// ```\n+/// #[derive(Default)]\n+/// enum Kind {\n+///     #[default]\n+///     A,\n+///     B,\n+///     C,\n+/// }\n+/// ```\n+///\n+/// You cannot use the `#[default]` attribute on non-unit or non-exhaustive variants.\n+///\n /// ## How can I implement `Default`?\n ///\n /// Provide an implementation for the `default()` method that returns the value of"}, {"sha": "8aa355a554d70a0d2c415c35f95aea42f1ee9d03", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -167,7 +167,7 @@\n #![feature(const_precise_live_drops)]\n #![feature(const_refs_to_cell)]\n #![feature(decl_macro)]\n-#![feature(derive_default_enum)]\n+#![cfg_attr(bootstrap, feature(derive_default_enum))]\n #![feature(deprecated_suggestion)]\n #![feature(doc_cfg)]\n #![feature(doc_notable_trait)]"}, {"sha": "d1a81c72c2fdcc0c2112daf7efb08249ee5dd8de", "filename": "src/test/ui/deriving/deriving-default-enum.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fderiving%2Fderiving-default-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fderiving%2Fderiving-default-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderiving%2Fderiving-default-enum.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -1,7 +1,5 @@\n // run-pass\n \n-#![feature(derive_default_enum)]\n-\n // nb: does not impl Default\n #[derive(Debug, PartialEq)]\n struct NotDefault;"}, {"sha": "1c30b0b6fba75c392329f11b6e11d6783c032a90", "filename": "src/test/ui/deriving/deriving-with-helper.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fderiving%2Fderiving-with-helper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fderiving%2Fderiving-with-helper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderiving%2Fderiving-with-helper.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -5,7 +5,6 @@\n #![feature(lang_items)]\n #![feature(no_core)]\n #![feature(rustc_attrs)]\n-#![feature(derive_default_enum)]\n \n #![no_core]\n "}, {"sha": "05a5d4e14223a0404202b1fc2b0a347d0e1153f0", "filename": "src/test/ui/feature-gates/feature-gate-derive_default_enum.rs", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1e6fe5855a115ef7f17f3e17205fab7340775701/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-derive_default_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e6fe5855a115ef7f17f3e17205fab7340775701/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-derive_default_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-derive_default_enum.rs?ref=1e6fe5855a115ef7f17f3e17205fab7340775701", "patch": "@@ -1,7 +0,0 @@\n-#[derive(Default)] //~ ERROR deriving `Default` on enums is experimental\n-enum Foo {\n-    #[default]\n-    Alpha,\n-}\n-\n-fn main() {}"}, {"sha": "58dd4d508a7091695eb7d4b588d1bd308807c064", "filename": "src/test/ui/feature-gates/feature-gate-derive_default_enum.stderr", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/1e6fe5855a115ef7f17f3e17205fab7340775701/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-derive_default_enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e6fe5855a115ef7f17f3e17205fab7340775701/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-derive_default_enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-derive_default_enum.stderr?ref=1e6fe5855a115ef7f17f3e17205fab7340775701", "patch": "@@ -1,13 +0,0 @@\n-error[E0658]: deriving `Default` on enums is experimental\n-  --> $DIR/feature-gate-derive_default_enum.rs:1:10\n-   |\n-LL | #[derive(Default)]\n-   |          ^^^^^^^\n-   |\n-   = note: see issue #86985 <https://github.com/rust-lang/rust/issues/86985> for more information\n-   = help: add `#![feature(derive_default_enum)]` to the crate attributes to enable\n-   = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "e7a01f105de0be768fb14dc37c5d50cd5366f8f5", "filename": "src/test/ui/macros/macros-nonfatal-errors.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -5,7 +5,6 @@\n \n #![feature(trace_macros, concat_idents)]\n #![feature(stmt_expr_attributes, arbitrary_enum_discriminant)]\n-#![feature(derive_default_enum)]\n \n use std::arch::asm;\n "}, {"sha": "b3c6d07f96763a92ab3df33dd33330ccc01c7588", "filename": "src/test/ui/macros/macros-nonfatal-errors.stderr", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacros-nonfatal-errors.stderr?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -1,41 +1,41 @@\n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:14:5\n+  --> $DIR/macros-nonfatal-errors.rs:13:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:19:36\n+  --> $DIR/macros-nonfatal-errors.rs:18:36\n    |\n LL | struct DefaultInnerAttrTupleStruct(#[default] ());\n    |                                    ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:23:1\n+  --> $DIR/macros-nonfatal-errors.rs:22:1\n    |\n LL | #[default]\n    | ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:27:1\n+  --> $DIR/macros-nonfatal-errors.rs:26:1\n    |\n LL | #[default]\n    | ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:37:11\n+  --> $DIR/macros-nonfatal-errors.rs:36:11\n    |\n LL |     Foo = #[default] 0,\n    |           ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:38:14\n+  --> $DIR/macros-nonfatal-errors.rs:37:14\n    |\n LL |     Bar([u8; #[default] 1]),\n    |              ^^^^^^^^^^\n \n error: no default declared\n-  --> $DIR/macros-nonfatal-errors.rs:43:10\n+  --> $DIR/macros-nonfatal-errors.rs:42:10\n    |\n LL | #[derive(Default)]\n    |          ^^^^^^^\n@@ -44,7 +44,7 @@ LL | #[derive(Default)]\n    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: multiple declared defaults\n-  --> $DIR/macros-nonfatal-errors.rs:49:10\n+  --> $DIR/macros-nonfatal-errors.rs:48:10\n    |\n LL | #[derive(Default)]\n    |          ^^^^^^^\n@@ -62,15 +62,15 @@ LL |     Baz,\n    = note: this error originates in the derive macro `Default` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: `#[default]` attribute does not accept a value\n-  --> $DIR/macros-nonfatal-errors.rs:61:5\n+  --> $DIR/macros-nonfatal-errors.rs:60:5\n    |\n LL |     #[default = 1]\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: try using `#[default]`\n \n error: multiple `#[default]` attributes\n-  --> $DIR/macros-nonfatal-errors.rs:69:5\n+  --> $DIR/macros-nonfatal-errors.rs:68:5\n    |\n LL |     #[default]\n    |     ---------- `#[default]` used here\n@@ -81,13 +81,13 @@ LL |     Foo,\n    |\n    = note: only one `#[default]` attribute is needed\n help: try removing this\n-  --> $DIR/macros-nonfatal-errors.rs:68:5\n+  --> $DIR/macros-nonfatal-errors.rs:67:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: multiple `#[default]` attributes\n-  --> $DIR/macros-nonfatal-errors.rs:79:5\n+  --> $DIR/macros-nonfatal-errors.rs:78:5\n    |\n LL |     #[default]\n    |     ---------- `#[default]` used here\n@@ -99,7 +99,7 @@ LL |     Foo,\n    |\n    = note: only one `#[default]` attribute is needed\n help: try removing these\n-  --> $DIR/macros-nonfatal-errors.rs:76:5\n+  --> $DIR/macros-nonfatal-errors.rs:75:5\n    |\n LL |     #[default]\n    |     ^^^^^^^^^^\n@@ -109,15 +109,15 @@ LL |     #[default]\n    |     ^^^^^^^^^^\n \n error: the `#[default]` attribute may only be used on unit enum variants\n-  --> $DIR/macros-nonfatal-errors.rs:86:5\n+  --> $DIR/macros-nonfatal-errors.rs:85:5\n    |\n LL |     Foo {},\n    |     ^^^\n    |\n    = help: consider a manual implementation of `Default`\n \n error: default variant must be exhaustive\n-  --> $DIR/macros-nonfatal-errors.rs:94:5\n+  --> $DIR/macros-nonfatal-errors.rs:93:5\n    |\n LL |     #[non_exhaustive]\n    |     ----------------- declared `#[non_exhaustive]` here\n@@ -127,45 +127,45 @@ LL |     Foo,\n    = help: consider a manual implementation of `Default`\n \n error: asm template must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:99:10\n+  --> $DIR/macros-nonfatal-errors.rs:98:10\n    |\n LL |     asm!(invalid);\n    |          ^^^^^^^\n \n error: concat_idents! requires ident args\n-  --> $DIR/macros-nonfatal-errors.rs:102:5\n+  --> $DIR/macros-nonfatal-errors.rs:101:5\n    |\n LL |     concat_idents!(\"not\", \"idents\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:104:17\n+  --> $DIR/macros-nonfatal-errors.rs:103:17\n    |\n LL |     option_env!(invalid);\n    |                 ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:105:10\n+  --> $DIR/macros-nonfatal-errors.rs:104:10\n    |\n LL |     env!(invalid);\n    |          ^^^^^^^\n \n error: expected string literal\n-  --> $DIR/macros-nonfatal-errors.rs:106:10\n+  --> $DIR/macros-nonfatal-errors.rs:105:10\n    |\n LL |     env!(foo, abr, baz);\n    |          ^^^\n \n error: environment variable `RUST_HOPEFULLY_THIS_DOESNT_EXIST` not defined\n-  --> $DIR/macros-nonfatal-errors.rs:107:5\n+  --> $DIR/macros-nonfatal-errors.rs:106:5\n    |\n LL |     env!(\"RUST_HOPEFULLY_THIS_DOESNT_EXIST\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `env` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: format argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:109:13\n+  --> $DIR/macros-nonfatal-errors.rs:108:13\n    |\n LL |     format!(invalid);\n    |             ^^^^^^^\n@@ -176,47 +176,47 @@ LL |     format!(\"{}\", invalid);\n    |             +++++\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:111:14\n+  --> $DIR/macros-nonfatal-errors.rs:110:14\n    |\n LL |     include!(invalid);\n    |              ^^^^^^^\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:113:18\n+  --> $DIR/macros-nonfatal-errors.rs:112:18\n    |\n LL |     include_str!(invalid);\n    |                  ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:114:5\n+  --> $DIR/macros-nonfatal-errors.rs:113:5\n    |\n LL |     include_str!(\"i'd be quite surprised if a file with this name existed\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_str` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: argument must be a string literal\n-  --> $DIR/macros-nonfatal-errors.rs:115:20\n+  --> $DIR/macros-nonfatal-errors.rs:114:20\n    |\n LL |     include_bytes!(invalid);\n    |                    ^^^^^^^\n \n error: couldn't read $DIR/i'd be quite surprised if a file with this name existed: $FILE_NOT_FOUND_MSG (os error 2)\n-  --> $DIR/macros-nonfatal-errors.rs:116:5\n+  --> $DIR/macros-nonfatal-errors.rs:115:5\n    |\n LL |     include_bytes!(\"i'd be quite surprised if a file with this name existed\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in the macro `include_bytes` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: trace_macros! accepts only `true` or `false`\n-  --> $DIR/macros-nonfatal-errors.rs:118:5\n+  --> $DIR/macros-nonfatal-errors.rs:117:5\n    |\n LL |     trace_macros!(invalid);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: cannot find macro `llvm_asm` in this scope\n-  --> $DIR/macros-nonfatal-errors.rs:100:5\n+  --> $DIR/macros-nonfatal-errors.rs:99:5\n    |\n LL |     llvm_asm!(invalid);\n    |     ^^^^^^^^"}]}