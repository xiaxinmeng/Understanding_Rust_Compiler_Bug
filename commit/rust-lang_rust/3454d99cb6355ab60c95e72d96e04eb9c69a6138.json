{"sha": "3454d99cb6355ab60c95e72d96e04eb9c69a6138", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NTRkOTljYjYzNTVhYjYwYzk1ZTcyZDk2ZTA0ZWI5YzY5YTYxMzg=", "commit": {"author": {"name": "Stuart Pernsteiner", "email": "spernsteiner@galois.com", "date": "2017-09-07T14:28:31Z"}, "committer": {"name": "Stuart Pernsteiner", "email": "spernsteiner@galois.com", "date": "2017-09-07T14:28:31Z"}, "message": "pprust: increase precedence of block-like exprs", "tree": {"sha": "a167db52e3405e84dd056a17d37d228f5739a451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a167db52e3405e84dd056a17d37d228f5739a451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3454d99cb6355ab60c95e72d96e04eb9c69a6138", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3454d99cb6355ab60c95e72d96e04eb9c69a6138", "html_url": "https://github.com/rust-lang/rust/commit/3454d99cb6355ab60c95e72d96e04eb9c69a6138", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3454d99cb6355ab60c95e72d96e04eb9c69a6138/comments", "author": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spernsteiner", "id": 3031136, "node_id": "MDQ6VXNlcjMwMzExMzY=", "avatar_url": "https://avatars.githubusercontent.com/u/3031136?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spernsteiner", "html_url": "https://github.com/spernsteiner", "followers_url": "https://api.github.com/users/spernsteiner/followers", "following_url": "https://api.github.com/users/spernsteiner/following{/other_user}", "gists_url": "https://api.github.com/users/spernsteiner/gists{/gist_id}", "starred_url": "https://api.github.com/users/spernsteiner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spernsteiner/subscriptions", "organizations_url": "https://api.github.com/users/spernsteiner/orgs", "repos_url": "https://api.github.com/users/spernsteiner/repos", "events_url": "https://api.github.com/users/spernsteiner/events{/privacy}", "received_events_url": "https://api.github.com/users/spernsteiner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "347db068a5786d3cac6e2204d7e14b635ece558d", "url": "https://api.github.com/repos/rust-lang/rust/commits/347db068a5786d3cac6e2204d7e14b635ece558d", "html_url": "https://github.com/rust-lang/rust/commit/347db068a5786d3cac6e2204d7e14b635ece558d"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "a06ea0af2a9e65cce8da09ec2f5b808c0bb724df", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3454d99cb6355ab60c95e72d96e04eb9c69a6138/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3454d99cb6355ab60c95e72d96e04eb9c69a6138/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=3454d99cb6355ab60c95e72d96e04eb9c69a6138", "patch": "@@ -2292,12 +2292,6 @@ fn expr_precedence(expr: &hir::Expr) -> i8 {\n         hir::ExprRet(..) |\n         hir::ExprYield(..) => PREC_JUMP,\n \n-        hir::ExprIf(..) |\n-        hir::ExprWhile(..) |\n-        hir::ExprLoop(..) |\n-        hir::ExprMatch(..) |\n-        hir::ExprBlock(..) => PREC_BLOCK,\n-\n         // Binop-like expr kinds, handled by `AssocOp`.\n         hir::ExprBinary(op, _, _) => bin_op_to_assoc_op(op.node).precedence() as i8,\n \n@@ -2326,6 +2320,11 @@ fn expr_precedence(expr: &hir::Expr) -> i8 {\n         hir::ExprTup(..) |\n         hir::ExprLit(..) |\n         hir::ExprPath(..) |\n+        hir::ExprIf(..) |\n+        hir::ExprWhile(..) |\n+        hir::ExprLoop(..) |\n+        hir::ExprMatch(..) |\n+        hir::ExprBlock(..) |\n         hir::ExprStruct(..) => PREC_PAREN,\n     }\n }"}, {"sha": "a4f06cb1b45da6fca561a7cba8cdde6f4ada1e9b", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3454d99cb6355ab60c95e72d96e04eb9c69a6138/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3454d99cb6355ab60c95e72d96e04eb9c69a6138/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=3454d99cb6355ab60c95e72d96e04eb9c69a6138", "patch": "@@ -219,7 +219,6 @@ impl AssocOp {\n pub const PREC_RESET: i8 = -100;\n pub const PREC_CLOSURE: i8 = -40;\n pub const PREC_JUMP: i8 = -30;\n-pub const PREC_BLOCK: i8 = -20;\n pub const PREC_RANGE: i8 = -10;\n // The range 2 ... 14 is reserved for AssocOp binary operator precedences.\n pub const PREC_PREFIX: i8 = 50;\n@@ -236,16 +235,6 @@ pub fn expr_precedence(expr: &ast::Expr) -> i8 {\n         ExprKind::Ret(..) |\n         ExprKind::Yield(..) => PREC_JUMP,\n \n-        ExprKind::If(..) |\n-        ExprKind::IfLet(..) |\n-        ExprKind::While(..) |\n-        ExprKind::WhileLet(..) |\n-        ExprKind::ForLoop(..) |\n-        ExprKind::Loop(..) |\n-        ExprKind::Match(..) |\n-        ExprKind::Block(..) |\n-        ExprKind::Catch(..) => PREC_BLOCK,\n-\n         // `Range` claims to have higher precedence than `Assign`, but `x .. x = x` fails to parse,\n         // instead of parsing as `(x .. x) = x`.  Giving `Range` a lower precedence ensures that\n         // `pprust` will add parentheses in the right places to get the desired parse.\n@@ -284,6 +273,15 @@ pub fn expr_precedence(expr: &ast::Expr) -> i8 {\n         ExprKind::Lit(..) |\n         ExprKind::Path(..) |\n         ExprKind::Paren(..) |\n+        ExprKind::If(..) |\n+        ExprKind::IfLet(..) |\n+        ExprKind::While(..) |\n+        ExprKind::WhileLet(..) |\n+        ExprKind::ForLoop(..) |\n+        ExprKind::Loop(..) |\n+        ExprKind::Match(..) |\n+        ExprKind::Block(..) |\n+        ExprKind::Catch(..) |\n         ExprKind::Struct(..) => PREC_PAREN,\n     }\n }"}]}