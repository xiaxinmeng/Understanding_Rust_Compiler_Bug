{"sha": "abd6f503fef1900f984d7676929581914306257f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZDZmNTAzZmVmMTkwMGY5ODRkNzY3NjkyOTU4MTkxNDMwNjI1N2Y=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-23T08:25:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-23T08:25:19Z"}, "message": "Rollup merge of #58227 - Aaronepower:master, r=Centril\n\nUpdated RELEASES.md for 1.33.0\n\n[Rendered](https://github.com/Aaronepower/rust/blob/master/RELEASES.md)\n\nr? @Mark-Simulacrum\n\ncc @rust-lang/release", "tree": {"sha": "336022e2fbb9523706e24fcdcf3bf587e356e3e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/336022e2fbb9523706e24fcdcf3bf587e356e3e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abd6f503fef1900f984d7676929581914306257f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJccQNvCRBK7hj4Ov3rIwAAdHIIAGtczu7LnN0q9GPQzpXoXNOO\n3ofEwOit8CmQWnvOmSxYwb3xdtt7VR7S6u4IT3OoHN7+mSTjMj9jh3FeXXwcSRuz\n+kB8wlQsWkVp0ve6SiAQMPrBv1fgO8VEsgbJM/zwM3KitARvcM5vq1ZSYtTdpx3u\nVeIY3Kuo7MgZz6urDczenLt1sXo+WZYJgEWrsgmP0qCu+iMLa9OsJl4WVtoJo3CO\nWPeXg+0nTquxu0pLT8ix8reAMMdApqHvPGtkJ8wKy3325w2iStvjhuKEwVB379UP\nV3TejvZxFg1CEhFakgj6Y+KAH1ckgbqa+yYjPwYiLs+Pk1IT1Nzn2TZ4F0LzrA4=\n=3Xew\n-----END PGP SIGNATURE-----\n", "payload": "tree 336022e2fbb9523706e24fcdcf3bf587e356e3e5\nparent 1d6657dd0a2d392c89ff6e6e92735bfa3210a5a6\nparent fda51c2fbd0c646af5c5356dba2ad59d2c8ea8f8\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550910319 +0100\ncommitter GitHub <noreply@github.com> 1550910319 +0100\n\nRollup merge of #58227 - Aaronepower:master, r=Centril\n\nUpdated RELEASES.md for 1.33.0\n\n[Rendered](https://github.com/Aaronepower/rust/blob/master/RELEASES.md)\n\nr? @Mark-Simulacrum\n\ncc @rust-lang/release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abd6f503fef1900f984d7676929581914306257f", "html_url": "https://github.com/rust-lang/rust/commit/abd6f503fef1900f984d7676929581914306257f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abd6f503fef1900f984d7676929581914306257f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d6657dd0a2d392c89ff6e6e92735bfa3210a5a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d6657dd0a2d392c89ff6e6e92735bfa3210a5a6", "html_url": "https://github.com/rust-lang/rust/commit/1d6657dd0a2d392c89ff6e6e92735bfa3210a5a6"}, {"sha": "fda51c2fbd0c646af5c5356dba2ad59d2c8ea8f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/fda51c2fbd0c646af5c5356dba2ad59d2c8ea8f8", "html_url": "https://github.com/rust-lang/rust/commit/fda51c2fbd0c646af5c5356dba2ad59d2c8ea8f8"}], "stats": {"total": 148, "additions": 148, "deletions": 0}, "files": [{"sha": "841467b69c9866438db0f012fa791e5c4ae89362", "filename": "RELEASES.md", "status": "modified", "additions": 148, "deletions": 0, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/abd6f503fef1900f984d7676929581914306257f/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/abd6f503fef1900f984d7676929581914306257f/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=abd6f503fef1900f984d7676929581914306257f", "patch": "@@ -1,3 +1,151 @@\n+Version 1.33.0 (2019-02-28)\n+==========================\n+\n+Language\n+--------\n+- [You can now use the `cfg(target_vendor)` attribute.][57465] E.g.\n+  `#[cfg(target_vendor=\"linux\")] fn main() { println!(\"Hello Linux!\"); }`\n+- [Integer patterns such as in a match expression can now be exhaustive.][56362]\n+  E.g. You can have match statement on a `u8` that covers `0..=255` and\n+  you would no longer be required to have a `_ => unreachable!()` case. \n+- [You can now have multiple patterns in `if let` and `while let`\n+  expressions.][57532] You can do this with the same syntax as a `match`\n+  expression. E.g.\n+  ```rust\n+  enum Creature {\n+      Crab(String),\n+      Lobster(String),\n+      Person(String),\n+  }\n+\n+  fn main() {\n+      let state = Creature::Crab(\"Ferris\");\n+\n+      if let Creature::Crab(name) | Creature::Person(name) = state {\n+          println!(\"This creature's name is: {}\", name);\n+      }\n+  }\n+  ```\n+- [You can now have irrefutable `if let` and `while let` patterns.][57535] Using\n+  this feature will by default produce a warning as this behaviour can be\n+  unintuitive. E.g. `if let _ = 5 {}`\n+- [You can now use `let` bindings, assignments, expression statements,\n+  and irrefutable pattern destructuring in const functions.][57175]\n+- [You can now call unsafe const functions.][57067] E.g.\n+  ```rust\n+  const unsafe fn foo() -> i32 { 5 }\n+  const fn bar() -> i32 {\n+      unsafe { foo() }\n+  }\n+  ```\n+- [You can now specify multiple attributes in a `cfg_attr` attribute.][57332]\n+  E.g. `#[cfg_attr(all(), must_use, optimize)]`\n+- [You can now specify a specific alignment with the `#[repr(packed)]`\n+  attribute.][57049] E.g. `#[repr(packed(2))] struct Foo(i16, i32);` is a struct\n+  with an alignment of 2 bytes and a size of 6 bytes.\n+- [You can now import an item from a module as an `_`.][56303] This allows you to\n+  import a trait's impls, and not have the name in the namespace. E.g.\n+  ```rust\n+  use std::io::Read as _;\n+\n+  // Allowed as there is only one `Read` in the module.\n+  pub trait Read {}\n+  ```\n+- [`extern` functions will now abort by default when panicking.][55982]\n+  This was previously undefined behaviour.\n+\n+Compiler\n+--------\n+- [You can now set a linker flavor for `rustc` with the `-Clinker-flavor`\n+  command line argument.][56351]\n+- [The mininum required LLVM version has been bumped to 6.0.][56642]\n+- [Added support for the PowerPC64 architecture on FreeBSD.][57615]\n+- [The `x86_64-fortanix-unknown-sgx` target support has been upgraded to\n+  tier 2 support.][57130] Visit the [platform support][platform-support] page for\n+  information on Rust's platform support.\n+- [Added support for the `thumbv7neon-linux-androideabi` and\n+  `thumbv7neon-unknown-linux-gnueabihf` targets.][56947]\n+- [Added support for the `x86_64-unknown-uefi` target.][56769]\n+\n+Libraries\n+---------\n+- [The methods `overflowing_{add, sub, mul, shl, shr}` are now `const`\n+  functions for all numeric types.][57566]\n+- [The methods `rotate_left`, `rotate_right`, and `wrapping_{add, sub, mul, shl, shr}`\n+  are now `const` functions for all numeric types.][57105]\n+- [The methods `is_positive` and `is_negative` are now `const` functions for\n+  all signed numeric types.][57105]\n+- [The `get` method for all `NonZero` types is now `const`.][57167]\n+- [The methods `count_ones`, `count_zeros`, `leading_zeros`, `trailing_zeros`,\n+  `swap_bytes`, `from_be`, `from_le`, `to_be`, `to_le` are now `const` for all\n+  numeric types.][57234]\n+- [`Ipv4Addr::new` is now a `const` function][57234]\n+\n+Stabilized APIs\n+---------------\n+- [`unix::FileExt::read_exact_at`]\n+- [`unix::FileExt::write_all_at`]\n+- [`Option::transpose`]\n+- [`Result::transpose`]\n+- [`convert::identity`]\n+- [`pin::Pin`]\n+- [`marker::Unpin`]\n+- [`marker::PhantomPinned`]\n+- [`Vec::resize_with`]\n+- [`VecDeque::resize_with`]\n+- [`Duration::as_millis`]\n+- [`Duration::as_micros`]\n+- [`Duration::as_nanos`]\n+\n+\n+Cargo\n+-----\n+- [Cargo should now rebuild a crate if a file was modified during the initial\n+  build.][cargo/6484]\n+\n+Compatibility Notes\n+-------------------\n+- The methods `str::{trim_left, trim_right, trim_left_matches, trim_right_matches}`\n+  are now deprecated in the standard library, and their usage will now produce a warning.\n+  Please use the `str::{trim_start, trim_end, trim_start_matches, trim_end_matches}`\n+  methods instead.\n+\n+[57615]: https://github.com/rust-lang/rust/pull/57615/\n+[57465]: https://github.com/rust-lang/rust/pull/57465/\n+[57532]: https://github.com/rust-lang/rust/pull/57532/\n+[57535]: https://github.com/rust-lang/rust/pull/57535/\n+[57566]: https://github.com/rust-lang/rust/pull/57566/\n+[57130]: https://github.com/rust-lang/rust/pull/57130/\n+[57167]: https://github.com/rust-lang/rust/pull/57167/\n+[57175]: https://github.com/rust-lang/rust/pull/57175/\n+[57234]: https://github.com/rust-lang/rust/pull/57234/\n+[57332]: https://github.com/rust-lang/rust/pull/57332/\n+[56947]: https://github.com/rust-lang/rust/pull/56947/\n+[57049]: https://github.com/rust-lang/rust/pull/57049/\n+[57067]: https://github.com/rust-lang/rust/pull/57067/\n+[56769]: https://github.com/rust-lang/rust/pull/56769/\n+[56642]: https://github.com/rust-lang/rust/pull/56642/\n+[56303]: https://github.com/rust-lang/rust/pull/56303/\n+[56351]: https://github.com/rust-lang/rust/pull/56351/\n+[55982]: https://github.com/rust-lang/rust/pull/55982/\n+[56362]: https://github.com/rust-lang/rust/pull/56362\n+[57105]: https://github.com/rust-lang/rust/pull/57105\n+[cargo/6484]: https://github.com/rust-lang/cargo/pull/6484/\n+[`unix::FileExt::read_exact_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.read_exact_at\n+[`unix::FileExt::write_all_at`]: https://doc.rust-lang.org/std/os/unix/fs/trait.FileExt.html#method.write_all_at\n+[`Option::transpose`]: https://doc.rust-lang.org/std/option/enum.Option.html#method.transpose\n+[`Result::transpose`]: https://doc.rust-lang.org/std/result/enum.Result.html#method.transpose\n+[`convert::identity`]: https://doc.rust-lang.org/std/convert/fn.identity.html\n+[`pin::Pin`]: https://doc.rust-lang.org/std/pin/struct.Pin.html\n+[`marker::Unpin`]: https://doc.rust-lang.org/stable/std/marker/trait.Unpin.html\n+[`marker::PhantomPinned`]: https://doc.rust-lang.org/nightly/std/marker/struct.PhantomPinned.html\n+[`Vec::resize_with`]: https://doc.rust-lang.org/std/vec/struct.Vec.html#method.resize_with\n+[`VecDeque::resize_with`]: https://doc.rust-lang.org/std/collections/struct.VecDeque.html#method.resize_with\n+[`Duration::as_millis`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.as_millis\n+[`Duration::as_micros`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.as_micros\n+[`Duration::as_nanos`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.as_nanos\n+[platform-support]: https://forge.rust-lang.org/platform-support.html\n+\n Version 1.32.0 (2019-01-17)\n ==========================\n "}]}