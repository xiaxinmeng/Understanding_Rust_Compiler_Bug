{"sha": "d178fce5fc702e1cad5445a15052912c2a60f669", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNzhmY2U1ZmM3MDJlMWNhZDU0NDVhMTUwNTI5MTJjMmE2MGY2Njk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-21T14:23:28Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-12-28T19:23:22Z"}, "message": "Add specific diagnostic for transmuting between equal associated types", "tree": {"sha": "1e8bb3705de73e3b6e9fd95d0b5ec369754d0432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e8bb3705de73e3b6e9fd95d0b5ec369754d0432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d178fce5fc702e1cad5445a15052912c2a60f669", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d178fce5fc702e1cad5445a15052912c2a60f669", "html_url": "https://github.com/rust-lang/rust/commit/d178fce5fc702e1cad5445a15052912c2a60f669", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d178fce5fc702e1cad5445a15052912c2a60f669/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cb1d953fd9c209a49bf14a0cb4505306c150a19", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cb1d953fd9c209a49bf14a0cb4505306c150a19", "html_url": "https://github.com/rust-lang/rust/commit/6cb1d953fd9c209a49bf14a0cb4505306c150a19"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "1716daaa107c4e335ef4f80fefe97644b1b71327", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d178fce5fc702e1cad5445a15052912c2a60f669/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d178fce5fc702e1cad5445a15052912c2a60f669/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=d178fce5fc702e1cad5445a15052912c2a60f669", "patch": "@@ -113,8 +113,12 @@ impl<'a, 'tcx> ExprVisitor<'a, 'tcx> {\n         let mut err = struct_span_err!(self.tcx.sess, span, E0512,\n                                        \"cannot transmute between types of different sizes, \\\n                                         or dependently-sized types\");\n+        if from == to {\n+            err.note(&format!(\"`{}` does not have a fixed size\", from));\n+        } else {\n             err.note(&format!(\"source type: `{}` ({})\", from, skeleton_string(from, sk_from)))\n                 .note(&format!(\"target type: `{}` ({})\", to, skeleton_string(to, sk_to)));\n+        }\n         err.emit()\n     }\n }"}, {"sha": "6f357543e5c44103705f931543ad6f593156f9f9", "filename": "src/test/ui/transmute-equal-assoc-types.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d178fce5fc702e1cad5445a15052912c2a60f669/src%2Ftest%2Fui%2Ftransmute-equal-assoc-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d178fce5fc702e1cad5445a15052912c2a60f669/src%2Ftest%2Fui%2Ftransmute-equal-assoc-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute-equal-assoc-types.rs?ref=d178fce5fc702e1cad5445a15052912c2a60f669", "patch": "@@ -0,0 +1,9 @@\n+trait Foo {\n+    type Bar;\n+}\n+\n+unsafe fn noop<F: Foo>(foo: F::Bar) -> F::Bar {\n+    ::std::mem::transmute(foo) //~ ERROR cannot transmute between types of different sizes\n+}\n+\n+fn main() {}"}, {"sha": "46bbf1c185889cb00b340ee9c7019e67530bf2db", "filename": "src/test/ui/transmute-equal-assoc-types.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d178fce5fc702e1cad5445a15052912c2a60f669/src%2Ftest%2Fui%2Ftransmute-equal-assoc-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d178fce5fc702e1cad5445a15052912c2a60f669/src%2Ftest%2Fui%2Ftransmute-equal-assoc-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftransmute-equal-assoc-types.stderr?ref=d178fce5fc702e1cad5445a15052912c2a60f669", "patch": "@@ -0,0 +1,11 @@\n+error[E0512]: cannot transmute between types of different sizes, or dependently-sized types\n+  --> $DIR/transmute-equal-assoc-types.rs:6:5\n+   |\n+LL |     ::std::mem::transmute(foo) //~ ERROR cannot transmute between types of different sizes\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `<F as Foo>::Bar` does not have a fixed size\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0512`."}]}