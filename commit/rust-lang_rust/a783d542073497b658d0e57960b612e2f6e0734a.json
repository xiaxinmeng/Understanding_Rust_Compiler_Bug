{"sha": "a783d542073497b658d0e57960b612e2f6e0734a", "node_id": "C_kwDOAAsO6NoAKGE3ODNkNTQyMDczNDk3YjY1OGQwZTU3OTYwYjYxMmUyZjZlMDczNGE", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2022-09-21T05:02:52Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2022-09-21T05:14:04Z"}, "message": "Fix ICE in `unnecessary_to_owned`\n\nFixes #9504\n\nCompiler generated call `into_iter` nodes return empty substs\nwhich we need when checking it's predicates. Handle this by\nsimply exitting when we encounter one. This change introduces\nfalse negatives in place of the ICEs.", "tree": {"sha": "e911c03c5828366fb48111e15959023eb0111ba8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e911c03c5828366fb48111e15959023eb0111ba8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a783d542073497b658d0e57960b612e2f6e0734a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a783d542073497b658d0e57960b612e2f6e0734a", "html_url": "https://github.com/rust-lang/rust/commit/a783d542073497b658d0e57960b612e2f6e0734a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a783d542073497b658d0e57960b612e2f6e0734a/comments", "author": null, "committer": null, "parents": [{"sha": "1f66a3e8d04756be3a72c5d8bd4414a5a20ef9f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f66a3e8d04756be3a72c5d8bd4414a5a20ef9f8", "html_url": "https://github.com/rust-lang/rust/commit/1f66a3e8d04756be3a72c5d8bd4414a5a20ef9f8"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "8e9ed33e00991b0f37cee431caaaa5e2c2d2862e", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a783d542073497b658d0e57960b612e2f6e0734a/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a783d542073497b658d0e57960b612e2f6e0734a/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=a783d542073497b658d0e57960b612e2f6e0734a", "patch": "@@ -8,7 +8,7 @@ use clippy_utils::visitors::find_all_ret_expressions;\n use clippy_utils::{fn_def_id, get_parent_expr, is_diag_item_method, is_diag_trait_item, return_ty};\n use clippy_utils::{meets_msrv, msrvs};\n use rustc_errors::Applicability;\n-use rustc_hir::{def_id::DefId, BorrowKind, Expr, ExprKind, ItemKind, Node};\n+use rustc_hir::{def_id::DefId, BorrowKind, Expr, ExprKind, ItemKind, LangItem, Node};\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_middle::mir::Mutability;\n@@ -380,6 +380,10 @@ fn can_change_type<'a>(cx: &LateContext<'a>, mut expr: &'a Expr<'a>, mut ty: Ty<\n             Node::Expr(parent_expr) => {\n                 if let Some((callee_def_id, call_substs, recv, call_args)) = get_callee_substs_and_args(cx, parent_expr)\n                 {\n+                    if cx.tcx.lang_items().require(LangItem::IntoFutureIntoFuture) == Ok(callee_def_id) {\n+                        return false;\n+                    }\n+\n                     let fn_sig = cx.tcx.fn_sig(callee_def_id).skip_binder();\n                     if let Some(arg_index) = recv.into_iter().chain(call_args).position(|arg| arg.hir_id == expr.hir_id)\n                         && let Some(param_ty) = fn_sig.inputs().get(arg_index)"}, {"sha": "f97583aa22f9a77247990c48aab8a68b9ae73715", "filename": "tests/ui/unnecessary_to_owned.fixed", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a783d542073497b658d0e57960b612e2f6e0734a/tests%2Fui%2Funnecessary_to_owned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a783d542073497b658d0e57960b612e2f6e0734a/tests%2Fui%2Funnecessary_to_owned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.fixed?ref=a783d542073497b658d0e57960b612e2f6e0734a", "patch": "@@ -417,3 +417,12 @@ mod issue_9351 {\n         predicates_are_satisfied(id(\"abc\".to_string()));\n     }\n }\n+\n+mod issue_9504 {\n+    #![allow(dead_code)]\n+\n+    async fn foo<S: AsRef<str>>(_: S) {}\n+    async fn bar() {\n+        foo(std::path::PathBuf::new().to_string_lossy().to_string()).await;\n+    }\n+}"}, {"sha": "aa5394a565790c3f1478f12a56421745b4b18391", "filename": "tests/ui/unnecessary_to_owned.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a783d542073497b658d0e57960b612e2f6e0734a/tests%2Fui%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a783d542073497b658d0e57960b612e2f6e0734a/tests%2Fui%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.rs?ref=a783d542073497b658d0e57960b612e2f6e0734a", "patch": "@@ -417,3 +417,12 @@ mod issue_9351 {\n         predicates_are_satisfied(id(\"abc\".to_string()));\n     }\n }\n+\n+mod issue_9504 {\n+    #![allow(dead_code)]\n+\n+    async fn foo<S: AsRef<str>>(_: S) {}\n+    async fn bar() {\n+        foo(std::path::PathBuf::new().to_string_lossy().to_string()).await;\n+    }\n+}"}]}