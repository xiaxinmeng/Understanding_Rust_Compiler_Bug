{"sha": "ab832fa4bb4c756091f191a1674d32d1bfa22c66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiODMyZmE0YmI0Yzc1NjA5MWYxOTFhMTY3NGQzMmQxYmZhMjJjNjY=", "commit": {"author": {"name": "C4K3", "email": "github25b@c4k3.net", "date": "2017-03-12T20:07:33Z"}, "committer": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-03-12T20:07:33Z"}, "message": "config: Rename ideal_width -> comment_width (#1370)\n\nSince the config option only affects comment widths, and the previous\r\nname has led to some confusion (see #1321, #1152).", "tree": {"sha": "0a82fcfa18bafcc5841ac9d5417cf9c27e2d18a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a82fcfa18bafcc5841ac9d5417cf9c27e2d18a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab832fa4bb4c756091f191a1674d32d1bfa22c66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab832fa4bb4c756091f191a1674d32d1bfa22c66", "html_url": "https://github.com/rust-lang/rust/commit/ab832fa4bb4c756091f191a1674d32d1bfa22c66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab832fa4bb4c756091f191a1674d32d1bfa22c66/comments", "author": {"login": "C4K3", "id": 4582830, "node_id": "MDQ6VXNlcjQ1ODI4MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/4582830?v=4", "gravatar_id": "", "url": "https://api.github.com/users/C4K3", "html_url": "https://github.com/C4K3", "followers_url": "https://api.github.com/users/C4K3/followers", "following_url": "https://api.github.com/users/C4K3/following{/other_user}", "gists_url": "https://api.github.com/users/C4K3/gists{/gist_id}", "starred_url": "https://api.github.com/users/C4K3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/C4K3/subscriptions", "organizations_url": "https://api.github.com/users/C4K3/orgs", "repos_url": "https://api.github.com/users/C4K3/repos", "events_url": "https://api.github.com/users/C4K3/events{/privacy}", "received_events_url": "https://api.github.com/users/C4K3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b60d94a9941f41787efacb59986563e31a05777", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b60d94a9941f41787efacb59986563e31a05777", "html_url": "https://github.com/rust-lang/rust/commit/4b60d94a9941f41787efacb59986563e31a05777"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "da52fb23e404afbf68066ae60c09505dfb2f6549", "filename": "Design.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab832fa4bb4c756091f191a1674d32d1bfa22c66/Design.md", "raw_url": "https://github.com/rust-lang/rust/raw/ab832fa4bb4c756091f191a1674d32d1bfa22c66/Design.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Design.md?ref=ab832fa4bb4c756091f191a1674d32d1bfa22c66", "patch": "@@ -150,7 +150,7 @@ for its configuration.\n \n Our visitor keeps track of the desired current indent due to blocks (\n `block_indent`). Each `visit_*` method reformats code according to this indent,\n-`config.ideal_width` and `config.max_width`. Most reformatting done in the\n+`config.comment_width` and `config.max_width`. Most reformatting done in the\n `visit_*` methods is a bit hackey and is meant to be temporary until it can be\n done properly.\n "}, {"sha": "fe597614a48051751195ecbbecf7ed0977bf9c5e", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=ab832fa4bb4c756091f191a1674d32d1bfa22c66", "patch": "@@ -338,7 +338,6 @@ create_config! {\n         \"Lines to format; this is not supported in rustfmt.toml, and can only be specified \\\n          via the --file-lines option\";\n     max_width: usize, 100, \"Maximum width of each line\";\n-    ideal_width: usize, 80, \"Ideal width of each line\";\n     error_on_line_overflow: bool, true, \"Error if unable to get all lines within max_width\";\n     tab_spaces: usize, 4, \"Number of spaces per tab\";\n     fn_call_width: usize, 60,\n@@ -396,6 +395,7 @@ create_config! {\n     take_source_hints: bool, false, \"Retain some formatting characteristics from the source code\";\n     hard_tabs: bool, false, \"Use tab characters for indentation, spaces for alignment\";\n     wrap_comments: bool, false, \"Break comments to fit on the line\";\n+    comment_width: usize, 80, \"Maximum length of comments. No effect unless wrap_comments = true\";\n     normalize_comments: bool, false, \"Convert /* */ comments to // comments where possible\";\n     wrap_match_arms: bool, true, \"Wrap multiline match arms in blocks\";\n     match_block_trailing_comma: bool, false,"}, {"sha": "7e4df9031ae8957ee1d757ae8ca2e4ce68fef69a", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=ab832fa4bb4c756091f191a1674d32d1bfa22c66", "patch": "@@ -763,7 +763,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n         // If the trait, generics, and trait bound cannot fit on the same line,\n         // put the trait bounds on an indented new line\n         if offset.width() + last_line_width(&result) + trait_bound_str.len() >\n-           context.config.ideal_width {\n+           context.config.comment_width {\n             result.push('\\n');\n             let trait_indent = offset.block_only().block_indent(context.config);\n             result.push_str(&trait_indent.to_string(context.config));\n@@ -799,7 +799,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n         // put the where clause on a new line\n         if !where_clause_str.contains('\\n') &&\n            last_line_width(&result) + where_clause_str.len() + offset.width() >\n-           context.config.ideal_width {\n+           context.config.comment_width {\n             result.push('\\n');\n             let width = offset.block_indent + context.config.tab_spaces - 1;\n             let where_indent = Indent::new(0, width);"}, {"sha": "1a1371a19cedc1b17a821aead2dcd3ac92d91775", "filename": "src/missed_spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=ab832fa4bb4c756091f191a1674d32d1bfa22c66", "patch": "@@ -143,7 +143,7 @@ impl<'a> FmtVisitor<'a> {\n                         self.buffer.push_str(\" \");\n                     }\n \n-                    let comment_width = ::std::cmp::min(self.config.ideal_width,\n+                    let comment_width = ::std::cmp::min(self.config.comment_width,\n                                                         self.config.max_width -\n                                                         self.block_indent.width());\n "}, {"sha": "2700287608de6f1944a3648c4f0fcdd5367fb476", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab832fa4bb4c756091f191a1674d32d1bfa22c66/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=ab832fa4bb4c756091f191a1674d32d1bfa22c66", "patch": "@@ -594,7 +594,7 @@ impl<'a> Rewrite for [ast::Attribute] {\n                     let comment = try_opt!(rewrite_comment(comment,\n                                                            false,\n                                                            Shape::legacy(context.config\n-                                                                             .ideal_width -\n+                                                                             .comment_width -\n                                                                          shape.indent.width(),\n                                                                          shape.indent),\n                                                            context.config));\n@@ -610,7 +610,7 @@ impl<'a> Rewrite for [ast::Attribute] {\n             if a_str.starts_with(\"//\") {\n                 a_str = try_opt!(rewrite_comment(&a_str,\n                                                  false,\n-                                                 Shape::legacy(context.config.ideal_width -\n+                                                 Shape::legacy(context.config.comment_width -\n                                                                shape.indent.width(),\n                                                                shape.indent),\n                                                  context.config));"}, {"sha": "69e9dfd5380c139c92c380c5cc5ea8228f6c9769", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab832fa4bb4c756091f191a1674d32d1bfa22c66/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ab832fa4bb4c756091f191a1674d32d1bfa22c66/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=ab832fa4bb4c756091f191a1674d32d1bfa22c66", "patch": "@@ -1,5 +1,5 @@\n max_width = 100\n-ideal_width = 80\n+comment_width = 80\n tab_spaces = 2\n newline_style = \"Unix\"\n fn_brace_style = \"SameLineWhere\""}]}