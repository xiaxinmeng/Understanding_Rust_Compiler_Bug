{"sha": "7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhMWJjNzljYmQ2ZmJmNTU3N2U1MjE2YjhlMmYzYzI5Y2JiYWNiMjk=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-03T23:49:23Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-04T04:41:09Z"}, "message": "Remove `LocalInternedString::intern`.", "tree": {"sha": "85a2c9621749f6b5240f87b173bd512321f66d9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85a2c9621749f6b5240f87b173bd512321f66d9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29", "html_url": "https://github.com/rust-lang/rust/commit/7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1cd79ff4e407ccaa1e3f7ac794812251600970c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1cd79ff4e407ccaa1e3f7ac794812251600970c", "html_url": "https://github.com/rust-lang/rust/commit/a1cd79ff4e407ccaa1e3f7ac794812251600970c"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "5c6031327013c5fbce92de08c152e70e17972694", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=7a1bc79cbd6fbf5577e5216b8e2f3c29cbbacb29", "patch": "@@ -1157,19 +1157,6 @@ pub struct LocalInternedString {\n     string: &'static str,\n }\n \n-impl LocalInternedString {\n-    /// Maps a string to its interned representation.\n-    pub fn intern(string: &str) -> Self {\n-        let string = with_interner(|interner| {\n-            let symbol = interner.intern(string);\n-            interner.strings[symbol.0.as_usize()]\n-        });\n-        LocalInternedString {\n-            string: unsafe { std::mem::transmute::<&str, &str>(string) }\n-        }\n-    }\n-}\n-\n impl<U: ?Sized> std::convert::AsRef<U> for LocalInternedString\n where\n     str: std::convert::AsRef<U>"}]}