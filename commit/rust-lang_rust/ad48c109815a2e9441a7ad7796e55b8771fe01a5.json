{"sha": "ad48c109815a2e9441a7ad7796e55b8771fe01a5", "node_id": "C_kwDOAAsO6NoAKGFkNDhjMTA5ODE1YTJlOTQ0MWE3YWQ3Nzk2ZTU1Yjg3NzFmZTAxYTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-23T04:36:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-23T04:36:34Z"}, "message": "Auto merge of #107044 - cuviper:more-llvm-ci, r=Mark-Simulacrum\n\nci: add runners for vanilla LLVM 14 and 15\n\nAs discussed in [zulip #t-infra][1] -- r? Mark-Simulacrum\n\n[1]: https://rust-lang.zulipchat.com/#narrow/stream/242791-t-infra/topic/testing.20multiple.20llvm.20versions", "tree": {"sha": "13bde5349aca6b4aba08d311067e353ab5744c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13bde5349aca6b4aba08d311067e353ab5744c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad48c109815a2e9441a7ad7796e55b8771fe01a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad48c109815a2e9441a7ad7796e55b8771fe01a5", "html_url": "https://github.com/rust-lang/rust/commit/ad48c109815a2e9441a7ad7796e55b8771fe01a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad48c109815a2e9441a7ad7796e55b8771fe01a5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3322e277311033bd6dd646b1ad7f2604db0c946", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3322e277311033bd6dd646b1ad7f2604db0c946", "html_url": "https://github.com/rust-lang/rust/commit/d3322e277311033bd6dd646b1ad7f2604db0c946"}, {"sha": "318d77ddfd87d034d54c4e73a3793fbc743b0476", "url": "https://api.github.com/repos/rust-lang/rust/commits/318d77ddfd87d034d54c4e73a3793fbc743b0476", "html_url": "https://github.com/rust-lang/rust/commit/318d77ddfd87d034d54c4e73a3793fbc743b0476"}], "stats": {"total": 152, "additions": 152, "deletions": 0}, "files": [{"sha": "5f77656e5c189957be0dca0cb1047f2195795a4a", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ad48c109815a2e9441a7ad7796e55b8771fe01a5/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ad48c109815a2e9441a7ad7796e55b8771fe01a5/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=ad48c109815a2e9441a7ad7796e55b8771fe01a5", "patch": "@@ -291,6 +291,14 @@ jobs:\n           - name: x86_64-gnu-distcheck\n             os: ubuntu-20.04-xl\n             env: {}\n+          - name: x86_64-gnu-llvm-15\n+            env:\n+              RUST_BACKTRACE: 1\n+            os: ubuntu-20.04-xl\n+          - name: x86_64-gnu-llvm-14\n+            env:\n+              RUST_BACKTRACE: 1\n+            os: ubuntu-20.04-xl\n           - name: x86_64-gnu-llvm-13\n             env:\n               RUST_BACKTRACE: 1"}, {"sha": "db6032f87521177d847b4ce9ce5fb617a7d17e0f", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-14/Dockerfile", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/ad48c109815a2e9441a7ad7796e55b8771fe01a5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-14%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ad48c109815a2e9441a7ad7796e55b8771fe01a5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-14%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-14%2FDockerfile?ref=ad48c109815a2e9441a7ad7796e55b8771fe01a5", "patch": "@@ -0,0 +1,67 @@\n+FROM ubuntu:22.04\n+\n+ARG DEBIAN_FRONTEND=noninteractive\n+\n+# NOTE: intentionally installs both python2 and python3 so we can test support for both.\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  gcc-multilib \\\n+  make \\\n+  ninja-build \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python3 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  llvm-14-tools \\\n+  llvm-14-dev \\\n+  libedit-dev \\\n+  libssl-dev \\\n+  pkg-config \\\n+  zlib1g-dev \\\n+  xz-utils \\\n+  nodejs \\\n+  && rm -rf /var/lib/apt/lists/*\n+\n+# Install powershell (universal package) so we can test x.ps1 on Linux\n+RUN curl -sL \"https://github.com/PowerShell/PowerShell/releases/download/v7.3.1/powershell_7.3.1-1.deb_amd64.deb\" > powershell.deb && \\\n+    dpkg -i powershell.deb && \\\n+    rm -f powershell.deb\n+\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# We are disabling CI LLVM since this builder is intentionally using a host\n+# LLVM, rather than the typical src/llvm-project LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n+# Using llvm-link-shared due to libffi issues -- see #34486\n+ENV RUST_CONFIGURE_ARGS \\\n+      --build=x86_64-unknown-linux-gnu \\\n+      --llvm-root=/usr/lib/llvm-14 \\\n+      --enable-llvm-link-shared \\\n+      --set rust.thin-lto-import-instr-limit=10\n+\n+# NOTE: intentionally uses all of `x.py`, `x`, and `x.ps1` to make sure they all work on Linux.\n+ENV SCRIPT ../x.py --stage 2 test --exclude src/tools/tidy && \\\n+           # Run the `mir-opt` tests again but this time for a 32-bit target.\n+           # This enforces that tests using `// EMIT_MIR_FOR_EACH_BIT_WIDTH` have\n+           # both 32-bit and 64-bit outputs updated by the PR author, before\n+           # the PR is approved and tested for merging.\n+           # It will also detect tests lacking `// EMIT_MIR_FOR_EACH_BIT_WIDTH`,\n+           # despite having different output on 32-bit vs 64-bit targets.\n+           ../x --stage 2 test tests/mir-opt \\\n+                             --host='' --target=i686-unknown-linux-gnu && \\\n+           # Run the UI test suite again, but in `--pass=check` mode\n+           #\n+           # This is intended to make sure that both `--pass=check` continues to\n+           # work.\n+           #\n+           ../x.ps1 --stage 2 test tests/ui --pass=check \\\n+                             --host='' --target=i686-unknown-linux-gnu && \\\n+           # Run tidy at the very end, after all the other tests.\n+           python2.7 ../x.py --stage 2 test src/tools/tidy"}, {"sha": "5219247cc6f6c0825dd3977996e1054dd5686e31", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-llvm-15/Dockerfile", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/ad48c109815a2e9441a7ad7796e55b8771fe01a5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-15%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/ad48c109815a2e9441a7ad7796e55b8771fe01a5/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-15%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-llvm-15%2FDockerfile?ref=ad48c109815a2e9441a7ad7796e55b8771fe01a5", "patch": "@@ -0,0 +1,67 @@\n+FROM ubuntu:22.10\n+\n+ARG DEBIAN_FRONTEND=noninteractive\n+\n+# NOTE: intentionally installs both python2 and python3 so we can test support for both.\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  gcc-multilib \\\n+  make \\\n+  ninja-build \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python2.7 \\\n+  python3 \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  llvm-15-tools \\\n+  llvm-15-dev \\\n+  libedit-dev \\\n+  libssl-dev \\\n+  pkg-config \\\n+  zlib1g-dev \\\n+  xz-utils \\\n+  nodejs \\\n+  && rm -rf /var/lib/apt/lists/*\n+\n+# Install powershell (universal package) so we can test x.ps1 on Linux\n+RUN curl -sL \"https://github.com/PowerShell/PowerShell/releases/download/v7.3.1/powershell_7.3.1-1.deb_amd64.deb\" > powershell.deb && \\\n+    dpkg -i powershell.deb && \\\n+    rm -f powershell.deb\n+\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# We are disabling CI LLVM since this builder is intentionally using a host\n+# LLVM, rather than the typical src/llvm-project LLVM.\n+ENV NO_DOWNLOAD_CI_LLVM 1\n+\n+# Using llvm-link-shared due to libffi issues -- see #34486\n+ENV RUST_CONFIGURE_ARGS \\\n+      --build=x86_64-unknown-linux-gnu \\\n+      --llvm-root=/usr/lib/llvm-15 \\\n+      --enable-llvm-link-shared \\\n+      --set rust.thin-lto-import-instr-limit=10\n+\n+# NOTE: intentionally uses all of `x.py`, `x`, and `x.ps1` to make sure they all work on Linux.\n+ENV SCRIPT ../x.py --stage 2 test --exclude src/tools/tidy && \\\n+           # Run the `mir-opt` tests again but this time for a 32-bit target.\n+           # This enforces that tests using `// EMIT_MIR_FOR_EACH_BIT_WIDTH` have\n+           # both 32-bit and 64-bit outputs updated by the PR author, before\n+           # the PR is approved and tested for merging.\n+           # It will also detect tests lacking `// EMIT_MIR_FOR_EACH_BIT_WIDTH`,\n+           # despite having different output on 32-bit vs 64-bit targets.\n+           ../x --stage 2 test tests/mir-opt \\\n+                             --host='' --target=i686-unknown-linux-gnu && \\\n+           # Run the UI test suite again, but in `--pass=check` mode\n+           #\n+           # This is intended to make sure that both `--pass=check` continues to\n+           # work.\n+           #\n+           ../x.ps1 --stage 2 test tests/ui --pass=check \\\n+                             --host='' --target=i686-unknown-linux-gnu && \\\n+           # Run tidy at the very end, after all the other tests.\n+           python2.7 ../x.py --stage 2 test src/tools/tidy"}, {"sha": "a466777dd46f85766125d8ec2a5e12655f32953a", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ad48c109815a2e9441a7ad7796e55b8771fe01a5/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/ad48c109815a2e9441a7ad7796e55b8771fe01a5/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=ad48c109815a2e9441a7ad7796e55b8771fe01a5", "patch": "@@ -450,6 +450,16 @@ jobs:\n           - name: x86_64-gnu-distcheck\n             <<: *job-linux-xl\n \n+          - name: x86_64-gnu-llvm-15\n+            env:\n+              RUST_BACKTRACE: 1\n+            <<: *job-linux-xl\n+\n+          - name: x86_64-gnu-llvm-14\n+            env:\n+              RUST_BACKTRACE: 1\n+            <<: *job-linux-xl\n+\n           - name: x86_64-gnu-llvm-13\n             env:\n               RUST_BACKTRACE: 1"}]}