{"sha": "5eb4e1a6590908a2b58dc08b815ecb32868217f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlYjRlMWE2NTkwOTA4YTJiNThkYzA4YjgxNWVjYjMyODY4MjE3ZjI=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-08-12T11:00:25Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-08-12T11:58:36Z"}, "message": "~ -> Box in the manual\n\nFixes #16439", "tree": {"sha": "3f3f8a55168e03807d4f4bae5314aed1d479de3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f3f8a55168e03807d4f4bae5314aed1d479de3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5eb4e1a6590908a2b58dc08b815ecb32868217f2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5eb4e1a6590908a2b58dc08b815ecb32868217f2", "html_url": "https://github.com/rust-lang/rust/commit/5eb4e1a6590908a2b58dc08b815ecb32868217f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5eb4e1a6590908a2b58dc08b815ecb32868217f2/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6faad3ec3aba8e9ea7c68331b7c6561890929658", "url": "https://api.github.com/repos/rust-lang/rust/commits/6faad3ec3aba8e9ea7c68331b7c6561890929658", "html_url": "https://github.com/rust-lang/rust/commit/6faad3ec3aba8e9ea7c68331b7c6561890929658"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "309bd520c231042a2ce7582944d4f27d98fe59d4", "filename": "src/doc/rust.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5eb4e1a6590908a2b58dc08b815ecb32868217f2/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/5eb4e1a6590908a2b58dc08b815ecb32868217f2/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=5eb4e1a6590908a2b58dc08b815ecb32868217f2", "patch": "@@ -1535,7 +1535,7 @@ Likewise, supertrait methods may also be called on trait objects.\n # impl Shape for int { fn area(&self) -> f64 { 0.0 } }\n # impl Circle for int { fn radius(&self) -> f64 { 0.0 } }\n # let mycircle = 0;\n-let mycircle: Circle = ~mycircle as ~Circle;\n+let mycircle = box mycircle as Box<Circle>;\n let nonsense = mycircle.radius() * mycircle.area();\n ~~~~\n "}]}