{"sha": "72a16210613f0b25dc3f5608e491b94c18001f6d", "node_id": "C_kwDOAAsO6NoAKDcyYTE2MjEwNjEzZjBiMjVkYzNmNTYwOGU0OTFiOTRjMTgwMDFmNmQ", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-28T02:58:36Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-06-30T20:04:36Z"}, "message": "Use `split_{first,last}` in `cs_fold1`.\n\nIt makes the code a little nicer to read.", "tree": {"sha": "f18c806c3f2ff69ae4cbe7691872e3b050320749", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f18c806c3f2ff69ae4cbe7691872e3b050320749"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/72a16210613f0b25dc3f5608e491b94c18001f6d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/72a16210613f0b25dc3f5608e491b94c18001f6d", "html_url": "https://github.com/rust-lang/rust/commit/72a16210613f0b25dc3f5608e491b94c18001f6d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/72a16210613f0b25dc3f5608e491b94c18001f6d/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddcbba036aee08f0709f98a92a342a278eae5c05", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddcbba036aee08f0709f98a92a342a278eae5c05", "html_url": "https://github.com/rust-lang/rust/commit/ddcbba036aee08f0709f98a92a342a278eae5c05"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "e6b21b3ff944e2916cc88459103653cc9f6397ce", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/mod.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/72a16210613f0b25dc3f5608e491b94c18001f6d/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/72a16210613f0b25dc3f5608e491b94c18001f6d/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs?ref=72a16210613f0b25dc3f5608e491b94c18001f6d", "patch": "@@ -1717,22 +1717,21 @@ where\n {\n     match *substructure.fields {\n         EnumMatching(.., ref all_fields) | Struct(_, ref all_fields) => {\n-            let (base, all_fields) = match (all_fields.is_empty(), use_foldl) {\n+            let (base, rest) = match (all_fields.is_empty(), use_foldl) {\n                 (false, true) => {\n-                    let field = &all_fields[0];\n-                    let args = (field.span, field.self_.clone(), &field.other[..]);\n-                    (b(cx, Some(args)), &all_fields[1..])\n+                    let (first, rest) = all_fields.split_first().unwrap();\n+                    let args = (first.span, first.self_.clone(), &first.other[..]);\n+                    (b(cx, Some(args)), rest)\n                 }\n                 (false, false) => {\n-                    let idx = all_fields.len() - 1;\n-                    let field = &all_fields[idx];\n-                    let args = (field.span, field.self_.clone(), &field.other[..]);\n-                    (b(cx, Some(args)), &all_fields[..idx])\n+                    let (last, rest) = all_fields.split_last().unwrap();\n+                    let args = (last.span, last.self_.clone(), &last.other[..]);\n+                    (b(cx, Some(args)), rest)\n                 }\n                 (true, _) => (b(cx, None), &all_fields[..]),\n             };\n \n-            cs_fold_fields(use_foldl, f, base, cx, all_fields)\n+            cs_fold_fields(use_foldl, f, base, cx, rest)\n         }\n         EnumNonMatchingCollapsed(..) => {\n             cs_fold_enumnonmatch(enum_nonmatch_f, cx, trait_span, substructure)"}]}