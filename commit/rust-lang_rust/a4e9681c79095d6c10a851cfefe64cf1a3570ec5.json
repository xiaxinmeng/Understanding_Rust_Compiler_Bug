{"sha": "a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0ZTk2ODFjNzkwOTVkNmMxMGE4NTFjZmVmZTY0Y2YxYTM1NzBlYzU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-16T16:13:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-16T16:13:43Z"}, "message": "Better module structure", "tree": {"sha": "7ffe79ebb62ca9aebd3dab258e6cd75987fb9913", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ffe79ebb62ca9aebd3dab258e6cd75987fb9913"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "html_url": "https://github.com/rust-lang/rust/commit/a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29832b8c3db509dea8da9164e980ccac4bccf47d", "url": "https://api.github.com/repos/rust-lang/rust/commits/29832b8c3db509dea8da9164e980ccac4bccf47d", "html_url": "https://github.com/rust-lang/rust/commit/29832b8c3db509dea8da9164e980ccac4bccf47d"}], "stats": {"total": 51, "additions": 27, "deletions": 24}, "files": [{"sha": "1ec9463690f000930c596f614a9afae31c2ecd26", "filename": "crates/ra_ide/src/display.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Fra_ide%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay.rs?ref=a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "patch": "@@ -3,20 +3,18 @@\n \n pub(crate) mod function_signature;\n mod navigation_target;\n-mod structure;\n mod short_label;\n \n use ra_syntax::{\n     ast::{self, AstNode, AttrsOwner, NameOwner, TypeParamsOwner},\n     SyntaxKind::{ATTR, COMMENT},\n };\n \n-pub use navigation_target::NavigationTarget;\n-pub use structure::{file_structure, StructureNode};\n-\n pub(crate) use navigation_target::{ToNav, TryToNav};\n pub(crate) use short_label::ShortLabel;\n \n+pub use navigation_target::NavigationTarget;\n+\n pub(crate) fn function_label(node: &ast::FnDef) -> String {\n     function_signature::FunctionSignature::from(node).to_string()\n }"}, {"sha": "1f6a3febf37108565ccd0db728c988efb9dd685f", "filename": "crates/ra_ide/src/file_structure.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffile_structure.rs?ref=a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "previous_filename": "crates/ra_ide/src/display/structure.rs"}, {"sha": "d3b20f371b99857d3a47ec0d5e4308172a475961", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "patch": "@@ -19,29 +19,31 @@ pub mod mock_analysis;\n \n mod markup;\n mod prime_caches;\n-mod status;\n+mod display;\n+\n+mod call_hierarchy;\n+mod call_info;\n mod completion;\n-mod runnables;\n+mod diagnostics;\n+mod expand_macro;\n+mod extend_selection;\n+mod file_structure;\n+mod folding_ranges;\n mod goto_definition;\n-mod goto_type_definition;\n mod goto_implementation;\n-mod extend_selection;\n+mod goto_type_definition;\n mod hover;\n-mod call_hierarchy;\n-mod call_info;\n-mod syntax_highlighting;\n+mod inlay_hints;\n+mod join_lines;\n+mod matching_brace;\n mod parent_module;\n mod references;\n-mod diagnostics;\n+mod runnables;\n+mod ssr;\n+mod status;\n+mod syntax_highlighting;\n mod syntax_tree;\n-mod folding_ranges;\n-mod join_lines;\n mod typing;\n-mod matching_brace;\n-mod display;\n-mod inlay_hints;\n-mod expand_macro;\n-mod ssr;\n \n use std::sync::Arc;\n \n@@ -65,8 +67,9 @@ pub use crate::{\n         CompletionConfig, CompletionItem, CompletionItemKind, CompletionScore, InsertTextFormat,\n     },\n     diagnostics::Severity,\n-    display::{file_structure, NavigationTarget, StructureNode},\n+    display::NavigationTarget,\n     expand_macro::ExpandedMacro,\n+    file_structure::StructureNode,\n     folding_ranges::{Fold, FoldKind},\n     hover::{HoverAction, HoverConfig, HoverGotoTypeData, HoverResult},\n     inlay_hints::{InlayHint, InlayHintsConfig, InlayKind},\n@@ -323,7 +326,7 @@ impl Analysis {\n     /// Returns a tree representation of symbols in the file. Useful to draw a\n     /// file outline.\n     pub fn file_structure(&self, file_id: FileId) -> Cancelable<Vec<StructureNode>> {\n-        self.with_db(|db| file_structure(&db.parse(file_id).tree()))\n+        self.with_db(|db| file_structure::file_structure(&db.parse(file_id).tree()))\n     }\n \n     /// Returns a list of the places in the file where type hints can be displayed."}, {"sha": "753001949e2a523d4241c613683d020e0dbcb451", "filename": "crates/rust-analyzer/src/cli.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4e9681c79095d6c10a851cfefe64cf1a3570ec5/crates%2Frust-analyzer%2Fsrc%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli.rs?ref=a4e9681c79095d6c10a851cfefe64cf1a3570ec5", "patch": "@@ -10,7 +10,7 @@ mod ssr;\n use std::io::Read;\n \n use anyhow::Result;\n-use ra_ide::{file_structure, Analysis};\n+use ra_ide::Analysis;\n use ra_prof::profile;\n use ra_syntax::{AstNode, SourceFile};\n \n@@ -48,8 +48,10 @@ pub fn parse(no_dump: bool) -> Result<()> {\n }\n \n pub fn symbols() -> Result<()> {\n-    let file = file()?;\n-    for s in file_structure(&file) {\n+    let text = read_stdin()?;\n+    let (analysis, file_id) = Analysis::from_single_file(text);\n+    let structure = analysis.file_structure(file_id).unwrap();\n+    for s in structure {\n         println!(\"{:?}\", s);\n     }\n     Ok(())"}]}