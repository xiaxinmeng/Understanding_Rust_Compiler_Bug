{"sha": "80d5478649b5c26846afb1a923c24f8103b887cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZDU0Nzg2NDliNWMyNjg0NmFmYjFhOTIzYzI0ZjgxMDNiODg3Y2Y=", "commit": {"author": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-04T12:36:40Z"}, "committer": {"name": "Saleem Jaffer", "email": "ssaleem1992@gmail.com", "date": "2019-05-04T12:36:40Z"}, "message": "removing param_env from pointee_info_at", "tree": {"sha": "4540fbb7f8c7572dc74de877a11726dc6949de4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4540fbb7f8c7572dc74de877a11726dc6949de4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80d5478649b5c26846afb1a923c24f8103b887cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80d5478649b5c26846afb1a923c24f8103b887cf", "html_url": "https://github.com/rust-lang/rust/commit/80d5478649b5c26846afb1a923c24f8103b887cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80d5478649b5c26846afb1a923c24f8103b887cf/comments", "author": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saleemjaffer", "id": 19221716, "node_id": "MDQ6VXNlcjE5MjIxNzE2", "avatar_url": "https://avatars.githubusercontent.com/u/19221716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saleemjaffer", "html_url": "https://github.com/saleemjaffer", "followers_url": "https://api.github.com/users/saleemjaffer/followers", "following_url": "https://api.github.com/users/saleemjaffer/following{/other_user}", "gists_url": "https://api.github.com/users/saleemjaffer/gists{/gist_id}", "starred_url": "https://api.github.com/users/saleemjaffer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saleemjaffer/subscriptions", "organizations_url": "https://api.github.com/users/saleemjaffer/orgs", "repos_url": "https://api.github.com/users/saleemjaffer/repos", "events_url": "https://api.github.com/users/saleemjaffer/events{/privacy}", "received_events_url": "https://api.github.com/users/saleemjaffer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94a48924da05d2c3c147ce7739d497fdcf33ca01", "url": "https://api.github.com/repos/rust-lang/rust/commits/94a48924da05d2c3c147ce7739d497fdcf33ca01", "html_url": "https://github.com/rust-lang/rust/commit/94a48924da05d2c3c147ce7739d497fdcf33ca01"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "9a5db202296070682b88fb104100b7ac79e9b2f9", "filename": "src/librustc/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Flayout.rs?ref=80d5478649b5c26846afb1a923c24f8103b887cf", "patch": "@@ -1677,8 +1677,6 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n           C::TyLayout: MaybeResult<TyLayout<'tcx>>,\n           C: HasParamEnv<'tcx>\n {\n-    type ParamEnv = ty::ParamEnv<'tcx>;\n-\n     fn for_variant(this: TyLayout<'tcx>, cx: &C, variant_index: VariantIdx) -> TyLayout<'tcx> {\n         let details = match this.variants {\n             Variants::Single { index } if index == variant_index => this.details,\n@@ -1850,7 +1848,6 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n         this: TyLayout<'tcx>,\n         cx: &C,\n         offset: Size,\n-        param_env: Self::ParamEnv,\n     ) -> Option<PointeeInfo> {\n         match this.ty.sty {\n             ty::RawPtr(mt) if offset.bytes() == 0 => {\n@@ -1864,7 +1861,7 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n \n             ty::Ref(_, ty, mt) if offset.bytes() == 0 => {\n                 let tcx = cx.tcx();\n-                let is_freeze = ty.is_freeze(tcx, param_env, DUMMY_SP);\n+                let is_freeze = ty.is_freeze(tcx, cx.param_env(), DUMMY_SP);\n                 let kind = match mt {\n                     hir::MutImmutable => if is_freeze {\n                         PointerKind::Frozen\n@@ -1945,7 +1942,7 @@ impl<'a, 'tcx, C> TyLayoutMethods<'tcx, C> for Ty<'tcx>\n                                 .and_then(|field| {\n                                     if ptr_end <= field_start + field.size {\n                                         // We found the right field, look inside it.\n-                                        field.pointee_info_at(cx, offset - field_start, param_env)\n+                                        field.pointee_info_at(cx, offset - field_start)\n                                     } else {\n                                         None\n                                     }"}, {"sha": "70d184240fccd1a6bd85d94813809eaa7ab14860", "filename": "src/librustc_codegen_llvm/abi.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_codegen_llvm%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_codegen_llvm%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fabi.rs?ref=80d5478649b5c26846afb1a923c24f8103b887cf", "patch": "@@ -12,7 +12,7 @@ use rustc_target::abi::call::ArgType;\n use rustc_codegen_ssa::traits::*;\n \n use rustc_target::abi::{HasDataLayout, LayoutOf, Size, TyLayout, Abi as LayoutAbi};\n-use rustc::ty::{self, Ty, Instance, ParamEnv};\n+use rustc::ty::{self, Ty, Instance};\n use rustc::ty::layout::{self, PointerKind};\n \n use libc::c_uint;\n@@ -478,7 +478,7 @@ impl<'tcx> FnTypeExt<'tcx> for FnType<'tcx, Ty<'tcx>> {\n                 }\n             }\n \n-            if let Some(pointee) = layout.pointee_info_at(cx, offset, ParamEnv::reveal_all()) {\n+            if let Some(pointee) = layout.pointee_info_at(cx, offset) {\n                 if let Some(kind) = pointee.safe {\n                     attrs.pointee_size = pointee.size;\n                     attrs.pointee_align = Some(pointee.align);"}, {"sha": "7bf8f705ea8ad84d2427bb70c3a6b557463ae385", "filename": "src/librustc_codegen_llvm/context.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_codegen_llvm%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcontext.rs?ref=80d5478649b5c26846afb1a923c24f8103b887cf", "patch": "@@ -15,7 +15,9 @@ use rustc_data_structures::small_c_str::SmallCStr;\n use rustc::mir::mono::Stats;\n use rustc::session::config::{self, DebugInfo};\n use rustc::session::Session;\n-use rustc::ty::layout::{LayoutError, LayoutOf, PointeeInfo, Size, TyLayout, VariantIdx, HasParamEnv};\n+use rustc::ty::layout::{\n+    LayoutError, LayoutOf, PointeeInfo, Size, TyLayout, VariantIdx, HasParamEnv\n+};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::util::nodemap::FxHashMap;\n use rustc_target::spec::{HasTargetSpec, Target};\n@@ -864,6 +866,6 @@ impl LayoutOf for CodegenCx<'ll, 'tcx> {\n \n impl<'tcx, 'll> HasParamEnv<'tcx> for CodegenCx<'ll, 'tcx> {\n     fn param_env(&self) -> ty::ParamEnv<'tcx> {\n-        panic!(\"asd\")\n+        ty::ParamEnv::reveal_all()\n     }\n }"}, {"sha": "ff25ed9256613c867cae9a3b9315a5549b34b67d", "filename": "src/librustc_codegen_llvm/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_codegen_llvm%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Ftype_of.rs?ref=80d5478649b5c26846afb1a923c24f8103b887cf", "patch": "@@ -383,7 +383,7 @@ impl<'tcx> LayoutLlvmExt<'tcx> for TyLayout<'tcx> {\n             return pointee;\n         }\n \n-        let result = Ty::pointee_info_at(*self, cx, offset, ty::ParamEnv::reveal_all());\n+        let result = Ty::pointee_info_at(*self, cx, offset);\n \n         cx.pointee_infos.borrow_mut().insert((self.ty, offset), result);\n         result"}, {"sha": "4b61057e5cf6cec4b5c5d13dc807880517297261", "filename": "src/librustc_target/abi/mod.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_target%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d5478649b5c26846afb1a923c24f8103b887cf/src%2Flibrustc_target%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fabi%2Fmod.rs?ref=80d5478649b5c26846afb1a923c24f8103b887cf", "patch": "@@ -933,8 +933,6 @@ pub struct PointeeInfo {\n }\n \n pub trait TyLayoutMethods<'a, C: LayoutOf<Ty = Self>>: Sized {\n-    type ParamEnv;\n-\n     fn for_variant(\n         this: TyLayout<'a, Self>,\n         cx: &C,\n@@ -945,7 +943,6 @@ pub trait TyLayoutMethods<'a, C: LayoutOf<Ty = Self>>: Sized {\n         this: TyLayout<'a, Self>,\n         cx: &C,\n         offset: Size,\n-        param_env: Self::ParamEnv,\n     ) -> Option<PointeeInfo>;\n }\n \n@@ -958,11 +955,9 @@ impl<'a, Ty> TyLayout<'a, Ty> {\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> {\n         Ty::field(self, cx, i)\n     }\n-    pub fn pointee_info_at<C>(\n-        self, cx: &C, offset: Size, param_env: Ty::ParamEnv\n-    ) -> Option<PointeeInfo>\n+    pub fn pointee_info_at<C>(self, cx: &C, offset: Size) -> Option<PointeeInfo>\n     where Ty: TyLayoutMethods<'a, C>, C: LayoutOf<Ty = Ty> {\n-        Ty::pointee_info_at(self, cx, offset, param_env)\n+        Ty::pointee_info_at(self, cx, offset)\n     }\n }\n "}]}