{"sha": "f9b0561031b5ddeca0985c1551c4076243efced1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5YjA1NjEwMzFiNWRkZWNhMDk4NWMxNTUxYzQwNzYyNDNlZmNlZDE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-01-23T00:02:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-01-23T00:02:14Z"}, "message": "Rollup merge of #68409 - sinkuu:temp_path, r=Mark-Simulacrum\n\nMicro-optimize OutputFilenames\n\nFor example, its methods consume 6% of time during debug-compiling a `warp` example:\n![Screenshot (debug-compiling a `warp` example)](https://user-images.githubusercontent.com/7091080/72780288-d74f1580-3c61-11ea-953b-34e59ca682f9.png)\n\nThis PR optimize them a bit by using `PathBuf::set_extension` instead of `Path::with_extension`, to avoid cloning `PathBuf` excessively.", "tree": {"sha": "d816e7c603945b6e5f05402a6e5f0f43a30e6823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d816e7c603945b6e5f05402a6e5f0f43a30e6823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9b0561031b5ddeca0985c1551c4076243efced1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeKOKGCRBK7hj4Ov3rIwAAdHIIAITxPmYZ3O+b7sIdizrr84SY\nUqXaTqbjnWQp62oIl3HuKtu9wXL2L4oG0XoYtcV6Lc5S8hLU++iV1BvXCur8dSON\niehnP1s6A69bK3OZA2NsBynJkckEwIY95toIC/bkcpZS7kCcARGs1Cpl9xk9++SP\nc9Gt6ASsHJF3fJeuHClYYF5/VuF3E+7E5z8mFvSJhK2xi8PwSPHYeIcnNJfOdYvG\naT11DF4Mgo3JjUrxEVvlzY/BtgGaXR+IK2P/8xeTaf32etQ9jx8uaTyZmebKLSn4\nvrpiMWu73ARTqSqqkPnnUa06ZcsskfHxcR77BTDDc8Dm2GkRZOWlARp2TpWov1A=\n=9jXO\n-----END PGP SIGNATURE-----\n", "payload": "tree d816e7c603945b6e5f05402a6e5f0f43a30e6823\nparent bd090c9e8a3fe43174b4935d9c45d743313074f7\nparent dc97181a0966cd1686a70ce06849a19c196f72eb\nauthor Tyler Mandry <tmandry@gmail.com> 1579737734 -0800\ncommitter GitHub <noreply@github.com> 1579737734 -0800\n\nRollup merge of #68409 - sinkuu:temp_path, r=Mark-Simulacrum\n\nMicro-optimize OutputFilenames\n\nFor example, its methods consume 6% of time during debug-compiling a `warp` example:\n![Screenshot (debug-compiling a `warp` example)](https://user-images.githubusercontent.com/7091080/72780288-d74f1580-3c61-11ea-953b-34e59ca682f9.png)\n\nThis PR optimize them a bit by using `PathBuf::set_extension` instead of `Path::with_extension`, to avoid cloning `PathBuf` excessively.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9b0561031b5ddeca0985c1551c4076243efced1", "html_url": "https://github.com/rust-lang/rust/commit/f9b0561031b5ddeca0985c1551c4076243efced1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9b0561031b5ddeca0985c1551c4076243efced1/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd090c9e8a3fe43174b4935d9c45d743313074f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd090c9e8a3fe43174b4935d9c45d743313074f7", "html_url": "https://github.com/rust-lang/rust/commit/bd090c9e8a3fe43174b4935d9c45d743313074f7"}, {"sha": "dc97181a0966cd1686a70ce06849a19c196f72eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc97181a0966cd1686a70ce06849a19c196f72eb", "html_url": "https://github.com/rust-lang/rust/commit/dc97181a0966cd1686a70ce06849a19c196f72eb"}], "stats": {"total": 64, "additions": 34, "deletions": 30}, "files": [{"sha": "3e65da9c47b7e8c6454984434bc4aa36b922e296", "filename": "src/librustc_interface/util.rs", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f9b0561031b5ddeca0985c1551c4076243efced1/src%2Flibrustc_interface%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9b0561031b5ddeca0985c1551c4076243efced1/src%2Flibrustc_interface%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Futil.rs?ref=f9b0561031b5ddeca0985c1551c4076243efced1", "patch": "@@ -550,13 +550,13 @@ pub fn build_output_filenames(\n                 .or_else(|| attr::find_crate_name(attrs).map(|n| n.to_string()))\n                 .unwrap_or_else(|| input.filestem().to_owned());\n \n-            OutputFilenames {\n-                out_directory: dirpath,\n-                out_filestem: stem,\n-                single_output_file: None,\n-                extra: sess.opts.cg.extra_filename.clone(),\n-                outputs: sess.opts.output_types.clone(),\n-            }\n+            OutputFilenames::new(\n+                dirpath,\n+                stem,\n+                None,\n+                sess.opts.cg.extra_filename.clone(),\n+                sess.opts.output_types.clone(),\n+            )\n         }\n \n         Some(ref out_file) => {\n@@ -578,18 +578,13 @@ pub fn build_output_filenames(\n                 sess.warn(\"ignoring --out-dir flag due to -o flag\");\n             }\n \n-            OutputFilenames {\n-                out_directory: out_file.parent().unwrap_or_else(|| Path::new(\"\")).to_path_buf(),\n-                out_filestem: out_file\n-                    .file_stem()\n-                    .unwrap_or_default()\n-                    .to_str()\n-                    .unwrap()\n-                    .to_string(),\n-                single_output_file: ofile,\n-                extra: sess.opts.cg.extra_filename.clone(),\n-                outputs: sess.opts.output_types.clone(),\n-            }\n+            OutputFilenames::new(\n+                out_file.parent().unwrap_or_else(|| Path::new(\"\")).to_path_buf(),\n+                out_file.file_stem().unwrap_or_default().to_str().unwrap().to_string(),\n+                ofile,\n+                sess.opts.cg.extra_filename.clone(),\n+                sess.opts.output_types.clone(),\n+            )\n         }\n     }\n }"}, {"sha": "aa492b566e59e2e2ee82fa9f003fe5b8e4275f6c", "filename": "src/librustc_session/config.rs", "status": "modified", "additions": 20, "deletions": 11, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/f9b0561031b5ddeca0985c1551c4076243efced1/src%2Flibrustc_session%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9b0561031b5ddeca0985c1551c4076243efced1/src%2Flibrustc_session%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fconfig.rs?ref=f9b0561031b5ddeca0985c1551c4076243efced1", "patch": "@@ -447,9 +447,8 @@ impl Input {\n #[derive(Clone, Hash)]\n pub struct OutputFilenames {\n     pub out_directory: PathBuf,\n-    pub out_filestem: String,\n+    filestem: String,\n     pub single_output_file: Option<PathBuf>,\n-    pub extra: String,\n     pub outputs: OutputTypes,\n }\n \n@@ -458,6 +457,21 @@ impl_stable_hash_via_hash!(OutputFilenames);\n pub const RUST_CGU_EXT: &str = \"rcgu\";\n \n impl OutputFilenames {\n+    pub fn new(\n+        out_directory: PathBuf,\n+        out_filestem: String,\n+        single_output_file: Option<PathBuf>,\n+        extra: String,\n+        outputs: OutputTypes,\n+    ) -> Self {\n+        OutputFilenames {\n+            out_directory,\n+            single_output_file,\n+            outputs,\n+            filestem: format!(\"{}{}\", out_filestem, extra),\n+        }\n+    }\n+\n     pub fn path(&self, flavor: OutputType) -> PathBuf {\n         self.outputs\n             .get(&flavor)\n@@ -477,8 +491,6 @@ impl OutputFilenames {\n     /// Like temp_path, but also supports things where there is no corresponding\n     /// OutputType, like noopt-bitcode or lto-bitcode.\n     pub fn temp_path_ext(&self, ext: &str, codegen_unit_name: Option<&str>) -> PathBuf {\n-        let base = self.out_directory.join(&self.filestem());\n-\n         let mut extension = String::new();\n \n         if let Some(codegen_unit_name) = codegen_unit_name {\n@@ -495,16 +507,13 @@ impl OutputFilenames {\n             extension.push_str(ext);\n         }\n \n-        let path = base.with_extension(&extension[..]);\n-        path\n+        self.with_extension(&extension)\n     }\n \n     pub fn with_extension(&self, extension: &str) -> PathBuf {\n-        self.out_directory.join(&self.filestem()).with_extension(extension)\n-    }\n-\n-    pub fn filestem(&self) -> String {\n-        format!(\"{}{}\", self.out_filestem, self.extra)\n+        let mut path = self.out_directory.join(&self.filestem);\n+        path.set_extension(extension);\n+        path\n     }\n }\n "}]}