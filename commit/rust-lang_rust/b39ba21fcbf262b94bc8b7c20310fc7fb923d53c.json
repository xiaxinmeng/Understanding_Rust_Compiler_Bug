{"sha": "b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "node_id": "C_kwDOAAsO6NoAKGIzOWJhMjFmY2JmMjYyYjk0YmM4YjdjMjAzMTBmYzdmYjkyM2Q1M2M", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2022-06-15T15:02:46Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2022-06-15T21:28:16Z"}, "message": "tests H.R. `T: 'a` bounds proving themselves", "tree": {"sha": "c2d9bf0b828c8cd785285857a7a9f42b1c6bf328", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2d9bf0b828c8cd785285857a7a9f42b1c6bf328"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "html_url": "https://github.com/rust-lang/rust/commit/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad25ee09c70e3c87cc88cf93496dd97ef971bab2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad25ee09c70e3c87cc88cf93496dd97ef971bab2", "html_url": "https://github.com/rust-lang/rust/commit/ad25ee09c70e3c87cc88cf93496dd97ef971bab2"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "9c37d72d56b64e277fafe456ce51a52b44c03ebd", "filename": "src/test/ui/regions/forall-wf-ref-reflexive.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/src%2Ftest%2Fui%2Fregions%2Fforall-wf-ref-reflexive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/src%2Ftest%2Fui%2Fregions%2Fforall-wf-ref-reflexive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fforall-wf-ref-reflexive.rs?ref=b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "patch": "@@ -0,0 +1,18 @@\n+// Test that we consider `for<'a> &'a T: 'a` to be sufficient to prove\n+// that `for<'a> &'a T: 'a`.\n+//\n+// FIXME. Except we don't!\n+\n+#![allow(warnings)]\n+\n+fn self_wf2<T>()\n+where\n+    for<'a> &'a T: 'a,\n+{\n+    self_wf2::<T>();\n+    //~^ ERROR `T` does not live long enough\n+    //\n+    // FIXME. This ought to be accepted, presumably.\n+}\n+\n+fn main() {}"}, {"sha": "3d059ccec7296da516f8542a796a2f14a23eb088", "filename": "src/test/ui/regions/forall-wf-ref-reflexive.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/src%2Ftest%2Fui%2Fregions%2Fforall-wf-ref-reflexive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/src%2Ftest%2Fui%2Fregions%2Fforall-wf-ref-reflexive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fforall-wf-ref-reflexive.stderr?ref=b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "patch": "@@ -0,0 +1,8 @@\n+error: `T` does not live long enough\n+  --> $DIR/forall-wf-ref-reflexive.rs:12:5\n+   |\n+LL |     self_wf2::<T>();\n+   |     ^^^^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "8e6b8224b318696965637bc0033dd2df44ef35de", "filename": "src/test/ui/regions/forall-wf-reflexive.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/src%2Ftest%2Fui%2Fregions%2Fforall-wf-reflexive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b39ba21fcbf262b94bc8b7c20310fc7fb923d53c/src%2Ftest%2Fui%2Fregions%2Fforall-wf-reflexive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fforall-wf-reflexive.rs?ref=b39ba21fcbf262b94bc8b7c20310fc7fb923d53c", "patch": "@@ -0,0 +1,15 @@\n+// Test that we consider `for<'a> T: 'a` to be sufficient to prove\n+// that `for<'a> T: 'a`.\n+//\n+// check-pass\n+\n+#![allow(warnings)]\n+\n+fn self_wf1<T>()\n+where\n+    for<'a> T: 'a,\n+{\n+    self_wf1::<T>();\n+}\n+\n+fn main() {}"}]}