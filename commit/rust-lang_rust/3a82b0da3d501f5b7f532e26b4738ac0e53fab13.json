{"sha": "3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhODJiMGRhM2Q1MDFmNWI3ZjUzMmUyNmI0NzM4YWMwZTUzZmFiMTM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-19T19:24:33Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2016-12-19T19:24:33Z"}, "message": "Don't try get local DefId of imported macro in rustdoc.", "tree": {"sha": "1d562d43471d0d3ad912b651d84ce172f180d6ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d562d43471d0d3ad912b651d84ce172f180d6ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "html_url": "https://github.com/rust-lang/rust/commit/3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e659a6d324bd6f096832899f5f77ae5c5d734e", "url": "https://api.github.com/repos/rust-lang/rust/commits/77e659a6d324bd6f096832899f5f77ae5c5d734e", "html_url": "https://github.com/rust-lang/rust/commit/77e659a6d324bd6f096832899f5f77ae5c5d734e"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "123516dc89d746fcad14b912ca96e3328c2230d3", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "patch": "@@ -2801,7 +2801,7 @@ impl Clean<Item> for doctree::Macro {\n             visibility: Some(Public),\n             stability: self.stab.clean(cx),\n             deprecation: self.depr.clean(cx),\n-            def_id: cx.tcx.map.local_def_id(self.id),\n+            def_id: self.def_id,\n             inner: MacroItem(Macro {\n                 source: format!(\"macro_rules! {} {{\\n{}}}\",\n                                 name,"}, {"sha": "31e10fbd3b7d3e16ca57628798caceba41d79661", "filename": "src/librustdoc/doctree.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/src%2Flibrustdoc%2Fdoctree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/src%2Flibrustdoc%2Fdoctree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctree.rs?ref=3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "patch": "@@ -233,9 +233,11 @@ pub struct DefaultImpl {\n     pub whence: Span,\n }\n \n+// For Macro we store the DefId instead of the NodeId, since we also create\n+// these imported macro_rules (which only have a DUMMY_NODE_ID).\n pub struct Macro {\n     pub name: Name,\n-    pub id: ast::NodeId,\n+    pub def_id: hir::def_id::DefId,\n     pub attrs: hir::HirVec<ast::Attribute>,\n     pub whence: Span,\n     pub matchers: hir::HirVec<Span>,"}, {"sha": "29e874c5ab526d4751ab6fd4842737ce5f66e62a", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a82b0da3d501f5b7f532e26b4738ac0e53fab13/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=3a82b0da3d501f5b7f532e26b4738ac0e53fab13", "patch": "@@ -85,7 +85,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                                               None);\n         // attach the crate's exported macros to the top-level module:\n         let macro_exports: Vec<_> =\n-            krate.exported_macros.iter().map(|def| self.visit_macro(def)).collect();\n+            krate.exported_macros.iter().map(|def| self.visit_local_macro(def)).collect();\n         self.module.macros.extend(macro_exports);\n         self.module.is_crate = true;\n     }\n@@ -210,7 +210,7 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n                     // FIXME(jseyfried) merge with `self.visit_macro()`\n                     let matchers = def.body.chunks(4).map(|arm| arm[0].get_span()).collect();\n                     om.macros.push(Macro {\n-                        id: def.id,\n+                        def_id: def_id,\n                         attrs: def.attrs.clone().into(),\n                         name: def.ident.name,\n                         whence: def.span,\n@@ -513,12 +513,12 @@ impl<'a, 'tcx> RustdocVisitor<'a, 'tcx> {\n     }\n \n     // convert each exported_macro into a doc item\n-    fn visit_macro(&self, def: &hir::MacroDef) -> Macro {\n+    fn visit_local_macro(&self, def: &hir::MacroDef) -> Macro {\n         // Extract the spans of all matchers. They represent the \"interface\" of the macro.\n         let matchers = def.body.chunks(4).map(|arm| arm[0].get_span()).collect();\n \n         Macro {\n-            id: def.id,\n+            def_id: self.cx.tcx.map.local_def_id(def.id),\n             attrs: def.attrs.clone(),\n             name: def.name,\n             whence: def.span,"}]}