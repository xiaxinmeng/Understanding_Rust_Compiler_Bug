{"sha": "4009a441189ff8fa9a46acd52a9f7d2f629e47df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwMDlhNDQxMTg5ZmY4ZmE5YTQ2YWNkNTJhOWY3ZDJmNjI5ZTQ3ZGY=", "commit": {"author": {"name": "Daniel Wagner-Hall", "email": "dawagner@gmail.com", "date": "2019-02-18T23:16:53Z"}, "committer": {"name": "Daniel Wagner-Hall", "email": "dawagner@gmail.com", "date": "2019-02-18T23:16:53Z"}, "message": "Fix Binding for rustc update", "tree": {"sha": "cc063623da796f89cdeb4a677f5ee63b3250852e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cc063623da796f89cdeb4a677f5ee63b3250852e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4009a441189ff8fa9a46acd52a9f7d2f629e47df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4009a441189ff8fa9a46acd52a9f7d2f629e47df", "html_url": "https://github.com/rust-lang/rust/commit/4009a441189ff8fa9a46acd52a9f7d2f629e47df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4009a441189ff8fa9a46acd52a9f7d2f629e47df/comments", "author": {"login": "illicitonion", "id": 1131704, "node_id": "MDQ6VXNlcjExMzE3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1131704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/illicitonion", "html_url": "https://github.com/illicitonion", "followers_url": "https://api.github.com/users/illicitonion/followers", "following_url": "https://api.github.com/users/illicitonion/following{/other_user}", "gists_url": "https://api.github.com/users/illicitonion/gists{/gist_id}", "starred_url": "https://api.github.com/users/illicitonion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/illicitonion/subscriptions", "organizations_url": "https://api.github.com/users/illicitonion/orgs", "repos_url": "https://api.github.com/users/illicitonion/repos", "events_url": "https://api.github.com/users/illicitonion/events{/privacy}", "received_events_url": "https://api.github.com/users/illicitonion/received_events", "type": "User", "site_admin": false}, "committer": {"login": "illicitonion", "id": 1131704, "node_id": "MDQ6VXNlcjExMzE3MDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1131704?v=4", "gravatar_id": "", "url": "https://api.github.com/users/illicitonion", "html_url": "https://github.com/illicitonion", "followers_url": "https://api.github.com/users/illicitonion/followers", "following_url": "https://api.github.com/users/illicitonion/following{/other_user}", "gists_url": "https://api.github.com/users/illicitonion/gists{/gist_id}", "starred_url": "https://api.github.com/users/illicitonion/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/illicitonion/subscriptions", "organizations_url": "https://api.github.com/users/illicitonion/orgs", "repos_url": "https://api.github.com/users/illicitonion/repos", "events_url": "https://api.github.com/users/illicitonion/events{/privacy}", "received_events_url": "https://api.github.com/users/illicitonion/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcefd688c99895275317eb95a1ec62743526208a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcefd688c99895275317eb95a1ec62743526208a", "html_url": "https://github.com/rust-lang/rust/commit/bcefd688c99895275317eb95a1ec62743526208a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fcff1e16f38308da0c411e3b93e2d879bd4abbd8", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4009a441189ff8fa9a46acd52a9f7d2f629e47df/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4009a441189ff8fa9a46acd52a9f7d2f629e47df/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=4009a441189ff8fa9a46acd52a9f7d2f629e47df", "patch": "@@ -482,7 +482,7 @@ fn check_wild_enum_match(cx: &LateContext<'_, '_>, ex: &Expr, arms: &[Arm]) {\n         for pat in &arm.pats {\n             if let PatKind::Wild = pat.node {\n                 wildcard_span = Some(pat.span);\n-            } else if let PatKind::Binding(_, _, ident, None) = pat.node {\n+            } else if let PatKind::Binding(_, _, _, ident, None) = pat.node {\n                 wildcard_span = Some(pat.span);\n                 wildcard_ident = Some(ident);\n             }"}]}