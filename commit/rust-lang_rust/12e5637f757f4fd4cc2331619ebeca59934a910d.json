{"sha": "12e5637f757f4fd4cc2331619ebeca59934a910d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyZTU2MzdmNzU3ZjRmZDRjYzIzMzE2MTllYmVjYTU5OTM0YTkxMGQ=", "commit": {"author": {"name": "Frank", "email": "lifrank@grinnell.edu", "date": "2020-09-24T20:36:38Z"}, "committer": {"name": "Frank", "email": "lifrank@grinnell.edu", "date": "2020-09-25T16:09:04Z"}, "message": "update unused variable", "tree": {"sha": "67c38ae8b17a6fd492b5a885bf5d30ca7de8f951", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67c38ae8b17a6fd492b5a885bf5d30ca7de8f951"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12e5637f757f4fd4cc2331619ebeca59934a910d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12e5637f757f4fd4cc2331619ebeca59934a910d", "html_url": "https://github.com/rust-lang/rust/commit/12e5637f757f4fd4cc2331619ebeca59934a910d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12e5637f757f4fd4cc2331619ebeca59934a910d/comments", "author": {"login": "ilknarf", "id": 30297768, "node_id": "MDQ6VXNlcjMwMjk3NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/30297768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilknarf", "html_url": "https://github.com/ilknarf", "followers_url": "https://api.github.com/users/ilknarf/followers", "following_url": "https://api.github.com/users/ilknarf/following{/other_user}", "gists_url": "https://api.github.com/users/ilknarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilknarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilknarf/subscriptions", "organizations_url": "https://api.github.com/users/ilknarf/orgs", "repos_url": "https://api.github.com/users/ilknarf/repos", "events_url": "https://api.github.com/users/ilknarf/events{/privacy}", "received_events_url": "https://api.github.com/users/ilknarf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilknarf", "id": 30297768, "node_id": "MDQ6VXNlcjMwMjk3NzY4", "avatar_url": "https://avatars.githubusercontent.com/u/30297768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilknarf", "html_url": "https://github.com/ilknarf", "followers_url": "https://api.github.com/users/ilknarf/followers", "following_url": "https://api.github.com/users/ilknarf/following{/other_user}", "gists_url": "https://api.github.com/users/ilknarf/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilknarf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilknarf/subscriptions", "organizations_url": "https://api.github.com/users/ilknarf/orgs", "repos_url": "https://api.github.com/users/ilknarf/repos", "events_url": "https://api.github.com/users/ilknarf/events{/privacy}", "received_events_url": "https://api.github.com/users/ilknarf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1479c18396d764482aa0e56b372c5f57a97c102b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1479c18396d764482aa0e56b372c5f57a97c102b", "html_url": "https://github.com/rust-lang/rust/commit/1479c18396d764482aa0e56b372c5f57a97c102b"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5ecdcc0e08aa1d21051b2979a0eab39a2378355e", "filename": "clippy_lints/src/disallowed_method.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/12e5637f757f4fd4cc2331619ebeca59934a910d/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12e5637f757f4fd4cc2331619ebeca59934a910d/clippy_lints%2Fsrc%2Fdisallowed_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_method.rs?ref=12e5637f757f4fd4cc2331619ebeca59934a910d", "patch": "@@ -51,7 +51,7 @@ impl_lint_pass!(DisallowedMethod => [DISALLOWED_METHOD]);\n \n impl <'tcx> LateLintPass<'tcx> for DisallowedMethod {\n     fn check_expr(&mut self, cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) {\n-        if let ExprKind::MethodCall(path, _, _args, _) = &expr.kind {\n+        if let ExprKind::MethodCall(_path, _, _args, _) = &expr.kind {\n             let def_id = cx.typeck_results().type_dependent_def_id(expr.hir_id).unwrap();\n \n             let method_call = cx.get_def_path(def_id);"}]}