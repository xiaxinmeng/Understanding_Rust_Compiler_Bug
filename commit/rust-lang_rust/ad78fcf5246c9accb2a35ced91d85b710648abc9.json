{"sha": "ad78fcf5246c9accb2a35ced91d85b710648abc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkNzhmY2Y1MjQ2YzlhY2NiMmEzNWNlZDkxZDg1YjcxMDY0OGFiYzk=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-06T12:55:28Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-06T12:55:28Z"}, "message": "Ignore const parameters when constructing type bounds in rustdoc\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "9c7d0a5fa1fb439d2ec9bfb4cd71fcf25c2d6878", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c7d0a5fa1fb439d2ec9bfb4cd71fcf25c2d6878"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad78fcf5246c9accb2a35ced91d85b710648abc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad78fcf5246c9accb2a35ced91d85b710648abc9", "html_url": "https://github.com/rust-lang/rust/commit/ad78fcf5246c9accb2a35ced91d85b710648abc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad78fcf5246c9accb2a35ced91d85b710648abc9/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59ebd1b7c2b9558ab31c57878666f0707f33b689", "url": "https://api.github.com/repos/rust-lang/rust/commits/59ebd1b7c2b9558ab31c57878666f0707f33b689", "html_url": "https://github.com/rust-lang/rust/commit/59ebd1b7c2b9558ab31c57878666f0707f33b689"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "3a260db806520a69261a447c7681225b0a001b9f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ad78fcf5246c9accb2a35ced91d85b710648abc9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad78fcf5246c9accb2a35ced91d85b710648abc9/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=ad78fcf5246c9accb2a35ced91d85b710648abc9", "patch": "@@ -1706,9 +1706,7 @@ impl<'a, 'tcx> Clean<Generics> for (&'a ty::Generics,\n                 }\n                 Some(param.clean(cx))\n             }\n-            ty::GenericParamDefKind::Const { .. } => {\n-                unimplemented!() // FIXME(const_generics)\n-            }\n+            ty::GenericParamDefKind::Const { .. } => None,\n         }).collect::<Vec<GenericParamDef>>();\n \n         let mut where_predicates = preds.predicates.iter()"}]}