{"sha": "57425b575c08ad2fb53c7a08dc29c224f0f4502b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3NDI1YjU3NWMwOGFkMmZiNTNjN2EwOGRjMjljMjI0ZjBmNDUwMmI=", "commit": {"author": {"name": "David Rajchenbach-Teller", "email": "dteller@mozilla.com", "date": "2011-11-05T10:12:31Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-05T20:04:34Z"}, "message": "[Docfix + Renaming] lib/rope.rs: Applied review suggestions, mostly docfixes.", "tree": {"sha": "2450c8bfe06541905be6bde6ccbfc371487ce175", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2450c8bfe06541905be6bde6ccbfc371487ce175"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57425b575c08ad2fb53c7a08dc29c224f0f4502b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57425b575c08ad2fb53c7a08dc29c224f0f4502b", "html_url": "https://github.com/rust-lang/rust/commit/57425b575c08ad2fb53c7a08dc29c224f0f4502b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57425b575c08ad2fb53c7a08dc29c224f0f4502b/comments", "author": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9a0d03c7af26558c23abd2a73f2af5653f2ec20", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9a0d03c7af26558c23abd2a73f2af5653f2ec20", "html_url": "https://github.com/rust-lang/rust/commit/f9a0d03c7af26558c23abd2a73f2af5653f2ec20"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "1b18978aa418069dd3729dd4413c55f61478dd2b", "filename": "src/lib/rope.rs", "status": "modified", "additions": 68, "deletions": 2, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/57425b575c08ad2fb53c7a08dc29c224f0f4502b/src%2Flib%2Frope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57425b575c08ad2fb53c7a08dc29c224f0f4502b/src%2Flib%2Frope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Frope.rs?ref=57425b575c08ad2fb53c7a08dc29c224f0f4502b", "patch": "@@ -298,22 +298,78 @@ fn cmp(left: rope, right: rope) -> int {\n     }\n }\n \n+/*\n+Function: eq\n+\n+Returns:\n+\n+ `true` if both ropes have the same content (regardless of their structure),\n+`false` otherwise\n+*/\n fn eq(left: rope, right: rope) -> bool {\n     ret cmp(left, right) == 0;\n }\n \n-fn leq(left: rope, right: rope) -> bool {\n+/*\n+Function: le\n+\n+Parameters\n+  left - an arbitrary rope\n+  right - an arbitrary rope\n+\n+Returns:\n+\n+ `true` if `left <= right` in lexicographical order (regardless of their\n+structure), `false` otherwise\n+*/\n+fn le(left: rope, right: rope) -> bool {\n     ret cmp(left, right) <= 0;\n }\n \n+/*\n+Function: lt\n+\n+Parameters\n+  left - an arbitrary rope\n+  right - an arbitrary rope\n+\n+Returns:\n+\n+ `true` if `left < right` in lexicographical order (regardless of their\n+structure), `false` otherwise\n+*/\n fn lt(left: rope, right: rope) -> bool {\n     ret cmp(left, right) < 0;\n }\n \n-fn geq(left: rope, right: rope) -> bool {\n+/*\n+Function: ge\n+\n+Parameters\n+  left - an arbitrary rope\n+  right - an arbitrary rope\n+\n+Returns:\n+\n+ `true` if `left >= right` in lexicographical order (regardless of their\n+structure), `false` otherwise\n+*/\n+fn ge(left: rope, right: rope) -> bool {\n     ret cmp(left, right) >= 0;\n }\n \n+/*\n+Function: gt\n+\n+Parameters\n+  left - an arbitrary rope\n+  right - an arbitrary rope\n+\n+Returns:\n+\n+ `true` if `left > right` in lexicographical order (regardless of their\n+structure), `false` otherwise\n+*/\n fn gt(left: rope, right: rope) -> bool {\n     ret cmp(left, right) > 0;\n }\n@@ -349,6 +405,16 @@ fn loop_chars(rope: rope, it: block(char) -> bool) -> bool {\n       node::content(x) { ret node::loop_chars(x, it) }\n    }\n }\n+\n+/*\n+Function: iter_chars\n+\n+Loop through a rope, char by char, until the end.\n+\n+Parameters:\n+rope - A rope to traverse. It may be empty.\n+it - A block to execute with each consecutive character of the rope.\n+ */\n fn iter_chars(rope: rope, it: block(char)) {\n     loop_chars(rope) {|x|\n         it(x);"}]}