{"sha": "cca6eb2e2bb5756c1c359c56b5664786a36b173a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYTZlYjJlMmJiNTc1NmMxYzM1OWM1NmI1NjY0Nzg2YTM2YjE3M2E=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-05T23:16:16Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-06-09T22:08:14Z"}, "message": "Cleanup", "tree": {"sha": "52e9d2140d6c07af31a7570d2ae8d217c189dead", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52e9d2140d6c07af31a7570d2ae8d217c189dead"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cca6eb2e2bb5756c1c359c56b5664786a36b173a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXWejOAAoJEF5CfHlMukXoGbcP/1ZHdDiFCoaARWvlhb4br3Hs\nfd2DVBnS+VTW71TGY42Kj3YpLdqqQsb6/r775EuMzm7ANjQnOkb4EZG4Y140hit0\nbvwJIBwicccKaR6MPvHMN0EiWD3bg7nkcJItfTQ7v3+bnrhuCkJ16g08L1AxEZPt\nxDc4zkJYU/E8rfP0ioxgQQkka4f1Gj7tiHsqc0mtPf9QSI/TZGGkcFxjRoHRtln4\nz1fpU2TxlSUYuRXzguDjRJucEQSu7R/egVCS2FdVWA2VQ+7skBs7a0yKkeAutDHV\nLohaBFF1KPzVMz7GTlhhO64UTqtTYFkaIHoIzjr5Oc0qx6a2Y/kOmCVb6j6bIP22\ntPfNHabjs3GqpoZrWSlHFufLVt/C0MlOBBIgealct/JgBuPVtjy7vKPxAux76QXD\nAm6O0mld3aiu+jl6ARY68R81s78fBuxe3KfWWVjmNs9gZ8YWjpUlk/1tCQdycfZg\n6pD7Qs3ZN/qT+4SxomFEyvQiX2hT16HX0XuvCXYGvmY3mAbF4imW2mT50ef1gzXA\nTZH64pemB1fzeLIacXbuR2rQUlgqJp5EkVUGfeNt57PstVgagZxsA7DuoHzQJL8v\nMWTV6zyN0ewdYcOT1adp5czN6N82CtVUuhpGWAvOvmQvX0lm19bMbta1sUMjNKWX\nkhYQ3nHDv2Uzd0l9sP/c\n=rsY0\n-----END PGP SIGNATURE-----", "payload": "tree 52e9d2140d6c07af31a7570d2ae8d217c189dead\nparent e6832317fa879ab6391585949ae1b8023ed13cc5\nauthor mcarton <cartonmartin+git@gmail.com> 1465168576 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1465510094 +0200\n\nCleanup\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cca6eb2e2bb5756c1c359c56b5664786a36b173a", "html_url": "https://github.com/rust-lang/rust/commit/cca6eb2e2bb5756c1c359c56b5664786a36b173a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cca6eb2e2bb5756c1c359c56b5664786a36b173a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6832317fa879ab6391585949ae1b8023ed13cc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6832317fa879ab6391585949ae1b8023ed13cc5", "html_url": "https://github.com/rust-lang/rust/commit/e6832317fa879ab6391585949ae1b8023ed13cc5"}], "stats": {"total": 15, "additions": 5, "deletions": 10}, "files": [{"sha": "f1e427c5c61574631efb774d2d650fd9580cb44e", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cca6eb2e2bb5756c1c359c56b5664786a36b173a/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cca6eb2e2bb5756c1c359c56b5664786a36b173a/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=cca6eb2e2bb5756c1c359c56b5664786a36b173a", "patch": "@@ -91,16 +91,11 @@ impl LateLintPass for BitMask {\n     fn check_expr(&mut self, cx: &LateContext, e: &Expr) {\n         if let ExprBinary(ref cmp, ref left, ref right) = e.node {\n             if cmp.node.is_comparison() {\n-                fetch_int_literal(cx, right).map_or_else(|| {\n-                                                             fetch_int_literal(cx, left).map_or((), |cmp_val| {\n-                                                                 check_compare(cx,\n-                                                                               right,\n-                                                                               invert_cmp(cmp.node),\n-                                                                               cmp_val,\n-                                                                               &e.span)\n-                                                             })\n-                                                         },\n-                                                         |cmp_opt| check_compare(cx, left, cmp.node, cmp_opt, &e.span))\n+                if let Some(cmp_opt) = fetch_int_literal(cx, right) {\n+                    check_compare(cx, left, cmp.node, cmp_opt, &e.span)\n+                } else if let Some(cmp_val) = fetch_int_literal(cx, left) {\n+                    check_compare(cx, right, invert_cmp(cmp.node), cmp_val, &e.span)\n+                }\n             }\n         }\n     }"}]}