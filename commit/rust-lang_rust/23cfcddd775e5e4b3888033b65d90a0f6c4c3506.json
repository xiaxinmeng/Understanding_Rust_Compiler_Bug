{"sha": "23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzY2ZjZGRkNzc1ZTVlNGIzODg4MDMzYjY1ZDkwYTBmNmM0YzM1MDY=", "commit": {"author": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2016-12-22T07:47:09Z"}, "committer": {"name": "Peter Atashian", "email": "retep998@gmail.com", "date": "2016-12-22T11:43:43Z"}, "message": "Fix fs tests on Windows systems with non-english locales.", "tree": {"sha": "9bb3b307df0a5f0419a70bef73b61d20e6651009", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9bb3b307df0a5f0419a70bef73b61d20e6651009"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQEcBAABCAAGBQJYW7xzAAoJEN4E2eJ1WbyK93YH/2tNp8GP2TpIF5QKs9niXi5Z\n7HPzGbm0s5pWrXtf0cMGdg8DTzRMJH1oN0UP0O6inmsoWJFBlq+Qg77IaVb0GI8f\nmKClOEmpceDF1n5ZAIEEsjZFtruQPZvy/SC3LYofk1WrmIc5W7y/lJvv5KJTWI+6\ndmGQ5fzBzh32WGROwLggK6vrq8YfgT2LrtAKXCXheyUspAE5WYSTWQlzzafGvm/I\nKJU+kpw4a1M+dAkEDsqYXW9gW6Yv0ZKLSHlxTBoAyQH448O3CuPx1MD/Pn7S15lp\nmSxaHWIm8BaA4EnzLOjxNdMzMD6dzvjHW/IWzrm/bqytmifJf198k/Hu7FCT2G0=\n=2ly/\n-----END PGP SIGNATURE-----", "payload": "tree 9bb3b307df0a5f0419a70bef73b61d20e6651009\nparent c217ab6c8dc1a305304b00a414be5f39ea6a2c81\nauthor Peter Atashian <retep998@gmail.com> 1482392829 -0500\ncommitter Peter Atashian <retep998@gmail.com> 1482407023 -0500\n\nFix fs tests on Windows systems with non-english locales.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "html_url": "https://github.com/rust-lang/rust/commit/23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23cfcddd775e5e4b3888033b65d90a0f6c4c3506/comments", "author": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "committer": {"login": "retep998", "id": 666308, "node_id": "MDQ6VXNlcjY2NjMwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/666308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/retep998", "html_url": "https://github.com/retep998", "followers_url": "https://api.github.com/users/retep998/followers", "following_url": "https://api.github.com/users/retep998/following{/other_user}", "gists_url": "https://api.github.com/users/retep998/gists{/gist_id}", "starred_url": "https://api.github.com/users/retep998/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/retep998/subscriptions", "organizations_url": "https://api.github.com/users/retep998/orgs", "repos_url": "https://api.github.com/users/retep998/repos", "events_url": "https://api.github.com/users/retep998/events{/privacy}", "received_events_url": "https://api.github.com/users/retep998/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c217ab6c8dc1a305304b00a414be5f39ea6a2c81", "url": "https://api.github.com/repos/rust-lang/rust/commits/c217ab6c8dc1a305304b00a414be5f39ea6a2c81", "html_url": "https://github.com/rust-lang/rust/commit/c217ab6c8dc1a305304b00a414be5f39ea6a2c81"}], "stats": {"total": 45, "additions": 25, "deletions": 20}, "files": [{"sha": "d15446e49ac45e3eb536d03af96158d4afe5987f", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/23cfcddd775e5e4b3888033b65d90a0f6c4c3506/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/23cfcddd775e5e4b3888033b65d90a0f6c4c3506/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=23cfcddd775e5e4b3888033b65d90a0f6c4c3506", "patch": "@@ -1767,6 +1767,16 @@ mod tests {\n         }\n     ) }\n \n+    #[cfg(windows)]\n+    macro_rules! error { ($e:expr, $s:expr) => (\n+        match $e {\n+            Ok(_) => panic!(\"Unexpected success. Should've been: {:?}\", $s),\n+            Err(ref err) => assert!(err.raw_os_error() == Some($s),\n+                                    format!(\"`{}` did not have a code of `{}`\", err, $s))\n+        }\n+    ) }\n+\n+    #[cfg(unix)]\n     macro_rules! error { ($e:expr, $s:expr) => (\n         match $e {\n             Ok(_) => panic!(\"Unexpected success. Should've been: {:?}\", $s),\n@@ -1787,12 +1797,9 @@ mod tests {\n \n         match symlink_file(r\"nonexisting_target\", link) {\n             Ok(_) => true,\n-            Err(ref err) =>\n-                if err.to_string().contains(\"A required privilege is not held by the client.\") {\n-                    false\n-                } else {\n-                    true\n-                }\n+            // ERROR_PRIVILEGE_NOT_HELD = 1314\n+            Err(ref err) if err.raw_os_error() == Some(1314) => false,\n+            Err(_) => true,\n         }\n     }\n \n@@ -1823,12 +1830,10 @@ mod tests {\n         let filename = &tmpdir.join(\"file_that_does_not_exist.txt\");\n         let result = File::open(filename);\n \n-        if cfg!(unix) {\n-            error!(result, \"No such file or directory\");\n-        }\n-        if cfg!(windows) {\n-            error!(result, \"The system cannot find the file specified\");\n-        }\n+        #[cfg(unix)]\n+        error!(result, \"No such file or directory\");\n+        #[cfg(windows)]\n+        error!(result, 2); // ERROR_FILE_NOT_FOUND\n     }\n \n     #[test]\n@@ -1838,12 +1843,10 @@ mod tests {\n \n         let result = fs::remove_file(filename);\n \n-        if cfg!(unix) {\n-            error!(result, \"No such file or directory\");\n-        }\n-        if cfg!(windows) {\n-            error!(result, \"The system cannot find the file specified\");\n-        }\n+        #[cfg(unix)]\n+        error!(result, \"No such file or directory\");\n+        #[cfg(windows)]\n+        error!(result, 2); // ERROR_FILE_NOT_FOUND\n     }\n \n     #[test]\n@@ -2598,8 +2601,10 @@ mod tests {\n         let mut a = OO::new(); a.append(true);\n         let mut ra = OO::new(); ra.read(true).append(true);\n \n-        let invalid_options = if cfg!(windows) { \"The parameter is incorrect\" }\n-                              else { \"Invalid argument\" };\n+        #[cfg(windows)]\n+        let invalid_options = 87; // ERROR_INVALID_PARAMETER\n+        #[cfg(unix)]\n+        let invalid_options = \"Invalid argument\";\n \n         // Test various combinations of creation modes and access modes.\n         //"}]}