{"sha": "da8b56d99ab50f628d94210225507d87a4cb0251", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhOGI1NmQ5OWFiNTBmNjI4ZDk0MjEwMjI1NTA3ZDg3YTRjYjAyNTE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T02:23:26Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T06:40:42Z"}, "message": "Fix needless_bool.rs", "tree": {"sha": "3536eb3835ccb23d623989ebee2aa157af1197e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3536eb3835ccb23d623989ebee2aa157af1197e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da8b56d99ab50f628d94210225507d87a4cb0251", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da8b56d99ab50f628d94210225507d87a4cb0251", "html_url": "https://github.com/rust-lang/rust/commit/da8b56d99ab50f628d94210225507d87a4cb0251", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da8b56d99ab50f628d94210225507d87a4cb0251/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "url": "https://api.github.com/repos/rust-lang/rust/commits/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "html_url": "https://github.com/rust-lang/rust/commit/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "0404bc41570f1b74e09b612b923c183612e92e20", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/da8b56d99ab50f628d94210225507d87a4cb0251/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da8b56d99ab50f628d94210225507d87a4cb0251/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=da8b56d99ab50f628d94210225507d87a4cb0251", "patch": "@@ -3,7 +3,7 @@\n //! This lint is **warn** by default\n \n use crate::utils::sugg::Sugg;\n-use crate::utils::{in_macro, span_lint, span_lint_and_sugg};\n+use crate::utils::{higher, in_macro, span_lint, span_lint_and_sugg};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -59,7 +59,7 @@ declare_lint_pass!(NeedlessBool => [NEEDLESS_BOOL]);\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr) {\n         use self::Expression::*;\n-        if let ExprKind::If(ref pred, ref then_block, Some(ref else_expr)) = e.node {\n+        if let Some((ref pred, ref then_block, Some(ref else_expr))) = higher::if_block(&e) {\n             let reduce = |ret, not| {\n                 let mut applicability = Applicability::MachineApplicable;\n                 let snip = Sugg::hir_with_applicability(cx, pred, \"<predicate>\", &mut applicability);\n@@ -119,7 +119,7 @@ fn parent_node_is_if_expr<'a, 'b>(expr: &Expr, cx: &LateContext<'a, 'b>) -> bool\n     let parent_node = cx.tcx.hir().get_by_hir_id(parent_id);\n \n     if let rustc::hir::Node::Expr(e) = parent_node {\n-        if let ExprKind::If(_, _, _) = e.node {\n+        if higher::if_block(&e).is_some() {\n             return true;\n         }\n     }"}]}