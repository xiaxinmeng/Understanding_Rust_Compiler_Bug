{"sha": "8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5MzgyNjlkYjYzYmYxZjljMGYxN2YzYzJjMzlkMzQ0OWI0ZDY1MmU=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-06-03T12:07:57Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-06-08T14:09:28Z"}, "message": "Upgrade LLVM\n\nIncludes https://github.com/rust-lang/llvm/pull/80\nIncludes https://github.com/rust-lang/llvm/pull/79\n\nAlso adds tests and thus fixes #24194", "tree": {"sha": "545b89cda2c95308543d07f0b76b836880eab764", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/545b89cda2c95308543d07f0b76b836880eab764"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "html_url": "https://github.com/rust-lang/rust/commit/8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8938269db63bf1f9c0f17f3c2c39d3449b4d652e/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f09576c4a41727a8d10bbfd8fd3fb2e10e1be3b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/f09576c4a41727a8d10bbfd8fd3fb2e10e1be3b3", "html_url": "https://github.com/rust-lang/rust/commit/f09576c4a41727a8d10bbfd8fd3fb2e10e1be3b3"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "84c52ce9b75d841629e6f821b3794998fb0ddbd9", "filename": "src/llvm", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fllvm?ref=8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "patch": "@@ -1 +1 @@\n-Subproject commit 1ef3b9128e1baaed61b42d5b0de79dee100acf17\n+Subproject commit 84c52ce9b75d841629e6f821b3794998fb0ddbd9"}, {"sha": "b2746bb6e68a6c7068a0352bcd815fa9e47c8d1b", "filename": "src/rustllvm/llvm-rebuild-trigger", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8938269db63bf1f9c0f17f3c2c39d3449b4d652e/src%2Frustllvm%2Fllvm-rebuild-trigger", "raw_url": "https://github.com/rust-lang/rust/raw/8938269db63bf1f9c0f17f3c2c39d3449b4d652e/src%2Frustllvm%2Fllvm-rebuild-trigger", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Fllvm-rebuild-trigger?ref=8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "patch": "@@ -1,4 +1,4 @@\n # If this file is modified, then llvm will be (optionally) cleaned and then rebuilt.\n # The actual contents of this file do not matter, but to trigger a change on the\n # build bots then the contents should be changed so git updates the mtime.\n-2017-05-13\n+2017-06-03"}, {"sha": "3953f637cf7a2e8860513515e59366e01d1bfa6f", "filename": "src/test/codegen/alloc-optimisation.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8938269db63bf1f9c0f17f3c2c39d3449b4d652e/src%2Ftest%2Fcodegen%2Falloc-optimisation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8938269db63bf1f9c0f17f3c2c39d3449b4d652e/src%2Ftest%2Fcodegen%2Falloc-optimisation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Falloc-optimisation.rs?ref=8938269db63bf1f9c0f17f3c2c39d3449b4d652e", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+#![crate_type=\"lib\"]\n+\n+#[no_mangle]\n+pub fn alloc_zeroed_test(size: u8) {\n+    // CHECK-LABEL: @alloc_zeroed_test\n+    // CHECK-NEXT: start:\n+    // CHECK-NEXT: ret void\n+    let x = vec![0u8; size as usize];\n+    drop(x);\n+}\n+\n+#[no_mangle]\n+pub fn alloc_test(data: u32) {\n+    // CHECK-LABEL: @alloc_test\n+    // CHECK-NEXT: start:\n+    // CHECK-NEXT: ret void\n+    let x = Box::new(data);\n+    drop(x);\n+}"}]}