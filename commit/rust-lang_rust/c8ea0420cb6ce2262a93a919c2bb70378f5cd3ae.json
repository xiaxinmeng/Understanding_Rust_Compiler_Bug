{"sha": "c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "node_id": "C_kwDOAAsO6NoAKGM4ZWEwNDIwY2I2Y2UyMjYyYTkzYTkxOWMyYmI3MDM3OGY1Y2QzYWU", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2021-12-23T08:12:34Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2022-01-09T01:22:06Z"}, "message": "rustc_metadata: Rename `item_children(_untracked)` to `module_children(_untracked)`\n\nAnd `each_child_of_item` to `for_each_module_child`", "tree": {"sha": "0848401988f500a866e3396a59483eb15cc521ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0848401988f500a866e3396a59483eb15cc521ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "html_url": "https://github.com/rust-lang/rust/commit/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1288b80affc300819a38cf56de9d4776f3e50e1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1288b80affc300819a38cf56de9d4776f3e50e1f", "html_url": "https://github.com/rust-lang/rust/commit/1288b80affc300819a38cf56de9d4776f3e50e1f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "41f5a913b316e1db5b61ac63cd48e3ef2ba61c38", "filename": "clippy_lints/src/macro_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/clippy_lints%2Fsrc%2Fmacro_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/clippy_lints%2Fsrc%2Fmacro_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmacro_use.rs?ref=c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "patch": "@@ -96,7 +96,7 @@ impl<'tcx> LateLintPass<'tcx> for MacroUseImports {\n             if let Res::Def(DefKind::Mod, id) = path.res;\n             if !id.is_local();\n             then {\n-                for kid in cx.tcx.item_children(id).iter() {\n+                for kid in cx.tcx.module_children(id).iter() {\n                     if let Res::Def(DefKind::Macro(_mac_type), mac_id) = kid.res {\n                         let span = mac_attr.span;\n                         let def_path = cx.tcx.def_path_str(mac_id);"}, {"sha": "7d196af7a53f475e6046fece7d2bb972fe60575e", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "patch": "@@ -924,7 +924,7 @@ pub fn check_path(cx: &LateContext<'_>, path: &[&str]) -> bool {\n         let lang_item_path = cx.get_def_path(*item_def_id);\n         if path_syms.starts_with(&lang_item_path) {\n             if let [item] = &path_syms[lang_item_path.len()..] {\n-                for child in cx.tcx.item_children(*item_def_id) {\n+                for child in cx.tcx.module_children(*item_def_id) {\n                     if child.ident.name == *item {\n                         return true;\n                     }\n@@ -984,7 +984,7 @@ impl<'tcx> LateLintPass<'tcx> for InterningDefinedSymbol {\n \n         for &module in &[&paths::KW_MODULE, &paths::SYM_MODULE] {\n             if let Some(def_id) = path_to_res(cx, module).opt_def_id() {\n-                for item in cx.tcx.item_children(def_id).iter() {\n+                for item in cx.tcx.module_children(def_id).iter() {\n                     if_chain! {\n                         if let Res::Def(DefKind::Const, item_def_id) = item.res;\n                         let ty = cx.tcx.type_of(item_def_id);"}, {"sha": "91ebc7ea89cc026172eb13069f9f356c1ec5e235", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "patch": "@@ -525,7 +525,7 @@ pub fn path_to_res(cx: &LateContext<'_>, path: &[&str]) -> Res {\n     fn item_child_by_name<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId, name: &str) -> Option<Res> {\n         match tcx.def_kind(def_id) {\n             DefKind::Mod | DefKind::Enum | DefKind::Trait => tcx\n-                .item_children(def_id)\n+                .module_children(def_id)\n                 .iter()\n                 .find(|item| item.ident.name.as_str() == name)\n                 .map(|child| child.res.expect_non_local()),"}, {"sha": "306ea50258da00ad0d133616dc85c1a0a4549450", "filename": "tests/ui/macro_use_imports.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/tests%2Fui%2Fmacro_use_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/tests%2Fui%2Fmacro_use_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.fixed?ref=c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "patch": "@@ -40,7 +40,7 @@ mod a {\n     }\n }\n \n-// issue #7015, ICE due to calling `item_children` with local `DefId`\n+// issue #7015, ICE due to calling `module_children` with local `DefId`\n #[macro_use]\n use a as b;\n "}, {"sha": "e26a7545ea6f83fc054291bbdce5521d5c27c93d", "filename": "tests/ui/macro_use_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/tests%2Fui%2Fmacro_use_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae/tests%2Fui%2Fmacro_use_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacro_use_imports.rs?ref=c8ea0420cb6ce2262a93a919c2bb70378f5cd3ae", "patch": "@@ -40,7 +40,7 @@ mod a {\n     }\n }\n \n-// issue #7015, ICE due to calling `item_children` with local `DefId`\n+// issue #7015, ICE due to calling `module_children` with local `DefId`\n #[macro_use]\n use a as b;\n "}]}