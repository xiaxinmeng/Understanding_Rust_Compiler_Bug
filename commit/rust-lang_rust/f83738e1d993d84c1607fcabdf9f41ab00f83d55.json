{"sha": "f83738e1d993d84c1607fcabdf9f41ab00f83d55", "node_id": "C_kwDOAAsO6NoAKGY4MzczOGUxZDk5M2Q4NGMxNjA3ZmNhYmRmOWY0MWFiMDBmODNkNTU", "commit": {"author": {"name": "Brennan Vincent", "email": "brennan@umanwizard.com", "date": "2022-07-27T18:34:46Z"}, "committer": {"name": "Brennan Vincent", "email": "brennan@umanwizard.com", "date": "2022-07-27T19:02:34Z"}, "message": "Use large stack on expander thread", "tree": {"sha": "979db691839ab0cf459cdebd86b4b791a73461a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/979db691839ab0cf459cdebd86b4b791a73461a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f83738e1d993d84c1607fcabdf9f41ab00f83d55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f83738e1d993d84c1607fcabdf9f41ab00f83d55", "html_url": "https://github.com/rust-lang/rust/commit/f83738e1d993d84c1607fcabdf9f41ab00f83d55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f83738e1d993d84c1607fcabdf9f41ab00f83d55/comments", "author": {"login": "umanwizard", "id": 1893159, "node_id": "MDQ6VXNlcjE4OTMxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1893159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umanwizard", "html_url": "https://github.com/umanwizard", "followers_url": "https://api.github.com/users/umanwizard/followers", "following_url": "https://api.github.com/users/umanwizard/following{/other_user}", "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions", "organizations_url": "https://api.github.com/users/umanwizard/orgs", "repos_url": "https://api.github.com/users/umanwizard/repos", "events_url": "https://api.github.com/users/umanwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/umanwizard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "umanwizard", "id": 1893159, "node_id": "MDQ6VXNlcjE4OTMxNTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1893159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/umanwizard", "html_url": "https://github.com/umanwizard", "followers_url": "https://api.github.com/users/umanwizard/followers", "following_url": "https://api.github.com/users/umanwizard/following{/other_user}", "gists_url": "https://api.github.com/users/umanwizard/gists{/gist_id}", "starred_url": "https://api.github.com/users/umanwizard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/umanwizard/subscriptions", "organizations_url": "https://api.github.com/users/umanwizard/orgs", "repos_url": "https://api.github.com/users/umanwizard/repos", "events_url": "https://api.github.com/users/umanwizard/events{/privacy}", "received_events_url": "https://api.github.com/users/umanwizard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2eebd7a50faa2578376a80ceba91bdc75d748e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2eebd7a50faa2578376a80ceba91bdc75d748e2", "html_url": "https://github.com/rust-lang/rust/commit/c2eebd7a50faa2578376a80ceba91bdc75d748e2"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "4c205b9cadac3abd8311f9a7c1ae4d4f113f1b63", "filename": "crates/proc-macro-srv/src/lib.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f83738e1d993d84c1607fcabdf9f41ab00f83d55/crates%2Fproc-macro-srv%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f83738e1d993d84c1607fcabdf9f41ab00f83d55/crates%2Fproc-macro-srv%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-srv%2Fsrc%2Flib.rs?ref=f83738e1d993d84c1607fcabdf9f41ab00f83d55", "patch": "@@ -39,6 +39,8 @@ pub(crate) struct ProcMacroSrv {\n     expanders: HashMap<(PathBuf, SystemTime), dylib::Expander>,\n }\n \n+const EXPANDER_STACK_SIZE: usize = 8 * 1024 * 1024;\n+\n impl ProcMacroSrv {\n     pub fn expand(&mut self, task: ExpandMacro) -> Result<FlatTree, PanicMessage> {\n         let expander = self.expander(task.lib.as_ref()).map_err(|err| {\n@@ -66,13 +68,18 @@ impl ProcMacroSrv {\n         // FIXME: replace this with std's scoped threads once they stabilize\n         // (then remove dependency on crossbeam)\n         let result = crossbeam::scope(|s| {\n-            let res = s\n+            let res = match s\n+                .builder()\n+                .stack_size(EXPANDER_STACK_SIZE)\n+                .name(task.macro_name.clone())\n                 .spawn(|_| {\n                     expander\n                         .expand(&task.macro_name, &macro_body, attributes.as_ref())\n                         .map(|it| FlatTree::new(&it))\n-                })\n-                .join();\n+                }) {\n+                Ok(handle) => handle.join(),\n+                Err(e) => std::panic::resume_unwind(Box::new(e)),\n+            };\n \n             match res {\n                 Ok(res) => res,"}]}