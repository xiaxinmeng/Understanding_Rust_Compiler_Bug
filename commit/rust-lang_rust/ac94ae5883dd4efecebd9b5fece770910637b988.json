{"sha": "ac94ae5883dd4efecebd9b5fece770910637b988", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjOTRhZTU4ODNkZDRlZmVjZWJkOWI1ZmVjZTc3MDkxMDYzN2I5ODg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-12T15:24:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-28T10:15:24Z"}, "message": "Update Rustdoc to deal with the Fn return type being an associated type.", "tree": {"sha": "faace06b2b86ffee6482d75b10a5c15bc4c28266", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faace06b2b86ffee6482d75b10a5c15bc4c28266"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac94ae5883dd4efecebd9b5fece770910637b988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac94ae5883dd4efecebd9b5fece770910637b988", "html_url": "https://github.com/rust-lang/rust/commit/ac94ae5883dd4efecebd9b5fece770910637b988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac94ae5883dd4efecebd9b5fece770910637b988/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bd19112ee30925b636ebbe26de9e043b47cb67f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd19112ee30925b636ebbe26de9e043b47cb67f", "html_url": "https://github.com/rust-lang/rust/commit/7bd19112ee30925b636ebbe26de9e043b47cb67f"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "d2080419469510ebec759567e5208d3b365fee22", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ac94ae5883dd4efecebd9b5fece770910637b988/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac94ae5883dd4efecebd9b5fece770910637b988/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=ac94ae5883dd4efecebd9b5fece770910637b988", "patch": "@@ -536,7 +536,7 @@ fn external_path_params(cx: &DocContext, trait_did: Option<ast::DefId>,\n     match (trait_did, cx.tcx_opt()) {\n         // Attempt to sugar an external path like Fn<(A, B,), C> to Fn(A, B) -> C\n         (Some(did), Some(ref tcx)) if tcx.lang_items.fn_trait_kind(did).is_some() => {\n-            assert_eq!(types.len(), 2);\n+            assert_eq!(types.len(), 1);\n             let inputs = match types[0].sty {\n                 sty::ty_tup(ref tys) => tys.iter().map(|t| t.clean(cx)).collect(),\n                 _ => {\n@@ -547,10 +547,12 @@ fn external_path_params(cx: &DocContext, trait_did: Option<ast::DefId>,\n                     }\n                 }\n             };\n-            let output = match types[1].sty {\n-                sty::ty_tup(ref v) if v.is_empty() => None, // -> ()\n-                _ => Some(types[1].clean(cx))\n-            };\n+            let output = None;\n+            // FIXME(#20299) return type comes from a projection now\n+            // match types[1].sty {\n+            //     sty::ty_tup(ref v) if v.is_empty() => None, // -> ()\n+            //     _ => Some(types[1].clean(cx))\n+            // };\n             PathParameters::Parenthesized {\n                 inputs: inputs,\n                 output: output"}]}