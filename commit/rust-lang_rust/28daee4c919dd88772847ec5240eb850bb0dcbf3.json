{"sha": "28daee4c919dd88772847ec5240eb850bb0dcbf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4ZGFlZTRjOTE5ZGQ4ODc3Mjg0N2VjNTI0MGViODUwYmIwZGNiZjM=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-03T16:23:21Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-05T11:41:51Z"}, "message": "Rustup", "tree": {"sha": "be8d79af78b4f3fe92cd5bf0042ddd3f95b3e86f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be8d79af78b4f3fe92cd5bf0042ddd3f95b3e86f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28daee4c919dd88772847ec5240eb850bb0dcbf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28daee4c919dd88772847ec5240eb850bb0dcbf3", "html_url": "https://github.com/rust-lang/rust/commit/28daee4c919dd88772847ec5240eb850bb0dcbf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28daee4c919dd88772847ec5240eb850bb0dcbf3/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "547d9ca120a29a546453319cad2c87f0f924703a", "url": "https://api.github.com/repos/rust-lang/rust/commits/547d9ca120a29a546453319cad2c87f0f924703a", "html_url": "https://github.com/rust-lang/rust/commit/547d9ca120a29a546453319cad2c87f0f924703a"}], "stats": {"total": 55, "additions": 47, "deletions": 8}, "files": [{"sha": "2dd71828136864899caf55645dc072f9c7b37644", "filename": "Cargo.toml", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/28daee4c919dd88772847ec5240eb850bb0dcbf3/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/28daee4c919dd88772847ec5240eb850bb0dcbf3/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=28daee4c919dd88772847ec5240eb850bb0dcbf3", "patch": "@@ -48,9 +48,41 @@ semver = \"0.9\"\n # Not actually needed right now but required to make sure that clippy/ and cargo build\n # with the same set of features in rust-lang/rust\n num-traits = \"0.2\" # enable the default feature\n-winapi = \"0.3\"\n backtrace = \"0.3\"\n \n+# keep in sync with `cargo`'s `Cargo.toml'\n+[target.'cfg(windows)'.dependencies.winapi]\n+version = \"0.3\"\n+features = [\n+  # keep in sync with `cargo`'s `Cargo.toml'\n+  \"handleapi\",\n+  \"jobapi\",\n+  \"jobapi2\",\n+  \"minwindef\",\n+  \"ntdef\",\n+  \"ntstatus\",\n+  \"processenv\",\n+  \"processthreadsapi\",\n+  \"psapi\",\n+  \"synchapi\",\n+  \"winerror\",\n+  \"winbase\",\n+  \"wincon\",\n+  \"winnt\",\n+  # no idea where these come from\n+  \"lmcons\",\n+  \"minschannel\",\n+  \"minwinbase\",\n+  \"ntsecapi\",\n+  \"profileapi\",\n+  \"schannel\",\n+  \"securitybaseapi\",\n+  \"synchapi\",\n+  \"sysinfoapi\",\n+  \"timezoneapi\",\n+  \"wincrypt\",\n+]\n+\n [dev-dependencies]\n cargo_metadata = \"0.5\"\n compiletest_rs = \"0.3.7\""}, {"sha": "605182c007aa1ba42bc8d756601eb076b930b897", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/28daee4c919dd88772847ec5240eb850bb0dcbf3/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28daee4c919dd88772847ec5240eb850bb0dcbf3/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=28daee4c919dd88772847ec5240eb850bb0dcbf3", "patch": "@@ -342,16 +342,23 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n                 self.record(&None);\n             },\n             TyPath(ref path) => {\n-                self.collect_anonymous_lifetimes(path, ty);\n-            },\n-            TyImplTraitExistential(exist_ty_id, _, _) => {\n-                if let ItemExistential(ref exist_ty) = self.cx.tcx.hir.expect_item(exist_ty_id.id).node {\n-                    for bound in &exist_ty.bounds {\n-                        if let GenericBound::Outlives(_) = *bound {\n-                            self.record(&None);\n+                if let QPath::Resolved(_, ref path) = *path {\n+                    if let Def::Existential(def_id) = path.def {\n+                        let node_id = self.cx.tcx.hir.as_local_node_id(def_id).unwrap();\n+                        if let ItemExistential(ref exist_ty) = self.cx.tcx.hir.expect_item(node_id).node {\n+                            for bound in &exist_ty.bounds {\n+                                if let GenericBound::Outlives(_) = *bound {\n+                                    self.record(&None);\n+                                }\n+                            }\n+                        } else {\n+                            unreachable!()\n                         }\n+                        walk_ty(self, ty);\n+                        return;\n                     }\n                 }\n+                self.collect_anonymous_lifetimes(path, ty);\n             }\n             TyTraitObject(ref bounds, ref lt) => {\n                 if !lt.is_elided() {"}]}