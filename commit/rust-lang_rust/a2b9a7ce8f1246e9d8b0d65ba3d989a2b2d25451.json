{"sha": "a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYjlhN2NlOGYxMjQ2ZTlkOGIwZDY1YmEzZDk4OWEyYjJkMjU0NTE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-24T18:26:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-24T18:26:46Z"}, "message": "rustc: Use a .def file for Darwin. Puts out burning Darwin tinderbox.", "tree": {"sha": "3572daf3796a9e7590fb4956372cfc027af41f01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3572daf3796a9e7590fb4956372cfc027af41f01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "html_url": "https://github.com/rust-lang/rust/commit/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c34ae9d8319c29413d9fb3339af8d26ad663f61", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c34ae9d8319c29413d9fb3339af8d26ad663f61", "html_url": "https://github.com/rust-lang/rust/commit/4c34ae9d8319c29413d9fb3339af8d26ad663f61"}], "stats": {"total": 672, "additions": 664, "deletions": 8}, "files": [{"sha": "a0f7a11f5bb0305df86b4dec8ae5045d9cc62fe2", "filename": "Makefile.in", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "patch": "@@ -31,32 +31,37 @@ ifeq ($(CFG_OSTYPE), FreeBSD)\n   endif\n   CFG_UNIXY := 1\n   CFG_LDENV := LD_LIBRARY_PATH\n+  CFG_DEF_SUFFIX := .bsd.def\n endif\n \n ifeq ($(CFG_OSTYPE), Linux)\n   CFG_LIB_NAME=lib$(1).so\n   CFG_GCC_CFLAGS += -fPIC -march=i686\n   CFG_GCC_LINK_FLAGS += -shared -fPIC -ldl -lpthread -lrt\n+  CFG_GCC_DEF_FLAG :=\n   ifeq ($(CFG_CPUTYPE), x86_64)\n     CFG_GCC_CFLAGS += -m32\n     CFG_GCC_LINK_FLAGS += -m32\n   endif\n   CFG_UNIXY := 1\n   CFG_LDENV := LD_LIBRARY_PATH\n+  CFG_DEF_SUFFIX := .linux.def\n endif\n \n ifeq ($(CFG_OSTYPE), Darwin)\n   CFG_LIB_NAME=lib$(1).dylib\n   CFG_UNIXY := 1\n   CFG_LDENV := DYLD_LIBRARY_PATH\n   CFG_GCC_LINK_FLAGS += -dynamiclib -lpthread\n+  CFG_GCC_DEF_FLAG := -exported_symbols_list\n   # Darwin has a very blurry notion of \"64 bit\", and claims it's running\n   # \"on an i386\" when the whole userspace is 64-bit and the compiler\n   # emits 64-bit binaries by default. So we just force -m32 here. Smarter\n   # approaches welcome!\n   CFG_GCC_CFLAGS += -m32\n   CFG_GCC_LINK_FLAGS += -m32\n   CFG_DSYMUTIL := dsymutil\n+  CFG_DEF_SUFFIX := .darwin.def\n endif\n \n ifneq ($(findstring MINGW,$(CFG_OSTYPE)),)\n@@ -84,6 +89,7 @@ ifdef CFG_WINDOWSY\n   endif\n   CFG_GCC_CFLAGS += -march=i686\n   CFG_GCC_LINK_FLAGS += -shared -fPIC\n+  CFG_DEF_SUFFIX := .def\n endif\n \n ifdef CFG_UNIXY\n@@ -141,16 +147,12 @@ ifdef CFG_GCC\n   CFG_GCC_LINK_FLAGS += -g\n   CFG_COMPILE_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_CFLAGS) -c -o $(1) $(2)\n   CFG_DEPEND_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_CFLAGS) -MT \"$(1)\" -MM $(2)\n+  CFG_LINK_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_LINK_FLAGS) -o $(1) \\\n+               $(CFG_GCC_DEF_FLAG) $(3) $(2)\n else\n   CFG_ERR := $(error please try on a system with gcc)\n endif\n \n-ifdef CFG_WINDOWSY\n-  CFG_LINK_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_LINK_FLAGS) -o $(1) $(3) $(2)\n-else\n-  CFG_LINK_C = $(CFG_GCC_CROSS)g++ $(CFG_GCC_LINK_FLAGS) -o $(1) $(2)\n-endif\n-\n ifdef CFG_OCAMLC_OPT\n   $(info cfg: have ocaml native compiler)\n   OPT=.opt\n@@ -342,7 +344,7 @@ RUNTIME_HDR := rt/globals.h \\\n                rt/test/rust_test_runtime.h \\\n                rt/test/rust_test_util.h\n \n-RUNTIME_DEF := $(S)src/rt/rustrt.def\n+RUNTIME_DEF := $(S)src/rt/rustrt$(CFG_DEF_SUFFIX)\n RUNTIME_INCS := -I $(S)src/rt/isaac -I $(S)src/rt/uthash\n RUNTIME_OBJS := $(RUNTIME_CS:.cpp=.o)\n \n@@ -354,7 +356,7 @@ RUSTLLVM_CS := $(addprefix rustllvm/, \\\n                 MachOObjectFile.cpp Object.cpp RustWrapper.cpp)\n \n RUSTLLVM_HDR := rustllvm/include/llvm-c/Object.h\n-RUSTLLVM_DEF := $(S)src/rustllvm/rustllvm.def\n+RUSTLLVM_DEF := $(S)src/rustllvm/rustllvm$(CFG_DEF_SUFFIX)\n \n RUSTLLVM_INCS := -iquote $(CFG_LLVM_INCDIR) \\\n                  -iquote $(S)src/rustllvm/include"}, {"sha": "96dc2bc7a2b4ed162336cdf78c77ba3bddc283ca", "filename": "src/rt/rustrt.darwin.def", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/src%2Frt%2Frustrt.darwin.def", "raw_url": "https://github.com/rust-lang/rust/raw/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/src%2Frt%2Frustrt.darwin.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.darwin.def?ref=a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "patch": "@@ -0,0 +1,68 @@\n+_align_of\n+_debug_box\n+_debug_fn\n+_debug_obj\n+_debug_opaque\n+_debug_ptrcast\n+_debug_tag\n+_debug_trap\n+_debug_tydesc\n+_do_gc\n+_last_os_error\n+_rand_free\n+_rand_new\n+_rand_next\n+_refcount\n+_rust_file_is_dir\n+_rust_get_stdin\n+_rust_get_stdout\n+_rust_run_program\n+_rust_start\n+_size_of\n+_str_alloc\n+_str_buf\n+_str_byte_len\n+_str_from_buf\n+_str_from_cstr\n+_str_from_vec\n+_task_sleep\n+_unsupervise\n+_upcall_clone_chan\n+_upcall_del_chan\n+_upcall_del_port\n+_upcall_exit\n+_upcall_fail\n+_upcall_flush_chan\n+_upcall_free\n+_upcall_get_type_desc\n+_upcall_grow_task\n+_upcall_join\n+_upcall_kill\n+_upcall_log_int\n+_upcall_log_str\n+_upcall_malloc\n+_upcall_mark\n+_upcall_new_chan\n+_upcall_new_port\n+_upcall_new_str\n+_upcall_new_task\n+_upcall_new_thread\n+_upcall_new_vec\n+_upcall_recv\n+_upcall_require_c_sym\n+_upcall_require_rust_sym\n+_upcall_send\n+_upcall_sleep\n+_upcall_start_task\n+_upcall_start_thread\n+_upcall_trace_str\n+_upcall_trace_word\n+_upcall_vec_grow\n+_upcall_yield\n+_vec_alloc\n+_vec_alloc_mut\n+_vec_buf\n+_vec_len\n+_vec_len_set\n+_vec_print_debug_info\n+"}, {"sha": "e078a14dc45d56e599c6d6e683a4874bd205dfa8", "filename": "src/rustllvm/rustllvm.darwin.def", "status": "added", "additions": 586, "deletions": 0, "changes": 586, "blob_url": "https://github.com/rust-lang/rust/blob/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/src%2Frustllvm%2Frustllvm.darwin.def", "raw_url": "https://github.com/rust-lang/rust/raw/a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451/src%2Frustllvm%2Frustllvm.darwin.def", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2Frustllvm.darwin.def?ref=a2b9a7ce8f1246e9d8b0d65ba3d989a2b2d25451", "patch": "@@ -0,0 +1,586 @@\n+_LLVMRustCreateMemoryBufferWithContentsOfFile\n+_LLVMRustGetLastError\n+_LLVMCreateObjectFile\n+_LLVMDisposeObjectFile\n+_LLVMGetSections\n+_LLVMDisposeSectionIterator\n+_LLVMIsSectionIteratorAtEnd\n+_LLVMMoveToNextSection\n+_LLVMGetSectionName\n+_LLVMGetSectionSize\n+_LLVMGetSectionContents\n+_LLVMABIAlignmentOfType\n+_LLVMABISizeOfType\n+_LLVMAddAggressiveDCEPass\n+_LLVMAddAlias\n+_LLVMAddArgumentPromotionPass\n+_LLVMAddAttribute\n+_LLVMAddCFGSimplificationPass\n+_LLVMAddCase\n+_LLVMAddConstantMergePass\n+_LLVMAddConstantPropagationPass\n+_LLVMAddDeadArgEliminationPass\n+_LLVMAddDeadStoreEliminationPass\n+_LLVMAddDeadTypeEliminationPass\n+_LLVMAddDemoteMemoryToRegisterPass\n+_LLVMAddDestination\n+_LLVMAddFunction\n+_LLVMAddFunctionAttr\n+_LLVMAddFunctionAttrsPass\n+_LLVMAddFunctionInliningPass\n+_LLVMAddGVNPass\n+_LLVMAddGlobal\n+_LLVMAddGlobalDCEPass\n+_LLVMAddGlobalInAddressSpace\n+_LLVMAddGlobalMapping\n+_LLVMAddGlobalOptimizerPass\n+_LLVMAddIPConstantPropagationPass\n+_LLVMAddIPSCCPPass\n+_LLVMAddIncoming\n+_LLVMAddIndVarSimplifyPass\n+_LLVMAddInstrAttribute\n+_LLVMAddInstructionCombiningPass\n+_LLVMAddInternalizePass\n+_LLVMAddJumpThreadingPass\n+_LLVMAddLICMPass\n+_LLVMAddLoopDeletionPass\n+_LLVMAddLoopRotatePass\n+_LLVMAddLoopUnrollPass\n+_LLVMAddLoopUnswitchPass\n+_LLVMAddLowerSetJmpPass\n+_LLVMAddMemCpyOptPass\n+_LLVMAddModule\n+_LLVMAddModuleProvider\n+_LLVMAddPromoteMemoryToRegisterPass\n+_LLVMAddPruneEHPass\n+_LLVMAddRaiseAllocationsPass\n+_LLVMAddReassociatePass\n+_LLVMAddSCCPPass\n+_LLVMAddScalarReplAggregatesPass\n+_LLVMAddScalarReplAggregatesPassWithThreshold\n+_LLVMAddSimplifyLibCallsPass\n+_LLVMAddStripDeadPrototypesPass\n+_LLVMAddStripSymbolsPass\n+_LLVMAddTailCallEliminationPass\n+_LLVMAddTargetData\n+_LLVMAddTypeName\n+_LLVMAddVerifierPass\n+_LLVMAlignOf\n+_LLVMAppendBasicBlock\n+_LLVMAppendBasicBlockInContext\n+_LLVMArrayType\n+_LLVMBasicBlockAsValue\n+_LLVMBlockAddress\n+_LLVMBuildAShr\n+_LLVMBuildAdd\n+_LLVMBuildAggregateRet\n+_LLVMBuildAlloca\n+_LLVMBuildAnd\n+_LLVMBuildArrayAlloca\n+_LLVMBuildArrayMalloc\n+_LLVMBuildBinOp\n+_LLVMBuildBitCast\n+_LLVMBuildBr\n+_LLVMBuildCall\n+_LLVMBuildCast\n+_LLVMBuildCondBr\n+_LLVMBuildExactSDiv\n+_LLVMBuildExtractElement\n+_LLVMBuildExtractValue\n+_LLVMBuildFAdd\n+_LLVMBuildFCmp\n+_LLVMBuildFDiv\n+_LLVMBuildFMul\n+_LLVMBuildFNeg\n+_LLVMBuildFPCast\n+_LLVMBuildFPExt\n+_LLVMBuildFPToSI\n+_LLVMBuildFPToUI\n+_LLVMBuildFPTrunc\n+_LLVMBuildFRem\n+_LLVMBuildFSub\n+_LLVMBuildFree\n+_LLVMBuildGEP\n+_LLVMBuildGlobalString\n+_LLVMBuildGlobalStringPtr\n+_LLVMBuildICmp\n+_LLVMBuildInBoundsGEP\n+_LLVMBuildIndirectBr\n+_LLVMBuildInsertElement\n+_LLVMBuildInsertValue\n+_LLVMBuildIntCast\n+_LLVMBuildIntToPtr\n+_LLVMBuildInvoke\n+_LLVMBuildIsNotNull\n+_LLVMBuildIsNull\n+_LLVMBuildLShr\n+_LLVMBuildLoad\n+_LLVMBuildMalloc\n+_LLVMBuildMul\n+_LLVMBuildNSWAdd\n+_LLVMBuildNSWMul\n+_LLVMBuildNSWNeg\n+_LLVMBuildNSWSub\n+_LLVMBuildNUWAdd\n+_LLVMBuildNUWMul\n+_LLVMBuildNUWNeg\n+_LLVMBuildNUWSub\n+_LLVMBuildNeg\n+_LLVMBuildNot\n+_LLVMBuildOr\n+_LLVMBuildPhi\n+_LLVMBuildPointerCast\n+_LLVMBuildPtrDiff\n+_LLVMBuildPtrToInt\n+_LLVMBuildRet\n+_LLVMBuildRetVoid\n+_LLVMBuildSDiv\n+_LLVMBuildSExt\n+_LLVMBuildSExtOrBitCast\n+_LLVMBuildSIToFP\n+_LLVMBuildSRem\n+_LLVMBuildSelect\n+_LLVMBuildShl\n+_LLVMBuildShuffleVector\n+_LLVMBuildStore\n+_LLVMBuildStructGEP\n+_LLVMBuildSub\n+_LLVMBuildSwitch\n+_LLVMBuildTrunc\n+_LLVMBuildTruncOrBitCast\n+_LLVMBuildUDiv\n+_LLVMBuildUIToFP\n+_LLVMBuildURem\n+_LLVMBuildUnreachable\n+_LLVMBuildUnwind\n+_LLVMBuildVAArg\n+_LLVMBuildXor\n+_LLVMBuildZExt\n+_LLVMBuildZExtOrBitCast\n+_LLVMByteOrder\n+_LLVMCallFrameAlignmentOfType\n+_LLVMClearInsertionPosition\n+_LLVMConstAShr\n+_LLVMConstAdd\n+_LLVMConstAllOnes\n+_LLVMConstAnd\n+_LLVMConstArray\n+_LLVMConstBitCast\n+_LLVMConstExactSDiv\n+_LLVMConstExtractElement\n+_LLVMConstExtractValue\n+_LLVMConstFAdd\n+_LLVMConstFCmp\n+_LLVMConstFDiv\n+_LLVMConstFMul\n+_LLVMConstFNeg\n+_LLVMConstFPCast\n+_LLVMConstFPExt\n+_LLVMConstFPToSI\n+_LLVMConstFPToUI\n+_LLVMConstFPTrunc\n+_LLVMConstFRem\n+_LLVMConstFSub\n+_LLVMConstGEP\n+_LLVMConstICmp\n+_LLVMConstInBoundsGEP\n+_LLVMConstInlineAsm\n+_LLVMConstInsertElement\n+_LLVMConstInsertValue\n+_LLVMConstInt\n+_LLVMConstIntCast\n+_LLVMConstIntGetSExtValue\n+_LLVMConstIntGetZExtValue\n+_LLVMConstIntOfArbitraryPrecision\n+_LLVMConstIntOfString\n+_LLVMConstIntOfStringAndSize\n+_LLVMConstIntToPtr\n+_LLVMConstLShr\n+_LLVMConstMul\n+_LLVMConstNSWAdd\n+_LLVMConstNSWMul\n+_LLVMConstNSWNeg\n+_LLVMConstNSWSub\n+_LLVMConstNUWAdd\n+_LLVMConstNUWMul\n+_LLVMConstNUWNeg\n+_LLVMConstNUWSub\n+_LLVMConstNeg\n+_LLVMConstNot\n+_LLVMConstNull\n+_LLVMConstOr\n+_LLVMConstPointerCast\n+_LLVMConstPointerNull\n+_LLVMConstPtrToInt\n+_LLVMConstReal\n+_LLVMConstRealOfString\n+_LLVMConstRealOfStringAndSize\n+_LLVMConstSDiv\n+_LLVMConstSExt\n+_LLVMConstSExtOrBitCast\n+_LLVMConstSIToFP\n+_LLVMConstSRem\n+_LLVMConstSelect\n+_LLVMConstShl\n+_LLVMConstShuffleVector\n+_LLVMConstString\n+_LLVMConstStringInContext\n+_LLVMConstStruct\n+_LLVMConstStructInContext\n+_LLVMConstSub\n+_LLVMConstTrunc\n+_LLVMConstTruncOrBitCast\n+_LLVMConstUDiv\n+_LLVMConstUIToFP\n+_LLVMConstURem\n+_LLVMConstVector\n+_LLVMConstXor\n+_LLVMConstZExt\n+_LLVMConstZExtOrBitCast\n+_LLVMContextCreate\n+_LLVMContextDispose\n+_LLVMCopyStringRepOfTargetData\n+_LLVMCountBasicBlocks\n+_LLVMCountIncoming\n+_LLVMCountParamTypes\n+_LLVMCountParams\n+_LLVMCountStructElementTypes\n+_LLVMCreateBuilder\n+_LLVMCreateBuilderInContext\n+_LLVMCreateExecutionEngine\n+_LLVMCreateExecutionEngineForModule\n+_LLVMCreateFunctionPassManager\n+_LLVMCreateFunctionPassManagerForModule\n+_LLVMCreateGenericValueOfFloat\n+_LLVMCreateGenericValueOfInt\n+_LLVMCreateGenericValueOfPointer\n+_LLVMCreateInterpreter\n+_LLVMCreateInterpreterForModule\n+_LLVMCreateJITCompiler\n+_LLVMCreateJITCompilerForModule\n+_LLVMCreateMemoryBufferWithContentsOfFile\n+_LLVMCreateMemoryBufferWithSTDIN\n+_LLVMCreateModuleProviderForExistingModule\n+_LLVMCreateObjectFile\n+_LLVMCreatePassManager\n+_LLVMCreateTargetData\n+_LLVMCreateTypeHandle\n+_LLVMDeleteBasicBlock\n+_LLVMDeleteFunction\n+_LLVMDeleteGlobal\n+_LLVMDeleteTypeName\n+_LLVMDisposeBuilder\n+_LLVMDisposeExecutionEngine\n+_LLVMDisposeGenericValue\n+_LLVMDisposeMemoryBuffer\n+_LLVMDisposeMessage\n+_LLVMDisposeModule\n+_LLVMDisposeModuleProvider\n+_LLVMDisposeObjectFile\n+_LLVMDisposePassManager\n+_LLVMDisposeSectionIterator\n+_LLVMDisposeTargetData\n+_LLVMDisposeTypeHandle\n+_LLVMDoubleType\n+_LLVMDoubleTypeInContext\n+_LLVMDumpModule\n+_LLVMDumpValue\n+_LLVMElementAtOffset\n+_LLVMFP128Type\n+_LLVMFP128TypeInContext\n+_LLVMFinalizeFunctionPassManager\n+_LLVMFindFunction\n+_LLVMFloatType\n+_LLVMFloatTypeInContext\n+_LLVMFreeMachineCodeForFunction\n+_LLVMFunctionType\n+_LLVMGenericValueIntWidth\n+_LLVMGenericValueToFloat\n+_LLVMGenericValueToInt\n+_LLVMGenericValueToPointer\n+_LLVMGetAlignment\n+_LLVMGetArrayLength\n+_LLVMGetAttribute\n+_LLVMGetBasicBlockParent\n+_LLVMGetBasicBlocks\n+_LLVMGetBitcodeModule\n+_LLVMGetBitcodeModuleInContext\n+_LLVMGetBitcodeModuleProvider\n+_LLVMGetBitcodeModuleProviderInContext\n+_LLVMGetConstOpcode\n+_LLVMGetCurrentDebugLocation\n+_LLVMGetDataLayout\n+_LLVMGetElementType\n+_LLVMGetEntryBasicBlock\n+_LLVMGetExecutionEngineTargetData\n+_LLVMGetFirstBasicBlock\n+_LLVMGetFirstFunction\n+_LLVMGetFirstGlobal\n+_LLVMGetFirstInstruction\n+_LLVMGetFirstParam\n+_LLVMGetFirstUse\n+_LLVMGetFunctionAttr\n+_LLVMGetFunctionCallConv\n+_LLVMGetGC\n+_LLVMGetGlobalContext\n+_LLVMGetGlobalContext\n+_LLVMGetGlobalParent\n+_LLVMGetGlobalPassRegistry\n+_LLVMGetIncomingBlock\n+_LLVMGetIncomingValue\n+_LLVMGetInitializer\n+_LLVMGetInsertBlock\n+_LLVMGetInstructionCallConv\n+_LLVMGetInstructionParent\n+_LLVMGetIntTypeWidth\n+_LLVMGetIntrinsicID\n+_LLVMGetLastBasicBlock\n+_LLVMGetLastFunction\n+_LLVMGetLastGlobal\n+_LLVMGetLastInstruction\n+_LLVMGetLastParam\n+_LLVMGetLinkage\n+_LLVMGetMDKindID\n+_LLVMGetMDKindIDInContext\n+_LLVMGetMetadata\n+_LLVMGetModuleContext\n+_LLVMGetNamedFunction\n+_LLVMGetNamedGlobal\n+_LLVMGetNextBasicBlock\n+_LLVMGetNextFunction\n+_LLVMGetNextGlobal\n+_LLVMGetNextInstruction\n+_LLVMGetNextParam\n+_LLVMGetNextUse\n+_LLVMGetNumOperands\n+_LLVMGetOperand\n+_LLVMGetParam\n+_LLVMGetParamParent\n+_LLVMGetParamTypes\n+_LLVMGetParams\n+_LLVMGetPointerAddressSpace\n+_LLVMGetPointerToGlobal\n+_LLVMGetPreviousBasicBlock\n+_LLVMGetPreviousFunction\n+_LLVMGetPreviousGlobal\n+_LLVMGetPreviousInstruction\n+_LLVMGetPreviousParam\n+_LLVMGetReturnType\n+_LLVMGetSection\n+_LLVMGetSectionContents\n+_LLVMGetSectionName\n+_LLVMGetSectionSize\n+_LLVMGetSections\n+_LLVMGetStructElementTypes\n+_LLVMGetTarget\n+_LLVMGetTypeByName\n+_LLVMGetTypeContext\n+_LLVMGetTypeKind\n+_LLVMGetTypeName\n+_LLVMGetUndef\n+_LLVMGetUsedValue\n+_LLVMGetUser\n+_LLVMGetValueName\n+_LLVMGetVectorSize\n+_LLVMGetVisibility\n+_LLVMHasMetadata\n+_LLVMInitializeCodeGen\n+_LLVMInitializeFunctionPassManager\n+_LLVMInitializeIPA\n+_LLVMInitializeInstCombine\n+_LLVMInitializeInstrumentation\n+_LLVMInitializeScalarOpts\n+_LLVMInitializeTarget\n+_LLVMInitializeTransformUtils\n+_LLVMInitializeX86AsmLexer\n+_LLVMInitializeX86AsmLexer\n+_LLVMInitializeX86AsmParser\n+_LLVMInitializeX86AsmParser\n+_LLVMInitializeX86AsmPrinter\n+_LLVMInitializeX86AsmPrinter\n+_LLVMInitializeX86Disassembler\n+_LLVMInitializeX86Disassembler\n+_LLVMInitializeX86Target\n+_LLVMInitializeX86Target\n+_LLVMInitializeX86TargetInfo\n+_LLVMInitializeX86TargetInfo\n+_LLVMInsertBasicBlock\n+_LLVMInsertBasicBlockInContext\n+_LLVMInsertIntoBuilder\n+_LLVMInsertIntoBuilderWithName\n+_LLVMInt16Type\n+_LLVMInt16TypeInContext\n+_LLVMInt1Type\n+_LLVMInt1TypeInContext\n+_LLVMInt32Type\n+_LLVMInt32TypeInContext\n+_LLVMInt64Type\n+_LLVMInt64TypeInContext\n+_LLVMInt8Type\n+_LLVMInt8TypeInContext\n+_LLVMIntPtrType\n+_LLVMIntType\n+_LLVMIntTypeInContext\n+_LLVMInvalidateStructLayout\n+_LLVMIsAAllocaInst\n+_LLVMIsAArgument\n+_LLVMIsABasicBlock\n+_LLVMIsABinaryOperator\n+_LLVMIsABitCastInst\n+_LLVMIsABranchInst\n+_LLVMIsACallInst\n+_LLVMIsACastInst\n+_LLVMIsACmpInst\n+_LLVMIsAConstant\n+_LLVMIsAConstantAggregateZero\n+_LLVMIsAConstantArray\n+_LLVMIsAConstantExpr\n+_LLVMIsAConstantFP\n+_LLVMIsAConstantInt\n+_LLVMIsAConstantPointerNull\n+_LLVMIsAConstantStruct\n+_LLVMIsAConstantVector\n+_LLVMIsADbgDeclareInst\n+_LLVMIsADbgInfoIntrinsic\n+_LLVMIsAEHSelectorInst\n+_LLVMIsAExtractElementInst\n+_LLVMIsAExtractValueInst\n+_LLVMIsAFCmpInst\n+_LLVMIsAFPExtInst\n+_LLVMIsAFPToSIInst\n+_LLVMIsAFPToUIInst\n+_LLVMIsAFPTruncInst\n+_LLVMIsAFunction\n+_LLVMIsAGetElementPtrInst\n+_LLVMIsAGlobalAlias\n+_LLVMIsAGlobalValue\n+_LLVMIsAGlobalVariable\n+_LLVMIsAICmpInst\n+_LLVMIsAInlineAsm\n+_LLVMIsAInsertElementInst\n+_LLVMIsAInsertValueInst\n+_LLVMIsAInstruction\n+_LLVMIsAIntToPtrInst\n+_LLVMIsAIntrinsicInst\n+_LLVMIsAInvokeInst\n+_LLVMIsALoadInst\n+_LLVMIsAMemCpyInst\n+_LLVMIsAMemIntrinsic\n+_LLVMIsAMemMoveInst\n+_LLVMIsAMemSetInst\n+_LLVMIsAPHINode\n+_LLVMIsAPtrToIntInst\n+_LLVMIsAReturnInst\n+_LLVMIsASExtInst\n+_LLVMIsASIToFPInst\n+_LLVMIsASelectInst\n+_LLVMIsAShuffleVectorInst\n+_LLVMIsAStoreInst\n+_LLVMIsASwitchInst\n+_LLVMIsATerminatorInst\n+_LLVMIsATruncInst\n+_LLVMIsAUIToFPInst\n+_LLVMIsAUnaryInstruction\n+_LLVMIsAUndefValue\n+_LLVMIsAUnreachableInst\n+_LLVMIsAUnwindInst\n+_LLVMIsAUser\n+_LLVMIsAVAArgInst\n+_LLVMIsAZExtInst\n+_LLVMIsConstant\n+_LLVMIsDeclaration\n+_LLVMIsFunctionVarArg\n+_LLVMIsGlobalConstant\n+_LLVMIsNull\n+_LLVMIsPackedStruct\n+_LLVMIsSectionIteratorAtEnd\n+_LLVMIsTailCall\n+_LLVMIsThreadLocal\n+_LLVMIsUndef\n+_LLVMLabelType\n+_LLVMLabelTypeInContext\n+_LLVMLinkInInterpreter\n+_LLVMLinkInJIT\n+_LLVMLinkInMCJIT\n+_LLVMMDNode\n+_LLVMMDNodeInContext\n+_LLVMMDString\n+_LLVMMDStringInContext\n+_LLVMModuleCreateWithName\n+_LLVMModuleCreateWithNameInContext\n+_LLVMMoveBasicBlockAfter\n+_LLVMMoveBasicBlockBefore\n+_LLVMMoveToNextSection\n+_LLVMOffsetOfElement\n+_LLVMOpaqueType\n+_LLVMOpaqueTypeInContext\n+_LLVMPPCFP128Type\n+_LLVMPPCFP128TypeInContext\n+_LLVMParseBitcode\n+_LLVMParseBitcodeInContext\n+_LLVMPointerSize\n+_LLVMPointerType\n+_LLVMPositionBuilder\n+_LLVMPositionBuilderAtEnd\n+_LLVMPositionBuilderBefore\n+_LLVMPreferredAlignmentOfGlobal\n+_LLVMPreferredAlignmentOfType\n+_LLVMRecompileAndRelinkFunction\n+_LLVMRefineType\n+_LLVMRemoveAttribute\n+_LLVMRemoveFunctionAttr\n+_LLVMRemoveInstrAttribute\n+_LLVMRemoveModule\n+_LLVMRemoveModuleProvider\n+_LLVMReplaceAllUsesWith\n+_LLVMResolveTypeHandle\n+_LLVMRunFunction\n+_LLVMRunFunctionAsMain\n+_LLVMRunFunctionPassManager\n+_LLVMRunPassManager\n+_LLVMRunStaticConstructors\n+_LLVMRunStaticDestructors\n+_LLVMSetAlignment\n+_LLVMSetCurrentDebugLocation\n+_LLVMSetDataLayout\n+_LLVMSetFunctionCallConv\n+_LLVMSetGC\n+_LLVMSetGlobalConstant\n+_LLVMSetInitializer\n+_LLVMSetInstDebugLocation\n+_LLVMSetInstrParamAlignment\n+_LLVMSetInstructionCallConv\n+_LLVMSetLinkage\n+_LLVMSetMetadata\n+_LLVMSetModuleInlineAsm\n+_LLVMSetOperand\n+_LLVMSetParamAlignment\n+_LLVMSetSection\n+_LLVMSetTailCall\n+_LLVMSetTarget\n+_LLVMSetThreadLocal\n+_LLVMSetValueName\n+_LLVMSetVisibility\n+_LLVMSizeOf\n+_LLVMSizeOfTypeInBits\n+_LLVMStoreSizeOfType\n+_LLVMStructType\n+_LLVMStructTypeInContext\n+_LLVMTypeOf\n+_LLVMValueAsBasicBlock\n+_LLVMValueIsBasicBlock\n+_LLVMVectorType\n+_LLVMVerifyFunction\n+_LLVMVerifyModule\n+_LLVMViewFunctionCFG\n+_LLVMViewFunctionCFGOnly\n+_LLVMVoidType\n+_LLVMVoidTypeInContext\n+_LLVMWriteBitcodeToFD\n+_LLVMWriteBitcodeToFile\n+_LLVMWriteBitcodeToFileHandle\n+_LLVMX86FP80Type\n+_LLVMX86FP80TypeInContext\n+_LLVMX86MMXType\n+_LLVMX86MMXTypeInContext\n+"}]}