{"sha": "9e64946bded0698c8c45d74526e6a8b5a514c4a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNjQ5NDZiZGVkMDY5OGM4YzQ1ZDc0NTI2ZTZhOGI1YTUxNGM0YTE=", "commit": {"author": {"name": "snf", "email": "snf@noreply.github.com", "date": "2018-03-14T14:56:37Z"}, "committer": {"name": "snf", "email": "snf@noreply.github.com", "date": "2018-03-15T17:43:05Z"}, "message": "setting ABORTING_MALLOC for asmjs backend", "tree": {"sha": "ffa91b4434d6564e287874b8761acf583bfa00ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffa91b4434d6564e287874b8761acf583bfa00ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e64946bded0698c8c45d74526e6a8b5a514c4a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e64946bded0698c8c45d74526e6a8b5a514c4a1", "html_url": "https://github.com/rust-lang/rust/commit/9e64946bded0698c8c45d74526e6a8b5a514c4a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e64946bded0698c8c45d74526e6a8b5a514c4a1/comments", "author": null, "committer": null, "parents": [{"sha": "ff2d506c2c748bd218f74c6014abc4cecc8c74c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff2d506c2c748bd218f74c6014abc4cecc8c74c4", "html_url": "https://github.com/rust-lang/rust/commit/ff2d506c2c748bd218f74c6014abc4cecc8c74c4"}], "stats": {"total": 28, "additions": 5, "deletions": 23}, "files": [{"sha": "d1e746ea43b45516875e87f7d30f94f0e194556d", "filename": "src/liballoc/tests/string.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Fliballoc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Fliballoc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fstring.rs?ref=9e64946bded0698c8c45d74526e6a8b5a514c4a1", "patch": "@@ -9,11 +9,8 @@\n // except according to those terms.\n \n use std::borrow::Cow;\n-#[cfg(not(target_arch = \"asmjs\"))]\n use std::collections::CollectionAllocErr::*;\n-#[cfg(not(target_arch = \"asmjs\"))]\n use std::mem::size_of;\n-#[cfg(not(target_arch = \"asmjs\"))]\n use std::{usize, isize};\n \n pub trait IntoCow<'a, B: ?Sized> where B: ToOwned {\n@@ -535,7 +532,6 @@ fn test_reserve_exact() {\n     assert!(s.capacity() >= 33)\n }\n \n-#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve() {\n \n@@ -613,7 +609,6 @@ fn test_try_reserve() {\n \n }\n \n-#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve_exact() {\n "}, {"sha": "3c17a401bbaf5793b4d63486d8ad3121b879c0a5", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=9e64946bded0698c8c45d74526e6a8b5a514c4a1", "patch": "@@ -10,11 +10,8 @@\n \n use std::borrow::Cow;\n use std::mem::size_of;\n-use std::{usize, panic};\n-#[cfg(not(target_arch = \"asmjs\"))]\n-use std::isize;\n+use std::{usize, isize, panic};\n use std::vec::{Drain, IntoIter};\n-#[cfg(not(target_arch = \"asmjs\"))]\n use std::collections::CollectionAllocErr::*;\n \n struct DropCounter<'a> {\n@@ -994,7 +991,6 @@ fn test_reserve_exact() {\n     assert!(v.capacity() >= 33)\n }\n \n-#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve() {\n \n@@ -1097,7 +1093,6 @@ fn test_try_reserve() {\n \n }\n \n-#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve_exact() {\n "}, {"sha": "fc1a0b624a555eebde59edf875a7f459074800bc", "filename": "src/liballoc/tests/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Fliballoc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec_deque.rs?ref=9e64946bded0698c8c45d74526e6a8b5a514c4a1", "patch": "@@ -11,13 +11,9 @@\n use std::collections::VecDeque;\n use std::fmt::Debug;\n use std::collections::vec_deque::{Drain};\n-#[cfg(not(target_arch = \"asmjs\"))]\n use std::collections::CollectionAllocErr::*;\n-#[cfg(not(target_arch = \"asmjs\"))]\n use std::mem::size_of;\n-use std::isize;\n-#[cfg(not(target_arch = \"asmjs\"))]\n-use std::usize;\n+use std::{usize, isize};\n \n use self::Taggy::*;\n use self::Taggypar::*;\n@@ -1053,7 +1049,6 @@ fn test_reserve_exact_2() {\n     assert!(v.capacity() >= 48)\n }\n \n-#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve() {\n \n@@ -1155,7 +1150,6 @@ fn test_try_reserve() {\n \n }\n \n-#[cfg(not(target_arch = \"asmjs\"))]\n #[test]\n fn test_try_reserve_exact() {\n "}, {"sha": "ab7df4ba1c543395b28c6b857c4a657997375685", "filename": "src/librustc_back/target/asmjs_unknown_emscripten.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs?ref=9e64946bded0698c8c45d74526e6a8b5a514c4a1", "patch": "@@ -15,7 +15,9 @@ pub fn target() -> Result<Target, String> {\n     let mut args = LinkArgs::new();\n     args.insert(LinkerFlavor::Em,\n                 vec![\"-s\".to_string(),\n-                     \"ERROR_ON_UNDEFINED_SYMBOLS=1\".to_string()]);\n+                     \"ERROR_ON_UNDEFINED_SYMBOLS=1\".to_string(),\n+                     \"-s\".to_string(),\n+                     \"ABORTING_MALLOC=0\".to_string()]);\n \n     let opts = TargetOptions {\n         dynamic_linking: false,"}, {"sha": "b18b38ec302460e4eb1f0fd9c84739dfac9252a3", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e64946bded0698c8c45d74526e6a8b5a514c4a1/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=9e64946bded0698c8c45d74526e6a8b5a514c4a1", "patch": "@@ -2755,11 +2755,8 @@ mod test_map {\n     use cell::RefCell;\n     use rand::{thread_rng, Rng};\n     use panic;\n-    #[cfg(not(target_arch = \"asmjs\"))]\n     use realstd::collections::CollectionAllocErr::*;\n-    #[cfg(not(target_arch = \"asmjs\"))]\n     use realstd::mem::size_of;\n-    #[cfg(not(target_arch = \"asmjs\"))]\n     use realstd::usize;\n \n     #[test]\n@@ -3696,7 +3693,6 @@ mod test_map {\n         assert_eq!(hm.len(), 0);\n     }\n \n-    #[cfg(not(target_arch = \"asmjs\"))]\n     #[test]\n     fn test_try_reserve() {\n "}]}