{"sha": "3d18c4d62d50df273efa8c4b66a12aa010827640", "node_id": "C_kwDOAAsO6NoAKDNkMThjNGQ2MmQ1MGRmMjczZWZhOGM0YjY2YTEyYWEwMTA4Mjc2NDA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-07T19:43:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-07T19:43:20Z"}, "message": "Rollup merge of #105517 - pcc:process-panic-after-fork, r=davidtwco\n\nFix process-panic-after-fork.rs to pass on newer versions of Android.\n\nThe test process-panic-after-fork.rs was checking that abort() resulted in SIGSEGV on Android. This non-standard behavior was fixed back in 2013, so let's fix the test to also accept the standard behavior on Android.", "tree": {"sha": "a3d9bd1ef58ea91f1e94843e949e93ae40154eb9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3d9bd1ef58ea91f1e94843e949e93ae40154eb9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d18c4d62d50df273efa8c4b66a12aa010827640", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjuctYCRBK7hj4Ov3rIwAAhPUIAIZtZvgoHZWdsj0Ca/VcElkR\ne966bSELngtN0SzT2/Ec6hJGpf+vgADpd8S0UfDCEurirBiq3o3zgk1PqKsWSBiV\nQRUTI9LAQ6/ngsXbM5oEeM0ndt+e9ptOyj403Nk1joCRH2TEeS5k4f4+sP5Mx0sB\n4XMagtXrgcuJjNRaLnayj96uS9eo8lEXoNWEL9xlS87/6MFjX1iGsHXx5l5c1ylD\nZ0wFJvQwNt0EMLrJcpQ6xP93HBmo51JznqKyn0H/6QYGIFQ4ZaJUN4eqAKH75Avc\nhxSOA5/nNb57cu70jh6Dwae0b/nq7A6lxWyuALZu3KXamMICWgbyz3gnxxqeRlg=\n=/BLh\n-----END PGP SIGNATURE-----\n", "payload": "tree a3d9bd1ef58ea91f1e94843e949e93ae40154eb9\nparent d7519c363994d87a05efb2041bb2bbbdda55e9ef\nparent 9553a4d439ffcf239c12142a78aa9923058e8a78\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1673120600 +0100\ncommitter GitHub <noreply@github.com> 1673120600 +0100\n\nRollup merge of #105517 - pcc:process-panic-after-fork, r=davidtwco\n\nFix process-panic-after-fork.rs to pass on newer versions of Android.\n\nThe test process-panic-after-fork.rs was checking that abort() resulted in SIGSEGV on Android. This non-standard behavior was fixed back in 2013, so let's fix the test to also accept the standard behavior on Android.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d18c4d62d50df273efa8c4b66a12aa010827640", "html_url": "https://github.com/rust-lang/rust/commit/3d18c4d62d50df273efa8c4b66a12aa010827640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d18c4d62d50df273efa8c4b66a12aa010827640/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d7519c363994d87a05efb2041bb2bbbdda55e9ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/d7519c363994d87a05efb2041bb2bbbdda55e9ef", "html_url": "https://github.com/rust-lang/rust/commit/d7519c363994d87a05efb2041bb2bbbdda55e9ef"}, {"sha": "9553a4d439ffcf239c12142a78aa9923058e8a78", "url": "https://api.github.com/repos/rust-lang/rust/commits/9553a4d439ffcf239c12142a78aa9923058e8a78", "html_url": "https://github.com/rust-lang/rust/commit/9553a4d439ffcf239c12142a78aa9923058e8a78"}], "stats": {"total": 77, "additions": 41, "deletions": 36}, "files": [{"sha": "da2683121735f1176f97775866fbd4e6973ecbcb", "filename": "src/test/ui/process/process-panic-after-fork.rs", "status": "modified", "additions": 41, "deletions": 36, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/3d18c4d62d50df273efa8c4b66a12aa010827640/src%2Ftest%2Fui%2Fprocess%2Fprocess-panic-after-fork.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d18c4d62d50df273efa8c4b66a12aa010827640/src%2Ftest%2Fui%2Fprocess%2Fprocess-panic-after-fork.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprocess%2Fprocess-panic-after-fork.rs?ref=3d18c4d62d50df273efa8c4b66a12aa010827640", "patch": "@@ -84,42 +84,47 @@ fn expect_aborted(status: ExitStatus) {\n \n     #[cfg(target_os = \"android\")]\n     {\n-        // Android signals an abort() call with SIGSEGV at address 0xdeadbaad\n-        // See e.g. https://groups.google.com/g/android-ndk/c/laW1CJc7Icc\n-        assert!(signal == libc::SIGSEGV);\n-\n-        // Additional checks performed:\n-        // 1. Find last tombstone (similar to coredump but in text format) from the\n-        //    same executable (path) as we are (must be because of usage of fork):\n-        //    This ensures that we look into the correct tombstone.\n-        // 2. Cause of crash is a SIGSEGV with address 0xdeadbaad.\n-        // 3. libc::abort call is in one of top two functions on callstack.\n-        // The last two steps distinguish between a normal SIGSEGV and one caused\n-        // by libc::abort.\n-\n-        let this_exe = std::env::current_exe().unwrap().into_os_string().into_string().unwrap();\n-        let exe_string = format!(\">>> {this_exe} <<<\");\n-        let tombstone = (0..100)\n-            .map(|n| format!(\"/data/tombstones/tombstone_{n:02}\"))\n-            .filter(|f| std::path::Path::new(&f).exists())\n-            .map(|f| std::fs::read_to_string(&f).expect(\"Cannot read tombstone file\"))\n-            .filter(|f| f.contains(&exe_string))\n-            .last()\n-            .expect(\"no tombstone found\");\n-\n-        println!(\"Content of tombstone:\\n{tombstone}\");\n-\n-        assert!(\n-            tombstone.contains(\"signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\")\n-        );\n-        let abort_on_top = tombstone\n-            .lines()\n-            .skip_while(|l| !l.contains(\"backtrace:\"))\n-            .skip(1)\n-            .take_while(|l| l.starts_with(\"    #\"))\n-            .take(2)\n-            .any(|f| f.contains(\"/system/lib/libc.so (abort\"));\n-        assert!(abort_on_top);\n+        assert!(signal == libc::SIGABRT || signal == libc::SIGSEGV);\n+\n+        if signal == libc::SIGSEGV {\n+            // Pre-KitKat versions of Android signal an abort() with SIGSEGV at address 0xdeadbaad\n+            // See e.g. https://groups.google.com/g/android-ndk/c/laW1CJc7Icc\n+            //\n+            // This behavior was changed in KitKat to send a standard SIGABRT signal.\n+            // See: https://r.android.com/60341\n+            //\n+            // Additional checks performed:\n+            // 1. Find last tombstone (similar to coredump but in text format) from the\n+            //    same executable (path) as we are (must be because of usage of fork):\n+            //    This ensures that we look into the correct tombstone.\n+            // 2. Cause of crash is a SIGSEGV with address 0xdeadbaad.\n+            // 3. libc::abort call is in one of top two functions on callstack.\n+            // The last two steps distinguish between a normal SIGSEGV and one caused\n+            // by libc::abort.\n+\n+            let this_exe = std::env::current_exe().unwrap().into_os_string().into_string().unwrap();\n+            let exe_string = format!(\">>> {this_exe} <<<\");\n+            let tombstone = (0..100)\n+                .map(|n| format!(\"/data/tombstones/tombstone_{n:02}\"))\n+                .filter(|f| std::path::Path::new(&f).exists())\n+                .map(|f| std::fs::read_to_string(&f).expect(\"Cannot read tombstone file\"))\n+                .filter(|f| f.contains(&exe_string))\n+                .last()\n+                .expect(\"no tombstone found\");\n+\n+            println!(\"Content of tombstone:\\n{tombstone}\");\n+\n+            assert!(tombstone\n+                .contains(\"signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr deadbaad\"));\n+            let abort_on_top = tombstone\n+                .lines()\n+                .skip_while(|l| !l.contains(\"backtrace:\"))\n+                .skip(1)\n+                .take_while(|l| l.starts_with(\"    #\"))\n+                .take(2)\n+                .any(|f| f.contains(\"/system/lib/libc.so (abort\"));\n+            assert!(abort_on_top);\n+        }\n     }\n }\n "}]}