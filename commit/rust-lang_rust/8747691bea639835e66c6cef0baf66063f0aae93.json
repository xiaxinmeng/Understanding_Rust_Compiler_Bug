{"sha": "8747691bea639835e66c6cef0baf66063f0aae93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3NDc2OTFiZWE2Mzk4MzVlNjZjNmNlZjBiYWY2NjA2M2YwYWFlOTM=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-01-20T10:49:45Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2019-01-20T10:49:45Z"}, "message": "Run rustfmt", "tree": {"sha": "82ac07af30cf0eec1a58bc1fea25d4b86f89e703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82ac07af30cf0eec1a58bc1fea25d4b86f89e703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8747691bea639835e66c6cef0baf66063f0aae93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8747691bea639835e66c6cef0baf66063f0aae93", "html_url": "https://github.com/rust-lang/rust/commit/8747691bea639835e66c6cef0baf66063f0aae93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8747691bea639835e66c6cef0baf66063f0aae93/comments", "author": null, "committer": null, "parents": [{"sha": "f51f0178dd5ba19c905d8b323dab2c43ded83b1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f51f0178dd5ba19c905d8b323dab2c43ded83b1e", "html_url": "https://github.com/rust-lang/rust/commit/f51f0178dd5ba19c905d8b323dab2c43ded83b1e"}], "stats": {"total": 94, "additions": 48, "deletions": 46}, "files": [{"sha": "a7b47fd1e5463f32ddcc00cb3d98a9e53c1064e2", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -121,20 +121,20 @@ impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n             let id = map.hir_to_node_id(cmt.hir_id);\n             if let Some(Node::Stmt(st)) = map.find(map.get_parent_node(id)) {\n                 if let StmtKind::Local(ref loc) = st.node {\n-                        if let Some(ref ex) = loc.init {\n-                            if let ExprKind::Box(..) = ex.node {\n-                                if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n-                                    // let x = box (...)\n-                                    self.set.insert(consume_pat.id);\n-                                }\n-                                // TODO Box::new\n-                                // TODO vec![]\n-                                // TODO \"foo\".to_owned() and friends\n+                    if let Some(ref ex) = loc.init {\n+                        if let ExprKind::Box(..) = ex.node {\n+                            if is_non_trait_box(cmt.ty) && !self.is_large_box(cmt.ty) {\n+                                // let x = box (...)\n+                                self.set.insert(consume_pat.id);\n                             }\n+                            // TODO Box::new\n+                            // TODO vec![]\n+                            // TODO \"foo\".to_owned() and friends\n                         }\n                     }\n                 }\n             }\n+        }\n         if let Categorization::Local(lid) = cmt.cat {\n             if self.set.contains(&lid) {\n                 // let y = x where x is known"}, {"sha": "2b4b0d402392631b90135bc0d61e7d200efb6926", "filename": "clippy_lints/src/eval_order_dependence.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Feval_order_dependence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feval_order_dependence.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -90,9 +90,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EvalOrderDependence {\n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n         match stmt.node {\n             StmtKind::Local(ref local) => {\n-                    if let Local { init: Some(ref e), .. } = **local {\n-                        DivergenceVisitor { cx }.visit_expr(e);\n-                    }\n+                if let Local { init: Some(ref e), .. } = **local {\n+                    DivergenceVisitor { cx }.visit_expr(e);\n+                }\n             },\n             StmtKind::Expr(ref e) | StmtKind::Semi(ref e) => DivergenceVisitor { cx }.maybe_walk_expr(e),\n             StmtKind::Item(..) => {},\n@@ -271,9 +271,10 @@ fn check_stmt<'a, 'tcx>(vis: &mut ReadVisitor<'a, 'tcx>, stmt: &'tcx Stmt) -> St\n         StmtKind::Expr(ref expr) | StmtKind::Semi(ref expr) => check_expr(vis, expr),\n         // If the declaration is of a local variable, check its initializer\n         // expression if it has one. Otherwise, keep going.\n-        StmtKind::Local(ref local) => {\n-            local.init.as_ref().map_or(StopEarly::KeepGoing, |expr| check_expr(vis, expr))\n-        },\n+        StmtKind::Local(ref local) => local\n+            .init\n+            .as_ref()\n+            .map_or(StopEarly::KeepGoing, |expr| check_expr(vis, expr)),\n         _ => StopEarly::KeepGoing,\n     }\n }"}, {"sha": "70ff86087ea63ca54b0657f73fd0a922b5ec5464", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -1971,11 +1971,11 @@ fn extract_expr_from_first_stmt(block: &Block) -> Option<&Expr> {\n         return None;\n     }\n     if let StmtKind::Local(ref local) = block.stmts[0].node {\n-            if let Some(ref expr) = local.init {\n-                Some(expr)\n-            } else {\n-                None\n-            }\n+        if let Some(ref expr) = local.init {\n+            Some(expr)\n+        } else {\n+            None\n+        }\n     } else {\n         None\n     }"}, {"sha": "6c1befe6e53a5d7807df485f88541312bcfed252", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -1337,10 +1337,10 @@ fn lint_clone_on_copy(cx: &LateContext<'_, '_>, expr: &hir::Expr, arg: &hir::Exp\n                     },\n                     hir::Node::Stmt(stmt) => {\n                         if let hir::StmtKind::Local(ref loc) = stmt.node {\n-                                if let hir::PatKind::Ref(..) = loc.pat.node {\n-                                    // let ref y = *x borrows x, let ref y = x.clone() does not\n-                                    return;\n-                                }\n+                            if let hir::PatKind::Ref(..) = loc.pat.node {\n+                                // let ref y = *x borrows x, let ref y = x.clone() does not\n+                                return;\n+                            }\n                         }\n                     },\n                     _ => {},"}, {"sha": "c99b00bb98f9db85ad4fa8da9c70d7f0609b0809", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -133,22 +133,22 @@ fn check_local<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, local: &'tcx Local, binding\n     if higher::is_from_for_desugar(local) {\n         return;\n     }\n-        let Local {\n-            ref pat,\n-            ref ty,\n-            ref init,\n-            span,\n-            ..\n-        } = *local;\n-        if let Some(ref t) = *ty {\n-            check_ty(cx, t, bindings)\n-        }\n-        if let Some(ref o) = *init {\n-            check_expr(cx, o, bindings);\n-            check_pat(cx, pat, Some(o), span, bindings);\n-        } else {\n-            check_pat(cx, pat, None, span, bindings);\n-        }\n+    let Local {\n+        ref pat,\n+        ref ty,\n+        ref init,\n+        span,\n+        ..\n+    } = *local;\n+    if let Some(ref t) = *ty {\n+        check_ty(cx, t, bindings)\n+    }\n+    if let Some(ref o) = *init {\n+        check_expr(cx, o, bindings);\n+        check_pat(cx, pat, Some(o), span, bindings);\n+    } else {\n+        check_pat(cx, pat, None, span, bindings);\n+    }\n }\n \n fn is_binding(cx: &LateContext<'_, '_>, pat_id: HirId) -> bool {"}, {"sha": "a176830be26bc6257f0bb1d88dfee666f8c1e220", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -43,13 +43,14 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n     /// Check whether two statements are the same.\n     pub fn eq_stmt(&mut self, left: &Stmt, right: &Stmt) -> bool {\n         match (&left.node, &right.node) {\n-            (&StmtKind::Local(ref l), &StmtKind::Local(ref r)) =>\n+            (&StmtKind::Local(ref l), &StmtKind::Local(ref r)) => {\n                 self.eq_pat(&l.pat, &r.pat)\n                     && both(&l.ty, &r.ty, |l, r| self.eq_ty(l, r))\n                     && both(&l.init, &r.init, |l, r| self.eq_expr(l, r))\n-            ,\n-            (&StmtKind::Expr(ref l), &StmtKind::Expr(ref r))\n-            | (&StmtKind::Semi(ref l), &StmtKind::Semi(ref r)) => self.eq_expr(l, r),\n+            },\n+            (&StmtKind::Expr(ref l), &StmtKind::Expr(ref r)) | (&StmtKind::Semi(ref l), &StmtKind::Semi(ref r)) => {\n+                self.eq_expr(l, r)\n+            },\n             _ => false,\n         }\n     }\n@@ -649,7 +650,7 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n             StmtKind::Item(..) => {\n                 let c: fn(_) -> _ = StmtKind::Item;\n                 c.hash(&mut self.s);\n-            }\n+            },\n             StmtKind::Expr(ref expr) => {\n                 let c: fn(_) -> _ = StmtKind::Expr;\n                 c.hash(&mut self.s);"}, {"sha": "4116f8ffbafab05968f2885ebfd9174084d92e77", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8747691bea639835e66c6cef0baf66063f0aae93/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=8747691bea639835e66c6cef0baf66063f0aae93", "patch": "@@ -130,7 +130,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     println!(\"init expression:\");\n                     print_expr(cx, e, 0);\n                 }\n-            }\n+            },\n             hir::StmtKind::Item(_) => println!(\"item decl\"),\n             hir::StmtKind::Expr(ref e) | hir::StmtKind::Semi(ref e) => print_expr(cx, e, 0),\n         }"}]}