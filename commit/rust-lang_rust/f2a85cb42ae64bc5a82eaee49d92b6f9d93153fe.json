{"sha": "f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYTg1Y2I0MmFlNjRiYzVhODJlYWVlNDlkOTJiNmY5ZDkzMTUzZmU=", "commit": {"author": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-03-08T13:52:03Z"}, "committer": {"name": "Yusuke Tanaka", "email": "yusuktan@maguro.dev", "date": "2021-03-08T13:52:03Z"}, "message": "Set 1.50 as msrv of if_then_some_else_none", "tree": {"sha": "38e947f002db38f644aba5c45a6d76a48a32a83a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38e947f002db38f644aba5c45a6d76a48a32a83a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJIBAABCAAyFiEEgbkHgdnD1idvtMJ0QJ1+7h56cWoFAmBGLAMUHHl1c3VrdGFu\nQG1hZ3Vyby5kZXYACgkQQJ1+7h56cWqdgRAAgH1v2YUaYOYKNdddnHQ0YGkfuECM\nMymyoxbEerRNiOJnf72sCgOqkg0p7moRHgQeFGWim3cq+zpI05KVkoajazrsR6+o\n92x6KXf4zuIu1GsdZ7lTbV3deDfbsCivpFW+ibe6GJ7tMS+GI5qdBiAExMeoRvBE\nWakdbEZJ3ujNkKN3X0xlGtDyxNrIjaqsTnRgqmnQzVrxlDfZs14dR+vE4vPwXiBX\nTaOuGnSts393waMkBDyzCxJf8Xq2FGlYRvsXkjj+8+lw7SSYDAJ+v7AEEOxz8Pl5\nn33UaggbPXZ3zwl/GLk0Sz9rrKWziXEr8Sotu2YG2WuxO+fkFAio4E3lVlSMguoQ\nYOe53E2Zb+MHCJkq24Sl/YprwTuHsOuxQjAe9mZ5VFpjbXFUPHXKW2klMIe2+LVU\ntLxpb+tpNBkXZgNCeoQ8p6WpowpabEDXihYm2UDBVEqAHWgWTCtjQTT+nnl8oC8y\n5N9luY4d4i46wpQN3/pZp3cUa5Nb+JefgB6iYSnohOr/0xZn+ldOobvEPp0XXuIm\nqGwCI90vKYq8mQyuOpOmMpfBmIzm64ZQwslbJToPVS/ew2YxGCSpf7hJZniJu4Oe\nyiWBDLZk0seVibJ5JM1yQu97znGQcc5Nh957FZWG6mki8fVOg+XTdfr71kxqQ7xF\nRXsFZw26lt7WAxk=\n=q1N6\n-----END PGP SIGNATURE-----", "payload": "tree 38e947f002db38f644aba5c45a6d76a48a32a83a\nparent a672d335a248034369cd41d4e08e02cf378c0e4b\nauthor Yusuke Tanaka <yusuktan@maguro.dev> 1615211523 +0900\ncommitter Yusuke Tanaka <yusuktan@maguro.dev> 1615211523 +0900\n\nSet 1.50 as msrv of if_then_some_else_none\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "html_url": "https://github.com/rust-lang/rust/commit/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/comments", "author": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "committer": {"login": "magurotuna", "id": 23649474, "node_id": "MDQ6VXNlcjIzNjQ5NDc0", "avatar_url": "https://avatars.githubusercontent.com/u/23649474?v=4", "gravatar_id": "", "url": "https://api.github.com/users/magurotuna", "html_url": "https://github.com/magurotuna", "followers_url": "https://api.github.com/users/magurotuna/followers", "following_url": "https://api.github.com/users/magurotuna/following{/other_user}", "gists_url": "https://api.github.com/users/magurotuna/gists{/gist_id}", "starred_url": "https://api.github.com/users/magurotuna/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/magurotuna/subscriptions", "organizations_url": "https://api.github.com/users/magurotuna/orgs", "repos_url": "https://api.github.com/users/magurotuna/repos", "events_url": "https://api.github.com/users/magurotuna/events{/privacy}", "received_events_url": "https://api.github.com/users/magurotuna/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a672d335a248034369cd41d4e08e02cf378c0e4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a672d335a248034369cd41d4e08e02cf378c0e4b", "html_url": "https://github.com/rust-lang/rust/commit/a672d335a248034369cd41d4e08e02cf378c0e4b"}], "stats": {"total": 64, "additions": 59, "deletions": 5}, "files": [{"sha": "aadadd0d934a573d25be4f2c6a79b533f76f5351", "filename": "clippy_lints/src/if_then_some_else_none.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_then_some_else_none.rs?ref=f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "patch": "@@ -4,7 +4,10 @@ use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_middle::lint::in_external_macro;\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_semver::RustcVersion;\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n+\n+const IF_THEN_SOME_ELSE_NONE_MSRV: RustcVersion = RustcVersion::new(1, 50, 0);\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for if-else that could be written to `bool::then`.\n@@ -39,10 +42,25 @@ declare_clippy_lint! {\n     \"Finds if-else that could be written using `bool::then`\"\n }\n \n-declare_lint_pass!(IfThenSomeElseNone => [IF_THEN_SOME_ELSE_NONE]);\n+pub struct IfThenSomeElseNone {\n+    msrv: Option<RustcVersion>,\n+}\n+\n+impl IfThenSomeElseNone {\n+    #[must_use]\n+    pub fn new(msrv: Option<RustcVersion>) -> Self {\n+        Self { msrv }\n+    }\n+}\n+\n+impl_lint_pass!(IfThenSomeElseNone => [IF_THEN_SOME_ELSE_NONE]);\n \n impl LateLintPass<'_> for IfThenSomeElseNone {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &'tcx Expr<'_>) {\n+        if !utils::meets_msrv(self.msrv.as_ref(), &IF_THEN_SOME_ELSE_NONE_MSRV) {\n+            return;\n+        }\n+\n         if in_external_macro(cx.sess(), expr.span) {\n             return;\n         }\n@@ -85,4 +103,6 @@ impl LateLintPass<'_> for IfThenSomeElseNone {\n             }\n         }\n     }\n+\n+    extract_msrv_attr!(LateContext);\n }"}, {"sha": "2e4c1e3bdf8e4d88ac84aca9462b3578255c5402", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "patch": "@@ -1284,7 +1284,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|| box redundant_slicing::RedundantSlicing);\n     store.register_late_pass(|| box from_str_radix_10::FromStrRadix10);\n     store.register_late_pass(|| box manual_map::ManualMap);\n-    store.register_late_pass(|| box if_then_some_else_none::IfThenSomeElseNone);\n+    store.register_late_pass(move || box if_then_some_else_none::IfThenSomeElseNone::new(msrv));\n \n     store.register_group(true, \"clippy::restriction\", Some(\"clippy_restriction\"), vec![\n         LintId::of(&arithmetic::FLOAT_ARITHMETIC),"}, {"sha": "337292fd9b3dbe77473bb3e867343c49ccdaa736", "filename": "tests/ui/if_then_some_else_none.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/tests%2Fui%2Fif_then_some_else_none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/tests%2Fui%2Fif_then_some_else_none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.rs?ref=f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::if_then_some_else_none)]\n+#![feature(custom_inner_attributes)]\n \n fn main() {\n     // Should issue an error.\n@@ -49,6 +50,27 @@ fn main() {\n     let _ = if foo() { into_some(\"foo\") } else { None };\n }\n \n+fn _msrv_1_49() {\n+    #![clippy::msrv = \"1.49\"]\n+    // `bool::then` was stabilized in 1.50. Do not lint this\n+    let _ = if foo() {\n+        println!(\"true!\");\n+        Some(\"foo\")\n+    } else {\n+        None\n+    };\n+}\n+\n+fn _msrv_1_50() {\n+    #![clippy::msrv = \"1.50\"]\n+    let _ = if foo() {\n+        println!(\"true!\");\n+        Some(\"foo\")\n+    } else {\n+        None\n+    };\n+}\n+\n fn foo() -> bool {\n     unimplemented!()\n }"}, {"sha": "19c96f900a30328baeff96a7992b50ffc2736542", "filename": "tests/ui/if_then_some_else_none.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/tests%2Fui%2Fif_then_some_else_none.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe/tests%2Fui%2Fif_then_some_else_none.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_then_some_else_none.stderr?ref=f2a85cb42ae64bc5a82eaee49d92b6f9d93153fe", "patch": "@@ -1,5 +1,5 @@\n error: this could be simplified with `bool::then`\n-  --> $DIR/if_then_some_else_none.rs:5:13\n+  --> $DIR/if_then_some_else_none.rs:6:13\n    |\n LL |       let _ = if foo() {\n    |  _____________^\n@@ -12,5 +12,17 @@ LL | |     };\n    |\n    = note: `-D clippy::if-then-some-else-none` implied by `-D warnings`\n \n-error: aborting due to previous error\n+error: this could be simplified with `bool::then`\n+  --> $DIR/if_then_some_else_none.rs:66:13\n+   |\n+LL |       let _ = if foo() {\n+   |  _____________^\n+LL | |         println!(\"true!\");\n+LL | |         Some(\"foo\")\n+LL | |     } else {\n+LL | |         None\n+LL | |     };\n+   | |_____^ help: try this: `foo().then(|| { /* snippet */ \"foo\" })`\n+\n+error: aborting due to 2 previous errors\n "}]}