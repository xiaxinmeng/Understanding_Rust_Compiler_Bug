{"sha": "8ec0b3a12a0e6afd391315554fee07292958fff8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlYzBiM2ExMmEwZTZhZmQzOTEzMTU1NTRmZWUwNzI5Mjk1OGZmZjg=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-10-31T00:16:21Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2016-10-31T00:16:21Z"}, "message": "Do not clone Mir unnecessarily", "tree": {"sha": "1d53112ba232d0f3d4e279c4dfb3510cb925d22b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d53112ba232d0f3d4e279c4dfb3510cb925d22b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8ec0b3a12a0e6afd391315554fee07292958fff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8ec0b3a12a0e6afd391315554fee07292958fff8", "html_url": "https://github.com/rust-lang/rust/commit/8ec0b3a12a0e6afd391315554fee07292958fff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8ec0b3a12a0e6afd391315554fee07292958fff8/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5a702dc785760c74960007af389caa47546fa58", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5a702dc785760c74960007af389caa47546fa58", "html_url": "https://github.com/rust-lang/rust/commit/f5a702dc785760c74960007af389caa47546fa58"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "f6ee5afaa123c3cae38f0d65b19754a5540d4052", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8ec0b3a12a0e6afd391315554fee07292958fff8/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec0b3a12a0e6afd391315554fee07292958fff8/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=8ec0b3a12a0e6afd391315554fee07292958fff8", "patch": "@@ -63,7 +63,8 @@ macro_rules! newtype_index {\n }\n \n /// Lowered representation of a single function.\n-#[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n+// Do not implement clone for Mir, its easy to do so accidently and its kind of expensive.\n+#[derive(RustcEncodable, RustcDecodable, Debug)]\n pub struct Mir<'tcx> {\n     /// List of basic blocks. References to basic block use a newtyped index type `BasicBlock`\n     /// that indexes into this vector."}, {"sha": "8bf27b4babfc2a054a2f0cbc7336548f4750efeb", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8ec0b3a12a0e6afd391315554fee07292958fff8/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8ec0b3a12a0e6afd391315554fee07292958fff8/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=8ec0b3a12a0e6afd391315554fee07292958fff8", "patch": "@@ -37,13 +37,14 @@ use super::analyze::CleanupKind;\n use super::constant::Const;\n use super::lvalue::{LvalueRef};\n use super::operand::OperandRef;\n-use super::operand::OperandValue::*;\n+use super::operand::OperandValue::{Pair, Ref, Immediate};\n+\n+use std::cell::Ref as CellRef;\n \n impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n     pub fn trans_block(&mut self, bb: mir::BasicBlock) {\n         let mut bcx = self.bcx(bb);\n-        let mir = self.mir.clone();\n-        let data = &mir[bb];\n+        let data = &CellRef::clone(&self.mir)[bb];\n \n         debug!(\"trans_block({:?}={:?})\", bb, data);\n \n@@ -228,7 +229,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             }\n \n             mir::TerminatorKind::Drop { ref location, target, unwind } => {\n-                let ty = location.ty(&mir, bcx.tcx()).to_ty(bcx.tcx());\n+                let ty = location.ty(&self.mir, bcx.tcx()).to_ty(bcx.tcx());\n                 let ty = bcx.monomorphize(&ty);\n \n                 // Double check for necessity to drop"}]}