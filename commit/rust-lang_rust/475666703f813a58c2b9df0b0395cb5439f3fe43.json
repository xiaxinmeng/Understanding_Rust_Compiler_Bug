{"sha": "475666703f813a58c2b9df0b0395cb5439f3fe43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3NTY2NjcwM2Y4MTNhNThjMmI5ZGYwYjAzOTVjYjU0MzlmM2ZlNDM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-07T08:32:06Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-05-07T08:32:06Z"}, "message": "Auto merge of #7182 - mgacek8:wrong_self_convention_to__variant, r=flip1995\n\nFor `to_*` variant don't lint in trait impl taking `self` when non-`Copy` type\n\nLint name: `wrong_self_convention`.\nIt relaxes rules for `to_*` variant, so it doesn't lint in trait definitions and implementations anymore.\nAlthough, non-`Copy` type implementing trait's `to_*` method taking\n`self` feels not good (consumes ownership, so should be rather named `into_`), it would be better if this case was a pedantic lint (allow-by-default) instead.\nMore information in the discussion with `@flip1995` [here](https://github.com/rust-lang/rust-clippy/pull/7002#discussion_r627363450)\n\nchangelog: `wrong_self_convention`: For `to_*` variant don't lint in trait impl taking `self` when non-`Copy` type\nr? `@flip1995`", "tree": {"sha": "96900c833218a5888667efe7d1524c101cce2cf6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/96900c833218a5888667efe7d1524c101cce2cf6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/475666703f813a58c2b9df0b0395cb5439f3fe43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/475666703f813a58c2b9df0b0395cb5439f3fe43", "html_url": "https://github.com/rust-lang/rust/commit/475666703f813a58c2b9df0b0395cb5439f3fe43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/475666703f813a58c2b9df0b0395cb5439f3fe43/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e582c3a70463288797a8fba14c94c92fa2ff359", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e582c3a70463288797a8fba14c94c92fa2ff359", "html_url": "https://github.com/rust-lang/rust/commit/1e582c3a70463288797a8fba14c94c92fa2ff359"}, {"sha": "ab3094b3dbf0bf6423a9cf0509a170eee89f106e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab3094b3dbf0bf6423a9cf0509a170eee89f106e", "html_url": "https://github.com/rust-lang/rust/commit/ab3094b3dbf0bf6423a9cf0509a170eee89f106e"}], "stats": {"total": 15, "additions": 2, "deletions": 13}, "files": [{"sha": "1773c26c251fe6ad94855d624c7686de3090578a", "filename": "clippy_lints/src/methods/wrong_self_convention.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/475666703f813a58c2b9df0b0395cb5439f3fe43/clippy_lints%2Fsrc%2Fmethods%2Fwrong_self_convention.rs", "raw_url": "https://github.com/rust-lang/rust/raw/475666703f813a58c2b9df0b0395cb5439f3fe43/clippy_lints%2Fsrc%2Fmethods%2Fwrong_self_convention.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fwrong_self_convention.rs?ref=475666703f813a58c2b9df0b0395cb5439f3fe43", "patch": "@@ -22,7 +22,7 @@ const CONVENTIONS: [(&[Convention], &[SelfKind]); 9] = [\n     // Conversion using `to_` can use borrowed (non-Copy types) or owned (Copy types).\n     // Source: https://rust-lang.github.io/api-guidelines/naming.html#ad-hoc-conversions-follow-as_-to_-into_-conventions-c-conv\n     (&[Convention::StartsWith(\"to_\"), Convention::NotEndsWith(\"_mut\"), Convention::IsSelfTypeCopy(false), \n-    Convention::IsTraitItem(false)], &[SelfKind::Ref]),\n+    Convention::IsTraitItem(false), Convention::ImplementsTrait(false)], &[SelfKind::Ref]),\n     (&[Convention::StartsWith(\"to_\"), Convention::NotEndsWith(\"_mut\"), Convention::IsSelfTypeCopy(true), \n     Convention::IsTraitItem(false), Convention::ImplementsTrait(false)], &[SelfKind::Value]),\n ];"}, {"sha": "18202ef29896e3290eed24fbd2ce87e669e4c9c8", "filename": "tests/ui/wrong_self_convention2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/475666703f813a58c2b9df0b0395cb5439f3fe43/tests%2Fui%2Fwrong_self_convention2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/475666703f813a58c2b9df0b0395cb5439f3fe43/tests%2Fui%2Fwrong_self_convention2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention2.rs?ref=475666703f813a58c2b9df0b0395cb5439f3fe43", "patch": "@@ -23,7 +23,7 @@ mod issue6983 {\n     }\n \n     struct FooNoCopy;\n-    // trigger lint\n+    // don't trigger\n     impl ToU64 for FooNoCopy {\n         fn to_u64(self) -> u64 {\n             2"}, {"sha": "0ca1a390974a0ca63c7644880fd59c09ea26f68a", "filename": "tests/ui/wrong_self_convention2.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1e582c3a70463288797a8fba14c94c92fa2ff359/tests%2Fui%2Fwrong_self_convention2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/1e582c3a70463288797a8fba14c94c92fa2ff359/tests%2Fui%2Fwrong_self_convention2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwrong_self_convention2.stderr?ref=1e582c3a70463288797a8fba14c94c92fa2ff359", "patch": "@@ -1,11 +0,0 @@\n-error: methods with the following characteristics: (`to_*` and `self` type is not `Copy`) usually take `self` by reference\n-  --> $DIR/wrong_self_convention2.rs:28:19\n-   |\n-LL |         fn to_u64(self) -> u64 {\n-   |                   ^^^^\n-   |\n-   = note: `-D clippy::wrong-self-convention` implied by `-D warnings`\n-   = help: consider choosing a less ambiguous name\n-\n-error: aborting due to previous error\n-"}]}