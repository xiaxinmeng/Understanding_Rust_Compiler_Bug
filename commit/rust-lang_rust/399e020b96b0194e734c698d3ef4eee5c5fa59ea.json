{"sha": "399e020b96b0194e734c698d3ef4eee5c5fa59ea", "node_id": "C_kwDOAAsO6NoAKDM5OWUwMjBiOTZiMDE5NGU3MzRjNjk4ZDNlZjRlZWU1YzVmYTU5ZWE", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-07-20T13:40:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T21:12:08Z"}, "message": "Move vtable_size and vtable_align impls to cg_ssa", "tree": {"sha": "468da240c771aba05a882e38c9415c898000d763", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/468da240c771aba05a882e38c9415c898000d763"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/399e020b96b0194e734c698d3ef4eee5c5fa59ea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/399e020b96b0194e734c698d3ef4eee5c5fa59ea", "html_url": "https://github.com/rust-lang/rust/commit/399e020b96b0194e734c698d3ef4eee5c5fa59ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/399e020b96b0194e734c698d3ef4eee5c5fa59ea/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1afea1f86a098a61e3044520bbd6725b547397ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1afea1f86a098a61e3044520bbd6725b547397ae", "html_url": "https://github.com/rust-lang/rust/commit/1afea1f86a098a61e3044520bbd6725b547397ae"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "9f3647492877ccd3eda40354ac6c15e0da5b883a", "filename": "compiler/rustc_codegen_llvm/src/intrinsic.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/399e020b96b0194e734c698d3ef4eee5c5fa59ea/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399e020b96b0194e734c698d3ef4eee5c5fa59ea/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs?ref=399e020b96b0194e734c698d3ef4eee5c5fa59ea", "patch": "@@ -10,7 +10,6 @@ use crate::value::Value;\n use rustc_codegen_ssa::base::{compare_simd_types, wants_msvc_seh};\n use rustc_codegen_ssa::common::span_invalid_monomorphization_error;\n use rustc_codegen_ssa::common::{IntPredicate, TypeKind};\n-use rustc_codegen_ssa::meth;\n use rustc_codegen_ssa::mir::operand::OperandRef;\n use rustc_codegen_ssa::mir::place::PlaceRef;\n use rustc_codegen_ssa::traits::*;\n@@ -364,16 +363,6 @@ impl<'ll, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'_, 'll, 'tcx> {\n                 return;\n             }\n \n-            sym::vtable_size | sym::vtable_align => {\n-                let vtable = args[0].immediate();\n-                let idx = match name {\n-                    sym::vtable_size => ty::COMMON_VTABLE_ENTRIES_SIZE,\n-                    sym::vtable_align => ty::COMMON_VTABLE_ENTRIES_ALIGN,\n-                    _ => bug!(),\n-                };\n-                meth::VirtualIndex::from_index(idx).get_usize(self, vtable)\n-            }\n-\n             _ if name.as_str().starts_with(\"simd_\") => {\n                 match generic_simd_intrinsic(self, name, callee_ty, args, ret_ty, llret_ty, span) {\n                     Ok(llval) => llval,"}, {"sha": "1fffa3beaaa85174dc5b0745e901b7e310da35f6", "filename": "compiler/rustc_codegen_ssa/src/mir/intrinsic.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/399e020b96b0194e734c698d3ef4eee5c5fa59ea/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/399e020b96b0194e734c698d3ef4eee5c5fa59ea/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs?ref=399e020b96b0194e734c698d3ef4eee5c5fa59ea", "patch": "@@ -3,6 +3,7 @@ use super::place::PlaceRef;\n use super::FunctionCx;\n use crate::common::{span_invalid_monomorphization_error, IntPredicate};\n use crate::glue;\n+use crate::meth;\n use crate::traits::*;\n use crate::MemFlags;\n \n@@ -102,6 +103,15 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                     bx.const_usize(bx.layout_of(tp_ty).align.abi.bytes())\n                 }\n             }\n+            sym::vtable_size | sym::vtable_align => {\n+                let vtable = args[0].immediate();\n+                let idx = match name {\n+                    sym::vtable_size => ty::COMMON_VTABLE_ENTRIES_SIZE,\n+                    sym::vtable_align => ty::COMMON_VTABLE_ENTRIES_ALIGN,\n+                    _ => bug!(),\n+                };\n+                meth::VirtualIndex::from_index(idx).get_usize(bx, vtable)\n+            }\n             sym::pref_align_of\n             | sym::needs_drop\n             | sym::type_id"}]}