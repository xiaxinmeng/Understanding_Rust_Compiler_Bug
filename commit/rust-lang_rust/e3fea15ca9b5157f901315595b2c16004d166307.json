{"sha": "e3fea15ca9b5157f901315595b2c16004d166307", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzZmVhMTVjYTliNTE1N2Y5MDEzMTU1OTViMmMxNjAwNGQxNjYzMDc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2018-07-25T09:21:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-25T09:21:30Z"}, "message": "Merge pull request #2834 from topecongiro/issue-2830\n\nKeep the context that we are inside macro in nested macro", "tree": {"sha": "211460a375a6ce310cedd48afb355815093ba25b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/211460a375a6ce310cedd48afb355815093ba25b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3fea15ca9b5157f901315595b2c16004d166307", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbWEEbCRBK7hj4Ov3rIwAAdHIIAI2sLBZoynMSByT4OwochqnU\nGkqtyR4pGgjn4iZbJQ1hNvZVx3XaGdi3xjdhQ/Z0Lz5v8eFcFiiPWF8Avod0po9M\nFU5Wc7EhAwT6ATdBeQ8uwFbafjet77M/Qo/XCyJ0JGIHKws2z5/E62YoXpJPKeQ4\neQBBtUEDXJKnw7Z/VrQgvXKd2aWAjuLvrvgfeqRkQJ7DnXcl34tmzPm9ATJG/sdt\n+tW9dYrIeG6TKeHWp6FakaUShQn5YchsGyKoY+0oiOUB2Orknvq0vQ266zpqtofh\n+OyMWZct8kXqkGJHWVB04RzIltciiss2tNMJCpZaPKKljnYQcpTiBxRwXJKsc80=\n=7vxO\n-----END PGP SIGNATURE-----\n", "payload": "tree 211460a375a6ce310cedd48afb355815093ba25b\nparent 2f03180040b0a3c0a0e5dcd75670a9323f5f312d\nparent 339fa20973c8dabe35a8c2ce65b2e1ee47e7d478\nauthor Nick Cameron <nrc@ncameron.org> 1532510490 +1200\ncommitter GitHub <noreply@github.com> 1532510490 +1200\n\nMerge pull request #2834 from topecongiro/issue-2830\n\nKeep the context that we are inside macro in nested macro"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3fea15ca9b5157f901315595b2c16004d166307", "html_url": "https://github.com/rust-lang/rust/commit/e3fea15ca9b5157f901315595b2c16004d166307", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3fea15ca9b5157f901315595b2c16004d166307/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f03180040b0a3c0a0e5dcd75670a9323f5f312d", "html_url": "https://github.com/rust-lang/rust/commit/2f03180040b0a3c0a0e5dcd75670a9323f5f312d"}, {"sha": "339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "url": "https://api.github.com/repos/rust-lang/rust/commits/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478", "html_url": "https://github.com/rust-lang/rust/commit/339fa20973c8dabe35a8c2ce65b2e1ee47e7d478"}], "stats": {"total": 94, "additions": 89, "deletions": 5}, "files": [{"sha": "f00bb339cb09359d45705e4f49d4180632405d7c", "filename": "src/macros.rs", "status": "modified", "additions": 23, "deletions": 5, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e3fea15ca9b5157f901315595b2c16004d166307/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fea15ca9b5157f901315595b2c16004d166307/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=e3fea15ca9b5157f901315595b2c16004d166307", "patch": "@@ -142,19 +142,36 @@ fn return_original_snippet_with_failure_marked(\n     Some(context.snippet(span).to_owned())\n }\n \n+struct InsideMacroGuard<'a> {\n+    context: &'a RewriteContext<'a>,\n+    is_nested: bool,\n+}\n+\n+impl<'a> InsideMacroGuard<'a> {\n+    fn inside_macro_context(context: &'a RewriteContext) -> InsideMacroGuard<'a> {\n+        let is_nested = context.inside_macro.replace(true);\n+        InsideMacroGuard { context, is_nested }\n+    }\n+}\n+\n+impl<'a> Drop for InsideMacroGuard<'a> {\n+    fn drop(&mut self) {\n+        self.context.inside_macro.replace(self.is_nested);\n+    }\n+}\n+\n pub fn rewrite_macro(\n     mac: &ast::Mac,\n     extra_ident: Option<ast::Ident>,\n     context: &RewriteContext,\n     shape: Shape,\n     position: MacroPosition,\n ) -> Option<String> {\n-    context.inside_macro.replace(true);\n-    let result = rewrite_macro_inner(mac, extra_ident, context, shape, position);\n+    let guard = InsideMacroGuard::inside_macro_context(context);\n+    let result = rewrite_macro_inner(mac, extra_ident, context, shape, position, guard.is_nested);\n     if result.is_none() {\n         context.macro_rewrite_failure.replace(true);\n     }\n-    context.inside_macro.replace(false);\n     result\n }\n \n@@ -164,6 +181,7 @@ pub fn rewrite_macro_inner(\n     context: &RewriteContext,\n     shape: Shape,\n     position: MacroPosition,\n+    is_nested_macro: bool,\n ) -> Option<String> {\n     if context.config.use_try_shorthand() {\n         if let Some(expr) = convert_try_mac(mac, context) {\n@@ -176,7 +194,7 @@ pub fn rewrite_macro_inner(\n \n     let macro_name = rewrite_macro_name(context, &mac.node.path, extra_ident);\n \n-    let style = if FORCED_BRACKET_MACROS.contains(&&macro_name[..]) {\n+    let style = if FORCED_BRACKET_MACROS.contains(&&macro_name[..]) && !is_nested_macro {\n         DelimToken::Bracket\n     } else {\n         original_style\n@@ -309,7 +327,7 @@ pub fn rewrite_macro_inner(\n                 } else {\n                     Some(SeparatorTactic::Never)\n                 };\n-                if FORCED_BRACKET_MACROS.contains(macro_name) {\n+                if FORCED_BRACKET_MACROS.contains(macro_name) && !is_nested_macro {\n                     context.inside_macro.replace(false);\n                     if context.use_block_indent() {\n                         force_trailing_comma = Some(SeparatorTactic::Vertical);"}, {"sha": "09affb8a33fe12b1353237b6fe6bf259a039005c", "filename": "tests/source/macros.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e3fea15ca9b5157f901315595b2c16004d166307/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fea15ca9b5157f901315595b2c16004d166307/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=e3fea15ca9b5157f901315595b2c16004d166307", "patch": "@@ -393,3 +393,36 @@ macro_rules! bar {\n         $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n     };\n }\n+\n+// #2830\n+// Preserve trailing comma-less/ness inside nested macro.\n+named!(\n+    do_parse_gsv<GsvData>,\n+    map_res!(\n+        do_parse!(\n+            number_of_sentences: map_res!(digit, parse_num::<u16>)\n+                >> char!(',')\n+                >> sentence_index: map_res!(digit, parse_num::<u16>)\n+                >> char!(',')\n+                >> total_number_of_sats: map_res!(digit, parse_num::<u16>)\n+                >> char!(',')\n+                >> sat0: opt!(complete!(parse_gsv_sat_info))\n+                >> sat1: opt!(complete!(parse_gsv_sat_info))\n+                >> sat2: opt!(complete!(parse_gsv_sat_info))\n+                >> sat3: opt!(complete!(parse_gsv_sat_info))\n+                >> (\n+                    number_of_sentences,\n+                    sentence_index,\n+                    total_number_of_sats,\n+                    sat0,\n+                    sat1,\n+                    sat2,\n+                    sat3\n+                )\n+        ),\n+        construct_gsv_data\n+    )\n+);\n+\n+// #2857\n+convert_args!(vec!(1, 2, 3));"}, {"sha": "26ccdd9a1b522d45409e43638fcf03dff03902b3", "filename": "tests/target/macros.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e3fea15ca9b5157f901315595b2c16004d166307/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3fea15ca9b5157f901315595b2c16004d166307/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=e3fea15ca9b5157f901315595b2c16004d166307", "patch": "@@ -972,3 +972,36 @@ macro_rules! bar {\n         $m!([a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x, y, z]);\n     };\n }\n+\n+// #2830\n+// Preserve trailing comma-less/ness inside nested macro.\n+named!(\n+    do_parse_gsv<GsvData>,\n+    map_res!(\n+        do_parse!(\n+            number_of_sentences: map_res!(digit, parse_num::<u16>)\n+                >> char!(',')\n+                >> sentence_index: map_res!(digit, parse_num::<u16>)\n+                >> char!(',')\n+                >> total_number_of_sats: map_res!(digit, parse_num::<u16>)\n+                >> char!(',')\n+                >> sat0: opt!(complete!(parse_gsv_sat_info))\n+                >> sat1: opt!(complete!(parse_gsv_sat_info))\n+                >> sat2: opt!(complete!(parse_gsv_sat_info))\n+                >> sat3: opt!(complete!(parse_gsv_sat_info))\n+                >> (\n+                    number_of_sentences,\n+                    sentence_index,\n+                    total_number_of_sats,\n+                    sat0,\n+                    sat1,\n+                    sat2,\n+                    sat3\n+                )\n+        ),\n+        construct_gsv_data\n+    )\n+);\n+\n+// #2857\n+convert_args!(vec!(1, 2, 3));"}]}