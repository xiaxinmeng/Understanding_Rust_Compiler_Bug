{"sha": "a2ee1420b8f9e853becbbf1819d445eb83ef4e61", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZWUxNDIwYjhmOWU4NTNiZWNiYmYxODE5ZDQ0NWViODNlZjRlNjE=", "commit": {"author": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-09-08T11:24:23Z"}, "committer": {"name": "Andreas Liljeqvist", "email": "bonega@gmail.com", "date": "2021-09-09T08:41:20Z"}, "message": "Wrap", "tree": {"sha": "c679bc20764c0c33dac7158fd8e8142c9a2f4f68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c679bc20764c0c33dac7158fd8e8142c9a2f4f68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2ee1420b8f9e853becbbf1819d445eb83ef4e61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2ee1420b8f9e853becbbf1819d445eb83ef4e61", "html_url": "https://github.com/rust-lang/rust/commit/a2ee1420b8f9e853becbbf1819d445eb83ef4e61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2ee1420b8f9e853becbbf1819d445eb83ef4e61/comments", "author": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bonega", "id": 411677, "node_id": "MDQ6VXNlcjQxMTY3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/411677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bonega", "html_url": "https://github.com/bonega", "followers_url": "https://api.github.com/users/bonega/followers", "following_url": "https://api.github.com/users/bonega/following{/other_user}", "gists_url": "https://api.github.com/users/bonega/gists{/gist_id}", "starred_url": "https://api.github.com/users/bonega/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bonega/subscriptions", "organizations_url": "https://api.github.com/users/bonega/orgs", "repos_url": "https://api.github.com/users/bonega/repos", "events_url": "https://api.github.com/users/bonega/events{/privacy}", "received_events_url": "https://api.github.com/users/bonega/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9095cf9905b7f89a69c11e0b058d76821fc62db1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9095cf9905b7f89a69c11e0b058d76821fc62db1", "html_url": "https://github.com/rust-lang/rust/commit/9095cf9905b7f89a69c11e0b058d76821fc62db1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "30e1914e2b05faafd3a50ce7c9cce592c61de6e3", "filename": "compiler/rustc_target/src/abi/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2ee1420b8f9e853becbbf1819d445eb83ef4e61/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2ee1420b8f9e853becbbf1819d445eb83ef4e61/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fmod.rs?ref=a2ee1420b8f9e853becbbf1819d445eb83ef4e61", "patch": "@@ -792,7 +792,7 @@ impl WrappingRange {\n     pub fn is_full_for(&self, size: Size) -> bool {\n         let max_value = size.unsigned_int_max();\n         debug_assert!(self.start <= max_value && self.end <= max_value);\n-        (self.start == 0 && self.end == max_value) || (self.end + 1 == self.start)\n+        (self.start == 0 && self.end == max_value) || (self.end.wrapping_add(1) == self.start)\n     }\n }\n "}]}