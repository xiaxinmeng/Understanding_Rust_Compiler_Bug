{"sha": "9c6d8ef80c3525a10d2d51a7db2c93495857cfac", "node_id": "C_kwDOAAsO6NoAKDljNmQ4ZWY4MGMzNTI1YTEwZDJkNTFhN2RiMmM5MzQ5NTg1N2NmYWM", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-15T01:11:05Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2022-01-15T18:37:40Z"}, "message": "htmldocck: Add support for `/text()` in `@snapshot`\n\nThis allows just testing the text, in cases where the HTML tags don't\nmatter.", "tree": {"sha": "62323f743fb455c40c51787f1679e1e2f9c67a9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62323f743fb455c40c51787f1679e1e2f9c67a9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c6d8ef80c3525a10d2d51a7db2c93495857cfac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c6d8ef80c3525a10d2d51a7db2c93495857cfac", "html_url": "https://github.com/rust-lang/rust/commit/9c6d8ef80c3525a10d2d51a7db2c93495857cfac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c6d8ef80c3525a10d2d51a7db2c93495857cfac/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "124555a69e5f65173ec7840000eb8e953d046740", "url": "https://api.github.com/repos/rust-lang/rust/commits/124555a69e5f65173ec7840000eb8e953d046740", "html_url": "https://github.com/rust-lang/rust/commit/124555a69e5f65173ec7840000eb8e953d046740"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "6bb235b2c8347cddbd461e9d6316b92b8dfb7291", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9c6d8ef80c3525a10d2d51a7db2c93495857cfac/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/9c6d8ef80c3525a10d2d51a7db2c93495857cfac/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=9c6d8ef80c3525a10d2d51a7db2c93495857cfac", "patch": "@@ -401,7 +401,7 @@ def get_tree_count(tree, path):\n     return len(tree.findall(path))\n \n \n-def check_snapshot(snapshot_name, tree):\n+def check_snapshot(snapshot_name, tree, normalize_to_text):\n     assert rust_test_path.endswith('.rs')\n     snapshot_path = '{}.{}.{}'.format(rust_test_path[:-3], snapshot_name, 'html')\n     try:\n@@ -413,7 +413,10 @@ def check_snapshot(snapshot_name, tree):\n         else:\n             raise FailedCheck('No saved snapshot value')\n \n-    actual_str = ET.tostring(tree).decode('utf-8')\n+    if not normalize_to_text:\n+        actual_str = ET.tostring(tree).decode('utf-8')\n+    else:\n+        actual_str = flatten(tree)\n \n     if expected_str != actual_str:\n         if bless:\n@@ -494,11 +497,16 @@ def check_command(c, cache):\n                 [snapshot_name, html_path, pattern] = c.args\n                 tree = cache.get_tree(html_path)\n                 xpath = normalize_xpath(pattern)\n+                normalize_to_text = False\n+                if xpath.endswith('/text()'):\n+                    xpath = xpath[:-7]\n+                    normalize_to_text = True\n+\n                 subtrees = tree.findall(xpath)\n                 if len(subtrees) == 1:\n                     [subtree] = subtrees\n                     try:\n-                        check_snapshot(snapshot_name, subtree)\n+                        check_snapshot(snapshot_name, subtree, normalize_to_text)\n                         ret = True\n                     except FailedCheck as err:\n                         cerr = str(err)"}]}