{"sha": "7085b3edd96d5c3244422449edb2b5144b7d50f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwODViM2VkZDk2ZDVjMzI0NDQyMjQ0OWVkYjJiNTE0NGI3ZDUwZjk=", "commit": {"author": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-09-02T08:56:54Z"}, "committer": {"name": "Vadim Chugunov", "email": "vadimcn@gmail.com", "date": "2014-09-11T16:40:21Z"}, "message": "Package rustc's mingw dependencies into Windows installer.\ngcc, ld, ar, dlltool, windres go into $(RUST)/bin/rustlib/<triple>/bin/\nplatform libraries and startup objects got into $(RUST)/bin/rustlib/<triple>/lib/", "tree": {"sha": "334fffabe3ebdf620a66afaee00323b6222b3a51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/334fffabe3ebdf620a66afaee00323b6222b3a51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7085b3edd96d5c3244422449edb2b5144b7d50f9", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7085b3edd96d5c3244422449edb2b5144b7d50f9", "html_url": "https://github.com/rust-lang/rust/commit/7085b3edd96d5c3244422449edb2b5144b7d50f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7085b3edd96d5c3244422449edb2b5144b7d50f9/comments", "author": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vadimcn", "id": 3203809, "node_id": "MDQ6VXNlcjMyMDM4MDk=", "avatar_url": "https://avatars.githubusercontent.com/u/3203809?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vadimcn", "html_url": "https://github.com/vadimcn", "followers_url": "https://api.github.com/users/vadimcn/followers", "following_url": "https://api.github.com/users/vadimcn/following{/other_user}", "gists_url": "https://api.github.com/users/vadimcn/gists{/gist_id}", "starred_url": "https://api.github.com/users/vadimcn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vadimcn/subscriptions", "organizations_url": "https://api.github.com/users/vadimcn/orgs", "repos_url": "https://api.github.com/users/vadimcn/repos", "events_url": "https://api.github.com/users/vadimcn/events{/privacy}", "received_events_url": "https://api.github.com/users/vadimcn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ac9e9b561e361718abc5df10af216e52fc4fc3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ac9e9b561e361718abc5df10af216e52fc4fc3e", "html_url": "https://github.com/rust-lang/rust/commit/0ac9e9b561e361718abc5df10af216e52fc4fc3e"}], "stats": {"total": 114, "additions": 86, "deletions": 28}, "files": [{"sha": "26169f3a13bd0f4c6884ddaf05feb8495d2d8072", "filename": "mk/dist.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7085b3edd96d5c3244422449edb2b5144b7d50f9/mk%2Fdist.mk", "raw_url": "https://github.com/rust-lang/rust/raw/7085b3edd96d5c3244422449edb2b5144b7d50f9/mk%2Fdist.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdist.mk?ref=7085b3edd96d5c3244422449edb2b5144b7d50f9", "patch": "@@ -123,7 +123,7 @@ PKG_EXE = dist/$(PKG_NAME)-$(CFG_BUILD).exe\n $(PKG_EXE): rust.iss modpath.iss upgrade.iss LICENSE.txt rust-logo.ico \\\n             $(CSREQ3_T_$(CFG_BUILD)_H_$(CFG_BUILD)) \\\n             dist-prepare-win\n-\t$(CFG_PYTHON) $(S)src/etc/copy-runtime-deps.py tmp/dist/win/bin $(CFG_BUILD)\n+\t$(CFG_PYTHON) $(S)src/etc/make-win-dist.py tmp/dist/win $(CFG_BUILD)\n \t@$(call E, ISCC: $@)\n \t$(Q)\"$(CFG_ISCC)\" $<\n "}, {"sha": "fd829cd0ab70f93227099db1396e8c8975a8a935", "filename": "src/etc/copy-runtime-deps.py", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0ac9e9b561e361718abc5df10af216e52fc4fc3e/src%2Fetc%2Fcopy-runtime-deps.py", "raw_url": "https://github.com/rust-lang/rust/raw/0ac9e9b561e361718abc5df10af216e52fc4fc3e/src%2Fetc%2Fcopy-runtime-deps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fcopy-runtime-deps.py?ref=0ac9e9b561e361718abc5df10af216e52fc4fc3e", "patch": "@@ -1,24 +0,0 @@\n-# Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-# Copies Rust runtime dependencies to the specified directory.\n-\n-import snapshot, sys, os, shutil\n-\n-def copy_runtime_deps(dest_dir, triple):\n-    for path in snapshot.get_winnt_runtime_deps(snapshot.get_platform(triple)):\n-        shutil.copy(path, dest_dir)\n-\n-    lic_dest = os.path.join(dest_dir, \"third-party\")\n-    if os.path.exists(lic_dest):\n-        shutil.rmtree(lic_dest) # copytree() won't overwrite existing files\n-    shutil.copytree(os.path.join(os.path.dirname(__file__), \"third-party\"), lic_dest)\n-\n-copy_runtime_deps(sys.argv[1], sys.argv[2])"}, {"sha": "bb9a112b7b28a3bba3233b15aa13fa02603ca5f2", "filename": "src/etc/make-win-dist.py", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/7085b3edd96d5c3244422449edb2b5144b7d50f9/src%2Fetc%2Fmake-win-dist.py", "raw_url": "https://github.com/rust-lang/rust/raw/7085b3edd96d5c3244422449edb2b5144b7d50f9/src%2Fetc%2Fmake-win-dist.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fmake-win-dist.py?ref=7085b3edd96d5c3244422449edb2b5144b7d50f9", "patch": "@@ -0,0 +1,82 @@\n+# Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+import sys, os, shutil, subprocess\n+\n+def find_files(files, path):\n+    found = []\n+    for fname in files:\n+        for dir in path:\n+            filepath = os.path.normpath(os.path.join(dir, fname))\n+            if os.path.isfile(filepath):\n+                found.append(filepath)\n+                break\n+        else:\n+            raise Exception(\"Could not find '%s' in %s\" % (fname, path))\n+    return found\n+\n+def make_win_dist(dist_root, target_triple):\n+    # Ask gcc where it keeps its' stuff\n+    gcc_out = subprocess.check_output([\"gcc.exe\", \"-print-search-dirs\"])\n+    bin_path = os.environ[\"PATH\"].split(os.pathsep)\n+    lib_path = []\n+    for line in gcc_out.splitlines():\n+        key, val = line.split(':', 1)\n+        if key == \"programs\":\n+            bin_path.extend(val.lstrip(' =').split(';'))\n+        elif key == \"libraries\":\n+            lib_path.extend(val.lstrip(' =').split(';'))\n+\n+    target_tools = [\"gcc.exe\", \"ld.exe\", \"ar.exe\", \"dlltool.exe\", \"windres.exe\"]\n+\n+    rustc_dlls = [\"libstdc++-6.dll\"]\n+    if target_triple.startswith(\"i686-\"):\n+        rustc_dlls.append(\"libgcc_s_dw2-1.dll\")\n+    else:\n+        rustc_dlls.append(\"libgcc_s_seh-1.dll\")\n+\n+    target_libs = [\"crtbegin.o\", \"crtend.o\", \"crt2.o\", \"dllcrt2.o\",\n+                   \"libadvapi32.a\", \"libcrypt32.a\", \"libgcc.a\", \"libgcc_eh.a\", \"libgcc_s.a\",\n+                   \"libimagehlp.a\", \"libiphlpapi.a\", \"libkernel32.a\", \"libm.a\", \"libmingw32.a\",\n+                   \"libmingwex.a\", \"libmsvcrt.a\", \"libpsapi.a\", \"libshell32.a\", \"libstdc++.a\",\n+                   \"libuser32.a\", \"libws2_32.a\", \"libiconv.a\", \"libmoldname.a\"]\n+\n+    # Find mingw artifacts we want to bundle\n+    target_tools = find_files(target_tools, bin_path)\n+    rustc_dlls = find_files(rustc_dlls, bin_path)\n+    target_libs = find_files(target_libs, lib_path)\n+\n+    # Copy runtime dlls next to rustc.exe\n+    dist_bin_dir = os.path.join(dist_root, \"bin\")\n+    for src in rustc_dlls:\n+        shutil.copy(src, dist_bin_dir)\n+\n+    # Copy platform tools (and another copy of runtime dlls) to platform-spcific bin directory\n+    target_bin_dir = os.path.join(dist_root, \"bin\", \"rustlib\", target_triple, \"bin\")\n+    if not os.path.exists(target_bin_dir):\n+        os.makedirs(target_bin_dir)\n+    for src in target_tools:\n+        shutil.copy(src, target_bin_dir)\n+\n+    # Copy platform libs to platform-spcific lib directory\n+    target_lib_dir = os.path.join(dist_root, \"bin\", \"rustlib\", target_triple, \"lib\")\n+    if not os.path.exists(target_lib_dir):\n+        os.makedirs(target_lib_dir)\n+    for src in target_libs:\n+        shutil.copy(src, target_lib_dir)\n+\n+    # Copy license files\n+    lic_dir = os.path.join(dist_root, \"bin\", \"third-party\")\n+    if os.path.exists(lic_dir):\n+        shutil.rmtree(lic_dir) # copytree() won't overwrite existing files\n+    shutil.copytree(os.path.join(os.path.dirname(__file__), \"third-party\"), lic_dir)\n+\n+if __name__==\"__main__\":\n+    make_win_dist(sys.argv[1], sys.argv[2])"}, {"sha": "268b82bdca38e5d7a7cab24b37b4cb65ff0ed666", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7085b3edd96d5c3244422449edb2b5144b7d50f9/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/7085b3edd96d5c3244422449edb2b5144b7d50f9/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=7085b3edd96d5c3244422449edb2b5144b7d50f9", "patch": "@@ -157,9 +157,9 @@ def get_winnt_runtime_deps(platform):\n     path_dirs = os.environ[\"PATH\"].split(os.pathsep)\n     for name in deps:\n       for dir in path_dirs:\n-        matches = glob.glob(os.path.join(dir, name))\n-        if matches:\n-          runtime_deps.append(matches[0])\n+        filepath = os.path.join(dir, name)\n+        if os.path.isfile(filepath):\n+          runtime_deps.append(filepath)\n           break\n       else:\n         raise Exception(\"Could not find runtime dependency: %s\" % name)"}]}