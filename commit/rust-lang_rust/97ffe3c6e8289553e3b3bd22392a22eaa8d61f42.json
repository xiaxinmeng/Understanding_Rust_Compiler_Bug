{"sha": "97ffe3c6e8289553e3b3bd22392a22eaa8d61f42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZmZlM2M2ZTgyODk1NTNlM2IzYmQyMjM5MmEyMmVhYThkNjFmNDI=", "commit": {"author": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-05-22T20:47:25Z"}, "committer": {"name": "Mikhail Rakhmanov", "email": "rakhmanov.m@gmail.com", "date": "2020-05-22T20:47:25Z"}, "message": "Refactor AssistDirector", "tree": {"sha": "176c2a294854aac7eada4c4099e5ba5f5e2e2f51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/176c2a294854aac7eada4c4099e5ba5f5e2e2f51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97ffe3c6e8289553e3b3bd22392a22eaa8d61f42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97ffe3c6e8289553e3b3bd22392a22eaa8d61f42", "html_url": "https://github.com/rust-lang/rust/commit/97ffe3c6e8289553e3b3bd22392a22eaa8d61f42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97ffe3c6e8289553e3b3bd22392a22eaa8d61f42/comments", "author": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcrakhman", "id": 16068868, "node_id": "MDQ6VXNlcjE2MDY4ODY4", "avatar_url": "https://avatars.githubusercontent.com/u/16068868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcrakhman", "html_url": "https://github.com/mcrakhman", "followers_url": "https://api.github.com/users/mcrakhman/followers", "following_url": "https://api.github.com/users/mcrakhman/following{/other_user}", "gists_url": "https://api.github.com/users/mcrakhman/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcrakhman/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcrakhman/subscriptions", "organizations_url": "https://api.github.com/users/mcrakhman/orgs", "repos_url": "https://api.github.com/users/mcrakhman/repos", "events_url": "https://api.github.com/users/mcrakhman/events{/privacy}", "received_events_url": "https://api.github.com/users/mcrakhman/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04a35784df4cf267a8bbce6d5542869ed1a52fcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/04a35784df4cf267a8bbce6d5542869ed1a52fcb", "html_url": "https://github.com/rust-lang/rust/commit/04a35784df4cf267a8bbce6d5542869ed1a52fcb"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "37de4f590bc1a0acc4fbb5321169723de82c1677", "filename": "crates/ra_assists/src/assist_context.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/97ffe3c6e8289553e3b3bd22392a22eaa8d61f42/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97ffe3c6e8289553e3b3bd22392a22eaa8d61f42/crates%2Fra_assists%2Fsrc%2Fassist_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_context.rs?ref=97ffe3c6e8289553e3b3bd22392a22eaa8d61f42", "patch": "@@ -178,11 +178,10 @@ impl Assists {\n         label: Assist,\n         f: impl FnOnce(&mut AssistDirector),\n     ) -> Option<()> {\n-        let change_label = label.label.clone();\n         if !self.resolve {\n             return None;\n         }\n-        let mut director = AssistDirector::new(change_label.clone());\n+        let mut director = AssistDirector::new();\n         f(&mut director);\n         let changes = director.finish();\n         let file_edits: Vec<SourceFileEdit> =\n@@ -295,12 +294,11 @@ impl AssistBuilder {\n pub(crate) struct AssistDirector {\n     source_changes: Vec<SourceChange>,\n     builders: FxHashMap<FileId, AssistBuilder>,\n-    change_label: String,\n }\n \n impl AssistDirector {\n-    fn new(change_label: String) -> AssistDirector {\n-        AssistDirector { source_changes: vec![], builders: FxHashMap::default(), change_label }\n+    fn new() -> AssistDirector {\n+        AssistDirector { source_changes: vec![], builders: FxHashMap::default() }\n     }\n \n     pub(crate) fn perform(&mut self, file_id: FileId, f: impl FnOnce(&mut AssistBuilder)) {\n@@ -309,7 +307,7 @@ impl AssistDirector {\n     }\n \n     fn finish(mut self) -> Vec<SourceChange> {\n-        for (file_id, builder) in\n+        for (_, builder) in\n             self.builders.into_iter().collect::<Vec<(FileId, AssistBuilder)>>()\n         {\n             self.source_changes.push(builder.finish());"}]}