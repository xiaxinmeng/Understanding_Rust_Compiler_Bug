{"sha": "6a49b523be28e3c2a408d7f8c95ab56f575eae85", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNDliNTIzYmUyOGUzYzJhNDA4ZDdmOGM5NWFiNTZmNTc1ZWFlODU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-07T13:56:49Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-11-14T12:40:42Z"}, "message": "TAIT: remove `OpaqueTy` in AST.", "tree": {"sha": "54ce59d2e717b694d97c49ed0e1ddccbe6bd0276", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54ce59d2e717b694d97c49ed0e1ddccbe6bd0276"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a49b523be28e3c2a408d7f8c95ab56f575eae85", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a49b523be28e3c2a408d7f8c95ab56f575eae85", "html_url": "https://github.com/rust-lang/rust/commit/6a49b523be28e3c2a408d7f8c95ab56f575eae85", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a49b523be28e3c2a408d7f8c95ab56f575eae85/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2491ee4e6c74451371aee8f4a2a5786d7a35406", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2491ee4e6c74451371aee8f4a2a5786d7a35406", "html_url": "https://github.com/rust-lang/rust/commit/a2491ee4e6c74451371aee8f4a2a5786d7a35406"}], "stats": {"total": 38, "additions": 0, "deletions": 38}, "files": [{"sha": "4cfa99885708b447c608ce96a8709482a108a7e7", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=6a49b523be28e3c2a408d7f8c95ab56f575eae85", "patch": "@@ -1579,7 +1579,6 @@ pub enum ImplItemKind {\n     Const(P<Ty>, P<Expr>),\n     Method(FnSig, P<Block>),\n     TyAlias(P<Ty>),\n-    OpaqueTy(GenericBounds),\n     Macro(Mac),\n }\n \n@@ -2483,10 +2482,6 @@ pub enum ItemKind {\n     ///\n     /// E.g., `type Foo = Bar<u8>;`.\n     TyAlias(P<Ty>, Generics),\n-    /// An opaque `impl Trait` type alias.\n-    ///\n-    /// E.g., `type Foo = impl Bar + Boo;`.\n-    OpaqueTy(GenericBounds, Generics),\n     /// An enum definition (`enum`).\n     ///\n     /// E.g., `enum Foo<A, B> { C<A>, D<B> }`.\n@@ -2540,7 +2535,6 @@ impl ItemKind {\n             ItemKind::ForeignMod(..) => \"foreign module\",\n             ItemKind::GlobalAsm(..) => \"global asm\",\n             ItemKind::TyAlias(..) => \"type alias\",\n-            ItemKind::OpaqueTy(..) => \"opaque type\",\n             ItemKind::Enum(..) => \"enum\",\n             ItemKind::Struct(..) => \"struct\",\n             ItemKind::Union(..) => \"union\","}, {"sha": "f4ef993edb95ae06757af8af846fcd7c1dfd92d0", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=6a49b523be28e3c2a408d7f8c95ab56f575eae85", "patch": "@@ -887,10 +887,6 @@ pub fn noop_visit_item_kind<T: MutVisitor>(kind: &mut ItemKind, vis: &mut T) {\n             vis.visit_ty(ty);\n             vis.visit_generics(generics);\n         }\n-        ItemKind::OpaqueTy(bounds, generics) => {\n-            visit_bounds(bounds, vis);\n-            vis.visit_generics(generics);\n-        }\n         ItemKind::Enum(EnumDef { variants }, generics) => {\n             variants.flat_map_in_place(|variant| vis.flat_map_variant(variant));\n             vis.visit_generics(generics);\n@@ -970,7 +966,6 @@ pub fn noop_flat_map_impl_item<T: MutVisitor>(mut item: ImplItem, visitor: &mut\n             visitor.visit_block(body);\n         }\n         ImplItemKind::TyAlias(ty) => visitor.visit_ty(ty),\n-        ImplItemKind::OpaqueTy(bounds) => visit_bounds(bounds, visitor),\n         ImplItemKind::Macro(mac) => visitor.visit_mac(mac),\n     }\n     visitor.visit_span(span);"}, {"sha": "ef65a744e83b012dfcfc5470daa5b6de2d5c69ba", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=6a49b523be28e3c2a408d7f8c95ab56f575eae85", "patch": "@@ -1255,19 +1255,6 @@ impl<'a> State<'a> {\n                 self.s.word(\";\");\n                 self.end(); // end the outer ibox\n             }\n-            ast::ItemKind::OpaqueTy(ref bounds, ref generics) => {\n-                self.head(visibility_qualified(&item.vis, \"type\"));\n-                self.print_ident(item.ident);\n-                self.word_space(\"= impl\");\n-                self.print_generic_params(&generics.params);\n-                self.end(); // end the inner ibox\n-\n-                self.print_where_clause(&generics.where_clause);\n-                self.s.space();\n-                self.print_type_bounds(\":\", bounds);\n-                self.s.word(\";\");\n-                self.end(); // end the outer ibox\n-            }\n             ast::ItemKind::Enum(ref enum_definition, ref params) => {\n                 self.print_enum_def(\n                     enum_definition,\n@@ -1620,13 +1607,6 @@ impl<'a> State<'a> {\n             ast::ImplItemKind::TyAlias(ref ty) => {\n                 self.print_associated_type(ii.ident, None, Some(ty));\n             }\n-            ast::ImplItemKind::OpaqueTy(ref bounds) => {\n-                self.word_space(\"type\");\n-                self.print_ident(ii.ident);\n-                self.word_space(\"= impl\");\n-                self.print_type_bounds(\":\", bounds);\n-                self.s.word(\";\");\n-            }\n             ast::ImplItemKind::Macro(ref mac) => {\n                 self.print_mac(mac);\n                 match mac.delim {"}, {"sha": "2597ffd750d775030c2e56c21e30f865806b218c", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a49b523be28e3c2a408d7f8c95ab56f575eae85/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=6a49b523be28e3c2a408d7f8c95ab56f575eae85", "patch": "@@ -263,10 +263,6 @@ pub fn walk_item<'a, V: Visitor<'a>>(visitor: &mut V, item: &'a Item) {\n             visitor.visit_ty(typ);\n             visitor.visit_generics(generics)\n         }\n-        ItemKind::OpaqueTy(ref bounds, ref generics) => {\n-            walk_list!(visitor, visit_param_bound, bounds);\n-            visitor.visit_generics(generics)\n-        }\n         ItemKind::Enum(ref enum_definition, ref generics) => {\n             visitor.visit_generics(generics);\n             visitor.visit_enum_def(enum_definition, generics, item.id, item.span)\n@@ -628,9 +624,6 @@ pub fn walk_impl_item<'a, V: Visitor<'a>>(visitor: &mut V, impl_item: &'a ImplIt\n         ImplItemKind::TyAlias(ref ty) => {\n             visitor.visit_ty(ty);\n         }\n-        ImplItemKind::OpaqueTy(ref bounds) => {\n-            walk_list!(visitor, visit_param_bound, bounds);\n-        }\n         ImplItemKind::Macro(ref mac) => {\n             visitor.visit_mac(mac);\n         }"}]}