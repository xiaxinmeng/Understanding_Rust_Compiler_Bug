{"sha": "41832f27ba5323be8e8935775d95f61bd18ac289", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxODMyZjI3YmE1MzIzYmU4ZTg5MzU3NzVkOTVmNjFiZDE4YWMyODk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-30T22:24:50Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-09-30T22:24:50Z"}, "message": "Fix RUSTC_VERSION for 'documenting' build stage.\n\nPreviously the `env!(\"RUSTC_VERSION\")` requirement would break the\n\"Documenting rustc_metadata\" stage of the rustc build, since that\nenvironment variable is only defined during the main build.", "tree": {"sha": "b6d75e8724ebd3b463fb5108d6a99c8e3f3e38f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6d75e8724ebd3b463fb5108d6a99c8e3f3e38f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41832f27ba5323be8e8935775d95f61bd18ac289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41832f27ba5323be8e8935775d95f61bd18ac289", "html_url": "https://github.com/rust-lang/rust/commit/41832f27ba5323be8e8935775d95f61bd18ac289", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41832f27ba5323be8e8935775d95f61bd18ac289/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c717cfa7c1640a65ea9198e52265a3bc12449b88", "url": "https://api.github.com/repos/rust-lang/rust/commits/c717cfa7c1640a65ea9198e52265a3bc12449b88", "html_url": "https://github.com/rust-lang/rust/commit/c717cfa7c1640a65ea9198e52265a3bc12449b88"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "4d18462848e5d84c6f1b5ea608b43fd3c6fb1f70", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/41832f27ba5323be8e8935775d95f61bd18ac289/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41832f27ba5323be8e8935775d95f61bd18ac289/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=41832f27ba5323be8e8935775d95f61bd18ac289", "patch": "@@ -1288,7 +1288,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n         let link_meta = self.link_meta;\n         let is_rustc_macro = tcx.sess.crate_types.borrow().contains(&CrateTypeRustcMacro);\n         let root = self.lazy(&CrateRoot {\n-            rustc_version: RUSTC_VERSION.to_string(),\n+            rustc_version: rustc_version(),\n             name: link_meta.crate_name.clone(),\n             triple: tcx.sess.opts.target_triple.clone(),\n             hash: link_meta.crate_hash,"}, {"sha": "75242fc36db762bf592c4fc4ce2084049cb077cb", "filename": "src/librustc_metadata/loader.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/41832f27ba5323be8e8935775d95f61bd18ac289/src%2Flibrustc_metadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41832f27ba5323be8e8935775d95f61bd18ac289/src%2Flibrustc_metadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Floader.rs?ref=41832f27ba5323be8e8935775d95f61bd18ac289", "patch": "@@ -213,7 +213,7 @@\n //! metadata::loader or metadata::creader for all the juicy details!\n \n use cstore::MetadataBlob;\n-use schema::{METADATA_HEADER, RUSTC_VERSION};\n+use schema::{METADATA_HEADER, rustc_version};\n \n use rustc::hir::svh::Svh;\n use rustc::session::Session;\n@@ -382,7 +382,7 @@ impl<'a> Context<'a> {\n         }\n         if !self.rejected_via_version.is_empty() {\n             err.help(&format!(\"please recompile that crate using this compiler ({})\",\n-                              RUSTC_VERSION));\n+                              rustc_version()));\n             let mismatches = self.rejected_via_version.iter();\n             for (i, &CrateMismatch { ref path, ref got }) in mismatches.enumerate() {\n                 err.note(&format!(\"crate `{}` path #{}: {} compiled by {:?}\",\n@@ -597,9 +597,10 @@ impl<'a> Context<'a> {\n \n     fn crate_matches(&mut self, metadata: &MetadataBlob, libpath: &Path) -> Option<Svh> {\n         let root = metadata.get_root();\n-        if root.rustc_version != RUSTC_VERSION {\n+        let rustc_version = rustc_version();\n+        if root.rustc_version != rustc_version {\n             info!(\"Rejecting via version: expected {} got {}\",\n-                  RUSTC_VERSION, root.rustc_version);\n+                  rustc_version, root.rustc_version);\n             self.rejected_via_version.push(CrateMismatch {\n                 path: libpath.to_path_buf(),\n                 got: root.rustc_version"}, {"sha": "1a46315e9cd7ac7a2da4395412568520b19c97ff", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/41832f27ba5323be8e8935775d95f61bd18ac289/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41832f27ba5323be8e8935775d95f61bd18ac289/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=41832f27ba5323be8e8935775d95f61bd18ac289", "patch": "@@ -26,11 +26,9 @@ use syntax_pos::{self, Span};\n \n use std::marker::PhantomData;\n \n-#[cfg(not(test))]\n-pub const RUSTC_VERSION: &'static str = concat!(\"rustc \", env!(\"CFG_VERSION\"));\n-\n-#[cfg(test)]\n-pub const RUSTC_VERSION: &'static str = \"rustc 0.0.0-unit-test\";\n+pub fn rustc_version() -> String {\n+    format!(\"rustc {}\", option_env!(\"CFG_VERSION\").unwrap_or(\"unknown version\"))\n+}\n \n /// Metadata encoding version.\n /// NB: increment this if you change the format of metadata such that"}]}