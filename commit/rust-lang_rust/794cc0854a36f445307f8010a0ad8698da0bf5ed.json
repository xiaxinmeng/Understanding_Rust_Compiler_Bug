{"sha": "794cc0854a36f445307f8010a0ad8698da0bf5ed", "node_id": "C_kwDOAAsO6NoAKDc5NGNjMDg1NGEzNmY0NDUzMDdmODAxMGEwYWQ4Njk4ZGEwYmY1ZWQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-01-03T13:49:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-01-03T13:49:53Z"}, "message": "clippy", "tree": {"sha": "ba3fe5528a05e3125c20931e1c5f1fac21eeeb6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba3fe5528a05e3125c20931e1c5f1fac21eeeb6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/794cc0854a36f445307f8010a0ad8698da0bf5ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/794cc0854a36f445307f8010a0ad8698da0bf5ed", "html_url": "https://github.com/rust-lang/rust/commit/794cc0854a36f445307f8010a0ad8698da0bf5ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/794cc0854a36f445307f8010a0ad8698da0bf5ed/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d96592b4fdd2278b21bb0437c153f87e8c6013c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d96592b4fdd2278b21bb0437c153f87e8c6013c0", "html_url": "https://github.com/rust-lang/rust/commit/d96592b4fdd2278b21bb0437c153f87e8c6013c0"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "37f66d0033f068e640bfbb15a5d023c66e22c6ff", "filename": "src/tools/miri/cargo-miri/src/phases.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/794cc0854a36f445307f8010a0ad8698da0bf5ed/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fphases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/794cc0854a36f445307f8010a0ad8698da0bf5ed/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fphases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fcargo-miri%2Fsrc%2Fphases.rs?ref=794cc0854a36f445307f8010a0ad8698da0bf5ed", "patch": "@@ -185,7 +185,7 @@ pub fn phase_cargo_miri(mut args: impl Iterator<Item = String>) {\n     // explicitly do this even if RUSTC_STAGE is set, since for these builds we do *not* want the\n     // bootstrap `rustc` thing in our way! Instead, we have MIRI_HOST_SYSROOT to use for host\n     // builds.\n-    cmd.env(\"RUSTC\", &fs::canonicalize(find_miri()).unwrap());\n+    cmd.env(\"RUSTC\", fs::canonicalize(find_miri()).unwrap());\n     cmd.env(\"MIRI_BE_RUSTC\", \"target\"); // we better remember to *unset* this in the other phases!\n \n     // Set rustdoc to us as well, so we can run doctests."}, {"sha": "62198061827adb3f1ab3fd1527586102705cdc69", "filename": "src/tools/miri/src/range_map.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/794cc0854a36f445307f8010a0ad8698da0bf5ed/src%2Ftools%2Fmiri%2Fsrc%2Frange_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/794cc0854a36f445307f8010a0ad8698da0bf5ed/src%2Ftools%2Fmiri%2Fsrc%2Frange_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Frange_map.rs?ref=794cc0854a36f445307f8010a0ad8698da0bf5ed", "patch": "@@ -219,7 +219,6 @@ mod tests {\n     /// Query the map at every offset in the range and collect the results.\n     fn to_vec<T: Copy>(map: &RangeMap<T>, offset: u64, len: u64) -> Vec<T> {\n         (offset..offset + len)\n-            .into_iter()\n             .map(|i| {\n                 map.iter(Size::from_bytes(i), Size::from_bytes(1)).next().map(|(_, &t)| t).unwrap()\n             })"}]}