{"sha": "a792234388461e3c6b6104cae490aa21b15102e4", "node_id": "C_kwDOAAsO6NoAKGE3OTIyMzQzODg0NjFlM2M2YjYxMDRjYWU0OTBhYTIxYjE1MTAyZTQ", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-19T04:04:51Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-19T04:04:51Z"}, "message": "rustdoc: Avoid using `Iterator::count()` where possible\n\n`count()` iterates over the whole collection. Using `len()` instead, or\n`.next().is_none()` when comparing to zero, should be faster.", "tree": {"sha": "45a978ab75d97fc7a98c17480fcf7433cd110255", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45a978ab75d97fc7a98c17480fcf7433cd110255"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a792234388461e3c6b6104cae490aa21b15102e4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a792234388461e3c6b6104cae490aa21b15102e4", "html_url": "https://github.com/rust-lang/rust/commit/a792234388461e3c6b6104cae490aa21b15102e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a792234388461e3c6b6104cae490aa21b15102e4/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f4687d5381499ce36f51ffeac4ce61ff627d4bec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f4687d5381499ce36f51ffeac4ce61ff627d4bec", "html_url": "https://github.com/rust-lang/rust/commit/f4687d5381499ce36f51ffeac4ce61ff627d4bec"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "d811c85ea58d1df2ac9ba658241d0431d1f9c3b5", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a792234388461e3c6b6104cae490aa21b15102e4/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a792234388461e3c6b6104cae490aa21b15102e4/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=a792234388461e3c6b6104cae490aa21b15102e4", "patch": "@@ -656,7 +656,7 @@ impl<'a, I> Footnotes<'a, I> {\n     }\n \n     fn get_entry(&mut self, key: &str) -> &mut (Vec<Event<'a>>, u16) {\n-        let new_id = self.footnotes.keys().count() + 1;\n+        let new_id = self.footnotes.len() + 1;\n         let key = key.to_owned();\n         self.footnotes.entry(key).or_insert((Vec::new(), new_id as u16))\n     }"}, {"sha": "f42e7a97eb785f0eb44a6b030c359097da2ea312", "filename": "src/librustdoc/passes/unindent_comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a792234388461e3c6b6104cae490aa21b15102e4/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a792234388461e3c6b6104cae490aa21b15102e4/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Funindent_comments.rs?ref=a792234388461e3c6b6104cae490aa21b15102e4", "patch": "@@ -87,7 +87,7 @@ fn unindent_fragments(docs: &mut Vec<DocFragment>) {\n     };\n \n     for fragment in docs {\n-        if fragment.doc.as_str().lines().count() == 0 {\n+        if fragment.doc.as_str().lines().next().is_none() {\n             continue;\n         }\n "}]}