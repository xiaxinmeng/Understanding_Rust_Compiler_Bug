{"sha": "34dfbc3fef3fb02c36beb982523ce8d9d90838e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0ZGZiYzNmZWYzZmIwMmMzNmJlYjk4MjUyM2NlOGQ5ZDkwODM4ZTc=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-23T01:56:23Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-23T01:56:23Z"}, "message": "Add module docs and restrict visibility", "tree": {"sha": "8986a51e9833449f8af28e0d96ec09c5b48f96c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8986a51e9833449f8af28e0d96ec09c5b48f96c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34dfbc3fef3fb02c36beb982523ce8d9d90838e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34dfbc3fef3fb02c36beb982523ce8d9d90838e7", "html_url": "https://github.com/rust-lang/rust/commit/34dfbc3fef3fb02c36beb982523ce8d9d90838e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34dfbc3fef3fb02c36beb982523ce8d9d90838e7/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59c746030a1f1330f2037f09c2a7a6def8a5fc04", "url": "https://api.github.com/repos/rust-lang/rust/commits/59c746030a1f1330f2037f09c2a7a6def8a5fc04", "html_url": "https://github.com/rust-lang/rust/commit/59c746030a1f1330f2037f09c2a7a6def8a5fc04"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "858ab0dbe009962c9434b8363e25a97cc66efd7d", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/34dfbc3fef3fb02c36beb982523ce8d9d90838e7/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dfbc3fef3fb02c36beb982523ce8d9d90838e7/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=34dfbc3fef3fb02c36beb982523ce8d9d90838e7", "patch": "@@ -164,7 +164,7 @@ pub struct Body<'tcx> {\n     /// FIXME(oli-obk): rewrite the promoted during promotion to eliminate the cell components.\n     pub ignore_interior_mut_in_const_validation: bool,\n \n-    pub predecessor_cache: PredecessorCache,\n+    predecessor_cache: PredecessorCache,\n }\n \n impl<'tcx> Body<'tcx> {"}, {"sha": "9508365886aa790f3f83d029d9cf7106afac8fca", "filename": "src/librustc_middle/mir/predecessors.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34dfbc3fef3fb02c36beb982523ce8d9d90838e7/src%2Flibrustc_middle%2Fmir%2Fpredecessors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34dfbc3fef3fb02c36beb982523ce8d9d90838e7/src%2Flibrustc_middle%2Fmir%2Fpredecessors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fpredecessors.rs?ref=34dfbc3fef3fb02c36beb982523ce8d9d90838e7", "patch": "@@ -1,3 +1,5 @@\n+//! Lazily compute the reverse control-flow graph for the MIR.\n+\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::{Lock, Lrc};\n use rustc_index::vec::IndexVec;\n@@ -10,13 +12,13 @@ use crate::mir::{BasicBlock, BasicBlockData};\n pub type Predecessors = IndexVec<BasicBlock, SmallVec<[BasicBlock; 4]>>;\n \n #[derive(Clone, Debug)]\n-pub struct PredecessorCache {\n+pub(super) struct PredecessorCache {\n     cache: Lock<Option<Lrc<Predecessors>>>,\n }\n \n impl PredecessorCache {\n     #[inline]\n-    pub fn new() -> Self {\n+    pub(super) fn new() -> Self {\n         PredecessorCache { cache: Lock::new(None) }\n     }\n \n@@ -27,7 +29,7 @@ impl PredecessorCache {\n     /// callers of `invalidate` have a unique reference to the MIR and thus to the predecessor\n     /// cache. This means we don't actually need to take a lock when `invalidate` is called.\n     #[inline]\n-    pub fn invalidate(&mut self) {\n+    pub(super) fn invalidate(&mut self) {\n         *self.cache.get_mut() = None;\n     }\n \n@@ -37,7 +39,7 @@ impl PredecessorCache {\n     /// `cache` is only held inside this function. As long as no other locks are taken while\n     /// computing the predecessor graph, deadlock is impossible.\n     #[inline]\n-    pub fn compute(\n+    pub(super) fn compute(\n         &self,\n         basic_blocks: &IndexVec<BasicBlock, BasicBlockData<'_>>,\n     ) -> Lrc<Predecessors> {"}]}