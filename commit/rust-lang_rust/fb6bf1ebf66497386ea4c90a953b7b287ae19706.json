{"sha": "fb6bf1ebf66497386ea4c90a953b7b287ae19706", "node_id": "C_kwDOAAsO6NoAKGZiNmJmMWViZjY2NDk3Mzg2ZWE0YzkwYTk1M2I3YjI4N2FlMTk3MDY", "commit": {"author": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-07T06:12:36Z"}, "committer": {"name": "disco07", "email": "koneenok@outlook.fr", "date": "2023-05-07T06:12:36Z"}, "message": "update a func", "tree": {"sha": "2a266f82705fe38b4ca9f2930ae4b3728a2e8945", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a266f82705fe38b4ca9f2930ae4b3728a2e8945"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb6bf1ebf66497386ea4c90a953b7b287ae19706", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6bf1ebf66497386ea4c90a953b7b287ae19706", "html_url": "https://github.com/rust-lang/rust/commit/fb6bf1ebf66497386ea4c90a953b7b287ae19706", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb6bf1ebf66497386ea4c90a953b7b287ae19706/comments", "author": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "committer": {"login": "disco07", "id": 60718751, "node_id": "MDQ6VXNlcjYwNzE4NzUx", "avatar_url": "https://avatars.githubusercontent.com/u/60718751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/disco07", "html_url": "https://github.com/disco07", "followers_url": "https://api.github.com/users/disco07/followers", "following_url": "https://api.github.com/users/disco07/following{/other_user}", "gists_url": "https://api.github.com/users/disco07/gists{/gist_id}", "starred_url": "https://api.github.com/users/disco07/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/disco07/subscriptions", "organizations_url": "https://api.github.com/users/disco07/orgs", "repos_url": "https://api.github.com/users/disco07/repos", "events_url": "https://api.github.com/users/disco07/events{/privacy}", "received_events_url": "https://api.github.com/users/disco07/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "450a22f2dc18949ba2db96570dc5270060fabd43", "url": "https://api.github.com/repos/rust-lang/rust/commits/450a22f2dc18949ba2db96570dc5270060fabd43", "html_url": "https://github.com/rust-lang/rust/commit/450a22f2dc18949ba2db96570dc5270060fabd43"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "284789878212670d330e813052bbc038f6591786", "filename": "clippy_lints/src/matches/redundant_pattern_match.rs", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/fb6bf1ebf66497386ea4c90a953b7b287ae19706/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fb6bf1ebf66497386ea4c90a953b7b287ae19706/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches%2Fredundant_pattern_match.rs?ref=fb6bf1ebf66497386ea4c90a953b7b287ae19706", "patch": "@@ -289,23 +289,7 @@ fn found_good_method<'a>(\n                 None\n             }\n         },\n-        (PatKind::Path(ref path_left), PatKind::Wild) => {\n-            if let Some(name) = get_ident(path_left) {\n-                match name.as_str() {\n-                    \"None\" => find_good_method_for_matches_macro(\n-                        cx,\n-                        arms,\n-                        path_left,\n-                        Item::Lang(OptionNone),\n-                        \"is_none()\",\n-                        \"is_some()\",\n-                    ),\n-                    _ => None,\n-                }\n-            } else {\n-                None\n-            }\n-        },\n+        (PatKind::Path(ref path_left), PatKind::Wild) => get_good_method(cx, arms, path_left),\n         _ => None,\n     }\n }\n@@ -334,6 +318,14 @@ fn get_good_method<'a>(cx: &LateContext<'_>, arms: &[Arm<'_>], path_left: &QPath\n                 \"is_some()\",\n                 \"is_none()\",\n             ),\n+            \"None\" => find_good_method_for_matches_macro(\n+                cx,\n+                arms,\n+                path_left,\n+                Item::Lang(OptionNone),\n+                \"is_none()\",\n+                \"is_some()\",\n+            ),\n             _ => None,\n         };\n     }"}]}