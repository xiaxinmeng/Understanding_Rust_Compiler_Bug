{"sha": "80d12601ff20454cd39de2c0d49558b46f1077a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZDEyNjAxZmYyMDQ1NGNkMzlkZTJjMGQ0OTU1OGI0NmYxMDc3YTI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-13T12:05:48Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-13T12:05:48Z"}, "message": "Write enum discriminants.", "tree": {"sha": "dc5ed1100947d87e3123244dc0fdc4efbb5d0377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc5ed1100947d87e3123244dc0fdc4efbb5d0377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80d12601ff20454cd39de2c0d49558b46f1077a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80d12601ff20454cd39de2c0d49558b46f1077a2", "html_url": "https://github.com/rust-lang/rust/commit/80d12601ff20454cd39de2c0d49558b46f1077a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80d12601ff20454cd39de2c0d49558b46f1077a2/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc8b8efd33731cf6412ad33ffa4a136f3ba400a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc8b8efd33731cf6412ad33ffa4a136f3ba400a6", "html_url": "https://github.com/rust-lang/rust/commit/cc8b8efd33731cf6412ad33ffa4a136f3ba400a6"}], "stats": {"total": 41, "additions": 39, "deletions": 2}, "files": [{"sha": "f1ec0c65e8a2897cc5986d11416d69495a42377f", "filename": "src/interpreter.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/80d12601ff20454cd39de2c0d49558b46f1077a2/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d12601ff20454cd39de2c0d49558b46f1077a2/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=80d12601ff20454cd39de2c0d49558b46f1077a2", "patch": "@@ -6,7 +6,7 @@ use std::error::Error;\n use std::fmt;\n \n use memory::{FieldRepr, Memory, Pointer, Repr};\n-use primval;\n+use primval::{self, PrimVal};\n \n const TRACE_EXECUTION: bool = true;\n \n@@ -277,7 +277,10 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n \n                         ty::AdtKind::Enum => match dest_repr {\n                             Repr::Sum { ref discr, ref variants, .. } => {\n-                                // TODO(tsion): Write the discriminant value.\n+                                if discr.size() > 0 {\n+                                    let discr_val = PrimVal::from_int(variant_idx as i64, discr);\n+                                    try!(self.memory.write_primval(dest, discr_val));\n+                                }\n                                 self.assign_to_product(\n                                     dest.offset(discr.size()),\n                                     &variants[variant_idx],"}, {"sha": "3fbcd6636404c4ea002d52ab0782792eae0a1154", "filename": "src/primval.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/80d12601ff20454cd39de2c0d49558b46f1077a2/src%2Fprimval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d12601ff20454cd39de2c0d49558b46f1077a2/src%2Fprimval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fprimval.rs?ref=80d12601ff20454cd39de2c0d49558b46f1077a2", "patch": "@@ -1,5 +1,7 @@\n use rustc::mir::repr as mir;\n \n+use memory::Repr;\n+\n #[derive(Clone, Copy, Debug, PartialEq)]\n pub enum PrimVal {\n     Bool(bool),\n@@ -9,6 +11,19 @@ pub enum PrimVal {\n     I64(i64),\n }\n \n+impl PrimVal {\n+    pub fn from_int(n: i64, repr: &Repr) -> Self {\n+        // TODO(tsion): Use checked casts.\n+        match *repr {\n+            Repr::I8 => PrimVal::I8(n as i8),\n+            Repr::I16 => PrimVal::I16(n as i16),\n+            Repr::I32 => PrimVal::I32(n as i32),\n+            Repr::I64 => PrimVal::I64(n),\n+            _ => panic!(\"attempted to make integer primval from non-integer repr\"),\n+        }\n+    }\n+}\n+\n pub fn binary_op(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> PrimVal {\n     macro_rules! int_binops {\n         ($v:ident, $l:ident, $r:ident) => ({"}, {"sha": "d04f0b2e7cf24207c97fcf616f9ea28a1d1505e9", "filename": "test/sums.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/80d12601ff20454cd39de2c0d49558b46f1077a2/test%2Fsums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d12601ff20454cd39de2c0d49558b46f1077a2/test%2Fsums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Fsums.rs?ref=80d12601ff20454cd39de2c0d49558b46f1077a2", "patch": "@@ -1,6 +1,25 @@\n #![feature(custom_attribute)]\n #![allow(dead_code, unused_attributes)]\n \n+enum Unit { Unit }\n+\n+#[miri_run]\n+fn return_unit() -> Unit {\n+    Unit::Unit\n+}\n+\n+enum MyBool { False, True }\n+\n+#[miri_run]\n+fn return_true() -> MyBool {\n+    MyBool::True\n+}\n+\n+#[miri_run]\n+fn return_false() -> MyBool {\n+    MyBool::False\n+}\n+\n #[miri_run]\n fn return_none() -> Option<i64> {\n     None"}]}