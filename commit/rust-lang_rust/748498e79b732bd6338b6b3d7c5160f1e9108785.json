{"sha": "748498e79b732bd6338b6b3d7c5160f1e9108785", "node_id": "C_kwDOAAsO6NoAKDc0ODQ5OGU3OWI3MzJiZDYzMzhiNmIzZDdjNTE2MGYxZTkxMDg3ODU", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-19T15:13:18Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-03-19T15:35:41Z"}, "message": "Add needs-unwind directive to tests where necessary", "tree": {"sha": "57a399705429172e09d19b75cb01a035b3ca5bd0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57a399705429172e09d19b75cb01a035b3ca5bd0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/748498e79b732bd6338b6b3d7c5160f1e9108785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/748498e79b732bd6338b6b3d7c5160f1e9108785", "html_url": "https://github.com/rust-lang/rust/commit/748498e79b732bd6338b6b3d7c5160f1e9108785", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/748498e79b732bd6338b6b3d7c5160f1e9108785/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31535841701e0bf7ef33998024376f2cedd8b3e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/31535841701e0bf7ef33998024376f2cedd8b3e3", "html_url": "https://github.com/rust-lang/rust/commit/31535841701e0bf7ef33998024376f2cedd8b3e3"}], "stats": {"total": 47, "additions": 27, "deletions": 20}, "files": [{"sha": "c2d9e222b84a44e6788f92f5d10be80464e8343d", "filename": "src/test/ui/backtrace.rs", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbacktrace.rs?ref=748498e79b732bd6338b6b3d7c5160f1e9108785", "patch": "@@ -88,28 +88,31 @@ fn runtest(me: &str) {\n     assert!(!s.contains(\"stack backtrace\") && !s.contains(\" - foo\"),\n             \"bad output3: {}\", s);\n \n-    // Make sure a stack trace is printed\n-    let p = template(me).arg(\"double-fail\").spawn().unwrap();\n-    let out = p.wait_with_output().unwrap();\n-    assert!(!out.status.success());\n-    let s = str::from_utf8(&out.stderr).unwrap();\n-    // loosened the following from double::h to double:: due to\n-    // spurious failures on mac, 32bit, optimized\n-    assert!(s.contains(\"stack backtrace\") && contains_verbose_expected(s, \"double\"),\n-            \"bad output3: {}\", s);\n+    #[cfg(not(panic = \"abort\"))]\n+    {\n+        // Make sure a stack trace is printed\n+        let p = template(me).arg(\"double-fail\").spawn().unwrap();\n+        let out = p.wait_with_output().unwrap();\n+        assert!(!out.status.success());\n+        let s = str::from_utf8(&out.stderr).unwrap();\n+        // loosened the following from double::h to double:: due to\n+        // spurious failures on mac, 32bit, optimized\n+        assert!(s.contains(\"stack backtrace\") && contains_verbose_expected(s, \"double\"),\n+                \"bad output3: {}\", s);\n \n-    // Make sure a stack trace isn't printed too many times\n-    let p = template(me).arg(\"double-fail\")\n-                                .env(\"RUST_BACKTRACE\", \"1\").spawn().unwrap();\n-    let out = p.wait_with_output().unwrap();\n-    assert!(!out.status.success());\n-    let s = str::from_utf8(&out.stderr).unwrap();\n-    let mut i = 0;\n-    for _ in 0..2 {\n-        i += s[i + 10..].find(\"stack backtrace\").unwrap() + 10;\n+        // Make sure a stack trace isn't printed too many times\n+        let p = template(me).arg(\"double-fail\")\n+                                    .env(\"RUST_BACKTRACE\", \"1\").spawn().unwrap();\n+        let out = p.wait_with_output().unwrap();\n+        assert!(!out.status.success());\n+        let s = str::from_utf8(&out.stderr).unwrap();\n+        let mut i = 0;\n+        for _ in 0..2 {\n+            i += s[i + 10..].find(\"stack backtrace\").unwrap() + 10;\n+        }\n+        assert!(s[i + 10..].find(\"stack backtrace\").is_none(),\n+                \"bad output4: {}\", s);\n     }\n-    assert!(s[i + 10..].find(\"stack backtrace\").is_none(),\n-            \"bad output4: {}\", s);\n }\n \n fn main() {"}, {"sha": "77368b87e961c2cc841b5841949e262444ee5b3b", "filename": "src/test/ui/numbers-arithmetic/issue-8460.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fissue-8460.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fissue-8460.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fissue-8460.rs?ref=748498e79b732bd6338b6b3d7c5160f1e9108785", "patch": "@@ -1,6 +1,7 @@\n // run-pass\n #![allow(unused_must_use)]\n // ignore-emscripten no threads support\n+// needs-unwind\n #![feature(rustc_attrs)]\n \n use std::thread;"}, {"sha": "098f54ac23f6afbdd37159a7356428554970f2d3", "filename": "src/test/ui/panic-while-printing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fpanic-while-printing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fpanic-while-printing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-while-printing.rs?ref=748498e79b732bd6338b6b3d7c5160f1e9108785", "patch": "@@ -1,4 +1,5 @@\n // run-pass\n+// needs-unwind\n // ignore-emscripten no subprocess support\n \n #![feature(internal_output_capture)]"}, {"sha": "a1887c2180ecf4bcf4551f93b8ac65756cc817ba", "filename": "src/test/ui/process/multi-panic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fprocess%2Fmulti-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Fprocess%2Fmulti-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprocess%2Fmulti-panic.rs?ref=748498e79b732bd6338b6b3d7c5160f1e9108785", "patch": "@@ -1,6 +1,7 @@\n // run-pass\n // ignore-emscripten no processes\n // ignore-sgx no processes\n+// needs-unwind\n \n fn check_for_no_backtrace(test: std::process::Output) {\n     assert!(!test.status.success());"}, {"sha": "01e460da5ab57ff938c089031b57aeb78530232f", "filename": "src/test/ui/test-attrs/test-panic-while-printing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-panic-while-printing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748498e79b732bd6338b6b3d7c5160f1e9108785/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-panic-while-printing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-panic-while-printing.rs?ref=748498e79b732bd6338b6b3d7c5160f1e9108785", "patch": "@@ -1,5 +1,6 @@\n // compile-flags:--test\n // run-pass\n+// needs-unwind\n // ignore-emscripten no subprocess support\n \n use std::fmt;"}]}