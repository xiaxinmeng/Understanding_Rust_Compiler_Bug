{"sha": "82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyZjVmNjUwNzZlNjA0ZWM3MGE2ZTA5Y2RiZThkZGRiOGIzYjdjNDQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-18T04:13:56Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-10-18T04:14:38Z"}, "message": "Move sys::refcount to managed::refcount\n\nMore progress on #2240", "tree": {"sha": "2c7016ccf67bb995f630ae1620c072fe4f3e764b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c7016ccf67bb995f630ae1620c072fe4f3e764b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "html_url": "https://github.com/rust-lang/rust/commit/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8d1b8f8be250b9e19bb70aa0968c1b4a4aec2f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8d1b8f8be250b9e19bb70aa0968c1b4a4aec2f8", "html_url": "https://github.com/rust-lang/rust/commit/d8d1b8f8be250b9e19bb70aa0968c1b4a4aec2f8"}], "stats": {"total": 43, "additions": 20, "deletions": 23}, "files": [{"sha": "a27c8aa4a76da0ac0475290f7c1121941a7afa23", "filename": "src/libstd/managed.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Flibstd%2Fmanaged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Flibstd%2Fmanaged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmanaged.rs?ref=82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "patch": "@@ -17,6 +17,13 @@ use ptr::to_unsafe_ptr;\n pub static RC_MANAGED_UNIQUE : uint = (-2) as uint;\n pub static RC_IMMORTAL : uint = 0x77777777;\n \n+/// Returns the refcount of a shared box (as just before calling this)\n+#[inline]\n+pub fn refcount<T>(t: @T) -> uint {\n+    use unstable::raw::Repr;\n+    unsafe { (*t.repr()).ref_count }\n+}\n+\n /// Determine if two shared boxes point to the same object\n #[inline]\n pub fn ptr_eq<T>(a: @T, b: @T) -> bool {"}, {"sha": "0f38671bfc293b8aa8be163a85f486daf6d4b950", "filename": "src/libstd/sys.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Flibstd%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Flibstd%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys.rs?ref=82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "patch": "@@ -13,22 +13,12 @@\n #[allow(missing_doc)];\n \n use c_str::ToCStr;\n-use cast;\n use libc::size_t;\n use libc;\n use repr;\n use rt::task;\n use str;\n \n-/// Returns the refcount of a shared box (as just before calling this)\n-#[inline]\n-pub fn refcount<T>(t: @T) -> uint {\n-    unsafe {\n-        let ref_ptr: *uint = cast::transmute_copy(&t);\n-        *ref_ptr - 1\n-    }\n-}\n-\n pub fn log_str<T>(t: &T) -> ~str {\n     use rt::io;\n     use rt::io::Decorator;"}, {"sha": "416c932b6c7ff6365e8da5b8657e666d6bf4fa03", "filename": "src/test/run-pass/match-pattern-drop.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-pattern-drop.rs?ref=82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "patch": "@@ -14,11 +14,11 @@\n enum t { make_t(@int), clam, }\n \n fn foo(s: @int) {\n-    info2!(\"{:?}\", ::std::sys::refcount(s));\n-    let count = ::std::sys::refcount(s);\n+    info2!(\"{:?}\", ::std::managed::refcount(s));\n+    let count = ::std::managed::refcount(s);\n     let x: t = make_t(s); // ref up\n-    assert_eq!(::std::sys::refcount(s), count + 1u);\n-    info2!(\"{:?}\", ::std::sys::refcount(s));\n+    assert_eq!(::std::managed::refcount(s), count + 1u);\n+    info2!(\"{:?}\", ::std::managed::refcount(s));\n \n     match x {\n       make_t(y) => {\n@@ -27,19 +27,19 @@ fn foo(s: @int) {\n       }\n       _ => { info2!(\"?\"); fail2!(); }\n     }\n-    info2!(\"{:?}\", ::std::sys::refcount(s));\n-    assert_eq!(::std::sys::refcount(s), count + 1u);\n-    let _ = ::std::sys::refcount(s); // don't get bitten by last-use.\n+    info2!(\"{:?}\", ::std::managed::refcount(s));\n+    assert_eq!(::std::managed::refcount(s), count + 1u);\n+    let _ = ::std::managed::refcount(s); // don't get bitten by last-use.\n }\n \n pub fn main() {\n     let s: @int = @0; // ref up\n \n-    let count = ::std::sys::refcount(s);\n+    let count = ::std::managed::refcount(s);\n \n     foo(s); // ref up then down\n \n-    info2!(\"{}\", ::std::sys::refcount(s));\n-    let count2 = ::std::sys::refcount(s);\n+    info2!(\"{}\", ::std::managed::refcount(s));\n+    let count2 = ::std::managed::refcount(s);\n     assert_eq!(count, count2);\n }"}, {"sha": "6f4c85960356bf089bcdca2f9aa313495c74076e", "filename": "src/test/run-pass/unique-copy-box.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44/src%2Ftest%2Frun-pass%2Funique-copy-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-copy-box.rs?ref=82f5f65076e604ec70a6e09cdbe8dddb8b3b7c44", "patch": "@@ -10,14 +10,14 @@\n \n #[allow(unused_variable)];\n \n-use std::sys;\n+use std::managed;\n \n pub fn main() {\n     let i = ~@1;\n     let j = ~@2;\n-    let rc1 = sys::refcount(*i);\n+    let rc1 = managed::refcount(*i);\n     let j = i.clone();\n-    let rc2 = sys::refcount(*i);\n+    let rc2 = managed::refcount(*i);\n     error2!(\"rc1: {} rc2: {}\", rc1, rc2);\n     assert_eq!(rc1 + 1u, rc2);\n }"}]}