{"sha": "a6d94b9842fad07c62063851fb154e3ebbe35484", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZDk0Yjk4NDJmYWQwN2M2MjA2Mzg1MWZiMTU0ZTNlYmJlMzU0ODQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-29T08:37:56Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-29T08:37:56Z"}, "message": "Update tests", "tree": {"sha": "097c45f6b2651ca12cc01efe2504ee0673f47798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/097c45f6b2651ca12cc01efe2504ee0673f47798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6d94b9842fad07c62063851fb154e3ebbe35484", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d94b9842fad07c62063851fb154e3ebbe35484", "html_url": "https://github.com/rust-lang/rust/commit/a6d94b9842fad07c62063851fb154e3ebbe35484", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6d94b9842fad07c62063851fb154e3ebbe35484/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b53d7806ccb066e7041bcaccc61421a20a4829c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b53d7806ccb066e7041bcaccc61421a20a4829c", "html_url": "https://github.com/rust-lang/rust/commit/8b53d7806ccb066e7041bcaccc61421a20a4829c"}], "stats": {"total": 51, "additions": 26, "deletions": 25}, "files": [{"sha": "507f91113cc767f6930d57ee02bfcfe621e0f094", "filename": "tests/target/chains-visual.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fchains-visual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fchains-visual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fchains-visual.rs?ref=a6d94b9842fad07c62063851fb154e3ebbe35484", "patch": "@@ -28,24 +28,24 @@ fn main() {\n     });\n \n     some_fuuuuuuuuunction().method_call_a(aaaaa, bbbbb, |c| {\n-        let x = c;\n-        x\n-    })\n+                               let x = c;\n+                               x\n+                           })\n                            .method_call_b(aaaaa, bbbbb, |c| {\n-        let x = c;\n-        x\n-    });\n+                               let x = c;\n+                               x\n+                           });\n \n     fffffffffffffffffffffffffffffffffff(a, {\n         SCRIPT_TASK_ROOT.with(|root| {\n                                   *root.borrow_mut() = Some(&script_task);\n                               });\n     });\n \n-    let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum = xxxxxxx.map(|x| x + 5)\n-                                                                          .map(|x| x / 2)\n-                                                                          .fold(0,\n-                                                                                |acc, x| acc + x);\n+    let suuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuuum =\n+        xxxxxxx.map(|x| x + 5)\n+               .map(|x| x / 2)\n+               .fold(0, |acc, x| acc + x);\n \n     aaaaaaaaaaaaaaaa.map(|x| {\n                              x += 1;"}, {"sha": "303d6419a65776e932bb9b64628f27af1c9263eb", "filename": "tests/target/configs-fn_call_indent-block.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fconfigs-fn_call_indent-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fconfigs-fn_call_indent-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_call_indent-block.rs?ref=a6d94b9842fad07c62063851fb154e3ebbe35484", "patch": "@@ -13,9 +13,9 @@ fn main() {\n         \"elit\",\n     );\n     // #1501\n-    let hyper = Arc::new(Client::with_connector(\n-        HttpsConnector::new(TlsClient::new()),\n-    ));\n+    let hyper = Arc::new(Client::with_connector(HttpsConnector::new(\n+        TlsClient::new(),\n+    )));\n \n     // chain\n     let x = yooooooooooooo"}, {"sha": "2158b70a46ff9fb43edf275ebbc8b0f6decc388b", "filename": "tests/target/issue-913.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fissue-913.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fissue-913.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-913.rs?ref=a6d94b9842fad07c62063851fb154e3ebbe35484", "patch": "@@ -10,9 +10,9 @@ mod client {\n             };\n \n             let next_state = match self.state {\n-                State::V5(\n-                    v5::State::Command(v5::comand::State::WriteVersion(ref mut response)),\n-                ) => {\n+                State::V5(v5::State::Command(v5::comand::State::WriteVersion(\n+                    ref mut response,\n+                ))) => {\n                     // The pattern cannot be formatted in a way that the match stays\n                     // within the column limit. The rewrite should therefore be\n                     // skipped."}, {"sha": "83ee4f97b73e822d751dec655dbf2c3ad99c1ae0", "filename": "tests/target/match.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fmatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fmatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmatch.rs?ref=a6d94b9842fad07c62063851fb154e3ebbe35484", "patch": "@@ -255,12 +255,12 @@ fn issue507() {\n \n fn issue508() {\n     match s.type_id() {\n-        Some(\n-            NodeTypeId::Element(ElementTypeId::HTMLElement(HTMLElementTypeId::HTMLCanvasElement)),\n-        ) => true,\n-        Some(\n-            NodeTypeId::Element(ElementTypeId::HTMLElement(HTMLElementTypeId::HTMLObjectElement)),\n-        ) => s.has_object_data(),\n+        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n+            HTMLElementTypeId::HTMLCanvasElement,\n+        ))) => true,\n+        Some(NodeTypeId::Element(ElementTypeId::HTMLElement(\n+            HTMLElementTypeId::HTMLObjectElement,\n+        ))) => s.has_object_data(),\n         Some(NodeTypeId::Element(_)) => false,\n     }\n }"}, {"sha": "6c62affb848f54177302de400312a2615beebad2", "filename": "tests/target/pattern.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d94b9842fad07c62063851fb154e3ebbe35484/tests%2Ftarget%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fpattern.rs?ref=a6d94b9842fad07c62063851fb154e3ebbe35484", "patch": "@@ -47,9 +47,10 @@ fn main() {\n impl<'a, 'b> ResolveGeneratedContentFragmentMutator<'a, 'b> {\n     fn mutate_fragment(&mut self, fragment: &mut Fragment) {\n         match **info {\n-            GeneratedContentInfo::ContentItem(\n-                ContentItem::Counter(ref counter_name, counter_style),\n-            ) => {}\n+            GeneratedContentInfo::ContentItem(ContentItem::Counter(\n+                ref counter_name,\n+                counter_style,\n+            )) => {}\n         }\n     }\n }"}]}