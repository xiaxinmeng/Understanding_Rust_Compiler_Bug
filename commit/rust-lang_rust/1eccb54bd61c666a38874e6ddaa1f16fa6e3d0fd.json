{"sha": "1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlY2NiNTRiZDYxYzY2NmEzODg3NGU2ZGRhYTFmMTZmYTZlM2QwZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-13T11:02:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-12-13T11:02:17Z"}, "message": "auto merge of #19685 : jbranchaud/rust/add-btreemap-iter-doctests, r=Gankro", "tree": {"sha": "81e61fdb2dd131dacdc8f7fc8686807be36e3d22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81e61fdb2dd131dacdc8f7fc8686807be36e3d22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd", "html_url": "https://github.com/rust-lang/rust/commit/1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de64f85c6ec8296e68d859a07ea179d3e69eeeb4", "url": "https://api.github.com/repos/rust-lang/rust/commits/de64f85c6ec8296e68d859a07ea179d3e69eeeb4", "html_url": "https://github.com/rust-lang/rust/commit/de64f85c6ec8296e68d859a07ea179d3e69eeeb4"}, {"sha": "d946426699c8316d587cc382c8a2e7030b53aed5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d946426699c8316d587cc382c8a2e7030b53aed5", "html_url": "https://github.com/rust-lang/rust/commit/d946426699c8316d587cc382c8a2e7030b53aed5"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "3d5067d5a516b2f0620a4ebf7da2053df417feed", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=1eccb54bd61c666a38874e6ddaa1f16fa6e3d0fd", "patch": "@@ -1131,6 +1131,24 @@ impl<K, V> BTreeMap<K, V> {\n     }\n \n     /// Gets a mutable iterator over the entries of the map.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::BTreeMap;\n+    ///\n+    /// let mut map = BTreeMap::new();\n+    /// map.insert(\"a\", 1u);\n+    /// map.insert(\"b\", 2u);\n+    /// map.insert(\"c\", 3u);\n+    ///\n+    /// // add 10 to the value if the key isn't \"a\"\n+    /// for (key, value) in map.iter_mut() {\n+    ///     if key != &\"a\" {\n+    ///         *value += 10;\n+    ///     }\n+    /// }\n+    /// ```\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn iter_mut<'a>(&'a mut self) -> MutEntries<'a, K, V> {\n         let len = self.len();\n@@ -1145,6 +1163,21 @@ impl<K, V> BTreeMap<K, V> {\n     }\n \n     /// Gets an owning iterator over the entries of the map.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::BTreeMap;\n+    ///\n+    /// let mut map = BTreeMap::new();\n+    /// map.insert(1u, \"a\");\n+    /// map.insert(2u, \"b\");\n+    /// map.insert(3u, \"c\");\n+    ///\n+    /// for (key, value) in map.into_iter() {\n+    ///     println!(\"{}: {}\", key, value);\n+    /// }\n+    /// ```\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn into_iter(self) -> MoveEntries<K, V> {\n         let len = self.len();"}]}