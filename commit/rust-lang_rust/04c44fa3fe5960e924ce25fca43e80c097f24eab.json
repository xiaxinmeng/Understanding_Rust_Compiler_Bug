{"sha": "04c44fa3fe5960e924ce25fca43e80c097f24eab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0YzQ0ZmEzZmU1OTYwZTkyNGNlMjVmY2E0M2U4MGMwOTdmMjRlYWI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-09-25T20:52:17Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2017-09-25T20:52:17Z"}, "message": "Update line numbers", "tree": {"sha": "d8436e23a50b141f066a5ff76ac03c50ce430fc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8436e23a50b141f066a5ff76ac03c50ce430fc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04c44fa3fe5960e924ce25fca43e80c097f24eab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04c44fa3fe5960e924ce25fca43e80c097f24eab", "html_url": "https://github.com/rust-lang/rust/commit/04c44fa3fe5960e924ce25fca43e80c097f24eab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04c44fa3fe5960e924ce25fca43e80c097f24eab/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44ecc19a3f25f8741736c05c477047386ff9f2fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/44ecc19a3f25f8741736c05c477047386ff9f2fb", "html_url": "https://github.com/rust-lang/rust/commit/44ecc19a3f25f8741736c05c477047386ff9f2fb"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "f79db778488450be59bd5c6af100e049b1163c6c", "filename": "tests/ui/infinite_iter.stderr", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/04c44fa3fe5960e924ce25fca43e80c097f24eab/tests%2Fui%2Finfinite_iter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/04c44fa3fe5960e924ce25fca43e80c097f24eab/tests%2Fui%2Finfinite_iter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finfinite_iter.stderr?ref=04c44fa3fe5960e924ce25fca43e80c097f24eab", "patch": "@@ -1,99 +1,99 @@\n error: you are collect()ing an iterator and throwing away the result. Consider using an explicit for loop to exhaust the iterator\n-  --> $DIR/infinite_iter.rs:11:5\n+  --> $DIR/infinite_iter.rs:10:5\n    |\n-11 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n+10 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D unused-collect` implied by `-D warnings`\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:11:5\n+  --> $DIR/infinite_iter.rs:10:5\n    |\n-11 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n+10 |     repeat(0_u8).collect::<Vec<_>>(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/infinite_iter.rs:9:8\n+  --> $DIR/infinite_iter.rs:8:8\n    |\n-9  | #[deny(infinite_iter)]\n+8  | #[deny(infinite_iter)]\n    |        ^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:12:5\n+  --> $DIR/infinite_iter.rs:11:5\n    |\n-12 |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n+11 |     (0..8_u32).take_while(square_is_lower_64).cycle().count(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:13:5\n+  --> $DIR/infinite_iter.rs:12:5\n    |\n-13 |     (0..8_u64).chain(0..).max(); // infinite iter\n+12 |     (0..8_u64).chain(0..).max(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:15:5\n+  --> $DIR/infinite_iter.rs:14:5\n    |\n-15 |     (0..8_u32).rev().cycle().map(|x| x + 1_u32).for_each(|x| println!(\"{}\", x)); // infinite iter\n+14 |     (0..8_u32).rev().cycle().map(|x| x + 1_u32).for_each(|x| println!(\"{}\", x)); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:17:5\n+  --> $DIR/infinite_iter.rs:16:5\n    |\n-17 |     (0_usize..).flat_map(|x| 0..x).product::<usize>();  // infinite iter\n+16 |     (0_usize..).flat_map(|x| 0..x).product::<usize>();  // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: infinite iteration detected\n-  --> $DIR/infinite_iter.rs:18:5\n+  --> $DIR/infinite_iter.rs:17:5\n    |\n-18 |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n+17 |     (0_u64..).filter(|x| x % 2 == 0).last(); // infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:25:5\n+  --> $DIR/infinite_iter.rs:24:5\n    |\n-25 |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n+24 |     (0..).zip((0..).take_while(square_is_lower_64)).count(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n-  --> $DIR/infinite_iter.rs:23:8\n+  --> $DIR/infinite_iter.rs:22:8\n    |\n-23 | #[deny(maybe_infinite_iter)]\n+22 | #[deny(maybe_infinite_iter)]\n    |        ^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:26:5\n+  --> $DIR/infinite_iter.rs:25:5\n    |\n-26 |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n+25 |     repeat(42).take_while(|x| *x == 42).chain(0..42).max(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:27:5\n+  --> $DIR/infinite_iter.rs:26:5\n    |\n-27 |     (1..).scan(0, |state, x| { *state += x; Some(*state) }).min(); // maybe infinite iter\n+26 |     (1..).scan(0, |state, x| { *state += x; Some(*state) }).min(); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:28:5\n+  --> $DIR/infinite_iter.rs:27:5\n    |\n-28 |     (0..).find(|x| *x == 24); // maybe infinite iter\n+27 |     (0..).find(|x| *x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:29:5\n+  --> $DIR/infinite_iter.rs:28:5\n    |\n-29 |     (0..).position(|x| x == 24); // maybe infinite iter\n+28 |     (0..).position(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:30:5\n+  --> $DIR/infinite_iter.rs:29:5\n    |\n-30 |     (0..).any(|x| x == 24); // maybe infinite iter\n+29 |     (0..).any(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: possible infinite iteration detected\n-  --> $DIR/infinite_iter.rs:31:5\n+  --> $DIR/infinite_iter.rs:30:5\n    |\n-31 |     (0..).all(|x| x == 24); // maybe infinite iter\n+30 |     (0..).all(|x| x == 24); // maybe infinite iter\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 14 previous errors"}]}