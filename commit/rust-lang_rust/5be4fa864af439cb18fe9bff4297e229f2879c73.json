{"sha": "5be4fa864af439cb18fe9bff4297e229f2879c73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZTRmYTg2NGFmNDM5Y2IxOGZlOWJmZjQyOTdlMjI5ZjI4NzljNzM=", "commit": {"author": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-06-29T13:35:09Z"}, "committer": {"name": "gaurikholkar", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2017-06-29T13:37:18Z"}, "message": "code fixes for error code use warning", "tree": {"sha": "9a9b3576ba0d4862d35cdd08237f0e320b916379", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a9b3576ba0d4862d35cdd08237f0e320b916379"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5be4fa864af439cb18fe9bff4297e229f2879c73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5be4fa864af439cb18fe9bff4297e229f2879c73", "html_url": "https://github.com/rust-lang/rust/commit/5be4fa864af439cb18fe9bff4297e229f2879c73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5be4fa864af439cb18fe9bff4297e229f2879c73/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5841021f071f7e6393e3ee510c4e02f44cb0fbee", "url": "https://api.github.com/repos/rust-lang/rust/commits/5841021f071f7e6393e3ee510c4e02f44cb0fbee", "html_url": "https://github.com/rust-lang/rust/commit/5841021f071f7e6393e3ee510c4e02f44cb0fbee"}], "stats": {"total": 38, "additions": 16, "deletions": 22}, "files": [{"sha": "ccbc5cdb862f98eb96f26880a857b7091d3cbef9", "filename": "src/librustc/infer/error_reporting/named_anon_conflict.rs", "status": "modified", "additions": 16, "deletions": 22, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5be4fa864af439cb18fe9bff4297e229f2879c73/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnamed_anon_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5be4fa864af439cb18fe9bff4297e229f2879c73/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnamed_anon_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fnamed_anon_conflict.rs?ref=5be4fa864af439cb18fe9bff4297e229f2879c73", "patch": "@@ -131,29 +131,23 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             return false;\n         }\n \n-        if let Some(simple_name) = arg.pat.simple_name() {\n-            struct_span_err!(self.tcx.sess,\n-                             span,\n-                             E0621,\n-                             \"explicit lifetime required in the type of `{}`\",\n-                             simple_name)\n-                    .span_label(arg.pat.span,\n-                                format!(\"consider changing the type of `{}` to `{}`\",\n-                                        simple_name,\n-                                        new_ty))\n-                    .span_label(span, format!(\"lifetime `{}` required\", named))\n-                    .emit();\n-\n+        let (error_var, span_label_var) = if let Some(simple_name) = arg.pat.simple_name() {\n+            (format!(\"the type of `{}`\", simple_name), format!(\"the type of `{}`\", simple_name))\n         } else {\n-            struct_span_err!(self.tcx.sess,\n-                             span,\n-                             E0621,\n-                             \"explicit lifetime required in parameter type\")\n-                    .span_label(arg.pat.span,\n-                                format!(\"consider changing type to `{}`\", new_ty))\n-                    .span_label(span, format!(\"lifetime `{}` required\", named))\n-                    .emit();\n-        }\n+            (format!(\"parameter type\"), format!(\"type\"))\n+        };\n+\n+\n+        struct_span_err!(self.tcx.sess,\n+                         span,\n+                         E0621,\n+                         \"explicit lifetime required in {}\",\n+                         error_var)\n+                .span_label(arg.pat.span,\n+                            format!(\"consider changing {} to `{}`\", span_label_var, new_ty))\n+                .span_label(span, format!(\"lifetime `{}` required\", named))\n+                .emit();\n+\n         return true;\n \n     }"}]}