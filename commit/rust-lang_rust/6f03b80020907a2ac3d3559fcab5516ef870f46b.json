{"sha": "6f03b80020907a2ac3d3559fcab5516ef870f46b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMDNiODAwMjA5MDdhMmFjM2QzNTU5ZmNhYjU1MTZlZjg3MGY0NmI=", "commit": {"author": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2017-12-08T15:07:47Z"}, "committer": {"name": "Irina Popa", "email": "irinagpopa@gmail.com", "date": "2018-04-26T13:39:27Z"}, "message": "rustc_back: move LinkerFlavor, PanicStrategy, and RelroLevel to target.", "tree": {"sha": "13eaf9ffa5bc354663c69a41c70e3314813b5ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13eaf9ffa5bc354663c69a41c70e3314813b5ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f03b80020907a2ac3d3559fcab5516ef870f46b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f03b80020907a2ac3d3559fcab5516ef870f46b", "html_url": "https://github.com/rust-lang/rust/commit/6f03b80020907a2ac3d3559fcab5516ef870f46b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f03b80020907a2ac3d3559fcab5516ef870f46b/comments", "author": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "irinagpopa", "id": 32459019, "node_id": "MDQ6VXNlcjMyNDU5MDE5", "avatar_url": "https://avatars.githubusercontent.com/u/32459019?v=4", "gravatar_id": "", "url": "https://api.github.com/users/irinagpopa", "html_url": "https://github.com/irinagpopa", "followers_url": "https://api.github.com/users/irinagpopa/followers", "following_url": "https://api.github.com/users/irinagpopa/following{/other_user}", "gists_url": "https://api.github.com/users/irinagpopa/gists{/gist_id}", "starred_url": "https://api.github.com/users/irinagpopa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/irinagpopa/subscriptions", "organizations_url": "https://api.github.com/users/irinagpopa/orgs", "repos_url": "https://api.github.com/users/irinagpopa/repos", "events_url": "https://api.github.com/users/irinagpopa/events{/privacy}", "received_events_url": "https://api.github.com/users/irinagpopa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88cd36714c6d62393f18d8efa2ea2724e1ec4a9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/88cd36714c6d62393f18d8efa2ea2724e1ec4a9d", "html_url": "https://github.com/rust-lang/rust/commit/88cd36714c6d62393f18d8efa2ea2724e1ec4a9d"}], "stats": {"total": 580, "additions": 240, "deletions": 340}, "files": [{"sha": "ba22e09cb3116c2c26922b86ea2b0ce5c6841b95", "filename": "src/librustc/ich/impls_misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fich%2Fimpls_misc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fich%2Fimpls_misc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_misc.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -20,7 +20,7 @@ impl_stable_hash_for!(enum ::session::search_paths::PathKind {\n     All\n });\n \n-impl_stable_hash_for!(enum ::rustc_back::PanicStrategy {\n+impl_stable_hash_for!(enum ::rustc_back::target::PanicStrategy {\n     Abort,\n     Unwind\n });"}, {"sha": "3b005689ca4e806dd6f450d3b619fe38a62f39bd", "filename": "src/librustc/middle/dependency_format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdependency_format.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -69,7 +69,7 @@ use ty::TyCtxt;\n use middle::cstore::{self, DepKind};\n use middle::cstore::LinkagePreference::{self, RequireStatic, RequireDynamic};\n use util::nodemap::FxHashMap;\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n \n /// A list of dependencies for a certain crate type.\n ///"}, {"sha": "fdb804e1cce02cc1364b8a3db88e3d81f5c4ef43", "filename": "src/librustc/middle/weak_lang_items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fweak_lang_items.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -13,7 +13,7 @@\n use session::config;\n use middle::lang_items;\n \n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use syntax::ast;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;"}, {"sha": "72dcc39298094553402721b1831a9ad349f378c8", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -22,7 +22,7 @@ use session::{early_error, early_warn, Session};\n use session::search_paths::SearchPaths;\n \n use ich::StableHashingContext;\n-use rustc_back::{LinkerFlavor, PanicStrategy, RelroLevel};\n+use rustc_back::target::{LinkerFlavor, PanicStrategy, RelroLevel};\n use rustc_back::target::{Target, TargetTriple};\n use rustc_data_structures::stable_hasher::ToStableHashKey;\n use lint;\n@@ -770,7 +770,7 @@ macro_rules! options {\n         pub const parse_sanitizer: Option<&'static str> =\n             Some(\"one of: `address`, `leak`, `memory` or `thread`\");\n         pub const parse_linker_flavor: Option<&'static str> =\n-            Some(::rustc_back::LinkerFlavor::one_of());\n+            Some(::rustc_back::target::LinkerFlavor::one_of());\n         pub const parse_optimization_fuel: Option<&'static str> =\n             Some(\"crate=integer\");\n         pub const parse_unpretty: Option<&'static str> =\n@@ -782,7 +782,7 @@ macro_rules! options {\n     #[allow(dead_code)]\n     mod $mod_set {\n         use super::{$struct_name, Passes, SomePasses, AllPasses, Sanitizer, Lto};\n-        use rustc_back::{LinkerFlavor, PanicStrategy, RelroLevel};\n+        use rustc_back::target::{LinkerFlavor, PanicStrategy, RelroLevel};\n         use std::path::PathBuf;\n \n         $(\n@@ -2323,7 +2323,7 @@ mod dep_tracking {\n     use super::{CrateType, DebugInfoLevel, ErrorOutputType, Lto, OptLevel, OutputTypes,\n                 Passes, Sanitizer};\n     use syntax::feature_gate::UnstableFeatures;\n-    use rustc_back::{PanicStrategy, RelroLevel};\n+    use rustc_back::target::{PanicStrategy, RelroLevel};\n     use rustc_back::target::TargetTriple;\n     use syntax::edition::Edition;\n \n@@ -2456,7 +2456,7 @@ mod tests {\n     use std::iter::FromIterator;\n     use std::path::PathBuf;\n     use super::{Externs, OutputType, OutputTypes};\n-    use rustc_back::{PanicStrategy, RelroLevel};\n+    use rustc_back::target::{PanicStrategy, RelroLevel};\n     use syntax::symbol::Symbol;\n     use syntax::edition::{Edition, DEFAULT_EDITION};\n     use syntax;"}, {"sha": "e21ed9eefde1f8825f3887a9b5a5a7adc2de4b15", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -41,7 +41,7 @@ use syntax::{ast, codemap};\n use syntax::feature_gate::AttributeType;\n use syntax_pos::{MultiSpan, Span};\n \n-use rustc_back::{LinkerFlavor, PanicStrategy};\n+use rustc_back::target::{LinkerFlavor, PanicStrategy};\n use rustc_back::target::{Target, TargetTriple};\n use rustc_data_structures::flock;\n use jobserver::Client;"}, {"sha": "d0783e1a4b8d30f22e6e4ff212161fd5670ab434", "filename": "src/librustc/ty/maps/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps%2Fmod.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -45,7 +45,7 @@ use util::nodemap::{DefIdSet, DefIdMap, ItemLocalSet};\n use util::common::{profq_msg, ErrorReported, ProfileQueriesMsg};\n \n use rustc_data_structures::indexed_set::IdxSetBuf;\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::stable_hasher::StableVec;"}, {"sha": "5a2b3d313865bf305d2b68d0ae0e6d590e5f3ed5", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 0, "deletions": 131, "changes": 131, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -37,134 +37,3 @@ extern crate serialize;\n extern crate serialize as rustc_serialize; // used by deriving\n \n pub mod target;\n-\n-use std::str::FromStr;\n-\n-use serialize::json::{Json, ToJson};\n-\n-#[derive(Clone, Copy, Debug, Eq, Ord, PartialEq, PartialOrd, Hash,\n-         RustcEncodable, RustcDecodable)]\n-pub enum LinkerFlavor {\n-    Em,\n-    Gcc,\n-    Ld,\n-    Msvc,\n-    Lld(LldFlavor),\n-}\n-\n-#[derive(Clone, Copy, Debug, Eq, Ord, PartialEq, PartialOrd, Hash,\n-         RustcEncodable, RustcDecodable)]\n-pub enum LldFlavor {\n-    Wasm,\n-    Ld64,\n-    Ld,\n-    Link,\n-}\n-\n-impl ToJson for LinkerFlavor {\n-    fn to_json(&self) -> Json {\n-        self.desc().to_json()\n-    }\n-}\n-macro_rules! flavor_mappings {\n-    ($((($($flavor:tt)*), $string:expr),)*) => (\n-        impl LinkerFlavor {\n-            pub const fn one_of() -> &'static str {\n-                concat!(\"one of: \", $($string, \" \",)+)\n-            }\n-\n-            pub fn from_str(s: &str) -> Option<Self> {\n-                Some(match s {\n-                    $($string => $($flavor)*,)+\n-                    _ => return None,\n-                })\n-            }\n-\n-            pub fn desc(&self) -> &str {\n-                match *self {\n-                    $($($flavor)* => $string,)+\n-                }\n-            }\n-        }\n-    )\n-}\n-\n-\n-flavor_mappings! {\n-    ((LinkerFlavor::Em), \"em\"),\n-    ((LinkerFlavor::Gcc), \"gcc\"),\n-    ((LinkerFlavor::Ld), \"ld\"),\n-    ((LinkerFlavor::Msvc), \"msvc\"),\n-    ((LinkerFlavor::Lld(LldFlavor::Wasm)), \"wasm-ld\"),\n-    ((LinkerFlavor::Lld(LldFlavor::Ld64)), \"ld64.lld\"),\n-    ((LinkerFlavor::Lld(LldFlavor::Ld)), \"ld.lld\"),\n-    ((LinkerFlavor::Lld(LldFlavor::Link)), \"lld-link\"),\n-}\n-\n-#[derive(Clone, Copy, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n-pub enum PanicStrategy {\n-    Unwind,\n-    Abort,\n-}\n-\n-impl PanicStrategy {\n-    pub fn desc(&self) -> &str {\n-        match *self {\n-            PanicStrategy::Unwind => \"unwind\",\n-            PanicStrategy::Abort => \"abort\",\n-        }\n-    }\n-}\n-\n-impl ToJson for PanicStrategy {\n-    fn to_json(&self) -> Json {\n-        match *self {\n-            PanicStrategy::Abort => \"abort\".to_json(),\n-            PanicStrategy::Unwind => \"unwind\".to_json(),\n-        }\n-    }\n-}\n-\n-#[derive(Clone, Copy, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n-pub enum RelroLevel {\n-    Full,\n-    Partial,\n-    Off,\n-    None,\n-}\n-\n-impl RelroLevel {\n-    pub fn desc(&self) -> &str {\n-        match *self {\n-            RelroLevel::Full => \"full\",\n-            RelroLevel::Partial => \"partial\",\n-            RelroLevel::Off => \"off\",\n-            RelroLevel::None => \"none\",\n-        }\n-    }\n-}\n-\n-impl FromStr for RelroLevel {\n-    type Err = ();\n-\n-    fn from_str(s: &str) -> Result<RelroLevel, ()> {\n-        match s {\n-            \"full\" => Ok(RelroLevel::Full),\n-            \"partial\" => Ok(RelroLevel::Partial),\n-            \"off\" => Ok(RelroLevel::Off),\n-            \"none\" => Ok(RelroLevel::None),\n-            _ => Err(()),\n-        }\n-    }\n-}\n-\n-impl ToJson for RelroLevel {\n-    fn to_json(&self) -> Json {\n-        match *self {\n-            RelroLevel::Full => \"full\".to_json(),\n-            RelroLevel::Partial => \"partial\".to_json(),\n-            RelroLevel::Off => \"off\".to_json(),\n-            RelroLevel::None => \"None\".to_json(),\n-        }\n-    }\n-}"}, {"sha": "5bded7c9ff3ad9a7992bcda6da554091e89af014", "filename": "src/librustc_back/target/aarch64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_apple_ios.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "38ddb3d2878b46bd9092ecb84f00d91a6ad431e5", "filename": "src/librustc_back/target/aarch64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_linux_android.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#arm64-v8a\n // for target ABI requirements."}, {"sha": "81de7ec529a016e4b663df85b20db399f44ece9f", "filename": "src/librustc_back/target/aarch64_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_cloudabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "3dc77efb8f9c7e5b1611eadc9291775de0218cb4", "filename": "src/librustc_back/target/aarch64_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_freebsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "d4fc211e019bdf48de0321b67f47b1efb6d5f2a5", "filename": "src/librustc_back/target/aarch64_unknown_fuchsia.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_fuchsia.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();"}, {"sha": "e84b4a88adbb6646b3bd9d5871f805f5086535cc", "filename": "src/librustc_back/target/aarch64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "d6207ac141ad824f2fa16c79d5e8bc6c04351c83", "filename": "src/librustc_back/target/aarch64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Faarch64_unknown_linux_musl.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "c2f7eeddcf873bdd9a0b7990f232c2a803afc0fe", "filename": "src/librustc_back/target/android_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fandroid_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::TargetOptions;\n+use target::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();"}, {"sha": "74aa955432c6917c23160b5a67ce9ba676ff81ed", "filename": "src/librustc_back/target/apple_ios_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fapple_ios_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fapple_ios_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fapple_ios_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,10 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n use std::io;\n use std::process::Command;\n-use target::{LinkArgs, TargetOptions};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions};\n \n use self::Arch::*;\n "}, {"sha": "535b15f246c1961040eea07a5c17f5a69f25a572", "filename": "src/librustc_back/target/arm_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_linux_androideabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();"}, {"sha": "6a734d643fc0420cecd3dc4f794bb9d061333c0e", "filename": "src/librustc_back/target/arm_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "055fef0760df8e42d2b4dae34569e07ac7c3ff6d", "filename": "src/librustc_back/target/arm_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_gnueabihf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "d20daa7fb370130ed802dea3aa18ec72563c9f7d", "filename": "src/librustc_back/target/arm_unknown_linux_musleabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "6d11181e8982ffdfe3555505898b234e3e35dacf", "filename": "src/librustc_back/target/arm_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farm_unknown_linux_musleabihf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "fce45c0cebf23ba0786164b90fb85fab45a978a8", "filename": "src/librustc_back/target/armv4t_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv4t_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv4t_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv4t_unknown_linux_gnueabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();"}, {"sha": "d9ceafede29692593dba6929dd774c858f910ca3", "filename": "src/librustc_back/target/armv5te_unknown_linux_gnueabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv5te_unknown_linux_gnueabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv5te_unknown_linux_gnueabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv5te_unknown_linux_gnueabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();"}, {"sha": "c3c8f27a8838ec355ac49dbaf7a6160d10b6fdda", "filename": "src/librustc_back/target/armv7_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_apple_ios.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "900026d2393681bae6ec62c881733a3671729f17", "filename": "src/librustc_back/target/armv7_linux_androideabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_linux_androideabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_linux_androideabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_linux_androideabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#v7a\n // for target ABI requirements."}, {"sha": "017376444ba2deda3d66756b5ec0e2d133478c6c", "filename": "src/librustc_back/target/armv7_unknown_cloudabi_eabihf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_cloudabi_eabihf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "1353eac4a1a7882ef23347dfb5e3f212431a5895", "filename": "src/librustc_back/target/armv7_unknown_linux_gnueabihf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_gnueabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_gnueabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_gnueabihf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_base::opts();"}, {"sha": "95c27f89f42fa78cbcc7c0e2bd650e246a0f8dcd", "filename": "src/librustc_back/target/armv7_unknown_linux_musleabihf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7_unknown_linux_musleabihf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     let base = super::linux_musl_base::opts();"}, {"sha": "ea55ee0646bb40400305bb60fbafe9687d34564a", "filename": "src/librustc_back/target/armv7s_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Farmv7s_apple_ios.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "e2cf714f0ead307175ee91bdee7762c53c119b64", "filename": "src/librustc_back/target/asmjs_unknown_emscripten.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fasmjs_unknown_emscripten.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use super::{LinkArgs, Target, TargetOptions};\n+use super::{LinkArgs, LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Result<Target, String> {\n     let mut args = LinkArgs::new();"}, {"sha": "2f283cf3e40e443fef08b9b95ae1a41ae56ccd8b", "filename": "src/librustc_back/target/cloudabi_base.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fcloudabi_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fcloudabi_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fcloudabi_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions, RelroLevel};\n-use std::default::Default;\n+use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n \n pub fn opts() -> TargetOptions {\n     let mut args = LinkArgs::new();"}, {"sha": "fc0fb4950e7a4c24174a5f4e4dba5c7a18b42a77", "filename": "src/librustc_back/target/dragonfly_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fdragonfly_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions, RelroLevel};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "19f5bf3f6c42ad46fb0cfc68570847dcc7dca1d0", "filename": "src/librustc_back/target/freebsd_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffreebsd_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions, RelroLevel};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "1a09d16cc9106e5cae8026e9f103b45a88c467d3", "filename": "src/librustc_back/target/fuchsia_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Ffuchsia_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Ffuchsia_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Ffuchsia_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "3a17ae484afa81c59bab63908404dc7900dc7e5e", "filename": "src/librustc_back/target/i386_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi386_apple_ios.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "0341684a3591081d2461e77b421c088386f1cc9e", "filename": "src/librustc_back/target/i686_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_apple_darwin.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();"}, {"sha": "bbc50c7d418c1d50ac2074db8bfd9bfc40fca9e0", "filename": "src/librustc_back/target/i686_linux_android.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_linux_android.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n // See https://developer.android.com/ndk/guides/abis.html#x86\n // for target ABI requirements."}, {"sha": "f93998ab7eb1530a1529d13d4874b058150f2e16", "filename": "src/librustc_back/target/i686_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_base::opts();"}, {"sha": "1607330f81395f7c3d72bc17f5baff70b22ddc11", "filename": "src/librustc_back/target/i686_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_pc_windows_msvc.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();"}, {"sha": "511c9a78c812e33f2cece85c9a29ffd5bd9d885e", "filename": "src/librustc_back/target/i686_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_cloudabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "995f00b5a628b83e34e53f992739914779155b73", "filename": "src/librustc_back/target/i686_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_dragonfly.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::dragonfly_base::opts();"}, {"sha": "fe2044e631dc7fdce66739fe1b05ca9d0ff587cd", "filename": "src/librustc_back/target/i686_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_freebsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "0561138bbb1854efa145690007c3ddcebd9be186", "filename": "src/librustc_back/target/i686_unknown_haiku.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_haiku.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::haiku_base::opts();"}, {"sha": "fc12d399de770a5ca30c9e3ddaed5cb793967bd0", "filename": "src/librustc_back/target/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "afc66650db3514ca247926827e776c4bc528d337", "filename": "src/librustc_back/target/i686_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_linux_musl.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "f4cee8026fdff454453c4cdd5c33dbf9f38d6cb7", "filename": "src/librustc_back/target/i686_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_netbsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "c3aef580a2cfe662bec55f3871f3d872d79ec23c", "filename": "src/librustc_back/target/i686_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fi686_unknown_openbsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();"}, {"sha": "05e3d0b1f4f969578cdbe2d0cec360ed8edbc1b3", "filename": "src/librustc_back/target/l4re_base.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fl4re_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fl4re_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fl4re_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,9 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use PanicStrategy;\n-use target::{LinkArgs, TargetOptions};\n+use target::{LinkArgs, LinkerFlavor, PanicStrategy, TargetOptions};\n use std::default::Default;\n //use std::process::Command;\n "}, {"sha": "a993590733e9b247732aff0b8549db8d4957423b", "filename": "src/librustc_back/target/linux_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions, RelroLevel};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "ec0641bb719101ab964377652b73cedd7bb8b65e", "filename": "src/librustc_back/target/linux_musl_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Flinux_musl_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Flinux_musl_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Flinux_musl_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::TargetOptions;\n+use target::{LinkerFlavor, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();"}, {"sha": "7fe7d7a79b2d2c7ac7737cefae95e500fa0e7b6f", "filename": "src/librustc_back/target/mips64_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips64_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips64_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips64_unknown_linux_gnuabi64.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "097b286426c9ae663ca92ae3a37e1379dbaddf54", "filename": "src/librustc_back/target/mips64el_unknown_linux_gnuabi64.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips64el_unknown_linux_gnuabi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips64el_unknown_linux_gnuabi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips64el_unknown_linux_gnuabi64.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "e7f7abe6ed8dd1cf77cfece2bdc8811d54f9dcb2", "filename": "src/librustc_back/target/mips_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "f55f9d07d37a19fdc3e8ed9f7f279b48237b24d2", "filename": "src/librustc_back/target/mips_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_musl.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "a6f13eea45b00fdc63dd3441c7b14b85b858244e", "filename": "src/librustc_back/target/mips_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmips_unknown_linux_uclibc.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "cb23611c72b6be8e5b9be98004cad119a7374c27", "filename": "src/librustc_back/target/mipsel_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "a45ce590ca624a06a4691732a197b48e5e4278ff", "filename": "src/librustc_back/target/mipsel_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_musl.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "75c554ebd6b5099adbf2a845d12d18c7973abe0f", "filename": "src/librustc_back/target/mipsel_unknown_linux_uclibc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmipsel_unknown_linux_uclibc.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "bfee274262f3b3958f6d83f237848298d609ab2a", "filename": "src/librustc_back/target/mod.rs", "status": "modified", "additions": 128, "deletions": 2, "changes": 130, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmod.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -49,10 +49,9 @@ use std::collections::BTreeMap;\n use std::default::Default;\n use std::{fmt, io};\n use std::path::{Path, PathBuf};\n+use std::str::FromStr;\n use syntax::abi::{Abi, lookup as lookup_abi};\n \n-use {LinkerFlavor, PanicStrategy, RelroLevel};\n-\n mod android_base;\n mod apple_base;\n mod apple_ios_base;\n@@ -74,6 +73,133 @@ mod l4re_base;\n mod fuchsia_base;\n mod redox_base;\n \n+#[derive(Clone, Copy, Debug, Eq, Ord, PartialEq, PartialOrd, Hash,\n+         RustcEncodable, RustcDecodable)]\n+pub enum LinkerFlavor {\n+    Em,\n+    Gcc,\n+    Ld,\n+    Msvc,\n+    Lld(LldFlavor),\n+}\n+\n+#[derive(Clone, Copy, Debug, Eq, Ord, PartialEq, PartialOrd, Hash,\n+         RustcEncodable, RustcDecodable)]\n+pub enum LldFlavor {\n+    Wasm,\n+    Ld64,\n+    Ld,\n+    Link,\n+}\n+\n+impl ToJson for LinkerFlavor {\n+    fn to_json(&self) -> Json {\n+        self.desc().to_json()\n+    }\n+}\n+macro_rules! flavor_mappings {\n+    ($((($($flavor:tt)*), $string:expr),)*) => (\n+        impl LinkerFlavor {\n+            pub const fn one_of() -> &'static str {\n+                concat!(\"one of: \", $($string, \" \",)+)\n+            }\n+\n+            pub fn from_str(s: &str) -> Option<Self> {\n+                Some(match s {\n+                    $($string => $($flavor)*,)+\n+                    _ => return None,\n+                })\n+            }\n+\n+            pub fn desc(&self) -> &str {\n+                match *self {\n+                    $($($flavor)* => $string,)+\n+                }\n+            }\n+        }\n+    )\n+}\n+\n+\n+flavor_mappings! {\n+    ((LinkerFlavor::Em), \"em\"),\n+    ((LinkerFlavor::Gcc), \"gcc\"),\n+    ((LinkerFlavor::Ld), \"ld\"),\n+    ((LinkerFlavor::Msvc), \"msvc\"),\n+    ((LinkerFlavor::Lld(LldFlavor::Wasm)), \"wasm-ld\"),\n+    ((LinkerFlavor::Lld(LldFlavor::Ld64)), \"ld64.lld\"),\n+    ((LinkerFlavor::Lld(LldFlavor::Ld)), \"ld.lld\"),\n+    ((LinkerFlavor::Lld(LldFlavor::Link)), \"lld-link\"),\n+}\n+\n+#[derive(Clone, Copy, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n+pub enum PanicStrategy {\n+    Unwind,\n+    Abort,\n+}\n+\n+impl PanicStrategy {\n+    pub fn desc(&self) -> &str {\n+        match *self {\n+            PanicStrategy::Unwind => \"unwind\",\n+            PanicStrategy::Abort => \"abort\",\n+        }\n+    }\n+}\n+\n+impl ToJson for PanicStrategy {\n+    fn to_json(&self) -> Json {\n+        match *self {\n+            PanicStrategy::Abort => \"abort\".to_json(),\n+            PanicStrategy::Unwind => \"unwind\".to_json(),\n+        }\n+    }\n+}\n+\n+#[derive(Clone, Copy, Debug, PartialEq, Hash, RustcEncodable, RustcDecodable)]\n+pub enum RelroLevel {\n+    Full,\n+    Partial,\n+    Off,\n+    None,\n+}\n+\n+impl RelroLevel {\n+    pub fn desc(&self) -> &str {\n+        match *self {\n+            RelroLevel::Full => \"full\",\n+            RelroLevel::Partial => \"partial\",\n+            RelroLevel::Off => \"off\",\n+            RelroLevel::None => \"none\",\n+        }\n+    }\n+}\n+\n+impl FromStr for RelroLevel {\n+    type Err = ();\n+\n+    fn from_str(s: &str) -> Result<RelroLevel, ()> {\n+        match s {\n+            \"full\" => Ok(RelroLevel::Full),\n+            \"partial\" => Ok(RelroLevel::Partial),\n+            \"off\" => Ok(RelroLevel::Off),\n+            \"none\" => Ok(RelroLevel::None),\n+            _ => Err(()),\n+        }\n+    }\n+}\n+\n+impl ToJson for RelroLevel {\n+    fn to_json(&self) -> Json {\n+        match *self {\n+            RelroLevel::Full => \"full\".to_json(),\n+            RelroLevel::Partial => \"partial\".to_json(),\n+            RelroLevel::Off => \"off\".to_json(),\n+            RelroLevel::None => \"None\".to_json(),\n+        }\n+    }\n+}\n+\n pub type LinkArgs = BTreeMap<LinkerFlavor, Vec<String>>;\n pub type TargetResult = Result<Target, String>;\n "}, {"sha": "c21161e89b9d4d1c29b02ddb923bb1eff335ed23", "filename": "src/librustc_back/target/msp430_none_elf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use {LinkerFlavor, PanicStrategy};\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, PanicStrategy, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "397205a8afed02f6d7b76f295599d47beda78fc4", "filename": "src/librustc_back/target/netbsd_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fnetbsd_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions, RelroLevel};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "fda8f2feaf4ce12abc703a99c12b9e1de31a880c", "filename": "src/librustc_back/target/openbsd_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fopenbsd_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions, RelroLevel};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions, RelroLevel};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "ca3b1c6d2e0eabaae695a1badd304ab0a0ec8246", "filename": "src/librustc_back/target/powerpc64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fpowerpc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fpowerpc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fpowerpc64_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult, RelroLevel};\n+use target::{LinkerFlavor, Target, TargetResult, RelroLevel};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "a8a3e49efa18ee5db1f6de275ae90baf1159376a", "filename": "src/librustc_back/target/powerpc64le_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fpowerpc64le_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fpowerpc64le_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fpowerpc64le_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "f5ccf79910a607c6d46dfa9ea37313984dfa9b85", "filename": "src/librustc_back/target/powerpc_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fpowerpc_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fpowerpc_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fpowerpc_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "06a6443de3811e79ed2be9f686a49d965f5a4d6b", "filename": "src/librustc_back/target/redox_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fredox_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "92e6f7aba68eb6fcd50440f79e23569c59e000f2", "filename": "src/librustc_back/target/s390x_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fs390x_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fs390x_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fs390x_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "a79e314d503774f81b8a2f98639b7068e81b1a5f", "filename": "src/librustc_back/target/sparc64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fsparc64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fsparc64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fsparc64_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "07e1efa30636814fe46d2d24e0084af054bf4752", "filename": "src/librustc_back/target/sparc64_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fsparc64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fsparc64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fsparc64_unknown_netbsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "65eb61d7dbd65a1c7716b294b06bfa24ec479568", "filename": "src/librustc_back/target/sparcv9_sun_solaris.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fsparcv9_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fsparcv9_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fsparcv9_sun_solaris.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::solaris_base::opts();"}, {"sha": "9db4104607b0955c63f57a435556b28e47647456", "filename": "src/librustc_back/target/thumb_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumb_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -35,9 +35,8 @@\n // differentiate these targets from our other `arm(v7)-*-*-gnueabi(hf)` targets in the context of\n // build scripts / gcc flags.\n \n-use PanicStrategy;\n use std::default::Default;\n-use target::TargetOptions;\n+use target::{PanicStrategy, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     // See rust-lang/rfcs#1645 for a discussion about these defaults"}, {"sha": "0b95573aa0c18be03d60bba4f35ba4fdfaab3255", "filename": "src/librustc_back/target/thumbv6m_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv6m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv6m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumbv6m_none_eabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -10,8 +10,7 @@\n \n // Targets the Cortex-M0, Cortex-M0+ and Cortex-M1 processors (ARMv6-M architecture)\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "0931e6261d23fe72b19e31817e3a1e9f0c9d7c14", "filename": "src/librustc_back/target/thumbv7em_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv7em_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv7em_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumbv7em_none_eabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -19,8 +19,7 @@\n // To opt-in to hardware accelerated floating point operations, you can use, for example,\n // `-C target-feature=+vfp4` or `-C target-cpu=cortex-m4`.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "0b7a9bfb611ce9b31e860b970d818503016863f3", "filename": "src/librustc_back/target/thumbv7em_none_eabihf.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv7em_none_eabihf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv7em_none_eabihf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumbv7em_none_eabihf.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -18,8 +18,7 @@\n //\n // To opt into double precision hardware support, use the `-C target-feature=-fp-only-sp` flag.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "c35ac4b5685427b04e66faa45fb7d73a809e30bf", "filename": "src/librustc_back/target/thumbv7m_none_eabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv7m_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fthumbv7m_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fthumbv7m_none_eabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -10,8 +10,7 @@\n \n // Targets the Cortex-M3 processor (ARMv7-M)\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n \n pub fn target() -> TargetResult {\n     Ok(Target {"}, {"sha": "164df20f84f344841f8e54a8ef58d645bdf625b7", "filename": "src/librustc_back/target/wasm32_experimental_emscripten.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwasm32_experimental_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwasm32_experimental_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwasm32_experimental_emscripten.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use super::{LinkArgs, Target, TargetOptions};\n+use super::{LinkArgs, LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Result<Target, String> {\n     let mut post_link_args = LinkArgs::new();"}, {"sha": "5077abf1e0eb37b3bb95b2308f21cca0b3d5d53c", "filename": "src/librustc_back/target/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_emscripten.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use super::{LinkArgs, Target, TargetOptions};\n+use super::{LinkArgs, LinkerFlavor, Target, TargetOptions};\n \n pub fn target() -> Result<Target, String> {\n     let mut post_link_args = LinkArgs::new();"}, {"sha": "56170bbb869f31e8d3cec75b7e072ae8976fde6d", "filename": "src/librustc_back/target/wasm32_unknown_unknown.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_unknown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_unknown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwasm32_unknown_unknown.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -17,8 +17,7 @@\n // (aka panic=abort by default), but otherwise this is in general a relatively\n // standard target.\n \n-use {LinkerFlavor, LldFlavor};\n-use super::{Target, TargetOptions, PanicStrategy};\n+use super::{LldFlavor, LinkerFlavor, Target, TargetOptions, PanicStrategy};\n \n pub fn target() -> Result<Target, String> {\n     let opts = TargetOptions {"}, {"sha": "eac23e599b4c7497c6d912947dfbf422a81ecdb2", "filename": "src/librustc_back/target/windows_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "231fbdee0b50b15401b579dd92145d28f00dd64f", "filename": "src/librustc_back/target/windows_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fwindows_msvc_base.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{LinkArgs, TargetOptions};\n+use target::{LinkArgs, LinkerFlavor, TargetOptions};\n use std::default::Default;\n \n pub fn opts() -> TargetOptions {"}, {"sha": "56de517b04a603164b020b9ec6e8870e40977021", "filename": "src/librustc_back/target/x86_64_apple_darwin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_darwin.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::apple_base::opts();"}, {"sha": "a7897a364d28501dc14cb6b78a146fdbb599ec99", "filename": "src/librustc_back/target/x86_64_apple_ios.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_ios.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_ios.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_apple_ios.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetOptions, TargetResult};\n+use target::{LinkerFlavor, Target, TargetOptions, TargetResult};\n use super::apple_ios_base::{opts, Arch};\n \n pub fn target() -> TargetResult {"}, {"sha": "1ca8ae5addd02713bd82099069bc842aa7ec12f0", "filename": "src/librustc_back/target/x86_64_linux_android.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_linux_android.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_linux_android.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_linux_android.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::android_base::opts();"}, {"sha": "a9c0cfc2c9c9ad585212c2240d3e239c794369ad", "filename": "src/librustc_back/target/x86_64_pc_windows_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_base::opts();"}, {"sha": "2de8dcfe9cc2897411d31f5ea3b76e02895a3c63", "filename": "src/librustc_back/target/x86_64_pc_windows_msvc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_pc_windows_msvc.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::windows_msvc_base::opts();"}, {"sha": "77848ae8c6c85831dc9c71ea118a817f38bf9230", "filename": "src/librustc_back/target/x86_64_rumprun_netbsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_rumprun_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_rumprun_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_rumprun_netbsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "c208c3861147ca2a2e28d365c30e92a761c08a6d", "filename": "src/librustc_back/target/x86_64_sun_solaris.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_sun_solaris.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_sun_solaris.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_sun_solaris.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::solaris_base::opts();"}, {"sha": "9d59e1437128699294b73775ad9b9d41a0235d76", "filename": "src/librustc_back/target/x86_64_unknown_bitrig.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_bitrig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_bitrig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_bitrig.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::bitrig_base::opts();"}, {"sha": "4baf8733af332b0112e6413313627f30db2f9a06", "filename": "src/librustc_back/target/x86_64_unknown_cloudabi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_cloudabi.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::cloudabi_base::opts();"}, {"sha": "c7059feab658c540d8e71f6919136d1e39168f76", "filename": "src/librustc_back/target/x86_64_unknown_dragonfly.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_dragonfly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_dragonfly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_dragonfly.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::dragonfly_base::opts();"}, {"sha": "372587a8f2a8d9513f170c88c6c993647cb8bc60", "filename": "src/librustc_back/target/x86_64_unknown_freebsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_freebsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_freebsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_freebsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::freebsd_base::opts();"}, {"sha": "5831c89834158aa07fff2ccfcc30802f3e888a02", "filename": "src/librustc_back/target/x86_64_unknown_fuchsia.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_fuchsia.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_fuchsia.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_fuchsia.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::fuchsia_base::opts();"}, {"sha": "1ba1e0097f7298bf9948c2b8ae1e4b692be83159", "filename": "src/librustc_back/target/x86_64_unknown_haiku.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_haiku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_haiku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_haiku.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::haiku_base::opts();"}, {"sha": "016e68fe0eec29b00b9ac64bcc56333368dce29d", "filename": "src/librustc_back/target/x86_64_unknown_l4re_uclibc.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_l4re_uclibc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_l4re_uclibc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_l4re_uclibc.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::l4re_base::opts();"}, {"sha": "eb0f9487fca9f67f4fa34c363a0a2ac9b603d56a", "filename": "src/librustc_back/target/x86_64_unknown_linux_gnu.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnu.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "5cf9a6fad8931dc49a2890ff78eaa4cbd0e88b49", "filename": "src/librustc_back/target/x86_64_unknown_linux_gnux32.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnux32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnux32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_gnux32.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_base::opts();"}, {"sha": "77cdbc207e39330d66e6d390f5f949e9e1cab521", "filename": "src/librustc_back/target/x86_64_unknown_linux_musl.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_musl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_musl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_linux_musl.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::linux_musl_base::opts();"}, {"sha": "ed35ea11f106151d20a582527377621a29687971", "filename": "src/librustc_back/target/x86_64_unknown_netbsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_netbsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::netbsd_base::opts();"}, {"sha": "97da4d41fd0c831fef3abdd0adb5b253961ca2a6", "filename": "src/librustc_back/target/x86_64_unknown_openbsd.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_openbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_openbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_openbsd.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::openbsd_base::opts();"}, {"sha": "3c930ac40acb5b3edd6076ecfe20dfbaa25107fc", "filename": "src/librustc_back/target/x86_64_unknown_redox.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_redox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_redox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fx86_64_unknown_redox.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use LinkerFlavor;\n-use target::{Target, TargetResult};\n+use target::{LinkerFlavor, Target, TargetResult};\n \n pub fn target() -> TargetResult {\n     let mut base = super::redox_base::opts();"}, {"sha": "397605eeee22e61c4f2c4c64dc84f1e4d190836f", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -21,7 +21,7 @@ use rustc::middle::allocator::AllocatorKind;\n use rustc::middle::cstore::DepKind;\n use rustc::session::{Session, CrateDisambiguator};\n use rustc::session::config::{Sanitizer, self};\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use rustc_back::target::TargetTriple;\n use rustc::session::search_paths::PathKind;\n use rustc::middle;"}, {"sha": "30175907605412868979be4d569f5dbbf3ee7764", "filename": "src/librustc_metadata/cstore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_metadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_metadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcstore.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -18,7 +18,7 @@ use rustc::hir::map::definitions::DefPathTable;\n use rustc::hir::svh::Svh;\n use rustc::middle::cstore::{DepKind, ExternCrate, MetadataLoader};\n use rustc::session::{Session, CrateDisambiguator};\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc::util::nodemap::{FxHashMap, NodeMap};\n "}, {"sha": "506fefd93cfd54916f7112b5ccc4bb48233b8544", "filename": "src/librustc_metadata/schema.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_metadata%2Fschema.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_metadata%2Fschema.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fschema.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -19,7 +19,7 @@ use rustc::middle::lang_items;\n use rustc::mir;\n use rustc::session::CrateDisambiguator;\n use rustc::ty::{self, Ty, ReprOptions};\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use rustc_back::target::TargetTriple;\n \n use rustc_serialize as serialize;"}, {"sha": "216a6a23f082fc93899d5c49c715b7e762e4947f", "filename": "src/librustc_mir/build/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_mir%2Fbuild%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmod.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -20,7 +20,7 @@ use rustc::mir::visit::{MutVisitor, TyContext};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::ty::subst::Substs;\n use rustc::util::nodemap::NodeMap;\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use rustc_data_structures::indexed_vec::{IndexVec, Idx};\n use shim;\n use std::mem;"}, {"sha": "7fdf40480c7f86740b4a2691fa59c9e5718908e4", "filename": "src/librustc_trans/back/command.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fback%2Fcommand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fback%2Fcommand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fcommand.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -17,7 +17,7 @@ use std::io;\n use std::mem;\n use std::process::{self, Output};\n \n-use rustc_back::LldFlavor;\n+use rustc_back::target::LldFlavor;\n \n #[derive(Clone)]\n pub struct Command {"}, {"sha": "bf80caadd753889341ddd67df16bfc6e7a4a394f", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -17,7 +17,6 @@ use super::command::Command;\n use super::rpath::RPathConfig;\n use super::rpath;\n use metadata::METADATA_FILENAME;\n-use rustc_back::LinkerFlavor;\n use rustc::session::config::{self, NoDebugInfo, OutputFilenames, OutputType, PrintRequest};\n use rustc::session::config::{RUST_CGU_EXT, Lto};\n use rustc::session::filesearch;\n@@ -30,7 +29,7 @@ use rustc::util::common::time;\n use rustc::util::fs::fix_windows_verbatim_for_gcc;\n use rustc::hir::def_id::CrateNum;\n use tempdir::TempDir;\n-use rustc_back::{PanicStrategy, RelroLevel};\n+use rustc_back::target::{PanicStrategy, RelroLevel, LinkerFlavor};\n use rustc_back::target::TargetTriple;\n use rustc_data_structures::fx::FxHashSet;\n use context::get_reloc_model;"}, {"sha": "16716c51bc96488e2214b9de99307028c0f3d04f", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -23,7 +23,7 @@ use rustc::middle::dependency_format::Linkage;\n use rustc::session::Session;\n use rustc::session::config::{self, CrateType, OptLevel, DebugInfoLevel};\n use rustc::ty::TyCtxt;\n-use rustc_back::{LinkerFlavor, LldFlavor};\n+use rustc_back::target::{LinkerFlavor, LldFlavor};\n use serialize::{json, Encoder};\n \n /// For all the linkers we support, and information they might"}, {"sha": "c7eaa7b866f698b60ed42cf6fc3ba19721450269", "filename": "src/librustc_trans/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcallee.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -26,7 +26,7 @@ use rustc::hir::def_id::DefId;\n use rustc::ty::{self, TypeFoldable};\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::subst::Substs;\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n \n /// Translates a reference to a fn/method item, monomorphizing and\n /// inlining as it goes."}, {"sha": "b77471fb0e635e93e217f99acea6069b407e757d", "filename": "src/librustc_trans/declare.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fdeclare.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -24,7 +24,7 @@ use llvm::{self, ValueRef};\n use llvm::AttributePlace::Function;\n use rustc::ty::{self, Ty};\n use rustc::session::config::Sanitizer;\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use abi::{Abi, FnType};\n use attributes;\n use context::CodegenCx;"}, {"sha": "7d7e52ecef5ccd7e7bc75dc6d34ff451114a3b89", "filename": "src/librustc_trans/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f03b80020907a2ac3d3559fcab5516ef870f46b/src%2Flibrustc_trans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftype_of.rs?ref=6f03b80020907a2ac3d3559fcab5516ef870f46b", "patch": "@@ -13,7 +13,7 @@ use common::*;\n use rustc::hir;\n use rustc::ty::{self, Ty, TypeFoldable};\n use rustc::ty::layout::{self, Align, LayoutOf, Size, TyLayout};\n-use rustc_back::PanicStrategy;\n+use rustc_back::target::PanicStrategy;\n use trans_item::DefPathBasedNames;\n use type_::Type;\n "}]}