{"sha": "530086046f41920b5bba01036d258121c81bfbb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzMDA4NjA0NmY0MTkyMGI1YmJhMDEwMzZkMjU4MTIxYzgxYmZiYjk=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-05-21T02:42:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-21T02:42:55Z"}, "message": "Merge pull request #3573 from scampi/issue-3525\n\nUpdate changelogs", "tree": {"sha": "ffef26e8bd70d6a5066cf3cc2a214c47680daa3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ffef26e8bd70d6a5066cf3cc2a214c47680daa3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/530086046f41920b5bba01036d258121c81bfbb9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc42WvCRBK7hj4Ov3rIwAAdHIIAHJ7UZtNmcxNlTMoG0LBdMFf\n5eKCjtvDvaZdoxb+puXwsQP+ixk+fCcnElo2211PyKarpckQoO1RcCqhxbKi+4uZ\nkugYEhXRC1iGUsOOc17Xis5lVmEAIUAZV+SHm5apNxaOy1MsJHw11GAYoM98dq/X\nefoKtu8u7w39ArNLBHJEkaiytivLsaKiig7FrIo8pGIIeUcR3DiOa56mLMO6iw5s\nfkfKMw2aibbzOM89Dt8pu80QNVLgqglmi/84O1BS6zKuiEhkS76Ac1F8JqfeXPQ7\n23XmdG+5YhUnZBIr2LgTVMEhbttrL4PyCMcXIQ3L8AncEhGaU7z/r25tBS9XbgQ=\n=/mcX\n-----END PGP SIGNATURE-----\n", "payload": "tree ffef26e8bd70d6a5066cf3cc2a214c47680daa3b\nparent 0482ac88f4da28fb49abe05da11e5535f5aac9a8\nparent 5bcaac6b383c184b4e3c5b05e5947dc6e3ddef7d\nauthor Seiichi Uchida <seuchida@gmail.com> 1558406575 +0900\ncommitter GitHub <noreply@github.com> 1558406575 +0900\n\nMerge pull request #3573 from scampi/issue-3525\n\nUpdate changelogs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/530086046f41920b5bba01036d258121c81bfbb9", "html_url": "https://github.com/rust-lang/rust/commit/530086046f41920b5bba01036d258121c81bfbb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/530086046f41920b5bba01036d258121c81bfbb9/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0482ac88f4da28fb49abe05da11e5535f5aac9a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0482ac88f4da28fb49abe05da11e5535f5aac9a8", "html_url": "https://github.com/rust-lang/rust/commit/0482ac88f4da28fb49abe05da11e5535f5aac9a8"}, {"sha": "5bcaac6b383c184b4e3c5b05e5947dc6e3ddef7d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bcaac6b383c184b4e3c5b05e5947dc6e3ddef7d", "html_url": "https://github.com/rust-lang/rust/commit/5bcaac6b383c184b4e3c5b05e5947dc6e3ddef7d"}], "stats": {"total": 437, "additions": 437, "deletions": 0}, "files": [{"sha": "836b2fd81a1be39bbb2033d527bd26a27034cef3", "filename": "CHANGELOG.md", "status": "modified", "additions": 437, "deletions": 0, "changes": 437, "blob_url": "https://github.com/rust-lang/rust/blob/530086046f41920b5bba01036d258121c81bfbb9/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/530086046f41920b5bba01036d258121c81bfbb9/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=530086046f41920b5bba01036d258121c81bfbb9", "patch": "@@ -6,6 +6,443 @@\n - `use_small_heuristics` changed to be an enum and stabilised. Configuration\n   options are now ready for 1.0.\n \n+## [1.2.2] 2019-04-24\n+\n+### Fixed\n+\n+- Fix processing of `ignore` paths #3522\n+- Attempt to format attributes if only they exist #3523\n+\n+## [1.2.1] 2019-04-18\n+\n+### Added\n+\n+- Add `--print-config current` CLI option b473e65\n+- Create GitHub [page](https://rust-lang.github.io/rustfmt/) for Configuration.md #3485\n+\n+### Fixed\n+\n+- Keep comment appearing between parameter's name and its type #3491\n+- Do not delete semicolon after macro call with square brackets #3500\n+- Fix `--version` CLI option #3506\n+- Fix duplication of attributes on a match arm's body #3510\n+- Avoid overflowing item with attributes #3511\n+\n+## [1.2.0] 2019-03-27\n+\n+### Added\n+\n+- Add new attribute `rustfmt::skip::macros` to prevent rustfmt from formatting a macro #3454\n+\n+### Changed\n+\n+- Discard error report in silent_emitter #3466\n+\n+### Fixed\n+\n+- Fix bad performance on deeply nested binary expressions #3467\n+- Use BTreeMap to guarantee consistent ordering b4d4b57\n+\n+## [1.1.1] 2019-03-21\n+\n+### Fixed\n+\n+- Avoid panic on macro inside deeply nested block c9479de\n+- Fix line numbering in missed spans and handle file_lines in edge cases cdd08da\n+- Fix formatting of async blocks 1fa06ec\n+- Avoid duplication on the presence of spaces between macro name and `!` #3464\n+\n+## [1.1.0] 2019-03-17\n+\n+### Added\n+\n+- Add `inline_attribute_width` configuration option to write an item and its attribute on the same line if their combined width is below a threshold #3409\n+- Support `const` generics f0c861b\n+- Support path clarity module #3448\n+\n+### Changed\n+\n+- Align loop and while formatting 7d9a2ef\n+- Support `EmitMode::ModifiedLines` with stdin input #3424\n+- Update `rustc-ap-*` crates to 407.0.0\n+- Remove trailing whitespaces in missing spans 2d5bc69\n+\n+### Fixed\n+\n+- Do not remove comment in the case of no arg 8e3ef3e\n+- Fix `Ident of macro+ident gets duplicated` error 40ff078\n+- Format the if expression at the end of the block in a single line 5f3dfe6\n+\n+## [1.0.3] 2019-02-14\n+\n+### Added\n+\n+- Point unstable options to tracking issues 412dcc7\n+\n+### Changed\n+\n+- Update `rustc-ap-*` crates to 373.0.0\n+\n+## [1.0.2] 2019-02-12\n+\n+### Added\n+\n+- Add a [section](https://github.com/rust-lang/rustfmt/blob/ae331be/Contributing.md#version-gate-formatting-changes) to the Contributing.md file about version-gating formatting changes 36e2cb0\n+- Allow specifying package with `-p` CLI option a8d2591\n+- Support `rustfmt::skip` on imports #3289\n+- Support global `rustfmt.toml` to be written in user config directory #3280\n+- Format visibility on trait alias 96a3df3\n+\n+### Changed\n+\n+- Do not modify original source code inside macro call #3260\n+- Recognize strings inside comments in order to avoid indenting them baa62c6\n+- Use Unicode-standard char width to wrap comments or strings a01990c\n+- Change new line point in the case of no args #3294\n+- Use the same formatting rule between functions and macros #3298\n+- Update rustc-ap-rustc_target to 366.0.0, rustc-ap-syntax to 366.0.0, and rustc-ap-syntax_pos to 366.0.0\n+\n+### Fixed\n+\n+- rewrite_comment: fix block fallback when failing to rewrite an itemized block ab7f4e1\n+- Catch possible tokenizer panics #3240\n+- Fix macro indentation on Windows #3266\n+- Fix shape when formatting return or break expr on statement position #3259\n+- rewrite_comment: fix block fallback when failing to rewrite an itemized block\n+- Keep leading double-colon to respect the 2018 edition of rust's paths a2bfc02\n+- Fix glob and nested global imports 2125ad2\n+- Do not force trailing comma when using mixed layout #3306\n+- Prioritize `single_line_fn` and `empty_item_single_line` over `brace_style` #3308\n+- Fix `internal error: left behind trailing whitespace` with long lines c2534f5\n+- Fix attribute duplication #3325\n+- Fix formatting of strings within a macro 813aa79\n+- Handle a macro argument with a single keyword 9a7ea6a\n+\n+## [1.0.1] 2018-12-09\n+\n+### Added\n+\n+- Add a `version` option 378994b\n+\n+### Changed\n+\n+- End expressions like return/continue/break with a semicolon #3223\n+- Update rustc-ap-rustc_target to 306.0.0, rustc-ap-syntax to 306.0.0, and rustc-ap-syntax_pos to 306.0.0\n+\n+### Fixed\n+\n+- Allow to run a rustfmt command from cargo-fmt even when there is no target a2da636\n+- Fix `un-closed delimiter` errors when formatting break labels 40174e9\n+\n+## [1.0.0] 2018-11-19\n+\n+### Changed\n+\n+- Preserve possibly one whitespace for brace macros 1a3bc79\n+- Prefer to break arguments over putting output type on the next line 1dd54e6\n+\n+## [0.99.9] 2018-11-15\n+\n+### Changed\n+\n+- Update rustc-ap-rustc_target to 297.0.0, rustc-ap-syntax to 297.0.0, to rustc-ap-syntax_pos to 297.0.0\n+- Don't align comments on `extern crate`s dd7add7\n+\n+## [0.99.8] 2018-11-14\n+\n+### Added\n+\n+- Add `overflow_delimited_expr` config option to more aggressively allow overflow #3175\n+\n+### Fixed\n+\n+- Fix the logic for retaining a comment before the arrow in a match #3181\n+- Do not wrap comments in doctest to avoid failing doctest runs #3183\n+- Fix comment rewriting that was wrapping code into a line comment #3188\n+- Fix formatting of unit-struct with `where`-clause #3200\n+\n+## [0.99.7] 2018-11-07\n+\n+### Changed\n+\n+- Force a newline after the `if` condition if there is a different indentation level #3109\n+- Use correct width when formatting type on local statement #3126\n+- Treat crates non-alphabetically when ordering 799005f\n+- Fix formatting of code that is annotated with rustfmt::skip #3113\n+- Stabilize `edition` configuration option 9c3ae2d\n+- cargo-fmt: detect Rust edition in use #3129\n+- Trim the indentation on macros which heuristically appear to use block-style indentation #3178\n+\n+### Fixed\n+\n+- Do not remove path disambiugator inside macro #3142\n+- Improve handling of Windows newlines #3141\n+- Fix alignment of a struct's fields (`struct_field_align_threshold` option) with the Visual `indent_style` #3165\n+- Fix a bug in formatting markdown lists within comments #3172\n+\n+## [0.99.6] 2018-10-18\n+\n+### Added\n+\n+- Add `enum_discrim_align_threshold` option to vertically align enum discriminants cc22869\n+- Add `println!`-like heuristic to the `fail` attribute #3067\n+- Handle itemized items inside comments #3083\n+- Add `format_doc_comments` configuration option to control the formatting of code snippets inside comments #3089\n+\n+### Changed\n+\n+- Makes brace behavior consistent with empty bodies for traits and impls 2727d41\n+- Consider a multi-lined array as a block-like expression #3969\n+- Improve formatting of strings #3073\n+- Get rid of extra commas in Visual struct literal formatting #3077\n+- Update rustc-ap-rustc_target to 274.0.0, rustc-ap-syntax to 274.0.0, and rustc-ap-syntax_pos to 274.0.0\n+- Format macro calls with item-like arguments #3080\n+- Avoid control flow expressions conditions to go multi line ef59b34\n+- Simplify multi-lining binop expressions #3101\n+\n+### Fixed\n+\n+- Do not format a code block in documentation if it is annotated with ignore or text 2bcc3a9\n+- Fix inconsistent overflow behavior in Visual style #3078\n+- Fix corner cases of the string formatting implementation #3083\n+- Do not add parens around lifetimes 0ac68c9\n+- Catch parser panic in format_snippet 8c4e92a\n+\n+## [0.99.5] 2018-09-25\n+\n+### Added\n+\n+- Handle leading module separator for 2018 Edition #2952\n+- Add configuration option `normalize_doc_attributes`: convert doc attributes to comments #3002\n+\n+### Changed\n+\n+- Accept 2015 and 2018 instead of Edition2015 and Edition2018 for edition option eec7436\n+- Support platforms without a timer 46e2a2e\n+- Update rustc-ap-rustc_target to 263.0.0, rustc-ap-syntax to 263.0.0, and rustc-ap-syntax_pos to 263.0.0\n+\n+### Fixed\n+\n+- Format of attributes with commas #2971\n+- Fix optional arg condensing #2972\n+- Improve formatting of long function parameters #2981\n+- Fix formatting of raw string literals #2983\n+- Handle chain with try operators with spaces #2986\n+- Use correct shape in Visual tuple rewriting #2987\n+- Impove formatting of arguments with `visual_style = \"Visual\"` option #2988\n+- Change `print_diff` to output the correct line number 992b179\n+- Propagate errors about failing to rewrite a macro 6f318e3\n+- Handle formatting of long function signature #3010\n+- Fix indent computation of a macro with braces c3edf6d\n+- Format generics on associated types #3035\n+- Incorrect indentation of multiline block match expression #3042\n+- Fix bug in import where two consecutive module separators were possible 98a0ef2\n+- Prevent right-shifting of block comments with bare lines 5fdb6db\n+\n+## [0.99.4] 2018-08-27\n+\n+### Added\n+\n+- Handle formatting of underscore imports #2951\n+- Handle formatting of try blocks #2965\n+\n+### Changed\n+\n+- Update rustc-ap-rustc_target to 237.0.0, rustc-ap-syntax to 237.0.0, and rustc-ap-syntax_pos to 237.0.0 ca19c9a\n+- Consider `dev` channel as nightly for unstable features #2948\n+\n+### Fixed\n+\n+- Fix formatting of patterns with ellipsis # 2942\n+\n+## [0.99.3] 2018-08-23\n+\n+### Added\n+\n+- Use path attribute when searching for modules #2901\n+- Expose FileLines JSON representation to allow external libraries to use the file_lines option #2915\n+\n+### Changed\n+\n+- Replace '--conifig-help' with '--config=help' cb10e06\n+- Improve formatting of slice patterns #2912\n+\n+### Fixed\n+\n+- Format chains with comment #2899\n+- Fix indentation of formatted macro body #2920\n+- Fix indentation of block comments f23e6aa\n+\n+## [0.99.2] 2018-08-07\n+\n+### Changed\n+\n+- Update rustc-ap-rustc_target to 218.0.0, rustc-ap-syntax to 218.0.0, and rustc-ap-syntax_pos to 218.0.0 5c9a2b6\n+- Combine function-like attributes #2900\n+\n+### Fixed\n+\n+- Explicitly handle semicolon after the item in statement position d96e3ca\n+- Fix parsing '#'-hiding of rustdoc 2eca09e\n+\n+## [0.99.1] 2018-08-04\n+\n+### Fixed\n+\n+- fix use statements ordering when a number is present 1928ae7\n+\n+## [0.99.0] 2018-08-03\n+\n+- 1.0 RC release\n+\n+### Changed\n+\n+- Clarification in README.md 30fe66b\n+\n+## [0.9.0] 2018-08-01\n+\n+### Added\n+\n+- Handle raw identifiers 3027c21\n+- Format async closure 60ce411\n+- Add max_width option for all heuristics c2ae39e\n+- Add config option `format_macro_matchers` to format the metavariable matching patterns in macros 79c5ee8\n+- Add config option `format_macro_bodies` to format the bodies of macros 79c5ee8\n+- Format exitential type fc307ff\n+- Support raw identifiers in struct expressions f121b1a\n+- Format Async block and async function 0b25f60\n+\n+### Changed\n+\n+- Update rustc-ap-rustc_target to 211.0.0, rustc-ap-syntax to 211.0.0, and rustc-ap-syntax_pos to 211.0.0\n+- Put each nested import on its own line while putting non-nested imports on the same line as much as possible 42ab258\n+- Respect `empty_item_single_line` config option when formatting empty impls. Put the `where` on its own line to improve readability #2771\n+- Strip leading `|` in match arm patterns 1d4b988\n+- Apply short function call heuristic to attributes 3abebf9\n+- Indent a match guard if the pattern is multiline be4d37d\n+- Change default newline style to `Native` 9d8f381\n+- Improve formatting of series of binop expressions a4cdb68\n+- Trigger an internal error if we skip formatting due to a lost comment b085113\n+- Refactor chain formatting #2838\n+\n+### Fixed\n+\n+- Do not insert spaces around braces with empty body or multiple lines 2f65852\n+- Allow using mixed layout with comments #2766\n+- Handle break labels #2726\n+- fix rewrite_string when a line feed is present 472a2ed\n+- Fix an anomaly with comments and array literals b28a0cd\n+- Check for comments after the `=>` in a match arm 6899471\n+\n+## [0.8.0,0.8.1,0.8.2] 2018-05-28\n+\n+### Added\n+\n+- Use scoped attributes for skip attribute https://github.com/rust-lang/rustfmt/pull/2703\n+\n+### Changed\n+\n+- Comment options `wrap_comments` and `normalize_comments` are reverted back to unstable 416bc4c\n+- Stabilise `reorder_imports` and `reorder_modules` options 7b6d2b4\n+- Remove `spaces_within_parens_and_brackets` option d726492\n+- Stabilise shorthand options: `use_try_shorthand`, `use_field_init_shorthand`, and `force_explicit_abi` 8afe367\n+- Stabilise `remove_nested_parens` and set default to true a70f716\n+- Unstabilise `unstable_features` dd9c15a\n+- Remove `remove_blank_lines_at_start_or_end_of_block` option 2ee8b0e\n+- Update rustc-ap-syntax to 146.0.0 and rustc-ap-rustc_target to 146.0.0 2c275a2\n+- Audit the public API #2639\n+\n+### Fixed\n+\n+- Handle code block in doc comment without rust prefix f1974e2\n+\n+## [0.7.0] 2018-05-14\n+\n+### Added\n+\n+- Add integration tests against crates in the rust-lang-nursery c79f39a\n+\n+### Changed\n+\n+- Update rustc-ap-syntax to 128.0.0 and ustc-ap-rustc_target to 128.0.0 195395f\n+- Put operands on its own line when each fits in a single line f8439ce\n+- Improve CLI options 55ac062 1869888 798bffb 4d9de48 eca7796 8396da1 5d9f5aa\n+\n+### Fixed\n+\n+- Use correct line width for list attribute 61a401a\n+- Avoid flip-flopping impl items when reordering them 37c216c\n+- Formatting breaks short lines when max_width is less than 100 9b36156\n+- Fix variant \"Mixed\" of imports_layout option 8c8676c\n+- Improve handling of long lines f885039\n+- Fix up lines exceeding max width 51c07f4\n+- Fix handling of modules in non_modrs_mods style cf573e8\n+- Do not duplicate attributes on use items e59ceaf\n+- Do not insert an extra brace in macros with native newlines 4c9ef93\n+\n+## [0.6.1] 2018-05-01\n+\n+### Changed\n+\n+- Change the default value of imports_indent to IndentStyle::Block https://github.com/rust-lang/rustfmt/pull/2662\n+\n+### Fixed\n+\n+- Handle formatting of auto traits 5b5a72c\n+- Use consistent formatting for empty enum and struct https://github.com/rust-lang/rustfmt/pull/2656\n+\n+## [0.6.0] 2018-04-20\n+\n+### Changed\n+\n+- Improve public API 8669004\n+\n+## [0.5.0] 2018-04-20\n+\n+### Added\n+\n+- Add `verbose-diff` CLI option 5194984\n+\n+### Changed\n+\n+- Update rustc-ap-syntax to 103.0.0 dd807e2\n+- Refactor to make a sensible public API ca610d3\n+\n+### Fixed\n+\n+- Add spaces between consecutive `..` `..=` 61d29eb\n+\n+## [0.4.2] 2018-04-12\n+\n+### Added\n+\n+- Handle binary operators and lifetimes 0fd174d\n+- Add reorder_impl_items config option 94f5a05\n+- Add `--unstable-features` CLI option to list unstable options from the `--help` output 8208f8a\n+- Add merge_imports config option 5dd203e\n+\n+### Changed\n+\n+- Format macro arguments with vertical layout ec71459\n+- Reorder imports by default 164cf7d\n+- Do not collapse block around expr with condition on match arm 5b9b7d5\n+- Use vertical layout for complex attributes c77708f\n+- Format array using heuristics for function calls 98c6f7b\n+- Implement stable ordering for impl items with the the following item priority: type, const, macro, then method fa80ddf\n+- Reorder imports by default 164cf7d\n+- Group `extern crate` by default 3a138a2\n+- Make `error_on_line_overflow` false by default f146711\n+- Merge imports with the same prefix into a single nested import 1954513\n+- Squash the various 'reorder imports' option into one 911395a\n+\n+### Fixed\n+\n+- Print version is missing the channel ca6fc67\n+- Do not add the beginning vert to the match arm 1e1d9d4\n+- Follow indent style config when formatting attributes efd295a\n+- Do not insert newline when item is empty a8022f3\n+- Do not indent or unindent inside string literal ec1907b\n+\n ## [0.4.1] 2018-03-16\n \n ### Added"}]}