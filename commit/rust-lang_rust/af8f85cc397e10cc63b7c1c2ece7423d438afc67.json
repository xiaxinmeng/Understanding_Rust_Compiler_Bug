{"sha": "af8f85cc397e10cc63b7c1c2ece7423d438afc67", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmOGY4NWNjMzk3ZTEwY2M2M2I3YzFjMmVjZTc0MjNkNDM4YWZjNjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-14T12:44:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-14T12:44:24Z"}, "message": "Auto merge of #32232 - jonas-schievink:issue31511, r=eddyb\n\nGive a more accurate error on thin-to-fat ptr cast\n\nFixes #31511", "tree": {"sha": "f67c67f011de82c081cbb55e29dbff5d65eada5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f67c67f011de82c081cbb55e29dbff5d65eada5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af8f85cc397e10cc63b7c1c2ece7423d438afc67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af8f85cc397e10cc63b7c1c2ece7423d438afc67", "html_url": "https://github.com/rust-lang/rust/commit/af8f85cc397e10cc63b7c1c2ece7423d438afc67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af8f85cc397e10cc63b7c1c2ece7423d438afc67/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "170f4708bb48234a2f1a089342b31a424ac94fa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/170f4708bb48234a2f1a089342b31a424ac94fa9", "html_url": "https://github.com/rust-lang/rust/commit/170f4708bb48234a2f1a089342b31a424ac94fa9"}, {"sha": "be2698cb58687ba4c301680ad8dc47c39cd0a3db", "url": "https://api.github.com/repos/rust-lang/rust/commits/be2698cb58687ba4c301680ad8dc47c39cd0a3db", "html_url": "https://github.com/rust-lang/rust/commit/be2698cb58687ba4c301680ad8dc47c39cd0a3db"}], "stats": {"total": 31, "additions": 28, "deletions": 3}, "files": [{"sha": "31c0fea5c2d97229bdb3f199edf4d51d7046a1f2", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=af8f85cc397e10cc63b7c1c2ece7423d438afc67", "patch": "@@ -100,6 +100,8 @@ enum CastError {\n     CastToBool,\n     CastToChar,\n     DifferingKinds,\n+    /// Cast of thin to fat raw ptr (eg. `*const () as *const [u8]`)\n+    SizedUnsizedCast,\n     IllegalCast,\n     NeedViaPtr,\n     NeedViaThinPtr,\n@@ -165,6 +167,13 @@ impl<'tcx> CastCheck<'tcx> {\n                             fcx.infcx().ty_to_string(self.cast_ty))\n                 }, self.expr_ty, None);\n             }\n+            CastError::SizedUnsizedCast => {\n+                fcx.type_error_message(self.span, |actual| {\n+                    format!(\"cannot cast thin pointer `{}` to fat pointer `{}`\",\n+                            actual,\n+                            fcx.infcx().ty_to_string(self.cast_ty))\n+                }, self.expr_ty, None)\n+            }\n             CastError::DifferingKinds => {\n                 fcx.type_error_struct(self.span, |actual| {\n                     format!(\"casting `{}` as `{}` is invalid\",\n@@ -312,7 +321,7 @@ impl<'tcx> CastCheck<'tcx> {\n \n         // sized -> unsized? report invalid cast (don't complain about vtable kinds)\n         if fcx.type_is_known_to_be_sized(m_expr.ty, self.span) {\n-            return Err(CastError::IllegalCast);\n+            return Err(CastError::SizedUnsizedCast);\n         }\n \n         // vtable kinds must match"}, {"sha": "8e129722722aaa3be723d8a9cdb014a70c14e78b", "filename": "src/test/compile-fail/cast-rfc0401.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Ftest%2Fcompile-fail%2Fcast-rfc0401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Ftest%2Fcompile-fail%2Fcast-rfc0401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcast-rfc0401.rs?ref=af8f85cc397e10cc63b7c1c2ece7423d438afc67", "patch": "@@ -87,7 +87,7 @@ fn main()\n     //~^^ HELP through a usize first\n \n     let _ = 42usize as *const [u8]; //~ ERROR casting\n-    let _ = v as *const [u8]; //~ ERROR casting\n+    let _ = v as *const [u8]; //~ ERROR cannot cast\n     let _ = fat_v as *const Foo;\n     //~^ ERROR `core::marker::Sized` is not implemented for the type `[u8]`\n     let _ = foo as *const str; //~ ERROR casting"}, {"sha": "c920b6c171e3267be059344350416739d44b0141", "filename": "src/test/compile-fail/fat-ptr-cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffat-ptr-cast.rs?ref=af8f85cc397e10cc63b7c1c2ece7423d438afc67", "patch": "@@ -24,7 +24,7 @@ fn main() {\n     //~^^ HELP cast through a thin pointer\n \n     // #22955\n-    q as *const [i32]; //~ ERROR casting\n+    q as *const [i32]; //~ ERROR cannot cast\n \n     // #21397\n     let t: *mut (Trait + 'static) = 0 as *mut _; //~ ERROR casting"}, {"sha": "dd1af2f44487f91b25598a0ac8f37829d5506528", "filename": "src/test/compile-fail/issue-31511.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Ftest%2Fcompile-fail%2Fissue-31511.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af8f85cc397e10cc63b7c1c2ece7423d438afc67/src%2Ftest%2Fcompile-fail%2Fissue-31511.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31511.rs?ref=af8f85cc397e10cc63b7c1c2ece7423d438afc67", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn cast_thin_to_fat(x: *const ()) {\n+    x as *const [u8];\n+    //~^ ERROR: cannot cast thin pointer `*const ()` to fat pointer `*const [u8]`\n+}\n+\n+fn main() {}"}]}