{"sha": "c3137d9e8c6cf28565e533f669e4cf4a1a3378ee", "node_id": "C_kwDOAAsO6NoAKGMzMTM3ZDllOGM2Y2YyODU2NWU1MzNmNjY5ZTRjZjRhMWEzMzc4ZWU", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2022-06-23T20:53:44Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2022-06-23T21:00:28Z"}, "message": "normalize if-eq bounds before testing\n\nHat-tip: aliemjay", "tree": {"sha": "714efbef4fa7efa956abedd8c6ff4bf96cbc165d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/714efbef4fa7efa956abedd8c6ff4bf96cbc165d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee", "html_url": "https://github.com/rust-lang/rust/commit/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6b630c5b178cb19b2453cac9d7b342d6d676def", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b630c5b178cb19b2453cac9d7b342d6d676def", "html_url": "https://github.com/rust-lang/rust/commit/e6b630c5b178cb19b2453cac9d7b342d6d676def"}], "stats": {"total": 40, "additions": 39, "deletions": 1}, "files": [{"sha": "455de47acef1b97e681f3dfdadcb203cf6f137ac", "filename": "compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=c3137d9e8c6cf28565e533f669e4cf4a1a3378ee", "patch": "@@ -823,10 +823,11 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n     ) -> bool {\n         match bound {\n             VerifyBound::IfEq(verify_if_eq_b) => {\n+                let verify_if_eq_b = var_values.normalize(self.region_rels.tcx, *verify_if_eq_b);\n                 match test_type_match::extract_verify_if_eq(\n                     self.tcx(),\n                     self.param_env,\n-                    verify_if_eq_b,\n+                    &verify_if_eq_b,\n                     generic_ty,\n                 ) {\n                     Some(r) => {"}, {"sha": "0a4ed7e0a4021167e4c5e4c71941311b91f43349", "filename": "src/test/ui/nll/vimwiki-core-regression.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee/src%2Ftest%2Fui%2Fnll%2Fvimwiki-core-regression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3137d9e8c6cf28565e533f669e4cf4a1a3378ee/src%2Ftest%2Fui%2Fnll%2Fvimwiki-core-regression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fvimwiki-core-regression.rs?ref=c3137d9e8c6cf28565e533f669e4cf4a1a3378ee", "patch": "@@ -0,0 +1,37 @@\n+// check-pass\n+//\n+// Regression test from crater run for\n+// <https://github.com/rust-lang/rust/pull/98109>.\n+\n+\n+pub trait ElementLike {}\n+\n+pub struct Located<T> where T: ElementLike {\n+    inner: T,\n+}\n+\n+pub struct BlockElement<'a>(&'a str);\n+\n+impl ElementLike for BlockElement<'_> {}\n+\n+\n+pub struct Page<'a> {\n+    /// Comprised of the elements within a page\n+    pub elements: Vec<Located<BlockElement<'a>>>,\n+}\n+\n+impl<'a, __IdxT> std::ops::Index<__IdxT> for Page<'a> where\n+    Vec<Located<BlockElement<'a>>>: std::ops::Index<__IdxT>\n+{\n+    type Output =\n+        <Vec<Located<BlockElement<'a>>> as\n+        std::ops::Index<__IdxT>>::Output;\n+\n+    #[inline]\n+    fn index(&self, idx: __IdxT) -> &Self::Output {\n+        <Vec<Located<BlockElement<'a>>> as\n+                std::ops::Index<__IdxT>>::index(&self.elements, idx)\n+    }\n+}\n+\n+fn main() {}"}]}