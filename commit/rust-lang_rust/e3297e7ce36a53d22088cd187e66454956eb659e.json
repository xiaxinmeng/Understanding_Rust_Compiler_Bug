{"sha": "e3297e7ce36a53d22088cd187e66454956eb659e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzMjk3ZTdjZTM2YTUzZDIyMDg4Y2QxODdlNjY0NTQ5NTZlYjY1OWU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-02-25T23:55:43Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-12T18:34:43Z"}, "message": "Add a test for #57781", "tree": {"sha": "d33a1d5a4e238f5086fcbe8f3882fc0d03c36aea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d33a1d5a4e238f5086fcbe8f3882fc0d03c36aea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3297e7ce36a53d22088cd187e66454956eb659e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3297e7ce36a53d22088cd187e66454956eb659e", "html_url": "https://github.com/rust-lang/rust/commit/e3297e7ce36a53d22088cd187e66454956eb659e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3297e7ce36a53d22088cd187e66454956eb659e/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7763af5267be200ffcb75e1ed35a0f3979c7d51", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7763af5267be200ffcb75e1ed35a0f3979c7d51", "html_url": "https://github.com/rust-lang/rust/commit/b7763af5267be200ffcb75e1ed35a0f3979c7d51"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "f5015aaf5d81f965703a91da9511be15c504ec42", "filename": "src/test/ui/issues/issue-57781.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e3297e7ce36a53d22088cd187e66454956eb659e/src%2Ftest%2Fui%2Fissues%2Fissue-57781.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3297e7ce36a53d22088cd187e66454956eb659e/src%2Ftest%2Fui%2Fissues%2Fissue-57781.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57781.rs?ref=e3297e7ce36a53d22088cd187e66454956eb659e", "patch": "@@ -0,0 +1,20 @@\n+// run-pass\n+\n+use std::cell::UnsafeCell;\n+use std::collections::HashMap;\n+\n+struct OnceCell<T> {\n+    _value: UnsafeCell<Option<T>>,\n+}\n+\n+impl<T> OnceCell<T> {\n+    const INIT: OnceCell<T> = OnceCell {\n+        _value: UnsafeCell::new(None),\n+    };\n+}\n+\n+pub fn crash<K, T>() {\n+    let _ = OnceCell::<HashMap<K, T>>::INIT;\n+}\n+\n+fn main() {}"}]}