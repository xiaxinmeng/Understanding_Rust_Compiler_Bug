{"sha": "a85e480dd15bca2231550a936398f30f97eb5d53", "node_id": "C_kwDOAAsO6NoAKGE4NWU0ODBkZDE1YmNhMjIzMTU1MGE5MzYzOThmMzBmOTdlYjVkNTM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-01T13:55:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-01T13:55:29Z"}, "message": "Auto merge of #10110 - Niki4tap:needless_anyhow_return, r=Alexendoo\n\nFix FN in `needless_return`\n\nFixes #10051\n\nchangelog: Enhancement: [`needless_return`]: Now detects more cases for returns of owned values\n[#10110](https://github.com/rust-lang/rust-clippy/pull/10110)\n<!-- changelog_checked -->", "tree": {"sha": "c61de53ecf4a74e6c507af76356e90fb0402513b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c61de53ecf4a74e6c507af76356e90fb0402513b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a85e480dd15bca2231550a936398f30f97eb5d53", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a85e480dd15bca2231550a936398f30f97eb5d53", "html_url": "https://github.com/rust-lang/rust/commit/a85e480dd15bca2231550a936398f30f97eb5d53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a85e480dd15bca2231550a936398f30f97eb5d53/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ccd4ebd5ba4d68dcfb56c8dea13b90c1d02a769", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ccd4ebd5ba4d68dcfb56c8dea13b90c1d02a769", "html_url": "https://github.com/rust-lang/rust/commit/6ccd4ebd5ba4d68dcfb56c8dea13b90c1d02a769"}, {"sha": "9ff868c4ae90f2b94d086cf8cf6302118c29f2ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ff868c4ae90f2b94d086cf8cf6302118c29f2ee", "html_url": "https://github.com/rust-lang/rust/commit/9ff868c4ae90f2b94d086cf8cf6302118c29f2ee"}], "stats": {"total": 71, "additions": 55, "deletions": 16}, "files": [{"sha": "bbbd9e4989e97c05f189ddec545cb59d84be67cc", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/a85e480dd15bca2231550a936398f30f97eb5d53/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85e480dd15bca2231550a936398f30f97eb5d53/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=a85e480dd15bca2231550a936398f30f97eb5d53", "patch": "@@ -210,22 +210,25 @@ fn check_final_expr<'tcx>(\n             // if desugar of `do yeet`, don't lint\n             if let Some(inner_expr) = inner\n                 && let ExprKind::Call(path_expr, _) = inner_expr.kind\n-                && let ExprKind::Path(QPath::LangItem(LangItem::TryTraitFromYeet, _, _)) = path_expr.kind {\n-                    return;\n+                && let ExprKind::Path(QPath::LangItem(LangItem::TryTraitFromYeet, _, _)) = path_expr.kind\n+            {\n+                return;\n             }\n-            if cx.tcx.hir().attrs(expr.hir_id).is_empty() {\n-                let borrows = inner.map_or(false, |inner| last_statement_borrows(cx, inner));\n-                if !borrows {\n-                    // check if expr return nothing\n-                    let ret_span = if inner.is_none() && replacement == RetReplacement::Empty {\n-                        extend_span_to_previous_non_ws(cx, peeled_drop_expr.span)\n-                    } else {\n-                        peeled_drop_expr.span\n-                    };\n-\n-                    emit_return_lint(cx, ret_span, semi_spans, inner.as_ref().map(|i| i.span), replacement);\n-                }\n+            if !cx.tcx.hir().attrs(expr.hir_id).is_empty() {\n+                return;\n+            }\n+            let borrows = inner.map_or(false, |inner| last_statement_borrows(cx, inner));\n+            if borrows {\n+                return;\n             }\n+            // check if expr return nothing\n+            let ret_span = if inner.is_none() && replacement == RetReplacement::Empty {\n+                extend_span_to_previous_non_ws(cx, peeled_drop_expr.span)\n+            } else {\n+                peeled_drop_expr.span\n+            };\n+\n+            emit_return_lint(cx, ret_span, semi_spans, inner.as_ref().map(|i| i.span), replacement);\n         },\n         ExprKind::If(_, then, else_clause_opt) => {\n             check_block_return(cx, &then.kind, semi_spans.clone());\n@@ -292,7 +295,7 @@ fn last_statement_borrows<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'tcx>)\n         {\n             ControlFlow::Break(())\n         } else {\n-            ControlFlow::Continue(Descend::from(!expr.span.from_expansion()))\n+            ControlFlow::Continue(Descend::from(!e.span.from_expansion()))\n         }\n     })\n     .is_some()"}, {"sha": "ab1c0e590bbc7ca317ea0568eebee557090b7623", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a85e480dd15bca2231550a936398f30f97eb5d53/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a85e480dd15bca2231550a936398f30f97eb5d53/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=a85e480dd15bca2231550a936398f30f97eb5d53", "patch": "@@ -277,4 +277,14 @@ fn issue9947() -> Result<(), String> {\n     do yeet \"hello\";\n }\n \n+// without anyhow, but triggers the same bug I believe\n+#[expect(clippy::useless_format)]\n+fn issue10051() -> Result<String, String> {\n+    if true {\n+        Ok(format!(\"ok!\"))\n+    } else {\n+        Err(format!(\"err!\"))\n+    }\n+}\n+\n fn main() {}"}, {"sha": "abed338bb9b297c415a2cf0115728cd54e6f29a5", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a85e480dd15bca2231550a936398f30f97eb5d53/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85e480dd15bca2231550a936398f30f97eb5d53/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=a85e480dd15bca2231550a936398f30f97eb5d53", "patch": "@@ -287,4 +287,14 @@ fn issue9947() -> Result<(), String> {\n     do yeet \"hello\";\n }\n \n+// without anyhow, but triggers the same bug I believe\n+#[expect(clippy::useless_format)]\n+fn issue10051() -> Result<String, String> {\n+    if true {\n+        return Ok(format!(\"ok!\"));\n+    } else {\n+        return Err(format!(\"err!\"));\n+    }\n+}\n+\n fn main() {}"}, {"sha": "52eabf6e1370dd2235f22cfbb958464e03d3e746", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a85e480dd15bca2231550a936398f30f97eb5d53/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85e480dd15bca2231550a936398f30f97eb5d53/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=a85e480dd15bca2231550a936398f30f97eb5d53", "patch": "@@ -386,5 +386,21 @@ LL |         let _ = 42; return;\n    |\n    = help: remove `return`\n \n-error: aborting due to 46 previous errors\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:294:9\n+   |\n+LL |         return Ok(format!(\"ok!\"));\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: remove `return`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:296:9\n+   |\n+LL |         return Err(format!(\"err!\"));\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: remove `return`\n+\n+error: aborting due to 48 previous errors\n "}]}