{"sha": "22cc6c3482bb98dca40986fe1634034dc44181be", "node_id": "C_kwDOAAsO6NoAKDIyY2M2YzM0ODJiYjk4ZGNhNDA5ODZmZTE2MzQwMzRkYzQ0MTgxYmU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-06T08:30:29Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-05-06T08:57:03Z"}, "message": "don't debug-print ConstValue in MIR pretty-printer", "tree": {"sha": "60362b93c3ca64b1021bad65f97798261311cbb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60362b93c3ca64b1021bad65f97798261311cbb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22cc6c3482bb98dca40986fe1634034dc44181be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22cc6c3482bb98dca40986fe1634034dc44181be", "html_url": "https://github.com/rust-lang/rust/commit/22cc6c3482bb98dca40986fe1634034dc44181be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22cc6c3482bb98dca40986fe1634034dc44181be/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd31ba045dca8165a4cb9dfb9a754ddc98e15009", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd31ba045dca8165a4cb9dfb9a754ddc98e15009", "html_url": "https://github.com/rust-lang/rust/commit/bd31ba045dca8165a4cb9dfb9a754ddc98e15009"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "8111409b8bc0eef45854b76ae6eaa07cfa498bfb", "filename": "compiler/rustc_middle/src/mir/pretty.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/22cc6c3482bb98dca40986fe1634034dc44181be/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22cc6c3482bb98dca40986fe1634034dc44181be/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs?ref=22cc6c3482bb98dca40986fe1634034dc44181be", "patch": "@@ -448,6 +448,12 @@ impl<'tcx> Visitor<'tcx> for ExtraComments<'tcx> {\n                 self.push(&format!(\"+ user_ty: {:?}\", user_ty));\n             }\n \n+            let fmt_val = |val: &ConstValue<'tcx>| match val {\n+                ConstValue::Scalar(s) => format!(\"Scalar({:?})\", s),\n+                ConstValue::Slice { .. } => format!(\"Slice(..)\"),\n+                ConstValue::ByRef { .. } => format!(\"ByRef(..)\"),\n+            };\n+\n             let val = match literal {\n                 ConstantKind::Ty(ct) => match ct.val() {\n                     ty::ConstKind::Param(p) => format!(\"Param({})\", p),\n@@ -457,7 +463,7 @@ impl<'tcx> Visitor<'tcx> for ExtraComments<'tcx> {\n                         uv.substs,\n                         uv.promoted,\n                     ),\n-                    ty::ConstKind::Value(val) => format!(\"Value({:?})\", val),\n+                    ty::ConstKind::Value(val) => format!(\"Value({})\", fmt_val(&val)),\n                     ty::ConstKind::Error(_) => \"Error\".to_string(),\n                     // These variants shouldn't exist in the MIR.\n                     ty::ConstKind::Placeholder(_)\n@@ -467,7 +473,7 @@ impl<'tcx> Visitor<'tcx> for ExtraComments<'tcx> {\n                 // To keep the diffs small, we render this like we render `ty::Const::Value`.\n                 //\n                 // This changes once `ty::Const::Value` is represented using valtrees.\n-                ConstantKind::Val(val, _) => format!(\"Value({:?})\", val),\n+                ConstantKind::Val(val, _) => format!(\"Value({})\", fmt_val(&val)),\n             };\n \n             self.push(&format!(\"+ literal: Const {{ ty: {}, val: {} }}\", literal.ty(), val));"}]}