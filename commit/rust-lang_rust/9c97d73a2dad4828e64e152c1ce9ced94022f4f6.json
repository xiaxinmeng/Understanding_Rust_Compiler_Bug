{"sha": "9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljOTdkNzNhMmRhZDQ4MjhlNjRlMTUyYzFjZTljZWQ5NDAyMmY0ZjY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-25T20:32:57Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-11-25T21:30:52Z"}, "message": "Tweak move error due to non-Copy", "tree": {"sha": "9c1c8be774aa8b5a33e7544dba0e3f995f81e53d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c1c8be774aa8b5a33e7544dba0e3f995f81e53d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "html_url": "https://github.com/rust-lang/rust/commit/9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a595417a2d5fdff62fb2a570756c5ce6f8eb0d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a595417a2d5fdff62fb2a570756c5ce6f8eb0d2", "html_url": "https://github.com/rust-lang/rust/commit/9a595417a2d5fdff62fb2a570756c5ce6f8eb0d2"}], "stats": {"total": 206, "additions": 31, "deletions": 175}, "files": [{"sha": "21191792b8237ae62f9987492c75be3fedfc0af6", "filename": "src/librustc_mir/borrow_check/move_errors.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmove_errors.rs?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -555,7 +555,6 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n         err: &mut DiagnosticBuilder<'a>,\n         binds_to: &[Local],\n     ) {\n-        let mut noncopy_var_spans = Vec::new();\n         for (j, local) in binds_to.into_iter().enumerate() {\n             let bind_to = &self.body.local_decls[*local];\n             let binding_span = bind_to.source_info.span;\n@@ -573,16 +572,12 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                     bind_to.ty,\n                     Some(binding_span)\n                 );\n-            } else {\n-                noncopy_var_spans.push(binding_span);\n             }\n         }\n \n         if binds_to.len() > 1 {\n-            err.span_note(\n-                noncopy_var_spans,\n-                \"move occurs because these variables have types that \\\n-                    don't implement the `Copy` trait\",\n+            err.note(\"move occurs because these variables have types that \\\n+                      don't implement the `Copy` trait\",\n             );\n         }\n     }"}, {"sha": "26de39101f2117e98f3f4a14c01ea9eee3e3cbeb", "filename": "src/test/ui/borrowck/borrowck-move-error-with-note.stderr", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-error-with-note.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -10,15 +10,7 @@ LL |                   num2) => (),\n LL |         Foo::Foo2(num) => (),\n    |                   --- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/borrowck-move-error-with-note.rs:12:19\n-   |\n-LL |         Foo::Foo1(num1,\n-   |                   ^^^^\n-LL |                   num2) => (),\n-   |                   ^^^^\n-LL |         Foo::Foo2(num) => (),\n-   |                   ^^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n   --> $DIR/borrowck-move-error-with-note.rs:28:11\n@@ -31,13 +23,7 @@ LL |             f: _s,\n LL |             g: _t\n    |                -- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/borrowck-move-error-with-note.rs:31:16\n-   |\n-LL |             f: _s,\n-   |                ^^\n-LL |             g: _t\n-   |                ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of `a.a` which is behind a shared reference\n   --> $DIR/borrowck-move-error-with-note.rs:46:11"}, {"sha": "8fb4c062c0363772f5e529b179000cbad372f0e9", "filename": "src/test/ui/borrowck/borrowck-move-out-of-vec-tail.stderr", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-move-out-of-vec-tail.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -9,13 +9,7 @@ LL |                 &[Foo { string: a },\n LL |                   Foo { string: b }] => {\n    |                                 - ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/borrowck-move-out-of-vec-tail.rs:21:33\n-   |\n-LL |                 &[Foo { string: a },\n-   |                                 ^\n-LL |                   Foo { string: b }] => {\n-   |                                 ^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n help: consider removing the `&`\n    |\n LL |                 [Foo { string: a },"}, {"sha": "e274d105e05034f4e0fb2512cc98fa981dd60de9", "filename": "src/test/ui/borrowck/borrowck-vec-pattern-nesting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.rs?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -75,12 +75,12 @@ fn e() {\n     match vec {\n         //~^ ERROR cannot move out\n         //~| NOTE cannot move out\n+        //~| NOTE move occurs because these variables have types\n         &mut [_a, _b, _c] => {}\n         //~^ NOTE data moved here\n         //~| NOTE and here\n         //~| NOTE and here\n         //~| HELP consider removing the `&mut`\n-        //~| NOTE move occurs because these variables have types\n         _ => {}\n     }\n     let a = vec[0]; //~ ERROR cannot move out"}, {"sha": "a3324f25d0bb5968c52f611958544f5a6366f395", "filename": "src/test/ui/borrowck/borrowck-vec-pattern-nesting.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-vec-pattern-nesting.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -97,11 +97,7 @@ LL |         &mut [_a, _b, _c] => {}\n    |         |     data moved here\n    |         help: consider removing the `&mut`: `[_a, _b, _c]`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/borrowck-vec-pattern-nesting.rs:78:15\n-   |\n-LL |         &mut [_a, _b, _c] => {}\n-   |               ^^  ^^  ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0508]: cannot move out of type `[std::boxed::Box<isize>]`, a non-copy slice\n   --> $DIR/borrowck-vec-pattern-nesting.rs:86:13"}, {"sha": "9d9a88f4f9b06353a1a0a73c1f600d281e712ed4", "filename": "src/test/ui/issues/issue-12567.stderr", "status": "modified", "additions": 2, "deletions": 16, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fissues%2Fissue-12567.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fissues%2Fissue-12567.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-12567.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -10,14 +10,7 @@ LL |             => println!(\"one empty\"),\n LL |         (&[hd1, ..], &[hd2, ..])\n    |                        --- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/issue-12567.rs:8:17\n-   |\n-LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n-   |                 ^^\n-LL |             => println!(\"one empty\"),\n-LL |         (&[hd1, ..], &[hd2, ..])\n-   |                        ^^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0508]: cannot move out of type `[T]`, a non-copy slice\n   --> $DIR/issue-12567.rs:4:11\n@@ -31,14 +24,7 @@ LL |             => println!(\"one empty\"),\n LL |         (&[hd1, ..], &[hd2, ..])\n    |            --- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/issue-12567.rs:8:17\n-   |\n-LL |         (&[], &[hd, ..]) | (&[hd, ..], &[])\n-   |                 ^^\n-LL |             => println!(\"one empty\"),\n-LL |         (&[hd1, ..], &[hd2, ..])\n-   |            ^^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d0a4097de6816fcb35321b63fca5900feaf80582", "filename": "src/test/ui/issues/issue-40402-ref-hints/issue-40402-2.stderr", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -7,11 +7,7 @@ LL |     let (a, b) = x[0];\n    |          |  ...and here\n    |          data moved here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/issue-40402-2.rs:5:10\n-   |\n-LL |     let (a, b) = x[0];\n-   |          ^  ^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error: aborting due to previous error\n "}, {"sha": "d4a0e45648c25ea2653e9568bf4478119c3f592b", "filename": "src/test/ui/nll/move-errors.stderr", "status": "modified", "additions": 2, "deletions": 12, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmove-errors.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -83,13 +83,7 @@ LL |         B::U(d) => (),\n LL |         B::V(s) => (),\n    |              - ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/move-errors.rs:76:14\n-   |\n-LL |         B::U(d) => (),\n-   |              ^\n-LL |         B::V(s) => (),\n-   |              ^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0509]: cannot move out of type `D`, which implements the `Drop` trait\n   --> $DIR/move-errors.rs:83:11\n@@ -138,11 +132,7 @@ LL |         F(s, mut t) => (),\n    |           |\n    |           data moved here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/move-errors.rs:104:11\n-   |\n-LL |         F(s, mut t) => (),\n-   |           ^  ^^^^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of `x.0` which is behind a shared reference\n   --> $DIR/move-errors.rs:110:11"}, {"sha": "1f1211aa198f8ea09a83ccb58a2a60f4b73229ff", "filename": "src/test/ui/suggestions/dont-suggest-ref/duplicate-suggestions.stderr", "status": "modified", "additions": 17, "deletions": 91, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref%2Fduplicate-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref%2Fduplicate-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref%2Fduplicate-suggestions.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -8,11 +8,7 @@ LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n    |         |   data moved here\n    |         help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:39:13\n-   |\n-LL |     let &(X(_t), X(_u)) = &(x.clone(), x.clone());\n-   |             ^^     ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/duplicate-suggestions.rs:43:50\n@@ -24,11 +20,7 @@ LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) {\n    |            |             data moved here\n    |            help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:43:26\n-   |\n-LL |     if let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n-   |                          ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/duplicate-suggestions.rs:47:53\n@@ -40,11 +32,7 @@ LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone())\n    |               |             data moved here\n    |               help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:47:29\n-   |\n-LL |     while let &(Either::One(_t), Either::Two(_u)) = &(e.clone(), e.clone()) { }\n-   |                             ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/duplicate-suggestions.rs:51:11\n@@ -60,14 +48,7 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n LL |         &(Either::Two(_t), Either::One(_u)) => (),\n    |                       -- ...and here   -- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:53:23\n-   |\n-LL |         &(Either::One(_t), Either::Two(_u)) => (),\n-   |                       ^^               ^^\n-...\n-LL |         &(Either::Two(_t), Either::One(_u)) => (),\n-   |                       ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n help: consider removing the `&`\n    |\n LL |         (Either::One(_t), Either::Two(_u)) => (),\n@@ -90,11 +71,7 @@ LL |         &(Either::One(_t), Either::Two(_u))\n    |         |             data moved here\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:63:23\n-   |\n-LL |         &(Either::One(_t), Either::Two(_u))\n-   |                       ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/duplicate-suggestions.rs:70:11\n@@ -109,11 +86,7 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         |             data moved here\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:72:23\n-   |\n-LL |         &(Either::One(_t), Either::Two(_u)) => (),\n-   |                       ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/duplicate-suggestions.rs:78:11\n@@ -128,11 +101,7 @@ LL |         &(Either::One(_t), Either::Two(_u)) => (),\n    |         |             data moved here\n    |         help: consider removing the `&`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:80:23\n-   |\n-LL |         &(Either::One(_t), Either::Two(_u)) => (),\n-   |                       ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:91:31\n@@ -144,11 +113,7 @@ LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n    |         |       data moved here\n    |         help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:91:17\n-   |\n-LL |     let &mut (X(_t), X(_u)) = &mut (xm.clone(), xm.clone());\n-   |                 ^^     ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:95:54\n@@ -160,11 +125,7 @@ LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.c\n    |            |                 data moved here\n    |            help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:95:30\n-   |\n-LL |     if let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n-   |                              ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:99:57\n@@ -176,11 +137,7 @@ LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), e\n    |               |                 data moved here\n    |               help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:99:33\n-   |\n-LL |     while let &mut (Either::One(_t), Either::Two(_u)) = &mut (em.clone(), em.clone()) { }\n-   |                                 ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:103:11\n@@ -196,14 +153,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n    |                           -- ...and here   -- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:105:27\n-   |\n-LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n-   |                           ^^               ^^\n-...\n-LL |         &mut (Either::Two(_t), Either::One(_u)) => (),\n-   |                           ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n help: consider removing the `&mut`\n    |\n LL |         (Either::One(_t), Either::Two(_u)) => (),\n@@ -226,11 +176,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u))\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:115:27\n-   |\n-LL |         &mut (Either::One(_t), Either::Two(_u))\n-   |                           ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:122:11\n@@ -245,11 +191,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:124:27\n-   |\n-LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n-   |                           ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:130:11\n@@ -264,11 +206,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:132:27\n-   |\n-LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n-   |                           ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:138:11\n@@ -283,11 +221,7 @@ LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n    |         |                 data moved here\n    |         help: consider removing the `&mut`: `(Either::One(_t), Either::Two(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:140:27\n-   |\n-LL |         &mut (Either::One(_t), Either::Two(_u)) => (),\n-   |                           ^^               ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/duplicate-suggestions.rs:86:11\n@@ -299,11 +233,7 @@ LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n    |           |   data moved here\n    |           help: consider removing the `&`: `(X(_t), X(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:86:15\n-   |\n-LL |     fn f5(&(X(_t), X(_u)): &(X, X)) { }\n-   |               ^^     ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a mutable reference\n   --> $DIR/duplicate-suggestions.rs:146:11\n@@ -315,11 +245,7 @@ LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n    |           |       data moved here\n    |           help: consider removing the `&mut`: `(X(_t), X(_u))`\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/duplicate-suggestions.rs:146:19\n-   |\n-LL |     fn f6(&mut (X(_t), X(_u)): &mut (X, X)) { }\n-   |                   ^^     ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error: aborting due to 17 previous errors\n "}, {"sha": "ac91ac43736f95e7b301b640389d6756562fcddc", "filename": "src/test/ui/suggestions/dont-suggest-ref/simple.stderr", "status": "modified", "additions": 2, "deletions": 15, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref%2Fsimple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9c97d73a2dad4828e64e152c1ce9ced94022f4f6/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref%2Fsimple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-ref%2Fsimple.stderr?ref=9c97d73a2dad4828e64e152c1ce9ced94022f4f6", "patch": "@@ -337,14 +337,7 @@ LL |         &mut Either::One(_t) => (),\n LL |         &mut Either::Two(_t) => (),\n    |                          -- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/simple.rs:221:26\n-   |\n-LL |         &mut Either::One(_t) => (),\n-   |                          ^^\n-...\n-LL |         &mut Either::Two(_t) => (),\n-   |                          ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n help: consider removing the `&mut`\n    |\n LL |         Either::One(_t) => (),\n@@ -470,13 +463,7 @@ LL |         (&mut Either::One(_t),) => (),\n LL |         (&mut Either::Two(_t),) => (),\n    |                           -- ...and here\n    |\n-note: move occurs because these variables have types that don't implement the `Copy` trait\n-  --> $DIR/simple.rs:280:27\n-   |\n-LL |         (&mut Either::One(_t),) => (),\n-   |                           ^^\n-LL |         (&mut Either::Two(_t),) => (),\n-   |                           ^^\n+   = note: move occurs because these variables have types that don't implement the `Copy` trait\n \n error[E0507]: cannot move out of a shared reference\n   --> $DIR/simple.rs:288:18"}]}