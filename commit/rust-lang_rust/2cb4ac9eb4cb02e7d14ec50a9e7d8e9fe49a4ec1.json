{"sha": "2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYjRhYzllYjRjYjAyZTdkMTRlYzUwYTllN2Q4ZTlmZTQ5YTRlYzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-12T18:24:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-02-16T16:17:32Z"}, "message": "Prepare for utf-8 offsets", "tree": {"sha": "d70cb9c9c61359ba0b171e3e38267e42bcb00b0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d70cb9c9c61359ba0b171e3e38267e42bcb00b0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "html_url": "https://github.com/rust-lang/rust/commit/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc49502ab47bcd20c90589226282b8f3c3df5190", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc49502ab47bcd20c90589226282b8f3c3df5190", "html_url": "https://github.com/rust-lang/rust/commit/cc49502ab47bcd20c90589226282b8f3c3df5190"}], "stats": {"total": 60, "additions": 30, "deletions": 30}, "files": [{"sha": "68756f78a815ed1e8c9c96ef6b088340ce708479", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -95,7 +95,7 @@ pub use ide_db::{\n     },\n     call_info::CallInfo,\n     label::Label,\n-    line_index::{LineCol, LineIndex},\n+    line_index::{LineColUtf16, LineIndex},\n     search::{ReferenceAccess, SearchScope},\n     source_change::{FileSystemEdit, SourceChange},\n     symbol_index::Query,"}, {"sha": "490c172e3e8f008ea40e2b975cdfae9b10d168e1", "filename": "crates/ide_db/src/line_index.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Fide_db%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Fide_db%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fline_index.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -15,11 +15,11 @@ pub struct LineIndex {\n }\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n-pub struct LineCol {\n+pub struct LineColUtf16 {\n     /// Zero-based\n     pub line: u32,\n     /// Zero-based\n-    pub col_utf16: u32,\n+    pub col: u32,\n }\n \n #[derive(Clone, Debug, Hash, PartialEq, Eq)]\n@@ -88,17 +88,17 @@ impl LineIndex {\n         LineIndex { newlines, utf16_lines }\n     }\n \n-    pub fn line_col(&self, offset: TextSize) -> LineCol {\n+    pub fn line_col(&self, offset: TextSize) -> LineColUtf16 {\n         let line = partition_point(&self.newlines, |&it| it <= offset) - 1;\n         let line_start_offset = self.newlines[line];\n         let col = offset - line_start_offset;\n \n-        LineCol { line: line as u32, col_utf16: self.utf8_to_utf16_col(line as u32, col) as u32 }\n+        LineColUtf16 { line: line as u32, col: self.utf8_to_utf16_col(line as u32, col) as u32 }\n     }\n \n-    pub fn offset(&self, line_col: LineCol) -> TextSize {\n+    pub fn offset(&self, line_col: LineColUtf16) -> TextSize {\n         //FIXME: return Result\n-        let col = self.utf16_to_utf8_col(line_col.line, line_col.col_utf16);\n+        let col = self.utf16_to_utf8_col(line_col.line, line_col.col);\n         self.newlines[line_col.line as usize] + col\n     }\n "}, {"sha": "1a109654e4cf987a16fb085453c0346c3c030e59", "filename": "crates/ide_db/src/line_index/tests.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Fide_db%2Fsrc%2Fline_index%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Fide_db%2Fsrc%2Fline_index%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fline_index%2Ftests.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -4,23 +4,23 @@ use super::*;\n fn test_line_index() {\n     let text = \"hello\\nworld\";\n     let index = LineIndex::new(text);\n-    assert_eq!(index.line_col(0.into()), LineCol { line: 0, col_utf16: 0 });\n-    assert_eq!(index.line_col(1.into()), LineCol { line: 0, col_utf16: 1 });\n-    assert_eq!(index.line_col(5.into()), LineCol { line: 0, col_utf16: 5 });\n-    assert_eq!(index.line_col(6.into()), LineCol { line: 1, col_utf16: 0 });\n-    assert_eq!(index.line_col(7.into()), LineCol { line: 1, col_utf16: 1 });\n-    assert_eq!(index.line_col(8.into()), LineCol { line: 1, col_utf16: 2 });\n-    assert_eq!(index.line_col(10.into()), LineCol { line: 1, col_utf16: 4 });\n-    assert_eq!(index.line_col(11.into()), LineCol { line: 1, col_utf16: 5 });\n-    assert_eq!(index.line_col(12.into()), LineCol { line: 1, col_utf16: 6 });\n+    assert_eq!(index.line_col(0.into()), LineColUtf16 { line: 0, col: 0 });\n+    assert_eq!(index.line_col(1.into()), LineColUtf16 { line: 0, col: 1 });\n+    assert_eq!(index.line_col(5.into()), LineColUtf16 { line: 0, col: 5 });\n+    assert_eq!(index.line_col(6.into()), LineColUtf16 { line: 1, col: 0 });\n+    assert_eq!(index.line_col(7.into()), LineColUtf16 { line: 1, col: 1 });\n+    assert_eq!(index.line_col(8.into()), LineColUtf16 { line: 1, col: 2 });\n+    assert_eq!(index.line_col(10.into()), LineColUtf16 { line: 1, col: 4 });\n+    assert_eq!(index.line_col(11.into()), LineColUtf16 { line: 1, col: 5 });\n+    assert_eq!(index.line_col(12.into()), LineColUtf16 { line: 1, col: 6 });\n \n     let text = \"\\nhello\\nworld\";\n     let index = LineIndex::new(text);\n-    assert_eq!(index.line_col(0.into()), LineCol { line: 0, col_utf16: 0 });\n-    assert_eq!(index.line_col(1.into()), LineCol { line: 1, col_utf16: 0 });\n-    assert_eq!(index.line_col(2.into()), LineCol { line: 1, col_utf16: 1 });\n-    assert_eq!(index.line_col(6.into()), LineCol { line: 1, col_utf16: 5 });\n-    assert_eq!(index.line_col(7.into()), LineCol { line: 2, col_utf16: 0 });\n+    assert_eq!(index.line_col(0.into()), LineColUtf16 { line: 0, col: 0 });\n+    assert_eq!(index.line_col(1.into()), LineColUtf16 { line: 1, col: 0 });\n+    assert_eq!(index.line_col(2.into()), LineColUtf16 { line: 1, col: 1 });\n+    assert_eq!(index.line_col(6.into()), LineColUtf16 { line: 1, col: 5 });\n+    assert_eq!(index.line_col(7.into()), LineColUtf16 { line: 2, col: 0 });\n }\n \n #[test]"}, {"sha": "edf12faa4d6dd88ee53db2113668b01b5652c160", "filename": "crates/rust-analyzer/src/cli/analysis_bench.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_bench.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -5,7 +5,7 @@ use std::{env, path::PathBuf, str::FromStr, sync::Arc, time::Instant};\n use anyhow::{bail, format_err, Result};\n use hir::PrefixKind;\n use ide::{\n-    Analysis, AnalysisHost, Change, CompletionConfig, DiagnosticsConfig, FilePosition, LineCol,\n+    Analysis, AnalysisHost, Change, CompletionConfig, DiagnosticsConfig, FilePosition, LineColUtf16,\n };\n use ide_db::{\n     base_db::{\n@@ -97,7 +97,7 @@ impl BenchCmd {\n                 let offset = host\n                     .analysis()\n                     .file_line_index(file_id)?\n-                    .offset(LineCol { line: pos.line - 1, col_utf16: pos.column });\n+                    .offset(LineColUtf16 { line: pos.line - 1, col: pos.column });\n                 let file_position = FilePosition { file_id, offset };\n \n                 if is_completion {"}, {"sha": "6d6f398f482633372e276a88a374cda970d38130", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -218,9 +218,9 @@ impl AnalysisStatsCmd {\n                         bar.println(format!(\n                             \"{}:{}-{}:{}: {}\",\n                             start.line + 1,\n-                            start.col_utf16,\n+                            start.col,\n                             end.line + 1,\n-                            end.col_utf16,\n+                            end.col,\n                             ty.display(db)\n                         ));\n                     } else {\n@@ -250,9 +250,9 @@ impl AnalysisStatsCmd {\n                                 \"{} {}:{}-{}:{}: Expected {}, got {}\",\n                                 path,\n                                 start.line + 1,\n-                                start.col_utf16,\n+                                start.col,\n                                 end.line + 1,\n-                                end.col_utf16,\n+                                end.col,\n                                 mismatch.expected.display(db),\n                                 mismatch.actual.display(db)\n                             ));"}, {"sha": "82e7cfa8183fb10dd4afceba766d6a6f0768b41d", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -1,7 +1,7 @@\n //! Conversion lsp_types types to rust-analyzer specific ones.\n use std::convert::TryFrom;\n \n-use ide::{Annotation, AnnotationKind, AssistKind, LineCol, LineIndex};\n+use ide::{Annotation, AnnotationKind, AssistKind, LineColUtf16, LineIndex};\n use ide_db::base_db::{FileId, FilePosition, FileRange};\n use syntax::{TextRange, TextSize};\n use vfs::AbsPathBuf;\n@@ -18,7 +18,7 @@ pub(crate) fn vfs_path(url: &lsp_types::Url) -> Result<vfs::VfsPath> {\n }\n \n pub(crate) fn offset(line_index: &LineIndex, position: lsp_types::Position) -> TextSize {\n-    let line_col = LineCol { line: position.line as u32, col_utf16: position.character as u32 };\n+    let line_col = LineColUtf16 { line: position.line as u32, col: position.character as u32 };\n     line_index.offset(line_col)\n }\n "}, {"sha": "599b5207c1eef7dd4ec9565c0255c78255b0294e", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=2cb4ac9eb4cb02e7d14ec50a9e7d8e9fe49a4ec1", "patch": "@@ -22,7 +22,7 @@ use crate::{\n \n pub(crate) fn position(line_index: &LineIndex, offset: TextSize) -> lsp_types::Position {\n     let line_col = line_index.line_col(offset);\n-    lsp_types::Position::new(line_col.line, line_col.col_utf16)\n+    lsp_types::Position::new(line_col.line, line_col.col)\n }\n \n pub(crate) fn range(line_index: &LineIndex, range: TextRange) -> lsp_types::Range {"}]}