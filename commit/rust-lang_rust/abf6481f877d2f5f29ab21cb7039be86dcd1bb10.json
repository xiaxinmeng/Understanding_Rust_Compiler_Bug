{"sha": "abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiZjY0ODFmODc3ZDJmNWYyOWFiMjFjYjcwMzliZTg2ZGNkMWJiMTA=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-12T03:41:30Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-12T04:39:37Z"}, "message": "Add in_macro again", "tree": {"sha": "0a9ca7d5dc6b772e74488383a3c620edad9a55e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0a9ca7d5dc6b772e74488383a3c620edad9a55e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "html_url": "https://github.com/rust-lang/rust/commit/abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7eb8018554cc0b8e3438b995f70cdd2e30151526", "url": "https://api.github.com/repos/rust-lang/rust/commits/7eb8018554cc0b8e3438b995f70cdd2e30151526", "html_url": "https://github.com/rust-lang/rust/commit/7eb8018554cc0b8e3438b995f70cdd2e30151526"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "5c19e232bc9848d2b5d4fbabe46beab29924845f", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "patch": "@@ -1,6 +1,6 @@\n use crate::utils::{\n-    get_trait_def_id, implements_trait, in_macro_or_desugar, match_type, paths, snippet_opt, span_lint_and_then,\n-    SpanlessEq,\n+    get_trait_def_id, implements_trait, in_macro, in_macro_or_desugar, match_type, paths, snippet_opt,\n+    span_lint_and_then, SpanlessEq,\n };\n use rustc::hir::intravisit::*;\n use rustc::hir::*;\n@@ -442,7 +442,7 @@ impl<'a, 'tcx> NonminimalBoolVisitor<'a, 'tcx> {\n \n impl<'a, 'tcx> Visitor<'tcx> for NonminimalBoolVisitor<'a, 'tcx> {\n     fn visit_expr(&mut self, e: &'tcx Expr) {\n-        if in_macro_or_desugar(e.span) {\n+        if in_macro(e.span) {\n             return;\n         }\n         match &e.node {"}, {"sha": "f8cde663d899a5ad333cacf436fec833eb037f38", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "patch": "@@ -20,7 +20,7 @@ use syntax::symbol::LocalInternedString;\n use crate::utils::paths;\n use crate::utils::sugg;\n use crate::utils::{\n-    get_arg_name, get_parent_expr, get_trait_def_id, has_iter_method, implements_trait, in_macro_or_desugar, is_copy,\n+    get_arg_name, get_parent_expr, get_trait_def_id, has_iter_method, implements_trait, in_macro, is_copy,\n     is_ctor_function, is_expn_of, is_self, is_self_ty, iter_input_pats, last_path_segment, match_path, match_qpath,\n     match_trait_method, match_type, match_var, method_calls, method_chain_args, remove_blocks, return_ty, same_tys,\n     single_segment_path, snippet, snippet_with_applicability, snippet_with_macro_callsite, span_lint,\n@@ -859,7 +859,7 @@ declare_lint_pass!(Methods => [\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Methods {\n     #[allow(clippy::cognitive_complexity)]\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx hir::Expr) {\n-        if in_macro_or_desugar(expr.span) {\n+        if in_macro(expr.span) {\n             return;\n         }\n "}, {"sha": "bfc1233f9eba5ec3c1958f0911a7219362780264", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/abf6481f877d2f5f29ab21cb7039be86dcd1bb10/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=abf6481f877d2f5f29ab21cb7039be86dcd1bb10", "patch": "@@ -89,8 +89,13 @@ pub fn in_constant(cx: &LateContext<'_, '_>, id: HirId) -> bool {\n     }\n }\n \n-/// Returns `true` if this `expn_info` was expanded by any macro.\n+/// Returns `true` if this `expn_info` was expanded by any macro or desugaring\n pub fn in_macro_or_desugar(span: Span) -> bool {\n+    span.ctxt().outer().expn_info().is_some()\n+}\n+\n+/// Returns `true` if this `expn_info` was expanded by any macro.\n+pub fn in_macro(span: Span) -> bool {\n     if let Some(info) = span.ctxt().outer().expn_info() {\n         if let ExpnFormat::CompilerDesugaring(..) = info.format {\n             false\n@@ -101,7 +106,6 @@ pub fn in_macro_or_desugar(span: Span) -> bool {\n         false\n     }\n }\n-\n // If the snippet is empty, it's an attribute that was inserted during macro\n // expansion and we want to ignore those, because they could come from external\n // sources that the user has no control over."}]}