{"sha": "19339334cb4e9c6db5a1f7dced38edcb16707bc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MzM5MzM0Y2I0ZTljNmRiNWExZjdkY2VkMzhlZGNiMTY3MDdiYzc=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-05-31T09:38:48Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-06-01T08:39:52Z"}, "message": "Give more corrected code examples in doc", "tree": {"sha": "1099fa87df6963f6033c37a446236644d1331e44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1099fa87df6963f6033c37a446236644d1331e44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19339334cb4e9c6db5a1f7dced38edcb16707bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19339334cb4e9c6db5a1f7dced38edcb16707bc7", "html_url": "https://github.com/rust-lang/rust/commit/19339334cb4e9c6db5a1f7dced38edcb16707bc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19339334cb4e9c6db5a1f7dced38edcb16707bc7/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "262c9dc025042646610df879dd9708eea625534d", "url": "https://api.github.com/repos/rust-lang/rust/commits/262c9dc025042646610df879dd9708eea625534d", "html_url": "https://github.com/rust-lang/rust/commit/262c9dc025042646610df879dd9708eea625534d"}], "stats": {"total": 233, "additions": 195, "deletions": 38}, "files": [{"sha": "7ba43562d7d447b565095ae2b033d1f125df6483", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -24,7 +24,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let x: u64 = 61864918973511;\n+    ///\n+    /// // Good\n+    /// let x: u64 = 61_864_918_973_511;\n     /// ```\n     pub UNREADABLE_LITERAL,\n     pedantic,\n@@ -44,7 +48,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Probably mistyped\n     /// 2_32;\n+    ///\n+    /// // Good\n+    /// 2_i32;\n     /// ```\n     pub MISTYPED_LITERAL_SUFFIXES,\n     correctness,\n@@ -63,7 +71,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let x: u64 = 618_64_9189_73_511;\n+    ///\n+    /// // Good\n+    /// let x: u64 = 61_864_918_973_511;\n     /// ```\n     pub INCONSISTENT_DIGIT_GROUPING,\n     style,"}, {"sha": "146212cb2c7a1933806e3e098243cc22ac9e891e", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 39, "deletions": 5, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -36,10 +36,17 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # fn bar(stool: &str) {}\n     /// # let x = Some(\"abc\");\n+    ///\n+    /// // Bad\n     /// match x {\n     ///     Some(ref foo) => bar(foo),\n     ///     _ => (),\n     /// }\n+    ///\n+    /// // Good\n+    /// if let Some(ref foo) = x {\n+    ///     bar(foo);\n+    /// }\n     /// ```\n     pub SINGLE_MATCH,\n     style,\n@@ -97,11 +104,19 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n+    /// // Bad\n     /// match x {\n     ///     &A(ref y) => foo(y),\n     ///     &B => bar(),\n     ///     _ => frob(&x),\n     /// }\n+    ///\n+    /// // Good\n+    /// match *x {\n+    ///     A(ref y) => foo(y),\n+    ///     B => bar(),\n+    ///     _ => frob(x),\n+    /// }\n     /// ```\n     pub MATCH_REF_PATS,\n     style,\n@@ -197,10 +212,15 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// let x: Option<()> = None;\n+    ///\n+    /// // Bad\n     /// let r: Option<&()> = match x {\n     ///     None => None,\n     ///     Some(ref v) => Some(v),\n     /// };\n+    ///\n+    /// // Good\n+    /// let r: Option<&()> = x.as_ref();\n     /// ```\n     pub MATCH_AS_REF,\n     complexity,\n@@ -219,10 +239,18 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # enum Foo { A(usize), B(usize) }\n     /// # let x = Foo::B(1);\n+    ///\n+    /// // Bad\n     /// match x {\n     ///     Foo::A(_) => {},\n     ///     _ => {},\n     /// }\n+    ///\n+    /// // Good\n+    /// match x {\n+    ///     Foo::A(_) => {},\n+    ///     Foo::B(_) => {},\n+    /// }\n     /// ```\n     pub WILDCARD_ENUM_MATCH_ARM,\n     restriction,\n@@ -242,16 +270,15 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # enum Foo { A, B, C }\n     /// # let x = Foo::B;\n+    ///\n+    /// // Bad\n     /// match x {\n     ///     Foo::A => {},\n     ///     Foo::B => {},\n     ///     _ => {},\n     /// }\n-    /// ```\n-    /// Use instead:\n-    /// ```rust\n-    /// # enum Foo { A, B, C }\n-    /// # let x = Foo::B;\n+    ///\n+    /// // Good\n     /// match x {\n     ///     Foo::A => {},\n     ///     Foo::B => {},\n@@ -273,10 +300,17 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// match \"foo\" {\n     ///     \"a\" => {},\n     ///     \"bar\" | _ => {},\n     /// }\n+    ///\n+    /// // Good\n+    /// match \"foo\" {\n+    ///     \"a\" => {},\n+    ///     _ => {},\n+    /// }\n     /// ```\n     pub WILDCARD_IN_OR_PATTERNS,\n     complexity,"}, {"sha": "a3b7134a376d5c35e6b3320c6c5fd6e37fe91818", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 29, "deletions": 2, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -38,10 +38,16 @@ declare_clippy_lint! {\n     /// dereferences, e.g., changing `*x` to `x` within the function.\n     ///\n     /// **Example:**\n-    /// ```rust\n+    /// ```rust,ignore\n+    /// // Bad\n     /// fn foo(ref x: u8) -> bool {\n     ///     true\n     /// }\n+    ///\n+    /// // Good\n+    /// fn foo(x: &u8) -> bool {\n+    ///     true\n+    /// }\n     /// ```\n     pub TOPLEVEL_REF_ARG,\n     style,\n@@ -60,7 +66,11 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # let x = 1.0;\n     ///\n+    /// // Bad\n     /// if x == f32::NAN { }\n+    ///\n+    /// // Good\n+    /// if x.is_nan() { }\n     /// ```\n     pub CMP_NAN,\n     correctness,\n@@ -83,8 +93,15 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x = 1.2331f64;\n     /// let y = 1.2332f64;\n+    /// \n+    /// // Bad\n     /// if y == 1.23f64 { }\n     /// if y != x {} // where both are floats\n+    ///\n+    /// // Good\n+    /// let error = 0.01f64; // Use an epsilon for comparison\n+    /// if (y - 1.23f64).abs() < error { }\n+    /// if (y - x).abs() > error { }\n     /// ```\n     pub FLOAT_CMP,\n     correctness,\n@@ -191,7 +208,11 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// // Bad\n     /// let a = 0 as *const u32;\n+    ///\n+    /// // Good\n+    /// let a = std::ptr::null::<u32>();\n     /// ```\n     pub ZERO_PTR,\n     style,\n@@ -214,7 +235,13 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let x: f64 = 1.0;\n     /// const ONE: f64 = 1.00;\n-    /// x == ONE;  // where both are floats\n+    ///\n+    /// // Bad\n+    /// if x == ONE { }  // where both are floats\n+    ///\n+    /// // Good\n+    /// let error = 0.1f64; // Use an epsilon for comparison\n+    /// if (x - ONE).abs() < error { }\n     /// ```\n     pub FLOAT_CMP_CONST,\n     restriction,"}, {"sha": "ad39e59d0678a29bdac0ae5420e3443869865d33", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -59,7 +59,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// fn foo(a: i32, _a: i32) {}\n+    ///\n+    /// // Good\n+    /// fn bar(a: i32, _b: i32) {}\n     /// ```\n     pub DUPLICATE_UNDERSCORE_ARGUMENT,\n     style,\n@@ -77,7 +81,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n-    /// (|| 42)()\n+    /// // Bad\n+    /// let a = (|| 42)()\n+    ///\n+    /// // Good\n+    /// let a = 42\n     /// ```\n     pub REDUNDANT_CLOSURE_CALL,\n     complexity,\n@@ -112,7 +120,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let y = 0x1a9BAcD;\n+    ///\n+    /// // Good\n+    /// let y = 0x1A9BACD;\n     /// ```\n     pub MIXED_CASE_HEX_LITERALS,\n     style,\n@@ -129,7 +141,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let y = 123832i32;\n+    ///\n+    /// // Good\n+    /// let y = 123832_i32;\n     /// ```\n     pub UNSEPARATED_LITERAL_SUFFIX,\n     pedantic,\n@@ -207,9 +223,16 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # let v = Some(\"abc\");\n     ///\n+    /// // Bad\n+    /// match v {\n+    ///     Some(x) => (),\n+    ///     y @ _ => (),\n+    /// }\n+    ///\n+    /// // Good\n     /// match v {\n     ///     Some(x) => (),\n-    ///     y @ _ => (), // easier written as `y`,\n+    ///     y => (),\n     /// }\n     /// ```\n     pub REDUNDANT_PATTERN,\n@@ -235,16 +258,13 @@ declare_clippy_lint! {\n     /// # struct TupleStruct(u32, u32, u32);\n     /// # let t = TupleStruct(1, 2, 3);\n     ///\n+    /// // Bad\n     /// match t {\n     ///     TupleStruct(0, .., _) => (),\n     ///     _ => (),\n     /// }\n-    /// ```\n-    /// can be written as\n-    /// ```rust\n-    /// # struct TupleStruct(u32, u32, u32);\n-    /// # let t = TupleStruct(1, 2, 3);\n     ///\n+    /// // Good\n     /// match t {\n     ///     TupleStruct(0, ..) => (),\n     ///     _ => (),"}, {"sha": "58a8e1a1064ae7603f46bce495a4a76c70afaff7", "filename": "clippy_lints/src/mut_reference.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmut_reference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmut_reference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmut_reference.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -16,7 +16,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// my_vec.push(&mut value)\n+    ///\n+    /// // Good\n+    /// my_vec.push(&value)\n     /// ```\n     pub UNNECESSARY_MUT_PASSED,\n     style,"}, {"sha": "78b15afc5a7fac4105fc5be6e699838bd43f5342", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -22,9 +22,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// # let y = true;\n+    ///\n+    /// // Bad\n     /// # use std::sync::Mutex;\n-    /// # let y = 1;\n     /// let x = Mutex::new(&y);\n+    ///\n+    /// // Good\n+    /// # use std::sync::atomic::AtomicBool;\n+    /// let x = AtomicBool::new(y);\n     /// ```\n     pub MUTEX_ATOMIC,\n     perf,\n@@ -46,6 +52,10 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use std::sync::Mutex;\n     /// let x = Mutex::new(0usize);\n+    ///\n+    /// // Good\n+    /// # use std::sync::atomic::AtomicUsize;\n+    /// let x = AtomicUsize::new(0usize);\n     /// ```\n     pub MUTEX_INTEGER,\n     nursery,"}, {"sha": "15b129fa09802922543c184d3e47d7905dc622c2", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -15,8 +15,7 @@ use rustc_span::Span;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for expressions of the form `if c { true } else {\n-    /// false }`\n-    /// (or vice versa) and suggest using the condition directly.\n+    /// false }` (or vice versa) and suggests using the condition directly.\n     ///\n     /// **Why is this bad?** Redundant code.\n     ///"}, {"sha": "5880d1d610206365b77e0be95f1e88af9d7d9d56", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -18,12 +18,16 @@ declare_clippy_lint! {\n     /// **Why is this bad?** Suggests that the receiver of the expression borrows\n     /// the expression.\n     ///\n+    /// **Known problems:** None.\n+    ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let x: &i32 = &&&&&&5;\n-    /// ```\n     ///\n-    /// **Known problems:** None.\n+    /// // Good\n+    /// let x: &i32 = &5;\n+    /// ```\n     pub NEEDLESS_BORROW,\n     nursery,\n     \"taking a reference that is going to be automatically dereferenced\""}, {"sha": "fbdf927b82476544c7cd79456d3a9720207c9641", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -40,9 +40,8 @@ declare_clippy_lint! {\n     ///     assert_eq!(v.len(), 42);\n     /// }\n     /// ```\n-    ///\n+    /// should be\n     /// ```rust\n-    /// // should be\n     /// fn foo(v: &[i32]) {\n     ///     assert_eq!(v.len(), 42);\n     /// }"}, {"sha": "d866bab2f642c46242b92bed638c577612aa062a", "filename": "clippy_lints/src/needless_update.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_update.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fneedless_update.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_update.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -21,6 +21,16 @@ declare_clippy_lint! {\n     /// #     z: i32,\n     /// # }\n     /// # let zero_point = Point { x: 0, y: 0, z: 0 };\n+    ///\n+    /// // Bad\n+    /// Point {\n+    ///     x: 1,\n+    ///     y: 1,\n+    ///     z: 1,\n+    ///     ..zero_point\n+    /// };\n+    ///\n+    /// // Ok\n     /// Point {\n     ///     x: 1,\n     ///     y: 1,"}, {"sha": "c77b44e0c99c710381a39bebcfe9b6e88d6557df", "filename": "clippy_lints/src/ptr.rs", "status": "modified", "additions": 15, "deletions": 8, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fptr.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -47,7 +47,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// fn foo(&Vec<u32>) { .. }\n+    ///\n+    /// // Good\n+    /// fn foo(&[u32]) { .. }\n     /// ```\n     pub PTR_ARG,\n     style,\n@@ -65,9 +69,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```ignore\n+    /// // Bad\n     /// if x == ptr::null {\n     ///     ..\n     /// }\n+    ///\n+    /// // Good\n+    /// if x.is_null() {\n+    ///     ..\n+    /// }\n     /// ```\n     pub CMP_NULL,\n     style,\n@@ -76,19 +86,16 @@ declare_clippy_lint! {\n \n declare_clippy_lint! {\n     /// **What it does:** This lint checks for functions that take immutable\n-    /// references and return\n-    /// mutable ones.\n+    /// references and return mutable ones.\n     ///\n     /// **Why is this bad?** This is trivially unsound, as one can create two\n-    /// mutable references\n-    /// from the same (immutable!) source. This\n-    /// [error](https://github.com/rust-lang/rust/issues/39465)\n+    /// mutable references from the same (immutable!) source.\n+    /// This [error](https://github.com/rust-lang/rust/issues/39465)\n     /// actually lead to an interim Rust release 1.15.1.\n     ///\n     /// **Known problems:** To be on the conservative side, if there's at least one\n-    /// mutable reference\n-    /// with the output lifetime, this lint will not trigger. In practice, this\n-    /// case is unlikely anyway.\n+    /// mutable reference with the output lifetime, this lint will not trigger.\n+    /// In practice, this case is unlikely anyway.\n     ///\n     /// **Example:**\n     /// ```ignore"}, {"sha": "e4361b00fb4c2df025c79612ca2baf87a4888c66", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -88,7 +88,7 @@ impl QuestionMark {\n                         replacement_str,\n                         applicability,\n                     )\n-               }\n+                }\n             }\n         }\n     }"}, {"sha": "fe457aad50e368adb6605b7fbcfc912bfcb1cd17", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -16,8 +16,13 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust,ignore\n+    /// // Bad\n     /// let a = f(*&mut b);\n     /// let c = *&d;\n+    ///\n+    /// // Good\n+    /// let a = f(b);\n+    /// let c = d;\n     /// ```\n     pub DEREF_ADDROF,\n     complexity,"}, {"sha": "a2c35c4267344a95eef43abf696e465d4d7d2b22", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -86,11 +86,13 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Regex {\n             if let Some(span) = is_expn_of(expr.span, \"regex\");\n             then {\n                 if !self.spans.contains(&span) {\n-                    span_lint(cx,\n-                              REGEX_MACRO,\n-                              span,\n-                              \"`regex!(_)` found. \\\n-                              Please use `Regex::new(_)`, which is faster for now.\");\n+                    span_lint(\n+                        cx,\n+                        REGEX_MACRO,\n+                        span,\n+                        \"`regex!(_)` found. \\\n+                        Please use `Regex::new(_)`, which is faster for now.\"\n+                    );\n                     self.spans.insert(span);\n                 }\n                 self.last = Some(block.hir_id);"}, {"sha": "68c36f918918438a79f80bf4b3ff7a9a34b50ef7", "filename": "clippy_lints/src/shadow.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fshadow.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -25,7 +25,12 @@ declare_clippy_lint! {\n     /// **Example:**\n     /// ```rust\n     /// # let x = 1;\n+    ///\n+    /// // Bad\n     /// let x = &x;\n+    ///\n+    /// // Good\n+    /// let y = &x; // use different variable name\n     /// ```\n     pub SHADOW_SAME,\n     restriction,\n@@ -77,7 +82,12 @@ declare_clippy_lint! {\n     /// # let y = 1;\n     /// # let z = 2;\n     /// let x = y;\n+    ///\n+    /// // Bad\n     /// let x = z; // shadows the earlier binding\n+    ///\n+    /// // Good\n+    /// let w = z; // use different variable name\n     /// ```\n     pub SHADOW_UNRELATED,\n     pedantic,"}, {"sha": "2e853e8301d6999ac2ef1313787ab1129e338bfd", "filename": "clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -16,15 +16,15 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     ///\n-    /// ```rust, ignore\n+    /// ```rust,ignore\n     /// use regex;\n     ///\n     /// fn main() {\n     ///     regex::Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\n     /// }\n     /// ```\n     /// Better as\n-    /// ```rust, ignore\n+    /// ```rust,ignore\n     /// fn main() {\n     ///     regex::Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\n     /// }"}, {"sha": "a7c4f2c2291f12f0ef1582cbba569d9d4cd6a55c", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -22,11 +22,17 @@ declare_clippy_lint! {\n     /// ```rust\n     /// # use core::iter::repeat;\n     /// # let len = 4;\n+    ///\n+    /// // Bad\n     /// let mut vec1 = Vec::with_capacity(len);\n     /// vec1.resize(len, 0);\n     ///\n     /// let mut vec2 = Vec::with_capacity(len);\n-    /// vec2.extend(repeat(0).take(len))\n+    /// vec2.extend(repeat(0).take(len));\n+    ///\n+    /// // Good\n+    /// let mut vec1 = vec![0; len];\n+    /// let mut vec2 = vec![0; len];\n     /// ```\n     pub SLOW_VECTOR_INITIALIZATION,\n     perf,"}, {"sha": "f84566ef707a8e41dbc8a2b00275d7d55c07aeb6", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19339334cb4e9c6db5a1f7dced38edcb16707bc7/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=19339334cb4e9c6db5a1f7dced38edcb16707bc7", "patch": "@@ -24,6 +24,10 @@ declare_clippy_lint! {\n     /// ```rust\n     /// let mut x = \"Hello\".to_owned();\n     /// x = x + \", World\";\n+    ///\n+    /// // More readable\n+    /// x += \", World\";\n+    /// x.push_str(\", World\");\n     /// ```\n     pub STRING_ADD_ASSIGN,\n     pedantic,\n@@ -69,7 +73,11 @@ declare_clippy_lint! {\n     ///\n     /// **Example:**\n     /// ```rust\n+    /// // Bad\n     /// let bs = \"a byte string\".as_bytes();\n+    ///\n+    /// // Good\n+    /// let bs = b\"a byte string\";\n     /// ```\n     pub STRING_LIT_AS_BYTES,\n     style,"}]}