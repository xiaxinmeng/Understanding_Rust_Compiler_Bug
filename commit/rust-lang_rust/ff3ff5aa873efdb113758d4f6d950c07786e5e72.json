{"sha": "ff3ff5aa873efdb113758d4f6d950c07786e5e72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmM2ZmNWFhODczZWZkYjExMzc1OGQ0ZjZkOTUwYzA3Nzg2ZTVlNzI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-05-17T21:58:51Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2016-05-17T21:58:51Z"}, "message": "Handle parser errors better", "tree": {"sha": "0ffbf3c65823a0552ebbdc96c1d5e7c97a8a0792", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ffbf3c65823a0552ebbdc96c1d5e7c97a8a0792"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff3ff5aa873efdb113758d4f6d950c07786e5e72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff3ff5aa873efdb113758d4f6d950c07786e5e72", "html_url": "https://github.com/rust-lang/rust/commit/ff3ff5aa873efdb113758d4f6d950c07786e5e72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff3ff5aa873efdb113758d4f6d950c07786e5e72/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ba6ee5a2e92822b9d805c3d30b18c38de6c250", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ba6ee5a2e92822b9d805c3d30b18c38de6c250", "html_url": "https://github.com/rust-lang/rust/commit/c8ba6ee5a2e92822b9d805c3d30b18c38de6c250"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "69f9aaebbb7ba1043a4f54193c31e0caf914c7cc", "filename": "src/lib.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ff3ff5aa873efdb113758d4f6d950c07786e5e72/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff3ff5aa873efdb113758d4f6d950c07786e5e72/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ff3ff5aa873efdb113758d4f6d950c07786e5e72", "patch": "@@ -392,12 +392,17 @@ fn parse_input(input: Input,\n         }\n     };\n \n-    // Bail out if the parser recovered from an error.\n-    if parse_session.span_diagnostic.has_errors() {\n-        return Err(None);\n+    match result {\n+        Ok(c) => {\n+            if parse_session.span_diagnostic.has_errors() {\n+                // Bail out if the parser recovered from an error.\n+                Err(None)\n+            } else {\n+                Ok(c)\n+            }\n+        }\n+        Err(e) => Err(Some(e)),\n     }\n-\n-    result.map_err(|e| Some(e))\n }\n \n pub fn format_input<T: Write>(input: Input,"}]}