{"sha": "e6f3790106fdfa2aaf6a0510c737fd05939345e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ZjM3OTAxMDZmZGZhMmFhZjZhMDUxMGM3MzdmZDA1OTM5MzQ1ZTc=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-08-23T20:04:58Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-08-23T22:11:34Z"}, "message": "Add `BoxPat` variant", "tree": {"sha": "64fea8d44d551fca26cf231b658a68dbad3f32da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64fea8d44d551fca26cf231b658a68dbad3f32da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6f3790106fdfa2aaf6a0510c737fd05939345e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6f3790106fdfa2aaf6a0510c737fd05939345e7", "html_url": "https://github.com/rust-lang/rust/commit/e6f3790106fdfa2aaf6a0510c737fd05939345e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6f3790106fdfa2aaf6a0510c737fd05939345e7/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdece911fe8e2f3c22760ea22038a6d00cb70dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdece911fe8e2f3c22760ea22038a6d00cb70dfa", "html_url": "https://github.com/rust-lang/rust/commit/fdece911fe8e2f3c22760ea22038a6d00cb70dfa"}], "stats": {"total": 43, "additions": 41, "deletions": 2}, "files": [{"sha": "8ba29ebf8360bb2e77577b4557a74893f160c649", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e6f3790106fdfa2aaf6a0510c737fd05939345e7/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6f3790106fdfa2aaf6a0510c737fd05939345e7/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=e6f3790106fdfa2aaf6a0510c737fd05939345e7", "patch": "@@ -149,6 +149,7 @@ pub enum SyntaxKind {\n     IMPL_TRAIT_TYPE,\n     DYN_TRAIT_TYPE,\n     REF_PAT,\n+    BOX_PAT,\n     BIND_PAT,\n     PLACEHOLDER_PAT,\n     PATH_PAT,"}, {"sha": "90480b6ca5f21db8dde64db80228ffffe416586c", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 37, "deletions": 2, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/e6f3790106fdfa2aaf6a0510c737fd05939345e7/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6f3790106fdfa2aaf6a0510c737fd05939345e7/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=e6f3790106fdfa2aaf6a0510c737fd05939345e7", "patch": "@@ -307,6 +307,33 @@ impl BlockExpr {\n     }\n }\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct BoxPat {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl AstNode for BoxPat {\n+    fn can_cast(kind: SyntaxKind) -> bool {\n+        match kind {\n+            BOX_PAT => true,\n+            _ => false,\n+        }\n+    }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode {\n+        &self.syntax\n+    }\n+}\n+impl BoxPat {\n+    pub fn pat(&self) -> Option<Pat> {\n+        AstChildren::new(&self.syntax).next()\n+    }\n+}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct BreakExpr {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -2063,6 +2090,7 @@ impl ParenType {\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum Pat {\n     RefPat(RefPat),\n+    BoxPat(BoxPat),\n     BindPat(BindPat),\n     PlaceholderPat(PlaceholderPat),\n     PathPat(PathPat),\n@@ -2078,6 +2106,11 @@ impl From<RefPat> for Pat {\n         Pat::RefPat(node)\n     }\n }\n+impl From<BoxPat> for Pat {\n+    fn from(node: BoxPat) -> Pat {\n+        Pat::BoxPat(node)\n+    }\n+}\n impl From<BindPat> for Pat {\n     fn from(node: BindPat) -> Pat {\n         Pat::BindPat(node)\n@@ -2126,14 +2159,15 @@ impl From<LiteralPat> for Pat {\n impl AstNode for Pat {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            REF_PAT | BIND_PAT | PLACEHOLDER_PAT | PATH_PAT | RECORD_PAT | TUPLE_STRUCT_PAT\n-            | TUPLE_PAT | SLICE_PAT | RANGE_PAT | LITERAL_PAT => true,\n+            REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | PATH_PAT | RECORD_PAT\n+            | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT | LITERAL_PAT => true,\n             _ => false,\n         }\n     }\n     fn cast(syntax: SyntaxNode) -> Option<Self> {\n         let res = match syntax.kind() {\n             REF_PAT => Pat::RefPat(RefPat { syntax }),\n+            BOX_PAT => Pat::BoxPat(BoxPat { syntax }),\n             BIND_PAT => Pat::BindPat(BindPat { syntax }),\n             PLACEHOLDER_PAT => Pat::PlaceholderPat(PlaceholderPat { syntax }),\n             PATH_PAT => Pat::PathPat(PathPat { syntax }),\n@@ -2150,6 +2184,7 @@ impl AstNode for Pat {\n     fn syntax(&self) -> &SyntaxNode {\n         match self {\n             Pat::RefPat(it) => &it.syntax,\n+            Pat::BoxPat(it) => &it.syntax,\n             Pat::BindPat(it) => &it.syntax,\n             Pat::PlaceholderPat(it) => &it.syntax,\n             Pat::PathPat(it) => &it.syntax,"}, {"sha": "1836862fe04dbdd2042597a3bd59696cf92ea3c0", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6f3790106fdfa2aaf6a0510c737fd05939345e7/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/e6f3790106fdfa2aaf6a0510c737fd05939345e7/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=e6f3790106fdfa2aaf6a0510c737fd05939345e7", "patch": "@@ -158,6 +158,7 @@ Grammar(\n         \"DYN_TRAIT_TYPE\",\n \n         \"REF_PAT\",\n+        \"BOX_PAT\",\n         \"BIND_PAT\",\n         \"PLACEHOLDER_PAT\",\n         \"PATH_PAT\",\n@@ -523,6 +524,7 @@ Grammar(\n         ),\n \n         \"RefPat\": ( options: [ \"Pat\" ]),\n+        \"BoxPat\": ( options: [ \"Pat\" ]),\n         \"BindPat\": (\n             options: [ \"Pat\" ],\n             traits: [\"NameOwner\"]\n@@ -552,6 +554,7 @@ Grammar(\n         \"Pat\": (\n             enum: [\n                 \"RefPat\",\n+                \"BoxPat\",\n                 \"BindPat\",\n                 \"PlaceholderPat\",\n                 \"PathPat\","}]}