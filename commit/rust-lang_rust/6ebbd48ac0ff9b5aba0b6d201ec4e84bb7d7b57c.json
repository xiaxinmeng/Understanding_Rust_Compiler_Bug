{"sha": "6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c", "node_id": "C_kwDOAAsO6NoAKDZlYmJkNDhhYzBmZjliNWFiYTBiNmQyMDFlYzRlODRiYjdkN2I1N2M", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-08T12:22:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-08T12:22:10Z"}, "message": "Auto merge of #14283 - Veykril:error-notifs, r=Veykril\n\nLoad proc-macros for rustc_private crates\n\nIf the client support our server status notification there is no need to show the pop up for workspace fetching failures since that's already going to be shown in the status.\ncc https://github.com/rust-lang/rust-analyzer/issues/14193", "tree": {"sha": "5294b19e44151cea56316f6641f2c95a4849a83c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5294b19e44151cea56316f6641f2c95a4849a83c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c", "html_url": "https://github.com/rust-lang/rust/commit/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aff6cb00804ae03ee09c8a6c3e15cfa1ae23b139", "url": "https://api.github.com/repos/rust-lang/rust/commits/aff6cb00804ae03ee09c8a6c3e15cfa1ae23b139", "html_url": "https://github.com/rust-lang/rust/commit/aff6cb00804ae03ee09c8a6c3e15cfa1ae23b139"}, {"sha": "b4bd27be9072e898b02b123e8a0803f18899ae86", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4bd27be9072e898b02b123e8a0803f18899ae86", "html_url": "https://github.com/rust-lang/rust/commit/b4bd27be9072e898b02b123e8a0803f18899ae86"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "60afb05bd64183853e3845c68505b1b5a95d8139", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c", "patch": "@@ -409,12 +409,12 @@ impl GlobalState {\n         if self.last_reported_status.as_ref() != Some(&status) {\n             self.last_reported_status = Some(status.clone());\n \n-            if let (lsp_ext::Health::Error, Some(message)) = (status.health, &status.message) {\n-                self.show_message(lsp_types::MessageType::ERROR, message.clone());\n-            }\n-\n             if self.config.server_status_notification() {\n                 self.send_notification::<lsp_ext::ServerStatusNotification>(status);\n+            } else {\n+                if let (lsp_ext::Health::Error, Some(message)) = (status.health, &status.message) {\n+                    self.show_message(lsp_types::MessageType::ERROR, message.clone());\n+                }\n             }\n         }\n "}, {"sha": "2dfbb2ffb972129b84f8c7f688e50bc07b8a0431", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=6ebbd48ac0ff9b5aba0b6d201ec4e84bb7d7b57c", "patch": "@@ -202,7 +202,9 @@ impl GlobalState {\n         tracing::info!(%cause, \"will switch workspaces\");\n \n         if let Err(error_message) = self.fetch_workspace_error() {\n-            self.show_and_log_error(error_message, None);\n+            if !self.config.server_status_notification() {\n+                self.show_and_log_error(error_message, None);\n+            }\n             if !self.workspaces.is_empty() {\n                 // It only makes sense to switch to a partially broken workspace\n                 // if we don't have any workspace at all yet."}]}