{"sha": "444ff687a299721247ae008abdeca9b32fc958dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NGZmNjg3YTI5OTcyMTI0N2FlMDA4YWJkZWNhOWIzMmZjOTU4ZGQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-25T04:44:10Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-25T04:50:35Z"}, "message": "std: Move loop creation into run_high_level_loop", "tree": {"sha": "6072c614e37b3abf8916702e861c917c1fa44740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6072c614e37b3abf8916702e861c917c1fa44740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/444ff687a299721247ae008abdeca9b32fc958dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/444ff687a299721247ae008abdeca9b32fc958dd", "html_url": "https://github.com/rust-lang/rust/commit/444ff687a299721247ae008abdeca9b32fc958dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/444ff687a299721247ae008abdeca9b32fc958dd/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a82a9907f88dae7f78e7e17f7d71a907f6683dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a82a9907f88dae7f78e7e17f7d71a907f6683dd", "html_url": "https://github.com/rust-lang/rust/commit/2a82a9907f88dae7f78e7e17f7d71a907f6683dd"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "6f8820523706cf10690d0ee41844d81ca9be3204", "filename": "src/libstd/uv_global_loop.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/444ff687a299721247ae008abdeca9b32fc958dd/src%2Flibstd%2Fuv_global_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/444ff687a299721247ae008abdeca9b32fc958dd/src%2Flibstd%2Fuv_global_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_global_loop.rs?ref=444ff687a299721247ae008abdeca9b32fc958dd", "patch": "@@ -101,11 +101,9 @@ fn spawn_high_level_loop() -> hl::high_level_loop unsafe {\n         #debug(\"entering global libuv task\");\n         weaken_task() {|weak_exit_po|\n             #debug(\"global libuv task is now weak %?\", weak_exit_po);\n-            let loop_ptr = ll::loop_new();\n             let loop_msg_po = port::<hl::high_level_msg>();\n             let loop_msg_ch = loop_msg_po.chan();\n             hl::run_high_level_loop(\n-                loop_ptr,\n                 loop_msg_po,\n                 // before_run\n                 {|async_handle|\n@@ -128,7 +126,6 @@ fn spawn_high_level_loop() -> hl::high_level_loop unsafe {\n                            async_handle);\n                 }\n             );\n-            ll::loop_delete(loop_ptr);\n             #debug(\"global libuv task is leaving weakened state\");\n         };\n         #debug(\"global libuv task exiting\");"}, {"sha": "5b734af4324755fe0702ceee63ab89397fcc9a68", "filename": "src/libstd/uv_hl.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/444ff687a299721247ae008abdeca9b32fc958dd/src%2Flibstd%2Fuv_hl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/444ff687a299721247ae008abdeca9b32fc958dd/src%2Flibstd%2Fuv_hl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fuv_hl.rs?ref=444ff687a299721247ae008abdeca9b32fc958dd", "patch": "@@ -60,12 +60,12 @@ the loop's msg port\n * before_tear_down - called just before the loop invokes `uv_close()` on the\n provided `async_handle`. `uv_run` should return shortly after\n \"]\n-unsafe fn run_high_level_loop(loop_ptr: *c_void,\n-                              msg_po: port<high_level_msg>,\n+unsafe fn run_high_level_loop(msg_po: port<high_level_msg>,\n                               before_run: fn~(*ll::uv_async_t),\n                               before_msg_process:\n                                 fn~(*ll::uv_async_t, bool) -> bool,\n                               before_tear_down: fn~(*ll::uv_async_t)) {\n+    let loop_ptr = ll::loop_new();\n     // set up the special async handle we'll use to allow multi-task\n     // communication with this loop\n     let async = ll::async_t();\n@@ -90,6 +90,7 @@ unsafe fn run_high_level_loop(loop_ptr: *c_void,\n     // enter the loop... this blocks until the loop is done..\n     ll::run(loop_ptr);\n     log(debug, \"high-level loop ended\");\n+    ll::loop_delete(loop_ptr);\n }\n \n #[doc = \"\n@@ -233,11 +234,9 @@ mod test {\n         let hl_loop_port = comm::port::<high_level_loop>();\n         let hl_loop_ch = comm::chan(hl_loop_port);\n         task::spawn_sched(task::manual_threads(1u)) {||\n-            let loop_ptr = ll::loop_new();\n             let msg_po = comm::port::<high_level_msg>();\n             let msg_ch = comm::chan(msg_po);\n             run_high_level_loop(\n-                loop_ptr,\n                 msg_po,\n                 // before_run\n                 {|async_handle|\n@@ -261,7 +260,6 @@ mod test {\n                     log(debug,#fmt(\"hl test_loop b4_tear_down: async %?\",\n                                   async_handle));\n             });\n-            ll::loop_delete(loop_ptr);\n             comm::send(exit_ch, ());\n         };\n         ret comm::recv(hl_loop_port);"}]}