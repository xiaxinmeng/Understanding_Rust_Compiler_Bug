{"sha": "d47dc326d63c6ed9cc2cd7f99596b5f1e051906d", "node_id": "C_kwDOAAsO6NoAKGQ0N2RjMzI2ZDYzYzZlZDljYzJjZDdmOTk1OTZiNWYxZTA1MTkwNmQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-08T20:41:39Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-25T15:15:04Z"}, "message": "diagnostics: don't crash if an injected crate shows up in suggestions", "tree": {"sha": "082cc18d05b291aec1e9eb5c0523e9928945e40a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/082cc18d05b291aec1e9eb5c0523e9928945e40a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d47dc326d63c6ed9cc2cd7f99596b5f1e051906d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d47dc326d63c6ed9cc2cd7f99596b5f1e051906d", "html_url": "https://github.com/rust-lang/rust/commit/d47dc326d63c6ed9cc2cd7f99596b5f1e051906d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d47dc326d63c6ed9cc2cd7f99596b5f1e051906d/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ca70be11b6b290d5d7d56dbe9ccd832be5a6809", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ca70be11b6b290d5d7d56dbe9ccd832be5a6809", "html_url": "https://github.com/rust-lang/rust/commit/0ca70be11b6b290d5d7d56dbe9ccd832be5a6809"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "6704f3eeb2add362485ede12f2f2a12f35d5a502", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d47dc326d63c6ed9cc2cd7f99596b5f1e051906d/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d47dc326d63c6ed9cc2cd7f99596b5f1e051906d/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=d47dc326d63c6ed9cc2cd7f99596b5f1e051906d", "patch": "@@ -876,7 +876,10 @@ impl<'tcx> TyCtxt<'tcx> {\n         // | Yes     | No     | No      | !(true && !false)  |\n         // | No      | No     | Yes     | !(false && !false) |\n         !(self.is_private_dep(key)\n-            && !self.extern_crate(key.as_def_id()).expect(\"crate must exist\").is_direct())\n+            // If `extern_crate` is `None`, then the crate was injected (e.g., by the allocator).\n+            // Treat that kind of crate as \"indirect\", since it's an implementation detail of\n+            // the language.\n+            && !self.extern_crate(key.as_def_id()).map_or(false, |e| e.is_direct()))\n     }\n }\n "}]}