{"sha": "eabc9f229574a906437dd63359caec1c15fb75ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhYmM5ZjIyOTU3NGE5MDY0MzdkZDYzMzU5Y2FlYzFjMTVmYjc1YWQ=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-01T21:11:19Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-01T21:11:55Z"}, "message": "Fix some typos in tutorial", "tree": {"sha": "2cb986118d03a85c14de437bf13dabc2ddbc69f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cb986118d03a85c14de437bf13dabc2ddbc69f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eabc9f229574a906437dd63359caec1c15fb75ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eabc9f229574a906437dd63359caec1c15fb75ad", "html_url": "https://github.com/rust-lang/rust/commit/eabc9f229574a906437dd63359caec1c15fb75ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eabc9f229574a906437dd63359caec1c15fb75ad/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a2d277bbf09c7aa0bba18f22c7a7734374101b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a2d277bbf09c7aa0bba18f22c7a7734374101b8", "html_url": "https://github.com/rust-lang/rust/commit/4a2d277bbf09c7aa0bba18f22c7a7734374101b8"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "9b42a3dd6011bafd05828062e9c73a7fb4dba6c1", "filename": "doc/tutorial/ffi.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fffi.md?ref=eabc9f229574a906437dd63359caec1c15fb75ad", "patch": "@@ -1,6 +1,6 @@\n # Interacting with foreign code\n \n-On of Rust's aims, as a system programming language, is to\n+One of Rust's aims, as a system programming language, is to\n interoperate well with C code.\n \n We'll start with an example. It's a bit bigger than usual, and"}, {"sha": "cf6c4b16cca40244f8fdf4d029242788ed5900bb", "filename": "doc/tutorial/func.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Ffunc.md", "raw_url": "https://github.com/rust-lang/rust/raw/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Ffunc.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Ffunc.md?ref=eabc9f229574a906437dd63359caec1c15fb75ad", "patch": "@@ -61,6 +61,8 @@ stored in data structures or returned.\n A block with no arguments is written `{|| body(); }`\u2014you can not leave\n off the pipes.\n \n+FIXME mention bind\n+\n ## Iteration\n \n Functions taking blocks provide a good way to define non-trivial"}, {"sha": "24e498bcdb362140b09d25eef3ea38dfae9398b7", "filename": "doc/tutorial/mod.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Fmod.md", "raw_url": "https://github.com/rust-lang/rust/raw/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Fmod.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fmod.md?ref=eabc9f229574a906437dd63359caec1c15fb75ad", "patch": "@@ -1,7 +1,7 @@\n # Modules and crates\n \n-The Rust namespace is divided in modules. Each source file starts with\n-its own, empty module.\n+The Rust namespace is divided into modules. Each source file starts\n+with its own, empty module.\n \n ## Local modules\n \n@@ -153,7 +153,7 @@ restricted with `export` directives at the top of the module or file.\n \n This defines a rock-solid encryption algorithm. Code outside of the\n module can refer to the `enc::encrypt` and `enc::decrypt` identifiers\n-just fine, but it does not have access to `enc::syper_secret_number`.\n+just fine, but it does not have access to `enc::super_secret_number`.\n \n ## Namespaces\n \n@@ -185,10 +185,10 @@ context.\n Identifiers can shadow each others. In this program, `x` is of type\n `int`:\n \n-    type x = str;\n+    type t = str;\n     fn main() {\n-        type x = int;\n-        let x: int;\n+        type t = int;\n+        let x: t;\n     }\n \n An `import` directive will only import into the namespaces for which"}, {"sha": "8182cc119324a4eb210114391fe558715241a6bc", "filename": "doc/tutorial/syntax.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Fsyntax.md", "raw_url": "https://github.com/rust-lang/rust/raw/eabc9f229574a906437dd63359caec1c15fb75ad/doc%2Ftutorial%2Fsyntax.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial%2Fsyntax.md?ref=eabc9f229574a906437dd63359caec1c15fb75ad", "patch": "@@ -35,7 +35,7 @@ like `if` and `while` are available:\n \n ## Expression syntax\n \n-Though it isn't apparent in most everyday code, there is a fundamental\n+Though it isn't apparent in all code, there is a fundamental\n difference between Rust's syntax and the predecessors in this family\n of languages. A lot of thing that are statements in C are expressions\n in Rust. This allows for useless things like this (which passes"}]}