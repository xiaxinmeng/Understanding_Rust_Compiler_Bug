{"sha": "d154bef4d3f9ea178493024fd27612dcba3acc58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxNTRiZWY0ZDNmOWVhMTc4NDkzMDI0ZmQyNzYxMmRjYmEzYWNjNTg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-01-31T06:24:23Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-02T12:55:45Z"}, "message": "parser: avoid re-wrapping NtItem", "tree": {"sha": "c2622738993d76a86a6e89a47847bd90321d523d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2622738993d76a86a6e89a47847bd90321d523d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d154bef4d3f9ea178493024fd27612dcba3acc58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d154bef4d3f9ea178493024fd27612dcba3acc58", "html_url": "https://github.com/rust-lang/rust/commit/d154bef4d3f9ea178493024fd27612dcba3acc58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d154bef4d3f9ea178493024fd27612dcba3acc58/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cbcb17d3306d6e22eafc2c05ce885db97d0189c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cbcb17d3306d6e22eafc2c05ce885db97d0189c", "html_url": "https://github.com/rust-lang/rust/commit/0cbcb17d3306d6e22eafc2c05ce885db97d0189c"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "82600c354e9f8650c78a67f7e19bf31f8cddb627", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d154bef4d3f9ea178493024fd27612dcba3acc58/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d154bef4d3f9ea178493024fd27612dcba3acc58/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=d154bef4d3f9ea178493024fd27612dcba3acc58", "patch": "@@ -70,16 +70,15 @@ impl<'a> Parser<'a> {\n     /// Parses one of the items allowed by the flags.\n     fn parse_item_implementation(\n         &mut self,\n-        attrs: Vec<Attribute>,\n+        mut attrs: Vec<Attribute>,\n         macros_allowed: bool,\n         attributes_allowed: bool,\n     ) -> PResult<'a, Option<P<Item>>> {\n         maybe_whole!(self, NtItem, |item| {\n-            let mut item = item.into_inner();\n-            let mut attrs = attrs;\n+            let mut item = item;\n             mem::swap(&mut item.attrs, &mut attrs);\n             item.attrs.extend(attrs);\n-            Some(P(item))\n+            Some(item)\n         });\n \n         let lo = self.token.span;"}]}