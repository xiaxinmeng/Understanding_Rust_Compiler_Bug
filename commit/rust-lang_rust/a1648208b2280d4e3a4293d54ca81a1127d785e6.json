{"sha": "a1648208b2280d4e3a4293d54ca81a1127d785e6", "node_id": "C_kwDOAAsO6NoAKGExNjQ4MjA4YjIyODBkNGUzYTQyOTNkNTRjYTgxYTExMjdkNzg1ZTY", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-29T18:02:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-29T18:02:41Z"}, "message": "Merge #10871\n\n10871: Respect `http.proxyStrictSSL` r=lnicola a=lnicola\n\nCloses #10866\r\n\r\nCurrently untested.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "b5d790e6b5011cd3bc60848100694fb6df08c390", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5d790e6b5011cd3bc60848100694fb6df08c390"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1648208b2280d4e3a4293d54ca81a1127d785e6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhpRXBCRBK7hj4Ov3rIwAAxu8IAFwGyLiFFWuZFF80oaBGkTwE\nFtof3mnnpM1C6QqulE3q6t4t1Ui2p/OM8HxNfuYW61XlLmNlT7EvHbjKUe7p7n+x\nBqRN4aktNENUi6f0jwcvpRllr5XZafmQyMrnrA3aNTCRsegu7nd7jqs6zLL9agvP\n0WI6l8Ume008wl09+4ZBE/CwjTz1wUVf8f3U6HlP0AwcrLM15ZMbtR/tdWzS20/r\neBIlbPayjoK34w/86WGKqseu4AJzi6XqyUdWz/eC8eRZU6S0uvvrwTuffFDBj+nE\nFVBO77L0p9q5DqIVRbY0o5FtPpyKt3G4/Ulb9vxQ/ovP/i6Fb4X8b9tY3Np9Brc=\n=c4ge\n-----END PGP SIGNATURE-----\n", "payload": "tree b5d790e6b5011cd3bc60848100694fb6df08c390\nparent 393cbd0982707a20b0ef40277385737f8de1833e\nparent 7d815b862f026d8223b4f40d6dde0bda95af40da\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1638208961 +0000\ncommitter GitHub <noreply@github.com> 1638208961 +0000\n\nMerge #10871\n\n10871: Respect `http.proxyStrictSSL` r=lnicola a=lnicola\n\nCloses #10866\r\n\r\nCurrently untested.\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1648208b2280d4e3a4293d54ca81a1127d785e6", "html_url": "https://github.com/rust-lang/rust/commit/a1648208b2280d4e3a4293d54ca81a1127d785e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1648208b2280d4e3a4293d54ca81a1127d785e6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "393cbd0982707a20b0ef40277385737f8de1833e", "url": "https://api.github.com/repos/rust-lang/rust/commits/393cbd0982707a20b0ef40277385737f8de1833e", "html_url": "https://github.com/rust-lang/rust/commit/393cbd0982707a20b0ef40277385737f8de1833e"}, {"sha": "7d815b862f026d8223b4f40d6dde0bda95af40da", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d815b862f026d8223b4f40d6dde0bda95af40da", "html_url": "https://github.com/rust-lang/rust/commit/7d815b862f026d8223b4f40d6dde0bda95af40da"}], "stats": {"total": 70, "additions": 48, "deletions": 22}, "files": [{"sha": "81cf5d28b7e2a2ad5dd31a6a1d4eb8585c390d1f", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a1648208b2280d4e3a4293d54ca81a1127d785e6/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a1648208b2280d4e3a4293d54ca81a1127d785e6/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=a1648208b2280d4e3a4293d54ca81a1127d785e6", "patch": "@@ -8,6 +8,11 @@ const NIGHTLY_TAG = \"nightly\";\n \n export type RunnableEnvCfg = undefined | Record<string, string> | { mask?: string; env: Record<string, string> }[];\n \n+export class ProxySettings {\n+    proxy?: string = undefined;\n+    strictSSL: boolean = true;\n+}\n+\n export class Config {\n     readonly extensionId = \"matklad.rust-analyzer\";\n \n@@ -99,13 +104,17 @@ export class Config {\n     get channel() { return this.get<UpdatesChannel>(\"updates.channel\"); }\n     get askBeforeDownload() { return this.get<boolean>(\"updates.askBeforeDownload\"); }\n     get traceExtension() { return this.get<boolean>(\"trace.extension\"); }\n-    get httpProxy() {\n-        const httpProxy = vscode\n+    get proxySettings(): ProxySettings {\n+        const proxy = vscode\n             .workspace\n             .getConfiguration('http')\n-            .get<null | string>(\"proxy\")!;\n+            .get<null | string>(\"proxy\")! || process.env[\"https_proxy\"] || process.env[\"HTTPS_PROXY\"];\n+        const strictSSL = vscode.workspace.getConfiguration(\"http\").get<boolean>(\"proxyStrictSSL\") || true;\n \n-        return httpProxy || process.env[\"https_proxy\"] || process.env[\"HTTPS_PROXY\"];\n+        return {\n+            proxy: proxy,\n+            strictSSL: strictSSL,\n+        };\n     }\n \n     get inlayHints() {"}, {"sha": "734f224503632a73db8ede9a49bca6b72f5134ac", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a1648208b2280d4e3a4293d54ca81a1127d785e6/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a1648208b2280d4e3a4293d54ca81a1127d785e6/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=a1648208b2280d4e3a4293d54ca81a1127d785e6", "patch": "@@ -198,7 +198,7 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     }\n \n     const latestNightlyRelease = await downloadWithRetryDialog(state, async () => {\n-        return await fetchRelease(\"nightly\", state.githubToken, config.httpProxy);\n+        return await fetchRelease(\"nightly\", state.githubToken, config.proxySettings);\n     }).catch(async (e) => {\n         log.error(e);\n         if (isInitialNightlyDownload) {\n@@ -230,7 +230,7 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n             url: artifact.browser_download_url,\n             dest,\n             progressTitle: \"Downloading rust-analyzer extension\",\n-            httpProxy: config.httpProxy,\n+            proxySettings: config.proxySettings,\n         });\n     });\n \n@@ -361,7 +361,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n \n     const releaseTag = config.package.releaseTag;\n     const release = await downloadWithRetryDialog(state, async () => {\n-        return await fetchRelease(releaseTag, state.githubToken, config.httpProxy);\n+        return await fetchRelease(releaseTag, state.githubToken, config.proxySettings);\n     });\n     const artifact = release.assets.find(artifact => artifact.name === `rust-analyzer-${platform}.gz`);\n     assert(!!artifact, `Bad release: ${JSON.stringify(release)}`);\n@@ -373,7 +373,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n             progressTitle: \"Downloading rust-analyzer server\",\n             gunzip: true,\n             mode: 0o755,\n-            httpProxy: config.httpProxy,\n+            proxySettings: config.proxySettings,\n         });\n     });\n "}, {"sha": "103aed360e79aefb408366eb0a9d6dd7585b1cea", "filename": "editors/code/src/net.ts", "status": "modified", "additions": 31, "deletions": 14, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/a1648208b2280d4e3a4293d54ca81a1127d785e6/editors%2Fcode%2Fsrc%2Fnet.ts", "raw_url": "https://github.com/rust-lang/rust/raw/a1648208b2280d4e3a4293d54ca81a1127d785e6/editors%2Fcode%2Fsrc%2Fnet.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnet.ts?ref=a1648208b2280d4e3a4293d54ca81a1127d785e6", "patch": "@@ -9,17 +9,28 @@ import * as zlib from \"zlib\";\n import * as util from \"util\";\n import * as path from \"path\";\n import { log, assert } from \"./util\";\n+import * as url from \"url\";\n+import * as https from \"https\";\n+import { ProxySettings } from \"./config\";\n \n const pipeline = util.promisify(stream.pipeline);\n \n const GITHUB_API_ENDPOINT_URL = \"https://api.github.com\";\n const OWNER = \"rust-analyzer\";\n const REPO = \"rust-analyzer\";\n \n+function makeHttpAgent(proxy: string | null | undefined, options?: https.AgentOptions) {\n+    if (proxy) {\n+        return new HttpsProxyAgent(proxy, { ...options, ...url.parse(proxy) });\n+    } else {\n+        return new https.Agent(options);\n+    }\n+}\n+\n export async function fetchRelease(\n     releaseTag: string,\n     githubToken: string | null | undefined,\n-    httpProxy: string | null | undefined,\n+    proxySettings: ProxySettings,\n ): Promise<GithubRelease> {\n \n     const apiEndpointPath = `/repos/${OWNER}/${REPO}/releases/tags/${releaseTag}`;\n@@ -34,12 +45,15 @@ export async function fetchRelease(\n     }\n \n     const response = await (() => {\n-        if (httpProxy) {\n-            log.debug(`Fetching release metadata via proxy: ${httpProxy}`);\n-            return fetch(requestUrl, { headers: headers, agent: new HttpsProxyAgent(httpProxy) });\n+        if (proxySettings.proxy) {\n+            log.debug(`Fetching release metadata via proxy: ${proxySettings.proxy}`);\n         }\n-\n-        return fetch(requestUrl, { headers: headers });\n+        const options: any = {};\n+        if (proxySettings.strictSSL) {\n+            options[\"rejectUnauthorized\"] = false;\n+        }\n+        const agent = makeHttpAgent(proxySettings.proxy, options);\n+        return fetch(requestUrl, { headers: headers, agent: agent });\n     })();\n \n     if (!response.ok) {\n@@ -83,7 +97,7 @@ interface DownloadOpts {\n     dest: vscode.Uri;\n     mode?: number;\n     gunzip?: boolean;\n-    httpProxy?: string;\n+    proxySettings: ProxySettings;\n }\n \n export async function download(opts: DownloadOpts) {\n@@ -103,7 +117,7 @@ export async function download(opts: DownloadOpts) {\n         },\n         async (progress, _cancellationToken) => {\n             let lastPercentage = 0;\n-            await downloadFile(opts.url, tempFilePath, opts.mode, !!opts.gunzip, opts.httpProxy, (readBytes, totalBytes) => {\n+            await downloadFile(opts.url, tempFilePath, opts.mode, !!opts.gunzip, opts.proxySettings, (readBytes, totalBytes) => {\n                 const newPercentage = Math.round((readBytes / totalBytes) * 100);\n                 if (newPercentage !== lastPercentage) {\n                     progress.report({\n@@ -167,18 +181,21 @@ async function downloadFile(\n     destFilePath: vscode.Uri,\n     mode: number | undefined,\n     gunzip: boolean,\n-    httpProxy: string | null | undefined,\n+    proxySettings: ProxySettings,\n     onProgress: (readBytes: number, totalBytes: number) => void\n ): Promise<void> {\n     const urlString = url.toString();\n \n     const res = await (() => {\n-        if (httpProxy) {\n-            log.debug(`Downloading ${urlString} via proxy: ${httpProxy}`);\n-            return fetch(urlString, { agent: new HttpsProxyAgent(httpProxy) });\n+        if (proxySettings.proxy) {\n+            log.debug(`Downloading ${urlString} via proxy: ${proxySettings.proxy}`);\n         }\n-\n-        return fetch(urlString);\n+        const options: any = {};\n+        if (proxySettings.strictSSL) {\n+            options[\"rejectUnauthorized\"] = false;\n+        }\n+        const agent = makeHttpAgent(proxySettings.proxy, options);\n+        return fetch(urlString, { agent: agent });\n     })();\n \n     if (!res.ok) {"}]}