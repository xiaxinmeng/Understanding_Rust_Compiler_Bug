{"sha": "bfd9aa9755149725e39d8024d693ed76f92a30df", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmZDlhYTk3NTUxNDk3MjVlMzlkODAyNGQ2OTNlZDc2ZjkyYTMwZGY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-08T01:13:15Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-15T19:19:14Z"}, "message": "core:rt: A few micro-opts", "tree": {"sha": "45dff5217306f2f3c10ed1add0756f286acaf921", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45dff5217306f2f3c10ed1add0756f286acaf921"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfd9aa9755149725e39d8024d693ed76f92a30df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfd9aa9755149725e39d8024d693ed76f92a30df", "html_url": "https://github.com/rust-lang/rust/commit/bfd9aa9755149725e39d8024d693ed76f92a30df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfd9aa9755149725e39d8024d693ed76f92a30df/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a6076ae810d470dfb511712c303a4ee7ffedf00", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a6076ae810d470dfb511712c303a4ee7ffedf00", "html_url": "https://github.com/rust-lang/rust/commit/6a6076ae810d470dfb511712c303a4ee7ffedf00"}], "stats": {"total": 37, "additions": 21, "deletions": 16}, "files": [{"sha": "2add314fd1196df4b50ac3e16717fc80e482e20c", "filename": "src/libcore/rt/context.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fcontext.rs?ref=bfd9aa9755149725e39d8024d693ed76f92a30df", "patch": "@@ -84,6 +84,7 @@ pub impl Context {\n }\n \n extern {\n+    #[rust_stack]\n     fn swap_registers(out_regs: *mut Registers, in_regs: *Registers);\n }\n "}, {"sha": "ce7ff87b44580c37fc22423cda6de3790a9813d4", "filename": "src/libcore/rt/global_heap.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fglobal_heap.rs?ref=bfd9aa9755149725e39d8024d693ed76f92a30df", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use sys::{TypeDesc, size_of};\n-use libc::{c_void, size_t};\n+use libc::{c_void, size_t, uintptr_t};\n use c_malloc = libc::malloc;\n use c_free = libc::free;\n use managed::raw::{BoxHeaderRepr, BoxRepr};\n@@ -34,7 +34,7 @@ pub unsafe fn malloc(td: *TypeDesc, size: uint) -> *c_void {\n     box.header.prev = null();\n     box.header.next = null();\n \n-    let exchange_count = &mut *rust_get_exchange_count_ptr();\n+    let exchange_count = &mut *exchange_count_ptr();\n     atomic_xadd(exchange_count, 1);\n \n     return transmute(box);\n@@ -52,7 +52,7 @@ pub unsafe fn malloc_raw(size: uint) -> *c_void {\n }\n \n pub unsafe fn free(ptr: *c_void) {\n-    let exchange_count = &mut *rust_get_exchange_count_ptr();\n+    let exchange_count = &mut *exchange_count_ptr();\n     atomic_xsub(exchange_count, 1);\n \n     assert!(ptr.is_not_null());\n@@ -77,7 +77,11 @@ fn align_to(size: uint, align: uint) -> uint {\n     (size + align - 1) & !(align - 1)\n }\n \n+fn exchange_count_ptr() -> *mut int {\n+    // XXX: Need mutable globals\n+    unsafe { transmute(&rust_exchange_count) }\n+}\n+\n extern {\n-    #[rust_stack]\n-    fn rust_get_exchange_count_ptr() -> *mut int;\n+    static rust_exchange_count: uintptr_t;\n }"}, {"sha": "1ef1fd33a83a5c240c023d930c0763b5ce1e6c67", "filename": "src/libcore/rt/local_sched.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Flocal_sched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Flocal_sched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Flocal_sched.rs?ref=bfd9aa9755149725e39d8024d693ed76f92a30df", "patch": "@@ -126,6 +126,7 @@ fn maybe_tls_key() -> Option<tls::Key> {\n }\n \n extern {\n+    #[fast_ffi]\n     fn rust_get_sched_tls_key() -> *mut c_void;\n }\n "}, {"sha": "6a08c0f59b18359d91dcb65c94991a8f8d3bd6a0", "filename": "src/libcore/rt/thread_local_storage.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Fthread_local_storage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Flibcore%2Frt%2Fthread_local_storage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fthread_local_storage.rs?ref=bfd9aa9755149725e39d8024d693ed76f92a30df", "patch": "@@ -46,8 +46,11 @@ type pthread_key_t = ::libc::c_uint;\n \n #[cfg(unix)]\n extern {\n+    #[fast_ffi]\n     fn pthread_key_create(key: *mut pthread_key_t, dtor: *u8) -> c_int;\n+    #[fast_ffi]\n     fn pthread_setspecific(key: pthread_key_t, value: *mut c_void) -> c_int;\n+    #[fast_ffi]\n     fn pthread_getspecific(key: pthread_key_t) -> *mut c_void;\n }\n "}, {"sha": "89257dc9f6e432172d4cb5729b89cc851cecfbdf", "filename": "src/rt/rust_exchange_alloc.cpp", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Frt%2Frust_exchange_alloc.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Frt%2Frust_exchange_alloc.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_exchange_alloc.cpp?ref=bfd9aa9755149725e39d8024d693ed76f92a30df", "patch": "@@ -15,14 +15,15 @@\n #include <string.h>\n #include <stdio.h>\n \n-uintptr_t exchange_count = 0;\n+extern uintptr_t rust_exchange_count;\n+uintptr_t rust_exchange_count = 0;\n \n void *\n rust_exchange_alloc::malloc(size_t size) {\n   void *value = ::malloc(size);\n   assert(value);\n \n-  sync::increment(exchange_count);\n+  sync::increment(rust_exchange_count);\n \n   return value;\n }\n@@ -36,20 +37,15 @@ rust_exchange_alloc::realloc(void *ptr, size_t size) {\n \n void\n rust_exchange_alloc::free(void *ptr) {\n-  sync::decrement(exchange_count);\n+  sync::decrement(rust_exchange_count);\n   ::free(ptr);\n }\n \n-extern \"C\" uintptr_t *\n-rust_get_exchange_count_ptr() {\n-  return &exchange_count;\n-}\n-\n void\n rust_check_exchange_count_on_exit() {\n-  if (exchange_count != 0) {\n+  if (rust_exchange_count != 0) {\n     printf(\"exchange heap not empty on exit\\n\");\n-    printf(\"%d dangling allocations\\n\", (int)exchange_count);\n+    printf(\"%d dangling allocations\\n\", (int)rust_exchange_count);\n     abort();\n   }\n }"}, {"sha": "a62d7991d495337630d94f611376038df157b299", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/bfd9aa9755149725e39d8024d693ed76f92a30df/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=bfd9aa9755149725e39d8024d693ed76f92a30df", "patch": "@@ -195,7 +195,7 @@ rust_register_exit_function\n rust_get_global_data_ptr\n rust_inc_kernel_live_count\n rust_dec_kernel_live_count\n-rust_get_exchange_count_ptr\n+rust_exchange_count\n rust_get_sched_tls_key\n swap_registers\n rust_readdir"}]}