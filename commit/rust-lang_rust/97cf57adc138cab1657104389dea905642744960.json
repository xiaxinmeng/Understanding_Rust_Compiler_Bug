{"sha": "97cf57adc138cab1657104389dea905642744960", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3Y2Y1N2FkYzEzOGNhYjE2NTcxMDQzODlkZWE5MDU2NDI3NDQ5NjA=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-20T14:45:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-20T14:45:33Z"}, "message": "Fix pp blank-lines insertion at beginning of file and before 'let' decls.", "tree": {"sha": "1b3014c41a804761bcc0aae919e1bc229d48659b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b3014c41a804761bcc0aae919e1bc229d48659b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97cf57adc138cab1657104389dea905642744960", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97cf57adc138cab1657104389dea905642744960", "html_url": "https://github.com/rust-lang/rust/commit/97cf57adc138cab1657104389dea905642744960", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97cf57adc138cab1657104389dea905642744960/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "200dbe4c4fb291f9d6753ca394553981a84eb6b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/200dbe4c4fb291f9d6753ca394553981a84eb6b8", "html_url": "https://github.com/rust-lang/rust/commit/200dbe4c4fb291f9d6753ca394553981a84eb6b8"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "5f2db3eb9532cfcaadc624963d618033b2d58e49", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97cf57adc138cab1657104389dea905642744960/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cf57adc138cab1657104389dea905642744960/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=97cf57adc138cab1657104389dea905642744960", "patch": "@@ -1,5 +1,3 @@\n-\n-\n // trans.rs: Translate the completed AST to the LLVM IR.\n //\n // Some functions here, such as trans_block and trans_expr, return a value --"}, {"sha": "cf6ff61c19c452bcb296a9d916b8459154a5d605", "filename": "src/comp/pretty/ppaux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97cf57adc138cab1657104389dea905642744960/src%2Fcomp%2Fpretty%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cf57adc138cab1657104389dea905642744960/src%2Fcomp%2Fpretty%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fppaux.rs?ref=97cf57adc138cab1657104389dea905642744960", "patch": "@@ -235,7 +235,7 @@ fn print_comment(&ps s, lexer::cmnt cmnt) {\n             zerobreak(s.s);\n         }\n         case (lexer::isolated) {\n-            hardbreak(s.s);\n+            pprust::hardbreak_if_not_eof(s);\n             for (str line in cmnt.lines) { word(s.s, line); hardbreak(s.s); }\n         }\n         case (lexer::trailing) {"}, {"sha": "32c66ec487b39704dc6bbd06f560ed3102fba89a", "filename": "src/comp/pretty/pprust.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/97cf57adc138cab1657104389dea905642744960/src%2Fcomp%2Fpretty%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97cf57adc138cab1657104389dea905642744960/src%2Fcomp%2Fpretty%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fpretty%2Fpprust.rs?ref=97cf57adc138cab1657104389dea905642744960", "patch": "@@ -120,6 +120,12 @@ fn bclose(&ps s, common::span span) {\n \n }\n \n+fn hardbreak_if_not_eof(&ps s) {\n+    if (s.s.last_token() != pp::EOF) {\n+        hardbreak(s.s);\n+    }\n+}\n+\n fn space_if_not_hardbreak(&ps s) {\n     if (s.s.last_token() != pp::hardbreak_tok()) {\n         space(s.s);\n@@ -177,7 +183,7 @@ fn print_mod(&ps s, ast::_mod _mod) {\n     for (@ast::item item in _mod.items) {\n         // Mod-level item printing we're a little more space-y about.\n \n-        hardbreak(s.s);\n+        hardbreak_if_not_eof(s);\n         print_item(s, item);\n     }\n     print_remaining_comments(s);\n@@ -265,7 +271,7 @@ fn print_type(&ps s, &ast::ty ty) {\n }\n \n fn print_item(&ps s, &@ast::item item) {\n-    hardbreak(s.s);\n+    hardbreak_if_not_eof(s);\n     maybe_print_comment(s, item.span.lo);\n     print_outer_attributes(s, item.attrs);\n     alt (item.node) {\n@@ -867,7 +873,7 @@ fn print_decl(&ps s, &@ast::decl decl) {\n     maybe_print_comment(s, decl.span.lo);\n     alt (decl.node) {\n         case (ast::decl_local(?loc)) {\n-            space(s.s);\n+            space_if_not_hardbreak(s);\n             ibox(s, indent_unit);\n             alt (loc.node.ty) {\n                 case (some(?ty)) {\n@@ -985,7 +991,7 @@ fn print_fn_args_and_ret(&ps s, &ast::fn_decl decl) {\n     pclose(s);\n     maybe_print_comment(s, decl.output.span.lo);\n     if (decl.output.node != ast::ty_nil) {\n-        space(s.s);\n+        space_if_not_hardbreak(s);\n         word_space(s, \"->\");\n         print_type(s, *decl.output);\n     }\n@@ -1017,7 +1023,7 @@ fn print_meta_item(&ps s, &@ast::meta_item item) {\n }\n \n fn print_view_item(&ps s, &@ast::view_item item) {\n-    hardbreak(s.s);\n+    hardbreak_if_not_eof(s);\n     maybe_print_comment(s, item.span.lo);\n     alt (item.node) {\n         case (ast::view_item_use(?id, ?mta, _, _)) {\n@@ -1122,7 +1128,7 @@ fn print_ty_fn(&ps s, &ast::proto proto, &option::t[str] id,\n     pclose(s);\n     maybe_print_comment(s, output.span.lo);\n     if (output.node != ast::ty_nil) {\n-        space(s.s);\n+        space_if_not_hardbreak(s);\n         ibox(s, indent_unit);\n         word_space(s, \"->\");\n         alt (cf) {"}]}