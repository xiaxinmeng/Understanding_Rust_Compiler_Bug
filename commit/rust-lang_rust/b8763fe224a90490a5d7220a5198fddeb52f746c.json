{"sha": "b8763fe224a90490a5d7220a5198fddeb52f746c", "node_id": "C_kwDOAAsO6NoAKGI4NzYzZmUyMjRhOTA0OTBhNWQ3MjIwYTUxOThmZGRlYjUyZjc0NmM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-28T17:38:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-28T17:38:59Z"}, "message": "Auto merge of #12902 - Veykril:item-scope, r=Veykril\n\nfix: Order ItemScope::entries results", "tree": {"sha": "875f02894dd689520db4e79dbbe466a256615c06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/875f02894dd689520db4e79dbbe466a256615c06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8763fe224a90490a5d7220a5198fddeb52f746c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8763fe224a90490a5d7220a5198fddeb52f746c", "html_url": "https://github.com/rust-lang/rust/commit/b8763fe224a90490a5d7220a5198fddeb52f746c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8763fe224a90490a5d7220a5198fddeb52f746c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32e640e2ba390bb20479d744aa1d2ea380917615", "url": "https://api.github.com/repos/rust-lang/rust/commits/32e640e2ba390bb20479d744aa1d2ea380917615", "html_url": "https://github.com/rust-lang/rust/commit/32e640e2ba390bb20479d744aa1d2ea380917615"}, {"sha": "f867ddc6217438ad514980fcbd5f59e2d99c3d55", "url": "https://api.github.com/repos/rust-lang/rust/commits/f867ddc6217438ad514980fcbd5f59e2d99c3d55", "html_url": "https://github.com/rust-lang/rust/commit/f867ddc6217438ad514980fcbd5f59e2d99c3d55"}], "stats": {"total": 44, "additions": 22, "deletions": 22}, "files": [{"sha": "a11a92204c15c29c788a4d134e71e681595e466c", "filename": "crates/hir-def/src/item_scope.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fhir-def%2Fsrc%2Fitem_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fhir-def%2Fsrc%2Fitem_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fitem_scope.rs?ref=b8763fe224a90490a5d7220a5198fddeb52f746c", "patch": "@@ -5,6 +5,7 @@ use std::collections::hash_map::Entry;\n \n use base_db::CrateId;\n use hir_expand::{name::Name, AstId, MacroCallId};\n+use itertools::Itertools;\n use once_cell::sync::Lazy;\n use profile::Count;\n use rustc_hash::{FxHashMap, FxHashSet};\n@@ -97,15 +98,14 @@ pub(crate) enum BuiltinShadowMode {\n impl ItemScope {\n     pub fn entries<'a>(&'a self) -> impl Iterator<Item = (&'a Name, PerNs)> + 'a {\n         // FIXME: shadowing\n-        let keys: FxHashSet<_> = self\n-            .types\n+        self.types\n             .keys()\n             .chain(self.values.keys())\n             .chain(self.macros.keys())\n             .chain(self.unresolved.iter())\n-            .collect();\n-\n-        keys.into_iter().map(move |name| (name, self.get(name)))\n+            .sorted()\n+            .unique()\n+            .map(move |name| (name, self.get(name)))\n     }\n \n     pub fn declarations(&self) -> impl Iterator<Item = ModuleDefId> + '_ {"}, {"sha": "87f5018fb69586f44e6307cb8f2561d558d85e03", "filename": "crates/ide-assists/src/handlers/expand_glob_import.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fexpand_glob_import.rs?ref=b8763fe224a90490a5d7220a5198fddeb52f746c", "patch": "@@ -36,7 +36,7 @@ use crate::{\n //     pub struct Baz;\n // }\n //\n-// use foo::{Baz, Bar};\n+// use foo::{Bar, Baz};\n //\n // fn qux(bar: Bar, baz: Baz) {}\n // ```\n@@ -281,7 +281,7 @@ mod foo {\n     pub fn f() {}\n }\n \n-use foo::{Baz, Bar, f};\n+use foo::{Bar, Baz, f};\n \n fn qux(bar: Bar, baz: Baz) {\n     f();\n@@ -351,7 +351,7 @@ mod foo {\n     pub fn f() {}\n }\n \n-use foo::{Baz, Bar, f};\n+use foo::{Bar, Baz, f};\n \n fn qux(bar: Bar, baz: Baz) {\n     f();\n@@ -440,7 +440,7 @@ mod foo {\n     }\n }\n \n-use foo::{bar::{Baz, Bar, f}, baz::*};\n+use foo::{bar::{Bar, Baz, f}, baz::*};\n \n fn qux(bar: Bar, baz: Baz) {\n     f();\n@@ -561,7 +561,7 @@ mod foo {\n \n use foo::{\n     bar::{*, f},\n-    baz::{g, qux::{q, h}}\n+    baz::{g, qux::{h, q}}\n };\n \n fn qux(bar: Bar, baz: Baz) {"}, {"sha": "6eaab48a32ba54e567f0e958f9a52d8cebbe9bbe", "filename": "crates/ide-assists/src/tests/generated.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=b8763fe224a90490a5d7220a5198fddeb52f746c", "patch": "@@ -535,7 +535,7 @@ mod foo {\n     pub struct Baz;\n }\n \n-use foo::{Baz, Bar};\n+use foo::{Bar, Baz};\n \n fn qux(bar: Bar, baz: Baz) {}\n \"#####,"}, {"sha": "946134b0ff95db78cb4682f847c6e4131dbf3fd4", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8763fe224a90490a5d7220a5198fddeb52f746c/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=b8763fe224a90490a5d7220a5198fddeb52f746c", "patch": "@@ -1271,8 +1271,8 @@ fn main() {\n                 st S []\n                 st &mut S [type]\n                 st S []\n-                fn main() []\n                 fn foo(\u2026) []\n+                fn main() []\n             \"#]],\n         );\n         check_relevance(\n@@ -1288,8 +1288,8 @@ fn main() {\n                 lc s [type+name+local]\n                 st S [type]\n                 st S []\n-                fn main() []\n                 fn foo(\u2026) []\n+                fn main() []\n             \"#]],\n         );\n         check_relevance(\n@@ -1305,8 +1305,8 @@ fn main() {\n                 lc ssss [type+local]\n                 st S [type]\n                 st S []\n-                fn main() []\n                 fn foo(\u2026) []\n+                fn main() []\n             \"#]],\n         );\n     }\n@@ -1342,10 +1342,10 @@ fn main() {\n                 lc &t [type+local]\n                 st S []\n                 st &S [type]\n-                st T []\n                 st S []\n-                fn main() []\n+                st T []\n                 fn foo(\u2026) []\n+                fn main() []\n                 md core []\n             \"#]],\n         )\n@@ -1388,10 +1388,10 @@ fn main() {\n                 lc &mut t [type+local]\n                 st S []\n                 st &mut S [type]\n-                st T []\n                 st S []\n-                fn main() []\n+                st T []\n                 fn foo(\u2026) []\n+                fn main() []\n                 md core []\n             \"#]],\n         )\n@@ -1483,12 +1483,12 @@ fn main() {\n             expect![[r#\"\n                 st S []\n                 st &S [type]\n-                st T []\n                 st S []\n-                fn main() []\n+                st T []\n                 fn bar() []\n                 fn &bar() [type]\n                 fn foo(\u2026) []\n+                fn main() []\n                 md core []\n             \"#]],\n         )\n@@ -1633,8 +1633,8 @@ fn foo() {\n                 ev Foo::B [type_could_unify]\n                 fn foo() []\n                 en Foo []\n-                fn baz() []\n                 fn bar() []\n+                fn baz() []\n             \"#]],\n         );\n     }\n@@ -1724,9 +1724,9 @@ fn f() {\n }\n \"#,\n             expect![[r#\"\n-                md std []\n                 st Buffer []\n                 fn f() []\n+                md std []\n                 tt BufRead (use std::io::BufRead) [requires_import]\n                 st BufReader (use std::io::BufReader) [requires_import]\n                 st BufWriter (use std::io::BufWriter) [requires_import]"}]}