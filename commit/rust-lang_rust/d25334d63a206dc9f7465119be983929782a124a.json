{"sha": "d25334d63a206dc9f7465119be983929782a124a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyNTMzNGQ2M2EyMDZkYzlmNzQ2NTExOWJlOTgzOTI5NzgyYTEyNGE=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2013-12-23T13:38:02Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2014-01-21T19:44:13Z"}, "message": "[std::vec] Rename .get_opt() to .get()", "tree": {"sha": "e6d19cece5ffaf32f52196319871945b19a00b98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6d19cece5ffaf32f52196319871945b19a00b98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d25334d63a206dc9f7465119be983929782a124a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d25334d63a206dc9f7465119be983929782a124a", "html_url": "https://github.com/rust-lang/rust/commit/d25334d63a206dc9f7465119be983929782a124a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d25334d63a206dc9f7465119be983929782a124a/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "232d8e560561e07b3ba54c5d0234816e50342fb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/232d8e560561e07b3ba54c5d0234816e50342fb3", "html_url": "https://github.com/rust-lang/rust/commit/232d8e560561e07b3ba54c5d0234816e50342fb3"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "baeda1d7ae50265fe71d3dd8cd10c09f276b2db0", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d25334d63a206dc9f7465119be983929782a124a/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d25334d63a206dc9f7465119be983929782a124a/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=d25334d63a206dc9f7465119be983929782a124a", "patch": "@@ -941,7 +941,7 @@ pub trait ImmutableVector<'a, T> {\n \n     /// Returns the element of a vector at the given index, or `None` if the\n     /// index is out of bounds\n-    fn get_opt(&self, index: uint) -> Option<&'a T>;\n+    fn get(&self, index: uint) -> Option<&'a T>;\n     /// Returns the first element of a vector, failing if the vector is empty.\n     fn head(&self) -> &'a T;\n     /// Returns the first element of a vector, or `None` if it is empty\n@@ -1118,7 +1118,7 @@ impl<'a,T> ImmutableVector<'a, T> for &'a [T] {\n     }\n \n     #[inline]\n-    fn get_opt(&self, index: uint) -> Option<&'a T> {\n+    fn get(&self, index: uint) -> Option<&'a T> {\n         if index < self.len() { Some(&self[index]) } else { None }\n     }\n \n@@ -3043,13 +3043,13 @@ mod tests {\n     }\n \n     #[test]\n-    fn test_get_opt() {\n+    fn test_get() {\n         let mut a = ~[11];\n-        assert_eq!(a.get_opt(1), None);\n+        assert_eq!(a.get(1), None);\n         a = ~[11, 12];\n-        assert_eq!(a.get_opt(1).unwrap(), &12);\n+        assert_eq!(a.get(1).unwrap(), &12);\n         a = ~[11, 12, 13];\n-        assert_eq!(a.get_opt(1).unwrap(), &12);\n+        assert_eq!(a.get(1).unwrap(), &12);\n     }\n \n     #[test]"}]}