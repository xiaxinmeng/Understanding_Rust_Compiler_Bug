{"sha": "d3e0c33dbeaaa10f17e867ac62bb268167fda942", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzZTBjMzNkYmVhYWExMGYxN2U4NjdhYzYyYmIyNjgxNjdmZGE5NDI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-22T17:06:19Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-22T17:44:10Z"}, "message": "modify inherent impls test to indicate `TypeckTables` do not change\n\nI also added some comments explaining what is going on. In short, the\nchanges in question do not, in fact, affect the`TypeckTables` in any\nsemantic way. However, altering the order of lowering can cause it\nappear to affect the `TypeckTables`: if we lower generics before the\nbody, then the `HirId` for things in the body will be affected. In\nthis case, we are now lowering the generics etc\n*after* the body, so the hash no longer changes. This seems good.", "tree": {"sha": "dcb9a4fb7ada94d78f5df4ee62c81555f9b3e432", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcb9a4fb7ada94d78f5df4ee62c81555f9b3e432"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3e0c33dbeaaa10f17e867ac62bb268167fda942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3e0c33dbeaaa10f17e867ac62bb268167fda942", "html_url": "https://github.com/rust-lang/rust/commit/d3e0c33dbeaaa10f17e867ac62bb268167fda942", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3e0c33dbeaaa10f17e867ac62bb268167fda942/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78ccbba3e296e8dbbb8cae3a70ec6adc7087dade", "url": "https://api.github.com/repos/rust-lang/rust/commits/78ccbba3e296e8dbbb8cae3a70ec6adc7087dade", "html_url": "https://github.com/rust-lang/rust/commit/78ccbba3e296e8dbbb8cae3a70ec6adc7087dade"}], "stats": {"total": 44, "additions": 40, "deletions": 4}, "files": [{"sha": "403ea905681e8a5e0470bfd40e28858000d9c33d", "filename": "src/test/incremental/hashes/inherent_impls.rs", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/d3e0c33dbeaaa10f17e867ac62bb268167fda942/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d3e0c33dbeaaa10f17e867ac62bb268167fda942/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Finherent_impls.rs?ref=d3e0c33dbeaaa10f17e867ac62bb268167fda942", "patch": "@@ -370,7 +370,16 @@ impl Foo {\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,TypeckTables\")]\n+    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // The addition or removal of lifetime parameters that don't\n+    // appear in the arguments or fn body in any way does not, in\n+    // fact, affect the `TypeckTables` in any semantic way (at least\n+    // as of this writing). **However,** altering the order of\n+    // lowering **can** cause it appear to affect the `TypeckTables`:\n+    // if we lower generics before the body, then the `HirId` for\n+    // things in the body will be affected. So if you start to see\n+    // `TypeckTables` appear dirty, that might be the cause. -nmatsakis\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[rustc_metadata_clean(cfg=\"cfail2\")]\n     #[rustc_metadata_clean(cfg=\"cfail3\")]\n@@ -391,9 +400,18 @@ impl Foo {\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n+    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // The addition or removal of type parameters that don't appear in\n+    // the arguments or fn body in any way does not, in fact, affect\n+    // the `TypeckTables` in any semantic way (at least as of this\n+    // writing). **However,** altering the order of lowering **can**\n+    // cause it appear to affect the `TypeckTables`: if we lower\n+    // generics before the body, then the `HirId` for things in the\n+    // body will be affected. So if you start to see `TypeckTables`\n+    // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(\n         cfg=\"cfail2\",\n-        except=\"Hir,HirBody,GenericsOfItem,PredicatesOfItem,TypeOfItem,TypeckTables\",\n+        except=\"Hir,HirBody,GenericsOfItem,PredicatesOfItem,TypeOfItem\",\n     )]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[rustc_metadata_dirty(cfg=\"cfail2\")]\n@@ -439,8 +457,17 @@ impl Foo {\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n+    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // The addition or removal of bounds that don't appear in the\n+    // arguments or fn body in any way does not, in fact, affect the\n+    // `TypeckTables` in any semantic way (at least as of this\n+    // writing). **However,** altering the order of lowering **can**\n+    // cause it appear to affect the `TypeckTables`: if we lower\n+    // generics before the body, then the `HirId` for things in the\n+    // body will be affected. So if you start to see `TypeckTables`\n+    // appear dirty, that might be the cause. -nmatsakis\n     #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,GenericsOfItem,PredicatesOfItem,\\\n-                                        TypeOfItem,TypeckTables\")]\n+                                        TypeOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[rustc_metadata_dirty(cfg=\"cfail2\")]\n     #[rustc_metadata_clean(cfg=\"cfail3\")]\n@@ -461,7 +488,16 @@ impl Foo {\n #[rustc_metadata_clean(cfg=\"cfail2\")]\n #[rustc_metadata_clean(cfg=\"cfail3\")]\n impl Foo {\n-    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,PredicatesOfItem,TypeckTables\")]\n+    // Warning: Note that `TypeckTables` are coming up clean here.\n+    // The addition or removal of bounds that don't appear in the\n+    // arguments or fn body in any way does not, in fact, affect the\n+    // `TypeckTables` in any semantic way (at least as of this\n+    // writing). **However,** altering the order of lowering **can**\n+    // cause it appear to affect the `TypeckTables`: if we lower\n+    // generics before the body, then the `HirId` for things in the\n+    // body will be affected. So if you start to see `TypeckTables`\n+    // appear dirty, that might be the cause. -nmatsakis\n+    #[rustc_clean(cfg=\"cfail2\", except=\"Hir,HirBody,PredicatesOfItem\")]\n     #[rustc_clean(cfg=\"cfail3\")]\n     #[rustc_metadata_dirty(cfg=\"cfail2\")]\n     #[rustc_metadata_clean(cfg=\"cfail3\")]"}]}