{"sha": "6b855573bd488cc11efb1f8cf1eeaf0f51327776", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiODU1NTczYmQ0ODhjYzExZWZiMWY4Y2YxZWVhZjBmNTEzMjc3NzY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-30T10:51:06Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-30T10:51:06Z"}, "message": "fix generator test case", "tree": {"sha": "d261c563ba6781b9e21f1a1f4d47a390ae1a30f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d261c563ba6781b9e21f1a1f4d47a390ae1a30f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b855573bd488cc11efb1f8cf1eeaf0f51327776", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b855573bd488cc11efb1f8cf1eeaf0f51327776", "html_url": "https://github.com/rust-lang/rust/commit/6b855573bd488cc11efb1f8cf1eeaf0f51327776", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b855573bd488cc11efb1f8cf1eeaf0f51327776/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be511b304180ebf700aaa9eeaf39756ede5a6e32", "url": "https://api.github.com/repos/rust-lang/rust/commits/be511b304180ebf700aaa9eeaf39756ede5a6e32", "html_url": "https://github.com/rust-lang/rust/commit/be511b304180ebf700aaa9eeaf39756ede5a6e32"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "c9c114aacccae622531e6735b259200d9de68b1e", "filename": "tests/run-pass/generator.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6b855573bd488cc11efb1f8cf1eeaf0f51327776/tests%2Frun-pass%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b855573bd488cc11efb1f8cf1eeaf0f51327776/tests%2Frun-pass%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fgenerator.rs?ref=6b855573bd488cc11efb1f8cf1eeaf0f51327776", "patch": "@@ -11,12 +11,15 @@\n #![feature(generators, generator_trait)]\n \n use std::ops::{GeneratorState, Generator};\n+use std::pin::Pin;\n \n fn finish<T>(mut amt: usize, mut t: T) -> T::Return\n     where T: Generator<Yield = usize>\n {\n+    // We are not moving the `t` around until it gets dropped, so this is okay.\n+    let mut t = unsafe { Pin::new_unchecked(&mut t) };\n     loop {\n-        match unsafe { t.resume() } {\n+        match t.as_mut().resume() {\n             GeneratorState::Yielded(y) => amt -= y,\n             GeneratorState::Complete(ret) => {\n                 assert_eq!(amt, 0);"}]}