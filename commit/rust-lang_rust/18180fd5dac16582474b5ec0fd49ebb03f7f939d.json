{"sha": "18180fd5dac16582474b5ec0fd49ebb03f7f939d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MTgwZmQ1ZGFjMTY1ODI0NzRiNWVjMGZkNDllYmIwM2Y3ZjkzOWQ=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-08-25T01:19:39Z"}, "committer": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-08-25T01:20:17Z"}, "message": "\"earley_parser\" -> \"macro_parser\" Let's be less confusing.", "tree": {"sha": "1f1aa7318c5ffafe8f6310cb3fd211a459cc8b78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f1aa7318c5ffafe8f6310cb3fd211a459cc8b78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18180fd5dac16582474b5ec0fd49ebb03f7f939d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18180fd5dac16582474b5ec0fd49ebb03f7f939d", "html_url": "https://github.com/rust-lang/rust/commit/18180fd5dac16582474b5ec0fd49ebb03f7f939d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18180fd5dac16582474b5ec0fd49ebb03f7f939d/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54acbf8488c877eeca264948e7e94f3c3434d41", "url": "https://api.github.com/repos/rust-lang/rust/commits/e54acbf8488c877eeca264948e7e94f3c3434d41", "html_url": "https://github.com/rust-lang/rust/commit/e54acbf8488c877eeca264948e7e94f3c3434d41"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "22f696d6ed8fb213495ab697fa40b4a4ce0cbbd3", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=18180fd5dac16582474b5ec0fd49ebb03f7f939d", "patch": "@@ -407,7 +407,7 @@ type capture_clause = @~[capture_item];\n // If the syntax extension is an MBE macro, it will attempt to match its\n // LHS \"matchers\" against the provided token tree, and if it finds a\n // match, will transcribe the RHS token tree, splicing in any captured\n-// earley_parser::matched_nonterminals into the tt_nonterminals it finds.\n+// macro_parser::matched_nonterminals into the tt_nonterminals it finds.\n //\n // The RHS of an MBE macro is the only place a tt_nonterminal or tt_seq\n // makes any real sense. You could write them elsewhere but nothing"}, {"sha": "796f0400190e87acc46e559fbb13e500448b306d", "filename": "src/libsyntax/ext/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fbase.rs?ref=18180fd5dac16582474b5ec0fd49ebb03f7f939d", "patch": "@@ -301,8 +301,8 @@ fn tt_args_to_original_flavor(cx: ext_ctxt, sp: span, arg: ~[ast::token_tree])\n     -> ast::mac_arg {\n     import ast::{matcher, matcher_, match_tok, match_seq, match_nonterminal};\n     import parse::lexer::{new_tt_reader, reader};\n-    import tt::earley_parser::{parse_or_else, matched_seq,\n-                               matched_nonterminal};\n+    import tt::macro_parser::{parse_or_else, matched_seq,\n+                              matched_nonterminal};\n \n     // these spans won't matter, anyways\n     fn ms(m: matcher_) -> matcher {"}, {"sha": "04f0e5f0a83ffbc8dcfd7772221f7fc8442f9069", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=18180fd5dac16582474b5ec0fd49ebb03f7f939d", "previous_filename": "src/libsyntax/ext/tt/earley_parser.rs"}, {"sha": "5b5a631f2483625401774fffea4a7dcf413287a7", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=18180fd5dac16582474b5ec0fd49ebb03f7f939d", "patch": "@@ -5,8 +5,8 @@ import ast::{ident, matcher_, matcher, match_tok,\n import parse::lexer::{new_tt_reader, reader};\n import parse::token::{FAT_ARROW, SEMI, LBRACE, RBRACE, nt_matchers, nt_tt};\n import parse::parser::{parser, SOURCE_FILE};\n-import earley_parser::{parse, parse_or_else, success, failure, named_match,\n-                       matched_seq, matched_nonterminal, error};\n+import macro_parser::{parse, parse_or_else, success, failure, named_match,\n+                      matched_seq, matched_nonterminal, error};\n import std::map::hashmap;\n import parse::token::special_idents;\n "}, {"sha": "8755e0d7d593468365512a519c199967b523bcc3", "filename": "src/libsyntax/ext/tt/transcribe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Ftranscribe.rs?ref=18180fd5dac16582474b5ec0fd49ebb03f7f939d", "patch": "@@ -1,6 +1,6 @@\n import diagnostic::span_handler;\n import ast::{token_tree, tt_delim, tt_tok, tt_seq, tt_nonterminal,ident};\n-import earley_parser::{named_match, matched_seq, matched_nonterminal};\n+import macro_parser::{named_match, matched_seq, matched_nonterminal};\n import codemap::span;\n import parse::token::{EOF, INTERPOLATED, IDENT, token, nt_ident,\n                       ident_interner};"}, {"sha": "7ccd46a5c1d318e0c516022ad0a5cb7ba6a19fb9", "filename": "src/libsyntax/syntax.rc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fsyntax.rc", "raw_url": "https://github.com/rust-lang/rust/raw/18180fd5dac16582474b5ec0fd49ebb03f7f939d/src%2Flibsyntax%2Fsyntax.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fsyntax.rc?ref=18180fd5dac16582474b5ec0fd49ebb03f7f939d", "patch": "@@ -67,7 +67,7 @@ mod ext {\n \n     mod tt {\n         mod transcribe;\n-        mod earley_parser;\n+        mod macro_parser;\n         mod macro_rules;\n     }\n "}]}