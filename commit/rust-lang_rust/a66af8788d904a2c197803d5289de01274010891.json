{"sha": "a66af8788d904a2c197803d5289de01274010891", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NmFmODc4OGQ5MDRhMmMxOTc4MDNkNTI4OWRlMDEyNzQwMTA4OTE=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-07-22T21:15:01Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-07-22T21:15:01Z"}, "message": "Avoid creating basic blocks for empty cleanup scopes\n\nWhen compiling libsyntax this removes about 30k basic blocks that only\ncontain a single unconditional jump and reduces the peak memory usage by\nabout 10MB (from 681MB down to 671MB).", "tree": {"sha": "7d6a4c3b1a05d10229a4806f20c7ec5c6f821e9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d6a4c3b1a05d10229a4806f20c7ec5c6f821e9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a66af8788d904a2c197803d5289de01274010891", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a66af8788d904a2c197803d5289de01274010891", "html_url": "https://github.com/rust-lang/rust/commit/a66af8788d904a2c197803d5289de01274010891", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a66af8788d904a2c197803d5289de01274010891/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4d4206e5604b86fc4a9b28a8b51d99121cc3a5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4d4206e5604b86fc4a9b28a8b51d99121cc3a5d", "html_url": "https://github.com/rust-lang/rust/commit/d4d4206e5604b86fc4a9b28a8b51d99121cc3a5d"}], "stats": {"total": 28, "additions": 15, "deletions": 13}, "files": [{"sha": "0d49712031937fe232cd749e47958829bba10fec", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 15, "deletions": 13, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a66af8788d904a2c197803d5289de01274010891/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a66af8788d904a2c197803d5289de01274010891/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=a66af8788d904a2c197803d5289de01274010891", "patch": "@@ -774,20 +774,22 @@ impl<'blk, 'tcx> CleanupHelperMethods<'blk, 'tcx> for FunctionContext<'blk, 'tcx\n         // At this point, `popped_scopes` is empty, and so the final block\n         // that we return to the user is `Cleanup(AST 24)`.\n         while let Some(mut scope) = popped_scopes.pop() {\n-            let name = scope.block_name(\"clean\");\n-            debug!(\"generating cleanups for {}\", name);\n-            let bcx_in = self.new_block(label.is_unwind(),\n-                                        &name[..],\n-                                        None);\n-            let mut bcx_out = bcx_in;\n-            for cleanup in scope.cleanups.iter().rev() {\n-                bcx_out = cleanup.trans(bcx_out,\n-                                        scope.debug_loc);\n-            }\n-            build::Br(bcx_out, prev_llbb, DebugLoc::None);\n-            prev_llbb = bcx_in.llbb;\n+            if !scope.cleanups.is_empty() {\n+                let name = scope.block_name(\"clean\");\n+                debug!(\"generating cleanups for {}\", name);\n+                let bcx_in = self.new_block(label.is_unwind(),\n+                                            &name[..],\n+                                            None);\n+                let mut bcx_out = bcx_in;\n+                for cleanup in scope.cleanups.iter().rev() {\n+                    bcx_out = cleanup.trans(bcx_out,\n+                                            scope.debug_loc);\n+                }\n+                build::Br(bcx_out, prev_llbb, DebugLoc::None);\n+                prev_llbb = bcx_in.llbb;\n \n-            scope.add_cached_early_exit(label, prev_llbb);\n+                scope.add_cached_early_exit(label, prev_llbb);\n+            }\n             self.push_scope(scope);\n         }\n "}]}