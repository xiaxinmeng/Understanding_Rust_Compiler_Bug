{"sha": "e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU5Yzc1YTg4OWY5NzJjYTg4YjljNDFkMGRkYjRiMGNmNDg3YzVlYmU=", "commit": {"author": {"name": "Alexis Hunt", "email": "lexer@google.com", "date": "2018-02-16T13:51:40Z"}, "committer": {"name": "Alexis Hunt", "email": "lexer@google.com", "date": "2018-02-16T13:52:20Z"}, "message": "Add a warning to File about mutability.\n\nFixes #47708.", "tree": {"sha": "bb6b373cb039c39cd300f972e7565ca7f302c3ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb6b373cb039c39cd300f972e7565ca7f302c3ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe", "html_url": "https://github.com/rust-lang/rust/commit/e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe/comments", "author": null, "committer": null, "parents": [{"sha": "5570cdcc9e7da0cca84e394e872bc16df2c6dc50", "url": "https://api.github.com/repos/rust-lang/rust/commits/5570cdcc9e7da0cca84e394e872bc16df2c6dc50", "html_url": "https://github.com/rust-lang/rust/commit/5570cdcc9e7da0cca84e394e872bc16df2c6dc50"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "1798bf4760b34c6fdd9445c6f1532d361dc8cfc1", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=e9c75a889f972ca88b9c41d0ddb4b0cf487c5ebe", "patch": "@@ -81,9 +81,18 @@ use time::SystemTime;\n /// # }\n /// ```\n ///\n+/// Note that, although read and write methods require a `&mut File`, because\n+/// of the interfaces for [`Read`] and [`Write`], it is still possible to\n+/// modify a file through a `&File`, either through methods that take `&File`\n+/// or by retrieving a raw OS filehandle and modifying the file that way.\n+/// Additionally, many operating systems allow concurrent modification of files\n+/// by different processes. Care should be taken not to assume that holding a\n+/// `&File` means that the file will not change.\n+///\n /// [`Seek`]: ../io/trait.Seek.html\n /// [`String`]: ../string/struct.String.html\n /// [`Read`]: ../io/trait.Read.html\n+/// [`Write`]: ../io/trait.Write.html\n /// [`BufReader<R>`]: ../io/struct.BufReader.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct File {\n@@ -459,6 +468,9 @@ impl File {\n     /// # Ok(())\n     /// # }\n     /// ```\n+    ///\n+    /// Note that this method alters the content of the underlying file, even\n+    /// though it takes `&self` rather than `&mut self`.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn set_len(&self, size: u64) -> io::Result<()> {\n         self.inner.truncate(size)\n@@ -557,6 +569,9 @@ impl File {\n     /// # Ok(())\n     /// # }\n     /// ```\n+    ///\n+    /// Note that this method alters the permissions of the underlying file,\n+    /// even though it takes `&self` rather than `&mut self`.\n     #[stable(feature = \"set_permissions_atomic\", since = \"1.16.0\")]\n     pub fn set_permissions(&self, perm: Permissions) -> io::Result<()> {\n         self.inner.set_permissions(perm.0)"}]}