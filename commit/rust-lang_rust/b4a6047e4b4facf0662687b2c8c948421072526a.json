{"sha": "b4a6047e4b4facf0662687b2c8c948421072526a", "node_id": "C_kwDOAAsO6NoAKGI0YTYwNDdlNGI0ZmFjZjA2NjI2ODdiMmM4Yzk0ODQyMTA3MjUyNmE", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-01T13:41:59Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-12-01T13:41:59Z"}, "message": "More tests", "tree": {"sha": "ce28157c03c606b5f0856cf2e368e7806d0012fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce28157c03c606b5f0856cf2e368e7806d0012fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4a6047e4b4facf0662687b2c8c948421072526a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4a6047e4b4facf0662687b2c8c948421072526a", "html_url": "https://github.com/rust-lang/rust/commit/b4a6047e4b4facf0662687b2c8c948421072526a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4a6047e4b4facf0662687b2c8c948421072526a/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d779062758d2a4da2a888752ec9b4ebf58a6c003", "url": "https://api.github.com/repos/rust-lang/rust/commits/d779062758d2a4da2a888752ec9b4ebf58a6c003", "html_url": "https://github.com/rust-lang/rust/commit/d779062758d2a4da2a888752ec9b4ebf58a6c003"}], "stats": {"total": 161, "additions": 160, "deletions": 1}, "files": [{"sha": "30ae730535ca6498f9b9893be83aeb4a050dc21f", "filename": "src/test/ui/consts/promoted_const_call.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call.rs?ref=b4a6047e4b4facf0662687b2c8c948421072526a", "patch": "@@ -13,4 +13,7 @@ fn main() {\n     let _: &'static _ = &id(&Panic);\n     //~^ ERROR: temporary value dropped while borrowed\n     //~| ERROR: temporary value dropped while borrowed\n+    let _: &'static _ = &&(Panic, 0).1;\n+    //~^ ERROR: temporary value dropped while borrowed\n+    //~| ERROR: temporary value dropped while borrowed\n }"}, {"sha": "83cc16f6f94d695fc55633e696daecb6788a72c9", "filename": "src/test/ui/consts/promoted_const_call.stderr", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call.stderr?ref=b4a6047e4b4facf0662687b2c8c948421072526a", "patch": "@@ -38,6 +38,28 @@ LL |     let _: &'static _ = &id(&Panic);\n    |            |                 creates a temporary value which is freed while still in use\n    |            type annotation requires that borrow lasts for `'static`\n \n-error: aborting due to 4 previous errors\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call.rs:16:26\n+   |\n+LL |     let _: &'static _ = &&(Panic, 0).1;\n+   |            ----------    ^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call.rs:16:27\n+   |\n+LL |     let _: &'static _ = &&(Panic, 0).1;\n+   |            ----------     ^^^^^^^^^^ creates a temporary value which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0716`."}, {"sha": "82a17b7bf863f77822eb60d169f24ef525623e34", "filename": "src/test/ui/consts/promoted_const_call4.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call4.rs?ref=b4a6047e4b4facf0662687b2c8c948421072526a", "patch": "@@ -0,0 +1,18 @@\n+// run-pass\n+\n+use std::sync::atomic::*;\n+\n+static FLAG: AtomicBool = AtomicBool::new(false);\n+\n+struct NoisyDrop(&'static str);\n+impl Drop for NoisyDrop {\n+    fn drop(&mut self) {\n+        FLAG.store(true, Ordering::SeqCst);\n+    }\n+}\n+fn main() {\n+    {\n+        let _val = &&(NoisyDrop(\"drop!\"), 0).1;\n+    }\n+    assert!(FLAG.load(Ordering::SeqCst));\n+}"}, {"sha": "3ac8d358ce4855e4621e077d5b17f616707559fe", "filename": "src/test/ui/consts/promoted_const_call5.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call5.rs?ref=b4a6047e4b4facf0662687b2c8c948421072526a", "patch": "@@ -0,0 +1,42 @@\n+#![feature(rustc_attrs)]\n+#![feature(staged_api)]\n+#![stable(feature = \"a\", since = \"1.0.0\")]\n+\n+#[rustc_promotable]\n+#[stable(feature = \"a\", since = \"1.0.0\")]\n+#[rustc_const_stable(feature = \"a\", since = \"1.0.0\")]\n+pub const fn id<T>(x: &'static T) -> &'static T { x }\n+\n+#[rustc_promotable]\n+#[stable(feature = \"a\", since = \"1.0.0\")]\n+#[rustc_const_stable(feature = \"a\", since = \"1.0.0\")]\n+pub const fn new_string() -> String {\n+    String::new()\n+}\n+\n+#[rustc_promotable]\n+#[stable(feature = \"a\", since = \"1.0.0\")]\n+#[rustc_const_stable(feature = \"a\", since = \"1.0.0\")]\n+pub const fn new_manually_drop<T>(t: T) -> std::mem::ManuallyDrop<T>  {\n+    std::mem::ManuallyDrop::new(t)\n+}\n+\n+\n+const C: () = {\n+    let _: &'static _ = &id(&new_string());\n+    //~^ ERROR destructor of `String` cannot be evaluated at compile-time\n+    //~| ERROR: temporary value dropped while borrowed\n+    //~| ERROR: temporary value dropped while borrowed\n+\n+    let _: &'static _ = &new_manually_drop(new_string());\n+    //~^ ERROR: temporary value dropped while borrowed\n+};\n+\n+fn main() {\n+    let _: &'static _ = &id(&new_string());\n+    //~^ ERROR: temporary value dropped while borrowed\n+    //~| ERROR: temporary value dropped while borrowed\n+\n+    let _: &'static _ = &new_manually_drop(new_string());\n+    //~^ ERROR: temporary value dropped while borrowed\n+}"}, {"sha": "f736220b1833349e2af5cb20c7e977cadfbee338", "filename": "src/test/ui/consts/promoted_const_call5.stderr", "status": "added", "additions": 74, "deletions": 0, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call5.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b4a6047e4b4facf0662687b2c8c948421072526a/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call5.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromoted_const_call5.stderr?ref=b4a6047e4b4facf0662687b2c8c948421072526a", "patch": "@@ -0,0 +1,74 @@\n+error[E0493]: destructor of `String` cannot be evaluated at compile-time\n+  --> $DIR/promoted_const_call5.rs:26:30\n+   |\n+LL |     let _: &'static _ = &id(&new_string());\n+   |                              ^^^^^^^^^^^^ - value is dropped here\n+   |                              |\n+   |                              the destructor for this type cannot be evaluated in constants\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call5.rs:26:26\n+   |\n+LL |     let _: &'static _ = &id(&new_string());\n+   |            ----------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+...\n+LL | };\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call5.rs:26:30\n+   |\n+LL |     let _: &'static _ = &id(&new_string());\n+   |                          ----^^^^^^^^^^^^-- temporary value is freed at the end of this statement\n+   |                          |   |\n+   |                          |   creates a temporary value which is freed while still in use\n+   |                          argument requires that borrow lasts for `'static`\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call5.rs:31:26\n+   |\n+LL |     let _: &'static _ = &new_manually_drop(new_string());\n+   |            ----------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+LL |\n+LL | };\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call5.rs:36:26\n+   |\n+LL |     let _: &'static _ = &id(&new_string());\n+   |            ----------    ^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+...\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call5.rs:36:30\n+   |\n+LL |     let _: &'static _ = &id(&new_string());\n+   |                          ----^^^^^^^^^^^^-- temporary value is freed at the end of this statement\n+   |                          |   |\n+   |                          |   creates a temporary value which is freed while still in use\n+   |                          argument requires that borrow lasts for `'static`\n+\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promoted_const_call5.rs:40:26\n+   |\n+LL |     let _: &'static _ = &new_manually_drop(new_string());\n+   |            ----------    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary value which is freed while still in use\n+   |            |\n+   |            type annotation requires that borrow lasts for `'static`\n+LL |\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error: aborting due to 7 previous errors\n+\n+Some errors have detailed explanations: E0493, E0716.\n+For more information about an error, try `rustc --explain E0493`."}]}