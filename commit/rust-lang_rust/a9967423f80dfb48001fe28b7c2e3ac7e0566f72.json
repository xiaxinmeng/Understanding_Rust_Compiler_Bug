{"sha": "a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE5OTY3NDIzZjgwZGZiNDgwMDFmZTI4YjdjMmUzYWM3ZTA1NjZmNzI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-29T05:57:52Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-29T05:57:52Z"}, "message": "rt: Make 64-bit __morestack grow and shrink properly", "tree": {"sha": "3db96c34e070faa6453926798b1ff9f3f0fe6a9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3db96c34e070faa6453926798b1ff9f3f0fe6a9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "html_url": "https://github.com/rust-lang/rust/commit/a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5461c61af241e75892eb5c78f2f1c2c584013b10", "url": "https://api.github.com/repos/rust-lang/rust/commits/5461c61af241e75892eb5c78f2f1c2c584013b10", "html_url": "https://github.com/rust-lang/rust/commit/5461c61af241e75892eb5c78f2f1c2c584013b10"}], "stats": {"total": 61, "additions": 54, "deletions": 7}, "files": [{"sha": "25b3fa3ec692f92ad0234ff6531361aa202446af", "filename": "src/rt/arch/x86_64/morestack.S", "status": "modified", "additions": 46, "deletions": 6, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "raw_url": "https://github.com/rust-lang/rust/raw/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Fmorestack.S?ref=a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "patch": "@@ -8,11 +8,15 @@\n #if defined(__APPLE__) || defined(_WIN32)\n #define RUST_NEW_STACK2     _rust_new_stack2\n #define RUST_DEL_STACK      _rust_del_stack\n+#define RUST_DEL_STACK      _rust_del_stack\n+#define RUST_GET_PREV_STACK _rust_get_prev_stack\n #define UPCALL_CALL_C       _upcall_call_shim_on_c_stack\n #define MORESTACK           ___morestack\n #else\n #define RUST_NEW_STACK2     rust_new_stack2\n #define RUST_DEL_STACK      rust_del_stack\n+#define RUST_DEL_STACK      rust_del_stack\n+#define RUST_GET_PREV_STACK rust_get_prev_stack\n #define UPCALL_CALL_C       upcall_call_shim_on_c_stack\n #define MORESTACK           __morestack\n #endif\n@@ -59,6 +63,11 @@ MORESTACK:\n \tmovq %rsp, %rbp\n \t.cfi_def_cfa_register %rbp\n \n+\t// Alignment\n+\tpushq $0\n+\n+\t// FIXME: libgcc also saves rax. not sure if we need to\n+\n \t// Save argument registers\n \tpushq\t%rdi\n \tpushq\t%rsi\n@@ -77,15 +86,46 @@ MORESTACK:\n \tpushq %rcx // Address of stack arguments\n \tpushq %r10 // The amount of stack needed\n \n-\tlea RUST_NEW_STACK2@PLT(%rip), %rsi\n-\tmov %rsp, %rdi\n+\tleaq RUST_NEW_STACK2@PLT(%rip), %rsi\n+\tmovq %rsp, %rdi\n \tcall UPCALL_CALL_C@PLT\n+\n+\t// Pop the new_stack_args struct\n+\taddq $32, %rsp\n+\n+\t// Pop the saved arguments\n+\tpopq %r9\n+\tpopq %r8\n+\tpopq %rcx\n+\tpopq %rdx\n+\tpopq %rsi\n+\tpopq %rdi\n \t\n-        mov (%rsp),%rdx        // Grab the return pointer.\n-        inc %rdx               // Skip past the `ret`.\n-        mov %rax,%rsp          // Switch to the new stack.\n-        call *%rdx             // Enter the new function.\n+        movq 8(%rbp),%r10       // Grab the return pointer.\n+        incq %r10               // Skip past the `ret` in our parent frame\n+        movq %rax,%rsp          // Switch to the new stack.\n \n+        call *%r10              // Reenter the caller function\n+\n+\tleaq RUST_GET_PREV_STACK@PLT(%rip), %rsi\n+\tmovq $0, %rdi\n+\tcall UPCALL_CALL_C@PLT\n+\n+\t// Switch back to the rust stack, positioned\n+\t// where we pushed %ebp\n+\tmovq %rax, %rsp\n+\n+\t// Align the stack again\n+\tpushq $0\n+\t\n+\tleaq RUST_DEL_STACK@PLT(%rip), %rsi\n+\tmovq $0, %rdi\n+\tcall UPCALL_CALL_C@PLT\n+\n+\taddq $8, %rsp\n+\tpopq %rbp\n+\tret\n+\t\n \t.cfi_endproc\n #else\n MORESTACK:"}, {"sha": "3df6ee1c5dab8305b5bec4cd753be150ab3427fa", "filename": "src/rt/arch/x86_64/record_sp.S", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S", "raw_url": "https://github.com/rust-lang/rust/raw/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Farch%2Fx86_64%2Frecord_sp.S?ref=a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "patch": "@@ -11,6 +11,7 @@\n #if defined(__linux__)\n RECORD_SP:\n \tmovq %rdi, %fs:112\n+\tret\n #else\n RECORD_SP:\n \tret"}, {"sha": "b6224893520ab2fd3abd5fb46952b174203b7110", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/a9967423f80dfb48001fe28b7c2e3ac7e0566f72/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=a9967423f80dfb48001fe28b7c2e3ac7e0566f72", "patch": "@@ -95,7 +95,13 @@ static size_t const BUF_BYTES = 2048;\n #define PROC_FAIL_CODE 101;\n \n // FIXME: We want this to be 128 but need to slim the red zone calls down\n-#define RED_ZONE_SIZE   256\n+#ifdef __i386__\n+#define RED_ZONE_SIZE 256\n+#endif\n+\n+#ifdef __x86_64__\n+#define RED_ZONE_SIZE 2048\n+#endif\n \n // Every reference counted object should use this macro and initialize\n // ref_count."}]}