{"sha": "37733c7eafdcf4bd6c4c95d38a05c307abda78d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3NzMzYzdlYWZkY2Y0YmQ2YzRjOTVkMzhhMDVjMzA3YWJkYTc4ZDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-10T23:31:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-10T23:31:31Z"}, "message": "auto merge of #7042 : kballard/rust/terminfo-searcher-paths, r=thestinger\n\nr? @cmr", "tree": {"sha": "795421ffa63b947f27ca4bf93d132112e4ab1d5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/795421ffa63b947f27ca4bf93d132112e4ab1d5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37733c7eafdcf4bd6c4c95d38a05c307abda78d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37733c7eafdcf4bd6c4c95d38a05c307abda78d6", "html_url": "https://github.com/rust-lang/rust/commit/37733c7eafdcf4bd6c4c95d38a05c307abda78d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37733c7eafdcf4bd6c4c95d38a05c307abda78d6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1310212c27c1c294e1f907b05a225440c987a912", "url": "https://api.github.com/repos/rust-lang/rust/commits/1310212c27c1c294e1f907b05a225440c987a912", "html_url": "https://github.com/rust-lang/rust/commit/1310212c27c1c294e1f907b05a225440c987a912"}, {"sha": "8f1edd5307079851f85dc2bade2081a2343b6ce8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1edd5307079851f85dc2bade2081a2343b6ce8", "html_url": "https://github.com/rust-lang/rust/commit/8f1edd5307079851f85dc2bade2081a2343b6ce8"}], "stats": {"total": 15, "additions": 13, "deletions": 2}, "files": [{"sha": "ecc99f74626c172d6ffaaab1d41664c85e813e04", "filename": "src/libextra/terminfo/searcher.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/37733c7eafdcf4bd6c4c95d38a05c307abda78d6/src%2Flibextra%2Fterminfo%2Fsearcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37733c7eafdcf4bd6c4c95d38a05c307abda78d6/src%2Flibextra%2Fterminfo%2Fsearcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fterminfo%2Fsearcher.rs?ref=37733c7eafdcf4bd6c4c95d38a05c307abda78d6", "patch": "@@ -44,8 +44,13 @@ pub fn get_dbpath_for_term(term: &str) -> Option<~path> {\n                         dirs_to_search.push(path(i.to_owned()));\n                     }\n                 },\n-                // Found nothing, use the default path\n-                None => dirs_to_search.push(path(\"/usr/share/terminfo\"))\n+                // Found nothing, use the default paths\n+                // /usr/share/terminfo is the de facto location, but it seems\n+                // Ubuntu puts it in /lib/terminfo\n+                None => {\n+                    dirs_to_search.push(path(\"/usr/share/terminfo\"));\n+                    dirs_to_search.push(path(\"/lib/terminfo\"));\n+                }\n             }\n         }\n     };\n@@ -56,6 +61,11 @@ pub fn get_dbpath_for_term(term: &str) -> Option<~path> {\n         if os::path_exists(p) && os::path_exists(newp) {\n             return Some(newp);\n         }\n+        // on some installations the dir is named after the hex of the char (e.g. OS X)\n+        let newp = ~p.push_many(&[fmt!(\"%x\", first_char[0] as uint), term.to_owned()]);\n+        if os::path_exists(p) && os::path_exists(newp) {\n+            return Some(newp);\n+        }\n     }\n     None\n }\n@@ -72,6 +82,7 @@ pub fn open(term: &str) -> Result<@Reader, ~str> {\n #[ignore(reason = \"buildbots don't have ncurses installed and I can't mock everything I need\")]\n fn test_get_dbpath_for_term() {\n     // woefully inadequate test coverage\n+    // note: current tests won't work with non-standard terminfo hierarchies (e.g. OS X's)\n     use std::os::{setenv, unsetenv};\n     fn x(t: &str) -> ~str { get_dbpath_for_term(t).expect(\"no terminfo entry found\").to_str() };\n     assert!(x(\"screen\") == ~\"/usr/share/terminfo/s/screen\");"}]}