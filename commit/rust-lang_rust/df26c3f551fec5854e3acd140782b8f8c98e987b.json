{"sha": "df26c3f551fec5854e3acd140782b8f8c98e987b", "node_id": "C_kwDOAAsO6NoAKGRmMjZjM2Y1NTFmZWM1ODU0ZTNhY2QxNDA3ODJiOGY4Yzk4ZTk4N2I", "commit": {"author": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-06-23T20:34:52Z"}, "committer": {"name": "Evan Typanski", "email": "evan.typanski@microfocus.com", "date": "2022-06-23T20:49:31Z"}, "message": "Add external macro guard and test middle MSRV", "tree": {"sha": "576de23bc0220c2cbc3c29ece409411373cd9152", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/576de23bc0220c2cbc3c29ece409411373cd9152"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df26c3f551fec5854e3acd140782b8f8c98e987b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df26c3f551fec5854e3acd140782b8f8c98e987b", "html_url": "https://github.com/rust-lang/rust/commit/df26c3f551fec5854e3acd140782b8f8c98e987b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df26c3f551fec5854e3acd140782b8f8c98e987b/comments", "author": null, "committer": null, "parents": [{"sha": "92704b494a5c284cd426d8f386c60cd1ef2c48fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/92704b494a5c284cd426d8f386c60cd1ef2c48fd", "html_url": "https://github.com/rust-lang/rust/commit/92704b494a5c284cd426d8f386c60cd1ef2c48fd"}], "stats": {"total": 85, "additions": 76, "deletions": 9}, "files": [{"sha": "b5698965fc3ddf455bea45add3b5759877f9cff3", "filename": "clippy_lints/src/manual_rem_euclid.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/df26c3f551fec5854e3acd140782b8f8c98e987b/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26c3f551fec5854e3acd140782b8f8c98e987b/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_rem_euclid.rs?ref=df26c3f551fec5854e3acd140782b8f8c98e987b", "patch": "@@ -4,7 +4,8 @@ use clippy_utils::source::snippet_with_applicability;\n use clippy_utils::{in_constant, meets_msrv, msrvs, path_to_local};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, Node, TyKind};\n-use rustc_lint::{LateContext, LateLintPass};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n use rustc_semver::RustcVersion;\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n \n@@ -55,6 +56,10 @@ impl<'tcx> LateLintPass<'tcx> for ManualRemEuclid {\n             return;\n         }\n \n+        if in_external_macro(cx.sess(), expr.span) {\n+            return;\n+        }\n+\n         if let ExprKind::Binary(op1, expr1, right) = expr.kind\n             && op1.node == BinOpKind::Rem\n             && let Some(const1) = check_for_unsigned_int_constant(cx, right)"}, {"sha": "5bd2c2799f03683cab8c787f8a5c827616e12bfc", "filename": "tests/ui/auxiliary/macro_rules.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fauxiliary%2Fmacro_rules.rs?ref=df26c3f551fec5854e3acd140782b8f8c98e987b", "patch": "@@ -127,3 +127,11 @@ macro_rules! ptr_as_ptr_cast {\n         $ptr as *const i32\n     };\n }\n+\n+#[macro_export]\n+macro_rules! manual_rem_euclid {\n+    () => {\n+        let value: i32 = 5;\n+        let _: i32 = ((value % 4) + 4) % 4;\n+    };\n+}"}, {"sha": "5601c96c10b28fe4af39b4301a263bfd748d4946", "filename": "tests/ui/manual_rem_euclid.fixed", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmanual_rem_euclid.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmanual_rem_euclid.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.fixed?ref=df26c3f551fec5854e3acd140782b8f8c98e987b", "patch": "@@ -1,7 +1,18 @@\n // run-rustfix\n+// aux-build:macro_rules.rs\n \n #![warn(clippy::manual_rem_euclid)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n+macro_rules! internal_rem_euclid {\n+    () => {\n+        let value: i32 = 5;\n+        let _: i32 = value.rem_euclid(4);\n+    };\n+}\n+\n fn main() {\n     let value: i32 = 5;\n \n@@ -25,6 +36,12 @@ fn main() {\n     // For lint to apply the constant must always be on the RHS of the previous value for %\n     let _: i32 = 4 % ((value % 4) + 4);\n     let _: i32 = ((4 % value) + 4) % 4;\n+\n+    // Lint in internal macros\n+    internal_rem_euclid!();\n+\n+    // Do not lint in external macros\n+    manual_rem_euclid!();\n }\n \n // Should lint for params too"}, {"sha": "52135be26b73c290640ab8cde7eefb7dc0111dd5", "filename": "tests/ui/manual_rem_euclid.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmanual_rem_euclid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmanual_rem_euclid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.rs?ref=df26c3f551fec5854e3acd140782b8f8c98e987b", "patch": "@@ -1,7 +1,18 @@\n // run-rustfix\n+// aux-build:macro_rules.rs\n \n #![warn(clippy::manual_rem_euclid)]\n \n+#[macro_use]\n+extern crate macro_rules;\n+\n+macro_rules! internal_rem_euclid {\n+    () => {\n+        let value: i32 = 5;\n+        let _: i32 = ((value % 4) + 4) % 4;\n+    };\n+}\n+\n fn main() {\n     let value: i32 = 5;\n \n@@ -25,6 +36,12 @@ fn main() {\n     // For lint to apply the constant must always be on the RHS of the previous value for %\n     let _: i32 = 4 % ((value % 4) + 4);\n     let _: i32 = ((4 % value) + 4) % 4;\n+\n+    // Lint in internal macros\n+    internal_rem_euclid!();\n+\n+    // Do not lint in external macros\n+    manual_rem_euclid!();\n }\n \n // Should lint for params too"}, {"sha": "a237fd0213c1eeb187fea7ab79183d2b15950ee7", "filename": "tests/ui/manual_rem_euclid.stderr", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmanual_rem_euclid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmanual_rem_euclid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_rem_euclid.stderr?ref=df26c3f551fec5854e3acd140782b8f8c98e987b", "patch": "@@ -1,46 +1,57 @@\n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:8:18\n+  --> $DIR/manual_rem_euclid.rs:19:18\n    |\n LL |     let _: i32 = ((value % 4) + 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n    |\n    = note: `-D clippy::manual-rem-euclid` implied by `-D warnings`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:9:18\n+  --> $DIR/manual_rem_euclid.rs:20:18\n    |\n LL |     let _: i32 = (4 + (value % 4)) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:10:18\n+  --> $DIR/manual_rem_euclid.rs:21:18\n    |\n LL |     let _: i32 = (value % 4 + 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:11:18\n+  --> $DIR/manual_rem_euclid.rs:22:18\n    |\n LL |     let _: i32 = (4 + value % 4) % 4;\n    |                  ^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:12:22\n+  --> $DIR/manual_rem_euclid.rs:23:22\n    |\n LL |     let _: i32 = 1 + (4 + value % 4) % 4;\n    |                      ^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:32:5\n+  --> $DIR/manual_rem_euclid.rs:12:22\n+   |\n+LL |         let _: i32 = ((value % 4) + 4) % 4;\n+   |                      ^^^^^^^^^^^^^^^^^^^^^ help: consider using: `value.rem_euclid(4)`\n+...\n+LL |     internal_rem_euclid!();\n+   |     ---------------------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `internal_rem_euclid` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: manual `rem_euclid` implementation\n+  --> $DIR/manual_rem_euclid.rs:49:5\n    |\n LL |     ((num % 4) + 4) % 4\n    |     ^^^^^^^^^^^^^^^^^^^ help: consider using: `num.rem_euclid(4)`\n \n error: manual `rem_euclid` implementation\n-  --> $DIR/manual_rem_euclid.rs:37:5\n+  --> $DIR/manual_rem_euclid.rs:54:5\n    |\n LL |     ((num % 4) + 4) % 4\n    |     ^^^^^^^^^^^^^^^^^^^ help: consider using: `num.rem_euclid(4)`\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 8 previous errors\n "}, {"sha": "44e407bd1ab2ba5084c8d38bfa2df046de1829aa", "filename": "tests/ui/min_rust_version_attr.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmin_rust_version_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df26c3f551fec5854e3acd140782b8f8c98e987b/tests%2Fui%2Fmin_rust_version_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmin_rust_version_attr.rs?ref=df26c3f551fec5854e3acd140782b8f8c98e987b", "patch": "@@ -217,3 +217,12 @@ mod just_above_msrv {\n         }\n     }\n }\n+\n+mod const_rem_euclid {\n+    #![feature(custom_inner_attributes)]\n+    #![clippy::msrv = \"1.50.0\"]\n+\n+    pub const fn const_rem_euclid_4(num: i32) -> i32 {\n+        ((num % 4) + 4) % 4\n+    }\n+}"}]}