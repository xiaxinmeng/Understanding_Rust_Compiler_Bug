{"sha": "fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac", "node_id": "C_kwDOAAsO6NoAKGZkNWQ2MTRiNzcwOGMyYmJkMGE3Yzc5NmFmM2MzYjYzZjMxYTE5YWM", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-22T20:14:46Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-22T20:14:46Z"}, "message": "Move def_id logic into render_call_locations", "tree": {"sha": "e764edb5438942f3a19d49c3d3e66b4d89939287", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e764edb5438942f3a19d49c3d3e66b4d89939287"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac", "html_url": "https://github.com/rust-lang/rust/commit/fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1c29c696eed25f8698c03b10ef15d9558043163", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1c29c696eed25f8698c03b10ef15d9558043163", "html_url": "https://github.com/rust-lang/rust/commit/d1c29c696eed25f8698c03b10ef15d9558043163"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "ed187d5b126fc7f752e526c8d73f34cfe80835ad", "filename": "src/librustdoc/html/render/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fmod.rs?ref=fd5d614b7708c2bbd0a7c796af3c3b63f31a19ac", "patch": "@@ -598,9 +598,7 @@ fn document_full_inner(\n     };\n \n     if let clean::ItemKind::FunctionItem(..) | clean::ItemKind::MethodItem(..) = kind {\n-        if let Some(def_id) = item.def_id.as_def_id() {\n-            render_call_locations(w, cx, def_id, item);\n-        }\n+        render_call_locations(w, cx, item);\n     }\n }\n \n@@ -2463,8 +2461,9 @@ const MAX_FULL_EXAMPLES: usize = 5;\n const NUM_VISIBLE_LINES: usize = 10;\n \n /// Generates the HTML for example call locations generated via the --scrape-examples flag.\n-fn render_call_locations(w: &mut Buffer, cx: &Context<'_>, def_id: DefId, item: &clean::Item) {\n+fn render_call_locations(w: &mut Buffer, cx: &Context<'_>, item: &clean::Item) {\n     let tcx = cx.tcx();\n+    let def_id = item.def_id.expect_def_id();\n     let key = tcx.def_path_hash(def_id);\n     let call_locations = match cx.shared.call_locations.get(&key) {\n         Some(call_locations) => call_locations,"}]}