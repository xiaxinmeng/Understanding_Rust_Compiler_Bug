{"sha": "8691b8b8b6d88a51ee4783a8c704f052db479738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OTFiOGI4YjZkODhhNTFlZTQ3ODNhOGM3MDRmMDUyZGI0Nzk3Mzg=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-30T11:37:47Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-07-30T11:37:54Z"}, "message": "Test rust-lang/regex example shootout-regex-dna", "tree": {"sha": "1a56dc39dd1d5b01b4d78783afc386accca3940d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a56dc39dd1d5b01b4d78783afc386accca3940d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8691b8b8b6d88a51ee4783a8c704f052db479738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8691b8b8b6d88a51ee4783a8c704f052db479738", "html_url": "https://github.com/rust-lang/rust/commit/8691b8b8b6d88a51ee4783a8c704f052db479738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8691b8b8b6d88a51ee4783a8c704f052db479738/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee4927e069ae317c4b2360eafe07a3fbaa8f0988", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee4927e069ae317c4b2360eafe07a3fbaa8f0988", "html_url": "https://github.com/rust-lang/rust/commit/ee4927e069ae317c4b2360eafe07a3fbaa8f0988"}], "stats": {"total": 115, "additions": 92, "deletions": 23}, "files": [{"sha": "c455aa46a0c437685c4a9502a021e6316180af5c", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -8,3 +8,4 @@ perf.data.old\n /build_sysroot/sysroot_src\n /build_sysroot/Cargo.lock\n /rust\n+/regex"}, {"sha": "165d67a8146cc64e719fdf803fc6d55c2a69f40c", "filename": "build_sysroot/build_sysroot.sh", "status": "modified", "additions": 11, "deletions": 15, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/build_sysroot%2Fbuild_sysroot.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/build_sysroot%2Fbuild_sysroot.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_sysroot%2Fbuild_sysroot.sh?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -1,34 +1,30 @@\n #!/bin/bash\n+\n+# Requires the CHANNEL env var to be set to `debug` or `release.`\n+\n set -e\n cd $(dirname \"$0\")\n \n+pushd ../ >/dev/null\n+source ./config.sh\n+popd >/dev/null\n+\n # Cleanup for previous run\n #     v Clean target dir except for build scripts and incremental cache\n rm -r target/*/{debug,release}/{build,deps,examples,libsysroot*,native} || true\n rm Cargo.lock 2>/dev/null || true\n rm -r sysroot 2>/dev/null || true\n \n-# FIXME find a better way to get the target triple\n-unamestr=`uname`\n-if [[ \"$unamestr\" == 'Linux' ]]; then\n-   TARGET_TRIPLE='x86_64-unknown-linux-gnu'\n-elif [[ \"$unamestr\" == 'Darwin' ]]; then\n-   TARGET_TRIPLE='x86_64-apple-darwin'\n-else\n-   echo \"Unsupported os\"\n-   exit 1\n-fi\n-\n # Build libs\n-mkdir -p sysroot/lib/rustlib/$TARGET_TRIPLE/lib/\n export RUSTFLAGS=\"$RUSTFLAGS -Z force-unstable-if-unmarked\"\n if [[ \"$1\" == \"--release\" ]]; then\n-    channel='release'\n+    sysroot_channel='release'\n     RUSTFLAGS=\"$RUSTFLAGS -Zmir-opt-level=3\" cargo build --target $TARGET_TRIPLE --release\n else\n-    channel='debug'\n+    sysroot_channel='debug'\n     cargo build --target $TARGET_TRIPLE\n fi\n \n # Copy files to sysroot\n-cp target/$TARGET_TRIPLE/$channel/deps/*.rlib sysroot/lib/rustlib/$TARGET_TRIPLE/lib/\n+mkdir -p sysroot/lib/rustlib/$TARGET_TRIPLE/lib/\n+cp target/$TARGET_TRIPLE/$sysroot_channel/deps/*.rlib sysroot/lib/rustlib/$TARGET_TRIPLE/lib/"}, {"sha": "42c137030a5d82cf017068751ac43601faee67ff", "filename": "cargo.sh", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/cargo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/cargo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo.sh?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -0,0 +1,14 @@\n+#!/bin/bash\n+\n+if [ -z $CHANNEL ]; then\n+export CHANNEL='debug'\n+fi\n+\n+pushd $(dirname \"$0\") >/dev/null\n+source config.sh\n+popd >/dev/null\n+\n+cmd=$1\n+shift\n+\n+cargo $cmd --target $TARGET_TRIPLE $@"}, {"sha": "ced73acc57972c5bf7640685de53ebb56ec1bdcd", "filename": "clean_all.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/clean_all.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/clean_all.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clean_all.sh?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -2,3 +2,4 @@\n set -e\n \n rm -rf target/ build_sysroot/{sysroot/,sysroot_src/,target/,Cargo.lock} perf.data{,.old}\n+rm -rf regex/"}, {"sha": "a6868f792decf2dd402b460d268aa264ba97809b", "filename": "config.sh", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/config.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/config.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.sh?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -10,14 +10,8 @@ else\n    exit 1\n fi\n \n-if [[ \"$1\" == \"--release\" ]]; then\n-    channel='release'\n-    cargo build --release\n-else\n-    channel='debug'\n-    cargo build\n-fi\n+TARGET_TRIPLE=$(rustc -vV | grep host | cut -d: -f2 | tr -d \" \")\n \n-export RUSTFLAGS='-Zalways-encode-mir -Cpanic=abort -Cdebuginfo=2 -Zcodegen-backend='$(pwd)'/target/'$channel'/librustc_codegen_cranelift.'$dylib_ext' --sysroot '$(pwd)'/build_sysroot/sysroot'\n+export RUSTFLAGS='-Zalways-encode-mir -Cpanic=abort -Cdebuginfo=2 -Zcodegen-backend='$(pwd)'/target/'$CHANNEL'/librustc_codegen_cranelift.'$dylib_ext' --sysroot '$(pwd)'/build_sysroot/sysroot'\n RUSTC=\"rustc $RUSTFLAGS -L crate=target/out --out-dir target/out\"\n export RUSTC_LOG=warn # display metadata load errors"}, {"sha": "4209ccfbdd2a90589fb2842c895bbf3266687716", "filename": "crate_patches/regex.patch", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/crate_patches%2Fregex.patch", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/crate_patches%2Fregex.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crate_patches%2Fregex.patch?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -0,0 +1,34 @@\n+From febff2a8c639efb5de1e1b4758cdb473847d80ce Mon Sep 17 00:00:00 2001\n+From: bjorn3 <bjorn3@users.noreply.github.com>\n+Date: Tue, 30 Jul 2019 12:12:37 +0200\n+Subject: [PATCH] Disable threads in shootout-regex-dna example\n+\n+---\n+ examples/shootout-regex-dna.rs | 4 ++--\n+ 1 file changed, 2 insertions(+), 2 deletions(-)\n+\n+diff --git a/examples/shootout-regex-dna.rs b/examples/shootout-regex-dna.rs\n+index 2171bb3..37382f8 100644\n+--- a/examples/shootout-regex-dna.rs\n++++ b/examples/shootout-regex-dna.rs\n+@@ -37,7 +37,7 @@ fn main() {\n+     for variant in variants {\n+         let seq = seq_arc.clone();\n+         let restr = variant.to_string();\n+-        let future = thread::spawn(move || variant.find_iter(&seq).count());\n++        let future = variant.find_iter(&seq).count();\n+         counts.push((restr, future));\n+     }\n+ \n+@@ -60,7 +60,7 @@ fn main() {\n+     }\n+ \n+     for (variant, count) in counts {\n+-        println!(\"{} {}\", variant, count.join().unwrap());\n++        println!(\"{} {}\", variant, count);\n+     }\n+     println!(\"\\n{}\\n{}\\n{}\", ilen, clen, seq.len());\n+ }\n+-- \n+2.11.0\n+"}, {"sha": "32cfa4b8c8830ee818cd186cd9881a71a013e606", "filename": "prepare.sh", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/prepare.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/prepare.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/prepare.sh?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -4,3 +4,10 @@ set -e\n rustup component add rust-src\n ./build_sysroot/prepare_sysroot_src.sh\n cargo install hyperfine || echo \"Skipping hyperfine install\"\n+\n+git clone https://github.com/rust-lang/regex.git || echo \"rust-lang/regex has already been cloned\"\n+pushd regex\n+git checkout -- .\n+git checkout 341f207c1071f7290e3f228c710817c280c8dca1\n+git apply ../crate_patches/regex.patch\n+popd"}, {"sha": "1de4a65bbed821d112b23e5ca1441a2377214f06", "filename": "test.sh", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8691b8b8b6d88a51ee4783a8c704f052db479738/test.sh", "raw_url": "https://github.com/rust-lang/rust/raw/8691b8b8b6d88a51ee4783a8c704f052db479738/test.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test.sh?ref=8691b8b8b6d88a51ee4783a8c704f052db479738", "patch": "@@ -1,4 +1,13 @@\n #!/bin/bash\n+\n+if [[ \"$1\" == \"--release\" ]]; then\n+    export CHANNEL='release'\n+    cargo build --release\n+else\n+    export CHANNEL='debug'\n+    cargo build\n+fi\n+\n source config.sh\n \n rm -r target/out || true\n@@ -39,6 +48,19 @@ $RUSTC example/mod_bench.rs --crate-type bin\n #echo \"[BUILD] sysroot in release mode\"\n #./build_sysroot/build_sysroot.sh --release\n \n+pushd regex\n+echo \"[TEST] rust-lang/regex example shootout-regex-dna\"\n+../cargo.sh clean\n+# Make sure `[codegen mono items] start` doesn't poison the diff\n+../cargo.sh build --example shootout-regex-dna\n+cat examples/regexdna-input.txt | ../cargo.sh run --example shootout-regex-dna > res.txt\n+diff -u res.txt examples/regexdna-output.txt\n+\n+# FIXME compile libtest\n+# echo \"[TEST] rust-lang/regex standalone tests\"\n+# ../cargo.sh test\n+popd\n+\n COMPILE_MOD_BENCH_INLINE=\"$RUSTC example/mod_bench.rs --crate-type bin -Zmir-opt-level=3 -O --crate-name mod_bench_inline\"\n COMPILE_MOD_BENCH_LLVM_0=\"rustc example/mod_bench.rs --crate-type bin -Copt-level=0 -o target/out/mod_bench_llvm_0 -Cpanic=abort\"\n COMPILE_MOD_BENCH_LLVM_1=\"rustc example/mod_bench.rs --crate-type bin -Copt-level=1 -o target/out/mod_bench_llvm_1 -Cpanic=abort\""}]}