{"sha": "46326b8db7a47109242c6671272e942c843305c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2MzI2YjhkYjdhNDcxMDkyNDJjNjY3MTI3MmU5NDJjODQzMzA1YzU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T21:54:03Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T21:54:03Z"}, "message": "minor: better test placement", "tree": {"sha": "3cfe33d7348419bffba21bf7cf7ea4a394ae353f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cfe33d7348419bffba21bf7cf7ea4a394ae353f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46326b8db7a47109242c6671272e942c843305c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46326b8db7a47109242c6671272e942c843305c5", "html_url": "https://github.com/rust-lang/rust/commit/46326b8db7a47109242c6671272e942c843305c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46326b8db7a47109242c6671272e942c843305c5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2195ecd7e79d3dbcaaa2d5cb641d929ab7afd75c", "url": "https://api.github.com/repos/rust-lang/rust/commits/2195ecd7e79d3dbcaaa2d5cb641d929ab7afd75c", "html_url": "https://github.com/rust-lang/rust/commit/2195ecd7e79d3dbcaaa2d5cb641d929ab7afd75c"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "13d9f9e1ab488e3adf59f0c4109b61f6ec242f75", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/46326b8db7a47109242c6671272e942c843305c5/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46326b8db7a47109242c6671272e942c843305c5/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=46326b8db7a47109242c6671272e942c843305c5", "patch": "@@ -148,14 +148,13 @@ pub(super) fn opt_item(p: &mut Parser, m: Marker) -> Result<(), Marker> {\n             // impl T for Foo {\n             //     default async fn foo() {}\n             // }\n-\n-            // test default_async_unsafe_fn\n-            // impl T for Foo {\n-            //     default async unsafe fn foo() {}\n-            // }\n             T![async] => {\n                 let mut maybe_fn = p.nth(2);\n                 let is_unsafe = if matches!(maybe_fn, T![unsafe]) {\n+                    // test default_async_unsafe_fn\n+                    // impl T for Foo {\n+                    //     default async unsafe fn foo() {}\n+                    // }\n                     maybe_fn = p.nth(3);\n                     true\n                 } else {\n@@ -400,9 +399,9 @@ fn fn_(p: &mut Parser, m: Marker) {\n     // fn foo<T>() where T: Copy {}\n     type_params::opt_where_clause(p);\n \n-    // test fn_decl\n-    // trait T { fn foo(); }\n     if p.at(T![;]) {\n+        // test fn_decl\n+        // trait T { fn foo(); }\n         p.bump(T![;]);\n     } else {\n         expressions::block_expr(p)"}]}