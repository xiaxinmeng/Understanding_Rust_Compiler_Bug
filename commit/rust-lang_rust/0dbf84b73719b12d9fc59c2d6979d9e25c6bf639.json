{"sha": "0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkYmY4NGI3MzcxOWIxMmQ5ZmM1OWMyZDY5NzlkOWUyNWM2YmY2Mzk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-27T20:24:37Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-27T22:56:26Z"}, "message": "Rollup merge of #40853 - ollie27:error-index, r=steveklabnik\n\nFix broken Markdown and bad links in the error index\n\nThis makes sure RFC links point to the RFC text not the pull request.\n\nr? @steveklabnik", "tree": {"sha": "971f08e416d0e41abd7677d6274c2b2e00d72847", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/971f08e416d0e41abd7677d6274c2b2e00d72847"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "html_url": "https://github.com/rust-lang/rust/commit/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "700e2ea0c21a4893509b1f85411de49a237302a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/700e2ea0c21a4893509b1f85411de49a237302a5", "html_url": "https://github.com/rust-lang/rust/commit/700e2ea0c21a4893509b1f85411de49a237302a5"}, {"sha": "99a069eec9a1ad8f4b4dd592d062f948e9b99540", "url": "https://api.github.com/repos/rust-lang/rust/commits/99a069eec9a1ad8f4b4dd592d062f948e9b99540", "html_url": "https://github.com/rust-lang/rust/commit/99a069eec9a1ad8f4b4dd592d062f948e9b99540"}], "stats": {"total": 45, "additions": 27, "deletions": 18}, "files": [{"sha": "5a0fbf8efb70778cc07954fe2c60d8436b1d7e0b", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "patch": "@@ -1336,7 +1336,7 @@ trait SecondTrait : FirstTrait {\n \n E0398: r##\"\n In Rust 1.3, the default object lifetime bounds are expected to change, as\n-described in RFC #1156 [1]. You are getting a warning because the compiler\n+described in [RFC 1156]. You are getting a warning because the compiler\n thinks it is possible that this change will cause a compilation error in your\n code. It is possible, though unlikely, that this is a false alarm.\n \n@@ -1365,7 +1365,7 @@ fn foo<'a>(arg: &Box<SomeTrait+'a>) { ... }\n This explicitly states that you expect the trait object `SomeTrait` to contain\n references (with a maximum lifetime of `'a`).\n \n-[1]: https://github.com/rust-lang/rfcs/pull/1156\n+[RFC 1156]: https://github.com/rust-lang/rfcs/blob/master/text/1156-adjust-default-object-bounds.md\n \"##,\n \n E0452: r##\"\n@@ -1771,6 +1771,7 @@ This pattern is incorrect because, because the type of `foo` is a function\n **item** (`typeof(foo)`), which is zero-sized, and the target type (`fn()`)\n is a function pointer, which is not zero-sized.\n This pattern should be rewritten. There are a few possible ways to do this:\n+\n - change the original fn declaration to match the expected signature,\n   and do the cast in the fn body (the prefered option)\n - cast the fn item fo a fn pointer before calling transmute, as shown here:"}, {"sha": "2c2babf0a66535724b080ec1d8913c210f98eacd", "filename": "src/librustc_resolve/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/src%2Flibrustc_resolve%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/src%2Flibrustc_resolve%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdiagnostics.rs?ref=0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "patch": "@@ -890,19 +890,23 @@ match (A, B, C) {\n E0422: r##\"\n You are trying to use an identifier that is either undefined or not a struct.\n Erroneous code example:\n-``` compile_fail,E0422\n+\n+```compile_fail,E0422\n fn main () {\n     let x = Foo { x: 1, y: 2 };\n }\n ```\n+\n In this case, `Foo` is undefined, so it inherently isn't anything, and\n definitely not a struct.\n+\n ```compile_fail\n fn main () {\n     let foo = 1;\n     let x = foo { x: 1, y: 2 };\n }\n ```\n+\n In this case, `foo` is defined, but is not a struct, so Rust can't use it as\n one.\n \"##,"}, {"sha": "bd6129eb5bee3c80befdfa76500988837d72f91e", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 15, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0dbf84b73719b12d9fc59c2d6979d9e25c6bf639/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=0dbf84b73719b12d9fc59c2d6979d9e25c6bf639", "patch": "@@ -790,7 +790,7 @@ Furthermore, the syntax is changing to use `in` instead of `box`. See [RFC 470]\n and [RFC 809] for more details.\n \n [RFC 470]: https://github.com/rust-lang/rfcs/pull/470\n-[RFC 809]: https://github.com/rust-lang/rfcs/pull/809\n+[RFC 809]: https://github.com/rust-lang/rfcs/blob/master/text/0809-box-and-in-for-stdlib.md\n \"##,\n \n E0067: r##\"\n@@ -1428,7 +1428,7 @@ type X = u32; // this compiles\n ```\n \n Note that type parameters for enum-variant constructors go after the variant,\n-not after the enum (Option::None::<u32>, not Option::<u32>::None).\n+not after the enum (`Option::None::<u32>`, not `Option::<u32>::None`).\n \"##,\n \n E0110: r##\"\n@@ -1521,7 +1521,7 @@ impl Bar for u32 {\n \n For information on the design of the orphan rules, see [RFC 1023].\n \n-[RFC 1023]: https://github.com/rust-lang/rfcs/pull/1023\n+[RFC 1023]: https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\n \"##,\n \n E0118: r##\"\n@@ -1911,8 +1911,9 @@ type Foo = Trait<Bar=i32>; // ok!\n \n E0192: r##\"\n Negative impls are only allowed for traits with default impls. For more\n-information see the [opt-in builtin traits RFC](https://github.com/rust-lang/\n-rfcs/blob/master/text/0019-opt-in-builtin-traits.md).\n+information see the [opt-in builtin traits RFC][RFC 19].\n+\n+[RFC 19]: https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md\n \"##,\n \n E0193: r##\"\n@@ -2147,7 +2148,7 @@ E0202: r##\"\n Inherent associated types were part of [RFC 195] but are not yet implemented.\n See [the tracking issue][iss8995] for the status of this implementation.\n \n-[RFC 195]: https://github.com/rust-lang/rfcs/pull/195\n+[RFC 195]: https://github.com/rust-lang/rfcs/blob/master/text/0195-associated-items.md\n [iss8995]: https://github.com/rust-lang/rust/issues/8995\n \"##,\n \n@@ -2424,7 +2425,7 @@ such that `Ti` is a local type. Then no type parameter can appear in any of the\n \n For information on the design of the orphan rules, see [RFC 1023].\n \n-[RFC 1023]: https://github.com/rust-lang/rfcs/pull/1023\n+[RFC 1023]: https://github.com/rust-lang/rfcs/blob/master/text/1023-rebalancing-coherence.md\n \"##,\n \n /*\n@@ -2799,8 +2800,9 @@ verify this assertion; therefore we must tag this `impl` as unsafe.\n \n E0318: r##\"\n Default impls for a trait must be located in the same crate where the trait was\n-defined. For more information see the [opt-in builtin traits RFC](https://github\n-.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md).\n+defined. For more information see the [opt-in builtin traits RFC][RFC 19].\n+\n+[RFC 19]: https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md\n \"##,\n \n E0321: r##\"\n@@ -3018,10 +3020,8 @@ impl<T> Unsize<T> for MyType {}\n ```\n \n If you are defining your own smart pointer type and would like to enable\n-conversion from a sized to an unsized type with the [DST coercion system]\n-(https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md), use\n-[`CoerceUnsized`](https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html)\n-instead.\n+conversion from a sized to an unsized type with the\n+[DST coercion system][RFC 982], use [`CoerceUnsized`] instead.\n \n ```\n #![feature(coerce_unsized)]\n@@ -3035,6 +3035,9 @@ pub struct MyType<T: ?Sized> {\n impl<T, U> CoerceUnsized<MyType<U>> for MyType<T>\n     where T: CoerceUnsized<U> {}\n ```\n+\n+[RFC 982]: https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md\n+[`CoerceUnsized`]: https://doc.rust-lang.org/std/ops/trait.CoerceUnsized.html\n \"##,\n \n E0329: r##\"\n@@ -3438,8 +3441,9 @@ struct.\n \n E0380: r##\"\n Default impls are only allowed for traits with no methods or associated items.\n-For more information see the [opt-in builtin traits RFC](https://github.com/rust\n--lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md).\n+For more information see the [opt-in builtin traits RFC][RFC 19].\n+\n+[RFC 19]: https://github.com/rust-lang/rfcs/blob/master/text/0019-opt-in-builtin-traits.md\n \"##,\n \n E0390: r##\""}]}