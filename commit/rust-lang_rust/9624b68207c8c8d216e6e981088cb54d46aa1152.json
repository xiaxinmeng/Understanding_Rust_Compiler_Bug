{"sha": "9624b68207c8c8d216e6e981088cb54d46aa1152", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2MjRiNjgyMDdjOGM4ZDIxNmU2ZTk4MTA4OGNiNTRkNDZhYTExNTI=", "commit": {"author": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-01-22T19:37:37Z"}, "committer": {"name": "Kamal Marhubi", "email": "kamal@marhubi.com", "date": "2016-01-22T19:37:37Z"}, "message": "book: Clarify that trait or type must be in same crate as impl", "tree": {"sha": "ca417e4bbedffc04cf7ca27c5dc777bb5789c00a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca417e4bbedffc04cf7ca27c5dc777bb5789c00a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9624b68207c8c8d216e6e981088cb54d46aa1152", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9624b68207c8c8d216e6e981088cb54d46aa1152", "html_url": "https://github.com/rust-lang/rust/commit/9624b68207c8c8d216e6e981088cb54d46aa1152", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9624b68207c8c8d216e6e981088cb54d46aa1152/comments", "author": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kamalmarhubi", "id": 50936, "node_id": "MDQ6VXNlcjUwOTM2", "avatar_url": "https://avatars.githubusercontent.com/u/50936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kamalmarhubi", "html_url": "https://github.com/kamalmarhubi", "followers_url": "https://api.github.com/users/kamalmarhubi/followers", "following_url": "https://api.github.com/users/kamalmarhubi/following{/other_user}", "gists_url": "https://api.github.com/users/kamalmarhubi/gists{/gist_id}", "starred_url": "https://api.github.com/users/kamalmarhubi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kamalmarhubi/subscriptions", "organizations_url": "https://api.github.com/users/kamalmarhubi/orgs", "repos_url": "https://api.github.com/users/kamalmarhubi/repos", "events_url": "https://api.github.com/users/kamalmarhubi/events{/privacy}", "received_events_url": "https://api.github.com/users/kamalmarhubi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f36038490559a98efcba3521564663b15785d9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f36038490559a98efcba3521564663b15785d9c", "html_url": "https://github.com/rust-lang/rust/commit/8f36038490559a98efcba3521564663b15785d9c"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "2101533af51c30912aa45ebd5e11e436249af44c", "filename": "src/doc/book/traits.md", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9624b68207c8c8d216e6e981088cb54d46aa1152/src%2Fdoc%2Fbook%2Ftraits.md", "raw_url": "https://github.com/rust-lang/rust/raw/9624b68207c8c8d216e6e981088cb54d46aa1152/src%2Fdoc%2Fbook%2Ftraits.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Ftraits.md?ref=9624b68207c8c8d216e6e981088cb54d46aa1152", "patch": "@@ -277,11 +277,15 @@ This will compile without error.\n This means that even if someone does something bad like add methods to `i32`,\n it won\u2019t affect you, unless you `use` that trait.\n \n-There\u2019s one more restriction on implementing traits: either the trait, or the\n-type you\u2019re writing the `impl` for, must be defined by you. So, we could\n-implement the `HasArea` type for `i32`, because `HasArea` is in our code. But\n-if we tried to implement `ToString`, a trait provided by Rust, for `i32`, we could\n-not, because neither the trait nor the type are in our code.\n+There\u2019s one more restriction on implementing traits: either the trait\n+or the type you\u2019re implementing it for must be defined by you. Or more\n+precisely, one of them must be defined in the same crate as the `impl`\n+you're writing.\n+\n+So, we could implement the `HasArea` type for `i32`, because we defined\n+`HasArea` in our code. But if we tried to implement `ToString`, a trait\n+provided by Rust, for `i32`, we could not, because neither the trait nor\n+the type are defined in our crate.\n \n One last thing about traits: generic functions with a trait bound use\n \u2018monomorphization\u2019 (mono: one, morph: form), so they are statically dispatched."}]}