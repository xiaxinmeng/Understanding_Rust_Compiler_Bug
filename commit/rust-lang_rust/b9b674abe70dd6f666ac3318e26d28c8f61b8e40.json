{"sha": "b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5YjY3NGFiZTcwZGQ2ZjY2NmFjMzMxOGUyNmQyOGM4ZjYxYjhlNDA=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-22T15:19:06Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-22T15:51:26Z"}, "message": "Start adding support for multiple variable declarations per stmt\n\nThis adds parser support and most of the machinery for\n\n    auto x = 10, y = 20;\n\nHowever, the above still goes wrong somewhere in typestate, causing\nthe state checker to believe only the last variable in the list is\ninitialized after the statement.\n\nTim, if you have a moment, could you go over the changes to the tstate\ncode in this patch and see where I'm going wrong?\n\nMulti-var-decls without the typestate extension\n\nAdd a loop", "tree": {"sha": "31ab295ff5a3707262e880bb45c03407a342de7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31ab295ff5a3707262e880bb45c03407a342de7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "html_url": "https://github.com/rust-lang/rust/commit/b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b45d973552c116b90185add4ddb5e4d32bb5cb9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b45d973552c116b90185add4ddb5e4d32bb5cb9b", "html_url": "https://github.com/rust-lang/rust/commit/b45d973552c116b90185add4ddb5e4d32bb5cb9b"}], "stats": {"total": 127, "additions": 81, "deletions": 46}, "files": [{"sha": "4e86427194b1324ca07b23ee5f91ca0894e0bb9e", "filename": "src/comp/middle/alias.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Falias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Falias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Falias.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -133,17 +133,19 @@ fn visit_expr(&@ctx cx, &@ast::expr ex, &scope sc, &vt[scope] v) {\n fn visit_decl(&@ctx cx, &@ast::decl d, &scope sc, &vt[scope] v) {\n     visit::visit_decl(d, sc, v);\n     alt (d.node) {\n-        ast::decl_local(?loc) {\n+      ast::decl_local(?locs) {\n+        for (@ast::local loc in locs) {\n             alt (loc.node.init) {\n-                some(?init) {\n-                    if (init.op == ast::init_move) {\n-                        check_move_rhs(cx, init.expr, sc, v);\n-                    }\n+              some(?init) {\n+                if (init.op == ast::init_move) {\n+                    check_move_rhs(cx, init.expr, sc, v);\n                 }\n-                none {}\n+              }\n+              none {}\n             }\n         }\n-        _ {}\n+      }\n+      _ {}\n     }\n }\n "}, {"sha": "a747003f50f25ef5848a40cabe72f0872cb5800a", "filename": "src/comp/middle/resolve.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fresolve.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -787,10 +787,13 @@ fn lookup_in_block(&ident name, &ast::block_ b, namespace ns) ->\n         alt (st.node) {\n             case (ast::stmt_decl(?d, _)) {\n                 alt (d.node) {\n-                    case (ast::decl_local(?loc)) {\n-                        if (ns == ns_value && str::eq(name, loc.node.ident)) {\n-                            ret some(ast::def_local(local_def(loc.node.id)));\n-                        }\n+                    ast::decl_local(?locs) {\n+                      for (@ast::local loc in locs) {\n+                          if ns == ns_value && str::eq(name, loc.node.ident) {\n+                              ret some(ast::def_local\n+                                       (local_def(loc.node.id)));\n+                          }\n+                      }\n                     }\n                     case (ast::decl_item(?it)) {\n                         alt (it.node) {\n@@ -1325,8 +1328,10 @@ fn check_block(@env e, &ast::block b, &() x, &vt[()] v) {\n         alt (st.node) {\n             case (ast::stmt_decl(?d, _)) {\n                 alt (d.node) {\n-                    ast::decl_local(?loc) {\n-                        add_name(values, d.span, loc.node.ident);\n+                    ast::decl_local(?locs) {\n+                        for (@ast::local loc in locs) {\n+                            add_name(values, d.span, loc.node.ident);\n+                        }\n                     }\n                     ast::decl_item(?it) {\n                         alt (it.node) {"}, {"sha": "aa50e5ff0c2c7c8e2b033b66254552ff6048cf9f", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -6157,8 +6157,10 @@ fn trans_stmt(&@block_ctxt cx, &ast::stmt s) -> result {\n         case (ast::stmt_expr(?e, _)) { bcx = trans_expr(cx, e).bcx; }\n         case (ast::stmt_decl(?d, _)) {\n             alt (d.node) {\n-                case (ast::decl_local(?local)) {\n-                    bcx = init_local(bcx, local).bcx;\n+                case (ast::decl_local(?locals)) {\n+                  for (@ast::local local in locals) {\n+                      bcx = init_local(bcx, local).bcx;\n+                  }\n                 }\n                 case (ast::decl_item(?i)) { trans_item(cx.fcx.lcx, *i); }\n             }\n@@ -6263,7 +6265,11 @@ iter block_locals(&ast::block b) -> @ast::local {\n         alt (s.node) {\n             case (ast::stmt_decl(?d, _)) {\n                 alt (d.node) {\n-                    case (ast::decl_local(?local)) { put local; }\n+                    case (ast::decl_local(?locals)) {\n+                      for (@ast::local local in locals) {\n+                          put local;\n+                      }\n+                    }\n                     case (_) {/* fall through */ }\n                 }\n             }"}, {"sha": "193155d259cbd09b37a4f9d41a7aac6079f3bd8e", "filename": "src/comp/middle/trans_dps.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftrans_dps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftrans_dps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans_dps.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -597,12 +597,16 @@ fn trans_stmt(&@block_ctxt cx, &@ast::stmt stmt) -> @block_ctxt {\n       }\n       ast::stmt_decl(?d, _) {\n         alt (d.node) {\n-          ast::decl_local(?local) { ret trans_init_local(bcx, local); }\n+          ast::decl_local(?locals) {\n+            for (@ast::local local in locals) {\n+                bcx = trans_init_local(bcx, local);\n+            }\n+          }\n           ast::decl_item(?item) {\n             trans::trans_item(bcx_lcx(bcx), *item);\n-            ret bcx;\n           }\n         }\n+        ret bcx;\n       }\n     }\n }"}, {"sha": "01930f366d434f38feea9fb9ea3f5055a8d74ac5", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -585,7 +585,8 @@ fn find_pre_post_stmt(&fn_ctxt fcx, &stmt s) {\n     alt (s.node) {\n         case (stmt_decl(?adecl, ?id)) {\n             alt (adecl.node) {\n-                case (decl_local(?alocal)) {\n+                case (decl_local(?alocals)) {\n+                  for (@local alocal in alocals) {\n                     alt (alocal.node.init) {\n                         case (some(?an_init)) {\n                             /* LHS always becomes initialized,\n@@ -628,6 +629,7 @@ fn find_pre_post_stmt(&fn_ctxt fcx, &stmt s) {\n                                      .conditions);\n                         }\n                     }\n+                  }\n                 }\n                 case (decl_item(?anitem)) {\n                     clear_pp(node_id_to_ts_ann(fcx.ccx, id).conditions);"}, {"sha": "149d0c5efb5ba7a378aa93eb7edb35c6fb771d70", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -596,7 +596,9 @@ fn find_pre_post_state_stmt(&fn_ctxt fcx, &prestate pres, @stmt s) -> bool {\n     alt (s.node) {\n         case (stmt_decl(?adecl, ?id)) {\n             alt (adecl.node) {\n-                case (decl_local(?alocal)) {\n+                case (decl_local(?alocals)) {\n+                  auto changed = false;\n+                  for (@local alocal in alocals) {\n                     alt (alocal.node.init) {\n                         case (some(?an_init)) {\n                             auto changed = set_prestate(stmt_ann, pres) |\n@@ -646,19 +648,18 @@ fn find_pre_post_state_stmt(&fn_ctxt fcx, &prestate pres, @stmt s) -> bool {\n                             /* important to do this in one step to ensure\n                                termination (don't want to set changed to true\n                                for intermediate changes) */\n-                            ret changed | set_poststate(stmt_ann, post);\n-\n-\n+                          changed |= set_poststate(stmt_ann, post);\n                         }\n                         case (none) {\n                             // let int = x; => x is uninit in poststate\n                             set_poststate_ann(fcx.ccx, id, pres);\n                             clear_in_poststate_ident(fcx, alocal.node.id,\n                                                      alocal.node.ident, id);\n                             set_prestate(stmt_ann, pres);\n-                            ret false;\n                         }\n                     }\n+                  }\n+                  ret changed;\n                 }\n                 case (decl_item(?an_item)) {\n                     ret set_prestate(stmt_ann, pres) |"}, {"sha": "584ac7d44fd6ca822fb20969821aeb5b90cb397b", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -2584,7 +2584,9 @@ fn check_stmt(&@fn_ctxt fcx, &@ast::stmt stmt) {\n         case (ast::stmt_decl(?decl, ?id)) {\n             node_id = id;\n             alt (decl.node) {\n-                case (ast::decl_local(?l)) { check_decl_local(fcx, l); }\n+                case (ast::decl_local(?ls)) {\n+                  for (@ast::local l in ls) { check_decl_local(fcx, l); }\n+                }\n                 case (ast::decl_item(_)) {/* ignore for now */ }\n             }\n         }"}, {"sha": "5992a857d1483da1e1e072b2a4ba62972303b1f6", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -252,7 +252,7 @@ type local = spanned[local_];\n \n type decl = spanned[decl_];\n \n-tag decl_ { decl_local(@local); decl_item(@item); }\n+tag decl_ { decl_local((@local)[]); decl_item(@item); }\n \n type arm = rec((@pat)[] pats, block block);\n "}, {"sha": "6dd83963bf8f044743d9a84ee5b9c88646da4b87", "filename": "src/comp/syntax/fold.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Ffold.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -298,9 +298,8 @@ fn noop_fold_pat(&pat_ p, ast_fold fld) -> pat_ {\n \n fn noop_fold_decl(&decl_ d, ast_fold fld) -> decl_ {\n     ret alt (d) {\n-        // local really doesn't need its own fold...\n-        case (decl_local(?l)) {\n-            decl_local(fld.fold_local(l))\n+        case (decl_local(?ls)) {\n+            decl_local(ivec::map(fld.fold_local, ls))\n         }\n         case (decl_item(?it)) { decl_item(fld.fold_item(it)) }\n     }"}, {"sha": "8ea55673207bf39820abb652414e2ac93a125a11", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -1543,14 +1543,22 @@ fn parse_auto_local(&parser p) -> @ast::local {\n \n fn parse_let(&parser p) -> @ast::decl {\n     auto lo = p.get_last_lo_pos();\n-    auto local = parse_typed_local(p);\n-    ret @spanned(lo, p.get_hi_pos(), ast::decl_local(local));\n+    auto locals = ~[parse_typed_local(p)];\n+    while p.peek() == token::COMMA {\n+        p.bump();\n+        locals += ~[parse_typed_local(p)];\n+    }\n+    ret @spanned(lo, p.get_hi_pos(), ast::decl_local(locals));\n }\n \n fn parse_auto(&parser p) -> @ast::decl {\n     auto lo = p.get_last_lo_pos();\n-    auto local = parse_auto_local(p);\n-    ret @spanned(lo, p.get_hi_pos(), ast::decl_local(local));\n+    auto locals = ~[parse_auto_local(p)];\n+    while p.peek() == token::COMMA {\n+        p.bump();\n+        locals += ~[parse_auto_local(p)];\n+    }\n+    ret @spanned(lo, p.get_hi_pos(), ast::decl_local(locals));\n }\n \n fn parse_stmt(&parser p) -> @ast::stmt {"}, {"sha": "4dc65d112bc049e259120e4e5feeb58dd6dc59a0", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -1045,10 +1045,10 @@ fn print_expr(&ps s, &@ast::expr expr) {\n fn print_decl(&ps s, &@ast::decl decl) {\n     maybe_print_comment(s, decl.span.lo);\n     alt (decl.node) {\n-        case (ast::decl_local(?loc)) {\n+        case (ast::decl_local(?locs)) {\n             space_if_not_hardbreak(s);\n             ibox(s, indent_unit);\n-            alt (loc.node.ty) {\n+            alt (locs.(0).node.ty) {\n                 case (some(?ty)) {\n                     word_nbsp(s, \"let\");\n                     print_type(s, *ty);\n@@ -1058,19 +1058,23 @@ fn print_decl(&ps s, &@ast::decl decl) {\n                     word_nbsp(s, \"auto\");\n                 }\n             }\n-            word(s.s, loc.node.ident);\n-            alt (loc.node.init) {\n-                case (some(?init)) {\n+            fn print_local(&ps s, &@ast::local loc) {\n+                word(s.s, loc.node.ident);\n+                alt loc.node.init {\n+                  some(?init) {\n                     space(s.s);\n-                    alt (init.op) {\n-                        case (ast::init_assign) { word_space(s, \"=\"); }\n-                        case (ast::init_move) { word_space(s, \"<-\"); }\n-                        case (ast::init_recv) { word_space(s, \"|>\"); }\n+                    alt init.op {\n+                      ast::init_assign { word_space(s, \"=\"); }\n+                      ast::init_move { word_space(s, \"<-\"); }\n+                      ast::init_recv { word_space(s, \"|>\"); }\n                     }\n                     print_expr(s, init.expr);\n+                  }\n+                  _ { }\n                 }\n-                case (_) { }\n             }\n+            fn local_span(&@ast::local loc) -> codemap::span { ret loc.span; }\n+            commasep_cmnt(s, consistent, locs, print_local, local_span);\n             end(s);\n         }\n         case (ast::decl_item(?item)) { print_item(s, item); }"}, {"sha": "820ebf22aae806523f9a69ad802434fc296a795d", "filename": "src/comp/syntax/visit.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fvisit.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -249,8 +249,8 @@ fn visit_stmt[E](&@stmt s, &E e, &vt[E] v) {\n \n fn visit_decl[E](&@decl d, &E e, &vt[E] v) {\n     alt (d.node) {\n-        case (decl_local(?loc)) {\n-            v.visit_local(loc, e, v);\n+        case (decl_local(?locs)) {\n+          for (@ast::local loc in locs) { v.visit_local(loc, e, v); }\n         }\n         case (decl_item(?it)) { v.visit_item(it, e, v); }\n     }"}, {"sha": "88cb173cc7a934e8d511da04fdb0d6032c775a4f", "filename": "src/comp/syntax/walk.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b9b674abe70dd6f666ac3318e26d28c8f61b8e40/src%2Fcomp%2Fsyntax%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fwalk.rs?ref=b9b674abe70dd6f666ac3318e26d28c8f61b8e40", "patch": "@@ -256,7 +256,9 @@ fn walk_decl(&ast_visitor v, @ast::decl d) {\n     if (!v.keep_going()) { ret; }\n     v.visit_decl_pre(d);\n     alt (d.node) {\n-        case (ast::decl_local(?loc)) { walk_local(v, loc); }\n+        case (ast::decl_local(?locs)) {\n+          for (@ast::local loc in locs) { walk_local(v, loc); }\n+        }\n         case (ast::decl_item(?it)) { walk_item(v, it); }\n     }\n     v.visit_decl_post(d);"}]}