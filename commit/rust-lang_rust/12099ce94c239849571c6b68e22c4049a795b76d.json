{"sha": "12099ce94c239849571c6b68e22c4049a795b76d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMDk5Y2U5NGMyMzk4NDk1NzFjNmI2OGUyMmM0MDQ5YTc5NWI3NmQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-09-02T13:33:17Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-09-03T10:00:42Z"}, "message": "Tests for fixed issues.\n\nCloses #3794.\nCloses #4025.\nCloses #5688.\nCloses #5708.\nCloses #7012.\nCloses #7327.", "tree": {"sha": "2d3f15157b34bee2adfdbc46915abe1eadc52658", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d3f15157b34bee2adfdbc46915abe1eadc52658"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12099ce94c239849571c6b68e22c4049a795b76d", "comment_count": 4, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12099ce94c239849571c6b68e22c4049a795b76d", "html_url": "https://github.com/rust-lang/rust/commit/12099ce94c239849571c6b68e22c4049a795b76d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12099ce94c239849571c6b68e22c4049a795b76d/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "364beaa7767e8be93ffebe074f993f61c7f57c5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/364beaa7767e8be93ffebe074f993f61c7f57c5c", "html_url": "https://github.com/rust-lang/rust/commit/364beaa7767e8be93ffebe074f993f61c7f57c5c"}], "stats": {"total": 172, "additions": 171, "deletions": 1}, "files": [{"sha": "dd881790ba880430aabc75495fe9e93da0e6b9c2", "filename": "src/test/compile-fail/functional-struct-update-noncopyable.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffunctional-struct-update-noncopyable.rs?ref=12099ce94c239849571c6b68e22c4049a795b76d", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// issue 7327\n+\n+// xfail-fast #7103\n+extern mod extra;\n+use extra::arc::*;\n+\n+struct A { y: Arc<int>, x: Arc<int> }\n+\n+impl Drop for A {\n+    fn drop(&self) { println(fmt!(\"x=%?\", self.x.get())); }\n+}\n+fn main() {\n+    let a = A { y: Arc::new(1), x: Arc::new(2) };\n+    let _b = A { y: Arc::new(3), ..a };\n+    let _c = a; //~ ERROR use of moved value\n+}"}, {"sha": "fdd0955bbed0eb94286c32ffa0f5cfb25b81a30e", "filename": "src/test/run-pass/issue-3794.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3794.rs?ref=12099ce94c239849571c6b68e22c4049a795b76d", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test\n trait T {\n     fn print(&self);\n }"}, {"sha": "4a5cf156ce1006764e8844535f8f4655ec4f5774", "filename": "src/test/run-pass/issue-4025.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-4025.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-4025.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4025.rs?ref=12099ce94c239849571c6b68e22c4049a795b76d", "patch": "@@ -0,0 +1,32 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/*\n+# if b { x } else { y } requires identical types for x and y\n+*/\n+\n+fn print1(b: bool, s1: &str, s2: &str) {\n+    println(if b { s1 } else { s2 });\n+}\n+fn print2<'a, 'b>(b: bool, s1: &'a str, s2: &'b str) {\n+    println(if b { s1 } else { s2 });\n+}\n+fn print3(b: bool, s1: &str, s2: &str) {\n+    let mut s: &str;\n+    if b { s = s1; } else { s = s2; }\n+    println(s);\n+}\n+fn print4<'a, 'b>(b: bool, s1: &'a str, s2: &'b str) {\n+    let mut s: &str;\n+    if b { s = s1; } else { s = s2; }\n+    println(s);\n+}\n+\n+pub fn main() {}"}, {"sha": "440e2a43e42f3e97e6b585e2c37afde6880f0881", "filename": "src/test/run-pass/issue-5688.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-5688.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-5688.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5688.rs?ref=12099ce94c239849571c6b68e22c4049a795b76d", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/*\n+# Corrupted initialization in the static struct\n+\n+...should print &[1, 2, 3] but instead prints something like\n+&[4492532864, 24]. It is pretty evident that the compiler messed up\n+with the representation of [int, ..n] and [int] somehow, or at least\n+failed to typecheck correctly.\n+*/\n+\n+struct X { vec: &'static [int] }\n+static V: &'static [X] = &[X { vec: &[1, 2, 3] }];\n+fn main() {\n+    for &v in V.iter() {\n+        println(fmt!(\"%?\", v.vec));\n+    }\n+}"}, {"sha": "51f6ad6aa30f269f9fa6f4b2617be6bf68f0e8fc", "filename": "src/test/run-pass/issue-5708.rs", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-5708.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-5708.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5708.rs?ref=12099ce94c239849571c6b68e22c4049a795b76d", "patch": "@@ -0,0 +1,60 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/*\n+# ICE when returning struct with borrowed pointer to trait\n+\n+A function which takes a borrowed pointer to a trait and returns a\n+struct with that borrowed pointer results in an ICE.\n+\n+This does not occur with concrete types, only with borrowed pointers\n+to traits.\n+*/\n+\n+// original\n+trait Inner {\n+    fn print(&self);\n+}\n+\n+impl Inner for int {\n+    fn print(&self) { print(fmt!(\"Inner: %d\\n\", *self)); }\n+}\n+\n+struct Outer<'self> {\n+    inner: &'self Inner\n+}\n+\n+impl<'self> Outer<'self> {\n+    fn new<'r>(inner: &'r Inner) -> Outer<'r> {\n+        Outer {\n+            inner: inner\n+        }\n+    }\n+}\n+\n+fn main() {\n+    let inner = 5;\n+    let outer = Outer::new(&inner as &Inner);\n+    outer.inner.print();\n+}\n+\n+\n+// minimal\n+trait MyTrait<T> { }\n+\n+pub struct MyContainer<'self, T> {\n+    foos: ~[&'self MyTrait<T>],\n+}\n+\n+impl<'self, T> MyContainer<'self, T> {\n+    pub fn add (&mut self, foo: &'self MyTrait<T>) {\n+        self.foos.push(foo);\n+    }\n+}"}, {"sha": "777803d75a52ba17a2ed4531cb0e0dd55415c8c3", "filename": "src/test/run-pass/issue-7012.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-7012.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12099ce94c239849571c6b68e22c4049a795b76d/src%2Ftest%2Frun-pass%2Fissue-7012.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7012.rs?ref=12099ce94c239849571c6b68e22c4049a795b76d", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+/*\n+# Comparison of static arrays\n+\n+The expected behaviour would be that test==test1, therefore 'true'\n+would be printed, however the below prints false.\n+*/\n+\n+struct signature<'self> { pattern : &'self [u32] }\n+\n+static test1: signature<'static> =  signature {\n+  pattern: &[0x243f6a88u32,0x85a308d3u32,0x13198a2eu32,0x03707344u32,0xa4093822u32,0x299f31d0u32]\n+};\n+\n+fn main() {\n+  let test = &[0x243f6a88u32,0x85a308d3u32,0x13198a2eu32,0x03707344u32,0xa4093822u32,0x299f31d0u32];\n+  println(fmt!(\"%b\",test==test1.pattern));\n+}"}]}