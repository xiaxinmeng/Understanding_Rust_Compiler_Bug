{"sha": "58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "node_id": "C_kwDOAAsO6NoAKDU4MTM2YjAxYmEwY2MwYzJmNTk4YzMwMGRiM2NjODY0ZmNiMDlmMWY", "commit": {"author": {"name": "Duong Quoc Khanh", "email": "dqkqdlot@gmail.com", "date": "2023-02-09T08:32:55Z"}, "committer": {"name": "Duong Quoc Khanh", "email": "dqkqdlot@gmail.com", "date": "2023-02-09T08:32:55Z"}, "message": "Add more tests for completion without body.\n\nAdd tests for Fn, Const, TypeAlias without body inside Trait.", "tree": {"sha": "a56871c044a05b36b68a9d4f6288601d1fc02798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a56871c044a05b36b68a9d4f6288601d1fc02798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEwZYQ1XvHmidXWoT/2lKnToBKAOcFAmPkr/EACgkQ2lKnToBK\nAOeV/w/7B4ckH9ixKB6J6//yPcRY13lVo/LYoCPv80uN+3cF0EjLakycGjIzSCCw\np0yp+kBS/xq+zU05y+T7namRaKSYD4176Nn9t4T9eN5ZTPSnb0mCH4sQ/hd/SvgU\nhnrdXpdU3muW2gtP7Wd9yE+7xxAoQ/U8c6koSm29pXeaoA5FmWSpU8Oe1ok2eX+I\n4jdO+nyGDkDXPxF/H8Y2q/wOR+jTkaKpnaLKTBytdnTMy/DHAkXhZEPpRdnPb2h0\nQGTYhj+eWU9IHnFPrPqEUepSg/OyVF5B61OB18t4uKr9QcN8V8LMCCQ2oAtmKyQX\nkvdPTeX38DATmVmt/rRqZ1n+piTxvLwDX6nTQFIeHYLB5vdqyBEsonH4UvDKXlnK\nlAmRX/7tP+KUNfpkb36arvKr8A+sHXpGmY5NQyBMxFvs+nFH9dMLP53hBnsc4F4I\neLTvOlDpHeBRVeSJncTuAbQQqn/NEDgPGKg5qFeuK7DP7f79gyMCWtuPpINIkbm4\nkKp7GsbU5HfgQr21I6SYuMeoNAVMcl1vzBE4kUZditJMnZgwOaJ6yQJjwx1jCeoF\nFe6RzT81CPaStZg6NN8zlN5kXMqQbODozv8T7t9NvlaQfr5KlnD52Qj1Abdqpiel\no/yCUxdNWeObOZ9v/hjkxzT+A7JrB7+J9E58SqDs7lJmnbXuipA=\n=GfY/\n-----END PGP SIGNATURE-----", "payload": "tree a56871c044a05b36b68a9d4f6288601d1fc02798\nparent eaed19c5399064393e846ad5dddd7b0b290d2582\nauthor Duong Quoc Khanh <dqkqdlot@gmail.com> 1675931575 +0900\ncommitter Duong Quoc Khanh <dqkqdlot@gmail.com> 1675931575 +0900\n\nAdd more tests for completion without body.\n\nAdd tests for Fn, Const, TypeAlias without body inside Trait.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "html_url": "https://github.com/rust-lang/rust/commit/58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58136b01ba0cc0c2f598c300db3cc864fcb09f1f/comments", "author": {"login": "dqkqd", "id": 24296517, "node_id": "MDQ6VXNlcjI0Mjk2NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/24296517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dqkqd", "html_url": "https://github.com/dqkqd", "followers_url": "https://api.github.com/users/dqkqd/followers", "following_url": "https://api.github.com/users/dqkqd/following{/other_user}", "gists_url": "https://api.github.com/users/dqkqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dqkqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dqkqd/subscriptions", "organizations_url": "https://api.github.com/users/dqkqd/orgs", "repos_url": "https://api.github.com/users/dqkqd/repos", "events_url": "https://api.github.com/users/dqkqd/events{/privacy}", "received_events_url": "https://api.github.com/users/dqkqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dqkqd", "id": 24296517, "node_id": "MDQ6VXNlcjI0Mjk2NTE3", "avatar_url": "https://avatars.githubusercontent.com/u/24296517?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dqkqd", "html_url": "https://github.com/dqkqd", "followers_url": "https://api.github.com/users/dqkqd/followers", "following_url": "https://api.github.com/users/dqkqd/following{/other_user}", "gists_url": "https://api.github.com/users/dqkqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/dqkqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dqkqd/subscriptions", "organizations_url": "https://api.github.com/users/dqkqd/orgs", "repos_url": "https://api.github.com/users/dqkqd/repos", "events_url": "https://api.github.com/users/dqkqd/events{/privacy}", "received_events_url": "https://api.github.com/users/dqkqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eaed19c5399064393e846ad5dddd7b0b290d2582", "url": "https://api.github.com/repos/rust-lang/rust/commits/eaed19c5399064393e846ad5dddd7b0b290d2582", "html_url": "https://github.com/rust-lang/rust/commit/eaed19c5399064393e846ad5dddd7b0b290d2582"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "9fc731bb11d576604604c335e975244888a45cfe", "filename": "crates/ide-completion/src/tests/item_list.rs", "status": "modified", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/58136b01ba0cc0c2f598c300db3cc864fcb09f1f/crates%2Fide-completion%2Fsrc%2Ftests%2Fitem_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58136b01ba0cc0c2f598c300db3cc864fcb09f1f/crates%2Fide-completion%2Fsrc%2Ftests%2Fitem_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fitem_list.rs?ref=58136b01ba0cc0c2f598c300db3cc864fcb09f1f", "patch": "@@ -214,6 +214,57 @@ fn in_trait_assoc_item_list() {\n     );\n }\n \n+#[test]\n+fn in_trait_assoc_fn_missing_body() {\n+    check(\n+        r#\"trait Foo { fn function(); $0 }\"#,\n+        expect![[r#\"\n+            ma makro!(\u2026) macro_rules! makro\n+            md module\n+            kw const\n+            kw crate::\n+            kw fn\n+            kw self::\n+            kw type\n+            kw unsafe\n+        \"#]],\n+    );\n+}\n+\n+#[test]\n+fn in_trait_assoc_const_missing_body() {\n+    check(\n+        r#\"trait Foo { const CONST: (); $0 }\"#,\n+        expect![[r#\"\n+            ma makro!(\u2026) macro_rules! makro\n+            md module\n+            kw const\n+            kw crate::\n+            kw fn\n+            kw self::\n+            kw type\n+            kw unsafe\n+        \"#]],\n+    );\n+}\n+\n+#[test]\n+fn in_trait_assoc_type_aliases_missing_ty() {\n+    check(\n+        r#\"trait Foo { type Type; $0 }\"#,\n+        expect![[r#\"\n+            ma makro!(\u2026) macro_rules! makro\n+            md module\n+            kw const\n+            kw crate::\n+            kw fn\n+            kw self::\n+            kw type\n+            kw unsafe\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn in_trait_impl_assoc_item_list() {\n     check("}]}