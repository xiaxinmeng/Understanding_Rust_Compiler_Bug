{"sha": "425723f5b384ba75af4b9a6b4e0186f8bf2e99a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyNTcyM2Y1YjM4NGJhNzVhZjRiOWE2YjRlMDE4NmY4YmYyZTk5YTM=", "commit": {"author": {"name": "Marko Mijalkovic", "email": "marko.mijalkovic97@gmail.com", "date": "2020-05-14T10:19:36Z"}, "committer": {"name": "Marko Mijalkovic", "email": "marko.mijalkovic97@gmail.com", "date": "2020-05-14T10:19:36Z"}, "message": "Rewrite link script from scratch\n\nThis absolves previous licensing issues.", "tree": {"sha": "e4b89ffc9be1e2afb4221bb28bb1288426011996", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4b89ffc9be1e2afb4221bb28bb1288426011996"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/425723f5b384ba75af4b9a6b4e0186f8bf2e99a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/425723f5b384ba75af4b9a6b4e0186f8bf2e99a3", "html_url": "https://github.com/rust-lang/rust/commit/425723f5b384ba75af4b9a6b4e0186f8bf2e99a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/425723f5b384ba75af4b9a6b4e0186f8bf2e99a3/comments", "author": {"login": "overdrivenpotato", "id": 5241210, "node_id": "MDQ6VXNlcjUyNDEyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5241210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overdrivenpotato", "html_url": "https://github.com/overdrivenpotato", "followers_url": "https://api.github.com/users/overdrivenpotato/followers", "following_url": "https://api.github.com/users/overdrivenpotato/following{/other_user}", "gists_url": "https://api.github.com/users/overdrivenpotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/overdrivenpotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overdrivenpotato/subscriptions", "organizations_url": "https://api.github.com/users/overdrivenpotato/orgs", "repos_url": "https://api.github.com/users/overdrivenpotato/repos", "events_url": "https://api.github.com/users/overdrivenpotato/events{/privacy}", "received_events_url": "https://api.github.com/users/overdrivenpotato/received_events", "type": "User", "site_admin": false}, "committer": {"login": "overdrivenpotato", "id": 5241210, "node_id": "MDQ6VXNlcjUyNDEyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5241210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/overdrivenpotato", "html_url": "https://github.com/overdrivenpotato", "followers_url": "https://api.github.com/users/overdrivenpotato/followers", "following_url": "https://api.github.com/users/overdrivenpotato/following{/other_user}", "gists_url": "https://api.github.com/users/overdrivenpotato/gists{/gist_id}", "starred_url": "https://api.github.com/users/overdrivenpotato/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/overdrivenpotato/subscriptions", "organizations_url": "https://api.github.com/users/overdrivenpotato/orgs", "repos_url": "https://api.github.com/users/overdrivenpotato/repos", "events_url": "https://api.github.com/users/overdrivenpotato/events{/privacy}", "received_events_url": "https://api.github.com/users/overdrivenpotato/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "744449433004fbdc3d0d665551e59ca2880f0552", "url": "https://api.github.com/repos/rust-lang/rust/commits/744449433004fbdc3d0d665551e59ca2880f0552", "html_url": "https://github.com/rust-lang/rust/commit/744449433004fbdc3d0d665551e59ca2880f0552"}], "stats": {"total": 297, "additions": 21, "deletions": 276}, "files": [{"sha": "1bd436d6f94cc08614c7a2e28a1db6ec211c1e93", "filename": "src/librustc_target/spec/mipsel_sony_psp_linker_script.ld", "status": "modified", "additions": 21, "deletions": 276, "changes": 297, "blob_url": "https://github.com/rust-lang/rust/blob/425723f5b384ba75af4b9a6b4e0186f8bf2e99a3/src%2Flibrustc_target%2Fspec%2Fmipsel_sony_psp_linker_script.ld", "raw_url": "https://github.com/rust-lang/rust/raw/425723f5b384ba75af4b9a6b4e0186f8bf2e99a3/src%2Flibrustc_target%2Fspec%2Fmipsel_sony_psp_linker_script.ld", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmipsel_sony_psp_linker_script.ld?ref=425723f5b384ba75af4b9a6b4e0186f8bf2e99a3", "patch": "@@ -1,289 +1,34 @@\n-/*\n- * Copyright (c) 2005  adresd\n- * Copyright (c) 2005  Marcus R. Brown\n- * Copyright (c) 2005  James Forshaw\n- * Copyright (c) 2005  John Kelley\n- * Copyright (c) 2005  Jesper Svennevid\n- * All rights reserved.\n- * \n- * Redistribution and use in source and binary forms, with or without\n- * modification, are permitted provided that the following conditions\n- * are met:\n- * 1. Redistributions of source code must retain the above copyright\n- *    notice, this list of conditions and the following disclaimer.\n- * 2. Redistributions in binary form must reproduce the above copyright\n- *    notice, this list of conditions and the following disclaimer in the\n- *    documentation and/or other materials provided with the distribution.\n- * 3. The names of the authors may not be used to endorse or promote products\n- *    derived from this software without specific prior written permission.\n- * \n- * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n- * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\n- * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\n- * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,\n- * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\n- * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n- * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n- * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n- * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n- */\n-\n-OUTPUT_ARCH(mips:allegrex)\n ENTRY(module_start)\n SECTIONS\n {\n-  /* Read-only sections, merged into text segment: */\n-  PROVIDE (__executable_start = 0x0); . = 0x0;\n-  .interp         : { *(.interp) }\n-  .dynamic        : { *(.dynamic) }\n-  .hash           : { *(.hash) }\n-  .dynsym         : { *(.dynsym) }\n-  .dynstr         : { *(.dynstr) }\n-  .gnu.version    : { *(.gnu.version) }\n-  .gnu.version_d  : { *(.gnu.version_d) }\n-  .gnu.version_r  : { *(.gnu.version_r) }\n-  .rel.text       : { *(.rel.text .rel.text.* .rel.gnu.linkonce.t.*) }\n-  .rela.text      : { *(.rela.text .rela.text.* .rela.gnu.linkonce.t.*) }\n-  .rel.init       : { *(.rel.init) }\n-  .rela.init      : { *(.rela.init) }\n-  .rel.fini       : { *(.rel.fini) }\n-  .rela.fini      : { *(.rela.fini) }\n-  /* PSP-specific relocations. */\n-  .rel.sceStub.text   : { *(.rel.sceStub.text) *(SORT(.rel.sceStub.text.*)) }\n-  .rel.lib.ent.top    : { *(.rel.lib.ent.top) }\n-  .rel.lib.ent        : { *(.rel.lib.ent) }\n-  .rel.lib.ent.btm    : { *(.rel.lib.ent.btm) }\n-  .rel.lib.stub.top   : { *(.rel.lib.stub.top) }\n-  .rel.lib.stub       : { *(.rel.lib.stub) }\n-  .rel.lib.stub.btm   : { *(.rel.lib.stub.btm) }\n-  .rel.rodata.sceModuleInfo   : { *(.rel.rodata.sceModuleInfo) }\n-  .rel.rodata.sceResident     : { *(.rel.rodata.sceResident) }\n-  .rel.rodata.sceNid          : { *(.rel.rodata.sceNid) *(SORT(.rel.rodata.sceNid.*)) }\n-  .rel.rodata.sceVstub        : { *(.rel.rodata.sceVstub) *(SORT(.rel.rodata.sceVstub.*)) }\n-  .rel.rodata     : { *(.rel.rodata .rel.rodata.* .rel.gnu.linkonce.r.*) }\n-  .rela.rodata    : { *(.rela.rodata .rela.rodata.* .rela.gnu.linkonce.r.*) }\n-  .rel.data.rel.ro   : { *(.rel.data.rel.ro*) }\n-  .rela.data.rel.ro   : { *(.rel.data.rel.ro*) }\n-  .rel.data       : { *(.rel.data .rel.data.* .rel.gnu.linkonce.d.*) }\n-  .rela.data      : { *(.rela.data .rela.data.* .rela.gnu.linkonce.d.*) }\n-  .rel.tdata\t  : { *(.rel.tdata .rel.tdata.* .rel.gnu.linkonce.td.*) }\n-  .rela.tdata\t  : { *(.rela.tdata .rela.tdata.* .rela.gnu.linkonce.td.*) }\n-  .rel.tbss\t  : { *(.rel.tbss .rel.tbss.* .rel.gnu.linkonce.tb.*) }\n-  .rela.tbss\t  : { *(.rela.tbss .rela.tbss.* .rela.gnu.linkonce.tb.*) }\n-  .rel.ctors      : { *(.rel.ctors) }\n-  .rela.ctors     : { *(.rela.ctors) }\n-  .rel.dtors      : { *(.rel.dtors) }\n-  .rela.dtors     : { *(.rela.dtors) }\n-  .rel.got        : { *(.rel.got) }\n-  .rela.got       : { *(.rela.got) }\n-  .rel.sdata      : { *(.rel.sdata .rel.sdata.* .rel.gnu.linkonce.s.*) }\n-  .rela.sdata     : { *(.rela.sdata .rela.sdata.* .rela.gnu.linkonce.s.*) }\n-  .rel.sbss       : { *(.rel.sbss .rel.sbss.* .rel.gnu.linkonce.sb.*) }\n-  .rela.sbss      : { *(.rela.sbss .rela.sbss.* .rela.gnu.linkonce.sb.*) }\n-  .rel.sdata2     : { *(.rel.sdata2 .rel.sdata2.* .rel.gnu.linkonce.s2.*) }\n-  .rela.sdata2    : { *(.rela.sdata2 .rela.sdata2.* .rela.gnu.linkonce.s2.*) }\n-  .rel.sbss2      : { *(.rel.sbss2 .rel.sbss2.* .rel.gnu.linkonce.sb2.*) }\n-  .rela.sbss2     : { *(.rela.sbss2 .rela.sbss2.* .rela.gnu.linkonce.sb2.*) }\n-  .rel.bss        : { *(.rel.bss .rel.bss.* .rel.gnu.linkonce.b.*) }\n-  .rela.bss       : { *(.rela.bss .rela.bss.* .rela.gnu.linkonce.b.*) }\n-  .rel.plt        : { *(.rel.plt) }\n-  .rela.plt       : { *(.rela.plt) }\n-\n-  /* Start the text section at 0x0 for PRX generation */\n-  . = 0;\n-\n-  .text           :\n-  {\n-    _ftext = . ;\n-    *(.text .stub .text.* .gnu.linkonce.t.*)\n-    KEEP (*(.text.*personality*))\n-    /* .gnu.warning sections are handled specially by elf32.em.  */\n-    *(.gnu.warning)\n-    *(.mips16.fn.*) *(.mips16.call.*)\n-  } =0\n-  .init           :\n-  {\n-    KEEP (*(.init))\n-  } =0\n-  .plt            : { *(.plt) }\n-  .fini           :\n-  {\n-    KEEP (*(.fini))\n-  } =0\n-  /* PSP library stub functions. */\n-  .sceStub.text     : { *(.sceStub.text) *(SORT(.sceStub.text.*)) }\n-  PROVIDE (__etext = .);\n-  PROVIDE (_etext = .);\n-  PROVIDE (etext = .);\n-  /* PSP library entry table and library stub table. */\n-  .lib.ent.top    : { *(.lib.ent.top) }\n-  .lib.ent        : { *(.lib.ent) }\n-  .lib.ent.btm    : { *(.lib.ent.btm) }\n-  .lib.stub.top   : { *(.lib.stub.top) }\n-  .lib.stub       : { *(.lib.stub) }\n-  .lib.stub.btm   : { *(.lib.stub.btm) }\n-  /* PSP read-only data for module info, NIDs, and Vstubs.  The\n-     .rodata.sceModuleInfo section must appear before the .rodata section\n-     otherwise it would get absorbed into .rodata and the PSP bootloader\n-     would be unable to locate the module info structure. */\n-  .rodata.sceModuleInfo    : { *(.rodata.sceModuleInfo) }\n-  .rodata.sceResident      : { *(.rodata.sceResident) }\n-  .rodata.sceNid           : { KEEP(*(.rodata.sceNid)) KEEP(*(SORT(.rodata.sceNid.*))) }\n-  .rodata.sceVstub         : { *(.rodata.sceVstub) *(SORT(.rodata.sceVstub.*)) }\n-  .rodata         : { *(.rodata .rodata.* .gnu.linkonce.r.*) }\n-  .rodata1        : { *(.rodata1) }\n-  .sdata2         : { *(.sdata2 .sdata2.* .gnu.linkonce.s2.*) }\n-  .sbss2          : { *(.sbss2 .sbss2.* .gnu.linkonce.sb2.*) }\n-  .gcc_except_table   : ONLY_IF_RO { KEEP (*(.gcc_except_table)) *(.gcc_except_table.*) }\n-\n-  /* Exception handling  */\n-  .eh_frame_hdr :\n-  {\n-    KEEP(*(.eh_frame_hdr))\n-  }\n-\n+  /* PRX format requires text to begin at 0 */\n+  .text 0 : { *(.text .text.*) }\n+\n+  /* Sort stubs for convenient ordering */\n+  .sceStub.text : { *(.sceStub.text) *(SORT(.sceStub.text.*)) }\n+\n+  /* Keep these sections around, even though they may appear unused to the linker */\n+  .lib.ent.top :  { KEEP(*(.lib.ent.top)) }\n+  .lib.ent :      { KEEP(*(.lib.ent)) }\n+  .lib.ent.btm :  { KEEP(*(.lib.ent.btm)) }\n+  .lib.stub.top : { KEEP(*(.lib.stub.top)) }\n+  .lib.stub :     { KEEP(*(.lib.stub)) }\n+  .lib.stub.btm : { KEEP(*(.lib.stub.btm)) }\n+  .eh_frame_hdr : { KEEP(*(.eh_frame_hdr)) }\n+\n+  /* Add symbols for LLVM's libunwind */\n   __eh_frame_hdr_start = SIZEOF(.eh_frame_hdr) > 0 ? ADDR(.eh_frame_hdr) : 0;\n   __eh_frame_hdr_end = SIZEOF(.eh_frame_hdr) > 0 ? . : 0;\n-\n   .eh_frame :\n   {\n     __eh_frame_start = .;\n     KEEP(*(.eh_frame))\n     __eh_frame_end = .;\n   }\n \n-  /* Adjust the address for the data segment.  We want to adjust up to\n-     the same address within the page on the next page up.  */\n-  . = ALIGN(256) + (. & (256 - 1));\n-\n-  .gcc_except_table   : ONLY_IF_RW { KEEP (*(.gcc_except_table)) *(.gcc_except_table.*) }\n-  /* Thread Local Storage sections  */\n-  .tdata\t  : { *(.tdata .tdata.* .gnu.linkonce.td.*) }\n-  .tbss\t\t  : { *(.tbss .tbss.* .gnu.linkonce.tb.*) *(.tcommon) }\n-  /* Ensure the __preinit_array_start label is properly aligned.  We\n-     could instead move the label definition inside the section, but\n-     the linker would then create the section even if it turns out to\n-     be empty, which isn't pretty.  */\n-  . = ALIGN(32 / 8);\n-  PROVIDE (__preinit_array_start = .);\n-  .preinit_array     : { KEEP (*(.preinit_array)) }\n-  PROVIDE (__preinit_array_end = .);\n-  PROVIDE (__init_array_start = .);\n-  .init_array     : { KEEP (*(.init_array)) }\n-  PROVIDE (__init_array_end = .);\n-  PROVIDE (__fini_array_start = .);\n-  .fini_array     : { KEEP (*(.fini_array)) }\n-  PROVIDE (__fini_array_end = .);\n-  .ctors          :\n-  {\n-    /* gcc uses crtbegin.o to find the start of\n-       the constructors, so we make sure it is\n-       first.  Because this is a wildcard, it\n-       doesn't matter if the user does not\n-       actually link against crtbegin.o; the\n-       linker won't look for a file to match a\n-       wildcard.  The wildcard also means that it\n-       doesn't matter which directory crtbegin.o\n-       is in.  */\n-    KEEP (*crtbegin*.o(.ctors))\n-    /* We don't want to include the .ctor section from\n-       from the crtend.o file until after the sorted ctors.\n-       The .ctor section from the crtend file contains the\n-       end of ctors marker and it must be last */\n-    KEEP (*(EXCLUDE_FILE (*crtend*.o ) .ctors))\n-    KEEP (*(SORT(.ctors.*)))\n-    KEEP (*(.ctors))\n-  }\n-  .dtors          :\n-  {\n-    KEEP (*crtbegin*.o(.dtors))\n-    KEEP (*(EXCLUDE_FILE (*crtend*.o ) .dtors))\n-    KEEP (*(SORT(.dtors.*)))\n-    KEEP (*(.dtors))\n-  }\n-  .jcr            : { KEEP (*(.jcr)) }\n-  .data.rel.ro : { *(.data.rel.ro.local) *(.data.rel.ro*) }\n-  .data           :\n-  {\n-    _fdata = . ;\n-    *(.data .data.* .gnu.linkonce.d.*)\n-    KEEP (*(.gnu.linkonce.d.*personality*))\n-    SORT(CONSTRUCTORS)\n-  }\n-  .data1          : { *(.data1) }\n-  . = .;\n-  _gp = ALIGN(16) + 0x7ff0;\n-  .got            : { *(.got.plt) *(.got) }\n-  /* We want the small data sections together, so single-instruction offsets\n-     can access them all, and initialized data all before uninitialized, so\n-     we can shorten the on-disk segment size.  */\n-  .sdata          :\n-  {\n-    *(.sdata .sdata.* .gnu.linkonce.s.*)\n-  }\n-  .lit8           : { *(.lit8) }\n-  .lit4           : { *(.lit4) }\n-  _edata = .;\n-  PROVIDE (edata = .);\n-  __bss_start = .;\n-  _fbss = .;\n-  .sbss           :\n-  {\n-    PROVIDE (__sbss_start = .);\n-    PROVIDE (___sbss_start = .);\n-    *(.dynsbss)\n-    *(.sbss .sbss.* .gnu.linkonce.sb.*)\n-    *(.scommon)\n-    PROVIDE (__sbss_end = .);\n-    PROVIDE (___sbss_end = .);\n-  }\n-  .bss            :\n-  {\n-   *(.dynbss)\n-   *(.bss .bss.* .gnu.linkonce.b.*)\n-   *(COMMON)\n-   /* Align here to ensure that the .bss section occupies space up to\n-      _end.  Align after .bss to ensure correct alignment even if the\n-      .bss section disappears because there are no input sections.  */\n-   . = ALIGN(32 / 8);\n-  }\n-  . = ALIGN(32 / 8);\n-  _end = .;\n-  PROVIDE (end = .);\n-  /* Stabs debugging sections.  */\n-  .stab          0 : { *(.stab) }\n-  .stabstr       0 : { *(.stabstr) }\n-  .stab.excl     0 : { *(.stab.excl) }\n-  .stab.exclstr  0 : { *(.stab.exclstr) }\n-  .stab.index    0 : { *(.stab.index) }\n-  .stab.indexstr 0 : { *(.stab.indexstr) }\n-  .comment       0 : { *(.comment) }\n-  /* DWARF debug sections.\n-     Symbols in the DWARF debugging sections are relative to the beginning\n-     of the section so we begin them at 0.  */\n-  /* DWARF 1 */\n-  .debug          0 : { *(.debug) }\n-  .line           0 : { *(.line) }\n-  /* GNU DWARF 1 extensions */\n-  .debug_srcinfo  0 : { *(.debug_srcinfo) }\n-  .debug_sfnames  0 : { *(.debug_sfnames) }\n-  /* DWARF 1.1 and DWARF 2 */\n-  .debug_aranges  0 : { *(.debug_aranges) }\n-  .debug_pubnames 0 : { *(.debug_pubnames) }\n-  /* DWARF 2 */\n-  .debug_info     0 : { *(.debug_info .gnu.linkonce.wi.*) }\n-  .debug_abbrev   0 : { *(.debug_abbrev) }\n-  .debug_line     0 : { *(.debug_line) }\n-  .debug_frame    0 : { *(.debug_frame) }\n-  .debug_str      0 : { *(.debug_str) }\n-  .debug_loc      0 : { *(.debug_loc) }\n-  .debug_macinfo  0 : { *(.debug_macinfo) }\n-  /* SGI/MIPS DWARF 2 extensions */\n-  .debug_weaknames 0 : { *(.debug_weaknames) }\n-  .debug_funcnames 0 : { *(.debug_funcnames) }\n-  .debug_typenames 0 : { *(.debug_typenames) }\n-  .debug_varnames  0 : { *(.debug_varnames) }\n-  /DISCARD/ : { *(.comment) *(.pdr) }\n-  /DISCARD/ : { *(.note.GNU-stack) }\n+  /* These are explicitly listed to avoid being merged into .rodata */\n+  .rodata.sceResident : { *(.rodata.sceResident) }\n+  .rodata.sceModuleInfo : { *(.rodata.sceModuleInfo) }\n+  /* Sort NIDs for convenient ordering */\n+  .rodata.sceNid : { *(.rodata.sceNid) *(SORT(.rodata.sceNid.*)) }\n }"}]}