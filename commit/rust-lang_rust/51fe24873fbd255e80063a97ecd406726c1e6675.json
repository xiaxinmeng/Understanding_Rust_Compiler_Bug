{"sha": "51fe24873fbd255e80063a97ecd406726c1e6675", "node_id": "C_kwDOAAsO6NoAKDUxZmUyNDg3M2ZiZDI1NWU4MDA2M2E5N2VjZDQwNjcyNmMxZTY2NzU", "commit": {"author": {"name": "Ayush Singh", "email": "ayushsingh1325@gmail.com", "date": "2022-12-19T09:22:02Z"}, "committer": {"name": "Ayush Singh", "email": "ayushsingh1325@gmail.com", "date": "2022-12-23T10:38:23Z"}, "message": "Use u32 methods instead of manual shifting\n\nSwitch to `to_be_bytes()` and `from_be_bytes()` instead of manual\nshifting\n\nThis was suggested [`here`](https://github.com/rust-lang/rust/pull/105145#discussion_r1051418964)\n\nSigned-off-by: Ayush Singh <ayushsingh1325@gmail.com>", "tree": {"sha": "f44ea7f5642d28b45c2c179b7191725e9b03997b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f44ea7f5642d28b45c2c179b7191725e9b03997b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51fe24873fbd255e80063a97ecd406726c1e6675", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE38wTHvJPLWVvpQTWBc71x4nlWnQFAmOlhScACgkQBc71x4nl\nWnSqwhAAgSjYuOB+4tAlf+CCUIGPQgut4K0SV4NQjqB4BnZpkQEUCNrOx2FYr2/F\nLBYLnV3i7hcVYEGXZstZ/p5w7JHW02GfSZq8EOtT6IDq2BIgro4yLKwCh+Vv73Ct\nar7jRLuAtQTdusrt2VbfAMYewPBY1tS8K+splhqx87lBBVr68Nd8GajAVAC3GzZd\n5q1RU9rNbXSuj6YFiRytBdw8TgPTnpypeVMWJreTlLZOrDZbnV7kIXDOYW1ngFMm\nqK3mArp9yP6eUFvIuXNGixiMqrERlr4+oD98dRfytUpdr/3ummIfbmKK0LfAe4Fn\nAELc256Vv25ZYM3ub4Ot3o6TdBhFV85Rb/snZITS4qFElibl9ij77aqUdvLSB6g8\n36iT4ZtQYCalB1VV/rpT2tBz/VsDm9J0orG9Qy6RC2H94WwKZoG71+qs7BL6McNO\n+hKsEU7uM/b3jCzUDgfvchUtiuzbWTF3vSX2vWcltLObv7znPpGYw5MqctTxw9X9\npw2L/AfUIgYDRWHZmYhaE0RXj0dZBhZtJyBv+0BZajdxyzt8l9/SDsa+iV3y2uM0\nx6aqnCkRjETabF6yFnZFKlXNyLfnhKMBqX5kyHghEvhsrpJDDMBP4oYgEwD6lFlc\nX2bBBqX2iHdX4dcRisdsvz+hL9Nn7PYD3s14dqhuqPRpWzK0WcQ=\n=SSaW\n-----END PGP SIGNATURE-----", "payload": "tree f44ea7f5642d28b45c2c179b7191725e9b03997b\nparent 224fa3907e319405fdabdb06c33f99b896754773\nauthor Ayush Singh <ayushsingh1325@gmail.com> 1671441722 +0530\ncommitter Ayush Singh <ayushsingh1325@gmail.com> 1671791903 +0530\n\nUse u32 methods instead of manual shifting\n\nSwitch to `to_be_bytes()` and `from_be_bytes()` instead of manual\nshifting\n\nThis was suggested [`here`](https://github.com/rust-lang/rust/pull/105145#discussion_r1051418964)\n\nSigned-off-by: Ayush Singh <ayushsingh1325@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51fe24873fbd255e80063a97ecd406726c1e6675", "html_url": "https://github.com/rust-lang/rust/commit/51fe24873fbd255e80063a97ecd406726c1e6675", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51fe24873fbd255e80063a97ecd406726c1e6675/comments", "author": {"login": "Ayush1325", "id": 22546812, "node_id": "MDQ6VXNlcjIyNTQ2ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/22546812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ayush1325", "html_url": "https://github.com/Ayush1325", "followers_url": "https://api.github.com/users/Ayush1325/followers", "following_url": "https://api.github.com/users/Ayush1325/following{/other_user}", "gists_url": "https://api.github.com/users/Ayush1325/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ayush1325/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ayush1325/subscriptions", "organizations_url": "https://api.github.com/users/Ayush1325/orgs", "repos_url": "https://api.github.com/users/Ayush1325/repos", "events_url": "https://api.github.com/users/Ayush1325/events{/privacy}", "received_events_url": "https://api.github.com/users/Ayush1325/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ayush1325", "id": 22546812, "node_id": "MDQ6VXNlcjIyNTQ2ODEy", "avatar_url": "https://avatars.githubusercontent.com/u/22546812?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ayush1325", "html_url": "https://github.com/Ayush1325", "followers_url": "https://api.github.com/users/Ayush1325/followers", "following_url": "https://api.github.com/users/Ayush1325/following{/other_user}", "gists_url": "https://api.github.com/users/Ayush1325/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ayush1325/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ayush1325/subscriptions", "organizations_url": "https://api.github.com/users/Ayush1325/orgs", "repos_url": "https://api.github.com/users/Ayush1325/repos", "events_url": "https://api.github.com/users/Ayush1325/events{/privacy}", "received_events_url": "https://api.github.com/users/Ayush1325/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "224fa3907e319405fdabdb06c33f99b896754773", "url": "https://api.github.com/repos/rust-lang/rust/commits/224fa3907e319405fdabdb06c33f99b896754773", "html_url": "https://github.com/rust-lang/rust/commit/224fa3907e319405fdabdb06c33f99b896754773"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "3d61a0675590c85125eb468ea7360e5bba7958e9", "filename": "src/tools/remote-test-server/src/main.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/51fe24873fbd255e80063a97ecd406726c1e6675/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fe24873fbd255e80063a97ecd406726c1e6675/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fremote-test-server%2Fsrc%2Fmain.rs?ref=51fe24873fbd255e80063a97ecd406726c1e6675", "patch": "@@ -365,13 +365,7 @@ fn my_copy(src: &mut dyn Read, which: u8, dst: &Mutex<dyn Write>) {\n     loop {\n         let n = t!(src.read(&mut b));\n         let mut dst = dst.lock().unwrap();\n-        t!(dst.write_all(&[\n-            which,\n-            (n >> 24) as u8,\n-            (n >> 16) as u8,\n-            (n >> 8) as u8,\n-            (n >> 0) as u8,\n-        ]));\n+        t!(dst.write_all(&create_header(which, n as u32)));\n         if n > 0 {\n             t!(dst.write_all(&b[..n]));\n         } else {\n@@ -383,19 +377,21 @@ fn my_copy(src: &mut dyn Read, which: u8, dst: &Mutex<dyn Write>) {\n fn batch_copy(buf: &[u8], which: u8, dst: &Mutex<dyn Write>) {\n     let n = buf.len();\n     let mut dst = dst.lock().unwrap();\n-    t!(dst.write_all(&[which, (n >> 24) as u8, (n >> 16) as u8, (n >> 8) as u8, (n >> 0) as u8,]));\n+    t!(dst.write_all(&create_header(which, n as u32)));\n     if n > 0 {\n         t!(dst.write_all(buf));\n         // Marking buf finished\n         t!(dst.write_all(&[which, 0, 0, 0, 0,]));\n     }\n }\n \n+const fn create_header(which: u8, n: u32) -> [u8; 5] {\n+    let bytes = n.to_be_bytes();\n+    [which, bytes[0], bytes[1], bytes[2], bytes[3]]\n+}\n+\n fn read_u32(r: &mut dyn Read) -> u32 {\n     let mut len = [0; 4];\n     t!(r.read_exact(&mut len));\n-    ((len[0] as u32) << 24)\n-        | ((len[1] as u32) << 16)\n-        | ((len[2] as u32) << 8)\n-        | ((len[3] as u32) << 0)\n+    u32::from_be_bytes(len)\n }"}]}