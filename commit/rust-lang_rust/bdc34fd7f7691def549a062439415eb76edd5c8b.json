{"sha": "bdc34fd7f7691def549a062439415eb76edd5c8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkYzM0ZmQ3Zjc2OTFkZWY1NDlhMDYyNDM5NDE1ZWI3NmVkZDVjOGI=", "commit": {"author": {"name": "andjo403", "email": "andjo403@users.noreply.github.com", "date": "2018-01-09T21:09:01Z"}, "committer": {"name": "andjo403", "email": "andjo403@users.noreply.github.com", "date": "2018-01-09T21:51:50Z"}, "message": "fix faulty comment", "tree": {"sha": "5184a3a75d9cf75d4b0e113947b4651b13d14928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5184a3a75d9cf75d4b0e113947b4651b13d14928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdc34fd7f7691def549a062439415eb76edd5c8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdc34fd7f7691def549a062439415eb76edd5c8b", "html_url": "https://github.com/rust-lang/rust/commit/bdc34fd7f7691def549a062439415eb76edd5c8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdc34fd7f7691def549a062439415eb76edd5c8b/comments", "author": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "committer": {"login": "andjo403", "id": 844398, "node_id": "MDQ6VXNlcjg0NDM5OA==", "avatar_url": "https://avatars.githubusercontent.com/u/844398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/andjo403", "html_url": "https://github.com/andjo403", "followers_url": "https://api.github.com/users/andjo403/followers", "following_url": "https://api.github.com/users/andjo403/following{/other_user}", "gists_url": "https://api.github.com/users/andjo403/gists{/gist_id}", "starred_url": "https://api.github.com/users/andjo403/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/andjo403/subscriptions", "organizations_url": "https://api.github.com/users/andjo403/orgs", "repos_url": "https://api.github.com/users/andjo403/repos", "events_url": "https://api.github.com/users/andjo403/events{/privacy}", "received_events_url": "https://api.github.com/users/andjo403/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61452e506f0c88861cccaeea4ced3419bdb3cbe0", "url": "https://api.github.com/repos/rust-lang/rust/commits/61452e506f0c88861cccaeea4ced3419bdb3cbe0", "html_url": "https://github.com/rust-lang/rust/commit/61452e506f0c88861cccaeea4ced3419bdb3cbe0"}], "stats": {"total": 13, "additions": 4, "deletions": 9}, "files": [{"sha": "034ed5aeeae6a3c4fb0e33d8dfad100c00513b1a", "filename": "src/librustc_trans/back/write.rs", "status": "modified", "additions": 4, "deletions": 9, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bdc34fd7f7691def549a062439415eb76edd5c8b/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdc34fd7f7691def549a062439415eb76edd5c8b/src%2Flibrustc_trans%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Fwrite.rs?ref=bdc34fd7f7691def549a062439415eb76edd5c8b", "patch": "@@ -1363,15 +1363,10 @@ fn start_executing_work(tcx: TyCtxt,\n     let sess = tcx.sess;\n \n     // First up, convert our jobserver into a helper thread so we can use normal\n-    // mpsc channels to manage our messages and such. Once we've got the helper\n-    // thread then request `n-1` tokens because all of our work items are ready\n-    // to go.\n-    //\n-    // Note that the `n-1` is here because we ourselves have a token (our\n-    // process) and we'll use that token to execute at least one unit of work.\n-    //\n-    // After we've requested all these tokens then we'll, when we can, get\n-    // tokens on `rx` above which will get managed in the main loop below.\n+    // mpsc channels to manage our messages and such.\n+    // After we've requested tokens then we'll, when we can,\n+    // get tokens on `coordinator_receive` which will\n+    // get managed in the main loop below.\n     let coordinator_send2 = coordinator_send.clone();\n     let helper = jobserver.into_helper_thread(move |token| {\n         drop(coordinator_send2.send(Box::new(Message::Token(token))));"}]}