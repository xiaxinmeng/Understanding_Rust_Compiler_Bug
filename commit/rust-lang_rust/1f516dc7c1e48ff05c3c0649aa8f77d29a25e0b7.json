{"sha": "1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNTE2ZGM3YzFlNDhmZjA1YzNjMDY0OWFhOGY3N2QyOWEyNWUwYjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-16T21:38:39Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-01-16T21:38:39Z"}, "message": "Auto merge of #30624 - Ticki:specialization, r=alexcrichton\n\nPart of #30520. Completes #24214", "tree": {"sha": "af67d2cc70a3ea4ab393c3ec0c48a6883078f531", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/af67d2cc70a3ea4ab393c3ec0c48a6883078f531"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7", "html_url": "https://github.com/rust-lang/rust/commit/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05aeeb314d0559c2711168cee7655f38ed18511c", "url": "https://api.github.com/repos/rust-lang/rust/commits/05aeeb314d0559c2711168cee7655f38ed18511c", "html_url": "https://github.com/rust-lang/rust/commit/05aeeb314d0559c2711168cee7655f38ed18511c"}, {"sha": "d026977f25e4626e1219395f173a14d40f81de3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d026977f25e4626e1219395f173a14d40f81de3b", "html_url": "https://github.com/rust-lang/rust/commit/d026977f25e4626e1219395f173a14d40f81de3b"}], "stats": {"total": 85, "additions": 85, "deletions": 0}, "files": [{"sha": "0c3807d8ca0b5420389cd838edd6fe959c575bf1", "filename": "src/libcore/char.rs", "status": "modified", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7", "patch": "@@ -537,4 +537,49 @@ impl Iterator for EscapeDefault {\n             EscapeDefaultState::Done => (0, Some(0)),\n         }\n     }\n+\n+    fn count(self) -> usize {\n+        match self.state {\n+            EscapeDefaultState::Char(_) => 1,\n+            EscapeDefaultState::Unicode(iter) => iter.count(),\n+            EscapeDefaultState::Done => 0,\n+            EscapeDefaultState::Backslash(_) => 2,\n+        }\n+    }\n+\n+    fn nth(&mut self, n: usize) -> Option<char> {\n+        match self.state {\n+            EscapeDefaultState::Backslash(c) if n == 0 => {\n+                self.state = EscapeDefaultState::Char(c);\n+                Some('\\\\')\n+            },\n+            EscapeDefaultState::Backslash(c) if n == 1 => {\n+                self.state = EscapeDefaultState::Done;\n+                Some(c)\n+            },\n+            EscapeDefaultState::Backslash(_) => {\n+                self.state = EscapeDefaultState::Done;\n+                None\n+            },\n+            EscapeDefaultState::Char(c) => {\n+                self.state = EscapeDefaultState::Done;\n+\n+                if n == 0 {\n+                    Some(c)\n+                } else {\n+                    None\n+                }\n+            },\n+            EscapeDefaultState::Done => return None,\n+            EscapeDefaultState::Unicode(ref mut i) => return i.nth(n),\n+        }\n+    }\n+\n+    fn last(self) -> Option<char> {\n+        match self.state {\n+            EscapeDefaultState::Unicode(iter) => iter.last(),\n+            EscapeDefaultState::Done => None,\n+            EscapeDefaultState::Backslash(c) | EscapeDefaultState::Char(c) => Some(c),\n+        }\n+    }\n }"}, {"sha": "c1f3ea42ef4f768d9b21e968e7fec2181f9eefd5", "filename": "src/libcoretest/char.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7/src%2Flibcoretest%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7/src%2Flibcoretest%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fchar.rs?ref=1f516dc7c1e48ff05c3c0649aa8f77d29a25e0b7", "patch": "@@ -216,3 +216,43 @@ fn test_decode_utf16() {\n     check(&[0xD800, 0x41, 0x42], &[Err(0xD800), Ok('A'), Ok('B')]);\n     check(&[0xD800, 0], &[Err(0xD800), Ok('\\0')]);\n }\n+\n+#[test]\n+fn ed_iterator_specializations() {\n+    // Check counting\n+    assert_eq!('\\n'.escape_default().count(), 2);\n+    assert_eq!('c'.escape_default().count(), 1);\n+    assert_eq!(' '.escape_default().count(), 1);\n+    assert_eq!('\\\\'.escape_default().count(), 2);\n+    assert_eq!('\\''.escape_default().count(), 2);\n+\n+    // Check nth\n+\n+    // Check that OoB is handled correctly\n+    assert_eq!('\\n'.escape_default().nth(2), None);\n+    assert_eq!('c'.escape_default().nth(1), None);\n+    assert_eq!(' '.escape_default().nth(1), None);\n+    assert_eq!('\\\\'.escape_default().nth(2), None);\n+    assert_eq!('\\''.escape_default().nth(2), None);\n+\n+    // Check the first char\n+    assert_eq!('\\n'.escape_default().nth(0), Some('\\\\'));\n+    assert_eq!('c'.escape_default().nth(0), Some('c'));\n+    assert_eq!(' '.escape_default().nth(0), Some(' '));\n+    assert_eq!('\\\\'.escape_default().nth(0), Some('\\\\'));\n+    assert_eq!('\\''.escape_default().nth(0), Some('\\\\'));\n+\n+    // Check the second char\n+    assert_eq!('\\n'.escape_default().nth(1), Some('n'));\n+    assert_eq!('\\\\'.escape_default().nth(1), Some('\\\\'));\n+    assert_eq!('\\''.escape_default().nth(1), Some('\\''));\n+\n+    // Check the last char\n+    assert_eq!('\\n'.escape_default().last(), Some('n'));\n+    assert_eq!('c'.escape_default().last(), Some('c'));\n+    assert_eq!(' '.escape_default().last(), Some(' '));\n+    assert_eq!('\\\\'.escape_default().last(), Some('\\\\'));\n+    assert_eq!('\\''.escape_default().last(), Some('\\''));\n+}\n+\n+"}]}