{"sha": "2f75b4aaa64fb8bfb9635a879c1af52a5d68f662", "node_id": "C_kwDOAAsO6NoAKDJmNzViNGFhYTY0ZmI4YmZiOTYzNWE4NzljMWFmNTJhNWQ2OGY2NjI", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-05-11T13:36:54Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-05-11T13:40:52Z"}, "message": "HandleOrNull can hold null, and HandleOrInvalid can hold INVALID_HANDLE_VALUE.", "tree": {"sha": "3dec3242abce79e3e2c3b5df666e4baa80697bff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3dec3242abce79e3e2c3b5df666e4baa80697bff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f75b4aaa64fb8bfb9635a879c1af52a5d68f662", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f75b4aaa64fb8bfb9635a879c1af52a5d68f662", "html_url": "https://github.com/rust-lang/rust/commit/2f75b4aaa64fb8bfb9635a879c1af52a5d68f662", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f75b4aaa64fb8bfb9635a879c1af52a5d68f662/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a39e5ad36419c2b257a91705ac1337f18a5e08f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a39e5ad36419c2b257a91705ac1337f18a5e08f", "html_url": "https://github.com/rust-lang/rust/commit/0a39e5ad36419c2b257a91705ac1337f18a5e08f"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "81ae1539acb65b18d0a683ec37b2b094e933ee48", "filename": "library/std/src/os/windows/io/handle.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2f75b4aaa64fb8bfb9635a879c1af52a5d68f662/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f75b4aaa64fb8bfb9635a879c1af52a5d68f662/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Fio%2Fhandle.rs?ref=2f75b4aaa64fb8bfb9635a879c1af52a5d68f662", "patch": "@@ -77,9 +77,9 @@ pub struct OwnedHandle {\n /// `NULL`. This ensures that such FFI calls cannot start using the handle without\n /// checking for `NULL` first.\n ///\n-/// This type may hold any handle value that [`OwnedHandle`] may hold, except `NULL`. It may\n-/// hold `-1`, even though `-1` has the same value as `INVALID_HANDLE_VALUE`, because in\n-/// `HandleOrNull`, `-1` is interpreted to mean the current process handle.\n+/// This type may hold any handle value that [`OwnedHandle`] may hold. As with `OwnedHandle`, when\n+/// it holds `-1`, that value is interpreted as the current process handle, and not\n+/// `INVALID_HANDLE_VALUE`.\n ///\n /// If this holds a non-null handle, it will close the handle on drop.\n #[repr(transparent)]\n@@ -97,12 +97,8 @@ pub struct HandleOrNull(OwnedHandle);\n /// `INVALID_HANDLE_VALUE`. This ensures that such FFI calls cannot start using the handle without\n /// checking for `INVALID_HANDLE_VALUE` first.\n ///\n-/// This type may hold any handle value that [`OwnedHandle`] may hold, except `-1`. It must not\n-/// hold `-1`, because `-1` in `HandleOrInvalid` is interpreted to mean `INVALID_HANDLE_VALUE`.\n-///\n-/// This type may hold `NULL`, because APIs that use `INVALID_HANDLE_VALUE` as their sentry value\n-/// may return `NULL` under `windows_subsystem = \"windows\"` or other situations where I/O devices\n-/// are detached.\n+/// This type may hold any handle value that [`OwnedHandle`] may hold, except that when it holds\n+/// `-1`, that value is interpreted to mean `INVALID_HANDLE_VALUE`.\n ///\n /// If holds a handle other than `INVALID_HANDLE_VALUE`, it will close the handle on drop.\n #[repr(transparent)]"}]}