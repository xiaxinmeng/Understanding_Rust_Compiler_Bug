{"sha": "ec0a0ca3f496746c188373bf2530559ec9973c19", "node_id": "C_kwDOAAsO6NoAKGVjMGEwY2EzZjQ5Njc0NmMxODgzNzNiZjI1MzA1NTllYzk5NzNjMTk", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-21T09:40:41Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-21T11:00:26Z"}, "message": "don't check for the leak_check twice", "tree": {"sha": "550d2f3fbc396bc41c8c2da3a4b4160a8cdd6b31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/550d2f3fbc396bc41c8c2da3a4b4160a8cdd6b31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec0a0ca3f496746c188373bf2530559ec9973c19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec0a0ca3f496746c188373bf2530559ec9973c19", "html_url": "https://github.com/rust-lang/rust/commit/ec0a0ca3f496746c188373bf2530559ec9973c19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec0a0ca3f496746c188373bf2530559ec9973c19/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e95c0b7fe5d836db3911c7a83e9afbed84c39f", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e95c0b7fe5d836db3911c7a83e9afbed84c39f", "html_url": "https://github.com/rust-lang/rust/commit/15e95c0b7fe5d836db3911c7a83e9afbed84c39f"}], "stats": {"total": 20, "additions": 6, "deletions": 14}, "files": [{"sha": "8b76f3f7151063de3cd84d48bce7b9e8642f772e", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ec0a0ca3f496746c188373bf2530559ec9973c19/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec0a0ca3f496746c188373bf2530559ec9973c19/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=ec0a0ca3f496746c188373bf2530559ec9973c19", "patch": "@@ -160,20 +160,12 @@ fn overlap<'cx, 'tcx>(\n     );\n \n     selcx.infcx().probe_maybe_skip_leak_check(skip_leak_check.is_yes(), |snapshot| {\n-        overlap_within_probe(\n-            selcx,\n-            skip_leak_check,\n-            impl1_def_id,\n-            impl2_def_id,\n-            overlap_mode,\n-            snapshot,\n-        )\n+        overlap_within_probe(selcx, impl1_def_id, impl2_def_id, overlap_mode, snapshot)\n     })\n }\n \n fn overlap_within_probe<'cx, 'tcx>(\n     selcx: &mut SelectionContext<'cx, 'tcx>,\n-    skip_leak_check: SkipLeakCheck,\n     impl1_def_id: DefId,\n     impl2_def_id: DefId,\n     overlap_mode: OverlapMode,\n@@ -207,11 +199,11 @@ fn overlap_within_probe<'cx, 'tcx>(\n         }\n     }\n \n-    if !skip_leak_check.is_yes() {\n-        if infcx.leak_check(true, snapshot).is_err() {\n-            debug!(\"overlap: leak check failed\");\n-            return None;\n-        }\n+    // We disable the leak when when creating the `snapshot` by using\n+    // `infcx.probe_maybe_disable_leak_check`.\n+    if infcx.leak_check(true, snapshot).is_err() {\n+        debug!(\"overlap: leak check failed\");\n+        return None;\n     }\n \n     let intercrate_ambiguity_causes = selcx.take_intercrate_ambiguity_causes();"}]}