{"sha": "62aea8c9134bcd66fe319010af2f9b9f39c3c887", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYWVhOGM5MTM0YmNkNjZmZTMxOTAxMGFmMmY5YjlmMzljM2M4ODc=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-21T19:11:36Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-08-21T19:11:36Z"}, "message": "Address review comments", "tree": {"sha": "9e75990faa83da184c15b9cd1a0406776e9ccfb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9e75990faa83da184c15b9cd1a0406776e9ccfb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62aea8c9134bcd66fe319010af2f9b9f39c3c887", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmEhT+0ACgkQtAh+UQ6Y\nsWTPlQ/6A8hQe1y8ytAlsx6pBs0ZHtxMzB0VyaJbuM+67g0U9sVGQDywIfMUHbdv\n27NGGPVy9W6sgi43s7NG4HYLFTreHZG+az8MqYNrp8K24Wpzoe9GojQkzjRQAo6A\n6AyGd3m6GIsfzCrSn5eq3ZcPUVKTUyhEox2jDChRbNw35ToSf9WSOM5pD/33ysra\nmC+5sASe2hQaujvjfaKCsy8acrJ6yKnVHWmDX/HSlHK80oXJ7bkvveN4z2OE9F8p\nwBtGuqqbCTNFZMIcmhYjRLJpOkXFLtYXJcPXPVWzpjR1dzT87WddBG9egSZbWFCQ\njTTOuDB170Ovr675aEBjfSeTjXQdOwTiepuNMlQKCTb6e5OImU0MDr4sQs8PvzDA\nfAvxr/oiTOOB9NEYyJh1alU7DORJqo4lAo+xShHYms7fodhmBQR0oFWUyXgIqj09\nvf654aScbbzC4a/kAL9s4QnYxuYmxXkpsAqRlQzjjy+8kOsomc8cMm7XpCAS6Ljq\nq15X1o3Zt75Zz46tFH52vkNrIAhtT1yI1EM2+6Znmhe+ylG1V08L2bPSGaFzz2rz\niMimGgn4kZulmG+CwY1xH0xrl/yheLZQmBrhcXAO2fiucsVuZ6sfgrbpFctQ3pAe\nQL3Z0XxYMOiSqPUpB/AtV5muNTb3CbJJRkFyXWs3pQ65IbYFuTA=\n=QHUq\n-----END PGP SIGNATURE-----", "payload": "tree 9e75990faa83da184c15b9cd1a0406776e9ccfb3\nparent 17aef21b30ad1534ab1372ead72a5cacea673442\nauthor Aaron Hill <aa1ronham@gmail.com> 1629573096 -0500\ncommitter Aaron Hill <aa1ronham@gmail.com> 1629573096 -0500\n\nAddress review comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62aea8c9134bcd66fe319010af2f9b9f39c3c887", "html_url": "https://github.com/rust-lang/rust/commit/62aea8c9134bcd66fe319010af2f9b9f39c3c887", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62aea8c9134bcd66fe319010af2f9b9f39c3c887/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17aef21b30ad1534ab1372ead72a5cacea673442", "url": "https://api.github.com/repos/rust-lang/rust/commits/17aef21b30ad1534ab1372ead72a5cacea673442", "html_url": "https://github.com/rust-lang/rust/commit/17aef21b30ad1534ab1372ead72a5cacea673442"}], "stats": {"total": 1000, "additions": 362, "deletions": 638}, "files": [{"sha": "e2aa54a59b2021401c8ab1f7fb751a34c50c1ac9", "filename": "compiler/rustc_feature/src/builtin_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/62aea8c9134bcd66fe319010af2f9b9f39c3c887/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62aea8c9134bcd66fe319010af2f9b9f39c3c887/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Fbuiltin_attrs.rs?ref=62aea8c9134bcd66fe319010af2f9b9f39c3c887", "patch": "@@ -251,7 +251,7 @@ pub const BUILTIN_ATTRIBUTES: &[BuiltinAttribute] = &[\n     // Modules, prelude, and resolution:\n     ungated!(path, Normal, template!(NameValueStr: \"file\")),\n     ungated!(no_std, CrateLevel, template!(Word)),\n-    ungated!(no_implicit_prelude, CrateLevel, template!(Word)),\n+    ungated!(no_implicit_prelude, Normal, template!(Word)),\n     ungated!(non_exhaustive, Normal, template!(Word)),\n \n     // Runtime"}, {"sha": "d0ddad1c1a33477d12dd1442bc1280cc37ded517", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/62aea8c9134bcd66fe319010af2f9b9f39c3c887/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62aea8c9134bcd66fe319010af2f9b9f39c3c887/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=62aea8c9134bcd66fe319010af2f9b9f39c3c887", "patch": "@@ -130,6 +130,12 @@ impl CheckAttrVisitor<'tcx> {\n                 sym::ignore | sym::should_panic | sym::proc_macro_derive => {\n                     self.check_generic_attr(hir_id, attr, target, &[Target::Fn])\n                 }\n+                sym::automatically_derived => {\n+                    self.check_generic_attr(hir_id, attr, target, &[Target::Impl])\n+                }\n+                sym::no_implicit_prelude => {\n+                    self.check_generic_attr(hir_id, attr, target, &[Target::Mod])\n+                }\n                 _ => {}\n             }\n \n@@ -290,7 +296,6 @@ impl CheckAttrVisitor<'tcx> {\n                 b.push_str(&(allowed_target.to_string() + \"s\"));\n                 b\n             });\n-            //let supported_names = allowed_targets.iter().fold(String::new(), |msg, t| msg + \", \" + &t.to_string());\n             self.tcx.struct_span_lint_hir(UNUSED_ATTRIBUTES, hir_id, attr.span, |lint| {\n                 lint.build(&format!(\"`#[{name}]` only has an effect on {}\", supported_names))\n                     .emit();"}, {"sha": "97fa775967da4675f3c74e200caa6a6546658dd6", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/62aea8c9134bcd66fe319010af2f9b9f39c3c887/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62aea8c9134bcd66fe319010af2f9b9f39c3c887/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.rs?ref=62aea8c9134bcd66fe319010af2f9b9f39c3c887", "patch": "@@ -275,18 +275,20 @@ mod path {\n     //~^ WARN `#[path]` only has an effect\n }\n \n-// Don't warn on `automatically_derived` - a custom derive\n-// could reasonally annotate anything that it emits with\n-// this attribute\n #[automatically_derived]\n+//~^ WARN `#[automatically_derived]` only has an effect\n mod automatically_derived {\n     mod inner { #![automatically_derived] }\n+    //~^ WARN `#[automatically_derived]\n \n     #[automatically_derived] fn f() { }\n+    //~^ WARN `#[automatically_derived]\n \n     #[automatically_derived] struct S;\n+    //~^ WARN `#[automatically_derived]\n \n     #[automatically_derived] type T = S;\n+    //~^ WARN `#[automatically_derived]\n \n     #[automatically_derived] impl S { }\n }\n@@ -368,22 +370,20 @@ mod ignore {\n }\n \n #[no_implicit_prelude]\n-//~^ WARN crate-level attribute\n mod no_implicit_prelude {\n     mod inner { #![no_implicit_prelude] }\n-    //~^ WARN crate-level attribute\n \n     #[no_implicit_prelude] fn f() { }\n-    //~^ WARN crate-level attribute\n+    //~^ WARN `#[no_implicit_prelude]` only has an effect\n \n     #[no_implicit_prelude] struct S;\n-    //~^ WARN crate-level attribute\n+    //~^ WARN `#[no_implicit_prelude]` only has an effect\n \n     #[no_implicit_prelude] type T = S;\n-    //~^ WARN crate-level attribute\n+    //~^ WARN `#[no_implicit_prelude]` only has an effect\n \n     #[no_implicit_prelude] impl S { }\n-    //~^ WARN crate-level attribute\n+    //~^ WARN `#[no_implicit_prelude]` only has an effect\n }\n \n #[reexport_test_harness_main = \"2900\"]"}, {"sha": "214584f47e9baeeaf883c12e51dcb19a20964968", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 346, "deletions": 627, "changes": 973, "blob_url": "https://github.com/rust-lang/rust/blob/62aea8c9134bcd66fe319010af2f9b9f39c3c887/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/62aea8c9134bcd66fe319010af2f9b9f39c3c887/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=62aea8c9134bcd66fe319010af2f9b9f39c3c887", "patch": "@@ -173,15 +173,15 @@ LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:417:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:412:17\n    |\n LL |     mod inner { #![macro_escape] }\n    |                 ^^^^^^^^^^^^^^^^\n    |\n    = help: try an outer attribute: `#[macro_use]`\n \n warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:414:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:1\n    |\n LL | #[macro_escape]\n    | ^^^^^^^^^^^^^^^\n@@ -200,8 +200,26 @@ warning: use of deprecated attribute `no_start`: no longer used.\n LL | #![no_start]\n    | ^^^^^^^^^^^^ help: remove this attribute\n \n+warning: `#[macro_export]` only has an effect on macro definitions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:1\n+   |\n+LL | #[macro_export]\n+   | ^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:39:9\n+   |\n+LL | #![warn(unused_attributes, unknown_lints)]\n+   |         ^^^^^^^^^^^^^^^^^\n+\n+warning: `#[automatically_derived]` only has an effect on items\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:1\n+   |\n+LL | #[automatically_derived]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^\n+\n warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:297:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:296:1\n    |\n LL |   #[no_mangle]\n    |   ^^^^^^^^^^^^\n@@ -215,15 +233,34 @@ LL | |     }\n LL | | }\n    | |_- not a free function, impl method or static\n    |\n-note: the lint level is defined here\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:39:9\n-   |\n-LL | #![warn(unused_attributes, unknown_lints)]\n-   |         ^^^^^^^^^^^^^^^^^\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n+warning: `#[should_panic]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:336:1\n+   |\n+LL | #[should_panic]\n+   | ^^^^^^^^^^^^^^^\n+\n+warning: `#[ignore]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:354:1\n+   |\n+LL | #[ignore]\n+   | ^^^^^^^^^\n+\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:389:1\n+   |\n+LL | #[reexport_test_harness_main = \"2900\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:429:1\n+   |\n+LL | #[no_std]\n+   | ^^^^^^^^^\n+\n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:476:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:465:1\n    |\n LL |   #[cold]\n    |   ^^^^^^^\n@@ -240,7 +277,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:505:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:494:1\n    |\n LL |   #[link_name = \"1900\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^\n@@ -257,7 +294,7 @@ LL | | }\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:544:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:533:1\n    |\n LL |   #[link_section = \"1800\"]\n    |   ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -273,1015 +310,697 @@ LL | | }\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:61:1\n-   |\n-LL | #![cold]\n-   | ^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:624:1\n    |\n-LL | #![link_name = \"1900\"]\n+LL | #[crate_name = \"0900\"]\n    | ^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1\n-   |\n-LL | #![link_section = \"1800\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:302:17\n-   |\n-LL |     mod inner { #![no_mangle] }\n-   |     ------------^^^^^^^^^^^^^-- not a free function, impl method or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:309:5\n-   |\n-LL |     #[no_mangle] struct S;\n-   |     ^^^^^^^^^^^^ --------- not a free function, impl method or static\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #[crate_type = \"0800\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:314:5\n-   |\n-LL |     #[no_mangle] type T = S;\n-   |     ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:662:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #[feature(x0600)]\n+   | ^^^^^^^^^^^^^^^^^\n \n-warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:319:5\n-   |\n-LL |     #[no_mangle] impl S { }\n-   |     ^^^^^^^^^^^^ ---------- not a free function, impl method or static\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:682:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #[no_main]\n+   | ^^^^^^^^^^\n \n-warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:325:9\n-   |\n-LL |         #[no_mangle] fn foo();\n-   |         ^^^^^^^^^^^^ --------- not a free function, impl method or static\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:714:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #[recursion_limit=\"0200\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: attribute should be applied to a free function, impl method or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:330:9\n-   |\n-LL |         #[no_mangle] fn bar() {}\n-   |         ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:733:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #[type_length_limit=\"0100\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:482:17\n-   |\n-LL |     mod inner { #![cold] }\n-   |     ------------^^^^^^^^-- not a function\n+warning: `#[should_panic]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #![should_panic]\n+   | ^^^^^^^^^^^^^^^^\n \n-warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:489:5\n-   |\n-LL |     #[cold] struct S;\n-   |     ^^^^^^^ --------- not a function\n+warning: `#[ignore]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #![ignore]\n+   | ^^^^^^^^^^\n \n-warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:494:5\n-   |\n-LL |     #[cold] type T = S;\n-   |     ^^^^^^^ ----------- not a function\n+warning: `#[proc_macro_derive]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n    |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+LL | #![proc_macro_derive()]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^\n \n warning: attribute should be applied to a function\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:499:5\n-   |\n-LL |     #[cold] impl S { }\n-   |     ^^^^^^^ ---------- not a function\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n-   |\n-LL |     #[link_name = \"1900\"]\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-...\n-LL |     extern \"C\" { }\n-   |     -------------- not a foreign function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-help: try `#[link(name = \"1900\")]` instead\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:511:5\n-   |\n-LL |     #[link_name = \"1900\"]\n-   |     ^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:518:17\n-   |\n-LL |     mod inner { #![link_name=\"1900\"] }\n-   |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:523:5\n-   |\n-LL |     #[link_name = \"1900\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:528:5\n-   |\n-LL |     #[link_name = \"1900\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:533:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:61:1\n    |\n-LL |     #[link_name = \"1900\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n+LL | #![cold]\n+   | ^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a foreign function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:538:5\n-   |\n-LL |     #[link_name = \"1900\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:550:17\n-   |\n-LL |     mod inner { #![link_section=\"1800\"] }\n-   |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:557:5\n-   |\n-LL |     #[link_section = \"1800\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n-   |\n-   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n-\n-warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:562:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:65:1\n    |\n-LL |     #[link_section = \"1800\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n+LL | #![link_name = \"1900\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: attribute should be applied to a function or static\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:567:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:68:1\n    |\n-LL |     #[link_section = \"1800\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n+LL | #![link_section = \"1800\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:89:12\n-   |\n-LL | #![feature(rust1)]\n-   |            ^^^^^\n-   |\n-   = note: `#[warn(stable_features)]` on by default\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:52:1\n-   |\n-LL | #![should_panic]\n-   | ^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:53:1\n-   |\n-LL | #![ignore]\n-   | ^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:59:1\n-   |\n-LL | #![proc_macro_derive()]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n+warning: `#[macro_use]` only has an effect on `extern crate` and modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:184:5\n    |\n LL |     #[macro_use] fn f() { }\n    |     ^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_use]` only has an effect on `extern crate` and modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:187:5\n    |\n LL |     #[macro_use] struct S;\n    |     ^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_use]` only has an effect on `extern crate` and modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:190:5\n    |\n LL |     #[macro_use] type T = S;\n    |     ^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_use]` only has an effect on `extern crate` and modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:193:5\n    |\n LL |     #[macro_use] impl S { }\n    |     ^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:197:1\n-   |\n-LL | #[macro_export]\n-   | ^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n+warning: `#[macro_export]` only has an effect on macro definitions\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:200:17\n    |\n LL |     mod inner { #![macro_export] }\n    |                 ^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_export]` only has an effect on macro definitions\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:203:5\n    |\n LL |     #[macro_export] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_export]` only has an effect on macro definitions\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:206:5\n    |\n LL |     #[macro_export] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_export]` only has an effect on macro definitions\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:209:5\n    |\n LL |     #[macro_export] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[macro_export]` only has an effect on macro definitions\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:212:5\n    |\n LL |     #[macro_export] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[path]` only has an effect on modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:265:5\n    |\n LL |     #[path = \"3800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[path]` only has an effect on modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:268:5\n    |\n LL |     #[path = \"3800\"]  struct S;\n    |     ^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[path]` only has an effect on modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:271:5\n    |\n LL |     #[path = \"3800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[path]` only has an effect on modules\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:274:5\n    |\n LL |     #[path = \"3800\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:278:1\n-   |\n-LL | #[automatically_derived]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n+warning: `#[automatically_derived]` only has an effect on items\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:281:17\n    |\n LL |     mod inner { #![automatically_derived] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[automatically_derived]` only has an effect on items\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:284:5\n    |\n LL |     #[automatically_derived] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[automatically_derived]` only has an effect on items\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:287:5\n    |\n LL |     #[automatically_derived] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[automatically_derived]` only has an effect on items\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:290:5\n    |\n LL |     #[automatically_derived] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:293:5\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:301:17\n    |\n-LL |     #[automatically_derived] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:337:1\n+LL |     mod inner { #![no_mangle] }\n+   |     ------------^^^^^^^^^^^^^-- not a free function, impl method or static\n    |\n-LL | #[should_panic]\n-   | ^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:340:17\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:308:5\n    |\n-LL |     mod inner { #![should_panic] }\n-   |                 ^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:343:5\n+LL |     #[no_mangle] struct S;\n+   |     ^^^^^^^^^^^^ --------- not a free function, impl method or static\n    |\n-LL |     #[should_panic] fn f() { }\n-   |     ^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:313:5\n+   |\n+LL |     #[no_mangle] type T = S;\n+   |     ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:318:5\n+   |\n+LL |     #[no_mangle] impl S { }\n+   |     ^^^^^^^^^^^^ ---------- not a free function, impl method or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:324:9\n+   |\n+LL |         #[no_mangle] fn foo();\n+   |         ^^^^^^^^^^^^ --------- not a free function, impl method or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+\n+warning: attribute should be applied to a free function, impl method or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:329:9\n+   |\n+LL |         #[no_mangle] fn bar() {}\n+   |         ^^^^^^^^^^^^ ----------- not a free function, impl method or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:346:5\n+warning: `#[should_panic]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:339:17\n+   |\n+LL |     mod inner { #![should_panic] }\n+   |                 ^^^^^^^^^^^^^^^^\n+\n+warning: `#[should_panic]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:344:5\n    |\n LL |     #[should_panic] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:349:5\n+warning: `#[should_panic]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:347:5\n    |\n LL |     #[should_panic] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:352:5\n+warning: `#[should_panic]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:350:5\n    |\n LL |     #[should_panic] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:356:1\n-   |\n-LL | #[ignore]\n-   | ^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:359:17\n+warning: `#[ignore]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:357:17\n    |\n LL |     mod inner { #![ignore] }\n    |                 ^^^^^^^^^^\n \n-warning: unused attribute\n+warning: `#[ignore]` only has an effect on functions\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:362:5\n    |\n-LL |     #[ignore] fn f() { }\n-   |     ^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:5\n-   |\n LL |     #[ignore] struct S;\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:5\n+warning: `#[ignore]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:365:5\n    |\n LL |     #[ignore] type T = S;\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:371:5\n+warning: `#[ignore]` only has an effect on functions\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:368:5\n    |\n LL |     #[ignore] impl S { }\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:375:1\n-   |\n-LL | #[no_implicit_prelude]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:378:17\n-   |\n-LL |     mod inner { #![no_implicit_prelude] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:381:5\n+warning: `#[no_implicit_prelude]` only has an effect on modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:376:5\n    |\n LL |     #[no_implicit_prelude] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:384:5\n+warning: `#[no_implicit_prelude]` only has an effect on modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:379:5\n    |\n LL |     #[no_implicit_prelude] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:387:5\n+warning: `#[no_implicit_prelude]` only has an effect on modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:382:5\n    |\n LL |     #[no_implicit_prelude] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:390:5\n+warning: `#[no_implicit_prelude]` only has an effect on modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:385:5\n    |\n LL |     #[no_implicit_prelude] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:394:1\n-   |\n-LL | #[reexport_test_harness_main = \"2900\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:397:17\n+warning: crate-level attribute should be in the root module\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:392:17\n    |\n LL |     mod inner { #![reexport_test_harness_main=\"2900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:400:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:395:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:403:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:406:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:409:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:404:5\n    |\n LL |     #[reexport_test_harness_main = \"2900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:421:5\n+warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:416:5\n    |\n LL |     #[macro_escape] fn f() { }\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:424:5\n+warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:419:5\n    |\n LL |     #[macro_escape] struct S;\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:427:5\n+warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:422:5\n    |\n LL |     #[macro_escape] type T = S;\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:430:5\n+warning: `#[macro_escape]` only has an effect on `extern crate` and modules\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:425:5\n    |\n LL |     #[macro_escape] impl S { }\n    |     ^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:1\n-   |\n-LL | #[no_std]\n-   | ^^^^^^^^^\n-\n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:434:1\n-   |\n-LL | #[no_std]\n-   | ^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:17\n-   |\n-LL |     mod inner { #![no_std] }\n-   |                 ^^^^^^^^^^\n-\n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:432:17\n    |\n LL |     mod inner { #![no_std] }\n    |                 ^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n-   |\n-LL |     #[no_std] fn f() { }\n-   |     ^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:442:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:435:5\n    |\n LL |     #[no_std] fn f() { }\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:5\n-   |\n-LL |     #[no_std] struct S;\n-   |     ^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:446:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:438:5\n    |\n LL |     #[no_std] struct S;\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n-   |\n-LL |     #[no_std] type T = S;\n-   |     ^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:450:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:441:5\n    |\n LL |     #[no_std] type T = S;\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:5\n-   |\n-LL |     #[no_std] impl S { }\n-   |     ^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:454:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:444:5\n    |\n LL |     #[no_std] impl S { }\n    |     ^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:1\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:471:17\n    |\n-LL | #[crate_name = \"0900\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:635:1\n+LL |     mod inner { #![cold] }\n+   |     ------------^^^^^^^^-- not a function\n    |\n-LL | #[crate_name = \"0900\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:17\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:478:5\n    |\n-LL |     mod inner { #![crate_name=\"0900\"] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[cold] struct S;\n+   |     ^^^^^^^ --------- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:17\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:483:5\n    |\n-LL |     mod inner { #![crate_name=\"0900\"] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[cold] type T = S;\n+   |     ^^^^^^^ ----------- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n+warning: attribute should be applied to a function\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:488:5\n    |\n-LL |     #[crate_name = \"0900\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[cold] impl S { }\n+   |     ^^^^^^^ ---------- not a function\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:643:5\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n    |\n-LL |     #[crate_name = \"0900\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_name = \"1900\"]\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     extern \"C\" { }\n+   |     -------------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n+help: try `#[link(name = \"1900\")]` instead\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:500:5\n+   |\n+LL |     #[link_name = \"1900\"]\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:507:17\n    |\n-LL |     #[crate_name = \"0900\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     mod inner { #![link_name=\"1900\"] }\n+   |     ------------^^^^^^^^^^^^^^^^^^^^-- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:647:5\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:512:5\n    |\n-LL |     #[crate_name = \"0900\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_name = \"1900\"] fn f() { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:517:5\n    |\n-LL |     #[crate_name = \"0900\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_name = \"1900\"] struct S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ --------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:651:5\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:522:5\n    |\n-LL |     #[crate_name = \"0900\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_name = \"1900\"] type T = S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^ ----------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n+warning: attribute should be applied to a foreign function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:527:5\n    |\n-LL |     #[crate_name = \"0900\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_name = \"1900\"] impl S { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^ ---------- not a foreign function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:539:17\n    |\n-LL |     #[crate_name = \"0900\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     mod inner { #![link_section=\"1800\"] }\n+   |     ------------^^^^^^^^^^^^^^^^^^^^^^^-- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:1\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:546:5\n    |\n-LL | #[crate_type = \"0800\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_section = \"1800\"] struct S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ --------- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:660:1\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:551:5\n    |\n-LL | #[crate_type = \"0800\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_section = \"1800\"] type T = S;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ----------- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:17\n+warning: attribute should be applied to a function or static\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:556:5\n    |\n-LL |     mod inner { #![crate_type=\"0800\"] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^\n+LL |     #[link_section = \"1800\"] impl S { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ ---------- not a function or static\n+   |\n+   = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:664:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:627:17\n    |\n-LL |     mod inner { #![crate_type=\"0800\"] }\n+LL |     mod inner { #![crate_name=\"0900\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:630:5\n    |\n-LL |     #[crate_type = \"0800\"] fn f() { }\n+LL |     #[crate_name = \"0900\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:633:5\n    |\n-LL |     #[crate_type = \"0800\"] fn f() { }\n+LL |     #[crate_name = \"0900\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:636:5\n    |\n-LL |     #[crate_type = \"0800\"] struct S;\n+LL |     #[crate_name = \"0900\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:672:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:639:5\n    |\n-LL |     #[crate_type = \"0800\"] struct S;\n+LL |     #[crate_name = \"0900\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n+warning: crate-level attribute should be in the root module\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:646:17\n    |\n-LL |     #[crate_type = \"0800\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^\n+LL |     mod inner { #![crate_type=\"0800\"] }\n+   |                 ^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:676:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:649:5\n    |\n-LL |     #[crate_type = \"0800\"] type T = S;\n+LL |     #[crate_type = \"0800\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:652:5\n    |\n-LL |     #[crate_type = \"0800\"] impl S { }\n+LL |     #[crate_type = \"0800\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:680:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:655:5\n    |\n-LL |     #[crate_type = \"0800\"] impl S { }\n+LL |     #[crate_type = \"0800\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:1\n-   |\n-LL | #[feature(x0600)]\n-   | ^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:1\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:658:5\n    |\n-LL | #[feature(x0600)]\n-   | ^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:17\n-   |\n-LL |     mod inner { #![feature(x0600)] }\n-   |                 ^^^^^^^^^^^^^^^^^^\n+LL |     #[crate_type = \"0800\"] impl S { }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^\n \n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:689:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:665:17\n    |\n LL |     mod inner { #![feature(x0600)] }\n    |                 ^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n-   |\n-LL |     #[feature(x0600)] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:693:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:668:5\n    |\n LL |     #[feature(x0600)] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n-   |\n-LL |     #[feature(x0600)] struct S;\n-   |     ^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:671:5\n    |\n LL |     #[feature(x0600)] struct S;\n    |     ^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n-   |\n-LL |     #[feature(x0600)] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:701:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:674:5\n    |\n LL |     #[feature(x0600)] type T = S;\n    |     ^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n-   |\n-LL |     #[feature(x0600)] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:705:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:677:5\n    |\n LL |     #[feature(x0600)] impl S { }\n    |     ^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:1\n-   |\n-LL | #[no_main]\n-   | ^^^^^^^^^^\n-\n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:711:1\n-   |\n-LL | #[no_main]\n-   | ^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:17\n-   |\n-LL |     mod inner { #![no_main] }\n-   |                 ^^^^^^^^^^^\n-\n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:715:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:685:17\n    |\n LL |     mod inner { #![no_main] }\n    |                 ^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n-   |\n-LL |     #[no_main] fn f() { }\n-   |     ^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:719:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:688:5\n    |\n LL |     #[no_main] fn f() { }\n    |     ^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n-   |\n-LL |     #[no_main] struct S;\n-   |     ^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:691:5\n    |\n LL |     #[no_main] struct S;\n    |     ^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n-   |\n-LL |     #[no_main] type T = S;\n-   |     ^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:727:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:694:5\n    |\n LL |     #[no_main] type T = S;\n    |     ^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:731:5\n-   |\n-LL |     #[no_main] impl S { }\n-   |     ^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:731:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:697:5\n    |\n LL |     #[no_main] impl S { }\n    |     ^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:1\n-   |\n-LL | #[recursion_limit=\"0200\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:749:1\n-   |\n-LL | #[recursion_limit=\"0200\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:17\n-   |\n-LL |     mod inner { #![recursion_limit=\"0200\"] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:753:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:717:17\n    |\n LL |     mod inner { #![recursion_limit=\"0200\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n-   |\n-LL |     #[recursion_limit=\"0200\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:757:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:720:5\n    |\n LL |     #[recursion_limit=\"0200\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n-   |\n-LL |     #[recursion_limit=\"0200\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:761:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:723:5\n    |\n LL |     #[recursion_limit=\"0200\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n-   |\n-LL |     #[recursion_limit=\"0200\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:765:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:726:5\n    |\n LL |     #[recursion_limit=\"0200\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n-   |\n-LL |     #[recursion_limit=\"0200\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:769:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:729:5\n    |\n LL |     #[recursion_limit=\"0200\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:1\n-   |\n-LL | #[type_length_limit=\"0100\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:774:1\n-   |\n-LL | #[type_length_limit=\"0100\"]\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:17\n-   |\n-LL |     mod inner { #![type_length_limit=\"0100\"] }\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be in the root module\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:778:17\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:736:17\n    |\n LL |     mod inner { #![type_length_limit=\"0100\"] }\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n-   |\n-LL |     #[type_length_limit=\"0100\"] fn f() { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:782:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:739:5\n    |\n LL |     #[type_length_limit=\"0100\"] fn f() { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5\n-   |\n-LL |     #[type_length_limit=\"0100\"] struct S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:786:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:742:5\n    |\n LL |     #[type_length_limit=\"0100\"] struct S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n-   |\n-LL |     #[type_length_limit=\"0100\"] type T = S;\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n-\n warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:790:5\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:745:5\n    |\n LL |     #[type_length_limit=\"0100\"] type T = S;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: unused attribute\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:794:5\n+warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:748:5\n    |\n LL |     #[type_length_limit=\"0100\"] impl S { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-warning: crate-level attribute should be an inner attribute: add an exclamation mark: `#![foo]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:794:5\n+warning: the feature `rust1` has been stable since 1.0.0 and no longer requires an attribute to enable\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:89:12\n    |\n-LL |     #[type_length_limit=\"0100\"] impl S { }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+LL | #![feature(rust1)]\n+   |            ^^^^^\n+   |\n+   = note: `#[warn(stable_features)]` on by default\n \n-warning: 195 warnings emitted\n+warning: 148 warnings emitted\n "}]}