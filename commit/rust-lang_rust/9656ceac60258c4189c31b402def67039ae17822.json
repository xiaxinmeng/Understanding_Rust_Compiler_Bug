{"sha": "9656ceac60258c4189c31b402def67039ae17822", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2NTZjZWFjNjAyNThjNDE4OWMzMWI0MDJkZWY2NzAzOWFlMTc4MjI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-07T01:19:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-12-07T06:35:42Z"}, "message": "rt: Put 16 guard bytes at the end of the stack", "tree": {"sha": "6cf5ebf7665d5bdcbaac271c0c747fd05bc90389", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6cf5ebf7665d5bdcbaac271c0c747fd05bc90389"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9656ceac60258c4189c31b402def67039ae17822", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9656ceac60258c4189c31b402def67039ae17822", "html_url": "https://github.com/rust-lang/rust/commit/9656ceac60258c4189c31b402def67039ae17822", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9656ceac60258c4189c31b402def67039ae17822/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762", "html_url": "https://github.com/rust-lang/rust/commit/5d1a1dc4203f8ae77e2e9c5cba393887f0b7d762"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "bdc2f7ff7ce56e7b5dc6c3d4a4061841d5104b23", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9656ceac60258c4189c31b402def67039ae17822/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/9656ceac60258c4189c31b402def67039ae17822/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=9656ceac60258c4189c31b402def67039ae17822", "patch": "@@ -14,15 +14,22 @@\n \n #include \"globals.h\"\n \n+// Each stack gets some guard bytes that valgrind will verify we don't touch\n+#ifndef NVALGRIND\n+#define STACK_NOACCESS_SIZE 16\n+#else\n+#define STACK_NOACCESS_SIZE 0\n+#endif\n+\n // The amount of extra space at the end of each stack segment, available\n // to the rt, compiler and dynamic linker for running small functions\n // FIXME: We want this to be 128 but need to slim the red zone calls down\n #ifdef __i386__\n-#define RED_ZONE_SIZE 65536\n+#define RED_ZONE_SIZE (65536 + STACK_NOACCESS_SIZE)\n #endif\n \n #ifdef __x86_64__\n-#define RED_ZONE_SIZE 65536\n+#define RED_ZONE_SIZE (65536 + STACK_NOACCESS_SIZE)\n #endif\n \n // Stack size\n@@ -56,6 +63,9 @@ new_stk(rust_scheduler *sched, rust_task *task, size_t minsz)\n     stk->valgrind_id =\n         VALGRIND_STACK_REGISTER(&stk->data[0],\n                                 &stk->data[minsz + RED_ZONE_SIZE]);\n+#ifndef NVALGRIND\n+    VALGRIND_MAKE_MEM_NOACCESS(stk->data, STACK_NOACCESS_SIZE);\n+#endif\n     task->stk = stk;\n     return stk;\n }\n@@ -67,6 +77,9 @@ del_stk(rust_task *task, stk_seg *stk)\n \n     task->stk = stk->next;\n \n+#ifndef NVALGRIND\n+    VALGRIND_MAKE_MEM_DEFINED(stk->data, STACK_NOACCESS_SIZE);\n+#endif\n     VALGRIND_STACK_DEREGISTER(stk->valgrind_id);\n     LOGPTR(task->sched, \"freeing stk segment\", (uintptr_t)stk);\n     task->free(stk);"}]}