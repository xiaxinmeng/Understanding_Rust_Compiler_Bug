{"sha": "503d50b94cb7864d126131a538913f8ab83bd6bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwM2Q1MGI5NGNiNzg2NGQxMjYxMzFhNTM4OTEzZjhhYjgzYmQ2YmM=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-02-25T21:06:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-25T21:06:20Z"}, "message": "Rollup merge of #82464 - ehuss:unix-command-comment, r=kennytm\n\nUpdate outdated comment in unix Command.\n\nThe big comment in the `Command` struct has been incorrect for some time (at least since #46789 which removed `envp`). Rather than try to remove the allocations, this PR just updates the comment to reflect reality. There is an explanation for the reasoning at https://github.com/rust-lang/rust/pull/31409#issuecomment-182122895, discussing the potential of being able to call `Command::exec` after `libc::fork`.  That can still be done in the future, but I think for now it would be good to just correct the comment.", "tree": {"sha": "2b1c691be9d9c55566e44e1bea2e7a2a932ae215", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b1c691be9d9c55566e44e1bea2e7a2a932ae215"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/503d50b94cb7864d126131a538913f8ab83bd6bc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOBFMCRBK7hj4Ov3rIwAAdHIIAJ+FkXBciLwjOQaMxgoS/ECU\nXcjMj1h4zHzLdJ6S7pCP5iWlcSExDwh6u2mkdJVYcoK87Egl5I80UowNz6YsWtXY\n3/V1tRf9eA6dkrrPC2fAqcvOnIPDJFGJnYqFPL2KwLZJYzg49YVm2tngmicTKI5x\nhSLN03EyI8L1J05rnZ9OyB/RXQwrJ6e/FgyHtrTPN3Bf6oFfvP3WJtLgrvUtpibI\nx+DDGM2UbkGSOtmRMS+f8OCevNPo4YsAoS5rUPpzGZ01FuxTbU+yoHliJ3xUjH+h\n29EzRUg/rkJBnxUP85Iwwt6iwOIeqNmdH6SP4QB4fZkoUxRmFye+Ja3vRNCpYnA=\n=fKyY\n-----END PGP SIGNATURE-----\n", "payload": "tree 2b1c691be9d9c55566e44e1bea2e7a2a932ae215\nparent fe6cbbc1688fdf99f526b6d1a562923c6fdbae0d\nparent 476c6c27e751ced05f5c279770ff8f6a114fe8eb\nauthor Aaron Hill <aa1ronham@gmail.com> 1614287180 -0500\ncommitter GitHub <noreply@github.com> 1614287180 -0500\n\nRollup merge of #82464 - ehuss:unix-command-comment, r=kennytm\n\nUpdate outdated comment in unix Command.\n\nThe big comment in the `Command` struct has been incorrect for some time (at least since #46789 which removed `envp`). Rather than try to remove the allocations, this PR just updates the comment to reflect reality. There is an explanation for the reasoning at https://github.com/rust-lang/rust/pull/31409#issuecomment-182122895, discussing the potential of being able to call `Command::exec` after `libc::fork`.  That can still be done in the future, but I think for now it would be good to just correct the comment.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/503d50b94cb7864d126131a538913f8ab83bd6bc", "html_url": "https://github.com/rust-lang/rust/commit/503d50b94cb7864d126131a538913f8ab83bd6bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/503d50b94cb7864d126131a538913f8ab83bd6bc/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe6cbbc1688fdf99f526b6d1a562923c6fdbae0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe6cbbc1688fdf99f526b6d1a562923c6fdbae0d", "html_url": "https://github.com/rust-lang/rust/commit/fe6cbbc1688fdf99f526b6d1a562923c6fdbae0d"}, {"sha": "476c6c27e751ced05f5c279770ff8f6a114fe8eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/476c6c27e751ced05f5c279770ff8f6a114fe8eb", "html_url": "https://github.com/rust-lang/rust/commit/476c6c27e751ced05f5c279770ff8f6a114fe8eb"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "88a27f27f6628e866cf620e7da76a440af0defc9", "filename": "library/std/src/sys/unix/ext/process.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/503d50b94cb7864d126131a538913f8ab83bd6bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503d50b94cb7864d126131a538913f8ab83bd6bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=503d50b94cb7864d126131a538913f8ab83bd6bc", "patch": "@@ -172,6 +172,8 @@ impl CommandExt for process::Command {\n     }\n \n     fn exec(&mut self) -> io::Error {\n+        // NOTE: This may *not* be safe to call after `libc::fork`, because it\n+        // may allocate. That may be worth fixing at some point in the future.\n         self.as_inner_mut().exec(sys::process::Stdio::Inherit)\n     }\n "}, {"sha": "b9dcc4e4b9e381c13b078e55781c1a7f8946a573", "filename": "library/std/src/sys/unix/process/process_common.rs", "status": "modified", "additions": 5, "deletions": 17, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/503d50b94cb7864d126131a538913f8ab83bd6bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/503d50b94cb7864d126131a538913f8ab83bd6bc/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=503d50b94cb7864d126131a538913f8ab83bd6bc", "patch": "@@ -60,25 +60,13 @@ cfg_if::cfg_if! {\n ////////////////////////////////////////////////////////////////////////////////\n \n pub struct Command {\n-    // Currently we try hard to ensure that the call to `.exec()` doesn't\n-    // actually allocate any memory. While many platforms try to ensure that\n-    // memory allocation works after a fork in a multithreaded process, it's\n-    // been observed to be buggy and somewhat unreliable, so we do our best to\n-    // just not do it at all!\n-    //\n-    // Along those lines, the `argv` and `envp` raw pointers here are exactly\n-    // what's gonna get passed to `execvp`. The `argv` array starts with the\n-    // `program` and ends with a NULL, and the `envp` pointer, if present, is\n-    // also null-terminated.\n-    //\n-    // Right now we don't support removing arguments, so there's no much fancy\n-    // support there, but we support adding and removing environment variables,\n-    // so a side table is used to track where in the `envp` array each key is\n-    // located. Whenever we add a key we update it in place if it's already\n-    // present, and whenever we remove a key we update the locations of all\n-    // other keys.\n     program: CString,\n     args: Vec<CString>,\n+    /// Exactly what will be passed to `execvp`.\n+    ///\n+    /// First element is a pointer to `program`, followed by pointers to\n+    /// `args`, followed by a `null`. Be careful when modifying `program` or\n+    /// `args` to properly update this as well.\n     argv: Argv,\n     env: CommandEnv,\n "}]}