{"sha": "93b774a2a47e813fd01481dab480d4be785c4427", "node_id": "C_kwDOAAsO6NoAKDkzYjc3NGEyYTQ3ZTgxM2ZkMDE0ODFkYWI0ODBkNGJlNzg1YzQ0Mjc", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-12-06T16:54:32Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-12-06T17:26:21Z"}, "message": "Don't set `STARTF_USESTDHANDLES` if none are set", "tree": {"sha": "788ed98c5663b58e219536bf2ca147d01a76f150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/788ed98c5663b58e219536bf2ca147d01a76f150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/93b774a2a47e813fd01481dab480d4be785c4427", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmOPez4ACgkQcTRy8vRW\nJ95PvA/9HXXLpvoqvTVol0TSWyEBgg7/yfOaruN080FGhlx0roXR8BZLM2ath1Oj\nm6baI7QSdnwzGW9K7u3kgTXUdqcimCvLvhdGerBCzMbjyeM1QnAaYoPJgFkyvPUJ\ndK5tjCdLLNaQp7uKanceZrT/JUq9n5hN8iSA661lPPKPmOfWrDxDnyaRDtCER9Ej\nan8+p+wixf+OOjje6NaCRJtctflYL+DVC5pS7odhf1ue0wVN3jjXKI6YzA4hKlUb\nSUyq8/LT4xas1JznCXsxb0sAP/TGu0Az26tOJ54qRLZoaYQj0FCfUedv3hkaNSWx\nnZ70tcw+y5uaQxOntdKKyLXTMv/zOOQEMPi59YYua8C3vSdVR9bDcCm3GWUq6tP6\ndbLNCnqPXaOxdrpQM4xXC7p0W2BQZD89bQlpof6FAnrb2lpM4BbIDAzOuWc7YamE\ncTRosTC7qb8MH6LZ7fT5ciq8LZQqoOjBU++N9E2FLWk5NvSrQSu5eZSoVAQlA+cP\nbuVfHmuxSVw1PVH0S0nFQKNM86nnnOt6PKf9OxJ7HXA2ufTChWVL3pFRaif+TOzX\nbz8IsY2IWr9MqN4TKieToJmeRXmjUWxiGmBNLcGfscymMM5g2jQruSKPaMhlS50N\nYkgO2mEJ6kQSnfr4Jbu9xn9MH67kbVE3Bvs0vUV7HnjNjVPBd0A=\n=3Ut6\n-----END PGP SIGNATURE-----", "payload": "tree 788ed98c5663b58e219536bf2ca147d01a76f150\nparent c43210f67be938e14f8193cc87309a5469ef3705\nauthor Chris Denton <christophersdenton@gmail.com> 1670345672 +0000\ncommitter Chris Denton <christophersdenton@gmail.com> 1670347581 +0000\n\nDon't set `STARTF_USESTDHANDLES` if none are set\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/93b774a2a47e813fd01481dab480d4be785c4427", "html_url": "https://github.com/rust-lang/rust/commit/93b774a2a47e813fd01481dab480d4be785c4427", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/93b774a2a47e813fd01481dab480d4be785c4427/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c43210f67be938e14f8193cc87309a5469ef3705", "url": "https://api.github.com/repos/rust-lang/rust/commits/c43210f67be938e14f8193cc87309a5469ef3705", "html_url": "https://github.com/rust-lang/rust/commit/c43210f67be938e14f8193cc87309a5469ef3705"}], "stats": {"total": 22, "additions": 15, "deletions": 7}, "files": [{"sha": "31e9b34fb9efdf1739cebdd4b100977fb5269af8", "filename": "library/std/src/sys/windows/process.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/93b774a2a47e813fd01481dab480d4be785c4427/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/93b774a2a47e813fd01481dab480d4be785c4427/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fprocess.rs?ref=93b774a2a47e813fd01481dab480d4be785c4427", "patch": "@@ -252,10 +252,6 @@ impl Command {\n     ) -> io::Result<(Process, StdioPipes)> {\n         let maybe_env = self.env.capture_if_changed();\n \n-        let mut si = zeroed_startupinfo();\n-        si.cb = mem::size_of::<c::STARTUPINFO>() as c::DWORD;\n-        si.dwFlags = c::STARTF_USESTDHANDLES;\n-\n         let child_paths = if let Some(env) = maybe_env.as_ref() {\n             env.get(&EnvKey::new(\"PATH\")).map(|s| s.as_os_str())\n         } else {\n@@ -314,9 +310,21 @@ impl Command {\n         let stdin = stdin.to_handle(c::STD_INPUT_HANDLE, &mut pipes.stdin)?;\n         let stdout = stdout.to_handle(c::STD_OUTPUT_HANDLE, &mut pipes.stdout)?;\n         let stderr = stderr.to_handle(c::STD_ERROR_HANDLE, &mut pipes.stderr)?;\n-        si.hStdInput = stdin.as_raw_handle();\n-        si.hStdOutput = stdout.as_raw_handle();\n-        si.hStdError = stderr.as_raw_handle();\n+\n+        let mut si = zeroed_startupinfo();\n+        si.cb = mem::size_of::<c::STARTUPINFO>() as c::DWORD;\n+\n+        // If at least one of stdin, stdout or stderr are set (i.e. are non null)\n+        // then set the `hStd` fields in `STARTUPINFO`.\n+        // Otherwise skip this and allow the OS to apply its default behaviour.\n+        // This provides more consistent behaviour between Win7 and Win8+.\n+        let is_set = |stdio: &Handle| !stdio.as_raw_handle().is_null();\n+        if is_set(&stderr) || is_set(&stdout) || is_set(&stdin) {\n+            si.dwFlags |= c::STARTF_USESTDHANDLES;\n+            si.hStdInput = stdin.as_raw_handle();\n+            si.hStdOutput = stdout.as_raw_handle();\n+            si.hStdError = stderr.as_raw_handle();\n+        }\n \n         unsafe {\n             cvt(c::CreateProcessW("}]}