{"sha": "5b443b204e0a2e5f4f24fb6563ebff497e2565df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNDQzYjIwNGUwYTJlNWY0ZjI0ZmI2NTYzZWJmZjQ5N2UyNTY1ZGY=", "commit": {"author": {"name": "mdinger", "email": "mdinger.bugzilla@gmail.com", "date": "2015-05-23T01:37:11Z"}, "committer": {"name": "mdinger", "email": "mdinger.bugzilla@gmail.com", "date": "2015-05-23T01:37:11Z"}, "message": "Simplify flat_map example", "tree": {"sha": "87f9380da4c24fb2b6ab199dc174852729ac0d6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87f9380da4c24fb2b6ab199dc174852729ac0d6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b443b204e0a2e5f4f24fb6563ebff497e2565df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b443b204e0a2e5f4f24fb6563ebff497e2565df", "html_url": "https://github.com/rust-lang/rust/commit/5b443b204e0a2e5f4f24fb6563ebff497e2565df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b443b204e0a2e5f4f24fb6563ebff497e2565df/comments", "author": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mdinger", "id": 4156987, "node_id": "MDQ6VXNlcjQxNTY5ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/4156987?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mdinger", "html_url": "https://github.com/mdinger", "followers_url": "https://api.github.com/users/mdinger/followers", "following_url": "https://api.github.com/users/mdinger/following{/other_user}", "gists_url": "https://api.github.com/users/mdinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/mdinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mdinger/subscriptions", "organizations_url": "https://api.github.com/users/mdinger/orgs", "repos_url": "https://api.github.com/users/mdinger/repos", "events_url": "https://api.github.com/users/mdinger/events{/privacy}", "received_events_url": "https://api.github.com/users/mdinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3d60aba6c86883c79055c1a3923d4db116b644e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3d60aba6c86883c79055c1a3923d4db116b644e", "html_url": "https://github.com/rust-lang/rust/commit/c3d60aba6c86883c79055c1a3923d4db116b644e"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "892d6d4fb2606d108ee63aabf28a78c9eddc0a63", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5b443b204e0a2e5f4f24fb6563ebff497e2565df/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b443b204e0a2e5f4f24fb6563ebff497e2565df/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=5b443b204e0a2e5f4f24fb6563ebff497e2565df", "patch": "@@ -452,20 +452,19 @@ pub trait Iterator {\n         Scan{iter: self, f: f, state: initial_state}\n     }\n \n-    /// Creates an iterator that maps each element to an iterator,\n-    /// and yields the elements of the produced iterators.\n+    /// Takes a function that maps each element to a new iterator and yields\n+    /// all the elements of the produced iterators.\n+    ///\n+    /// This is useful for unraveling nested structures.\n     ///\n     /// # Examples\n     ///\n     /// ```\n-    /// # #![feature(core)]\n-    /// let xs = [2, 3];\n-    /// let ys = [0, 1, 0, 1, 2];\n-    /// let it = xs.iter().flat_map(|&x| (0..).take(x));\n-    /// // Check that `it` has the same elements as `ys`\n-    /// for (i, x) in it.enumerate() {\n-    ///     assert_eq!(x, ys[i]);\n-    /// }\n+    /// let words = [\"alpha\", \"beta\", \"gamma\"];\n+    /// let merged: String = words.iter()\n+    ///                           .flat_map(|s| s.chars())\n+    ///                           .collect();\n+    /// assert_eq!(merged, \"alphabetagamma\");\n     /// ```\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}