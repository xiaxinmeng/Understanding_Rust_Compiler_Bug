{"sha": "77c96d754e3a5d4b8dd59269b0cb0324350ccbec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3Yzk2ZDc1NGUzYTVkNGI4ZGQ1OTI2OWIwY2IwMzI0MzUwY2NiZWM=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-07-10T05:52:34Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-09-06T16:28:45Z"}, "message": "disallow ident equality checks when contexts are not equal", "tree": {"sha": "de640b571f07e4da4d8b9f2ba985e39b7b70d35e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de640b571f07e4da4d8b9f2ba985e39b7b70d35e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77c96d754e3a5d4b8dd59269b0cb0324350ccbec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77c96d754e3a5d4b8dd59269b0cb0324350ccbec", "html_url": "https://github.com/rust-lang/rust/commit/77c96d754e3a5d4b8dd59269b0cb0324350ccbec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77c96d754e3a5d4b8dd59269b0cb0324350ccbec/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e3b2ab44d9c03fb7aa8e8b94e711c197de3d337", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e3b2ab44d9c03fb7aa8e8b94e711c197de3d337", "html_url": "https://github.com/rust-lang/rust/commit/6e3b2ab44d9c03fb7aa8e8b94e711c197de3d337"}], "stats": {"total": 15, "additions": 14, "deletions": 1}, "files": [{"sha": "8a9bd5192ad817efd7e1731838381929315f10e1", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/77c96d754e3a5d4b8dd59269b0cb0324350ccbec/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77c96d754e3a5d4b8dd59269b0cb0324350ccbec/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=77c96d754e3a5d4b8dd59269b0cb0324350ccbec", "patch": "@@ -24,14 +24,27 @@ use extra::serialize::{Encodable, Decodable, Encoder, Decoder};\n // table) and a SyntaxContext to track renaming and\n // macro expansion per Flatt et al., \"Macros\n // That Work Together\"\n-#[deriving(Clone, Eq, IterBytes, ToStr)]\n+#[deriving(Clone, IterBytes, ToStr)]\n pub struct Ident { name: Name, ctxt: SyntaxContext }\n \n impl Ident {\n     /// Construct an identifier with the given name and an empty context:\n     pub fn new(name: Name) -> Ident { Ident {name: name, ctxt: EMPTY_CTXT}}\n }\n \n+impl Eq for Ident {\n+    fn eq(&self, other: &Ident) -> bool {\n+        if (self.ctxt == other.ctxt) {\n+            self.name == other.name\n+        } else {\n+            fail!(fmt!(\"not allowed to compare these idents: %?, %?\", self, other));\n+        }\n+    }\n+    fn ne(&self, other: &Ident) -> bool {\n+        ! self.eq(other)\n+    }\n+}\n+\n /// A SyntaxContext represents a chain of macro-expandings\n /// and renamings. Each macro expansion corresponds to\n /// a fresh uint"}]}