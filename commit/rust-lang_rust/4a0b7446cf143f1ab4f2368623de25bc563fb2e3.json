{"sha": "4a0b7446cf143f1ab4f2368623de25bc563fb2e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhMGI3NDQ2Y2YxNDNmMWFiNGYyMzY4NjIzZGUyNWJjNTYzZmIyZTM=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-17T18:26:12Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-09-17T18:26:12Z"}, "message": "Move truncation from the main branch", "tree": {"sha": "634a716cc2dcb5bdd6b15b7aa7f54429aabc47cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/634a716cc2dcb5bdd6b15b7aa7f54429aabc47cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a0b7446cf143f1ab4f2368623de25bc563fb2e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a0b7446cf143f1ab4f2368623de25bc563fb2e3", "html_url": "https://github.com/rust-lang/rust/commit/4a0b7446cf143f1ab4f2368623de25bc563fb2e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a0b7446cf143f1ab4f2368623de25bc563fb2e3/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "497de53825728382dad498239b8dd8e871d26c45", "url": "https://api.github.com/repos/rust-lang/rust/commits/497de53825728382dad498239b8dd8e871d26c45", "html_url": "https://github.com/rust-lang/rust/commit/497de53825728382dad498239b8dd8e871d26c45"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "eea23b6de4e6096887b0759d9bd8b1295018f266", "filename": "src/shims/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4a0b7446cf143f1ab4f2368623de25bc563fb2e3/src%2Fshims%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a0b7446cf143f1ab4f2368623de25bc563fb2e3/src%2Fshims%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fmod.rs?ref=4a0b7446cf143f1ab4f2368623de25bc563fb2e3", "patch": "@@ -27,9 +27,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         }\n         // There are some more lang items we want to hook that CTFE does not hook (yet).\n         if this.tcx.lang_items().align_offset_fn() == Some(instance.def.def_id()) {\n-            let n = this.align_offset(args[0], args[1])?;\n             let dest = dest.unwrap();\n-            let n = this.truncate(n, dest.layout);\n+            let n = this.align_offset(args[0], args[1], dest.layout)?;\n             this.write_scalar(Scalar::from_uint(n, dest.layout.size), dest)?;\n             this.goto_block(ret)?;\n             return Ok(None);\n@@ -51,7 +50,8 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n     fn align_offset(\n         &mut self,\n         ptr_op: OpTy<'tcx, Tag>,\n-        align_op: OpTy<'tcx, Tag>\n+        align_op: OpTy<'tcx, Tag>,\n+        layout: ty::layout::TyLayout<'tcx>,\n     ) -> InterpResult<'tcx, u128> {\n         let this = self.eval_context_mut();\n \n@@ -65,7 +65,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         if let Scalar::Ptr(ptr) = ptr_scalar {\n             let cur_align = this.memory().get(ptr.alloc_id)?.align.bytes() as usize;\n             if cur_align < req_align {\n-                return Ok(u128::max_value());\n+                return Ok(this.truncate(u128::max_value(), layout));\n             }\n         }\n "}]}