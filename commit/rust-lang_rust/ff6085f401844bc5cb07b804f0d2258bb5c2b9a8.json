{"sha": "ff6085f401844bc5cb07b804f0d2258bb5c2b9a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmNjA4NWY0MDE4NDRiYzVjYjA3YjgwNGYwZDIyNThiYjVjMmI5YTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-13T19:49:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-14T21:35:14Z"}, "message": "Fix propagation of the HAS_PROJECTION flag in object types. Fixes #20831 some more.", "tree": {"sha": "0c54a885929a34ca75f9b44bab6dfa1c2b3e9249", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c54a885929a34ca75f9b44bab6dfa1c2b3e9249"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8", "html_url": "https://github.com/rust-lang/rust/commit/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b92ec6a78a980b567ec8e6c034e3b37caea81aaa", "url": "https://api.github.com/repos/rust-lang/rust/commits/b92ec6a78a980b567ec8e6c034e3b37caea81aaa", "html_url": "https://github.com/rust-lang/rust/commit/b92ec6a78a980b567ec8e6c034e3b37caea81aaa"}], "stats": {"total": 59, "additions": 58, "deletions": 1}, "files": [{"sha": "fb216a5e99df17415c7c3e6d5601abc366cd4880", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=ff6085f401844bc5cb07b804f0d2258bb5c2b9a8", "patch": "@@ -2604,12 +2604,17 @@ impl FlagComputation {\n \n             &ty_projection(ref data) => {\n                 self.add_flags(HAS_PROJECTION);\n-                self.add_substs(data.trait_ref.substs);\n+                self.add_projection_ty(data);\n             }\n \n             &ty_trait(box TyTrait { ref principal, ref bounds }) => {\n                 let mut computation = FlagComputation::new();\n                 computation.add_substs(principal.0.substs);\n+                for projection_bound in bounds.projection_bounds.iter() {\n+                    let mut proj_computation = FlagComputation::new();\n+                    proj_computation.add_projection_predicate(&projection_bound.0);\n+                    computation.add_bound_computation(&proj_computation);\n+                }\n                 self.add_bound_computation(&computation);\n \n                 self.add_bounds(bounds);\n@@ -2673,6 +2678,15 @@ impl FlagComputation {\n         }\n     }\n \n+    fn add_projection_predicate(&mut self, projection_predicate: &ProjectionPredicate) {\n+        self.add_projection_ty(&projection_predicate.projection_ty);\n+        self.add_ty(projection_predicate.ty);\n+    }\n+\n+    fn add_projection_ty(&mut self, projection_ty: &ProjectionTy) {\n+        self.add_substs(projection_ty.trait_ref.substs);\n+    }\n+\n     fn add_substs(&mut self, substs: &Substs) {\n         self.add_tys(substs.types.as_slice());\n         match substs.regions {"}, {"sha": "44dd49b72976edc3aafd4b3d859844ef903f32ee", "filename": "src/test/run-pass/associated-types-projection-in-object-type.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8/src%2Ftest%2Frun-pass%2Fassociated-types-projection-in-object-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff6085f401844bc5cb07b804f0d2258bb5c2b9a8/src%2Ftest%2Frun-pass%2Fassociated-types-projection-in-object-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types-projection-in-object-type.rs?ref=ff6085f401844bc5cb07b804f0d2258bb5c2b9a8", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Corrected regression test for #20831. The original did not compile.\n+// When fixed, it revealed another problem concerning projections that\n+// appear in associated type bindings in object types, which were not\n+// being properly flagged.\n+\n+use std::ops::{Shl, Shr};\n+use std::cell::RefCell;\n+\n+pub trait Subscriber {\n+    type Input;\n+}\n+\n+pub trait Publisher<'a> {\n+    type Output;\n+    fn subscribe(&mut self, Box<Subscriber<Input=Self::Output> + 'a>);\n+}\n+\n+pub trait Processor<'a> : Subscriber + Publisher<'a> { }\n+\n+impl<'a, P> Processor<'a> for P where P : Subscriber + Publisher<'a> { }\n+\n+struct MyStruct<'a> {\n+    sub: Box<Subscriber<Input=u64> + 'a>\n+}\n+\n+impl<'a> Publisher<'a> for MyStruct<'a> {\n+    type Output = u64;\n+    fn subscribe(&mut self, t : Box<Subscriber<Input=u64> + 'a>) {\n+        self.sub = t;\n+    }\n+}\n+\n+fn main() {}"}]}