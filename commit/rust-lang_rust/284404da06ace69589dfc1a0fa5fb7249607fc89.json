{"sha": "284404da06ace69589dfc1a0fa5fb7249607fc89", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NDQwNGRhMDZhY2U2OTU4OWRmYzFhMGZhNWZiNzI0OTYwN2ZjODk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-04-06T10:35:25Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-04-06T10:35:25Z"}, "message": "Fix undef mask initialization and test undef reads.", "tree": {"sha": "c37ef59a3d4500c26f875cbe864402b1d1cbcd05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c37ef59a3d4500c26f875cbe864402b1d1cbcd05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/284404da06ace69589dfc1a0fa5fb7249607fc89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/284404da06ace69589dfc1a0fa5fb7249607fc89", "html_url": "https://github.com/rust-lang/rust/commit/284404da06ace69589dfc1a0fa5fb7249607fc89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/284404da06ace69589dfc1a0fa5fb7249607fc89/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfe36d63e53e8778b8778ce0812a13405fd2df75", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfe36d63e53e8778b8778ce0812a13405fd2df75", "html_url": "https://github.com/rust-lang/rust/commit/cfe36d63e53e8778b8778ce0812a13405fd2df75"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "84cd95409b8b935f22a7be96bd1adf0ee15b3e1a", "filename": "src/memory.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/284404da06ace69589dfc1a0fa5fb7249607fc89/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/284404da06ace69589dfc1a0fa5fb7249607fc89/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=284404da06ace69589dfc1a0fa5fb7249607fc89", "patch": "@@ -106,7 +106,7 @@ impl Memory {\n         let alloc = Allocation {\n             bytes: vec![0; size].into_boxed_slice(),\n             relocations: BTreeMap::new(),\n-            undef_mask: UndefMask::new(),\n+            undef_mask: UndefMask::new(size),\n         };\n         self.alloc_map.insert(self.next_id, alloc);\n         self.next_id += 1;\n@@ -426,11 +426,13 @@ pub struct UndefMask {\n }\n \n impl UndefMask {\n-    fn new() -> Self {\n-        UndefMask {\n+    fn new(size: usize) -> Self {\n+        let mut m = UndefMask {\n             blocks: vec![],\n             len: 0,\n-        }\n+        };\n+        m.grow(size, false);\n+        m\n     }\n \n     /// Check whether the range `start..end` (end-exclusive) is entirely defined."}, {"sha": "c6e6e16b889fc72e2abc8ddacdc95a2a226e991c", "filename": "test/errors.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/284404da06ace69589dfc1a0fa5fb7249607fc89/test%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/284404da06ace69589dfc1a0fa5fb7249607fc89/test%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test%2Ferrors.rs?ref=284404da06ace69589dfc1a0fa5fb7249607fc89", "patch": "@@ -23,3 +23,10 @@ fn invalid_bools_are_rejected() -> u8 {\n     let b = unsafe { std::mem::transmute::<u8, bool>(2) };\n     if b { 1 } else { 2 }\n }\n+\n+#[miri_run]\n+fn undefined_byte_reads_are_rejected() -> u8 {\n+    let v: Vec<u8> = Vec::with_capacity(10);\n+    let undef = unsafe { *v.get_unchecked(5) };\n+    undef + 1\n+}"}]}