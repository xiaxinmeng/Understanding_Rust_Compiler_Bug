{"sha": "91f9806208834de3fb5f62712356b0d84ec388fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxZjk4MDYyMDg4MzRkZTNmYjVmNjI3MTIzNTZiMGQ4NGVjMzg4ZmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-22T18:00:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-22T18:00:22Z"}, "message": "Auto merge of #88166 - BoxyUwU:const-equate-canon, r=lcnr\n\ncanonicalize consts before calling try_unify_abstract_consts query\n\nFixes #88022\nFixes #86953\nFixes #77708\nFixes #82034\nFixes #85031\n\nthese ICEs were all caused by calling the `try_unify_abstract_consts` query with inference vars in substs\n\nr? `@lcnr`", "tree": {"sha": "a8e3112c95c8eeb5f2ae8623fec436b12e99c973", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8e3112c95c8eeb5f2ae8623fec436b12e99c973"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91f9806208834de3fb5f62712356b0d84ec388fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91f9806208834de3fb5f62712356b0d84ec388fd", "html_url": "https://github.com/rust-lang/rust/commit/91f9806208834de3fb5f62712356b0d84ec388fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91f9806208834de3fb5f62712356b0d84ec388fd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7481e6d1a415853a96dcec11a052caaa02859b5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7481e6d1a415853a96dcec11a052caaa02859b5a", "html_url": "https://github.com/rust-lang/rust/commit/7481e6d1a415853a96dcec11a052caaa02859b5a"}, {"sha": "c2b61fbafe53d655ec010471d8f4a3bf34c724bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2b61fbafe53d655ec010471d8f4a3bf34c724bd", "html_url": "https://github.com/rust-lang/rust/commit/c2b61fbafe53d655ec010471d8f4a3bf34c724bd"}], "stats": {"total": 230, "additions": 221, "deletions": 9}, "files": [{"sha": "9013bea749a299fb559bc0951dcc2dace2647ae0", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -671,6 +671,22 @@ pub struct CombinedSnapshot<'a, 'tcx> {\n }\n \n impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n+    /// calls `tcx.try_unify_abstract_consts` after\n+    /// canonicalizing the consts.\n+    pub fn try_unify_abstract_consts(\n+        &self,\n+        a: ty::Unevaluated<'tcx>,\n+        b: ty::Unevaluated<'tcx>,\n+    ) -> bool {\n+        let canonical = self.canonicalize_query(\n+            ((a.def, a.substs), (b.def, b.substs)),\n+            &mut OriginalQueryValues::default(),\n+        );\n+        debug!(\"canonical consts: {:?}\", &canonical.value);\n+\n+        self.tcx.try_unify_abstract_consts(canonical.value)\n+    }\n+\n     pub fn is_in_snapshot(&self) -> bool {\n         self.in_snapshot.get()\n     }"}, {"sha": "4b94deff825bdd7d7416882f1ec2e0e23c13f44a", "filename": "compiler/rustc_trait_selection/src/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ffulfill.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -578,11 +578,7 @@ impl<'a, 'b, 'tcx> FulfillProcessor<'a, 'b, 'tcx> {\n                         if let (ty::ConstKind::Unevaluated(a), ty::ConstKind::Unevaluated(b)) =\n                             (c1.val, c2.val)\n                         {\n-                            if self\n-                                .selcx\n-                                .tcx()\n-                                .try_unify_abstract_consts(((a.def, a.substs), (b.def, b.substs)))\n-                            {\n+                            if infcx.try_unify_abstract_consts(a, b) {\n                                 return ProcessResult::Changed(vec![]);\n                             }\n                         }"}, {"sha": "c150b22226627250362328685cfae2d6090fd511", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -624,10 +624,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                         if let (ty::ConstKind::Unevaluated(a), ty::ConstKind::Unevaluated(b)) =\n                             (c1.val, c2.val)\n                         {\n-                            if self\n-                                .tcx()\n-                                .try_unify_abstract_consts(((a.def, a.substs), (b.def, b.substs)))\n-                            {\n+                            if self.infcx.try_unify_abstract_consts(a, b) {\n                                 return Ok(EvaluatedToOk);\n                             }\n                         }"}, {"sha": "a6edbb2e9f9968943d9127956bac8eee8523a5b7", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-77708-1.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-1.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,23 @@\n+// revisions: cfail\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features, unused_braces)]\n+\n+trait Delegates<T> {}\n+\n+struct FileCap<const Op: bool> {}\n+\n+fn writes_to_path<C>(cap: &C)\n+where\n+    C: Delegates<FileCap<{ false }>>,\n+{\n+    writes_to_specific_path(&cap);\n+    //~^ error: the trait bound\n+}\n+\n+fn writes_to_specific_path<C>(cap: &C)\n+where\n+    C: Delegates<FileCap<{ false }>>,\n+{\n+}\n+\n+fn main() {}"}, {"sha": "52eeec73b0dd385541095d77849ba467fca01ec0", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-77708-2.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-2.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,18 @@\n+// revisions: rpass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+struct Z;\n+const fn one() -> usize {\n+    1\n+}\n+\n+fn from_a_to_b<T>(source: [u8; one()]) -> T {\n+    todo!()\n+}\n+\n+fn not_main() {\n+    let _: &Z = from_a_to_b([0; 1]);\n+}\n+\n+fn main() {}"}, {"sha": "11cca942dd639a9bc3f0e85aa27e09628a395608", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-77708-3.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-77708-3.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,22 @@\n+// revisions: rpass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+use std::{convert::TryFrom, num::NonZeroUsize};\n+\n+struct A<const N: NonZeroUsize>([u8; N.get()])\n+where\n+    [u8; N.get()]: Sized;\n+\n+impl<'a, const N: NonZeroUsize> TryFrom<&'a [u8]> for A<N>\n+where\n+    [u8; N.get()]: Sized,\n+{\n+    type Error = ();\n+    fn try_from(slice: &'a [u8]) -> Result<A<N>, ()> {\n+        let _x = <&[u8; N.get()] as TryFrom<&[u8]>>::try_from(slice);\n+        unimplemented!();\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "1b769d0a30dced547c29e789a7ab606a21b8f45d", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-82034.rs", "status": "added", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-82034.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-82034.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-82034.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,34 @@\n+// revisions: rpass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+pub trait IsTrue {}\n+pub trait IsFalse {}\n+\n+pub struct Assert<const CHECK: bool> {}\n+\n+impl IsTrue for Assert<true> {}\n+impl IsFalse for Assert<false> {}\n+\n+pub struct SliceConstWriter<'a, const N: usize> {\n+    ptr: &'a mut [u8],\n+}\n+impl<'a, const N: usize> SliceConstWriter<'a, { N }> {\n+    pub fn from_slice(vec: &'a mut [u8]) -> Self {\n+        Self { ptr: vec }\n+    }\n+\n+    pub fn convert<const NN: usize>(mut self) -> SliceConstWriter<'a, { NN }> {\n+        SliceConstWriter { ptr: self.ptr }\n+    }\n+}\n+\n+impl<'a, const N: usize> SliceConstWriter<'a, { N }>\n+where\n+    Assert<{ N >= 2 }>: IsTrue,\n+{\n+    pub fn write_u8(mut self) -> SliceConstWriter<'a, { N - 2 }> {\n+        self.convert()\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "20d4993774de35a3c3b7231794513dab15259cbd", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-85031-1.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-1.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,23 @@\n+// revisions: rpass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+pub struct Ref<'a, const NUM: usize>(&'a i32);\n+\n+impl<'a, const NUM: usize> Ref<'a, NUM> {\n+    pub fn foo<const A: usize>(r: Ref<'a, A>) -> Self\n+    where\n+        ([(); NUM - A], [(); A - NUM]): Sized,\n+    {\n+        Self::bar(r)\n+    }\n+\n+    pub fn bar<const A: usize>(r: Ref<'a, A>) -> Self\n+    where\n+        ([(); NUM - A], [(); A - NUM]): Sized,\n+    {\n+        Self(r.0)\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "be7ad6d1fa0316e9ed7616f1334fa9eed315055f", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-85031-2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-2.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,14 @@\n+// revisions: cfail\n+#![allow(incomplete_features)]\n+#![feature(const_generics, const_evaluatable_checked)]\n+\n+pub struct Ref<'a>(&'a i32);\n+\n+impl<'a> Ref<'a> {\n+    pub fn foo<const A: usize>() -> [(); A - 0] {\n+        Self::foo()\n+        //~^ error: type annotations needed\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "af4f209c9045838365f7d465b7fa5dab62f19840", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-85031-3.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-85031-3.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,25 @@\n+// revisions: rpass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+fn test<const SIZE: usize>() {}\n+\n+trait SomeTrait {\n+    const SIZE: usize;\n+}\n+\n+struct A<'a, T> {\n+    some_ref: &'a str,\n+    _maker: core::marker::PhantomData<T>,\n+}\n+\n+impl<'a, T: SomeTrait> A<'a, T>\n+where\n+    [(); T::SIZE]: ,\n+{\n+    fn call_test() {\n+        test::<{ T::SIZE }>();\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "ba8633696263353a7bddaf9d5c212bce89d6c9af", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-86953.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-86953.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-86953.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-86953.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,16 @@\n+// revisions: rpass\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features)]\n+\n+struct Foo;\n+impl<'a> std::ops::Add<&'a Foo> for Foo\n+where\n+    [(); 0 + 0]: Sized,\n+{\n+    type Output = ();\n+    fn add(self, _: &Foo) -> Self::Output {\n+        loop {}\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "da713631cc1fc998ff0e6016d0caa33768475064", "filename": "src/test/incremental/const-generics/try_unify_abstract_const_regression_tests/issue-88022.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-88022.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91f9806208834de3fb5f62712356b0d84ec388fd/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-88022.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fconst-generics%2Ftry_unify_abstract_const_regression_tests%2Fissue-88022.rs?ref=91f9806208834de3fb5f62712356b0d84ec388fd", "patch": "@@ -0,0 +1,28 @@\n+// revisions: cfail\n+#![feature(const_generics, const_evaluatable_checked)]\n+#![allow(incomplete_features, unused_braces)]\n+\n+struct Buffer<T, const S: usize>\n+where\n+    [(); { S * 2 }]: Default,\n+{\n+    data: [T; { S * 2 }],\n+}\n+\n+struct BufferIter<'a, T, const S: usize>(&'a Buffer<T, S>)\n+where\n+    [(); { S * 2 }]: Default;\n+\n+impl<'a, T, const S: usize> Iterator for BufferIter<'a, T, S> {\n+    //~^ error: the trait bound\n+    //~^^ error: unconstrained generic constant\n+    type Item = &'a T;\n+\n+    fn next(&mut self) -> Option<Self::Item> {\n+        //~^ error: the trait bound\n+        //~^^ error: unconstrained generic constant\n+        None\n+    }\n+}\n+\n+fn main() {}"}]}