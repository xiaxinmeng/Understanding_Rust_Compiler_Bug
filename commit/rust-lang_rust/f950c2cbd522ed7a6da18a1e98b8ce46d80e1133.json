{"sha": "f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5NTBjMmNiZDUyMmVkN2E2ZGExOGExZTk4YjhjZTQ2ZDgwZTExMzM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-10T10:02:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-23T21:50:20Z"}, "message": "use MaybeUninit in core::slice::sort\n\nCode by @japaric, I just split it into individual commits", "tree": {"sha": "1681c0a4b9c9741e461092c04e0087ac40af31bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1681c0a4b9c9741e461092c04e0087ac40af31bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "html_url": "https://github.com/rust-lang/rust/commit/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44c135b6a908ded2d75105648cd0484350505e4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/44c135b6a908ded2d75105648cd0484350505e4e", "html_url": "https://github.com/rust-lang/rust/commit/44c135b6a908ded2d75105648cd0484350505e4e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "affe84fbef91f2e6908385556b1e3b8d0d90c2dd", "filename": "src/libcore/slice/sort.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133/src%2Flibcore%2Fslice%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f950c2cbd522ed7a6da18a1e98b8ce46d80e1133/src%2Flibcore%2Fslice%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fsort.rs?ref=f950c2cbd522ed7a6da18a1e98b8ce46d80e1133", "patch": "@@ -17,7 +17,7 @@\n //! stable sorting implementation.\n \n use cmp;\n-use mem;\n+use mem::{self, MaybeUninit};\n use ptr;\n \n /// When dropped, copies from `src` into `dest`.\n@@ -226,14 +226,14 @@ fn partition_in_blocks<T, F>(v: &mut [T], pivot: &T, is_less: &mut F) -> usize\n     let mut block_l = BLOCK;\n     let mut start_l = ptr::null_mut();\n     let mut end_l = ptr::null_mut();\n-    let mut offsets_l: [u8; BLOCK] = unsafe { mem::uninitialized() };\n+    let mut offsets_l = MaybeUninit::<[u8; BLOCK]>::uninitialized();\n \n     // The current block on the right side (from `r.sub(block_r)` to `r`).\n     let mut r = unsafe { l.add(v.len()) };\n     let mut block_r = BLOCK;\n     let mut start_r = ptr::null_mut();\n     let mut end_r = ptr::null_mut();\n-    let mut offsets_r: [u8; BLOCK] = unsafe { mem::uninitialized() };\n+    let mut offsets_r = MaybeUninit::<[u8; BLOCK]>::uninitialized();\n \n     // FIXME: When we get VLAs, try creating one array of length `min(v.len(), 2 * BLOCK)` rather\n     // than two fixed-size arrays of length `BLOCK`. VLAs might be more cache-efficient.\n@@ -272,8 +272,8 @@ fn partition_in_blocks<T, F>(v: &mut [T], pivot: &T, is_less: &mut F) -> usize\n \n         if start_l == end_l {\n             // Trace `block_l` elements from the left side.\n-            start_l = offsets_l.as_mut_ptr();\n-            end_l = offsets_l.as_mut_ptr();\n+            start_l = offsets_l.as_mut_ptr() as *mut u8;\n+            end_l = offsets_l.as_mut_ptr() as *mut u8;\n             let mut elem = l;\n \n             for i in 0..block_l {\n@@ -288,8 +288,8 @@ fn partition_in_blocks<T, F>(v: &mut [T], pivot: &T, is_less: &mut F) -> usize\n \n         if start_r == end_r {\n             // Trace `block_r` elements from the right side.\n-            start_r = offsets_r.as_mut_ptr();\n-            end_r = offsets_r.as_mut_ptr();\n+            start_r = offsets_r.as_mut_ptr() as *mut u8;\n+            end_r = offsets_r.as_mut_ptr() as *mut u8;\n             let mut elem = r;\n \n             for i in 0..block_r {"}]}