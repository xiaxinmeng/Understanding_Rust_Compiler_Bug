{"sha": "b13b495b918026fc5f3bf059bbde19c832ffe3c0", "node_id": "C_kwDOAAsO6NoAKGIxM2I0OTViOTE4MDI2ZmM1ZjNiZjA1OWJiZGUxOWM4MzJmZmUzYzA", "commit": {"author": {"name": "Zachary S", "email": "zasample18+github@gmail.com", "date": "2022-03-16T19:01:48Z"}, "committer": {"name": "Zachary S", "email": "zasample18+github@gmail.com", "date": "2022-03-16T19:01:48Z"}, "message": "Add test for StructuralEq for std::cmp::Ordering.\n\nAdded test in library/core/tests/cmp.rs that ensures that `const`s of type `Ordering`s can be used in patterns.", "tree": {"sha": "c254f3bbe633fb3d3706f64afb7345005e826e79", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c254f3bbe633fb3d3706f64afb7345005e826e79"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b13b495b918026fc5f3bf059bbde19c832ffe3c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b13b495b918026fc5f3bf059bbde19c832ffe3c0", "html_url": "https://github.com/rust-lang/rust/commit/b13b495b918026fc5f3bf059bbde19c832ffe3c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b13b495b918026fc5f3bf059bbde19c832ffe3c0/comments", "author": {"login": "zachs18", "id": 8355914, "node_id": "MDQ6VXNlcjgzNTU5MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8355914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachs18", "html_url": "https://github.com/zachs18", "followers_url": "https://api.github.com/users/zachs18/followers", "following_url": "https://api.github.com/users/zachs18/following{/other_user}", "gists_url": "https://api.github.com/users/zachs18/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachs18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachs18/subscriptions", "organizations_url": "https://api.github.com/users/zachs18/orgs", "repos_url": "https://api.github.com/users/zachs18/repos", "events_url": "https://api.github.com/users/zachs18/events{/privacy}", "received_events_url": "https://api.github.com/users/zachs18/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zachs18", "id": 8355914, "node_id": "MDQ6VXNlcjgzNTU5MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/8355914?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachs18", "html_url": "https://github.com/zachs18", "followers_url": "https://api.github.com/users/zachs18/followers", "following_url": "https://api.github.com/users/zachs18/following{/other_user}", "gists_url": "https://api.github.com/users/zachs18/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachs18/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachs18/subscriptions", "organizations_url": "https://api.github.com/users/zachs18/orgs", "repos_url": "https://api.github.com/users/zachs18/repos", "events_url": "https://api.github.com/users/zachs18/events{/privacy}", "received_events_url": "https://api.github.com/users/zachs18/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba611d55f39909f4c4da43fe96a275c4746c38d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba611d55f39909f4c4da43fe96a275c4746c38d1", "html_url": "https://github.com/rust-lang/rust/commit/ba611d55f39909f4c4da43fe96a275c4746c38d1"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "8d0e59d5a4972d5a80a95d205628c664b1f66e76", "filename": "library/core/tests/cmp.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b13b495b918026fc5f3bf059bbde19c832ffe3c0/library%2Fcore%2Ftests%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b13b495b918026fc5f3bf059bbde19c832ffe3c0/library%2Fcore%2Ftests%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fcmp.rs?ref=b13b495b918026fc5f3bf059bbde19c832ffe3c0", "patch": "@@ -133,6 +133,19 @@ fn ordering_const() {\n     assert_eq!(THEN, Greater);\n }\n \n+#[test]\n+fn ordering_structural_eq() {\n+    // test that consts of type `Ordering` are usable in patterns\n+\n+    const ORDERING: Ordering = Greater;\n+\n+    const REVERSE: Ordering = ORDERING.reverse();\n+    match Ordering::Less {\n+        REVERSE => {}\n+        _ => unreachable!(),\n+    };\n+}\n+\n #[test]\n fn cmp_default() {\n     // Test default methods in PartialOrd and PartialEq"}]}