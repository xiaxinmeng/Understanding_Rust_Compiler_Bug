{"sha": "4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "node_id": "C_kwDOAAsO6NoAKDRmZTUxMzY1ZDdhNThiMzRhZDBmYjBlOWIwZDI1MjM5MjA3NDNkMWQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-15T08:34:05Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-23T10:04:41Z"}, "message": "Use param_env_reveal_all_normalized in MIR opts.", "tree": {"sha": "0e772e48e97bcb85f0d7d573f51a1497c91e4cfc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e772e48e97bcb85f0d7d573f51a1497c91e4cfc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "html_url": "https://github.com/rust-lang/rust/commit/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7efcf67a3b96c8ff27bd80ce9df9fa84e93eb3a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/7efcf67a3b96c8ff27bd80ce9df9fa84e93eb3a3", "html_url": "https://github.com/rust-lang/rust/commit/7efcf67a3b96c8ff27bd80ce9df9fa84e93eb3a3"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "c0861f99620d1faddf629f93b694d6e565ae3e77", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -323,7 +323,7 @@ impl<'tcx> std::fmt::Debug for ScalarTy<'tcx> {\n \n impl<'a, 'tcx> ConstAnalysis<'a, 'tcx> {\n     pub fn new(tcx: TyCtxt<'tcx>, body: &'a Body<'tcx>, map: Map) -> Self {\n-        let param_env = tcx.param_env(body.source.def_id());\n+        let param_env = tcx.param_env_reveal_all_normalized(body.source.def_id());\n         Self {\n             map,\n             tcx,"}, {"sha": "430a6f6cef5be4cb0c38fb2828fbfe931f3090fc", "filename": "compiler/rustc_mir_transform/src/large_enums.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Flarge_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Flarge_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flarge_enums.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -120,7 +120,7 @@ impl EnumSizeOpt {\n     fn optim<'tcx>(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         let mut alloc_cache = FxHashMap::default();\n         let body_did = body.source.def_id();\n-        let param_env = tcx.param_env(body_did);\n+        let param_env = tcx.param_env_reveal_all_normalized(body_did);\n \n         let blocks = body.basic_blocks.as_mut();\n         let local_decls = &mut body.local_decls;"}, {"sha": "59942dc76f9aa9c836f6a20116f27ad2b4ea2d01", "filename": "compiler/rustc_mir_transform/src/match_branches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fmatch_branches.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -46,7 +46,7 @@ impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         let def_id = body.source.def_id();\n-        let param_env = tcx.param_env(def_id);\n+        let param_env = tcx.param_env_reveal_all_normalized(def_id);\n \n         let bbs = body.basic_blocks.as_mut();\n         let mut should_cleanup = false;"}, {"sha": "d4debae5c581a9004a46874bdd33754372730f3a", "filename": "compiler/rustc_mir_transform/src/shim.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fshim.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -355,7 +355,7 @@ fn build_thread_local_shim<'tcx>(tcx: TyCtxt<'tcx>, instance: ty::InstanceDef<'t\n fn build_clone_shim<'tcx>(tcx: TyCtxt<'tcx>, def_id: DefId, self_ty: Ty<'tcx>) -> Body<'tcx> {\n     debug!(\"build_clone_shim(def_id={:?})\", def_id);\n \n-    let param_env = tcx.param_env(def_id);\n+    let param_env = tcx.param_env_reveal_all_normalized(def_id);\n \n     let mut builder = CloneShimBuilder::new(tcx, def_id, self_ty);\n     let is_copy = self_ty.is_copy_modulo_regions(tcx, param_env);\n@@ -836,7 +836,7 @@ fn build_call_shim<'tcx>(\n pub fn build_adt_ctor(tcx: TyCtxt<'_>, ctor_id: DefId) -> Body<'_> {\n     debug_assert!(tcx.is_constructor(ctor_id));\n \n-    let param_env = tcx.param_env(ctor_id);\n+    let param_env = tcx.param_env_reveal_all_normalized(ctor_id);\n \n     // Normalize the sig.\n     let sig = tcx"}, {"sha": "1ff488169864bfe5ad8807b8d88c43b17a2f6cbf", "filename": "compiler/rustc_mir_transform/src/simplify_branches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_branches.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -16,7 +16,7 @@ impl<'tcx> MirPass<'tcx> for SimplifyConstCondition {\n     }\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        let param_env = tcx.param_env(body.source.def_id());\n+        let param_env = tcx.param_env_reveal_all_normalized(body.source.def_id());\n         for block in body.basic_blocks_mut() {\n             let terminator = block.terminator_mut();\n             terminator.kind = match terminator.kind {"}, {"sha": "113ca2fc5ada5056cbc211cb4bc897426f2e1858", "filename": "compiler/rustc_mir_transform/src/simplify_comparison_integral.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_comparison_integral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_comparison_integral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fsimplify_comparison_integral.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -37,7 +37,7 @@ impl<'tcx> MirPass<'tcx> for SimplifyComparisonIntegral {\n         let opts = helper.find_optimizations();\n         let mut storage_deads_to_insert = vec![];\n         let mut storage_deads_to_remove: Vec<(usize, BasicBlock)> = vec![];\n-        let param_env = tcx.param_env(body.source.def_id());\n+        let param_env = tcx.param_env_reveal_all_normalized(body.source.def_id());\n         for opt in opts {\n             trace!(\"SUCCESS: Applying {:?}\", opt);\n             // replace terminator with a switchInt that switches on the integer directly"}, {"sha": "5389b9f52eb2d43f0d42b6fdb4bebdf2117302c4", "filename": "compiler/rustc_mir_transform/src/uninhabited_enum_branching.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Funinhabited_enum_branching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fe51365d7a58b34ad0fb0e9b0d2523920743d1d/compiler%2Frustc_mir_transform%2Fsrc%2Funinhabited_enum_branching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Funinhabited_enum_branching.rs?ref=4fe51365d7a58b34ad0fb0e9b0d2523920743d1d", "patch": "@@ -109,7 +109,9 @@ impl<'tcx> MirPass<'tcx> for UninhabitedEnumBranching {\n                 continue;\n             };\n \n-            let layout = tcx.layout_of(tcx.param_env(body.source.def_id()).and(discriminant_ty));\n+            let layout = tcx.layout_of(\n+                tcx.param_env_reveal_all_normalized(body.source.def_id()).and(discriminant_ty),\n+            );\n \n             let allowed_variants = if let Ok(layout) = layout {\n                 variant_discriminants(&layout, discriminant_ty, tcx)"}]}