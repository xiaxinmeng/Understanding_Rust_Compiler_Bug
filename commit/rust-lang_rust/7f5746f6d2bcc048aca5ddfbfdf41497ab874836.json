{"sha": "7f5746f6d2bcc048aca5ddfbfdf41497ab874836", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNTc0NmY2ZDJiY2MwNDhhY2E1ZGRmYmZkZjQxNDk3YWI4NzQ4MzY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-12T22:08:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-05-15T19:19:16Z"}, "message": "core::rt: Rename Sched.task_queue to work_queue", "tree": {"sha": "69ced4fcba27a4a5f7ba02ab3fdcbb7596be43bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69ced4fcba27a4a5f7ba02ab3fdcbb7596be43bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f5746f6d2bcc048aca5ddfbfdf41497ab874836", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f5746f6d2bcc048aca5ddfbfdf41497ab874836", "html_url": "https://github.com/rust-lang/rust/commit/7f5746f6d2bcc048aca5ddfbfdf41497ab874836", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f5746f6d2bcc048aca5ddfbfdf41497ab874836/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56c0b188b66f71f55e2d577ca4a23830a31433e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/56c0b188b66f71f55e2d577ca4a23830a31433e6", "html_url": "https://github.com/rust-lang/rust/commit/56c0b188b66f71f55e2d577ca4a23830a31433e6"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "1e4a9c87a68fe8c8cc5771161f00d3a86c6ad7aa", "filename": "src/libcore/rt/sched.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7f5746f6d2bcc048aca5ddfbfdf41497ab874836/src%2Flibcore%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5746f6d2bcc048aca5ddfbfdf41497ab874836/src%2Flibcore%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt%2Fsched.rs?ref=7f5746f6d2bcc048aca5ddfbfdf41497ab874836", "patch": "@@ -31,7 +31,7 @@ pub mod local_sched;\n /// thread local storage and the running task is owned by the\n /// scheduler.\n pub struct Scheduler {\n-    priv task_queue: WorkQueue<~Task>,\n+    priv work_queue: WorkQueue<~Task>,\n     stack_pool: StackPool,\n     /// The event loop used to drive the scheduler and perform I/O\n     event_loop: ~EventLoopObject,\n@@ -76,7 +76,7 @@ pub impl Scheduler {\n \n         Scheduler {\n             event_loop: event_loop,\n-            task_queue: WorkQueue::new(),\n+            work_queue: WorkQueue::new(),\n             stack_pool: StackPool::new(),\n             saved_context: Context::empty(),\n             current_task: None,\n@@ -106,7 +106,7 @@ pub impl Scheduler {\n         }\n \n         let sched = local_sched::take();\n-        assert!(sched.task_queue.is_empty());\n+        assert!(sched.work_queue.is_empty());\n         return sched;\n     }\n \n@@ -116,7 +116,7 @@ pub impl Scheduler {\n     /// to run it later. Always use this instead of pushing to the work queue\n     /// directly.\n     fn enqueue_task(&mut self, task: ~Task) {\n-        self.task_queue.push_front(task);\n+        self.work_queue.push_front(task);\n         self.event_loop.callback(resume_task_from_queue);\n \n         fn resume_task_from_queue() {\n@@ -133,7 +133,7 @@ pub impl Scheduler {\n         rtdebug!(\"looking in work queue for task to schedule\");\n \n         let mut this = self;\n-        match this.task_queue.pop_front() {\n+        match this.work_queue.pop_front() {\n             Some(task) => {\n                 rtdebug!(\"resuming task from work queue\");\n                 this.resume_task_immediately(task);"}]}