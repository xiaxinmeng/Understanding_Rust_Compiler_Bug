{"sha": "b24b88734d7aab59184d30209bc6053cc2ecf3a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNGI4ODczNGQ3YWFiNTkxODRkMzAyMDliYzYwNTNjYzJlY2YzYTQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-24T12:51:16Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-27T13:06:03Z"}, "message": "select.rs: rustfmt", "tree": {"sha": "48be2271bd1bbd18029655767b203abb8664d1fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48be2271bd1bbd18029655767b203abb8664d1fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b24b88734d7aab59184d30209bc6053cc2ecf3a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b24b88734d7aab59184d30209bc6053cc2ecf3a4", "html_url": "https://github.com/rust-lang/rust/commit/b24b88734d7aab59184d30209bc6053cc2ecf3a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b24b88734d7aab59184d30209bc6053cc2ecf3a4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4e4e374e76b3769207347a81e64b26b6a2b657f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4e4e374e76b3769207347a81e64b26b6a2b657f", "html_url": "https://github.com/rust-lang/rust/commit/d4e4e374e76b3769207347a81e64b26b6a2b657f"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "e2a5fdd36221776289d92ac235dfd4f171003404", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b24b88734d7aab59184d30209bc6053cc2ecf3a4/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24b88734d7aab59184d30209bc6053cc2ecf3a4/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=b24b88734d7aab59184d30209bc6053cc2ecf3a4", "patch": "@@ -1368,7 +1368,8 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n \n         // Winnow, but record the exact outcome of evaluation, which\n         // is needed for specialization. Propagate overflow if it occurs.\n-        let mut candidates = candidates.into_iter()\n+        let mut candidates = candidates\n+            .into_iter()\n             .map(|c| match self.evaluate_candidate(stack, &c) {\n                 Ok(eval) if eval.may_apply() => Ok(Some(EvaluatedCandidate {\n                     candidate: c,\n@@ -1377,8 +1378,8 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n                 Ok(_) => Ok(None),\n                 Err(OverflowError) => Err(Overflow),\n             })\n-           .flat_map(Result::transpose)\n-           .collect::<Result<Vec<_>, _>>()?;\n+            .flat_map(Result::transpose)\n+            .collect::<Result<Vec<_>, _>>()?;\n \n         debug!(\n             \"winnowed to {} candidates for {:?}: {:?}\",\n@@ -3004,9 +3005,7 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         let self_ty = self.infcx\n             .shallow_resolve(*obligation.self_ty().skip_binder());\n         let poly_trait_ref = match self_ty.sty {\n-            ty::Dynamic(ref data, ..) => {\n-                data.principal().with_self_ty(self.tcx(), self_ty)\n-            }\n+            ty::Dynamic(ref data, ..) => data.principal().with_self_ty(self.tcx(), self_ty),\n             _ => span_bug!(obligation.cause.span, \"object candidate with non-object\"),\n         };\n \n@@ -3672,7 +3671,10 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         );\n         let closure_type = self.infcx.closure_sig(closure_def_id, substs);\n \n-        debug!(\"closure_trait_ref_unnormalized: closure_type = {:?}\", closure_type);\n+        debug!(\n+            \"closure_trait_ref_unnormalized: closure_type = {:?}\",\n+            closure_type\n+        );\n \n         // (1) Feels icky to skip the binder here, but OTOH we know\n         // that the self-type is an unboxed closure type and hence is"}]}