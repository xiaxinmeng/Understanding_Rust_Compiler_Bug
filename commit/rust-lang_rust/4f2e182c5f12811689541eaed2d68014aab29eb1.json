{"sha": "4f2e182c5f12811689541eaed2d68014aab29eb1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmMmUxODJjNWYxMjgxMTY4OTU0MWVhZWQyZDY4MDE0YWFiMjllYjE=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-08-20T11:04:52Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-20T11:04:52Z"}, "message": "Liballoc bench rename push_all extend_from_slice", "tree": {"sha": "480182406f24360ca8b44bfe4576064ae2b7c3b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/480182406f24360ca8b44bfe4576064ae2b7c3b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f2e182c5f12811689541eaed2d68014aab29eb1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPljUCRBK7hj4Ov3rIwAAdHIIAAKrbecxflQosoLE3wckwn4d\npaU64QcakNSj91ASpR6U4cACMrAKKJeo6eYyy7SsK+M7u4jTAsZDsd48JAnSGb5E\nmPYuc24EoMPprF7eoZJy70kdUNHhQMt1IzLqeLKGaAw7hbzltdT6dbxhyI9c32bl\nUNRyPXEMQXd62ijMU2vUDoUEg1MNCH4DGFx12z9Nizu9ALWENCPQAzLZICwlNlB8\n6tKiw6j8ttl3bXx3WGo1G+d01IC4KURJKPAkNjBW9AlCMFbxQgeTogdBo11Sf6u1\n718z/fr587IRvZxbfLuWdbo7T+jrPiOSvMfYIWw3CQV5EiCZ+r9HP7fqZL1IhuM=\n=PzM1\n-----END PGP SIGNATURE-----\n", "payload": "tree 480182406f24360ca8b44bfe4576064ae2b7c3b1\nparent 2932d4e63493378710bb0aa27187e8dd33260c4a\nauthor Ivan Tham <pickfire@riseup.net> 1597921492 +0800\ncommitter GitHub <noreply@github.com> 1597921492 +0800\n\nLiballoc bench rename push_all extend_from_slice"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e182c5f12811689541eaed2d68014aab29eb1", "html_url": "https://github.com/rust-lang/rust/commit/4f2e182c5f12811689541eaed2d68014aab29eb1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f2e182c5f12811689541eaed2d68014aab29eb1/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2932d4e63493378710bb0aa27187e8dd33260c4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/2932d4e63493378710bb0aa27187e8dd33260c4a", "html_url": "https://github.com/rust-lang/rust/commit/2932d4e63493378710bb0aa27187e8dd33260c4a"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "4e71eec03e5bff622aa9c9ee26ae7643f386ff2b", "filename": "library/alloc/benches/vec.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4f2e182c5f12811689541eaed2d68014aab29eb1/library%2Falloc%2Fbenches%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f2e182c5f12811689541eaed2d68014aab29eb1/library%2Falloc%2Fbenches%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fbenches%2Fvec.rs?ref=4f2e182c5f12811689541eaed2d68014aab29eb1", "patch": "@@ -213,7 +213,7 @@ fn bench_extend_1000_1000(b: &mut Bencher) {\n     do_bench_extend(b, 1000, 1000)\n }\n \n-fn do_bench_push_all(b: &mut Bencher, dst_len: usize, src_len: usize) {\n+fn do_bench_extend_from_slice(b: &mut Bencher, dst_len: usize, src_len: usize) {\n     let dst: Vec<_> = FromIterator::from_iter(0..dst_len);\n     let src: Vec<_> = FromIterator::from_iter(dst_len..dst_len + src_len);\n \n@@ -228,38 +228,38 @@ fn do_bench_push_all(b: &mut Bencher, dst_len: usize, src_len: usize) {\n }\n \n #[bench]\n-fn bench_push_all_0000_0000(b: &mut Bencher) {\n-    do_bench_push_all(b, 0, 0)\n+fn bench_extend_from_slice_0000_0000(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 0, 0)\n }\n \n #[bench]\n-fn bench_push_all_0000_0010(b: &mut Bencher) {\n-    do_bench_push_all(b, 0, 10)\n+fn bench_extend_from_slice_0000_0010(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 0, 10)\n }\n \n #[bench]\n-fn bench_push_all_0000_0100(b: &mut Bencher) {\n-    do_bench_push_all(b, 0, 100)\n+fn bench_extend_from_slice_0000_0100(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 0, 100)\n }\n \n #[bench]\n-fn bench_push_all_0000_1000(b: &mut Bencher) {\n-    do_bench_push_all(b, 0, 1000)\n+fn bench_extend_from_slice_0000_1000(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 0, 1000)\n }\n \n #[bench]\n-fn bench_push_all_0010_0010(b: &mut Bencher) {\n-    do_bench_push_all(b, 10, 10)\n+fn bench_extend_from_slice_0010_0010(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 10, 10)\n }\n \n #[bench]\n-fn bench_push_all_0100_0100(b: &mut Bencher) {\n-    do_bench_push_all(b, 100, 100)\n+fn bench_extend_from_slice_0100_0100(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 100, 100)\n }\n \n #[bench]\n-fn bench_push_all_1000_1000(b: &mut Bencher) {\n-    do_bench_push_all(b, 1000, 1000)\n+fn bench_extend_from_slice_1000_1000(b: &mut Bencher) {\n+    do_bench_extend_from_slice(b, 1000, 1000)\n }\n \n fn do_bench_clone(b: &mut Bencher, src_len: usize) {"}]}