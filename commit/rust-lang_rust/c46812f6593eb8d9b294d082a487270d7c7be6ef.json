{"sha": "c46812f6593eb8d9b294d082a487270d7c7be6ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NjgxMmY2NTkzZWI4ZDliMjk0ZDA4MmE0ODcyNzBkN2M3YmU2ZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-19T00:47:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-10-19T00:47:18Z"}, "message": "auto merge of #18120 : jrincayc/rust/match_exp, r=thestinger\n\nUse a match expression directly in the println statement, instead of creating a second variable.  It seems weird that the current guide.md complains about creating an extra variable, when the same feature could be demonstrated without creating the extra variable.", "tree": {"sha": "e181dd5c772eb30de5a6bb651f8518af3a53facd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e181dd5c772eb30de5a6bb651f8518af3a53facd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c46812f6593eb8d9b294d082a487270d7c7be6ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c46812f6593eb8d9b294d082a487270d7c7be6ef", "html_url": "https://github.com/rust-lang/rust/commit/c46812f6593eb8d9b294d082a487270d7c7be6ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c46812f6593eb8d9b294d082a487270d7c7be6ef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8cf0239713aa5683dc80872c4ea1962599e75e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8cf0239713aa5683dc80872c4ea1962599e75e7", "html_url": "https://github.com/rust-lang/rust/commit/d8cf0239713aa5683dc80872c4ea1962599e75e7"}, {"sha": "ce83a24b5f525cba5bd9b734be969f4595b7ca0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce83a24b5f525cba5bd9b734be969f4595b7ca0b", "html_url": "https://github.com/rust-lang/rust/commit/ce83a24b5f525cba5bd9b734be969f4595b7ca0b"}], "stats": {"total": 14, "additions": 6, "deletions": 8}, "files": [{"sha": "a3c508ceb24002e19b0f4306194ac5913b581fc3", "filename": "src/doc/guide.md", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c46812f6593eb8d9b294d082a487270d7c7be6ef/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/c46812f6593eb8d9b294d082a487270d7c7be6ef/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=c46812f6593eb8d9b294d082a487270d7c7be6ef", "patch": "@@ -1255,8 +1255,9 @@ version, if we had forgotten the `Greater` case, for example, our program would\n have happily compiled. If we forget in the `match`, it will not. Rust helps us\n make sure to cover all of our bases.\n \n-`match` is also an expression, which means we can use it on the right hand side\n-of a `let` binding. We could also implement the previous line like this:\n+`match` is also an expression, which means we can use it on the right\n+hand side of a `let` binding or directly where an expression is\n+used. We could also implement the previous line like this:\n \n ```{rust}\n fn cmp(a: int, b: int) -> Ordering {\n@@ -1269,18 +1270,15 @@ fn main() {\n     let x = 5i;\n     let y = 10i;\n \n-    let result = match cmp(x, y) {\n+    println!(\"{}\", match cmp(x, y) {\n         Less    => \"less\",\n         Greater => \"greater\",\n         Equal   => \"equal\",\n-    };\n-\n-    println!(\"{}\", result);\n+    });\n }\n ```\n \n-In this case, it doesn't make a lot of sense, as we are just making a temporary\n-string where we don't need to, but sometimes, it's a nice pattern.\n+Sometimes, it's a nice pattern.\n \n # Looping\n "}]}