{"sha": "6a566710c59c28891d367e0ce721f278b824aa25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNTY2NzEwYzU5YzI4ODkxZDM2N2UwY2U3MjFmMjc4YjgyNGFhMjU=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-07-18T15:41:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-07-18T15:41:31Z"}, "message": "Rollup merge of #43287 - kennytm:travis-ci-adjustments, r=alexcrichton\n\nChange Travis CI job order.\n\nReorder the job matrix to take advantage of the order how Travis CI starts them in rust-lang/rust. Plus other refactoring of `.travis.yml`.\n\n1. Move the `$ALLOW_PR` image to the top, so pull requests will start testing as immediately after the build is started. Previously the `$ALLOW_PR` image starts 6 minutes after the build was scheduled.\n\n2. Move the slow macOS images near the top, so they share more time with the rest of the faster Linux builds, which should shorten total test time (actually not much, about 7 minutes at most if this change does work).\n\n3. Merged the `install` section of both Linux and macOS to make the `env:` section a bit shorter, and enable change 4 below.\n\n4. Do not download or install anything if `$SKIP_BUILD == true`, which further reduces chance of spurious failure in the PR-CI stage (avoid the red cross appearing even if CI passed).\n\n(IMO `$SKIP_BUILD` should not even exist: those irrelevant jobs should not start at all, but that would require travis-ci/travis-ci#2778 which has been rejected)", "tree": {"sha": "0ccfebaec14d99e3a02801f776cc2b315ba2c598", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ccfebaec14d99e3a02801f776cc2b315ba2c598"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a566710c59c28891d367e0ce721f278b824aa25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a566710c59c28891d367e0ce721f278b824aa25", "html_url": "https://github.com/rust-lang/rust/commit/6a566710c59c28891d367e0ce721f278b824aa25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a566710c59c28891d367e0ce721f278b824aa25/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "413ef50884e779c037a7d157dc03369eb469be95", "url": "https://api.github.com/repos/rust-lang/rust/commits/413ef50884e779c037a7d157dc03369eb469be95", "html_url": "https://github.com/rust-lang/rust/commit/413ef50884e779c037a7d157dc03369eb469be95"}, {"sha": "a7eb87e4fcbc28f503bb53d0a4877f9a2751161f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7eb87e4fcbc28f503bb53d0a4877f9a2751161f", "html_url": "https://github.com/rust-lang/rust/commit/a7eb87e4fcbc28f503bb53d0a4877f9a2751161f"}], "stats": {"total": 205, "additions": 106, "deletions": 99}, "files": [{"sha": "d315546930330d4de16c24ba50a802f0652e3a9f", "filename": ".travis.yml", "status": "modified", "additions": 106, "deletions": 99, "changes": 205, "blob_url": "https://github.com/rust-lang/rust/blob/6a566710c59c28891d367e0ce721f278b824aa25/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/6a566710c59c28891d367e0ce721f278b824aa25/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=6a566710c59c28891d367e0ce721f278b824aa25", "patch": "@@ -11,43 +11,28 @@ git:\n matrix:\n   fast_finish: true\n   include:\n-    # Linux builders, all docker images\n-    - env: IMAGE=arm-android\n-    - env: IMAGE=armhf-gnu\n-    - env: IMAGE=cross DEPLOY=1\n-    - env: IMAGE=dist-aarch64-linux DEPLOY=1\n-    - env: IMAGE=dist-android DEPLOY=1\n-    - env: IMAGE=dist-arm-linux DEPLOY=1\n-    - env: IMAGE=dist-armhf-linux DEPLOY=1\n-    - env: IMAGE=dist-armv7-linux DEPLOY=1\n-    - env: IMAGE=dist-fuchsia DEPLOY=1\n-    - env: IMAGE=dist-i586-gnu-i686-musl DEPLOY=1\n-    - env: IMAGE=dist-i686-freebsd DEPLOY=1\n-    - env: IMAGE=dist-i686-linux DEPLOY=1\n-    - env: IMAGE=dist-mips-linux DEPLOY=1\n-    - env: IMAGE=dist-mips64-linux DEPLOY=1\n-    - env: IMAGE=dist-mips64el-linux DEPLOY=1\n-    - env: IMAGE=dist-mipsel-linux DEPLOY=1\n-    - env: IMAGE=dist-powerpc-linux DEPLOY=1\n-    - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n-    - env: IMAGE=dist-powerpc64le-linux DEPLOY=1\n-    - env: IMAGE=dist-s390x-linux DEPLOY=1\n-    - env: IMAGE=dist-x86_64-freebsd DEPLOY=1\n-    - env: IMAGE=dist-x86_64-linux DEPLOY=1 ALLOW_TRY=1\n-    - env: IMAGE=dist-x86_64-musl DEPLOY=1\n-    - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n-    - env: IMAGE=asmjs\n-    - env: IMAGE=i686-gnu\n-    - env: IMAGE=i686-gnu-nopt\n-    # - env: IMAGE=wasm32 issue 42646\n-    - env: IMAGE=x86_64-gnu\n-    - env: IMAGE=x86_64-gnu-full-bootstrap\n-    - env: IMAGE=x86_64-gnu-aux\n-    - env: IMAGE=x86_64-gnu-debug\n-    - env: IMAGE=x86_64-gnu-nopt\n+    # Images used in testing PR and try-build should be run first.\n     - env: IMAGE=x86_64-gnu-llvm-3.7 ALLOW_PR=1 RUST_BACKTRACE=1\n-    - env: IMAGE=x86_64-gnu-distcheck\n-    - env: IMAGE=x86_64-gnu-incremental\n+    - env: IMAGE=dist-x86_64-linux DEPLOY=1 ALLOW_TRY=1\n+\n+    # \"alternate\" deployments, these are \"nightlies\" but don't have assertions\n+    # turned on, they're deployed to a different location primarily for projects\n+    # which are stuck on nightly and don't want llvm assertions in the artifacts\n+    # that they use.\n+    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n+    - env: >\n+        RUST_CHECK_TARGET=dist\n+        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler\"\n+        SRC=.\n+        DEPLOY_ALT=1\n+        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n+        SCCACHE_ERROR_LOG=/tmp/sccache.log\n+        MACOSX_DEPLOYMENT_TARGET=10.7\n+      os: osx\n+      osx_image: xcode7\n+\n+    # macOS builders. These are placed near the beginning because they are very\n+    # slow to run.\n \n     # OSX builders running tests, these run the full test suite.\n     #\n@@ -63,11 +48,6 @@ matrix:\n         MACOSX_STD_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode8.2\n-      install: &osx_install_sccache >\n-        travis_retry curl -fo /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-apple-darwin &&\n-          chmod +x /usr/local/bin/sccache &&\n-        travis_retry curl -fo /usr/local/bin/stamp https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-17-stamp-x86_64-apple-darwin &&\n-          chmod +x /usr/local/bin/stamp\n     - env: >\n         RUST_CHECK_TARGET=check\n         RUST_CONFIGURE_ARGS=--build=i686-apple-darwin\n@@ -78,7 +58,6 @@ matrix:\n         MACOSX_STD_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode8.2\n-      install: *osx_install_sccache\n \n     # OSX builders producing releases. These do not run the full test suite and\n     # just produce a bunch of artifacts.\n@@ -96,10 +75,6 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode7\n-      install:\n-        - travis_retry brew update\n-        - travis_retry brew install xz\n-        - *osx_install_sccache\n     - env: >\n         RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-extended --enable-sanitizers --enable-profiler\"\n@@ -110,30 +85,42 @@ matrix:\n         MACOSX_DEPLOYMENT_TARGET=10.7\n       os: osx\n       osx_image: xcode7\n-      install:\n-        - travis_retry brew update\n-        - travis_retry brew install xz\n-        - *osx_install_sccache\n \n-    # \"alternate\" deployments, these are \"nightlies\" but don't have assertions\n-    # turned on, they're deployed to a different location primarily for projects\n-    # which are stuck on nightly and don't want llvm assertions in the artifacts\n-    # that they use.\n-    - env: IMAGE=dist-x86_64-linux DEPLOY_ALT=1\n-    - env: >\n-        RUST_CHECK_TARGET=dist\n-        RUST_CONFIGURE_ARGS=\"--enable-extended --enable-profiler\"\n-        SRC=.\n-        DEPLOY_ALT=1\n-        RUSTC_RETRY_LINKER_ON_SEGFAULT=1\n-        SCCACHE_ERROR_LOG=/tmp/sccache.log\n-        MACOSX_DEPLOYMENT_TARGET=10.7\n-      os: osx\n-      osx_image: xcode7\n-      install:\n-        - travis_retry brew update\n-        - travis_retry brew install xz\n-        - *osx_install_sccache\n+    # Linux builders, remaining docker images\n+    - env: IMAGE=arm-android\n+    - env: IMAGE=armhf-gnu\n+    - env: IMAGE=cross DEPLOY=1\n+    - env: IMAGE=dist-aarch64-linux DEPLOY=1\n+    - env: IMAGE=dist-android DEPLOY=1\n+    - env: IMAGE=dist-arm-linux DEPLOY=1\n+    - env: IMAGE=dist-armhf-linux DEPLOY=1\n+    - env: IMAGE=dist-armv7-linux DEPLOY=1\n+    - env: IMAGE=dist-fuchsia DEPLOY=1\n+    - env: IMAGE=dist-i586-gnu-i686-musl DEPLOY=1\n+    - env: IMAGE=dist-i686-freebsd DEPLOY=1\n+    - env: IMAGE=dist-i686-linux DEPLOY=1\n+    - env: IMAGE=dist-mips-linux DEPLOY=1\n+    - env: IMAGE=dist-mips64-linux DEPLOY=1\n+    - env: IMAGE=dist-mips64el-linux DEPLOY=1\n+    - env: IMAGE=dist-mipsel-linux DEPLOY=1\n+    - env: IMAGE=dist-powerpc-linux DEPLOY=1\n+    - env: IMAGE=dist-powerpc64-linux DEPLOY=1\n+    - env: IMAGE=dist-powerpc64le-linux DEPLOY=1\n+    - env: IMAGE=dist-s390x-linux DEPLOY=1\n+    - env: IMAGE=dist-x86_64-freebsd DEPLOY=1\n+    - env: IMAGE=dist-x86_64-musl DEPLOY=1\n+    - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n+    - env: IMAGE=asmjs\n+    - env: IMAGE=i686-gnu\n+    - env: IMAGE=i686-gnu-nopt\n+    # - env: IMAGE=wasm32 issue 42646\n+    - env: IMAGE=x86_64-gnu\n+    - env: IMAGE=x86_64-gnu-full-bootstrap\n+    - env: IMAGE=x86_64-gnu-aux\n+    - env: IMAGE=x86_64-gnu-debug\n+    - env: IMAGE=x86_64-gnu-nopt\n+    - env: IMAGE=x86_64-gnu-distcheck\n+    - env: IMAGE=x86_64-gnu-incremental\n \n env:\n   global:\n@@ -142,41 +129,64 @@ env:\n     # AWS_SECRET_ACCESS_KEY=...\n     - secure: \"Pixhh0hXDqGCdOyLtGFjli3J2AtDWIpyb2btIrLe956nCBDRutRoMm6rv5DI9sFZN07Mms7VzNNvhc9wCW1y63JAm414d2Co7Ob8kWMZlz9l9t7ACHuktUiis8yr+S4Quq1Vqd6pqi7pf2J++UxC8R/uLeqVrubzr6+X7AbmEFE=\"\n \n-# Note that this is overridden on OSX builders\n-install: >\n-  travis_retry curl -fo $HOME/stamp https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-17-stamp-x86_64-unknown-linux-musl &&\n-    chmod +x $HOME/stamp &&\n-    export PATH=$PATH:$HOME\n+before_install:\n+  # If we are building a pull request, do the build if $ALLOW_PR == 1\n+  # Otherwise, do the build if we are on the auto branch, or the try branch and $ALLOW_TRY == 1\n+  - >\n+    if [[ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]]; then\n+        if [[ \"$ALLOW_PR\" == \"1\" ]]; then\n+            export SKIP_BUILD=false;\n+        else\n+            export SKIP_BUILD=true;\n+        fi;\n+    elif [[ \"$TRAVIS_BRANCH\" == \"auto\" || ( \"$ALLOW_TRY\" == \"1\" && \"$TRAVIS_BRANCH\" == \"try\" ) ]]; then\n+        export SKIP_BUILD=false;\n+    else\n+        export SKIP_BUILD=true;\n+    fi\n+  - >\n+    if [[ \"$SKIP_BUILD\" == false ]]; then\n+      zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n+    fi\n+  - mkdir -p $HOME/rustsrc\n+\n+install:\n+  - >\n+    if [[ \"$SKIP_BUILD\" == true ]]; then\n+      echo echo skipping, not a full build > $HOME/stamp &&\n+        chmod +x $HOME/stamp &&\n+        export PATH=$PATH:$HOME;\n+    else\n+      case \"$TRAVIS_OS_NAME\" in\n+        linux)\n+          travis_retry curl -fo $HOME/stamp https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-17-stamp-x86_64-unknown-linux-musl &&\n+            chmod +x $HOME/stamp &&\n+            export PATH=$PATH:$HOME\n+          ;;\n+        osx)\n+          if [[ \"$RUST_CHECK_TARGET\" == dist ]]; then\n+            travis_retry brew update &&\n+            travis_retry brew install xz;\n+          fi &&\n+          travis_retry curl -fo /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-apple-darwin &&\n+            chmod +x /usr/local/bin/sccache &&\n+          travis_retry curl -fo /usr/local/bin/stamp https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-03-17-stamp-x86_64-apple-darwin &&\n+            chmod +x /usr/local/bin/stamp\n+          ;;\n+      esac\n+    fi\n \n before_script:\n   - >\n       echo \"#### Disk usage before running script:\";\n       df -h;\n       du . | sort -nr | head -n100\n-  # If we are building a pull request, do the build if $ALLOW_PR == 1\n-  # Otherwise, do the build if we are on the auto branch, or the try branch and $ALLOW_TRY == 1\n   - >\n-      if [[ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]]; then\n-          if [[ \"$ALLOW_PR\" == \"1\" ]]; then\n-              SKIP_BUILD=false;\n-          else\n-              SKIP_BUILD=true;\n-          fi\n-      elif [[ \"$TRAVIS_BRANCH\" == \"auto\" || ( \"$ALLOW_TRY\" == \"1\" && \"$TRAVIS_BRANCH\" == \"try\" ) ]]; then\n-          SKIP_BUILD=false;\n+      RUN_SCRIPT=\"src/ci/init_repo.sh . $HOME/rustsrc\";\n+      if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n+          export RUN_SCRIPT=\"$RUN_SCRIPT && src/ci/run.sh\";\n       else\n-          SKIP_BUILD=true;\n-      fi\n-\n-      if [[ \"$SKIP_BUILD\" == true ]]; then\n-          export RUN_SCRIPT=\"echo 'skipping, not a full build'\";\n-      else\n-          RUN_SCRIPT=\"src/ci/init_repo.sh . $HOME/rustsrc\";\n-          if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n-              export RUN_SCRIPT=\"$RUN_SCRIPT && src/ci/run.sh\";\n-          else\n-              export RUN_SCRIPT=\"$RUN_SCRIPT && src/ci/docker/run.sh $IMAGE\";\n-          fi\n+          export RUN_SCRIPT=\"$RUN_SCRIPT && src/ci/docker/run.sh $IMAGE\";\n       fi\n \n # Log time information from this machine and an external machine for insight into possible\n@@ -223,9 +233,6 @@ before_cache:\n     grep -v missing |\n     xargs docker save |\n     gzip > $HOME/docker/rust-ci.tar.gz\n-before_install:\n-  - zcat $HOME/docker/rust-ci.tar.gz | docker load || true\n-  - mkdir -p $HOME/rustsrc\n \n notifications:\n   email: false"}]}