{"sha": "0ba61c612ee873314d252ca1f747c14a2f0161ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYTYxYzYxMmVlODczMzE0ZDI1MmNhMWY3NDdjMTRhMmYwMTYxYmE=", "commit": {"author": {"name": "Glenn Hope", "email": "glenn.alexander.hope@gmail.com", "date": "2020-05-09T17:14:29Z"}, "committer": {"name": "Glenn Hope", "email": "glenn.alexander.hope@gmail.com", "date": "2020-05-09T18:10:16Z"}, "message": "Check is_macro inside check_exceptions, update references to fix test", "tree": {"sha": "c3b55c84d0bbfa6cde2f607f50e1e56649c1bd30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3b55c84d0bbfa6cde2f607f50e1e56649c1bd30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ba61c612ee873314d252ca1f747c14a2f0161ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ba61c612ee873314d252ca1f747c14a2f0161ba", "html_url": "https://github.com/rust-lang/rust/commit/0ba61c612ee873314d252ca1f747c14a2f0161ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ba61c612ee873314d252ca1f747c14a2f0161ba/comments", "author": {"login": "MrAwesome", "id": 145945, "node_id": "MDQ6VXNlcjE0NTk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/145945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAwesome", "html_url": "https://github.com/MrAwesome", "followers_url": "https://api.github.com/users/MrAwesome/followers", "following_url": "https://api.github.com/users/MrAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MrAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MrAwesome/orgs", "repos_url": "https://api.github.com/users/MrAwesome/repos", "events_url": "https://api.github.com/users/MrAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAwesome/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MrAwesome", "id": 145945, "node_id": "MDQ6VXNlcjE0NTk0NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/145945?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MrAwesome", "html_url": "https://github.com/MrAwesome", "followers_url": "https://api.github.com/users/MrAwesome/followers", "following_url": "https://api.github.com/users/MrAwesome/following{/other_user}", "gists_url": "https://api.github.com/users/MrAwesome/gists{/gist_id}", "starred_url": "https://api.github.com/users/MrAwesome/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MrAwesome/subscriptions", "organizations_url": "https://api.github.com/users/MrAwesome/orgs", "repos_url": "https://api.github.com/users/MrAwesome/repos", "events_url": "https://api.github.com/users/MrAwesome/events{/privacy}", "received_events_url": "https://api.github.com/users/MrAwesome/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a339766136a183327faaf13b987be30b2940872e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a339766136a183327faaf13b987be30b2940872e", "html_url": "https://github.com/rust-lang/rust/commit/a339766136a183327faaf13b987be30b2940872e"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "2c4e24780e7d12f1f3ac8306f89634de5af8ff34", "filename": "clippy_lints/src/wildcard_imports.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0ba61c612ee873314d252ca1f747c14a2f0161ba/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ba61c612ee873314d252ca1f747c14a2f0161ba/clippy_lints%2Fsrc%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_imports.rs?ref=0ba61c612ee873314d252ca1f747c14a2f0161ba", "patch": "@@ -101,12 +101,11 @@ impl LateLintPass<'_, '_> for WildcardImports {\n             return;\n         }\n         if is_test_module_or_function(item) {\n-            self.test_modules_deep += 1;\n+            self.test_modules_deep = self.test_modules_deep.saturating_add(1);\n         }\n         if_chain! {\n-            if self.warn_on_all || !in_macro(item.span);\n             if let ItemKind::Use(use_path, UseKind::Glob) = &item.kind;\n-            if self.warn_on_all || !self.check_exceptions(use_path.segments);\n+            if self.warn_on_all || !self.check_exceptions(item, use_path.segments);\n             let used_imports = cx.tcx.names_imported_by_glob_use(item.hir_id.owner);\n             if !used_imports.is_empty(); // Already handled by `unused_imports`\n             then {\n@@ -177,14 +176,16 @@ impl LateLintPass<'_, '_> for WildcardImports {\n \n     fn check_item_post(&mut self, _: &LateContext<'_, '_>, item: &Item<'_>) {\n         if is_test_module_or_function(item) {\n-            self.test_modules_deep -= 1;\n+            self.test_modules_deep = self.test_modules_deep.saturating_sub(1);\n         }\n     }\n }\n \n impl WildcardImports {\n-    fn check_exceptions(&self, segments: &[PathSegment<'_>]) -> bool {\n-        is_prelude_import(segments) || (is_super_only_import(segments) && self.test_modules_deep > 0)\n+    fn check_exceptions(&self, item: &Item<'_>, segments: &[PathSegment<'_>]) -> bool {\n+        in_macro(item.span)\n+            || is_prelude_import(segments)\n+            || (is_super_only_import(segments) && self.test_modules_deep > 0)\n     }\n }\n "}, {"sha": "fab43b738eb434d1ab6b453dffbc8967bfeeb222", "filename": "tests/ui/wildcard_imports.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0ba61c612ee873314d252ca1f747c14a2f0161ba/tests%2Fui%2Fwildcard_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0ba61c612ee873314d252ca1f747c14a2f0161ba/tests%2Fui%2Fwildcard_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.stderr?ref=0ba61c612ee873314d252ca1f747c14a2f0161ba", "patch": "@@ -105,19 +105,19 @@ LL |             use super::*;\n    |                 ^^^^^^^^ help: try: `super::insidefoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:208:13\n+  --> $DIR/wildcard_imports.rs:207:13\n    |\n LL |         use super_imports::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:217:17\n+  --> $DIR/wildcard_imports.rs:216:17\n    |\n LL |             use super::super::*;\n    |                 ^^^^^^^^^^^^^^^ help: try: `super::super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:226:13\n+  --> $DIR/wildcard_imports.rs:225:13\n    |\n LL |         use super::super::super_imports::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `super::super::super_imports::foofoo`"}]}