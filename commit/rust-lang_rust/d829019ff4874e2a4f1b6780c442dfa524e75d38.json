{"sha": "d829019ff4874e2a4f1b6780c442dfa524e75d38", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4MjkwMTlmZjQ4NzRlMmE0ZjFiNjc4MGM0NDJkZmE1MjRlNzVkMzg=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-26T08:19:21Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-01-26T08:19:21Z"}, "message": "Make emitter handle DUMMY_SP correctly", "tree": {"sha": "1cb868f27360a3bc8157e8454572754682017171", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cb868f27360a3bc8157e8454572754682017171"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d829019ff4874e2a4f1b6780c442dfa524e75d38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d829019ff4874e2a4f1b6780c442dfa524e75d38", "html_url": "https://github.com/rust-lang/rust/commit/d829019ff4874e2a4f1b6780c442dfa524e75d38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d829019ff4874e2a4f1b6780c442dfa524e75d38/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1745153eaeeb0793876b36422bda6764483ceefb", "url": "https://api.github.com/repos/rust-lang/rust/commits/1745153eaeeb0793876b36422bda6764483ceefb", "html_url": "https://github.com/rust-lang/rust/commit/1745153eaeeb0793876b36422bda6764483ceefb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "51013d68930ea9a36f3770544aff4f8f2712b60c", "filename": "src/libsyntax/errors/emitter.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d829019ff4874e2a4f1b6780c442dfa524e75d38/src%2Flibsyntax%2Ferrors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d829019ff4874e2a4f1b6780c442dfa524e75d38/src%2Flibsyntax%2Ferrors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ferrors%2Femitter.rs?ref=d829019ff4874e2a4f1b6780c442dfa524e75d38", "patch": "@@ -10,7 +10,7 @@\n \n use self::Destination::*;\n \n-use codemap::{self, COMMAND_LINE_SP, COMMAND_LINE_EXPN, Pos, Span};\n+use codemap::{self, COMMAND_LINE_SP, COMMAND_LINE_EXPN, DUMMY_SP, Pos, Span};\n use diagnostics;\n \n use errors::{Level, RenderSpan, DiagnosticBuilder};\n@@ -109,8 +109,8 @@ impl Emitter for EmitterWriter {\n             lvl: Level) {\n         let error = match sp {\n             Some(COMMAND_LINE_SP) => self.emit_(FileLine(COMMAND_LINE_SP), msg, code, lvl),\n+            Some(DUMMY_SP) | None => print_diagnostic(&mut self.dst, \"\", lvl, msg, code),\n             Some(sp) => self.emit_(FullSpan(sp), msg, code, lvl),\n-            None => print_diagnostic(&mut self.dst, \"\", lvl, msg, code),\n         };\n \n         if let Err(e) = error {"}]}