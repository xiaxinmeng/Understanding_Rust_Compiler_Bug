{"sha": "f3aba5d1df3166c572c651b5cd5a85265f452b8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYWJhNWQxZGYzMTY2YzU3MmM2NTFiNWNkNWE4NTI2NWY0NTJiOGQ=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-13T07:52:40Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-13T08:33:32Z"}, "message": "Update Configurations.md", "tree": {"sha": "83facb248c0c2c1a3bb23985b3f8b2011ad0d409", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83facb248c0c2c1a3bb23985b3f8b2011ad0d409"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3aba5d1df3166c572c651b5cd5a85265f452b8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3aba5d1df3166c572c651b5cd5a85265f452b8d", "html_url": "https://github.com/rust-lang/rust/commit/f3aba5d1df3166c572c651b5cd5a85265f452b8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3aba5d1df3166c572c651b5cd5a85265f452b8d/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04f09c9d8548253bff2758a2b239302d574455ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/04f09c9d8548253bff2758a2b239302d574455ad", "html_url": "https://github.com/rust-lang/rust/commit/04f09c9d8548253bff2758a2b239302d574455ad"}], "stats": {"total": 480, "additions": 210, "deletions": 270}, "files": [{"sha": "433be8d9819504ed419c1a13091ec58cdb389a06", "filename": "Configurations.md", "status": "modified", "additions": 210, "deletions": 270, "changes": 480, "blob_url": "https://github.com/rust-lang/rust/blob/f3aba5d1df3166c572c651b5cd5a85265f452b8d/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/f3aba5d1df3166c572c651b5cd5a85265f452b8d/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=f3aba5d1df3166c572c651b5cd5a85265f452b8d", "patch": "@@ -5,7 +5,7 @@ Rustfmt is designed to be very configurable. You can create a TOML file called `\n A possible content of `rustfmt.toml` or `.rustfmt.toml` might look like this:\n \n ```toml\n-array_indent = \"Block\"\n+indent_style = \"Block\"\n array_width = 80\n reorder_imported_names = true\n ```\n@@ -22,7 +22,7 @@ Use this option to prevent a huge array from being vertically formatted.\n - **Default value**: `0`\n - **Possible values**: any positive integer\n \n-**Note:** A value of `0` results in [`array_indent`](#array_indent) being applied regardless of a line's width.\n+**Note:** A value of `0` results in [`indent_style`](#indent_style) being applied regardless of a line's width.\n \n #### `0` (default):\n \n@@ -50,13 +50,15 @@ let a = vec![\n ];\n ```\n \n-## `array_indent`\n+## `indent_style`\n \n-Indent on arrays\n+Indent on expressions or items.\n \n - **Default value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n \n+### Array\n+\n #### `\"Block\"` (default):\n \n ```rust\n@@ -83,22 +85,216 @@ let lorem = vec![\"ipsum\",\n                  \"elit\"];\n ```\n \n+### Control flow\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+if lorem_ipsum &&\n+    dolor_sit &&\n+    amet_consectetur\n+{\n+    // ...\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+if lorem_ipsum &&\n+   dolor_sit &&\n+   amet_consectetur {\n+    // ...\n+}\n+```\n+\n+See also: [`control_brace_style`](#control_brace_style).\n+\n+### Function arguments\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+fn lorem() {}\n+\n+fn lorem(ipsum: usize) {}\n+\n+fn lorem(\n+    ipsum: usize,\n+    dolor: usize,\n+    sit: usize,\n+    amet: usize,\n+    consectetur: usize,\n+    adipiscing: usize,\n+    elit: usize,\n+) {\n+    // body\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+fn lorem() {}\n+\n+fn lorem(ipsum: usize) {}\n+\n+fn lorem(ipsum: usize,\n+         dolor: usize,\n+         sit: usize,\n+         amet: usize,\n+         consectetur: usize,\n+         adipiscing: usize,\n+         elit: usize) {\n+    // body\n+}\n+```\n+\n+### Functaion calls\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+lorem(\n+    \"lorem\",\n+    \"ipsum\",\n+    \"dolor\",\n+    \"sit\",\n+    \"amet\",\n+    \"consectetur\",\n+    \"adipiscing\",\n+    \"elit\",\n+);\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+lorem(\"lorem\",\n+      \"ipsum\",\n+      \"dolor\",\n+      \"sit\",\n+      \"amet\",\n+      \"consectetur\",\n+      \"adipiscing\",\n+      \"elit\");\n+```\n+\n+### Generics\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+fn lorem<\n+    Ipsum: Eq = usize,\n+    Dolor: Eq = usize,\n+    Sit: Eq = usize,\n+    Amet: Eq = usize,\n+    Adipiscing: Eq = usize,\n+    Consectetur: Eq = usize,\n+    Elit: Eq = usize\n+>(\n+    ipsum: Ipsum,\n+    dolor: Dolor,\n+    sit: Sit,\n+    amet: Amet,\n+    adipiscing: Adipiscing,\n+    consectetur: Consectetur,\n+    elit: Elit,\n+) -> T {\n+    // body\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+fn lorem<Ipsum: Eq = usize,\n+         Dolor: Eq = usize,\n+         Sit: Eq = usize,\n+         Amet: Eq = usize,\n+         Adipiscing: Eq = usize,\n+         Consectetur: Eq = usize,\n+         Elit: Eq = usize>\n+    (ipsum: Ipsum,\n+     dolor: Dolor,\n+     sit: Sit,\n+     amet: Amet,\n+     adipiscing: Adipiscing,\n+     consectetur: Consectetur,\n+     elit: Elit)\n+     -> T {\n+    // body\n+}\n+```\n+\n+#### Struct\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+let lorem = Lorem {\n+    ipsum: dolor,\n+    sit: amet,\n+};\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+let lorem = Lorem { ipsum: dolor,\n+                    sit: amet, };\n+```\n+\n+See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`indent_style`](#indent_style).\n+\n+### Where predicates\n+\n+#### `\"Block\"` (default):\n+\n+```rust\n+fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n+where \n+    Ipsum: Eq,\n+    Dolor: Eq,\n+    Sit: Eq,\n+    Amet: Eq\n+{\n+    // body\n+}\n+```\n+\n+#### `\"Visual\"`:\n+\n+```rust\n+fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n+    where Ipsum: Eq,\n+          Dolor: Eq,\n+          Sit: Eq,\n+          Amet: Eq\n+{\n+    // body\n+}\n+```\n+\n+See also: [`where_density`](#where_density), [`where_layout`](#where_layout).\n+\n ## `array_width`\n \n Maximum width of an array literal before falling back to vertical formatting\n \n - **Default value**: `60`\n - **Possible values**: any positive integer\n \n-**Note:** A value of `0` results in [`array_indent`](#array_indent) being applied regardless of a line's width.\n+**Note:** A value of `0` results in [`indent_style`](#indent_style) being applied regardless of a line's width.\n \n #### Lines shorter than `array_width`:\n ```rust\n let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"elit\"];\n ```\n \n #### Lines longer than `array_width`:\n-See [`array_indent`](#array_indent).\n+See [`indent_style`](#indent_style).\n \n ## `attributes_on_same_line_as_field`\n \n@@ -414,36 +610,13 @@ let (lorem, ipsum, _, _) = (1, 2, 3, 4);\n let (lorem, ipsum, ..) = (1, 2, 3, 4);\n ```\n \n-## `control_style`\n+## `indent_style`\n \n Indent style for control flow statements\n \n - **Default value**: `\"Rfc\"`\n - **Possible values**: `\"Rfc\"`, `\"Legacy\"`\n \n-#### `\"Rfc\"` (default):\n-\n-```rust\n-if lorem_ipsum &&\n-    dolor_sit &&\n-    amet_consectetur\n-{\n-    // ...\n-}\n-```\n-\n-#### `\"Legacy\"`:\n-\n-```rust\n-if lorem_ipsum &&\n-   dolor_sit &&\n-   amet_consectetur {\n-    // ...\n-}\n-```\n-\n-See also: [`control_brace_style`](#control_brace_style).\n-\n ## `control_brace_style`\n \n Brace style for control flow constructs\n@@ -640,51 +813,6 @@ trait Lorem {\n }\n ```\n \n-## `fn_args_indent`\n-\n-Layout of function arguments and tuple structs\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-fn lorem() {}\n-\n-fn lorem(ipsum: usize) {}\n-\n-fn lorem(\n-    ipsum: usize,\n-    dolor: usize,\n-    sit: usize,\n-    amet: usize,\n-    consectetur: usize,\n-    adipiscing: usize,\n-    elit: usize,\n-) {\n-    // body\n-}\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-fn lorem() {}\n-\n-fn lorem(ipsum: usize) {}\n-\n-fn lorem(ipsum: usize,\n-         dolor: usize,\n-         sit: usize,\n-         amet: usize,\n-         consectetur: usize,\n-         adipiscing: usize,\n-         elit: usize) {\n-    // body\n-}\n-```\n-\n ## `fn_args_paren_newline`\n \n If function argument parenthesis goes on a newline\n@@ -784,41 +912,6 @@ where\n }\n ```\n \n-## `fn_call_indent`\n-\n-Indentation for function calls, etc.\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-lorem(\n-    \"lorem\",\n-    \"ipsum\",\n-    \"dolor\",\n-    \"sit\",\n-    \"amet\",\n-    \"consectetur\",\n-    \"adipiscing\",\n-    \"elit\",\n-);\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-lorem(\"lorem\",\n-      \"ipsum\",\n-      \"dolor\",\n-      \"sit\",\n-      \"amet\",\n-      \"consectetur\",\n-      \"adipiscing\",\n-      \"elit\");\n-```\n-\n ## `fn_call_width`\n \n Maximum width of the args of a function call before falling back to vertical formatting\n@@ -835,7 +928,7 @@ lorem(\"lorem\", \"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"el\n \n #### Function call longer than `fn_call_width`:\n \n-See [`fn_call_indent`](#fn_call_indent).\n+See [`indent_style`](#indent_style).\n \n ## `fn_empty_single_line`\n \n@@ -900,7 +993,7 @@ fn lorem(ipsum: Ipsum,\n \n ```\n \n-**Note**: This option only takes effect when `fn_call_indent` is set to `\"Visual\"`.\n+**Note**: This option only takes effect when `indent_style` is set to `\"Visual\"`.\n \n ## `fn_single_line`\n \n@@ -994,59 +1087,6 @@ let lorem =\n \n See also [`force_format_strings`](#force_format_strings), [`max_width`](#max_width).\n \n-## `generics_indent`\n-\n-Indentation of generics\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-fn lorem<\n-    Ipsum: Eq = usize,\n-    Dolor: Eq = usize,\n-    Sit: Eq = usize,\n-    Amet: Eq = usize,\n-    Adipiscing: Eq = usize,\n-    Consectetur: Eq = usize,\n-    Elit: Eq = usize\n->(\n-    ipsum: Ipsum,\n-    dolor: Dolor,\n-    sit: Sit,\n-    amet: Amet,\n-    adipiscing: Adipiscing,\n-    consectetur: Consectetur,\n-    elit: Elit,\n-) -> T {\n-    // body\n-}\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-fn lorem<Ipsum: Eq = usize,\n-         Dolor: Eq = usize,\n-         Sit: Eq = usize,\n-         Amet: Eq = usize,\n-         Adipiscing: Eq = usize,\n-         Consectetur: Eq = usize,\n-         Elit: Eq = usize>\n-    (ipsum: Ipsum,\n-     dolor: Dolor,\n-     sit: Sit,\n-     amet: Amet,\n-     adipiscing: Adipiscing,\n-     consectetur: Consectetur,\n-     elit: Elit)\n-     -> T {\n-    // body\n-}\n-```\n-\n ## `hard_tabs`\n \n Use tab characters for indentation, spaces for alignment\n@@ -1982,32 +2022,7 @@ let lorem = Lorem {\n };\n ```\n \n-See also: [`struct_lit_indent`](#struct_lit_indent), [`struct_lit_width`](#struct_lit_width).\n-\n-## `struct_lit_indent`\n-\n-Style of struct definition\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-let lorem = Lorem {\n-    ipsum: dolor,\n-    sit: amet,\n-};\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-let lorem = Lorem { ipsum: dolor,\n-                    sit: amet, };\n-```\n-\n-See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`struct_lit_indent`](#struct_lit_indent).\n+See also: [`indent_style`](#indent_style), [`struct_lit_width`](#struct_lit_width).\n \n ## `struct_lit_width`\n \n@@ -2024,9 +2039,9 @@ let lorem = Lorem { ipsum: dolor, sit: amet };\n ```\n \n #### Lines longer than `struct_lit_width`:\n-See [`struct_lit_indent`](#struct_lit_indent).\n+See [`indent_style`](#indent_style).\n \n-See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`struct_lit_indent`](#struct_lit_indent).\n+See also: [`struct_lit_multiline_style`](#struct_lit_multiline_style), [`indent_style`](#indent_style).\n \n ## `struct_variant_width`\n \n@@ -2308,7 +2323,7 @@ trait Lorem {\n \n **Note:** `where_density = \"Tall\"` currently produces the same output as `where_density = \"Vertical\"`.\n \n-See also: [`where_layout`](#where_layout), [`where_pred_indent`](#where_pred_indent), [`where_style`](#where_style).\n+See also: [`where_layout`](#where_layout), [`indent_style`](#indent_style).\n \n ## `where_layout`\n \n@@ -2389,82 +2404,7 @@ fn lorem<Ipsum, Dolor, Sit, Amet>(ipsum: Ipsum, dolor: Dolor, sit: Sit, amet: Am\n }\n ```\n \n-**Note**: This option only takes effect when `where_style` is set to `\"Legacy\"`.\n-\n-See also: [`where_density`](#where_density), [`where_pred_indent`](#where_pred_indent), [`where_style`](#where_style).\n-\n-## `where_pred_indent`\n-\n-Indentation style of a where predicate\n-\n-- **Default value**: `\"Visual\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Visual\"` (default):\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-    where Ipsum: Eq,\n-          Dolor: Eq,\n-          Sit: Eq,\n-          Amet: Eq\n-{\n-    // body\n-}\n-```\n-\n-#### `\"Block\"`:\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-    where Ipsum: Eq,\n-        Dolor: Eq,\n-        Sit: Eq,\n-        Amet: Eq\n-{\n-    // body\n-}\n-```\n-\n-**Note**: This option only takes effect when `where_style` is set to `\"Legacy\"`.\n-\n-See also: [`where_density`](#where_density), [`where_layout`](#where_layout), [`where_style`](#where_style).\n-\n-## `where_style`\n-\n-Overall strategy for where clauses\n-\n-- **Default value**: `\"Rfc\"`\n-- **Possible values**: `\"Rfc\"`, `\"Legacy\"`\n-\n-#### `\"Rfc\"` (default):\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-where\n-    Ipsum: Eq,\n-    Dolor: Eq,\n-    Sit: Eq,\n-    Amet: Eq,\n-{\n-    // body\n-}\n-```\n-\n-#### `\"Legacy\"`:\n-\n-```rust\n-fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-    where Ipsum: Eq,\n-          Dolor: Eq,\n-          Sit: Eq,\n-          Amet: Eq\n-{\n-    // body\n-}\n-```\n-\n-See also: [`where_density`](#where_density), [`where_layout`](#where_layout), [`where_pred_indent`](#where_pred_indent).\n+See also: [`where_density`](#where_density), [`indent_style`](#indent_style).\n \n ## `wrap_comments`\n "}]}