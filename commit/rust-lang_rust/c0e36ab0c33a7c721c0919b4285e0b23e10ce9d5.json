{"sha": "c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZTM2YWIwYzMzYTdjNzIxYzA5MTliNDI4NWUwYjIzZTEwY2U5ZDU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-19T12:08:06Z"}, "committer": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-07-19T12:08:06Z"}, "message": "Merge #1550\n\n1550: underline mutable bindings r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "d8628de91673d4d40b46ef62b994613f365f6b32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8628de91673d4d40b46ef62b994613f365f6b32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5", "html_url": "https://github.com/rust-lang/rust/commit/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "f209843e31af7f0e0212aa28ffec2efad2a70c6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f209843e31af7f0e0212aa28ffec2efad2a70c6f", "html_url": "https://github.com/rust-lang/rust/commit/f209843e31af7f0e0212aa28ffec2efad2a70c6f"}, {"sha": "e4188899962774713707629d4e15255e3bc9c85e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4188899962774713707629d4e15255e3bc9c85e", "html_url": "https://github.com/rust-lang/rust/commit/e4188899962774713707629d4e15255e3bc9c85e"}], "stats": {"total": 67, "additions": 37, "deletions": 30}, "files": [{"sha": "2ed3210697e43777acb8c10e54f3e26b8c94da6a", "filename": "editors/code/package.json", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5", "patch": "@@ -436,9 +436,9 @@\n                 \"id\": \"ralsp.variable.mut\",\n                 \"description\": \"Color for mutable variables\",\n                 \"defaults\": {\n-                    \"dark\": \"#4e65c9\",\n-                    \"light\": \"#263199\",\n-                    \"highContrast\": \"#4e65c9\"\n+                    \"dark\": \"#4EC9B0\",\n+                    \"light\": \"#267F99\",\n+                    \"highContrast\": \"#4EC9B0\"\n                 }\n             },\n             {"}, {"sha": "d21d8a06af52eeca7cfaf2d887db1df26262e83b", "filename": "editors/code/src/highlighting.ts", "status": "modified", "additions": 34, "deletions": 27, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "raw_url": "https://github.com/rust-lang/rust/raw/c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5/editors%2Fcode%2Fsrc%2Fhighlighting.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fhighlighting.ts?ref=c0e36ab0c33a7c721c0919b4285e0b23e10ce9d5", "patch": "@@ -28,37 +28,39 @@ export class Highlighter {\n         string,\n         vscode.TextEditorDecorationType\n     > {\n-        const colorContrib = (\n-            tag: string\n+        const decoration = (\n+            tag: string,\n+            textDecoration?: string\n         ): [string, vscode.TextEditorDecorationType] => {\n             const color = new vscode.ThemeColor('ralsp.' + tag);\n             const decor = vscode.window.createTextEditorDecorationType({\n-                color\n+                color,\n+                textDecoration\n             });\n             return [tag, decor];\n         };\n \n         const decorations: Iterable<\n             [string, vscode.TextEditorDecorationType]\n         > = [\n-            colorContrib('comment'),\n-            colorContrib('string'),\n-            colorContrib('keyword'),\n-            colorContrib('keyword.control'),\n-            colorContrib('keyword.unsafe'),\n-            colorContrib('function'),\n-            colorContrib('parameter'),\n-            colorContrib('constant'),\n-            colorContrib('type'),\n-            colorContrib('builtin'),\n-            colorContrib('text'),\n-            colorContrib('attribute'),\n-            colorContrib('literal'),\n-            colorContrib('macro'),\n-            colorContrib('variable'),\n-            colorContrib('variable.mut'),\n-            colorContrib('field'),\n-            colorContrib('module')\n+            decoration('comment'),\n+            decoration('string'),\n+            decoration('keyword'),\n+            decoration('keyword.control'),\n+            decoration('keyword.unsafe'),\n+            decoration('function'),\n+            decoration('parameter'),\n+            decoration('constant'),\n+            decoration('type'),\n+            decoration('builtin'),\n+            decoration('text'),\n+            decoration('attribute'),\n+            decoration('literal'),\n+            decoration('macro'),\n+            decoration('variable'),\n+            decoration('variable.mut', 'underline'),\n+            decoration('field'),\n+            decoration('module')\n         ];\n \n         return new Map<string, vscode.TextEditorDecorationType>(decorations);\n@@ -92,7 +94,10 @@ export class Highlighter {\n         }\n \n         const byTag: Map<string, vscode.Range[]> = new Map();\n-        const colorfulIdents: Map<string, vscode.Range[]> = new Map();\n+        const colorfulIdents: Map<\n+            string,\n+            [vscode.Range[], boolean]\n+        > = new Map();\n         const rainbowTime = Server.config.rainbowHighlightingOn;\n \n         for (const tag of this.decorations.keys()) {\n@@ -106,10 +111,11 @@ export class Highlighter {\n \n             if (rainbowTime && d.bindingHash) {\n                 if (!colorfulIdents.has(d.bindingHash)) {\n-                    colorfulIdents.set(d.bindingHash, []);\n+                    const mut = d.tag.endsWith('.mut');\n+                    colorfulIdents.set(d.bindingHash, [[], mut]);\n                 }\n                 colorfulIdents\n-                    .get(d.bindingHash)!\n+                    .get(d.bindingHash)![0]\n                     .push(\n                         Server.client.protocol2CodeConverter.asRange(d.range)\n                     );\n@@ -130,10 +136,11 @@ export class Highlighter {\n             editor.setDecorations(dec, ranges);\n         }\n \n-        for (const [hash, ranges] of colorfulIdents.entries()) {\n+        for (const [hash, [ranges, mut]] of colorfulIdents.entries()) {\n+            const textDecoration = mut ? 'underline' : undefined;\n             const dec = vscode.window.createTextEditorDecorationType({\n-                light: { color: fancify(hash, 'light') },\n-                dark: { color: fancify(hash, 'dark') }\n+                light: { color: fancify(hash, 'light'), textDecoration },\n+                dark: { color: fancify(hash, 'dark'), textDecoration }\n             });\n             editor.setDecorations(dec, ranges);\n         }"}]}