{"sha": "05a22a72e4574b2105c0a190d7a4bd4a84da16ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1YTIyYTcyZTQ1NzRiMjEwNWMwYTE5MGQ3YTRiZDRhODRkYTE2ZWU=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2018-12-10T22:37:50Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2018-12-10T22:37:50Z"}, "message": "Fix nits\n\nAdd comments explaining how we test this,\nand use a slice for debugging instead of a clone of the iterator.", "tree": {"sha": "e0329cfe9e06d4a45a29ecee10a2e178f5493e20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0329cfe9e06d4a45a29ecee10a2e178f5493e20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05a22a72e4574b2105c0a190d7a4bd4a84da16ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05a22a72e4574b2105c0a190d7a4bd4a84da16ee", "html_url": "https://github.com/rust-lang/rust/commit/05a22a72e4574b2105c0a190d7a4bd4a84da16ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05a22a72e4574b2105c0a190d7a4bd4a84da16ee/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5438465b68fd026f68308793c82a69b241788105", "url": "https://api.github.com/repos/rust-lang/rust/commits/5438465b68fd026f68308793c82a69b241788105", "html_url": "https://github.com/rust-lang/rust/commit/5438465b68fd026f68308793c82a69b241788105"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "fd93d389e432a90d940805a65a779367c1b0bb8a", "filename": "src/libstd/sys/windows/args.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/05a22a72e4574b2105c0a190d7a4bd4a84da16ee/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05a22a72e4574b2105c0a190d7a4bd4a84da16ee/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fargs.rs?ref=05a22a72e4574b2105c0a190d7a4bd4a84da16ee", "patch": "@@ -35,13 +35,20 @@ pub fn args() -> Args {\n     }\n }\n \n-/// Implements the Windows command-line argument parsing algorithm, described at\n+/// Implements the Windows command-line argument parsing algorithm.\n+///\n+/// Microsoft's documentation for the Windows CLI argument format can be found at\n /// <https://docs.microsoft.com/en-us/previous-versions//17w5ykft(v=vs.85)>.\n ///\n /// Windows includes a function to do this in shell32.dll,\n /// but linking with that DLL causes the process to be registered as a GUI application.\n /// GUI applications add a bunch of overhead, even if no windows are drawn. See\n /// <https://randomascii.wordpress.com/2018/12/03/a-not-called-function-can-cause-a-5x-slowdown/>.\n+///\n+/// This function was tested for equivalence to the shell32.dll implementation in\n+/// Windows 10 Pro v1803, using an exhaustive test suite available at\n+/// <https://gist.github.com/notriddle/dde431930c392e428055b2dc22e638f5> or\n+/// <https://paste.gg/p/anonymous/47d6ed5f5bd549168b1c69c799825223>.\n unsafe fn parse_lp_cmd_line<F: Fn() -> OsString>(lp_cmd_line: *const u16, exe_name: F)\n                                                  -> vec::IntoIter<OsString> {\n     const BACKSLASH: u16 = '\\\\' as u16;\n@@ -176,13 +183,13 @@ impl<'a> fmt::Debug for ArgsInnerDebug<'a> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.write_str(\"[\")?;\n         let mut first = true;\n-        for i in self.args.parsed_args_list.clone() {\n+        for i in self.args.parsed_args_list.as_slice() {\n             if !first {\n                 f.write_str(\", \")?;\n             }\n             first = false;\n \n-            fmt::Debug::fmt(&i, f)?;\n+            fmt::Debug::fmt(i, f)?;\n         }\n         f.write_str(\"]\")?;\n         Ok(())"}]}