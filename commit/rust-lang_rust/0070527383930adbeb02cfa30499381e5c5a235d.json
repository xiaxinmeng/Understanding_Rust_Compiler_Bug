{"sha": "0070527383930adbeb02cfa30499381e5c5a235d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNzA1MjczODM5MzBhZGJlYjAyY2ZhMzA0OTkzODFlNWM1YTIzNWQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-10T20:55:19Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2012-07-10T20:55:19Z"}, "message": "Pretty print vectors as ~[] instead of []/~. Closes #2863.", "tree": {"sha": "b17df33dfd5af1381a3dd02d8a612f4981b128c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b17df33dfd5af1381a3dd02d8a612f4981b128c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0070527383930adbeb02cfa30499381e5c5a235d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0070527383930adbeb02cfa30499381e5c5a235d", "html_url": "https://github.com/rust-lang/rust/commit/0070527383930adbeb02cfa30499381e5c5a235d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0070527383930adbeb02cfa30499381e5c5a235d/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14f19bdee4985503e1b8bf63950e77aabcb75541", "url": "https://api.github.com/repos/rust-lang/rust/commits/14f19bdee4985503e1b8bf63950e77aabcb75541", "html_url": "https://github.com/rust-lang/rust/commit/14f19bdee4985503e1b8bf63950e77aabcb75541"}], "stats": {"total": 132, "additions": 80, "deletions": 52}, "files": [{"sha": "edefe8681465be04c99467af12e10e6bb27d3240", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -378,8 +378,20 @@ fn print_type_ex(s: ps, &&ty: @ast::ty, print_colons: bool) {\n         word(s.s, constrs_str(cs, ty_constr_to_str));\n       }\n       ast::ty_vstore(t, v) {\n-        print_type(s, t);\n-        print_vstore(s, v);\n+        // If it is a vector, print it in prefix notation.\n+        // Someday it will all be like this.\n+        let is_fixed = alt v { ast::vstore_fixed(_) { true } _ { false } };\n+        alt t.node {\n+          ast::ty_vec(*) if !is_fixed {\n+            print_vstore(s, v);\n+            print_type(s, t);\n+          }\n+          _ {\n+            print_type(s, t);\n+            word(s.s, \"/\");\n+            print_vstore(s, v);\n+          }\n+        }\n       }\n       ast::ty_mac(_) {\n           fail \"print_type doesn't know how to print a ty_mac\";\n@@ -826,11 +838,11 @@ fn print_mac(s: ps, m: ast::mac) {\n \n fn print_vstore(s: ps, t: ast::vstore) {\n     alt t {\n-      ast::vstore_fixed(some(i)) { word(s.s, #fmt(\"/%u\", i)); }\n-      ast::vstore_fixed(none) { word(s.s, \"/_\"); }\n-      ast::vstore_uniq { word(s.s, \"/~\"); }\n-      ast::vstore_box { word(s.s, \"/@\"); }\n-      ast::vstore_slice(r) { word(s.s, \"/\"); print_region(s, r); }\n+      ast::vstore_fixed(some(i)) { word(s.s, #fmt(\"%u\", i)); }\n+      ast::vstore_fixed(none) { word(s.s, \"_\"); }\n+      ast::vstore_uniq { word(s.s, \"~\"); }\n+      ast::vstore_box { word(s.s, \"@\"); }\n+      ast::vstore_slice(r) { print_region(s, r); }\n     }\n }\n \n@@ -841,8 +853,20 @@ fn print_expr(s: ps, &&expr: @ast::expr) {\n     s.ann.pre(ann_node);\n     alt expr.node {\n       ast::expr_vstore(e, v) {\n-        print_expr(s, e);\n-        print_vstore(s, v);\n+        // If it is a vector, print it in prefix notation.\n+        // Someday it will all be like this.\n+        let is_fixed = alt v { ast::vstore_fixed(_) { true } _ { false } };\n+        alt e.node {\n+          ast::expr_vec(*) if !is_fixed {\n+            print_vstore(s, v);\n+            print_expr(s, e);\n+          }\n+          _ {\n+            print_expr(s, e);\n+            word(s.s, \"/\");\n+            print_vstore(s, v);\n+          }\n+        }\n       }\n       ast::expr_vec(exprs, mutbl) {\n         ibox(s, indent_unit);\n@@ -1121,7 +1145,7 @@ fn print_expr_parens_if_not_bot(s: ps, ex: @ast::expr) {\n       ast::expr_assign_op(_, _, _) | ast::expr_swap(_, _) |\n       ast::expr_log(_, _, _) | ast::expr_assert(_) |\n       ast::expr_call(_, _, true) |\n-      ast::expr_check(_, _) { true }\n+      ast::expr_check(_, _) | ast::expr_vstore(_, _) { true }\n       _ { false }\n     };\n     if parens { popen(s); }"}, {"sha": "4df6e3e9d9b3d01469c25c9357e7e978c1693a2a", "filename": "src/rustc/util/ppaux.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Frustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Frustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Futil%2Fppaux.rs?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -223,8 +223,12 @@ fn ty_to_str(cx: ctxt, typ: t) -> str {\n         parameterized(cx, base, substs.self_r, substs.tps)\n       }\n       ty_evec(mt, vs) {\n-        #fmt[\"[%s]/%s\", mt_to_str(cx, mt),\n-             vstore_to_str(cx, vs)]\n+        alt vs {\n+          ty::vstore_fixed(_) {\n+            #fmt[\"[%s]/%s\", mt_to_str(cx, mt), vstore_to_str(cx, vs)]\n+          }\n+          _ { #fmt[\"%s[%s]\", vstore_to_str(cx, vs), mt_to_str(cx, mt)] }\n+        }\n       }\n       ty_estr(vs) { #fmt[\"str/%s\", vstore_to_str(cx, vs)] }\n       ty_opaque_box { \"@?\" }"}, {"sha": "eb44ccf413c02868d2f8a259d5e40c345e4f836d", "filename": "src/test/compile-fail/fail-type-err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffail-type-err.rs?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -1,2 +1,2 @@\n-// error-pattern:expected `str` but found `[int]/~`\n+// error-pattern:expected `str` but found `~[int]`\n fn main() { fail ~[0i]; }"}, {"sha": "89f74d67771d30c75b52ac7350ce3542dd5eaaa4", "filename": "src/test/compile-fail/vec-field.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fcompile-fail%2Fvec-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fcompile-fail%2Fvec-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-field.rs?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:attempted access of field `some_field_name` on type `[int]/~`\n+// error-pattern:attempted access of field `some_field_name` on type `~[int]`\n // issue #367\n \n fn f() {"}, {"sha": "c6e78aef878f31d228830acec8c1770bb187a3b7", "filename": "src/test/pretty/vec-comments.pp", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fpretty%2Fvec-comments.pp", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fpretty%2Fvec-comments.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fvec-comments.pp?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -3,27 +3,27 @@\n // pp-exact:vec-comments.pp\n fn main() {\n     let v1 =\n-        [\n-         // Comment\n-         0,\n-         // Comment\n-         1,\n-         // Comment\n-         2]/~;\n+        ~[\n+          // Comment\n+          0,\n+          // Comment\n+          1,\n+          // Comment\n+          2];\n     let v2 =\n-        [0, // Comment\n-         1, // Comment\n-         2]/~; // Comment\n+        ~[0, // Comment\n+          1, // Comment\n+          2]; // Comment\n     let v3 =\n-        [\n-         /* Comment */\n-         0,\n-         /* Comment */\n-         1,\n-         /* Comment */\n-         2]/~;\n+        ~[\n+          /* Comment */\n+          0,\n+          /* Comment */\n+          1,\n+          /* Comment */\n+          2];\n     let v4 =\n-        [0, /* Comment */\n-         1, /* Comment */\n-         2]/~; /* Comment */\n+        ~[0, /* Comment */\n+          1, /* Comment */\n+          2]; /* Comment */\n }"}, {"sha": "c6e78aef878f31d228830acec8c1770bb187a3b7", "filename": "src/test/pretty/vec-comments.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fpretty%2Fvec-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fpretty%2Fvec-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fvec-comments.rs?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -4,26 +4,26 @@\n fn main() {\n     let v1 =\n         ~[\n-         // Comment\n-         0,\n-         // Comment\n-         1,\n-         // Comment\n-         2];\n+          // Comment\n+          0,\n+          // Comment\n+          1,\n+          // Comment\n+          2];\n     let v2 =\n         ~[0, // Comment\n-         1, // Comment\n-         2]; // Comment\n+          1, // Comment\n+          2]; // Comment\n     let v3 =\n         ~[\n-         /* Comment */\n-         0,\n-         /* Comment */\n-         1,\n-         /* Comment */\n-         2];\n+          /* Comment */\n+          0,\n+          /* Comment */\n+          1,\n+          /* Comment */\n+          2];\n     let v4 =\n         ~[0, /* Comment */\n-         1, /* Comment */\n-         2]; /* Comment */\n+          1, /* Comment */\n+          2]; /* Comment */\n }"}, {"sha": "f84e0f9d25ba84e7fa09e8f7b13794186ae13ccb", "filename": "src/test/pretty/vec-type.pp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fpretty%2Fvec-type.pp", "raw_url": "https://github.com/rust-lang/rust/raw/0070527383930adbeb02cfa30499381e5c5a235d/src%2Ftest%2Fpretty%2Fvec-type.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fvec-type.pp?ref=0070527383930adbeb02cfa30499381e5c5a235d", "patch": "@@ -1,5 +1,5 @@\n // pp-exact:vec-type.pp\n \n-fn f1(x: [int]/~) { }\n+fn f1(x: ~[int]) { }\n \n-fn g1() { f1([1, 2, 3]/~); }\n+fn g1() { f1(~[1, 2, 3]); }"}]}