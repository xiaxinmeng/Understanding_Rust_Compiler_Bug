{"sha": "808cba2251aba868a97b67ad7d5d7cecc9024f93", "node_id": "C_kwDOAAsO6NoAKDgwOGNiYTIyNTFhYmE4NjhhOTdiNjdhZDdkNWQ3Y2VjYzkwMjRmOTM", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-15T10:28:53Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-12-15T10:28:53Z"}, "message": "Extract Compiler creation from tests.rs", "tree": {"sha": "75c8a20aa93f3b02ee89554a05990766a3f29cdc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75c8a20aa93f3b02ee89554a05990766a3f29cdc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/808cba2251aba868a97b67ad7d5d7cecc9024f93", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/808cba2251aba868a97b67ad7d5d7cecc9024f93", "html_url": "https://github.com/rust-lang/rust/commit/808cba2251aba868a97b67ad7d5d7cecc9024f93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/808cba2251aba868a97b67ad7d5d7cecc9024f93/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b16dd916f02816afd9def6109b22bdbbefb5ee61", "url": "https://api.github.com/repos/rust-lang/rust/commits/b16dd916f02816afd9def6109b22bdbbefb5ee61", "html_url": "https://github.com/rust-lang/rust/commit/b16dd916f02816afd9def6109b22bdbbefb5ee61"}], "stats": {"total": 52, "additions": 26, "deletions": 26}, "files": [{"sha": "7a12c1a54d46cb4e1748940f64cbcde4c418488f", "filename": "build_system/tests.rs", "status": "modified", "additions": 6, "deletions": 25, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/808cba2251aba868a97b67ad7d5d7cecc9024f93/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808cba2251aba868a97b67ad7d5d7cecc9024f93/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=808cba2251aba868a97b67ad7d5d7cecc9024f93", "patch": "@@ -2,7 +2,7 @@ use super::build_sysroot;\n use super::config;\n use super::path::{Dirs, RelPath};\n use super::prepare::GitRepo;\n-use super::rustc_info::{get_cargo_path, get_wrapper_file_name};\n+use super::rustc_info::get_wrapper_file_name;\n use super::utils::{\n     hyperfine_command, spawn_and_wait, spawn_and_wait_with_input, CargoProject, Compiler,\n };\n@@ -507,11 +507,6 @@ impl TestRunner {\n         let jit_supported =\n             target_triple.contains(\"x86_64\") && is_native && !host_triple.contains(\"windows\");\n \n-        let rustc_clif =\n-            RelPath::DIST.to_path(&dirs).join(get_wrapper_file_name(\"rustc-clif\", \"bin\"));\n-        let rustdoc_clif =\n-            RelPath::DIST.to_path(&dirs).join(get_wrapper_file_name(\"rustdoc-clif\", \"bin\"));\n-\n         let mut rustflags = env::var(\"RUSTFLAGS\").ok().unwrap_or(\"\".to_string());\n         let mut runner = vec![];\n \n@@ -550,25 +545,11 @@ impl TestRunner {\n             rustflags = format!(\"{} -Clink-arg=-undefined -Clink-arg=dynamic_lookup\", rustflags);\n         }\n \n-        let host_compiler = Compiler {\n-            cargo: get_cargo_path(),\n-            rustc: rustc_clif.clone(),\n-            rustdoc: rustdoc_clif.clone(),\n-            rustflags: String::new(),\n-            rustdocflags: String::new(),\n-            triple: host_triple,\n-            runner: vec![],\n-        };\n-\n-        let target_compiler = Compiler {\n-            cargo: get_cargo_path(),\n-            rustc: rustc_clif,\n-            rustdoc: rustdoc_clif,\n-            rustflags: rustflags.clone(),\n-            rustdocflags: rustflags,\n-            triple: target_triple,\n-            runner,\n-        };\n+        let host_compiler = Compiler::clif_with_triple(&dirs, host_triple);\n+\n+        let mut target_compiler = Compiler::clif_with_triple(&dirs, target_triple);\n+        target_compiler.rustflags = rustflags;\n+        target_compiler.runner = runner;\n \n         Self { is_native, jit_supported, dirs, host_compiler, target_compiler }\n     }"}, {"sha": "995918ee1430be3a102878d733c8393778cd2b89", "filename": "build_system/utils.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/808cba2251aba868a97b67ad7d5d7cecc9024f93/build_system%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/808cba2251aba868a97b67ad7d5d7cecc9024f93/build_system%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Futils.rs?ref=808cba2251aba868a97b67ad7d5d7cecc9024f93", "patch": "@@ -5,7 +5,9 @@ use std::path::{Path, PathBuf};\n use std::process::{self, Command, Stdio};\n \n use super::path::{Dirs, RelPath};\n-use super::rustc_info::{get_cargo_path, get_host_triple, get_rustc_path, get_rustdoc_path};\n+use super::rustc_info::{\n+    get_cargo_path, get_host_triple, get_rustc_path, get_rustdoc_path, get_wrapper_file_name,\n+};\n \n pub(crate) struct Compiler {\n     pub(crate) cargo: PathBuf,\n@@ -41,6 +43,23 @@ impl Compiler {\n             runner: vec![],\n         }\n     }\n+\n+    pub(crate) fn clif_with_triple(dirs: &Dirs, triple: String) -> Compiler {\n+        let rustc_clif =\n+            RelPath::DIST.to_path(&dirs).join(get_wrapper_file_name(\"rustc-clif\", \"bin\"));\n+        let rustdoc_clif =\n+            RelPath::DIST.to_path(&dirs).join(get_wrapper_file_name(\"rustdoc-clif\", \"bin\"));\n+\n+        Compiler {\n+            cargo: get_cargo_path(),\n+            rustc: rustc_clif.clone(),\n+            rustdoc: rustdoc_clif.clone(),\n+            rustflags: String::new(),\n+            rustdocflags: String::new(),\n+            triple,\n+            runner: vec![],\n+        }\n+    }\n }\n \n pub(crate) struct CargoProject {"}]}