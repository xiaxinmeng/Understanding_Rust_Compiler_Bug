{"sha": "765bc9064f9b38ae227a2c61a8ed34f67f0afd0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2NWJjOTA2NGY5YjM4YWUyMjdhMmM2MWE4ZWQzNGY2N2YwYWZkMGY=", "commit": {"author": {"name": "Palmer Cox", "email": "p@lmercox.com", "date": "2013-12-12T02:37:45Z"}, "committer": {"name": "\u201cPalmer", "email": "pcox@intelligent.net", "date": "2013-12-21T01:40:16Z"}, "message": "Implement size_hint() for ByRef iterator", "tree": {"sha": "09f812c08b990ce979cade7300ef995c08f0bb8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09f812c08b990ce979cade7300ef995c08f0bb8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/765bc9064f9b38ae227a2c61a8ed34f67f0afd0f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/765bc9064f9b38ae227a2c61a8ed34f67f0afd0f", "html_url": "https://github.com/rust-lang/rust/commit/765bc9064f9b38ae227a2c61a8ed34f67f0afd0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/765bc9064f9b38ae227a2c61a8ed34f67f0afd0f/comments", "author": null, "committer": null, "parents": [{"sha": "2c539d4eecec3c63f878a3798e0ea4df79b46f19", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c539d4eecec3c63f878a3798e0ea4df79b46f19", "html_url": "https://github.com/rust-lang/rust/commit/2c539d4eecec3c63f878a3798e0ea4df79b46f19"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "f16e9b5392977ded3d473e5ceb7f5a8d8c48cd5e", "filename": "src/libstd/iter.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/765bc9064f9b38ae227a2c61a8ed34f67f0afd0f/src%2Flibstd%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/765bc9064f9b38ae227a2c61a8ed34f67f0afd0f/src%2Flibstd%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiter.rs?ref=765bc9064f9b38ae227a2c61a8ed34f67f0afd0f", "patch": "@@ -795,7 +795,8 @@ pub struct ByRef<'a, T> {\n impl<'a, A, T: Iterator<A>> Iterator<A> for ByRef<'a, T> {\n     #[inline]\n     fn next(&mut self) -> Option<A> { self.iter.next() }\n-    // FIXME: #9629 we cannot implement &self methods like size_hint on ByRef\n+    #[inline]\n+    fn size_hint(&self) -> (uint, Option<uint>) { self.iter.size_hint() }\n }\n \n impl<'a, A, T: DoubleEndedIterator<A>> DoubleEndedIterator<A> for ByRef<'a, T> {"}]}