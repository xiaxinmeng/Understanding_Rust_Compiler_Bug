{"sha": "331124a42ae94af076c6f2b5c72a2d7e3d950cf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMTEyNGE0MmFlOTRhZjA3NmM2ZjJiNWM3MmEyZDdlM2Q5NTBjZjk=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-12-17T06:14:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-12-17T06:14:20Z"}, "message": "Merge pull request #2228 from CAD97/patch-1\n\nAdd configuration stability information", "tree": {"sha": "c403e4d5528669ca7e9c8def5aaf43c57034b082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c403e4d5528669ca7e9c8def5aaf43c57034b082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/331124a42ae94af076c6f2b5c72a2d7e3d950cf9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaNgs8CRBK7hj4Ov3rIwAAdHIIAIcZQvgNFq1be0+3hw7YH7vg\n2uri82xPWw1HPsx0/Z5+A+2FM7NMkKjZBoXIYzUXhPyueByfol372N2/CxnZ/rY/\ndooFSkbSRE0uzA0KVGNT+1ZuE+jyUL+waGK2aDO/fVmqAN183sPtUd3fEY/Ne39+\ny0eEVxkdxwJ6mRMKZt3WOMHlbJqShpleI1UZDzmILPSxLBQi/LnzfmbmMWoBloxs\n4PHlZQ8UpXBwSj7zk8edF1Gs1IQKemDN/07uBI3e2rMUhaV3LVv2v9Wy0F+LQg7U\nhnfP/xccMuLB/BMHXnG78+72k0Z/HFhU7XD1GRsSX0usGr7mN5daNGDLQGwtsZk=\n=vZ1M\n-----END PGP SIGNATURE-----\n", "payload": "tree c403e4d5528669ca7e9c8def5aaf43c57034b082\nparent 7a4daf0d415cf5760c8133d6d643b235de7583f1\nparent dcd6ed7d5eb9329548d849c4cfe5277636cb81da\nauthor Nick Cameron <nrc@ncameron.org> 1513491260 +1300\ncommitter GitHub <noreply@github.com> 1513491260 +1300\n\nMerge pull request #2228 from CAD97/patch-1\n\nAdd configuration stability information"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/331124a42ae94af076c6f2b5c72a2d7e3d950cf9", "html_url": "https://github.com/rust-lang/rust/commit/331124a42ae94af076c6f2b5c72a2d7e3d950cf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/331124a42ae94af076c6f2b5c72a2d7e3d950cf9/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a4daf0d415cf5760c8133d6d643b235de7583f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a4daf0d415cf5760c8133d6d643b235de7583f1", "html_url": "https://github.com/rust-lang/rust/commit/7a4daf0d415cf5760c8133d6d643b235de7583f1"}, {"sha": "dcd6ed7d5eb9329548d849c4cfe5277636cb81da", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcd6ed7d5eb9329548d849c4cfe5277636cb81da", "html_url": "https://github.com/rust-lang/rust/commit/dcd6ed7d5eb9329548d849c4cfe5277636cb81da"}], "stats": {"total": 91, "additions": 58, "deletions": 33}, "files": [{"sha": "6f0ff572acce70243b3f4904b588241183d920d0", "filename": "Configurations.md", "status": "modified", "additions": 54, "deletions": 33, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/331124a42ae94af076c6f2b5c72a2d7e3d950cf9/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/331124a42ae94af076c6f2b5c72a2d7e3d950cf9/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=331124a42ae94af076c6f2b5c72a2d7e3d950cf9", "patch": "@@ -9,6 +9,10 @@ indent_style = \"Block\"\n reorder_imported_names = true\n ```\n \n+Each configuration option is either stable or unstable.\n+Stable options can be used directly, while unstable options are opt-in.\n+To enable unstable options, set `unstable_features = true` in `rustfmt.toml` or pass `--unstable-options` to rustfmt.\n+\n # Configuration Options\n \n Below you find a detailed visual guide on all the supported configuration options of rustfmt:\n@@ -20,6 +24,7 @@ Indent on expressions or items.\n \n - **Default value**: `\"Block\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n+- **Stable**: No\n \n ### Array\n \n@@ -218,7 +223,7 @@ See also: [`struct_lit_single_line`](#struct_lit_single_line), [`indent_style`](\n \n ```rust\n fn lorem<Ipsum, Dolor, Sit, Amet>() -> T\n-where \n+where\n     Ipsum: Eq,\n     Dolor: Eq,\n     Sit: Eq,\n@@ -248,6 +253,7 @@ Try to put attributes on the same line as fields and variants\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -293,6 +299,7 @@ Whether to use different formatting for items and expressions if they satisfy a\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -354,6 +361,7 @@ Where to put a binary operator when a binary expression goes multiline.\n \n - **Default value**: `\"Front\"`\n - **Possible values**: `\"Front\"`, `\"Back\"`\n+- **Stable**: No\n \n #### `\"Front\"` (default):\n \n@@ -385,44 +393,13 @@ let range = aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa..\n     bbbbbbbbbbbbbbbbbbbbbbbbbbbbb;\n ```\n \n-## `chain_indent`\n-\n-Indentation of chain\n-\n-- **Default value**: `\"Block\"`\n-- **Possible values**: `\"Block\"`, `\"Visual\"`\n-\n-#### `\"Block\"` (default):\n-\n-```rust\n-let lorem = ipsum\n-    .dolor()\n-    .sit()\n-    .amet()\n-    .consectetur()\n-    .adipiscing()\n-    .elit();\n-```\n-\n-#### `\"Visual\"`:\n-\n-```rust\n-let lorem = ipsum.dolor()\n-                 .sit()\n-                 .amet()\n-                 .consectetur()\n-                 .adipiscing()\n-                 .elit();\n-```\n-\n-\n-\n ## `combine_control_expr`\n \n Combine control expressions with function calls.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -530,6 +507,7 @@ Maximum length of comments. No effect unless`wrap_comments = true`.\n \n - **Default value**: `80`\n - **Possible values**: any positive integer\n+- **Stable**: No\n \n **Note:** A value of `0` results in [`wrap_comments`](#wrap_comments) being applied regardless of a line's width.\n \n@@ -552,6 +530,7 @@ Replace strings of _ wildcards by a single .. in tuple patterns\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -571,6 +550,7 @@ Brace style for control flow constructs\n \n - **Default value**: `\"AlwaysSameLine\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"AlwaysSameLine\"`, `\"ClosingNextLine\"`\n+- **Stable**: No\n \n #### `\"AlwaysSameLine\"` (default):\n \n@@ -612,13 +592,15 @@ Don't reformat anything\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n ## `error_on_line_overflow`\n \n Error if unable to get all lines within `max_width`\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n See also [`max_width`](#max_width).\n \n@@ -628,6 +610,7 @@ Error if unable to get all comment lines within `comment_width`.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n See also [`comment_width`](#comment_width).\n \n@@ -637,6 +620,7 @@ Argument density in functions\n \n - **Default value**: `\"Tall\"`\n - **Possible values**: `\"Compressed\"`, `\"Tall\"`, `\"Vertical\"`\n+- **Stable**: No\n \n #### `\"Tall\"` (default):\n \n@@ -739,6 +723,7 @@ Brace style for items\n \n - **Default value**: `\"SameLineWhere\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"PreferSameLine\"`, `\"SameLineWhere\"`\n+- **Stable**: No\n \n ### Functions\n \n@@ -851,6 +836,7 @@ Put empty-body functions and impls on a single line\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -879,6 +865,7 @@ Put single-expression functions on a single line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -913,6 +900,7 @@ To force single line where layout\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -943,6 +931,7 @@ Always print the abi for extern items\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n **Note:** Non-\"C\" ABIs are always printed. If `false` then \"C\" is removed.\n \n@@ -968,6 +957,7 @@ Format string literals where necessary\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -991,6 +981,7 @@ Use tab characters for indentation, spaces for alignment\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1017,6 +1008,7 @@ Indent style of imports\n \n - **Default Value**: `\"Visual\"`\n - **Possible values**: `\"Block\"`, `\"Visual\"`\n+- **Stable**: No\n \n #### `\"Visual\"` (default):\n \n@@ -1044,6 +1036,7 @@ Item layout inside a imports block\n \n - **Default value**: \"Mixed\"\n - **Possible values**: \"Horizontal\", \"HorizontalVertical\", \"Mixed\", \"Vertical\"\n+- **Stable**: No\n \n #### `\"Mixed\"` (default):\n \n@@ -1099,6 +1092,7 @@ Put a trailing comma after a block based match arm (non-block arms are not affec\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1130,6 +1124,7 @@ Maximum width of each line\n \n - **Default value**: `100`\n - **Possible values**: any positive integer\n+- **Stable**: Yes\n \n See also [`error_on_line_overflow`](#error_on_line_overflow).\n \n@@ -1139,6 +1134,7 @@ Merge multiple derives into a single one.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `true` (default):\n \n@@ -1162,6 +1158,7 @@ Force multiline closure and match arm bodies to be wrapped in a block\n \n - **Default value**: `false`\n - **Possible values**: `false`, `true`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1207,13 +1204,15 @@ Unix or Windows line endings\n \n - **Default value**: `\"Unix\"`\n - **Possible values**: `\"Native\"`, `\"Unix\"`, `\"Windows\"`\n+- **Stable**: Yes\n \n ## `normalize_comments`\n \n Convert /* */ comments to // comments where possible\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1241,6 +1240,7 @@ Reorder lists of names in import statements alphabetically\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1262,6 +1262,7 @@ Reorder import statements alphabetically\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1289,6 +1290,7 @@ Reorder import statements in group\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n **Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n \n@@ -1324,6 +1326,7 @@ Reorder `extern crate` statements alphabetically\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1351,6 +1354,7 @@ Reorder `extern crate` statements in group\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n **Note:** This option takes effect only when [`reorder_imports`](#reorder_imports) is set to `true`.\n \n@@ -1386,6 +1390,7 @@ Report `TODO` items in comments.\n \n - **Default value**: `\"Never\"`\n - **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n+- **Stable**: No\n \n Warns about any comments containing `TODO` in them when set to `\"Always\"`. If\n it contains a `#X` (with `X` being a number) in parentheses following the\n@@ -1399,6 +1404,7 @@ Report `FIXME` items in comments.\n \n - **Default value**: `\"Never\"`\n - **Possible values**: `\"Always\"`, `\"Unnumbered\"`, `\"Never\"`\n+- **Stable**: No\n \n Warns about any comments containing `FIXME` in them when set to `\"Always\"`. If\n it contains a `#X` (with `X` being a number) in parentheses following the\n@@ -1413,13 +1419,15 @@ Don't reformat out of line modules\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n ## `space_after_colon`\n \n Leave a space after the colon.\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1451,6 +1459,7 @@ Leave a space before the colon.\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1482,6 +1491,7 @@ The maximum diff of width between struct fields to be aligned with each other.\n \n - **Default value** : 0\n - **Possible values**: any positive integer\n+- **Stable**: No\n \n #### `0` (default):\n \n@@ -1509,6 +1519,7 @@ Put spaces around the .. and ... range operators\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1528,6 +1539,7 @@ Put spaces within non-empty generic arguments, parentheses, and square brackets\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1569,6 +1581,7 @@ Put small struct literals on a single line\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1594,6 +1607,7 @@ Number of spaces per tab\n \n - **Default value**: `4`\n - **Possible values**: any positive integer\n+- **Stable**: Yes\n \n #### `4` (default):\n \n@@ -1626,6 +1640,7 @@ How to handle trailing commas for lists\n \n - **Default value**: `\"Vertical\"`\n - **Possible values**: `\"Always\"`, `\"Never\"`, `\"Vertical\"`\n+- **Stable**: No\n \n #### `\"Vertical\"` (default):\n \n@@ -1677,6 +1692,7 @@ Add trailing semicolon after break, continue and return\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n ```rust\n@@ -1698,6 +1714,7 @@ Determines if `+` or `=` are wrapped in spaces in the punctuation of types\n \n - **Default value**: `\"Wide\"`\n - **Possible values**: `\"Compressed\"`, `\"Wide\"`\n+- **Stable**: No\n \n #### `\"Wide\"` (default):\n \n@@ -1721,6 +1738,7 @@ Replace uses of the try! macro by the ? shorthand\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `false` (default):\n \n@@ -1741,6 +1759,7 @@ Break comments to fit on the line\n \n - **Default value**: `false`\n - **Possible values**: `true`, `false`\n+- **Stable**: Yes\n \n #### `false` (default):\n \n@@ -1764,6 +1783,7 @@ Wrap the body of arms in blocks when it does not fit on the same line with the p\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n+- **Stable**: No\n \n #### `true` (default):\n \n@@ -1794,3 +1814,4 @@ What Write Mode to use when none is supplied: Replace, Overwrite, Display, Diff,\n \n - **Default value**: `\"Overwrite\"`\n - **Possible values**: `\"Checkstyle\"`, `\"Coverage\"`, `\"Diff\"`, `\"Display\"`, `\"Overwrite\"`, `\"Plain\"`, `\"Replace\"`\n+- **Stable**: No"}, {"sha": "6604725ba76cf6d7430cadf0731a4002c3b4a43e", "filename": "README.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/331124a42ae94af076c6f2b5c72a2d7e3d950cf9/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/331124a42ae94af076c6f2b5c72a2d7e3d950cf9/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=331124a42ae94af076c6f2b5c72a2d7e3d950cf9", "patch": "@@ -193,6 +193,10 @@ By default, Rustfmt uses a style which conforms to the [Rust style guide][style\n guide] that has been formalized through the [style RFC\n process][fmt rfcs].\n \n+Configuration options are either stable or unstable. Stable options can always\n+be used, while unstable ones are only available on a nightly toolchain, and opt-in.\n+See [Configurations.md](Configurations.md) for details.\n+\n \n ## Tips\n "}]}