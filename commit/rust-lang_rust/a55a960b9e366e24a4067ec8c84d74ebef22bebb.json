{"sha": "a55a960b9e366e24a4067ec8c84d74ebef22bebb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NWE5NjBiOWUzNjZlMjRhNDA2N2VjOGM4NGQ3NGViZWYyMmJlYmI=", "commit": {"author": {"name": "Martin Carton", "email": "cartonmartin+github@gmail.com", "date": "2016-06-10T18:25:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-10T18:25:25Z"}, "message": "Merge pull request #1004 from Manishearth/rustup\n\nRustup to *1.11.0-nightly (7d2f75a95 2016-06-09)*", "tree": {"sha": "ca32217f4d0ee41fb46fce2adcf692a6607b93d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca32217f4d0ee41fb46fce2adcf692a6607b93d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a55a960b9e366e24a4067ec8c84d74ebef22bebb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a55a960b9e366e24a4067ec8c84d74ebef22bebb", "html_url": "https://github.com/rust-lang/rust/commit/a55a960b9e366e24a4067ec8c84d74ebef22bebb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a55a960b9e366e24a4067ec8c84d74ebef22bebb/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91d922aeb88767ac17ed8caf4a6e2b997da1a2fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/91d922aeb88767ac17ed8caf4a6e2b997da1a2fc", "html_url": "https://github.com/rust-lang/rust/commit/91d922aeb88767ac17ed8caf4a6e2b997da1a2fc"}, {"sha": "17dd0da9da6eebbb83856bd6a76ac767be0217f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/17dd0da9da6eebbb83856bd6a76ac767be0217f0", "html_url": "https://github.com/rust-lang/rust/commit/17dd0da9da6eebbb83856bd6a76ac767be0217f0"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "81102a900e5cf6f5763f44bdda404c42012fab0a", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -2,6 +2,7 @@\n All notable changes to this project will be documented in this file.\n \n ## 0.0.76 \u2014 TBD\n+* Rustup to *rustc 1.11.0-nightly (7d2f75a95 2016-06-09)*\n * `cargo clippy` now automatically defines the `clippy` feature\n \n ## 0.0.75 \u2014 2016-06-08"}, {"sha": "60862865b43f48d3ee133771379f024a87833625", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.75\"\n+version = \"0.0.76\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -25,7 +25,7 @@ test = false\n [dependencies]\n regex_macros = { version = \"0.1.33\", optional = true }\n # begin automatic update\n-clippy_lints = { version = \"0.0.75\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.76\", path = \"clippy_lints\" }\n # end automatic update\n \n [dev-dependencies]"}, {"sha": "2f748d1ec3cb45d4dcf84639aa0043057361c527", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.75\"\n+version = \"0.0.76\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "268497f99d4483b37f7e7a8a04a03eee763ced88", "filename": "clippy_lints/src/drop_ref.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fdrop_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fdrop_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_ref.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -35,7 +35,7 @@ impl LateLintPass for DropRefPass {\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n         if let ExprCall(ref path, ref args) = expr.node {\n             if let ExprPath(None, _) = path.node {\n-                let def_id = cx.tcx.def_map.borrow()[&path.id].def_id();\n+                let def_id = cx.tcx.expect_def(path.id).def_id();\n                 if match_def_path(cx, def_id, &paths::DROP) {\n                     if args.len() != 1 {\n                         return;"}, {"sha": "5a4185ec63b9dd71c3dbcdc37381f37c184ef5eb", "filename": "clippy_lints/src/enum_glob_use.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fenum_glob_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_glob_use.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -44,14 +44,14 @@ impl EnumGlobUse {\n         if let ItemUse(ref item_use) = item.node {\n             if let ViewPath_::ViewPathGlob(_) = item_use.node {\n                 if let Some(def) = cx.tcx.def_map.borrow().get(&item.id) {\n-                    if let Some(node_id) = cx.tcx.map.as_local_node_id(def.def_id()) {\n+                    if let Some(node_id) = cx.tcx.map.as_local_node_id(def.full_def().def_id()) {\n                         if let Some(NodeItem(it)) = cx.tcx.map.find(node_id) {\n                             if let ItemEnum(..) = it.node {\n                                 span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");\n                             }\n                         }\n                     } else {\n-                        let child = cx.sess().cstore.item_children(def.def_id());\n+                        let child = cx.sess().cstore.item_children(def.full_def().def_id());\n                         if let Some(child) = child.first() {\n                             if let DefLike::DlDef(Def::Variant(..)) = child.def {\n                                 span_lint(cx, ENUM_GLOB_USE, item.span, \"don't use glob imports for enum variants\");"}, {"sha": "0ed3248228fc1da0cfa7484f50906aa5eb0fcf59", "filename": "clippy_lints/src/let_if_seq.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Flet_if_seq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Flet_if_seq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_if_seq.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -69,15 +69,15 @@ impl LateLintPass for LetIfSeq {\n                 let Some(def) = cx.tcx.def_map.borrow().get(&decl.pat.id),\n                 let hir::StmtExpr(ref if_, _) = expr.node,\n                 let hir::ExprIf(ref cond, ref then, ref else_) = if_.node,\n-                !used_in_expr(cx, def.def_id(), cond),\n-                let Some(value) = check_assign(cx, def.def_id(), then),\n-                !used_in_expr(cx, def.def_id(), value),\n+                !used_in_expr(cx, def.full_def().def_id(), cond),\n+                let Some(value) = check_assign(cx, def.full_def().def_id(), then),\n+                !used_in_expr(cx, def.full_def().def_id(), value),\n             ], {\n                 let span = codemap::mk_sp(stmt.span.lo, if_.span.hi);\n \n                 let (default_multi_stmts, default) = if let Some(ref else_) = *else_ {\n                     if let hir::ExprBlock(ref else_) = else_.node {\n-                        if let Some(default) = check_assign(cx, def.def_id(), else_) {\n+                        if let Some(default) = check_assign(cx, def.full_def().def_id(), else_) {\n                             (else_.stmts.len() > 1, default)\n                         } else if let Some(ref default) = decl.init {\n                             (true, &**default)\n@@ -139,7 +139,7 @@ impl<'a, 'tcx, 'v> hir::intravisit::Visitor<'v> for UsedVisitor<'a, 'tcx> {\n         if_let_chain! {[\n             let hir::ExprPath(None, _) = expr.node,\n             let Some(def) = self.cx.tcx.def_map.borrow().get(&expr.id),\n-            self.id == def.def_id(),\n+            self.id == def.full_def().def_id(),\n         ], {\n             self.used = true;\n             return;\n@@ -156,7 +156,7 @@ fn check_assign<'e>(cx: &LateContext, decl: hir::def_id::DefId, block: &'e hir::\n         let hir::ExprAssign(ref var, ref value) = expr.node,\n         let hir::ExprPath(None, _) = var.node,\n         let Some(def) = cx.tcx.def_map.borrow().get(&var.id),\n-        decl == def.def_id(),\n+        decl == def.full_def().def_id(),\n     ], {\n         let mut v = UsedVisitor {\n             cx: cx,"}, {"sha": "79a7143636824a5aeefff20393632eeba0ad62a4", "filename": "clippy_lints/src/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_forget.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -27,7 +27,7 @@ impl LateLintPass for MemForget {\n     fn check_expr(&mut self, cx: &LateContext, e: &Expr) {\n         if let ExprCall(ref path_expr, ref args) = e.node {\n             if let ExprPath(None, _) = path_expr.node {\n-                let def_id = cx.tcx.def_map.borrow()[&path_expr.id].def_id();\n+                let def_id = cx.tcx.expect_def(path_expr.id).def_id();\n                 if match_def_path(cx, def_id, &paths::MEM_FORGET) {\n                     let forgot_ty = cx.tcx.expr_ty(&args[0]);\n "}, {"sha": "a88324aaf50ff6708d299db2817ce95d3be2b89a", "filename": "clippy_lints/src/minmax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fminmax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fminmax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fminmax.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -55,7 +55,7 @@ enum MinMax {\n fn min_max<'a>(cx: &LateContext, expr: &'a Expr) -> Option<(MinMax, Constant, &'a Expr)> {\n     if let ExprCall(ref path, ref args) = expr.node {\n         if let ExprPath(None, _) = path.node {\n-            let def_id = cx.tcx.def_map.borrow()[&path.id].def_id();\n+            let def_id = cx.tcx.expect_def(path.id).def_id();\n \n             if match_def_path(cx, def_id, &paths::CMP_MIN) {\n                 fetch_const(args, MinMax::Min)"}, {"sha": "5f912366770c4b2a2d9b4d010bfa5e2b8058cf13", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -155,8 +155,8 @@ enum Expression {\n \n fn fetch_bool_block(block: &Block) -> Expression {\n     match (&*block.stmts, block.expr.as_ref()) {\n-        ([], Some(e)) => fetch_bool_expr(&**e),\n-        ([ref e], None) => {\n+        (&[], Some(e)) => fetch_bool_expr(&**e),\n+        (&[ref e], None) => {\n             if let StmtSemi(ref e, _) = e.node {\n                 if let ExprRet(_) = e.node {\n                     fetch_bool_expr(&**e)"}, {"sha": "c2c37fcf68665378fafdc0b5a77db26831e378e5", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -103,7 +103,7 @@ impl LateLintPass for RegexPass {\n             args.len() == 1,\n             let Some(def) = cx.tcx.def_map.borrow().get(&fun.id),\n         ], {\n-            let def_id = def.def_id();\n+            let def_id = def.full_def().def_id();\n             if match_def_path(cx, def_id, &paths::REGEX_NEW) ||\n                match_def_path(cx, def_id, &paths::REGEX_BUILDER_NEW) {\n                 check_regex(cx, &args[0], true);"}, {"sha": "5d3f27b074b202dc25718e5e8117234fb92232af", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -60,7 +60,7 @@ impl LateLintPass for Transmute {\n     fn check_expr(&mut self, cx: &LateContext, e: &Expr) {\n         if let ExprCall(ref path_expr, ref args) = e.node {\n             if let ExprPath(None, _) = path_expr.node {\n-                let def_id = cx.tcx.def_map.borrow()[&path_expr.id].def_id();\n+                let def_id = cx.tcx.expect_def(path_expr.id).def_id();\n \n                 if match_def_path(cx, def_id, &paths::TRANSMUTE) {\n                     let from_ty = cx.tcx.expr_ty(&args[0]);"}, {"sha": "83e2c1b549c145ecaa3c0ce1ff5307bf6cfe93b6", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a55a960b9e366e24a4067ec8c84d74ebef22bebb/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=a55a960b9e366e24a4067ec8c84d74ebef22bebb", "patch": "@@ -56,23 +56,23 @@ impl LateLintPass for TypePass {\n         }\n         if let Some(did) = cx.tcx.def_map.borrow().get(&ast_ty.id) {\n             if let def::Def::Struct(..) = did.full_def() {\n-                if Some(did.def_id()) == cx.tcx.lang_items.owned_box() {\n+                if Some(did.full_def().def_id()) == cx.tcx.lang_items.owned_box() {\n                     if_let_chain! {[\n                         let TyPath(_, ref path) = ast_ty.node,\n                         let Some(ref last) = path.segments.last(),\n                         let PathParameters::AngleBracketedParameters(ref ag) = last.parameters,\n                         let Some(ref vec) = ag.types.get(0),\n                         let Some(did) = cx.tcx.def_map.borrow().get(&vec.id),\n                         let def::Def::Struct(..) = did.full_def(),\n-                        match_def_path(cx, did.def_id(), &paths::VEC),\n+                        match_def_path(cx, did.full_def().def_id(), &paths::VEC),\n                     ], {\n                         span_help_and_lint(cx,\n                                            BOX_VEC,\n                                            ast_ty.span,\n                                            \"you seem to be trying to use `Box<Vec<T>>`. Consider using just `Vec<T>`\",\n                                            \"`Vec<T>` is already on the heap, `Box<Vec<T>>` makes an extra allocation.\");\n                     }}\n-                } else if match_def_path(cx, did.def_id(), &paths::LINKED_LIST) {\n+                } else if match_def_path(cx, did.full_def().def_id(), &paths::LINKED_LIST) {\n                     span_help_and_lint(cx,\n                                        LINKEDLIST,\n                                        ast_ty.span,"}]}