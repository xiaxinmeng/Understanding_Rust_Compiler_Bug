{"sha": "bf0b18e91005d22081b5122c4dba8ee7f1c108d5", "node_id": "C_kwDOAAsO6NoAKGJmMGIxOGU5MTAwNWQyMjA4MWI1MTIyYzRkYmE4ZWU3ZjFjMTA4ZDU", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-07-31T14:07:47Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-07-31T16:41:07Z"}, "message": "Make sure `symbol_name` is const evaluated", "tree": {"sha": "f5460ceb0d241de97e7b04d15cc3794d379fba25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5460ceb0d241de97e7b04d15cc3794d379fba25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf0b18e91005d22081b5122c4dba8ee7f1c108d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmLmsKQACgkQcTRy8vRW\nJ973exAAkjy2FYGQ8zjmXfDJkpEmmp6S6eS6i0/Gc30fIKpmj9OVg+rpm2HnPOBw\nv+55nBADc95Wv7qqpNnFh5GbZRmHlhcsQ1AKioB477Nb0FOuoA6Aorny+akDjEHQ\ncEIWOEXTkfcppFOgUnBGYLxBuYXbYjUCaF8mxnfcWKG75bor42gKkdyu4CtBDSrR\nhZOTBHX+eZF5wJN/ajw8Rypsp3yXZ1ViYYW2xzLPe68etj+i3uOQ+eyRqEg8CvUz\nu2QTH/oE6wxpy0VJsHQH0PQesvdZTUET1cpmE15Q0SKikcM9kGnpDjofowE/E38g\ntgEL6yaeSJUyAGQFdmy0uTFxyC9Zy4kN/5lIKjS7JevCAvhY8rC1dn2pvCaWIElx\nQ+zWUuykQsUL78WzMNofTLLqHZaA6PbICGU2U+DmQXkFTksV0yqLJDB638XMZguC\ndfjLTSoCRGLoPxKiT4nen18ZcKQkVrYu5LhHOFXtfavdESMzuzmf/CascQKcfdDh\nYJeZ2wV+r5qRRcISS3IpVBNQGReocVH8KtbYE63wJRyY088i+q9p6deMyDaW3rvW\nyChVh5c9LEUfmsovdHODj0iYaRwWLpFCbyy36c4sqVfJJaBo70KDuf7xkl6eEj++\nQBT7bswztPK3IUAfresvt/nDKCGUgQSeC/wC4G02O2JZiJfhTAc=\n=qB09\n-----END PGP SIGNATURE-----", "payload": "tree f5460ceb0d241de97e7b04d15cc3794d379fba25\nparent 7f3d11e1d8c8610894e8960116628f0b77b11cad\nauthor Chris Denton <christophersdenton@gmail.com> 1659276467 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1659285667 +0100\n\nMake sure `symbol_name` is const evaluated\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0b18e91005d22081b5122c4dba8ee7f1c108d5", "html_url": "https://github.com/rust-lang/rust/commit/bf0b18e91005d22081b5122c4dba8ee7f1c108d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf0b18e91005d22081b5122c4dba8ee7f1c108d5/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f3d11e1d8c8610894e8960116628f0b77b11cad", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f3d11e1d8c8610894e8960116628f0b77b11cad", "html_url": "https://github.com/rust-lang/rust/commit/7f3d11e1d8c8610894e8960116628f0b77b11cad"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "ccc90177a2034740f83e1ffd2bebc0a0f839c93e", "filename": "library/std/src/sys/windows/compat.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf0b18e91005d22081b5122c4dba8ee7f1c108d5/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf0b18e91005d22081b5122c4dba8ee7f1c108d5/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fcompat.rs?ref=bf0b18e91005d22081b5122c4dba8ee7f1c108d5", "patch": "@@ -180,8 +180,8 @@ macro_rules! compat_fn_with_fallback {\n \n             fn load_from_module(module: Option<Module>) -> F {\n                 unsafe {\n-                    static symbol_name: &CStr = ansi_str!(sym $symbol);\n-                    if let Some(f) = module.and_then(|m| m.proc_address(symbol_name)) {\n+                    static SYMBOL_NAME: &CStr = ansi_str!(sym $symbol);\n+                    if let Some(f) = module.and_then(|m| m.proc_address(SYMBOL_NAME)) {\n                         PTR.store(f.as_ptr(), Ordering::Relaxed);\n                         mem::transmute(f)\n                     } else {\n@@ -262,8 +262,8 @@ macro_rules! compat_fn_optional {\n             #[allow(unused)]\n             pub(in crate::sys) fn preload(module: Module) {\n                 unsafe {\n-                    let symbol_name = ansi_str!(sym $symbol);\n-                    if let Some(f) = module.proc_address(symbol_name) {\n+                    static SYMBOL_NAME: &CStr = ansi_str!(sym $symbol);\n+                    if let Some(f) = module.proc_address(SYMBOL_NAME) {\n                         PTR.store(f.as_ptr(), Ordering::Relaxed);\n                     }\n                 }"}]}