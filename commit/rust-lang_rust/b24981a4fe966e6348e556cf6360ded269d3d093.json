{"sha": "b24981a4fe966e6348e556cf6360ded269d3d093", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNDk4MWE0ZmU5NjZlNjM0OGU1NTZjZjYzNjBkZWQyNjlkM2QwOTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-14T20:00:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-14T20:00:22Z"}, "message": "Rollup merge of #60799 - matthewjasper:allow-bound-regions-in-existential-types, r=oli-obk\n\nAllow late-bound regions in existential types\n\ncloses #60655\nr? @oli-obk", "tree": {"sha": "0b0f8792c7d4ee62c1839aa946eaef59a67eca3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0b0f8792c7d4ee62c1839aa946eaef59a67eca3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b24981a4fe966e6348e556cf6360ded269d3d093", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc2x5WCRBK7hj4Ov3rIwAAdHIIADOArCOmZjAyE5kU/GTUYypP\nDTFmHhlJFkRmJIticngiIMXqtxDFDO6Fx37NSWJBA5U41enrPb5L5VeKdYB49Faf\n8rgxGqQzVIM2GTBAdB1IYw+kfsyYlgm0BLx5gDGFD68Re/NHBm22WV3f/OU/BVH2\nJqToSf6gGvgGv4Alw006fZ7P0gC3Q6NaYQE9kGmuH8WcIi9ImECWkEaIZsYIgNzo\nmV3RSwyh0pLcaIqDPO5q+O91xbhQlnbxVfrMgFJQQ2Yg4lt9UHjMjOZveYzN6uUp\n8EJ3AvlV8xkaH8vLC78eip+7qLgBgmhlLS+bLJ1UrhsmGUhhmH0iYmiidPjDZjA=\n=8zMB\n-----END PGP SIGNATURE-----\n", "payload": "tree 0b0f8792c7d4ee62c1839aa946eaef59a67eca3b\nparent 29f93ad5072df54fad1009263ca4bfa9c6f911f3\nparent 36fd00e81cd4af2c83839f0c0b96dc20663710c5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1557864022 +0200\ncommitter GitHub <noreply@github.com> 1557864022 +0200\n\nRollup merge of #60799 - matthewjasper:allow-bound-regions-in-existential-types, r=oli-obk\n\nAllow late-bound regions in existential types\n\ncloses #60655\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b24981a4fe966e6348e556cf6360ded269d3d093", "html_url": "https://github.com/rust-lang/rust/commit/b24981a4fe966e6348e556cf6360ded269d3d093", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b24981a4fe966e6348e556cf6360ded269d3d093/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29f93ad5072df54fad1009263ca4bfa9c6f911f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f93ad5072df54fad1009263ca4bfa9c6f911f3", "html_url": "https://github.com/rust-lang/rust/commit/29f93ad5072df54fad1009263ca4bfa9c6f911f3"}, {"sha": "36fd00e81cd4af2c83839f0c0b96dc20663710c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/36fd00e81cd4af2c83839f0c0b96dc20663710c5", "html_url": "https://github.com/rust-lang/rust/commit/36fd00e81cd4af2c83839f0c0b96dc20663710c5"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "13baf667808f817293c72f6f13ed44dac147ae29", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b24981a4fe966e6348e556cf6360ded269d3d093/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24981a4fe966e6348e556cf6360ded269d3d093/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=b24981a4fe966e6348e556cf6360ded269d3d093", "patch": "@@ -466,6 +466,8 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n             let hir_id = self.tcx().hir().as_local_hir_id(def_id).unwrap();\n             let instantiated_ty = self.resolve(&opaque_defn.concrete_ty, &hir_id);\n \n+            debug_assert!(!instantiated_ty.has_escaping_bound_vars());\n+\n             let generics = self.tcx().generics_of(def_id);\n \n             let definition_ty = if generics.parent.is_some() {\n@@ -524,8 +526,9 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n                     },\n                     lt_op: |region| {\n                         match region {\n-                            // ignore static regions\n-                            ty::ReStatic => region,\n+                            // Skip static and bound regions: they don't\n+                            // require substitution.\n+                            ty::ReStatic | ty::ReLateBound(..) => region,\n                             _ => {\n                                 trace!(\"checking {:?}\", region);\n                                 for (subst, p) in opaque_defn.substs.iter().zip(&generics.params) {"}, {"sha": "a4fe86501299fc80009856d93a13e32fe2c8ef3e", "filename": "src/test/ui/existential_types/issue-60655-latebound-regions.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b24981a4fe966e6348e556cf6360ded269d3d093/src%2Ftest%2Fui%2Fexistential_types%2Fissue-60655-latebound-regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b24981a4fe966e6348e556cf6360ded269d3d093/src%2Ftest%2Fui%2Fexistential_types%2Fissue-60655-latebound-regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fexistential_types%2Fissue-60655-latebound-regions.rs?ref=b24981a4fe966e6348e556cf6360ded269d3d093", "patch": "@@ -0,0 +1,30 @@\n+// Test that existential types are allowed to contain late-bound regions.\n+\n+// compile-pass\n+// edition:2018\n+\n+#![feature(async_await, existential_type)]\n+\n+use std::future::Future;\n+\n+pub existential type Func: Sized;\n+\n+// Late bound region should be allowed to escape the function, since it's bound\n+// in the type.\n+fn null_function_ptr() -> Func {\n+    None::<for<'a> fn(&'a ())>\n+}\n+\n+async fn async_nop(_: &u8) {}\n+\n+pub existential type ServeFut: Future<Output=()>;\n+\n+// Late bound regions occur in the generator witness type here.\n+fn serve() -> ServeFut {\n+    async move {\n+        let x = 5;\n+        async_nop(&x).await\n+    }\n+}\n+\n+fn main() {}"}]}