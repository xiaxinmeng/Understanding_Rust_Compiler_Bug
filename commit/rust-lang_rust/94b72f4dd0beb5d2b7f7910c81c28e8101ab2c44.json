{"sha": "94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "node_id": "C_kwDOAAsO6NoAKDk0YjcyZjRkZDBiZWI1ZDJiN2Y3OTEwYzgxYzI4ZTgxMDFhYjJjNDQ", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-10-05T06:56:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-05T06:56:21Z"}, "message": "Rollup merge of #89426 - davidtwco:bootstrap-nix-toolchain-env-var, r=Mark-Simulacrum\n\nbootstrap: add config option for nix patching\n\nOn NixOS systems, bootstrap will patch rustc used in bootstrapping after checking `/etc/os-release` (to confirm the current distribution is NixOS). However, when using Nix on a non-NixOS system, it can be desirable for bootstrap to patch rustc. In this commit, a `patch-binaries-for-nix` option is added to `config.toml`, which allows for user opt-in to bootstrap's Nix patching.\n\nr? ``@Mark-Simulacrum``", "tree": {"sha": "c2e8f3bf827f9ff23b2aefc2dd230080ee2f4f1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2e8f3bf827f9ff23b2aefc2dd230080ee2f4f1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhW/cVCRBK7hj4Ov3rIwAA7UYIAG0X9RXpBKkkFr4LCSRfmbLd\nSWv2S6L1pXJ9XDXgacY/P7IpnDlY6HzN2kmdcfh/m1D48JLWAzs65vR8Q4DgqZNR\nxI43pw5tqHPD3W/vSAwE4UG/mK1ibZEd8j/K/9tAGsxuVHforr/B3r6C2s2G8O10\nppwsmtogWak0wRpujybeVVy0Evbbrx1QXhM41BYRdvaA0crmgk2wnSzxsmWrIwUE\nxjtHm8EpZvjtb8sH8Tlpi17mV6avRtGRiMAeN0KpkhUxdEYw/q6Z/fG/mXxgD61S\nPOLng2ncyUXqIUFh42l31Fh8UXoGSgreIRIBj9Qa8M5bOOdOsUNcq5pFQgt2SPM=\n=8jQV\n-----END PGP SIGNATURE-----\n", "payload": "tree c2e8f3bf827f9ff23b2aefc2dd230080ee2f4f1b\nparent 87f782ede653c0f0472cfa879d7be163af072417\nparent e552c0d86baebdf594b9cacebbcf5207e57207d5\nauthor Manish Goregaokar <manishsmail@gmail.com> 1633416981 -0700\ncommitter GitHub <noreply@github.com> 1633416981 -0700\n\nRollup merge of #89426 - davidtwco:bootstrap-nix-toolchain-env-var, r=Mark-Simulacrum\n\nbootstrap: add config option for nix patching\n\nOn NixOS systems, bootstrap will patch rustc used in bootstrapping after checking `/etc/os-release` (to confirm the current distribution is NixOS). However, when using Nix on a non-NixOS system, it can be desirable for bootstrap to patch rustc. In this commit, a `patch-binaries-for-nix` option is added to `config.toml`, which allows for user opt-in to bootstrap's Nix patching.\n\nr? ``@Mark-Simulacrum``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "html_url": "https://github.com/rust-lang/rust/commit/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "87f782ede653c0f0472cfa879d7be163af072417", "url": "https://api.github.com/repos/rust-lang/rust/commits/87f782ede653c0f0472cfa879d7be163af072417", "html_url": "https://github.com/rust-lang/rust/commit/87f782ede653c0f0472cfa879d7be163af072417"}, {"sha": "e552c0d86baebdf594b9cacebbcf5207e57207d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e552c0d86baebdf594b9cacebbcf5207e57207d5", "html_url": "https://github.com/rust-lang/rust/commit/e552c0d86baebdf594b9cacebbcf5207e57207d5"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "d811b914d20a156f419c328dfd159a3c6ebe4804", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "patch": "@@ -313,6 +313,12 @@ changelog-seen = 2\n # this setting's very existence, are all subject to change.)\n #print-step-rusage = false\n \n+# Always patch binaries for usage with Nix toolchains. If `true` then binaries\n+# will be patched unconditionally. If `false` or unset, binaries will be patched\n+# only if the current distribution is NixOS. This option is useful when using\n+# a Nix toolchain on non-NixOS distributions.\n+#patch-binaries-for-nix = false\n+\n # =============================================================================\n # General install configuration options\n # ============================================================================="}, {"sha": "05d7b0f611f72ccf2349fc23e626d1f805ed92c8", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 16, "deletions": 12, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "patch": "@@ -594,19 +594,23 @@ def fix_bin_or_dylib(self, fname):\n         if ostype != \"Linux\":\n             return\n \n-        # Use `/etc/os-release` instead of `/etc/NIXOS`.\n-        # The latter one does not exist on NixOS when using tmpfs as root.\n-        try:\n-            with open(\"/etc/os-release\", \"r\") as f:\n-                if not any(line.strip() == \"ID=nixos\" for line in f):\n-                    return\n-        except FileNotFoundError:\n-            return\n-        if os.path.exists(\"/lib\"):\n-            return\n+        # If the user has asked binaries to be patched for Nix, then\n+        # don't check for NixOS or `/lib`, just continue to the patching.\n+        if self.get_toml('patch-binaries-for-nix', 'build') != 'true':\n+            # Use `/etc/os-release` instead of `/etc/NIXOS`.\n+            # The latter one does not exist on NixOS when using tmpfs as root.\n+            try:\n+                with open(\"/etc/os-release\", \"r\") as f:\n+                    if not any(line.strip() == \"ID=nixos\" for line in f):\n+                        return\n+            except FileNotFoundError:\n+                return\n+            if os.path.exists(\"/lib\"):\n+                return\n \n-        # At this point we're pretty sure the user is running NixOS\n-        nix_os_msg = \"info: you seem to be running NixOS. Attempting to patch\"\n+        # At this point we're pretty sure the user is running NixOS or\n+        # using Nix\n+        nix_os_msg = \"info: you seem to be using Nix. Attempting to patch\"\n         print(nix_os_msg, fname)\n \n         # Only build `.nix-deps` once."}, {"sha": "062820040dc783709198cd92e8098ff04f8a7ca8", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=94b72f4dd0beb5d2b7f7910c81c28e8101ab2c44", "patch": "@@ -397,6 +397,7 @@ struct Build {\n     install_stage: Option<u32>,\n     dist_stage: Option<u32>,\n     bench_stage: Option<u32>,\n+    patch_binaries_for_nix: Option<bool>,\n }\n \n /// TOML representation of various global install decisions."}]}