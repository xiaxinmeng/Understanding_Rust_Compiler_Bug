{"sha": "fa5cf90b8dd335b53056e3af96a468905b482226", "node_id": "C_kwDOAAsO6NoAKGZhNWNmOTBiOGRkMzM1YjUzMDU2ZTNhZjk2YTQ2ODkwNWI0ODIyMjY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-24T18:45:50Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-24T18:45:50Z"}, "message": "Delay span bug when we can't map lifetimes back in collect_trait_impl_trait_tys", "tree": {"sha": "87e425834f96a6b07a714b426225f364ec10ac28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e425834f96a6b07a714b426225f364ec10ac28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa5cf90b8dd335b53056e3af96a468905b482226", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa5cf90b8dd335b53056e3af96a468905b482226", "html_url": "https://github.com/rust-lang/rust/commit/fa5cf90b8dd335b53056e3af96a468905b482226", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa5cf90b8dd335b53056e3af96a468905b482226/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07a6a9c0c6c571d535de74d7ec28469fba46e37", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6a9c0c6c571d535de74d7ec28469fba46e37", "html_url": "https://github.com/rust-lang/rust/commit/c07a6a9c0c6c571d535de74d7ec28469fba46e37"}], "stats": {"total": 49, "additions": 47, "deletions": 2}, "files": [{"sha": "e72f18012ab338fce240ac21202e0439e279097a", "filename": "compiler/rustc_hir_analysis/src/check/compare_method.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fa5cf90b8dd335b53056e3af96a468905b482226/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa5cf90b8dd335b53056e3af96a468905b482226/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcompare_method.rs?ref=fa5cf90b8dd335b53056e3af96a468905b482226", "patch": "@@ -598,8 +598,16 @@ pub fn collect_trait_impl_trait_tys<'tcx>(\n                 let num_impl_substs = tcx.generics_of(impl_m.container_id(tcx)).params.len();\n                 let ty = tcx.fold_regions(ty, |region, _| {\n                     let ty::ReFree(_) = region.kind() else { return region; };\n-                    let ty::ReEarlyBound(e) = map[&region.into()].expect_region().kind()\n-                        else { bug!(\"expected ReFree to map to ReEarlyBound\"); };\n+                    let Some(ty::ReEarlyBound(e)) = map.get(&region.into()).map(|r| r.expect_region().kind())\n+                    else {\n+                        tcx\n+                            .sess\n+                            .delay_span_bug(\n+                                return_span,\n+                                \"expected ReFree to map to ReEarlyBound\"\n+                            );\n+                        return tcx.lifetimes.re_static;\n+                    };\n                     tcx.mk_region(ty::ReEarlyBound(ty::EarlyBoundRegion {\n                         def_id: e.def_id,\n                         name: e.name,"}, {"sha": "90682631aa0323050c60f96843c1f9adaee0c480", "filename": "src/test/ui/impl-trait/in-trait/signature-mismatch.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fa5cf90b8dd335b53056e3af96a468905b482226/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa5cf90b8dd335b53056e3af96a468905b482226/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.rs?ref=fa5cf90b8dd335b53056e3af96a468905b482226", "patch": "@@ -0,0 +1,21 @@\n+// edition:2021\n+\n+#![feature(return_position_impl_trait_in_trait)]\n+#![allow(incomplete_features)]\n+\n+use std::future::Future;\n+\n+pub trait AsyncTrait {\n+    fn async_fn(&self, buff: &[u8]) -> impl Future<Output = Vec<u8>>;\n+}\n+\n+pub struct Struct;\n+\n+impl AsyncTrait for Struct {\n+    fn async_fn<'a>(&self, buff: &'a [u8]) -> impl Future<Output = Vec<u8>> + 'a {\n+        //~^ ERROR `impl` item signature doesn't match `trait` item signature\n+        async move { buff.to_vec() }\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "6663d7faa1e578ebf20f97c2a3cf30bbeed43093", "filename": "src/test/ui/impl-trait/in-trait/signature-mismatch.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fa5cf90b8dd335b53056e3af96a468905b482226/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fa5cf90b8dd335b53056e3af96a468905b482226/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fin-trait%2Fsignature-mismatch.stderr?ref=fa5cf90b8dd335b53056e3af96a468905b482226", "patch": "@@ -0,0 +1,16 @@\n+error: `impl` item signature doesn't match `trait` item signature\n+  --> $DIR/signature-mismatch.rs:15:5\n+   |\n+LL |     fn async_fn(&self, buff: &[u8]) -> impl Future<Output = Vec<u8>>;\n+   |     ----------------------------------------------------------------- expected `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + 'static`\n+...\n+LL |     fn async_fn<'a>(&self, buff: &'a [u8]) -> impl Future<Output = Vec<u8>> + 'a {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '2`\n+   |\n+   = note: expected `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + 'static`\n+              found `fn(&'1 Struct, &'2 [u8]) -> impl Future<Output = Vec<u8>> + '2`\n+   = help: the lifetime requirements from the `impl` do not correspond to the requirements in the `trait`\n+   = help: verify the lifetime relationships in the `trait` and `impl` between the `self` argument, the other inputs and its output\n+\n+error: aborting due to previous error\n+"}]}