{"sha": "2b225bab136aa844d5052b26f942e07bf048bf0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiMjI1YmFiMTM2YWE4NDRkNTA1MmIyNmY5NDJlMDdiZjA0OGJmMGE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-06T04:54:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-06T04:54:54Z"}, "message": "Rollup merge of #65011 - estebank:ice-o-matic, r=zackmdavis\n\nDo not ICE when dereferencing non-Copy raw pointer\n\nCC #52262. Confirmed to remove the unnecessary ICE, but without a repro case.", "tree": {"sha": "8b82dfa8aa90899c6be9f23dccb5ed1072e62017", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b82dfa8aa90899c6be9f23dccb5ed1072e62017"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b225bab136aa844d5052b26f942e07bf048bf0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdmXOeCRBK7hj4Ov3rIwAAdHIIAJozg1iTSlwuvGiclt+AKVsD\n0ONw4MJp564y86mG4DgSYmfEAlCZMdMqjdgvn9dmfTWvthTYac/dlBzVI93uWkoo\nfMtWBAjcn9YFRiSWfIzQLsvFh/AUqYY+ydqn6XH5JkismX3u/qe1hJHqeorLvM3u\nGHoEr1W64dudEjl2wpDIgMWPonNTM3q6l08nJF/oS/UTF8EKr6sGkiqyFRqUy7y5\nwfjzsgOZPKtgLrVAQW61IQDRLJKvuRn1oWOKOZIHhTq2LICPJKl14vOu6NQvI51i\nWGXomBO8cuZtM78FwKnvjDn4H7CT2ROXs/nnRyf6S+5s7sj8LL3wIB9oe3LaVLU=\n=foeG\n-----END PGP SIGNATURE-----\n", "payload": "tree 8b82dfa8aa90899c6be9f23dccb5ed1072e62017\nparent c7d7e3730aa211bec291f31d5318628411c1ba77\nparent e8796cada9d962e30417a8f4f973f2c99727d0da\nauthor Tyler Mandry <tmandry@gmail.com> 1570337694 -0700\ncommitter GitHub <noreply@github.com> 1570337694 -0700\n\nRollup merge of #65011 - estebank:ice-o-matic, r=zackmdavis\n\nDo not ICE when dereferencing non-Copy raw pointer\n\nCC #52262. Confirmed to remove the unnecessary ICE, but without a repro case.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b225bab136aa844d5052b26f942e07bf048bf0a", "html_url": "https://github.com/rust-lang/rust/commit/2b225bab136aa844d5052b26f942e07bf048bf0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b225bab136aa844d5052b26f942e07bf048bf0a/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7d7e3730aa211bec291f31d5318628411c1ba77", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7d7e3730aa211bec291f31d5318628411c1ba77", "html_url": "https://github.com/rust-lang/rust/commit/c7d7e3730aa211bec291f31d5318628411c1ba77"}, {"sha": "e8796cada9d962e30417a8f4f973f2c99727d0da", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8796cada9d962e30417a8f4f973f2c99727d0da", "html_url": "https://github.com/rust-lang/rust/commit/e8796cada9d962e30417a8f4f973f2c99727d0da"}], "stats": {"total": 46, "additions": 41, "deletions": 5}, "files": [{"sha": "75d4b56fdb7c20480890b3e62c44380ef7ac0651", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2b225bab136aa844d5052b26f942e07bf048bf0a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b225bab136aa844d5052b26f942e07bf048bf0a/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=2b225bab136aa844d5052b26f942e07bf048bf0a", "patch": "@@ -1944,14 +1944,16 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n                     self.is_mutable(place.as_ref(), is_local_mutation_allowed),\n                     self.errors_buffer.is_empty()\n                 ) {\n-                    // rust-lang/rust#46908: In pure NLL mode this code path should\n-                    // be unreachable (and thus we signal an ICE in the else branch here).\n-                    span_bug!(\n-                        span,\n+                    // rust-lang/rust#46908: In pure NLL mode this code path should be\n+                    // unreachable, but we use `delay_span_bug` because we can hit this when\n+                    // dereferencing a non-Copy raw pointer *and* have `-Ztreat-err-as-bug`\n+                    // enabled. We don't want to ICE for that case, as other errors will have\n+                    // been emitted (#52262).\n+                    self.infcx.tcx.sess.delay_span_bug(span, &format!(\n                         \"Accessing `{:?}` with the kind `{:?}` shouldn't be possible\",\n                         place,\n                         kind,\n-                    );\n+                    ));\n                 }\n                 return false;\n             }"}, {"sha": "2195b89555791c3c17053540a14587c2db125ea5", "filename": "src/test/ui/issues/issue-52262.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2b225bab136aa844d5052b26f942e07bf048bf0a/src%2Ftest%2Fui%2Fissues%2Fissue-52262.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b225bab136aa844d5052b26f942e07bf048bf0a/src%2Ftest%2Fui%2Fissues%2Fissue-52262.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52262.rs?ref=2b225bab136aa844d5052b26f942e07bf048bf0a", "patch": "@@ -0,0 +1,25 @@\n+// compile-flags:-Ztreat-err-as-bug=5\n+#[derive(Debug)]\n+enum MyError {\n+    NotFound { key: Vec<u8> },\n+    Err41,\n+}\n+\n+impl std::error::Error for MyError {}\n+\n+impl std::fmt::Display for MyError {\n+    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {\n+        match self {\n+            MyError::NotFound { key } => write!(\n+                f,\n+                \"unknown error with code {}.\",\n+                String::from_utf8(*key).unwrap()\n+                //~^ ERROR cannot move out of `*key` which is behind a shared reference\n+            ),\n+            MyError::Err41 => write!(f, \"Sit by a lake\"),\n+        }\n+    }\n+}\n+fn main() {\n+    println!(\"Hello, world!\");\n+}"}, {"sha": "7312976c80159e98ece2833251127f0d11e23dc4", "filename": "src/test/ui/issues/issue-52262.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b225bab136aa844d5052b26f942e07bf048bf0a/src%2Ftest%2Fui%2Fissues%2Fissue-52262.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2b225bab136aa844d5052b26f942e07bf048bf0a/src%2Ftest%2Fui%2Fissues%2Fissue-52262.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-52262.stderr?ref=2b225bab136aa844d5052b26f942e07bf048bf0a", "patch": "@@ -0,0 +1,9 @@\n+error[E0507]: cannot move out of `*key` which is behind a shared reference\n+  --> $DIR/issue-52262.rs:16:35\n+   |\n+LL |                 String::from_utf8(*key).unwrap()\n+   |                                   ^^^^ move occurs because `*key` has type `std::vec::Vec<u8>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0507`."}]}