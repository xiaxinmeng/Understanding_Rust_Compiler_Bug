{"sha": "7a56360ecef1dca261110281e78385fc8f14b154", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNTYzNjBlY2VmMWRjYTI2MTExMDI4MWU3ODM4NWZjOGYxNGIxNTQ=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-05-02T22:55:58Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2018-05-03T00:31:45Z"}, "message": "Remove parse::escape_default().\n\nstr::escape_default() can be used instead.", "tree": {"sha": "82c9e8d693978a8e99a0af440e93c77e7faa2ae9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82c9e8d693978a8e99a0af440e93c77e7faa2ae9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a56360ecef1dca261110281e78385fc8f14b154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a56360ecef1dca261110281e78385fc8f14b154", "html_url": "https://github.com/rust-lang/rust/commit/7a56360ecef1dca261110281e78385fc8f14b154", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a56360ecef1dca261110281e78385fc8f14b154/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5d389e4f11b1fad2d42453942f81271bbddee78", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5d389e4f11b1fad2d42453942f81271bbddee78", "html_url": "https://github.com/rust-lang/rust/commit/d5d389e4f11b1fad2d42453942f81271bbddee78"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "f252020bc31698836dc454794a6a8588288a8327", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7a56360ecef1dca261110281e78385fc8f14b154/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a56360ecef1dca261110281e78385fc8f14b154/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=7a56360ecef1dca261110281e78385fc8f14b154", "patch": "@@ -298,14 +298,10 @@ pub fn char_lit(lit: &str, diag: Option<(Span, &Handler)>) -> (char, isize) {\n     }\n }\n \n-pub fn escape_default(s: &str) -> String {\n-    s.chars().map(char::escape_default).flat_map(|x| x).collect()\n-}\n-\n /// Parse a string representing a string literal into its final form. Does\n /// unescaping.\n pub fn str_lit(lit: &str, diag: Option<(Span, &Handler)>) -> String {\n-    debug!(\"parse_str_lit: given {}\", escape_default(lit));\n+    debug!(\"str_lit: given {}\", lit.escape_default());\n     let mut res = String::with_capacity(lit.len());\n \n     let error = |i| format!(\"lexer should have rejected {} at {}\", lit, i);\n@@ -374,7 +370,7 @@ pub fn str_lit(lit: &str, diag: Option<(Span, &Handler)>) -> String {\n /// Parse a string representing a raw string literal into its final form. The\n /// only operation this does is convert embedded CRLF into a single LF.\n pub fn raw_str_lit(lit: &str) -> String {\n-    debug!(\"raw_str_lit: given {}\", escape_default(lit));\n+    debug!(\"raw_str_lit: given {}\", lit.escape_default());\n     let mut res = String::with_capacity(lit.len());\n \n     let mut chars = lit.chars().peekable();"}, {"sha": "27c5a14ff0e8b4ee06b7e37a1cc7e9796a7d7acf", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a56360ecef1dca261110281e78385fc8f14b154/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a56360ecef1dca261110281e78385fc8f14b154/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=7a56360ecef1dca261110281e78385fc8f14b154", "patch": "@@ -656,7 +656,7 @@ pub trait PrintState<'a> {\n                     style: ast::StrStyle) -> io::Result<()> {\n         let st = match style {\n             ast::StrStyle::Cooked => {\n-                (format!(\"\\\"{}\\\"\", parse::escape_default(st)))\n+                (format!(\"\\\"{}\\\"\", st.escape_default()))\n             }\n             ast::StrStyle::Raw(n) => {\n                 (format!(\"r{delim}\\\"{string}\\\"{delim}\","}]}