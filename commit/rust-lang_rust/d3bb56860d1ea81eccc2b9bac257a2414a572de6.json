{"sha": "d3bb56860d1ea81eccc2b9bac257a2414a572de6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQzYmI1Njg2MGQxZWE4MWVjY2MyYjliYWMyNTdhMjQxNGE1NzJkZTY=", "commit": {"author": {"name": "Jonathan Turner", "email": "jonathandturner@users.noreply.github.com", "date": "2016-10-06T15:35:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-06T15:35:41Z"}, "message": "Rollup merge of #36726 - cbreeden:patch-1, r=GuillaumeGomez\n\nTouch up formatting for variance README.md\n\nThere were a few places that needed extra indentation to register as a code block.", "tree": {"sha": "bcb91d974c648f283dfd94e37bee10f47c0dce18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcb91d974c648f283dfd94e37bee10f47c0dce18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d3bb56860d1ea81eccc2b9bac257a2414a572de6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d3bb56860d1ea81eccc2b9bac257a2414a572de6", "html_url": "https://github.com/rust-lang/rust/commit/d3bb56860d1ea81eccc2b9bac257a2414a572de6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d3bb56860d1ea81eccc2b9bac257a2414a572de6/comments", "author": {"login": "jonathandturner", "id": 111457284, "node_id": "O_kgDOBqS0BA", "avatar_url": "https://avatars.githubusercontent.com/u/111457284?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonathandturner", "html_url": "https://github.com/jonathandturner", "followers_url": "https://api.github.com/users/jonathandturner/followers", "following_url": "https://api.github.com/users/jonathandturner/following{/other_user}", "gists_url": "https://api.github.com/users/jonathandturner/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonathandturner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonathandturner/subscriptions", "organizations_url": "https://api.github.com/users/jonathandturner/orgs", "repos_url": "https://api.github.com/users/jonathandturner/repos", "events_url": "https://api.github.com/users/jonathandturner/events{/privacy}", "received_events_url": "https://api.github.com/users/jonathandturner/received_events", "type": "Organization", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46957f05771a427545c792f69b37f8e05dcbb15d", "url": "https://api.github.com/repos/rust-lang/rust/commits/46957f05771a427545c792f69b37f8e05dcbb15d", "html_url": "https://github.com/rust-lang/rust/commit/46957f05771a427545c792f69b37f8e05dcbb15d"}, {"sha": "42a5a065dbfd5bac1195ab2ce9d348ac3cc0eb54", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a5a065dbfd5bac1195ab2ce9d348ac3cc0eb54", "html_url": "https://github.com/rust-lang/rust/commit/42a5a065dbfd5bac1195ab2ce9d348ac3cc0eb54"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "ac785e4058bdee48833ab9e27a6ff8c37035047b", "filename": "src/librustc_typeck/variance/README.md", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/d3bb56860d1ea81eccc2b9bac257a2414a572de6/src%2Flibrustc_typeck%2Fvariance%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d3bb56860d1ea81eccc2b9bac257a2414a572de6/src%2Flibrustc_typeck%2Fvariance%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2FREADME.md?ref=d3bb56860d1ea81eccc2b9bac257a2414a572de6", "patch": "@@ -1,3 +1,5 @@\n+## Variance of type and lifetime parameters\n+\n This file infers the variance of type and lifetime parameters. The\n algorithm is taken from Section 4 of the paper \"Taming the Wildcards:\n Combining Definition- and Use-Site Variance\" published in PLDI'11 and\n@@ -52,11 +54,11 @@ These indicate that (1) the variance of A must be at most covariant;\n variance of C must be at most covariant *and* contravariant. All of these\n results are based on a variance lattice defined as follows:\n \n-      *      Top (bivariant)\n-   -     +\n-      o      Bottom (invariant)\n+       *      Top (bivariant)\n+    -     +\n+       o      Bottom (invariant)\n \n-Based on this lattice, the solution V(A)=+, V(B)=-, V(C)=o is the\n+Based on this lattice, the solution `V(A)=+`, `V(B)=-`, `V(C)=o` is the\n optimal solution. Note that there is always a naive solution which\n just declares all variables to be invariant.\n \n@@ -68,11 +70,11 @@ take the form:\n     V(X) <= Term\n     Term := + | - | * | o | V(X) | Term x Term\n \n-Here the notation V(X) indicates the variance of a type/region\n+Here the notation `V(X)` indicates the variance of a type/region\n parameter `X` with respect to its defining class. `Term x Term`\n represents the \"variance transform\" as defined in the paper:\n \n-  If the variance of a type variable `X` in type expression `E` is `V2`\n+>  If the variance of a type variable `X` in type expression `E` is `V2`\n   and the definition-site variance of the [corresponding] type parameter\n   of a class `C` is `V1`, then the variance of `X` in the type expression\n   `C<E>` is `V3 = V1.xform(V2)`.\n@@ -267,7 +269,7 @@ expressions -- must be invariant with respect to all of their\n inputs. To see why this makes sense, consider what subtyping for a\n trait reference means:\n \n-   <T as Trait> <: <U as Trait>\n+    <T as Trait> <: <U as Trait>\n \n means that if I know that `T as Trait`, I also know that `U as\n Trait`. Moreover, if you think of it as dictionary passing style,\n@@ -291,9 +293,9 @@ impl<T> Identity for T { type Out = T; ... }\n Now if I have `<&'static () as Identity>::Out`, this can be\n validly derived as `&'a ()` for any `'a`:\n \n-   <&'a () as Identity> <: <&'static () as Identity>\n-   if &'static () < : &'a ()   -- Identity is contravariant in Self\n-   if 'static : 'a             -- Subtyping rules for relations\n+    <&'a () as Identity> <: <&'static () as Identity>\n+    if &'static () < : &'a ()   -- Identity is contravariant in Self\n+    if 'static : 'a             -- Subtyping rules for relations\n \n This change otoh means that `<'static () as Identity>::Out` is\n always `&'static ()` (which might then be upcast to `'a ()`,"}]}