{"sha": "06fab0ea7002bde57beaee6db7976ae0cb080c38", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2ZmFiMGVhNzAwMmJkZTU3YmVhZWU2ZGI3OTc2YWUwY2IwODBjMzg=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-11-19T14:18:09Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2015-11-19T20:05:50Z"}, "message": "Add run-pass test for paths containing the NUL character", "tree": {"sha": "57d9d5f854f951cdba47c4d25e068b7b7b14352f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57d9d5f854f951cdba47c4d25e068b7b7b14352f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06fab0ea7002bde57beaee6db7976ae0cb080c38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06fab0ea7002bde57beaee6db7976ae0cb080c38", "html_url": "https://github.com/rust-lang/rust/commit/06fab0ea7002bde57beaee6db7976ae0cb080c38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06fab0ea7002bde57beaee6db7976ae0cb080c38/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d81c02a2041679a865e5267c0cb725106f6bf84", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d81c02a2041679a865e5267c0cb725106f6bf84", "html_url": "https://github.com/rust-lang/rust/commit/4d81c02a2041679a865e5267c0cb725106f6bf84"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "2da3e59e54c58043210a5dd1caee973bd80d01e4", "filename": "src/test/run-pass/paths-containing-nul.rs", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/06fab0ea7002bde57beaee6db7976ae0cb080c38/src%2Ftest%2Frun-pass%2Fpaths-containing-nul.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06fab0ea7002bde57beaee6db7976ae0cb080c38/src%2Ftest%2Frun-pass%2Fpaths-containing-nul.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpaths-containing-nul.rs?ref=06fab0ea7002bde57beaee6db7976ae0cb080c38", "patch": "@@ -0,0 +1,48 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::fs;\n+use std::io;\n+\n+fn assert_invalid_input<T>(on: &str, result: io::Result<T>) {\n+    fn inner(on: &str, result: io::Result<()>) {\n+        match result {\n+            Ok(()) => panic!(\"{} didn't return an error on a path with NUL\", on),\n+            Err(e) => assert!(e.kind() == io::ErrorKind::InvalidInput,\n+                              \"{} returned a strange {:?} on a path with NUL\", on, e.kind()),\n+        }\n+    }\n+    inner(on, result.map(|_| ()))\n+}\n+\n+fn main() {\n+    assert_invalid_input(\"File::open\", fs::File::open(\"\\0\"));\n+    assert_invalid_input(\"File::create\", fs::File::create(\"\\0\"));\n+    assert_invalid_input(\"remove_file\", fs::remove_file(\"\\0\"));\n+    assert_invalid_input(\"metadata\", fs::metadata(\"\\0\"));\n+    assert_invalid_input(\"symlink_metadata\", fs::symlink_metadata(\"\\0\"));\n+    assert_invalid_input(\"rename1\", fs::rename(\"\\0\", \"a\"));\n+    assert_invalid_input(\"rename2\", fs::rename(\"a\", \"\\0\"));\n+    assert_invalid_input(\"copy1\", fs::copy(\"\\0\", \"a\"));\n+    assert_invalid_input(\"copy2\", fs::copy(\"a\", \"\\0\"));\n+    assert_invalid_input(\"hard_link1\", fs::hard_link(\"\\0\", \"a\"));\n+    assert_invalid_input(\"hard_link2\", fs::hard_link(\"a\", \"\\0\"));\n+    assert_invalid_input(\"soft_link1\", fs::soft_link(\"\\0\", \"a\"));\n+    assert_invalid_input(\"soft_link2\", fs::soft_link(\"a\", \"\\0\"));\n+    assert_invalid_input(\"read_link\", fs::read_link(\"\\0\"));\n+    assert_invalid_input(\"canonicalize\", fs::canonicalize(\"\\0\"));\n+    assert_invalid_input(\"create_dir\", fs::create_dir(\"\\0\"));\n+    assert_invalid_input(\"create_dir_all\", fs::create_dir_all(\"\\0\"));\n+    assert_invalid_input(\"remove_dir\", fs::remove_dir(\"\\0\"));\n+    assert_invalid_input(\"remove_dir_all\", fs::remove_dir_all(\"\\0\"));\n+    assert_invalid_input(\"read_dir\", fs::read_dir(\"\\0\"));\n+    assert_invalid_input(\"set_permissions\",\n+                         fs::set_permissions(\"\\0\", fs::metadata(\".\").unwrap().permissions()));\n+}"}]}