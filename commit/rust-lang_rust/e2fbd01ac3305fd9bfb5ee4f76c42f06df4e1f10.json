{"sha": "e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10", "node_id": "C_kwDOAAsO6NoAKGUyZmJkMDFhYzMzMDVmZDliZmI1ZWU0Zjc2YzQyZjA2ZGY0ZTFmMTA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-14T11:20:25Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-15T11:26:17Z"}, "message": "Compare picks via `Self` type and associated item id", "tree": {"sha": "2112fff6107a754b1bdaa493e781d17a1d19422d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2112fff6107a754b1bdaa493e781d17a1d19422d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10", "html_url": "https://github.com/rust-lang/rust/commit/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d06aac178358509cd7f416285e920f67bea1d64b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d06aac178358509cd7f416285e920f67bea1d64b", "html_url": "https://github.com/rust-lang/rust/commit/d06aac178358509cd7f416285e920f67bea1d64b"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "3f390cba3e7c2b927ba393893142babc13f742ec", "filename": "compiler/rustc_hir_typeck/src/method/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fmod.rs?ref=e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10", "patch": "@@ -209,7 +209,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     call_expr,\n                     ProbeScope::TraitsInScope,\n                 ) {\n-                    Ok(ref new_pick) if new_pick.self_ty != pick.self_ty => {\n+                    Ok(ref new_pick) if pick.differs_from(new_pick) => {\n                         needs_mut = true;\n                     }\n                     _ => {}\n@@ -220,7 +220,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             let mut candidates =\n                 match self.lookup_probe(segment.ident, self_ty, call_expr, ProbeScope::AllTraits) {\n                     // If we find a different result the caller probably forgot to import a trait.\n-                    Ok(ref new_pick) if new_pick.self_ty != pick.self_ty => {\n+                    Ok(ref new_pick) if pick.differs_from(new_pick) => {\n                         vec![new_pick.item.container_id(self.tcx)]\n                     }\n                     Err(Ambiguity(ref sources)) => sources"}, {"sha": "46a760851893dd5cbe8697b1fb8b2b81717a4027", "filename": "compiler/rustc_hir_typeck/src/method/probe.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fprobe.rs?ref=e2fbd01ac3305fd9bfb5ee4f76c42f06df4e1f10", "patch": "@@ -17,6 +17,7 @@ use rustc_infer::infer::{self, InferOk, TyCtxtInferExt};\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind};\n use rustc_middle::middle::stability;\n use rustc_middle::ty::fast_reject::{simplify_type, TreatParams};\n+use rustc_middle::ty::AssocItem;\n use rustc_middle::ty::GenericParamDefKind;\n use rustc_middle::ty::{self, ParamEnvAnd, ToPredicate, Ty, TyCtxt, TypeFoldable, TypeVisitable};\n use rustc_middle::ty::{InternalSubsts, SubstsRef};\n@@ -1331,6 +1332,31 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n }\n \n impl<'tcx> Pick<'tcx> {\n+    /// In case there were unstable name collisions, emit them as a lint.\n+    /// Checks whether two picks do not refer to the same trait item for the same `Self` type.\n+    /// Only useful for comparisons of picks in order to improve diagnostics.\n+    /// Do not use for type checking.\n+    pub fn differs_from(&self, other: &Self) -> bool {\n+        let Self {\n+            item:\n+                AssocItem {\n+                    def_id,\n+                    name: _,\n+                    kind: _,\n+                    container: _,\n+                    trait_item_def_id: _,\n+                    fn_has_self_parameter: _,\n+                },\n+            kind: _,\n+            import_ids: _,\n+            autoderefs: _,\n+            autoref_or_ptr_adjustment: _,\n+            self_ty,\n+            unstable_candidates: _,\n+        } = *self;\n+        self_ty != other.self_ty || def_id != other.item.def_id\n+    }\n+\n     /// In case there were unstable name collisions, emit them as a lint.\n     pub fn maybe_emit_unstable_name_collision_hint(\n         &self,"}]}