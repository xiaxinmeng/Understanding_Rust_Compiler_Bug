{"sha": "afe74c3900aa00373a0d5edd2bd433870822c40a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmZTc0YzM5MDBhYTAwMzczYTBkNWVkZDJiZDQzMzg3MDgyMmM0MGE=", "commit": {"author": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-09T17:02:43Z"}, "committer": {"name": "Felix Raimundo", "email": "felix.raimundo@tweag.io", "date": "2017-05-09T17:02:43Z"}, "message": "Fix  link", "tree": {"sha": "5e66c6cc7b98af43413be5144740bf61fd048111", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e66c6cc7b98af43413be5144740bf61fd048111"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afe74c3900aa00373a0d5edd2bd433870822c40a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afe74c3900aa00373a0d5edd2bd433870822c40a", "html_url": "https://github.com/rust-lang/rust/commit/afe74c3900aa00373a0d5edd2bd433870822c40a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afe74c3900aa00373a0d5edd2bd433870822c40a/comments", "author": null, "committer": null, "parents": [{"sha": "03c9510525c986715af1f1f98c2bc06248c747e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/03c9510525c986715af1f1f98c2bc06248c747e8", "html_url": "https://github.com/rust-lang/rust/commit/03c9510525c986715af1f1f98c2bc06248c747e8"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "9a7239d297c4d373b2d8bf5cab20068e6b566332", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/afe74c3900aa00373a0d5edd2bd433870822c40a/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afe74c3900aa00373a0d5edd2bd433870822c40a/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=afe74c3900aa00373a0d5edd2bd433870822c40a", "patch": "@@ -594,21 +594,21 @@ pub fn park() {\n     *guard = false;\n }\n \n-/// Use [park_timeout].\n+/// Use [`park_timeout`].\n ///\n /// Blocks unless or until the current thread's token is made available or\n /// the specified duration has been reached (may wake spuriously).\n ///\n-/// The semantics of this function are equivalent to [`park`][park] except\n+/// The semantics of this function are equivalent to [`park`] except\n /// that the thread will be blocked for roughly no longer than `dur`. This\n /// method should not be used for precise timing due to anomalies such as\n /// preemption or platform differences that may not cause the maximum\n /// amount of time waited to be precisely `ms` long.\n ///\n-/// See the [park documentation][park] for more detail.\n+/// See the [park documentation][`park`] for more detail.\n ///\n-/// [park_timeout]: fn.park_timeout.html\n-/// [park]: ../../std/thread/fn.park.html\n+/// [`park_timeout`]: fn.park_timeout.html\n+/// [`park`]: ../../std/thread/fn.park.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_deprecated(since = \"1.6.0\", reason = \"replaced by `std::thread::park_timeout`\")]\n pub fn park_timeout_ms(ms: u32) {"}]}