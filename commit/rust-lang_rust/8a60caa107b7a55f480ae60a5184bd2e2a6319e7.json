{"sha": "8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNjBjYWExMDdiN2E1NWY0ODBhZTYwYTUxODRiZDJlMmE2MzE5ZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-22T01:06:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-10-22T01:06:34Z"}, "message": "auto merge of #9960 : adridu59/rust/patch-doc-limited, r=alexcrichton\n\nThis is #9868 but doesn't move css files to a separate subfolder, which was causing errors on the Rust buildbot.\r\n\r\n@alexcrichton", "tree": {"sha": "aaaf7461505acaa2d8b5cf9a6c54e0f6e0f3ff9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aaaf7461505acaa2d8b5cf9a6c54e0f6e0f3ff9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "html_url": "https://github.com/rust-lang/rust/commit/8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7e4404b6fbbf28bbe115ab8837f929e51c831a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e4404b6fbbf28bbe115ab8837f929e51c831a31", "html_url": "https://github.com/rust-lang/rust/commit/7e4404b6fbbf28bbe115ab8837f929e51c831a31"}, {"sha": "22465e9561293752c195e32f85644a6b141850d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/22465e9561293752c195e32f85644a6b141850d3", "html_url": "https://github.com/rust-lang/rust/commit/22465e9561293752c195e32f85644a6b141850d3"}], "stats": {"total": 1330, "additions": 517, "deletions": 813}, "files": [{"sha": "4eff4c540588f8f75d4c132eac12de0672e4f7c4", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -77,7 +77,7 @@ src/.DS_Store\n /nd/\n /llvm/\n version.md\n-rust.tex\n+*.tex\n keywords.md\n x86_64-apple-darwin/\n x86_64-unknown-linux-gnu/"}, {"sha": "d7578987e2b15a9a8fa6251ee800b390e9cb640a", "filename": "doc/README", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2FREADME", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2FREADME", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2FREADME?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -19,7 +19,7 @@ To generate HTML documentation from one source file/crate, do something like:\n To generate an HTML version of a doc from Markdown, without having Node.js\n installed, do something like:\n \n-  pandoc --from=markdown --to=html --number-sections -o rust.html rust.md\n+  pandoc --from=markdown --to=html5 --number-sections -o rust.html rust.md\n \n The syntax for pandoc flavored markdown can be found at:\n http://johnmacfarlane.net/pandoc/README.html#pandocs-markdown"}, {"sha": "443f1180584056410f3dec3245edaa373c6125d5", "filename": "doc/lib.css", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7e4404b6fbbf28bbe115ab8837f929e51c831a31/doc%2Flib.css", "raw_url": "https://github.com/rust-lang/rust/raw/7e4404b6fbbf28bbe115ab8837f929e51c831a31/doc%2Flib.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Flib.css?ref=7e4404b6fbbf28bbe115ab8837f929e51c831a31", "patch": "@@ -1,8 +0,0 @@\n-/*\n-Custom styles for the library docs generated by naturaldocs\n-*/\n-\n-p {\n-   text-indent: 0;\n-   margin-bottom: 1em;\n-   }"}, {"sha": "883dfab3f7982c7c77def1de7fa82452826bdcd7", "filename": "doc/manual.css", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7e4404b6fbbf28bbe115ab8837f929e51c831a31/doc%2Fmanual.css", "raw_url": "https://github.com/rust-lang/rust/raw/7e4404b6fbbf28bbe115ab8837f929e51c831a31/doc%2Fmanual.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fmanual.css?ref=7e4404b6fbbf28bbe115ab8837f929e51c831a31", "patch": "@@ -1,6 +0,0 @@\n-/* Display the full TOC */\n-\n-#TOC ul ul {\n-    display: block;\n-    padding-left: 2em;\n-}"}, {"sha": "783679d0ea5fdf721c112fa26f994a33885c294f", "filename": "doc/manual.inc", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Fmanual.inc", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Fmanual.inc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fmanual.inc?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -0,0 +1,7 @@\n+<style>\n+  /* Display the full TOC */\n+  #TOC ul ul {\n+    display: block;\n+    padding-left: 2em;\n+  }\n+</style>\n\\ No newline at end of file"}, {"sha": "26135edd8bead439900d7efe83bfb9b4e6959772", "filename": "doc/rust.css", "status": "modified", "additions": 239, "deletions": 89, "changes": 328, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Frust.css", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Frust.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.css?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -1,82 +1,148 @@\n+/**\n+ * Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+ * file at the top-level directory of this distribution and at\n+ * http://rust-lang.org/COPYRIGHT.\n+ * With elements taken from Bootstrap v3.0.0 (Apache v2.0 licensed).\n+ *\n+ * Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+ * http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+ * <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+ * option. This file may not be copied, modified, or distributed\n+ * except according to those terms.\n+ */\n+/* Global page semantics\n+   ========================================================================== */\n body {\n-    padding: 1em 6em;\n-    margin: 0;\n-    margin-bottom: 4em;\n-    font-family: \"Helvetica Neue\", Helvetica, sans-serif;\n-    font-size: 12pt;\n-    background-color: white;\n-    color: black;\n-    line-height: 1.6em;\n-    min-width: 45em;\n-    max-width: 60em;\n+\tbackground-color: #fff;\n+\tmargin: 0 auto;\n+\tpadding: 0 15px;\n+\tmargin-bottom: 4em;\n+\tfont-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n+\tfont-size: 14px;\n+\tcolor: #333;\n+\tline-height: 1.428571429;\n }\n-\n-h1 {\n-    font-size: 24pt;\n-    margin-top: 1.6em;\n-    padding-left: 0.4em;\n-    line-height: 1.6em;\n-    background-color:#FFF2CE;\n-    border-radius: 0.2em;\n+@media (min-width: 768px) {\n+\tbody {\n+\t\tmax-width: 750px;\n+\t}\n }\n-\n-h2 {\n-    font-size: 16pt;\n-    margin-top: 1.6em;\n-    padding: 0.2em 0.5em;\n-    background-color:#FFF2CE;\n-    border-radius: 0.4em;\n+@media (min-width: 992px) {\n+\tbody {\n+\t\tmax-width: 970px;\n+\t}\n }\n-\n-h2 code {\n-    color: #097334;\n-    font-size: 16pt;\n+@media (min-width: 1200px) {\n+\tbody {\n+\t\tmax-width: 1170px;\n+\t}\n }\n \n-h3 {\n-    font-size: 14pt;\n-    color: black;\n-    background-color:#D9E7FF;\n-    border-radius: 0.4em;\n-    padding: 0.2em 0.5em;\n+h1, h2, h3, h4, h5, h6 {\n+\tcolor: black;\n+\tfont-weight: 500;\n+\tline-height: 1.1;\n }\n-\n-h3 code {\n-    color: #541800;\n-    font-size: 14pt;\n-    font-style: italic;\n+h1, h2, h3 {\n+\tmargin-top: 20px;\n+\tmargin-bottom: 10px;\n+}\n+h4, h5, h6 {\n+\tmargin-top: 12px;\n+\tmargin-bottom: 10px;\n }\n \n+h1 {\n+\tfont-size: 36px;\n+\tpadding: .1em .4em;\n+\tmargin: 0.67em 0;\n+\tbackground-color: #E9E9E9;\n+\tborder-radius: .2em;\n+}\n+h1.title {\n+\tline-height: 1.5em;\n+}\n+h2 {\n+\tfont-size: 30px;\n+\tpadding: .2em .5em;\n+\tbackground-color: #E9E9E9;\n+\tborder-radius: .3em;\n+}\n+h3 {\n+\tfont-size: 24px;\n+\tpadding: .2em .5em;\n+\tbackground-color: #DDE8FC;\n+\tborder-radius: .4em;\n+}\n h4 {\n-    font-size: 11pt;\n-    margin-top: 0em;\n-    margin-bottom: 0em;\n+\tfont-size: 18px;\n }\n-\n-code {\n-    font-size: 11pt;\n+h5 {\n+\tfont-size: 16px;\n }\n-\n-pre {\n-    margin-left: 1.1em;\n-    padding: .4em .4em .4em .8em;\n-    font-size: 10pt;\n-    background-color: #F5F5F5;\n-    border-radius: 0.5em;\n-    border: 1px solid rgba(0, 0, 0, 0.15);\n+h6 {\n+\tfont-size: 14px;\n }\n \n-pre.rust {\n-    background-color: #F3F6FF;\n+p {\n+\tmargin: 0 0 10px;\n }\n \n-a, a:visited, a:link {\n-    text-decoration: none;\n-    color: rgb(0, 105, 214);\n+/* Links layout\n+   ========================================================================== */\n+a {\n+\ttext-decoration: none;\n+\tcolor: #428BCA;\n+}\n+a:hover, a:focus {\n+\tcolor: #2A6496;\n+\ttext-decoration: underline;\n+}\n+a:focus {\n+\toutline: thin dotted #333;\n+\toutline: 5px auto -webkit-focus-ring-color;\n+\toutline-offset: -2px;\n+}\n+a:hover, a:active {\n+\toutline: 0;\n }\n \n h1 a:link, h1 a:visited, h2 a:link, h2 a:visited,\n-h3 a:link, h3 a:visited { color: black; }\n+h3 a:link, h3 a:visited, h4 a:link, h4 a:visited,\n+h5 a:link, h5 a:visited {color: black;}\n+\n+/* Code\n+   ========================================================================== */\n+pre, code {\n+\tfont-family: Monaco, Menlo, Consolas, \"Courier New\", monospace;\n+\tborder-radius: 4px;\n+}\n+pre {\n+\tbackground-color: #F5F5F5;\n+\tborder: 1px solid #CCC;\n+\tborder-radius: 0.5em;\n+\twhite-space: pre-wrap;\n+\tpadding: 9.5px;\n+\tmargin: 10px 0;\n+\tfont-size: 13px;\n+\tword-break: break-all;\n+\tword-wrap: break-word;\n+}\n+code {\n+\tpadding: 2px 4px;\n+\tfont-size: 90%;\n+\tcolor: #C7254E;\n+\tbackground-color: #F9F2F4;\n+\twhite-space: nowrap;\n+}\n+pre code {\n+\tpadding: 0;\n+\tfont-size: inherit;\n+\tcolor: inherit;\n+\twhite-space: pre-wrap;\n+\tbackground-color: transparent;\n+\tborder: 0;\n+}\n \n /* Code highlighting */\n .cm-s-default span.cm-keyword {color: #708;}\n@@ -99,58 +165,142 @@ h3 a:link, h3 a:visited { color: black; }\n .cm-s-default span.cm-tag {color: #170;}\n .cm-s-default span.cm-attribute {color: #00c;}\n \n+/* The rest\n+   ========================================================================== */\n #versioninfo {\n-  position: fixed;\n-  bottom: 0px;\n-  right: 0px;\n-\n-  background-color: white;\n-  padding: 0.5em;\n+\ttext-align: center;\n+\tmargin: 0.5em;\n+\tfont-size: 1.1em;\n }\n-\n-a.lessimportant {\n-  color: gray;\n-  font-size: 60%;\n+@media (min-width: 768px) {\n+\t#versioninfo {\n+\t\tposition: fixed;\n+\t\tbottom: 0px;\n+\t\tright: 0px;\n+\t}\n+\t.white-sticker {\n+\t\tbackground-color: #fff;\n+\t\tmargin: 2px;\n+\t\tpadding: 0 2px;\n+\t\tborder-radius: .3em;\n+\t}\n+}\n+#versioninfo a.hash {\n+\tcolor: gray;\n+\tfont-size: 60%;\n }\n \n blockquote {\n-    color: black;\n-    border-left: solid 1px silver;\n-    margin: 1em;\n-    padding: 0.5em 1em 0.5em 1em;\n+\tcolor: black;\n+\tborder-left: 5px solid #eee;\n+\tmargin: 0 0 20px;\n+\tpadding: 10px 20px;\n+}\n+blockquote p {\n+\tfont-size: 17px;\n+\tfont-weight: 300;\n+\tline-height: 1.25;\n+}\n+blockquote p:last-child {\n+\tmargin-bottom: 0;\n }\n \n /* Make the table under the tutorial's 'Types' section look nicer */\n table {\n-    border-top: 1px solid silver;\n-    border-bottom: 1px solid silver;\n-    padding: 0.8em;\n-    font-size: smaller;\n+\tborder-top: 1px solid silver;\n+\tborder-bottom: 1px solid silver;\n+\tpadding: 0.8em;\n+\tfont-size: smaller;\n }\n /* Also for the benefit of the type table */\n td {\n-    padding-right: 1em;\n+\tpadding-right: 1em;\n }\n \n-/* Only display one level of hierarchy in the TOC */\n-#TOC ul ul {\n-    display: none;\n+ul,\n+ol {\n+\tmargin-top: 0;\n+\tmargin-bottom: 10px;\n+}\n+ul ul,\n+ol ul,\n+ul ol,\n+ol ol {\n+\tmargin-bottom: 0;\n+}\n+dl {\n+\tmargin-bottom: 20px;\n+}\n+dd {\n+\tmargin-left: 0;\n }\n \n #TOC ul {\n-    list-style: none;\n-    padding-left: 0px;\n+\tlist-style-type: none;\n+\tpadding-left: 0px;\n+}\n+/* Only display one level of hierarchy in the TOC */\n+#TOC ul ul {\n+\tdisplay: none;\n }\n \n /* Adjust list alignment so rustdoc indexes don't align with blockquotes */\n div.index ul {\n-    padding-left: 1em;\n+\tpadding-left: 1em;\n }\n \n-ul {\n-    margin-top: 0em\n+div.section.level3 {\n+\tmargin-left: 1em;\n }\n \n-div.section.level3  {\n-    margin-left: 1.0em;\n+sub,\n+sup {\n+\tfont-size: 75%;\n+\tline-height: 0;\n+\tposition: relative;\n }\n+\n+hr {\n+\tmargin-top: 20px;\n+\tmargin-bottom: 20px;\n+\tborder: 0;\n+\tborder-top: 1px solid #eeeeee;\n+}\n+\n+@media print {\n+\t* {\n+\t\ttext-shadow: none !important;\n+\t\tcolor: #000 !important;\n+\t\tbackground: transparent !important;\n+\t\tbox-shadow: none !important;\n+\t}\n+\ta, a:visited {\n+\t\ttext-decoration: underline;\n+\t}\n+\ta[href]:after {\n+\t\tcontent: \" (\" attr(href) \")\";\n+\t}\n+\ta[href^=\"javascript:\"]:after, a[href^=\"#\"]:after {\n+\t\tcontent: \"\";\n+\t}\n+\tpre, blockquote {\n+\t\tborder: 1px solid #999;\n+\t\tpage-break-inside: avoid;\n+\t}\n+\t@page {\n+\t\tmargin: 2cm .5cm;\n+\t}\n+\tp, h2, h3 {\n+\t\torphans: 3;\n+\t\twidows: 3;\n+\t}\n+\th2, h3 {\n+\t\tpage-break-after: avoid;\n+\t}\n+\ttable {\n+\t\tborder-collapse: collapse !important;\n+\t}\n+\ttable td, table th {\n+\t\tbackground-color: #fff !important;\n+\t}\n+}\n\\ No newline at end of file"}, {"sha": "e17f8ed890b284753b69f0122b05fe8410addb33", "filename": "doc/rust.md", "status": "modified", "additions": 156, "deletions": 203, "changes": 359, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -60,17 +60,15 @@ dialect of EBNF supported by common automated LL(k) parsing tools such as\n `llgen`, rather than the dialect given in ISO 14977. The dialect can be\n defined self-referentially as follows:\n \n-~~~~~~~~ {.ebnf .notation}\n-\n+~~~~ {.ebnf .notation}\n grammar : rule + ;\n rule    : nonterminal ':' productionrule ';' ;\n productionrule : production [ '|' production ] * ;\n production : term * ;\n term : element repeats ;\n element : LITERAL | IDENTIFIER | '[' productionrule ']' ;\n repeats : [ '*' | '+' ] NUMBER ? | NUMBER ? | '?' ;\n-\n-~~~~~~~~\n+~~~~\n \n Where:\n \n@@ -111,7 +109,6 @@ When such a string enclosed in double-quotes (`\"`) occurs inside the\n grammar, it is an implicit reference to a single member of such a string table\n production. See [tokens](#tokens) for more information.\n \n-\n # Lexical structure\n \n ## Input format\n@@ -153,12 +150,12 @@ Some productions are defined by exclusion of particular Unicode characters:\n \n ## Comments\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n comment : block_comment | line_comment ;\n block_comment : \"/*\" block_comment_body * '*' + '/' ;\n block_comment_body : non_star * | '*' + non_slash_or_star ;\n line_comment : \"//\" non_eol * ;\n-~~~~~~~~\n+~~~~\n \n Comments in Rust code follow the general C++ style of line and block-comment forms,\n with no nesting of block-comment delimiters.\n@@ -172,10 +169,10 @@ Non-doc comments are interpreted as a form of whitespace.\n \n ## Whitespace\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n whitespace_char : '\\x20' | '\\x09' | '\\x0a' | '\\x0d' ;\n whitespace : [ whitespace_char | comment ] + ;\n-~~~~~~~~\n+~~~~\n \n The `whitespace_char` production is any nonempty Unicode string consisting of any\n of the following Unicode characters: `U+0020` (space, `' '`), `U+0009` (tab,\n@@ -189,10 +186,10 @@ with any other legal whitespace element, such as a single space character.\n \n ## Tokens\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n simple_token : keyword | unop | binop ;\n token : simple_token | ident | literal | symbol | whitespace token ;\n-~~~~~~~~\n+~~~~\n \n Tokens are primitive productions in the grammar defined by regular\n (non-recursive) languages. \"Simple\" tokens are given in [string table\n@@ -203,7 +200,7 @@ grammar as double-quoted strings. Other tokens have exact rules given.\n \n The keywords are the following strings:\n \n-~~~~~~~~ {.keyword}\n+~~~~ {.keyword}\n as\n break\n do\n@@ -218,7 +215,7 @@ self static struct super\n true trait type\n unsafe use\n while\n-~~~~~~~~\n+~~~~\n \n Each of these keywords has special meaning in its grammar,\n and all of them are excluded from the `ident` rule.\n@@ -231,13 +228,13 @@ evaluates to, rather than referring to it by name or some other evaluation\n rule. A literal is a form of constant expression, so is evaluated (primarily)\n at compile time.\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n literal : string_lit | char_lit | num_lit ;\n-~~~~~~~~\n+~~~~\n \n #### Character and string literals\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n char_lit : '\\x27' char_body '\\x27' ;\n string_lit : '\"' string_body * '\"' | 'r' raw_string ;\n \n@@ -260,7 +257,7 @@ hex_digit : 'a' | 'b' | 'c' | 'd' | 'e' | 'f'\n dec_digit : '0' | nonzero_dec ;\n nonzero_dec: '1' | '2' | '3' | '4'\n            | '5' | '6' | '7' | '8' | '9' ;\n-~~~~~~~~\n+~~~~\n \n A _character literal_ is a single Unicode character enclosed within two\n `U+0027` (single-quote) characters, with the exception of `U+0027` itself,\n@@ -305,7 +302,7 @@ many `U+0023` (`#`) characters as were used to start the raw string literal) or\n \n Examples for string literals:\n \n-~~~\n+~~~~\n \"foo\"; r\"foo\";                     // foo\n \"\\\"foo\\\"\"; r#\"\"foo\"\"#;             // \"foo\"\n \n@@ -314,11 +311,11 @@ r##\"foo #\"# bar\"##;                // foo #\"# bar\n \n \"\\x52\"; \"R\"; r\"R\";                 // R\n \"\\\\x52\"; r\"\\x52\";                  // \\x52\n-~~~\n+~~~~\n \n #### Number literals\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n \n num_lit : nonzero_dec [ dec_digit | '_' ] * num_suffix ?\n         | '0' [       [ dec_digit | '_' ] + num_suffix ?\n@@ -335,7 +332,7 @@ float_suffix : [ exponent | '.' dec_lit exponent ? ] ? float_suffix_ty ? ;\n float_suffix_ty : 'f' [ '3' '2' | '6' '4' ] ;\n exponent : ['E' | 'e'] ['-' | '+' ] ? dec_lit ;\n dec_lit : [ dec_digit | '_' ] + ;\n-~~~~~~~~\n+~~~~\n \n A _number literal_ is either an _integer literal_ or a _floating-point\n literal_. The grammar for recognizing the two kinds of literals is mixed,\n@@ -413,11 +410,11 @@ The two values of the boolean type are written `true` and `false`.\n \n ### Symbols\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n symbol : \"::\" \"->\"\n        | '#' | '[' | ']' | '(' | ')' | '{' | '}'\n        | ',' | ';' ;\n-~~~~~~~~\n+~~~~\n \n Symbols are a general class of printable [token](#tokens) that play structural\n roles in a variety of grammar productions. They are catalogued here for\n@@ -428,17 +425,15 @@ operators](#binary-operator-expressions), or [keywords](#keywords).\n \n ## Paths\n \n-~~~~~~~~ {.ebnf .gram}\n-\n+~~~~ {.ebnf .gram}\n expr_path : ident [ \"::\" expr_path_tail ] + ;\n expr_path_tail : '<' type_expr [ ',' type_expr ] + '>'\n                | expr_path ;\n \n type_path : ident [ type_path_tail ] + ;\n type_path_tail : '<' type_expr [ ',' type_expr ] + '>'\n                | \"::\" type_path ;\n-\n-~~~~~~~~\n+~~~~\n \n A _path_ is a sequence of one or more path components _logically_ separated by\n a namespace qualifier (`::`). If a path consists of only one component, it may\n@@ -451,7 +446,7 @@ across crates; an item's canonical path merely identifies it within the crate.\n \n Two examples of simple paths consisting of only identifier components:\n \n-~~~~{.ignore}\n+~~~~ {.ignore}\n x;\n x::y::z;\n ~~~~\n@@ -495,8 +490,7 @@ with values. `proto!` is an item, defining a new name.\n \n ## Macros\n \n-~~~~~~~~ {.ebnf .gram}\n-\n+~~~~ {.ebnf .gram}\n expr_macro_rules : \"macro_rules\" '!' ident '(' macro_rule * ')'\n macro_rule : '(' matcher * ')' \"=>\" '(' transcriber * ')' ';'\n matcher : '(' matcher * ')' | '[' matcher * ']'\n@@ -507,8 +501,7 @@ transcriber : '(' transcriber * ')' | '[' transcriber * ']'\n             | '{' transcriber * '}' | '$' ident\n             | '$' '(' transcriber * ')' sep_token? [ '*' | '+' ]\n             | non_special_token\n-\n-~~~~~~~~\n+~~~~\n \n User-defined syntax extensions are called \"macros\",\n and the `macro_rules` syntax extension defines them.\n@@ -570,7 +563,6 @@ index operation and fail. Adding a separator can solve this problem.\n 2. The parser must have eliminated all ambiguity by the time it reaches a `$` _name_ `:` _designator_.\n This requirement most often affects name-designator pairs when they occur at the beginning of, or immediately after, a `$(...)*`; requiring a distinctive token in front can solve the problem.\n \n-\n ## Syntax extensions useful for the macro author\n \n * `log_syntax!` : print out the arguments at compile time\n@@ -611,7 +603,7 @@ and may optionally begin with any number of `attributes` that apply to the conta\n Attributes on the anonymous crate module define important metadata that influences\n the behavior of the compiler.\n \n-~~~~~~~~\n+~~~~\n // Linkage attributes\n #[ link(name = \"projx\",\n         vers = \"2.5\",\n@@ -627,23 +619,22 @@ the behavior of the compiler.\n \n // Turn on a warning\n #[ warn(non_camel_case_types) ];\n-~~~~~~~~\n+~~~~\n \n A crate that contains a `main` function can be compiled to an executable.\n If a `main` function is present, its return type must be [`unit`](#primitive-types) and it must take no arguments.\n \n-\n # Items and attributes\n \n Crates contain [items](#items),\n each of which may have some number of [attributes](#attributes) attached to it.\n \n ## Items\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n item : mod_item | fn_item | type_item | struct_item | enum_item\n      | static_item | trait_item | impl_item | extern_block ;\n-~~~~~~~~\n+~~~~\n \n An _item_ is a component of a crate; some module items can be defined in crate\n files, but most are defined in source files. Items are organized within a\n@@ -688,10 +679,10 @@ That is, Rust has no notion of type abstraction: there are no first-class \"foral\n \n ### Modules\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n mod_item : \"mod\" ident ( ';' | '{' mod '}' );\n mod : [ view_item | item ] * ;\n-~~~~~~~~\n+~~~~\n \n A module is a container for zero or more [view items](#view-items) and zero or\n more [items](#items). The view items manage the visibility of the items\n@@ -704,7 +695,7 @@ of modules making up a crate. Modules can nest arbitrarily.\n \n An example of a module:\n \n-~~~~~~~~\n+~~~~\n mod math {\n     type complex = (f64, f64);\n     fn sin(f: f64) -> f64 {\n@@ -720,7 +711,7 @@ mod math {\n # fail2!();\n     }\n }\n-~~~~~~~~\n+~~~~\n \n Modules and types share the same namespace.\n Declaring a named type that has the same name as a module in scope is forbidden:\n@@ -732,33 +723,33 @@ name as the module, plus the `.rs` extension.\n When a nested submodule is loaded from an external file,\n it is loaded from a subdirectory path that mirrors the module hierarchy.\n \n-~~~ {.xfail-test}\n+~~~~ {.xfail-test}\n // Load the `vec` module from `vec.rs`\n mod vec;\n \n mod task {\n     // Load the `local_data` module from `task/local_data.rs`\n     mod local_data;\n }\n-~~~\n+~~~~\n \n The directories and files used for loading external file modules can be influenced\n with the `path` attribute.\n \n-~~~ {.xfail-test}\n+~~~~ {.xfail-test}\n #[path = \"task_files\"]\n mod task {\n     // Load the `local_data` module from `task_files/tls.rs`\n     #[path = \"tls.rs\"]\n     mod local_data;\n }\n-~~~\n+~~~~\n \n #### View items\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n view_item : extern_mod_decl | use_decl ;\n-~~~~~~~~\n+~~~~\n \n A view item manages the namespace of a module.\n View items do not define new items, but rather, simply change other items' visibility.\n@@ -769,11 +760,11 @@ There are several kinds of view item:\n \n ##### Extern mod declarations\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n extern_mod_decl : \"extern\" \"mod\" ident [ '(' link_attrs ')' ] ? [ '=' string_lit ] ? ;\n link_attrs : link_attr [ ',' link_attrs ] + ;\n link_attr : ident '=' literal ;\n-~~~~~~~~\n+~~~~\n \n An _`extern mod` declaration_ specifies a dependency on an external crate.\n The external crate is then bound into the declaring scope\n@@ -801,26 +792,26 @@ is that the name `a` should be taken as a reference to the crate whose absolute\n \n Four examples of `extern mod` declarations:\n \n-~~~~~~~~{.xfail-test}\n+~~~~ {.xfail-test}\n extern mod pcre (uuid = \"54aba0f8-a7b1-4beb-92f1-4cf625264841\");\n \n extern mod extra; // equivalent to: extern mod extra ( name = \"extra\" );\n \n extern mod rustextra (name = \"extra\"); // linking to 'extra' under another name\n \n extern mod complicated_mod = \"some-file/in/the-rust/path\";\n-~~~~~~~~\n+~~~~\n \n ##### Use declarations\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n use_decl : \"pub\" ? \"use\" ident [ '=' path\n                           | \"::\" path_glob ] ;\n \n path_glob : ident [ \"::\" path_glob ] ?\n           | '*'\n           | '{' ident [ ',' ident ] * '}'\n-~~~~~~~~\n+~~~~\n \n A _use declaration_ creates one or more local name bindings synonymous\n with some other [path](#paths).\n@@ -940,9 +931,9 @@ fn add(x: int, y: int) -> int {\n As with `let` bindings, function arguments are irrefutable patterns,\n so any pattern that is valid in a let binding is also valid as an argument.\n \n-~~~\n+~~~~\n fn first((value, _): (int, int)) -> int { value }\n-~~~\n+~~~~\n \n \n #### Generic functions\n@@ -1117,22 +1108,22 @@ extern functions with bodies defined in Rust code _can be called by foreign\n code_. They are defined in the same way as any other Rust function,\n except that they have the `extern` modifier.\n \n-~~~\n+~~~~\n // Declares an extern fn, the ABI defaults to \"C\"\n extern fn new_vec() -> ~[int] { ~[] }\n \n // Declares an extern fn with \"stdcall\" ABI\n extern \"stdcall\" fn new_vec_stdcall() -> ~[int] { ~[] }\n-~~~\n+~~~~\n \n Unlike normal functions, extern fns have an `extern \"ABI\" fn()`.\n This is the same type as the functions declared in an extern\n block.\n \n-~~~\n+~~~~\n # extern fn new_vec() -> ~[int] { ~[] }\n let fptr: extern \"C\" fn() -> ~[int] = new_vec;\n-~~~\n+~~~~\n \n Extern functions may be called from Rust code, but\n caution must be taken with respect to the size of the stack\n@@ -1218,9 +1209,9 @@ whereas `Dog` is simply called an enum variant.\n \n ### Static items\n \n-~~~~~~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n static_item : \"static\" ident ':' type '=' expr ';' ;\n-~~~~~~~~\n+~~~~\n \n A *static item* is a named _constant value_ stored in the global data section of a crate.\n Immutable static items are stored in the read-only data section.\n@@ -1265,7 +1256,7 @@ running in the same process.\n Mutable statics are still very useful, however. They can be used with C\n libraries and can also be bound from C libraries (in an ```extern``` block).\n \n-~~~\n+~~~~\n # fn atomic_add(_: &mut uint, _: uint) -> uint { 2 }\n \n static mut LEVELS: uint = 0;\n@@ -1284,8 +1275,7 @@ unsafe fn bump_levels_unsafe1() -> uint {\n unsafe fn bump_levels_unsafe2() -> uint {\n     return atomic_add(&mut LEVELS, 1);\n }\n-\n-~~~\n+~~~~\n \n ### Traits\n \n@@ -1392,18 +1382,18 @@ In type-parameterized functions,\n methods of the supertrait may be called on values of subtrait-bound type parameters.\n Referring to the previous example of `trait Circle : Shape`:\n \n-~~~\n+~~~~\n # trait Shape { fn area(&self) -> f64; }\n # trait Circle : Shape { fn radius(&self) -> f64; }\n fn radius_times_area<T: Circle>(c: T) -> f64 {\n     // `c` is both a Circle and a Shape\n     c.radius() * c.area()\n }\n-~~~\n+~~~~\n \n Likewise, supertrait methods may also be called on trait objects.\n \n-~~~ {.xfail-test}\n+~~~~ {.xfail-test}\n # trait Shape { fn area(&self) -> f64; }\n # trait Circle : Shape { fn radius(&self) -> f64; }\n # impl Shape for int { fn area(&self) -> f64 { 0.0 } }\n@@ -1412,7 +1402,7 @@ Likewise, supertrait methods may also be called on trait objects.\n \n let mycircle: Circle = @mycircle as @Circle;\n let nonsense = mycircle.radius() * mycircle.area();\n-~~~\n+~~~~\n \n ### Implementations\n \n@@ -1470,10 +1460,10 @@ impl Seq<bool> for u32 {\n \n ### External blocks\n \n-~~~ {.ebnf .gram}\n+~~~~ {.ebnf .gram}\n extern_block_item : \"extern\" '{' extern_block '} ;\n extern_block : [ foreign_fn ] * ;\n-~~~\n+~~~~\n \n External blocks form the basis for Rust's foreign function interface.\n Declarations in an external block describe symbols\n@@ -1484,14 +1474,14 @@ are declared in the same way as other Rust functions,\n with the exception that they may not have a body\n and are instead terminated by a semicolon.\n \n-~~~\n+~~~~\n # use std::libc::{c_char, FILE};\n # #[nolink]\n \n extern {\n     fn fopen(filename: *c_char, mode: *c_char) -> *FILE;\n }\n-~~~\n+~~~~\n \n Functions within external blocks may be called by Rust code,\n just like functions defined in Rust.\n@@ -1505,17 +1495,17 @@ By default external blocks assume that the library they are calling\n uses the standard C \"cdecl\" ABI.  Other ABIs may be specified using\n an `abi` string, as shown here:\n \n-~~~{.xfail-test}\n+~~~~ {.xfail-test}\n // Interface to the Windows API\n extern \"stdcall\" { }\n-~~~\n+~~~~\n \n The `link_name` attribute allows the name of the library to be specified.\n \n-~~~{.xfail-test}\n+~~~~ {.xfail-test}\n #[link_name = \"crypto\"]\n extern { }\n-~~~\n+~~~~\n \n The `nolink` attribute tells the Rust compiler\n not to do any linking for the external block.\n@@ -1553,7 +1543,7 @@ allowed to alter this default visibility with the `pub` keyword (or `priv`\n keyword for struct fields and enum variants). When an item is declared as `pub`,\n it can be thought of as being accessible to the outside world. For example:\n \n-~~~\n+~~~~\n // Declare a private struct\n struct Foo;\n \n@@ -1567,7 +1557,7 @@ pub enum State {\n     PubliclyAccessibleState,\n     priv PrivatelyAccessibleState\n }\n-~~~\n+~~~~\n \n With the notion of an item being either public or private, Rust allows item\n accesses in two cases:\n@@ -1609,7 +1599,7 @@ scope.\n \n Here's an example of a program which exemplifies the three cases outlined above.\n \n-~~~\n+~~~~\n // This module is private, meaning that no external crate can access this\n // module. Because it is private at the root of this current crate, however, any\n // module in the crate may access any publicly visible item in this module.\n@@ -1657,7 +1647,7 @@ pub mod submodule {\n }\n \n # fn main() {}\n-~~~\n+~~~~\n \n For a rust program to pass the privacy checking pass, all paths must be valid\n accesses given the two rules above. This includes all use statements,\n@@ -1670,15 +1660,15 @@ this is a public directive, this allows the item to be used in the current\n module through the rules above. It essentially allows public access into the\n re-exported item. For example, this program is valid:\n \n-~~~\n+~~~~\n pub use api = self::implementation;\n \n mod implementation {\n     pub fn f() {}\n }\n \n # fn main() {}\n-~~~\n+~~~~\n \n This means that any external crate referencing `implementation::f` would receive\n a privacy violation, while the path `api::f` would be allowed.\n@@ -1699,12 +1689,12 @@ import public items from their destination, not private items.\n \n ## Attributes\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n attribute : '#' '[' attr_list ']' ;\n attr_list : attr [ ',' attr_list ]*\n attr : ident [ '=' literal\n              | '(' attr_list ')' ] ? ;\n-~~~~~~~~\n+~~~~\n \n Static entities in Rust -- crates, modules and items -- may have _attributes_\n applied to them. ^[Attributes in Rust are modeled on Attributes in ECMA-335,\n@@ -1721,7 +1711,7 @@ within. Attributes that are not terminated by a semi-colon apply to the next ent\n \n An example of attributes:\n \n-~~~~~~~~{.xfail-test}\n+~~~~ {.xfail-test}\n // General metadata applied to the enclosing module or crate.\n #[license = \"BSD\"];\n \n@@ -1740,7 +1730,7 @@ mod bar {\n // A lint attribute used to suppress a warning/error\n #[allow(non_camel_case_types)]\n pub type int8_t = i8;\n-~~~~~~~~\n+~~~~\n \n > **Note:** In future versions of Rust, user-provided extensions to the compiler will be able to interpret attributes.\n > When this facility is provided, the compiler will distinguish between language-reserved and user-available attributes.\n@@ -1779,7 +1769,7 @@ For any lint check `C`:\n The lint checks supported by the compiler can be found via `rustc -W help`,\n along with their default settings.\n \n-~~~{.xfail-test}\n+~~~~ {.xfail-test}\n mod m1 {\n     // Missing documentation is ignored here\n     #[allow(missing_doc)]\n@@ -1793,12 +1783,12 @@ mod m1 {\n     #[deny(missing_doc)]\n     pub fn undocumented_end() -> int { 3 }\n }\n-~~~\n+~~~~\n \n This example shows how one can use `allow` and `warn` to toggle\n a particular check on and off.\n \n-~~~{.xfail-test}\n+~~~~ {.xfail-test}\n #[warn(missing_doc)]\n mod m2{\n     #[allow(missing_doc)]\n@@ -1815,20 +1805,20 @@ mod m2{\n     // Missing documentation signals a warning here\n     pub fn undocumented_too() -> int { 3 }\n }\n-~~~\n+~~~~\n \n This example shows how one can use `forbid` to disallow uses\n of `allow` for that lint check.\n \n-~~~{.xfail-test}\n+~~~~ {.xfail-test}\n #[forbid(missing_doc)]\n mod m3 {\n     // Attempting to toggle warning signals an error here\n     #[allow(missing_doc)]\n     /// Returns 2.\n     pub fn undocumented_too() -> int { 2 }\n }\n-~~~\n+~~~~\n \n ### Language items\n \n@@ -1838,12 +1828,12 @@ The definitions of these operations have to be easy for the compiler to find.\n The `lang` attribute makes it possible to declare these operations.\n For example, the `str` module in the Rust standard library defines the string equality function:\n \n-~~~ {.xfail-test}\n+~~~~ {.xfail-test}\n #[lang=\"str_eq\"]\n pub fn eq_slice(a: &str, b: &str) -> bool {\n     // details elided\n }\n-~~~\n+~~~~\n \n The name `str_eq` has a special meaning to the Rust compiler,\n and the presence of this definition means that it will use this definition\n@@ -1935,17 +1925,17 @@ create an `impl` for the `Eq` and `Clone` traits for `Foo`, the type\n parameter `T` will be given the `Eq` or `Clone` constraints for the\n appropriate `impl`:\n \n-~~~\n+~~~~\n #[deriving(Eq, Clone)]\n struct Foo<T> {\n     a: int,\n     b: T\n }\n-~~~\n+~~~~\n \n The generated `impl` for `Eq` is equivalent to\n \n-~~~\n+~~~~\n # struct Foo<T> { a: int, b: T }\n impl<T: Eq> Eq for Foo<T> {\n     fn eq(&self, other: &Foo<T>) -> bool {\n@@ -1956,7 +1946,7 @@ impl<T: Eq> Eq for Foo<T> {\n         self.a != other.a || self.b != other.b\n     }\n }\n-~~~\n+~~~~\n \n Supported traits for `deriving` are:\n \n@@ -1999,7 +1989,7 @@ by default. Items with not marked with a stability are considered to\n be unstable for the purposes of the lint. One can give an optional\n string that will be displayed when the lint flags the use of an item.\n \n-~~~ {.xfail-test}\n+~~~~ {.xfail-test}\n #[warn(unstable)];\n \n #[deprecated=\"replaced by `best`\"]\n@@ -2023,7 +2013,7 @@ fn main() {\n \n     best(); // no warning\n }\n-~~~\n+~~~~\n \n > **Note:** Currently these are only checked when applied to\n > individual functions, structs, methods and enum variants, *not* to\n@@ -2038,9 +2028,9 @@ considered a full-fleged language feature.\n \n For this reason, rust recognizes a special crate-level attribute of the form:\n \n-~~~ {.xfail-test}\n+~~~~ {.xfail-test}\n #[feature(feature1, feature2, feature3)]\n-~~~\n+~~~~\n \n This directive informs the compiler that the feature list: `feature1`,\n `feature2`, and `feature3` should all be enabled. This is only recognized at a\n@@ -2123,13 +2113,12 @@ declaring the item outside the statement block.\n Note: there is no implicit capture of the function's dynamic environment when\n declaring a function-local item.\n \n-\n #### Slot declarations\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n let_decl : \"let\" pat [':' type ] ? [ init ] ? ';' ;\n init : [ '=' ] expr ;\n-~~~~~~~~\n+~~~~\n \n A _slot declaration_ introduces a new set of slots, given by a pattern.\n The pattern may be followed by a type annotation, and/or an initializer expression.\n@@ -2194,19 +2183,18 @@ or values that implement the special trait `Drop`,\n the variable is moved.\n All other types are copied.\n \n-\n ### Literal expressions\n \n A _literal expression_ consists of one of the [literal](#literals)\n forms described earlier. It directly describes a number, character,\n string, boolean value, or the unit value.\n \n-~~~~~~~~ {.literals}\n+~~~~ {.literals}\n ();        // unit type\n \"hello\";   // string type\n '5';       // character type\n 5;         // integer type\n-~~~~~~~~\n+~~~~\n \n ### Path expressions\n \n@@ -2219,22 +2207,22 @@ Tuples are written by enclosing one or more comma-separated\n expressions in parentheses. They are used to create [tuple-typed](#tuple-types)\n values.\n \n-~~~~~~~~ {.tuple}\n+~~~~ {.tuple}\n (0,);\n (0.0, 4.5);\n (\"a\", 4u, true);\n-~~~~~~~~\n+~~~~\n \n ### Structure expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n struct_expr : expr_path '{' ident ':' expr\n                       [ ',' ident ':' expr ] *\n                       [ \"..\" expr ] '}' |\n               expr_path '(' expr\n                       [ ',' expr ] * ')' |\n               expr_path\n-~~~~~~~~\n+~~~~\n \n There are several forms of structure expressions.\n A _structure expression_ consists of the [path](#paths) of a [structure item](#structures),\n@@ -2281,53 +2269,51 @@ Point3d {y: 0, z: 10, .. base};\n \n ### Record expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n rec_expr : '{' ident ':' expr\n                [ ',' ident ':' expr ] *\n                [ \"..\" expr ] '}'\n-~~~~~~~~\n+~~~~\n \n ### Method-call expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n method_call_expr : expr '.' ident paren_expr_list ;\n-~~~~~~~~\n+~~~~\n \n A _method call_ consists of an expression followed by a single dot, an identifier, and a parenthesized expression-list.\n Method calls are resolved to methods on specific traits,\n either statically dispatching to a method if the exact `self`-type of the left-hand-side is known,\n or dynamically dispatching if the left-hand-side expression is an indirect [object type](#object-types).\n \n-\n ### Field expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n field_expr : expr '.' ident\n-~~~~~~~~\n+~~~~\n \n A _field expression_ consists of an expression followed by a single dot and an identifier,\n when not immediately followed by a parenthesized expression-list (the latter is a [method call expression](#method-call-expressions)).\n A field expression denotes a field of a [structure](#structure-types).\n \n-~~~~~~~~ {.field}\n+~~~~ {.field}\n myrecord.myfield;\n {a: 10, b: 20}.a;\n-~~~~~~~~\n+~~~~\n \n A field access on a record is an [lvalue](#lvalues-rvalues-and-temporaries) referring to the value of that field.\n When the field is mutable, it can be [assigned](#assignment-expressions) to.\n \n When the type of the expression to the left of the dot is a pointer to a record or structure,\n it is automatically dereferenced to make the field access possible.\n \n-\n ### Vector expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n vec_expr : '[' \"mut\" ? vec_elems? ']'\n \n vec_elems : [expr [',' expr]*] | [expr ',' \"..\" expr]\n-~~~~~~~~\n+~~~~\n \n A [_vector_](#vector-types) _expression_ is written by enclosing zero or\n more comma-separated expressions of uniform type in square brackets.\n@@ -2345,10 +2331,9 @@ as a [literal](#literals) or a [static item](#static-items).\n \n ### Index expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n idx_expr : expr '[' expr ']'\n-~~~~~~~~\n-\n+~~~~\n \n [Vector](#vector-types)-typed expressions can be indexed by writing a\n square-bracket-enclosed expression (the index) after them. When the\n@@ -2395,9 +2380,9 @@ before the expression they apply to.\n \n ### Binary operator expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n binop_expr : expr binop expr ;\n-~~~~~~~~\n+~~~~\n \n Binary operators expressions are given in terms of\n [operator precedence](#operator-precedence).\n@@ -2484,7 +2469,6 @@ The default meaning of the operators on standard types is given here.\n   : Greater than or equal.\n     Calls the `ge` method on the `std::cmp::Ord` trait.\n \n-\n #### Type cast expressions\n \n A type cast expression is denoted with the binary operator `as`.\n@@ -2561,9 +2545,9 @@ An expression enclosed in parentheses evaluates to the result of the enclosed\n expression.  Parentheses can be used to explicitly specify evaluation order\n within an expression.\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n paren_expr : '(' expr ')' ;\n-~~~~~~~~\n+~~~~\n \n An example of a parenthesized expression:\n \n@@ -2574,11 +2558,11 @@ let x = (2 + 3) * 4;\n \n ### Call expressions\n \n-~~~~~~~~ {.abnf .gram}\n+~~~~ {.abnf .gram}\n expr_list : [ expr [ ',' expr ]* ] ? ;\n paren_expr_list : '(' expr_list ')' ;\n call_expr : expr paren_expr_list ;\n-~~~~~~~~\n+~~~~\n \n A _call expression_ invokes a function, providing zero or more input slots and\n an optional reference slot to serve as the function's output, bound to the\n@@ -2597,10 +2581,10 @@ let pi: Option<f32> = FromStr::from_str(\"3.14\");\n \n ### Lambda expressions\n \n-~~~~~~~~ {.abnf .gram}\n+~~~~ {.abnf .gram}\n ident_list : [ ident [ ',' ident ]* ] ? ;\n lambda_expr : '|' ident_list '|' expr ;\n-~~~~~~~~\n+~~~~\n \n A _lambda expression_ (sometimes called an \"anonymous function expression\") defines a function and denotes it as a value,\n in a single expression.\n@@ -2636,14 +2620,13 @@ fn ten_times(f: &fn(int)) {\n }\n \n ten_times(|j| println!(\"hello, {}\", j));\n-\n ~~~~\n \n ### While loops\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n while_expr : \"while\" expr '{' block '}' ;\n-~~~~~~~~\n+~~~~\n \n A `while` loop begins by evaluating the boolean loop conditional expression.\n If the loop conditional expression evaluates to `true`, the loop body block\n@@ -2667,9 +2650,9 @@ The keyword `loop` in Rust appears both in _loop expressions_ and in _continue e\n A loop expression denotes an infinite loop;\n see [Continue expressions](#continue-expressions) for continue expressions.\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n loop_expr : [ lifetime ':' ] \"loop\" '{' block '}';\n-~~~~~~~~\n+~~~~\n \n A `loop` expression may optionally have a _label_.\n If a label is present,\n@@ -2678,9 +2661,9 @@ See [Break expressions](#break-expressions).\n \n ### Break expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n break_expr : \"break\" [ lifetime ];\n-~~~~~~~~\n+~~~~\n \n A `break` expression has an optional `label`.\n If the label is absent, then executing a `break` expression immediately terminates the innermost loop enclosing it.\n@@ -2691,9 +2674,9 @@ but must enclose it.\n \n ### Continue expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n continue_expr : \"loop\" [ lifetime ];\n-~~~~~~~~\n+~~~~\n \n A continue expression, written `loop`, also has an optional `label`.\n If the label is absent,\n@@ -2708,12 +2691,11 @@ but must enclose it.\n \n A `loop` expression is only permitted in the body of a loop.\n \n-\n ### Do expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n do_expr : \"do\" expr [ '|' ident_list '|' ] ? '{' block '}' ;\n-~~~~~~~~\n+~~~~\n \n A _do expression_ provides a more-familiar block-syntax for a [lambda expression](#lambda-expressions),\n including a special translation of [return expressions](#return-expressions) inside the supplied block.\n@@ -2761,12 +2743,11 @@ do k(3) |j| {\n }\n ~~~~\n \n-\n ### For expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n for_expr : \"for\" pat \"in\" expr '{' block '}' ;\n-~~~~~~~~\n+~~~~ \n \n A `for` expression is a syntactic construct for looping\n over elements provided by an implementation of\n@@ -2799,13 +2780,13 @@ for i in range(0u, 256) {\n \n ### If expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n if_expr : \"if\" expr '{' block '}'\n           else_tail ? ;\n \n else_tail : \"else\" [ if_expr\n                    | '{' block '}' ] ;\n-~~~~~~~~\n+~~~~\n \n An `if` expression is a conditional branch in program control. The form of\n an `if` expression is a condition expression, followed by a consequent\n@@ -2818,17 +2799,15 @@ consequent block is skipped and any subsequent `else if` condition is\n evaluated. If all `if` and `else if` conditions evaluate to `false`\n then any `else` block is executed.\n \n-\n ### Match expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n match_expr : \"match\" expr '{' match_arm [ '|' match_arm ] * '}' ;\n \n match_arm : match_pat '=>' [ expr \",\" | '{' block '}' ] ;\n \n match_pat : pat [ \"..\" pat ] ? [ \"if\" expr ] ;\n-~~~~~~~~\n-\n+~~~~\n \n A `match` expression branches on a *pattern*. The exact form of matching that\n occurs depends on the pattern. Patterns consist of some combination of\n@@ -2866,7 +2845,6 @@ variables in the arm's block, and control enters the block.\n \n An example of an `match` expression:\n \n-\n ~~~~\n # fn process_pair(a: int, b: int) { }\n # fn process_ten() { }\n@@ -2946,9 +2924,9 @@ let message = match maybe_digit {\n \n ### Return expressions\n \n-~~~~~~~~{.ebnf .gram}\n+~~~~ {.ebnf .gram}\n return_expr : \"return\" expr ? ;\n-~~~~~~~~\n+~~~~\n \n Return expressions are denoted with the keyword `return`. Evaluating a `return`\n expression moves its argument into the output slot of the current\n@@ -2966,7 +2944,6 @@ fn max(a: int, b: int) -> int {\n }\n ~~~~\n \n-\n # Type system\n \n ## Types\n@@ -2992,7 +2969,6 @@ The primitive types are the following:\n \n The machine types are the following:\n \n-\n * The unsigned word types `u8`, `u16`, `u32` and `u64`, with values drawn from\n   the integer intervals $[0, 2^8 - 1]$, $[0, 2^{16} - 1]$, $[0, 2^{32} - 1]$ and\n   $[0, 2^{64} - 1]$ respectively.\n@@ -3017,7 +2993,6 @@ two's complement signed integer type with target-machine-dependent size. Its\n size, in bits, is equal to the size of the rust type `uint` on the same target\n machine.\n \n-\n ### Textual types\n \n The types `char` and `str` hold textual data.\n@@ -3031,7 +3006,6 @@ Since `str` is of unknown size, it is not a _first class_ type,\n but can only be instantiated through a pointer type,\n such as `&str`, `@str` or `~str`.\n \n-\n ### Tuple types\n \n The tuple type-constructor forms a new heterogeneous product of values similar\n@@ -3056,7 +3030,6 @@ let (a, b) = p;\n assert!(b != \"world\");\n ~~~~\n \n-\n ### Vector types\n \n The vector type constructor represents a homogeneous array of values of a given type.\n@@ -3087,7 +3060,6 @@ assert!(i == 3);\n All in-bounds elements of a vector are always initialized,\n and access to a vector is always bounds-checked.\n \n-\n ### Structure types\n \n A `struct` *type* is a heterogeneous product of other types, called the *fields* of the type.\n@@ -3127,7 +3099,6 @@ Any `enum` value consumes as much memory as the largest variant constructor for\n Enum types cannot be denoted *structurally* as types,\n but must be denoted by named reference to an [`enum` item](#enumerations).\n \n-\n ### Recursive types\n \n Nominal types -- [enumerations](#enumerated-types) and [structures](#structure-types) -- may be recursive.\n@@ -3155,7 +3126,6 @@ enum List<T> {\n let a: List<int> = Cons(7, @Cons(13, @Nil));\n ~~~~\n \n-\n ### Pointer types\n \n All pointers in Rust are explicit first-class values.\n@@ -3204,7 +3174,6 @@ Raw pointers (`*`)\n     they exist to support interoperability with foreign code,\n     and writing performance-critical or low-level functions.\n \n-\n ### Function types\n \n The function type constructor `fn` forms new function types.\n@@ -3213,7 +3182,7 @@ A function type consists of a possibly-empty set of function-type modifiers\n \n An example of a `fn` type:\n \n-~~~~~~~~\n+~~~~\n fn add(x: int, y: int) -> int {\n   return x + y;\n }\n@@ -3223,7 +3192,7 @@ let mut x = add(5,7);\n type Binop<'self> = &'self fn(int,int) -> int;\n let bo: Binop = add;\n x = bo(5,7);\n-~~~~~~~~\n+~~~~\n \n ### Object types\n \n@@ -3241,7 +3210,7 @@ the vtable pointer for the `T` implementation of `R`, and the pointer value of `\n \n An example of an object type:\n \n-~~~~~~~~\n+~~~~\n trait Printable {\n   fn to_string(&self) -> ~str;\n }\n@@ -3257,7 +3226,7 @@ fn print(a: @Printable) {\n fn main() {\n    print(@10 as @Printable);\n }\n-~~~~~~~~\n+~~~~\n \n In this example, the trait `Printable` occurs as an object type in both the type signature of `print`,\n and the cast expression in `main`.\n@@ -3266,7 +3235,7 @@ and the cast expression in `main`.\n \n Within the body of an item that has type parameter declarations, the names of its type parameters are types:\n \n-~~~~~~~\n+~~~~\n fn map<A: Clone, B: Clone>(f: &fn(A) -> B, xs: &[A]) -> ~[B] {\n     if xs.len() == 0 {\n        return ~[];\n@@ -3275,7 +3244,7 @@ fn map<A: Clone, B: Clone>(f: &fn(A) -> B, xs: &[A]) -> ~[B] {\n     let rest: ~[B] = map(f, xs.slice(1, xs.len()));\n     return ~[first] + rest;\n }\n-~~~~~~~\n+~~~~\n \n Here, `first` has type `B`, referring to `map`'s `B` type parameter;\n and `rest` has type `~[B]`, a vector type with element type `B`.\n@@ -3286,7 +3255,7 @@ The special type `self` has a meaning within methods inside an\n impl item. It refers to the type of the implicit `self` argument. For\n example, in:\n \n-~~~~~~~~\n+~~~~\n trait Printable {\n   fn make_string(&self) -> ~str;\n }\n@@ -3296,7 +3265,7 @@ impl Printable for ~str {\n         (*self).clone()\n     }\n }\n-~~~~~~~~\n+~~~~\n \n `self` refers to the value of type `~str` that is the receiver for a\n call to the method `make_string`.\n@@ -3374,7 +3343,6 @@ the heap may be shared between tasks, mutable portions may not.\n Allocations in the stack consist of *slots*, and allocations in the heap\n consist of *boxes*.\n \n-\n ### Memory allocation and lifetime\n \n The _items_ of a program are those functions, modules and types\n@@ -3417,7 +3385,6 @@ unmanaged kinds of data.\n When a task finishes, its stack is necessarily empty and it therefore has no\n references to any boxes; the remainder of its heap is immediately freed.\n \n-\n ### Memory slots\n \n A task's stack contains slots.\n@@ -3444,7 +3411,6 @@ state. Subsequent statements within a function may or may not initialize the\n local variables. Local variables can be used only after they have been\n initialized; this is enforced by the compiler.\n \n-\n ### Memory boxes\n \n A _box_ is a reference to a heap allocation holding another value. There\n@@ -3464,19 +3430,19 @@ Owned box values exist in 1:1 correspondence with their heap allocation.\n An example of constructing one managed box type and value, and one owned box\n type and value:\n \n-~~~~~~~~\n+~~~~\n let x: @int = @10;\n let x: ~int = ~10;\n-~~~~~~~~\n+~~~~\n \n Some operations (such as field selection) implicitly dereference boxes. An\n example of an _implicit dereference_ operation performed on box values:\n \n-~~~~~~~~\n+~~~~\n struct Foo { y: int }\n let x = @Foo{y: 10};\n assert!(x.y == 10);\n-~~~~~~~~\n+~~~~\n \n Other operations act on box values as single-word-sized address values. For\n these operations, to access the value held in the box requires an explicit\n@@ -3487,10 +3453,9 @@ operations are:\n * copying box values (`x = y`)\n * passing box values to functions (`f(x,y)`)\n \n-\n An example of an explicit-dereference operation performed on box values:\n \n-~~~~~~~~\n+~~~~\n fn takes_boxed(b: @int) {\n }\n \n@@ -3502,7 +3467,7 @@ fn main() {\n     takes_boxed(x);\n     takes_unboxed(*x);\n }\n-~~~~~~~~\n+~~~~\n \n ## Tasks\n \n@@ -3529,7 +3494,6 @@ in contexts where threads are too resource-intensive to use in large number.\n The cost of threads varies substantially per operating system, and is sometimes quite low,\n so this flexibility is not always worth exploiting.]\n \n-\n ### Communication between tasks\n \n Rust tasks are isolated and generally unable to interfere with one another's memory directly,\n@@ -3549,7 +3513,6 @@ Restricting communication interfaces to this kind ensures that no borrowed or ma\n Thus access to an entire data structure can be mediated through its owning \"root\" value;\n no further locking or copying is required to avoid data races within the substructure of such a value.\n \n-\n ### Task lifecycle\n \n The _lifecycle_ of a task consists of a finite set of states and events\n@@ -3593,7 +3556,6 @@ A task in the *dead* state cannot transition to other states; it exists\n only to have its termination status inspected by other tasks, and/or to await\n reclamation when the last reference to it drops.\n \n-\n ### Task scheduling\n \n The currently scheduled task is given a finite *time slice* in which to\n@@ -3604,10 +3566,8 @@ An executing task can yield control at any time, by making a library call to\n `std::task::yield`, which deschedules it immediately. Entering any other\n non-executing state (blocked, dead) similarly deschedules the task.\n \n-\n # Runtime services, linkage and debugging\n \n-\n The Rust _runtime_ is a relatively compact collection of C++ and Rust code\n that provides fundamental services and datatypes to all Rust tasks at\n run-time. It is smaller and simpler than many modern language runtimes. It is\n@@ -3637,8 +3597,6 @@ channels, tasks).\n Support for other built-in types such as simple types, tuples, records, and\n enums is open-coded by the Rust compiler.\n \n-\n-\n ### Task scheduling and communication\n \n The runtime provides code to manage inter-task communication.  This includes\n@@ -3647,7 +3605,6 @@ queues, as well as code to copy values between queues and their recipients and\n to serialize values for transmission over operating-system inter-process\n communication facilities.\n \n-\n ### Logging system\n \n The runtime contains a system for directing [logging\n@@ -3710,14 +3667,14 @@ of runtime logging modules follows.\n Rust provides several macros to log information. Here's a simple Rust program\n that demonstrates all four of them:\n \n-```rust\n+~~~~\n fn main() {\n     error2!(\"This is an error log\")\n     warn2!(\"This is a warn log\")\n     info2!(\"this is an info log\")\n     debug2!(\"This is a debug log\")\n }\n-```\n+~~~~\n \n These four log levels correspond to levels 1-4, as controlled by `RUST_LOG`:\n \n@@ -3736,7 +3693,6 @@ this is an info log\n \n ## Influences\n \n-\n >  The essential problem that must be solved in making a fault-tolerant\n >  software system is therefore that of fault-isolation. Different programmers\n >  will write different modules, some modules will be correct, others will have\n@@ -3745,7 +3701,6 @@ this is an info log\n >\n >  &mdash; Joe Armstrong\n \n-\n >  In our approach, all data is private to some process, and processes can\n >  only communicate through communications channels. *Security*, as used\n >  in this paper, is the property which guarantees that processes in a system\n@@ -3755,8 +3710,7 @@ this is an info log\n >  in isolation can be guaranteed to hold when that module is embedded in a\n >  system [...]\n >\n->  &mdash;  Robert Strom and Shaula Yemini\n-\n+>  &mdash; Robert Strom and Shaula Yemini\n \n >  Concurrent and applicative programming complement each other. The\n >  ability to send messages on channels provides I/O without side effects,\n@@ -3765,7 +3719,6 @@ this is an info log\n >\n >  &mdash; Rob Pike\n \n-\n Rust is not a particularly original language. It may however appear unusual\n by contemporary standards, as its design elements are drawn from a number of\n \"historical\" languages that have, with a few exceptions, fallen out of"}, {"sha": "767f712a8d8c11be19bd1a3c9a7ea484fe5e3e4f", "filename": "doc/tutorial-tasks.md", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Ftutorial-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Ftutorial-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-tasks.md?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -53,12 +53,12 @@ concurrency at this writing:\n   for safely sharing immutable data,\n * [`extra::future`] - A type representing values that may be computed concurrently and retrieved at a later time.\n \n-[`std::task`]: std/task.html\n-[`std::comm`]: std/comm.html\n-[`extra::comm`]: extra/comm.html\n-[`extra::sync`]: extra/sync.html\n-[`extra::arc`]: extra/arc.html\n-[`extra::future`]: extra/future.html\n+[`std::task`]: std/task/index.html\n+[`std::comm`]: std/comm/index.html\n+[`extra::comm`]: extra/comm/index.html\n+[`extra::sync`]: extra/sync/index.html\n+[`extra::arc`]: extra/arc/index.html\n+[`extra::future`]: extra/future/index.html\n \n # Basics\n \n@@ -449,7 +449,7 @@ enum. If the child task terminates successfully, `try` will\n return an `Ok` result; if the child task fails, `try` will return\n an `Error` result.\n \n-[`Result`]: std/result.html\n+[`Result`]: std/result/index.html\n \n > ***Note:*** A failed task does not currently produce a useful error\n > value (`try` always returns `Err(())`). In the"}, {"sha": "51a2e6eb38420c82e2f85425bd4188c3a1dfa0ae", "filename": "doc/tutorial.md", "status": "modified", "additions": 30, "deletions": 28, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -1391,8 +1391,8 @@ Both vectors and strings support a number of useful\n [methods](#methods), defined in [`std::vec`]\n and [`std::str`]. Here are some examples.\n \n-[`std::vec`]: std/vec.html\n-[`std::str`]: std/str.html\n+[`std::vec`]: std/vec/index.html\n+[`std::str`]: std/str/index.html\n \n ~~~\n # enum Crayon {\n@@ -2966,30 +2966,30 @@ The full documentation for `std` can be found here: [standard library].\n \n [standard library]: std/index.html\n [`std`]: std/index.html\n-[`bool`]: std/bool.html\n-[tuples]: std/tuple.html\n-[characters]: std/char.html\n-[strings]: std/str.html\n-[vectors]: std/vec.html\n-[managed boxes]: std/managed.html\n-[owned boxes]: std/owned.html\n-[pointers]: std/ptr.html\n-[`option`]: std/option.html\n-[`result`]: std/result.html\n-[task]: std/task.html\n-[communication]: std/comm.html\n-[`os`]: std/os.html\n-[`path`]: std/path.html\n-[`io`]: std/io.html\n-[containers]: std/container.html\n-[`hashmap`]: std/hashmap.html\n-[`kinds`]: std/kinds.html\n-[`ops`]: std/ops.html\n-[`cmp`]: std/cmp.html\n-[`num`]: std/num.html\n-[`to_str`]: std/to_str.html\n-[`clone`]: std/clone.html\n-[`libc`]: std/libc.html\n+[`bool`]: std/bool/index.html\n+[tuples]: std/tuple/index.html\n+[characters]: std/char/index.html\n+[strings]: std/str/index.html\n+[vectors]: std/vec/index.html\n+[managed boxes]: std/managed/index.html\n+[owned boxes]: std/owned/index.html\n+[pointers]: std/ptr/index.html\n+[`option`]: std/option/index.html\n+[`result`]: std/result/index.html\n+[task]: std/task/index.html\n+[communication]: std/comm/index.html\n+[`os`]: std/os/index.html\n+[`path`]: std/path/index.html\n+[`io`]: std/io/index.html\n+[containers]: std/container/index.html\n+[`hashmap`]: std/hashmap/index.html\n+[`kinds`]: std/kinds/index.html\n+[`ops`]: std/ops/index.html\n+[`cmp`]: std/cmp/index.html\n+[`num`]: std/num/index.html\n+[`to_str`]: std/to_str/index.html\n+[`clone`]: std/clone/index.html\n+[`libc`]: std/libc/index.html\n \n ## The extra library\n \n@@ -3012,8 +3012,8 @@ tutorials on individual topics.\n * [Tasks and communication][tasks]\n * [Macros][macros]\n * [The foreign function interface][ffi]\n-* [Containers and iterators](tutorial-container.html)\n-* [Error-handling and Conditions](tutorial-conditions.html)\n+* [Containers and iterators][container]\n+* [Error-handling and Conditions][conditions]\n * [Packaging up Rust code][rustpkg]\n \n There is further documentation on the [wiki], however those tend to be even more out of date as this document.\n@@ -3022,6 +3022,8 @@ There is further documentation on the [wiki], however those tend to be even more\n [tasks]: tutorial-tasks.html\n [macros]: tutorial-macros.html\n [ffi]: tutorial-ffi.html\n+[container]: tutorial-container.html\n+[conditions]: tutorial-conditions.html\n [rustpkg]: tutorial-rustpkg.html\n \n [wiki]: https://github.com/mozilla/rust/wiki/Docs"}, {"sha": "858e5a35f8741d47f7884e876fd482106487b50c", "filename": "doc/version_info.html.template", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Fversion_info.html.template", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/doc%2Fversion_info.html.template", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fversion_info.html.template?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -1,9 +1,6 @@\n-<div id='versioninfo'>\n-  <center>\n-    <img src=\"http://www.rust-lang.org/logos/rust-logo-32x32-blk.png\"> <br>\n-    <a href=\"http://rust-lang.org\">Rust</a> VERSION <br>\n-    <a href=\"http://github.com/mozilla/rust/commit/STAMP\"\n-       class='lessimportant'>SHORT_HASH</a>\n-  </center>\n-\n-</div>\n+<div id=\"versioninfo\">\n+  <img src=\"http://www.rust-lang.org/logos/rust-logo-32x32-blk.png\" width=\"32\" height=\"32\" alt><br>\n+  <span class=\"white-sticker\"><a href=\"http://rust-lang.org\">Rust</a> VERSION</span><br>\n+  <a href=\"http://github.com/mozilla/rust/commit/STAMP\"\n+    class=\"hash white-sticker\">SHORT_HASH</a>\n+</div>\n\\ No newline at end of file"}, {"sha": "a335c8ef4e96ec7aa7a381d0f714ccb356e745e4", "filename": "mk/docs.mk", "status": "modified", "additions": 47, "deletions": 30, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -1,4 +1,4 @@\n-# Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+# Copyright 2012-2013 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n #\n@@ -24,7 +24,7 @@ doc/rust.css: rust.css\n \t@$(call E, cp: $@)\n \t$(Q)cp -a $< $@ 2> /dev/null\n \n-doc/manual.css: manual.css\n+doc/manual.inc: manual.inc\n \t@$(call E, cp: $@)\n \t$(Q)cp -a $< $@ 2> /dev/null\n \n@@ -41,17 +41,16 @@ endif\n ifneq ($(NO_DOCS),1)\n \n DOCS += doc/rust.html\n-doc/rust.html: rust.md doc/version_info.html doc/rust.css doc/manual.css\n+doc/rust.html: rust.md doc/version_info.html doc/rust.css doc/manual.inc\n \t@$(call E, pandoc: $@)\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n \t\"$(CFG_PANDOC)\" \\\n          --standalone --toc \\\n          --section-divs \\\n          --number-sections \\\n-         --from=markdown --to=html \\\n-         --css=rust.css \\\n-         --css=manual.css \\\n-\t     --include-before-body=doc/version_info.html \\\n+         --from=markdown --to=html5 \\\n+         --css=rust.css --include-in-header=doc/manual.inc \\\n+         --include-before-body=doc/version_info.html \\\n          --output=$@\n \n DOCS += doc/rust.tex\n@@ -61,22 +60,32 @@ doc/rust.tex: rust.md doc/version.md\n \t\"$(CFG_PANDOC)\" \\\n          --standalone --toc \\\n          --number-sections \\\n-\t     --include-before-body=doc/version.md \\\n+         --include-before-body=doc/version.md \\\n+         --from=markdown --to=latex \\\n+         --output=$@\n+\n+DOCS += doc/tutorial.tex\n+doc/tutorial.tex: tutorial.md doc/version.md\n+\t@$(call E, pandoc: $@)\n+\t$(Q)$(CFG_NODE) $(S)doc/prep.js $< | \\\n+\t\"$(CFG_PANDOC)\" \\\n+         --standalone --toc \\\n+         --number-sections \\\n+         --include-before-body=doc/version.md \\\n          --from=markdown --to=latex \\\n          --output=$@\n \n DOCS += doc/rustpkg.html\n-doc/rustpkg.html: rustpkg.md doc/version_info.html doc/rust.css doc/manual.css\n+doc/rustpkg.html: rustpkg.md doc/version_info.html doc/rust.css doc/manual.inc\n \t@$(call E, pandoc: $@)\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n \t\"$(CFG_PANDOC)\" \\\n          --standalone --toc \\\n          --section-divs \\\n          --number-sections \\\n-         --from=markdown --to=html \\\n-         --css=rust.css \\\n-         --css=manual.css \\\n-\t     --include-before-body=doc/version_info.html \\\n+         --from=markdown --to=html5 \\\n+         --css=rust.css --include-in-header=doc/manual.inc \\\n+         --include-before-body=doc/version_info.html \\\n          --output=$@\n \n DOCS += doc/tutorial.html\n@@ -85,8 +94,8 @@ doc/tutorial.html: tutorial.md doc/version_info.html doc/rust.css\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS_L10N += doc/l10n/ja/tutorial.html\n@@ -95,8 +104,8 @@ doc/l10n/ja/tutorial.html: doc/l10n/ja/tutorial.md doc/version_info.html doc/rus\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight doc/l10n/ja/tutorial.md | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=../../rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=../../rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS += doc/tutorial-macros.html\n@@ -106,8 +115,8 @@ doc/tutorial-macros.html: tutorial-macros.md doc/version_info.html \\\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS += doc/tutorial-container.html\n@@ -116,8 +125,8 @@ doc/tutorial-container.html: tutorial-container.md doc/version_info.html doc/rus\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS += doc/tutorial-ffi.html\n@@ -126,8 +135,8 @@ doc/tutorial-ffi.html: tutorial-ffi.md doc/version_info.html doc/rust.css\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS += doc/tutorial-borrowed-ptr.html\n@@ -136,8 +145,8 @@ doc/tutorial-borrowed-ptr.html: tutorial-borrowed-ptr.md doc/version_info.html d\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS += doc/tutorial-tasks.html\n@@ -146,8 +155,8 @@ doc/tutorial-tasks.html: tutorial-tasks.md doc/version_info.html doc/rust.css\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n-\t   --include-before-body=doc/version_info.html \\\n+           --from=markdown --to=html5 --css=rust.css \\\n+           --include-before-body=doc/version_info.html \\\n            --output=$@\n \n DOCS += doc/tutorial-conditions.html\n@@ -156,7 +165,7 @@ doc/tutorial-conditions.html: tutorial-conditions.md doc/version_info.html doc/r\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n+           --from=markdown --to=html5 --css=rust.css \\\n            --include-before-body=doc/version_info.html \\\n            --output=$@\n \n@@ -166,7 +175,7 @@ doc/tutorial-rustpkg.html: tutorial-rustpkg.md doc/version_info.html doc/rust.cs\n \t$(Q)$(CFG_NODE) $(S)doc/prep.js --highlight $< | \\\n           $(CFG_PANDOC) --standalone --toc \\\n            --section-divs --number-sections \\\n-           --from=markdown --to=html --css=rust.css \\\n+           --from=markdown --to=html5 --css=rust.css \\\n            --include-before-body=doc/version_info.html \\\n            --output=$@\n \n@@ -188,6 +197,14 @@ doc/rust.pdf: doc/rust.tex\n         -output-directory=doc \\\n         $<\n \n+DOCS += doc/tutorial.pdf\n+doc/tutorial.pdf: doc/tutorial.tex\n+\t@$(call E, pdflatex: $@)\n+\t$(Q)$(CFG_PDFLATEX) \\\n+        -interaction=batchmode \\\n+        -output-directory=doc \\\n+        $<\n+\n       endif\n     endif\n   endif\n@@ -251,7 +268,7 @@ doc/version_info.html: version_info.html.template $(MKFILE_DEPS) \\\n \t@$(call E, version-info: $@)\n \tsed -e \"s/VERSION/$(CFG_RELEASE)/; s/SHORT_HASH/$(shell echo \\\n                     $(CFG_VER_HASH) | head -c 8)/;\\\n-\t            s/STAMP/$(CFG_VER_HASH)/;\" $< >$@\n+                s/STAMP/$(CFG_VER_HASH)/;\" $< >$@\n \n GENERATED += doc/version.md doc/version_info.html\n "}, {"sha": "5f3ffd185e7300e6e4e01466de3a51e545d1da1b", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -27,8 +27,8 @@ pub struct Page<'self> {\n pub fn render<T: fmt::Default, S: fmt::Default>(\n     dst: &mut io::Writer, layout: &Layout, page: &Page, sidebar: &S, t: &T)\n {\n-    write!(dst, \"\n-<!DOCTYPE html>\n+    write!(dst,\n+\"<!DOCTYPE html>\n <html lang=\\\"en\\\">\n <head>\n     <meta charset=\\\"utf-8\\\" />\n@@ -38,15 +38,13 @@ pub fn render<T: fmt::Default, S: fmt::Default>(\n           rel='stylesheet' type='text/css'>\n     <link rel=\\\"stylesheet\\\" type=\\\"text/css\\\" href=\\\"{root_path}{crate}/main.css\\\">\n \n-    {favicon, select, none{} other{\n-        <link rel=\\\"icon\\\" href=\\\"#\\\" sizes=\\\"16x16\\\"\n-              type=\\\"image/vnd.microsoft.icon\\\" />}}\n+    {favicon, select, none{} other{<link rel=\\\"shortcut icon\\\" href=\\\"#\\\" />}}\n </head>\n <body>\n     <!--[if lte IE 8]>\n     <div class=\\\"warning\\\">\n         This old browser is unsupported and will most likely display funky\n-        things\n+        things.\n     </div>\n     <![endif]-->\n "}, {"sha": "3abd5f3ee9cdc45c066c55b1ebd5ce12c5615859", "filename": "src/librustdoc/html/static/main.css", "status": "modified", "additions": 18, "deletions": 29, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.css?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -9,7 +9,6 @@\n  * option. This file may not be copied, modified, or distributed\n  * except according to those terms.\n  */\n-\n @import \"normalize.css\";\n \n * {\n@@ -18,58 +17,47 @@\n           box-sizing: border-box;\n }\n \n-/* Fonts */\n+/* General structure and fonts */\n \n body {\n-    font: 13px Arial, sans-serif;\n+    min-height: 100%;\n+    min-width: 500px;\n+    height: 100%;\n+    font: 13px \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n     line-height: 165%;\n+    position: relative;\n+    height: auto;\n+    padding-bottom: 20px;\n }\n \n h1, .sidebar .location {\n     font: 700 22px \"Oswald\", Arial, sans-serif;\n }\n-\n h2, h3, h4 {\n     font: 700 16px \"Oswald\", Arial, sans-serif;\n     text-transform: uppercase;\n }\n-\n h2 code, h3 code, h4 code {\n     text-transform: none;\n     font-size: 1.2em;\n }\n \n code, pre, h1.fqn {\n-    font: 15px \"Inconsolata\", \"Consolas\", \"Courier New\", monospace;\n+    font: 15px Monaco, Menlo, \"Inconsolata\", Consolas, \"Courier New\", monospace;\n }\n h1.fqn {\n     font-size: 26px;\n     font-weight: normal;\n }\n \n nav {\n-    font: 700 26px \"Oswald\", Arial, sans-serif;\n+    font: 700 26px \"Oswald\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n     text-transform: uppercase;\n }\n-\n nav.sub {\n-    padding-top: 20px;\n-    font: 700 16px \"Oswald\", Arial, sans-serif;\n+    padding-top: 10px;\n+    font-size: 16px;\n     text-transform: uppercase;\n-    text-align: right;\n-}\n-\n-/* General structure */\n-\n-html, body {\n-    min-height: 100%;\n-    height: 100%;\n-}\n-\n-body {\n-    position: relative;\n-    height: auto;\n-    padding-bottom: 20px;\n }\n \n .sidebar {\n@@ -90,7 +78,6 @@ body {\n     background: #e9e9e9;\n     padding: 10px;\n }\n-\n .sidebar img {\n     margin: 20px auto;\n     display: block;\n@@ -156,7 +143,6 @@ body {\n .docblock h1, .docblock h2, .docblock h3, .docblock h4, .docblock h5 {\n     margin-left: 0;\n }\n-\n .docblock h1 { font-size: 1.1em; }\n .docblock h2 { font-size: 1.05em; }\n .docblock h3, .docblock h4, .docblock h5 { font-size: 1em; }\n@@ -234,9 +220,13 @@ a {\n .content .fnname { color: #8c6067; }\n \n .search-input {\n-    border: 2px solid #f2f2f2;\n+    border: 2px solid #e9e9e9;\n     border-radius: 2px;\n-    width: 350px;\n+    width: calc(100% - 66px);\n+}\n+.do-search {\n+    float: right;\n+    width: 62px;\n }\n .search-results .desc {\n     white-space: nowrap;\n@@ -249,7 +239,6 @@ a {\n     background: #e9e9e9;\n     border-radius: 4px;\n     box-shadow: 0 0 6px rgba(0,0,0,.2);\n-\n     position: absolute;\n     top: 300px;\n     left: 50%;"}, {"sha": "fd2854ab60f15f1adcf9720a20d09cff505c0f6a", "filename": "src/librustdoc/html/static/normalize.css", "status": "modified", "additions": 1, "deletions": 396, "changes": 397, "blob_url": "https://github.com/rust-lang/rust/blob/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnormalize.css", "raw_url": "https://github.com/rust-lang/rust/raw/8a60caa107b7a55f480ae60a5184bd2e2a6319e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnormalize.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fnormalize.css?ref=8a60caa107b7a55f480ae60a5184bd2e2a6319e7", "patch": "@@ -1,396 +1 @@\n-/*! normalize.css v2.1.2 | MIT License | git.io/normalize */\n-\n-/* ==========================================================================\n-   HTML5 display definitions\n-   ========================================================================== */\n-\n-/**\n- * Correct `block` display not defined in IE 8/9.\n- */\n-\n-article,\n-aside,\n-details,\n-figcaption,\n-figure,\n-footer,\n-header,\n-hgroup,\n-main,\n-nav,\n-section,\n-summary {\n-    display: block;\n-}\n-\n-/**\n- * Correct `inline-block` display not defined in IE 8/9.\n- */\n-\n-audio,\n-canvas,\n-video {\n-    display: inline-block;\n-}\n-\n-/**\n- * Prevent modern browsers from displaying `audio` without controls.\n- * Remove excess height in iOS 5 devices.\n- */\n-\n-audio:not([controls]) {\n-    display: none;\n-    height: 0;\n-}\n-\n-/**\n- * Address styling not present in IE 8/9.\n- */\n-\n-[hidden] {\n-    display: none;\n-}\n-\n-/* ==========================================================================\n-   Base\n-   ========================================================================== */\n-\n-/**\n- * 1. Set default font family to sans-serif.\n- * 2. Prevent iOS text size adjust after orientation change, without disabling\n- *    user zoom.\n- */\n-\n-html {\n-    font-family: sans-serif; /* 1 */\n-    -ms-text-size-adjust: 100%; /* 2 */\n-    -webkit-text-size-adjust: 100%; /* 2 */\n-}\n-\n-/**\n- * Remove default margin.\n- */\n-\n-body {\n-    margin: 0;\n-}\n-\n-/* ==========================================================================\n-   Links\n-   ========================================================================== */\n-\n-/**\n- * Address `outline` inconsistency between Chrome and other browsers.\n- */\n-\n-a:focus {\n-    outline: thin dotted;\n-}\n-\n-/**\n- * Improve readability when focused and also mouse hovered in all browsers.\n- */\n-\n-a:active,\n-a:hover {\n-    outline: 0;\n-}\n-\n-/* ==========================================================================\n-   Typography\n-   ========================================================================== */\n-\n-/**\n- * Address variable `h1` font-size and margin within `section` and `article`\n- * contexts in Firefox 4+, Safari 5, and Chrome.\n- */\n-\n-h1 {\n-    font-size: 2em;\n-    margin: 0.67em 0;\n-}\n-\n-/**\n- * Address styling not present in IE 8/9, Safari 5, and Chrome.\n- */\n-\n-abbr[title] {\n-    border-bottom: 1px dotted;\n-}\n-\n-/**\n- * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.\n- */\n-\n-b,\n-strong {\n-    font-weight: bold;\n-}\n-\n-/**\n- * Address styling not present in Safari 5 and Chrome.\n- */\n-\n-dfn {\n-    font-style: italic;\n-}\n-\n-/**\n- * Address differences between Firefox and other browsers.\n- */\n-\n-hr {\n-    -moz-box-sizing: content-box;\n-    box-sizing: content-box;\n-    height: 0;\n-}\n-\n-/**\n- * Address styling not present in IE 8/9.\n- */\n-\n-mark {\n-    background: #ff0;\n-    color: #000;\n-}\n-\n-/**\n- * Correct font family set oddly in Safari 5 and Chrome.\n- */\n-\n-code,\n-kbd,\n-pre,\n-samp {\n-    font-family: monospace, serif;\n-    font-size: 1em;\n-}\n-\n-/**\n- * Improve readability of pre-formatted text in all browsers.\n- */\n-\n-pre {\n-    white-space: pre-wrap;\n-}\n-\n-/**\n- * Set consistent quote types.\n- */\n-\n-q {\n-    quotes: \"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\";\n-}\n-\n-/**\n- * Address inconsistent and variable font size in all browsers.\n- */\n-\n-small {\n-    font-size: 80%;\n-}\n-\n-/**\n- * Prevent `sub` and `sup` affecting `line-height` in all browsers.\n- */\n-\n-sub,\n-sup {\n-    font-size: 75%;\n-    line-height: 0;\n-    position: relative;\n-    vertical-align: baseline;\n-}\n-\n-sup {\n-    top: -0.5em;\n-}\n-\n-sub {\n-    bottom: -0.25em;\n-}\n-\n-/* ==========================================================================\n-   Embedded content\n-   ========================================================================== */\n-\n-/**\n- * Remove border when inside `a` element in IE 8/9.\n- */\n-\n-img {\n-    border: 0;\n-}\n-\n-/**\n- * Correct overflow displayed oddly in IE 9.\n- */\n-\n-svg:not(:root) {\n-    overflow: hidden;\n-}\n-\n-/* ==========================================================================\n-   Figures\n-   ========================================================================== */\n-\n-/**\n- * Address margin not present in IE 8/9 and Safari 5.\n- */\n-\n-figure {\n-    margin: 0;\n-}\n-\n-/* ==========================================================================\n-   Forms\n-   ========================================================================== */\n-\n-/**\n- * Define consistent border, margin, and padding.\n- */\n-\n-fieldset {\n-    border: 1px solid #c0c0c0;\n-    margin: 0 2px;\n-    padding: 0.35em 0.625em 0.75em;\n-}\n-\n-/**\n- * 1. Correct `color` not being inherited in IE 8/9.\n- * 2. Remove padding so people aren't caught out if they zero out fieldsets.\n- */\n-\n-legend {\n-    border: 0; /* 1 */\n-    padding: 0; /* 2 */\n-}\n-\n-/**\n- * 1. Correct font family not being inherited in all browsers.\n- * 2. Correct font size not being inherited in all browsers.\n- * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.\n- */\n-\n-button,\n-input,\n-select,\n-textarea {\n-    font-family: inherit; /* 1 */\n-    font-size: 100%; /* 2 */\n-    margin: 0; /* 3 */\n-}\n-\n-/**\n- * Address Firefox 4+ setting `line-height` on `input` using `!important` in\n- * the UA stylesheet.\n- */\n-\n-button,\n-input {\n-    line-height: normal;\n-}\n-\n-/**\n- * Address inconsistent `text-transform` inheritance for `button` and `select`.\n- * All other form control elements do not inherit `text-transform` values.\n- * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.\n- * Correct `select` style inheritance in Firefox 4+ and Opera.\n- */\n-\n-button,\n-select {\n-    text-transform: none;\n-}\n-\n-/**\n- * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n- *    and `video` controls.\n- * 2. Correct inability to style clickable `input` types in iOS.\n- * 3. Improve usability and consistency of cursor style between image-type\n- *    `input` and others.\n- */\n-\n-button,\n-html input[type=\"button\"], /* 1 */\n-input[type=\"reset\"],\n-input[type=\"submit\"] {\n-    -webkit-appearance: button; /* 2 */\n-    cursor: pointer; /* 3 */\n-}\n-\n-/**\n- * Re-set default cursor for disabled elements.\n- */\n-\n-button[disabled],\n-html input[disabled] {\n-    cursor: default;\n-}\n-\n-/**\n- * 1. Address box sizing set to `content-box` in IE 8/9.\n- * 2. Remove excess padding in IE 8/9.\n- */\n-\n-input[type=\"checkbox\"],\n-input[type=\"radio\"] {\n-    box-sizing: border-box; /* 1 */\n-    padding: 0; /* 2 */\n-}\n-\n-/**\n- * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.\n- * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome\n- *    (include `-moz` to future-proof).\n- */\n-\n-input[type=\"search\"] {\n-    -webkit-appearance: textfield; /* 1 */\n-    -moz-box-sizing: content-box;\n-    -webkit-box-sizing: content-box; /* 2 */\n-    box-sizing: content-box;\n-}\n-\n-/**\n- * Remove inner padding and search cancel button in Safari 5 and Chrome\n- * on OS X.\n- */\n-\n-input[type=\"search\"]::-webkit-search-cancel-button,\n-input[type=\"search\"]::-webkit-search-decoration {\n-    -webkit-appearance: none;\n-}\n-\n-/**\n- * Remove inner padding and border in Firefox 4+.\n- */\n-\n-button::-moz-focus-inner,\n-input::-moz-focus-inner {\n-    border: 0;\n-    padding: 0;\n-}\n-\n-/**\n- * 1. Remove default vertical scrollbar in IE 8/9.\n- * 2. Improve readability and alignment in all browsers.\n- */\n-\n-textarea {\n-    overflow: auto; /* 1 */\n-    vertical-align: top; /* 2 */\n-}\n-\n-/* ==========================================================================\n-   Tables\n-   ========================================================================== */\n-\n-/**\n- * Remove most spacing between table cells.\n- */\n-\n-table {\n-    border-collapse: collapse;\n-    border-spacing: 0;\n-}\n+/*! normalize.css v2.1.2 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden]{display:none}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em;margin:.67em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:bold}dfn{font-style:italic}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre-wrap}q{quotes:\"\\201C\" \"\\201D\" \"\\2018\" \"\\2019\"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-0.5em}sub{bottom:-0.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=\"button\"],input[type=\"reset\"],input[type=\"submit\"]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=\"checkbox\"],input[type=\"radio\"]{box-sizing:border-box;padding:0}input[type=\"search\"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box}input[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}\n\\ No newline at end of file"}]}