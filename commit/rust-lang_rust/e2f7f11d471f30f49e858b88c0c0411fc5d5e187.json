{"sha": "e2f7f11d471f30f49e858b88c0c0411fc5d5e187", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyZjdmMTFkNDcxZjMwZjQ5ZTg1OGI4OGMwYzA0MTFmYzVkNWUxODc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-06T23:07:14Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-06T23:07:28Z"}, "message": "Put out burning linux tinderbox.", "tree": {"sha": "4d2b6c7f10de8c0204c3bb19e024145cdc501d32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d2b6c7f10de8c0204c3bb19e024145cdc501d32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2f7f11d471f30f49e858b88c0c0411fc5d5e187", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2f7f11d471f30f49e858b88c0c0411fc5d5e187", "html_url": "https://github.com/rust-lang/rust/commit/e2f7f11d471f30f49e858b88c0c0411fc5d5e187", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2f7f11d471f30f49e858b88c0c0411fc5d5e187/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c624ed72b12bd17a14328c9cbf319c85f2caa384", "url": "https://api.github.com/repos/rust-lang/rust/commits/c624ed72b12bd17a14328c9cbf319c85f2caa384", "html_url": "https://github.com/rust-lang/rust/commit/c624ed72b12bd17a14328c9cbf319c85f2caa384"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "b1705f10ae326ae1905d97b91692d1a78d2b45e8", "filename": "src/rustllvm/RustWrapper.cpp", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e2f7f11d471f30f49e858b88c0c0411fc5d5e187/src%2Frustllvm%2FRustWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/e2f7f11d471f30f49e858b88c0c0411fc5d5e187/src%2Frustllvm%2FRustWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FRustWrapper.cpp?ref=e2f7f11d471f30f49e858b88c0c0411fc5d5e187", "patch": "@@ -43,9 +43,13 @@ extern \"C\" const char *LLVMRustGetLastError(void) {\n }\n \n extern \"C\" void LLVMAddBasicAliasAnalysisPass(LLVMPassManagerRef PM);\n+extern \"C\" void LLVMAddStandardModulePasses(LLVMPassManagerRef PM,\n+    unsigned int OptimizationLevel, bool OptimizeSize, bool UnitAtATime,\n+    bool UnrollLoops, bool SimplifyLibCalls, bool HaveExceptions,\n+    unsigned int InliningThreshold);\n \n-void (*RustHackToFetchPassesO)(LLVMPassManagerRef PM) =\n-  LLVMAddBasicAliasAnalysisPass;\n+int *RustHackToFetchPassesO = (int*)LLVMAddBasicAliasAnalysisPass;\n+int *RustHackToFetchPasses2O = (int*)LLVMAddStandardModulePasses;\n \n enum LLVMCodeGenFileType {\n   LLVMAssemblyFile,"}]}