{"sha": "88bf2b4630ca52c4949665ff3016731fd924eaf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4YmYyYjQ2MzBjYTUyYzQ5NDk2NjVmZjMwMTY3MzFmZDkyNGVhZjE=", "commit": {"author": {"name": "Bastian K\u00f6cher", "email": "git@kchr.de", "date": "2017-12-22T15:11:09Z"}, "committer": {"name": "Bastian K\u00f6cher", "email": "git@kchr.de", "date": "2017-12-26T11:26:39Z"}, "message": "Removes some obscure transmute call in `lang_start`", "tree": {"sha": "0ff59f555a4c7d053129df2f0456d81c5e3b1e2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ff59f555a4c7d053129df2f0456d81c5e3b1e2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88bf2b4630ca52c4949665ff3016731fd924eaf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88bf2b4630ca52c4949665ff3016731fd924eaf1", "html_url": "https://github.com/rust-lang/rust/commit/88bf2b4630ca52c4949665ff3016731fd924eaf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88bf2b4630ca52c4949665ff3016731fd924eaf1/comments", "author": {"login": "bkchr", "id": 5718007, "node_id": "MDQ6VXNlcjU3MTgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkchr", "html_url": "https://github.com/bkchr", "followers_url": "https://api.github.com/users/bkchr/followers", "following_url": "https://api.github.com/users/bkchr/following{/other_user}", "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions", "organizations_url": "https://api.github.com/users/bkchr/orgs", "repos_url": "https://api.github.com/users/bkchr/repos", "events_url": "https://api.github.com/users/bkchr/events{/privacy}", "received_events_url": "https://api.github.com/users/bkchr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkchr", "id": 5718007, "node_id": "MDQ6VXNlcjU3MTgwMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/5718007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkchr", "html_url": "https://github.com/bkchr", "followers_url": "https://api.github.com/users/bkchr/followers", "following_url": "https://api.github.com/users/bkchr/following{/other_user}", "gists_url": "https://api.github.com/users/bkchr/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkchr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkchr/subscriptions", "organizations_url": "https://api.github.com/users/bkchr/orgs", "repos_url": "https://api.github.com/users/bkchr/repos", "events_url": "https://api.github.com/users/bkchr/events{/privacy}", "received_events_url": "https://api.github.com/users/bkchr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83cb299e3eb93d9fee5e3a2730a4f9c14de6cdd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/83cb299e3eb93d9fee5e3a2730a4f9c14de6cdd9", "html_url": "https://github.com/rust-lang/rust/commit/83cb299e3eb93d9fee5e3a2730a4f9c14de6cdd9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bfea64153c6feff70fa3d005a138f831e408c1aa", "filename": "src/libstd/rt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/88bf2b4630ca52c4949665ff3016731fd924eaf1/src%2Flibstd%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88bf2b4630ca52c4949665ff3016731fd924eaf1/src%2Flibstd%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt.rs?ref=88bf2b4630ca52c4949665ff3016731fd924eaf1", "patch": "@@ -62,7 +62,7 @@ fn lang_start<T: ::termination::Termination + 'static>\n             ::sys_common::backtrace::__rust_begin_short_backtrace(move || main().report())\n         });\n         #[cfg(not(feature = \"backtrace\"))]\n-        let exit_code = panic::catch_unwind(mem::transmute::<_, fn()>(main).report());\n+        let exit_code = panic::catch_unwind(|| main().report());\n \n         sys_common::cleanup();\n         exit_code.unwrap_or(101)"}]}