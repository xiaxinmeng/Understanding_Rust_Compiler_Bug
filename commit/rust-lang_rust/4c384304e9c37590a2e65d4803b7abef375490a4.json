{"sha": "4c384304e9c37590a2e65d4803b7abef375490a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMzg0MzA0ZTljMzc1OTBhMmU2NWQ0ODAzYjdhYmVmMzc1NDkwYTQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-05T03:47:20Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-07-06T18:09:07Z"}, "message": "rustc: Convert bind_params_in_type() to use interior vectors", "tree": {"sha": "101421eaf57663bd60bf9c2b6bdd67a67069933e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/101421eaf57663bd60bf9c2b6bdd67a67069933e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c384304e9c37590a2e65d4803b7abef375490a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c384304e9c37590a2e65d4803b7abef375490a4", "html_url": "https://github.com/rust-lang/rust/commit/4c384304e9c37590a2e65d4803b7abef375490a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c384304e9c37590a2e65d4803b7abef375490a4/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5703bd1760366422019e1b6d3f432e46bae4dd1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5703bd1760366422019e1b6d3f432e46bae4dd1b", "html_url": "https://github.com/rust-lang/rust/commit/5703bd1760366422019e1b6d3f432e46bae4dd1b"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "3fcb592e1091ff52581c7452e1c5824075eba356", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4c384304e9c37590a2e65d4803b7abef375490a4/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c384304e9c37590a2e65d4803b7abef375490a4/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=4c384304e9c37590a2e65d4803b7abef375490a4", "patch": "@@ -2761,13 +2761,16 @@ fn type_err_to_str(&ty::type_err err) -> str {\n // Converts type parameters in a type to type variables and returns the\n // resulting type along with a list of type variable IDs.\n fn bind_params_in_type(&span sp, &ctxt cx, fn() -> int  next_ty_var, t typ,\n-                       uint ty_param_count) -> tup(vec[int], t) {\n-    let vec[int] param_var_ids = [];\n+                       uint ty_param_count) -> tup(int[], t) {\n+    let @mutable int[] param_var_ids = @mutable ~[];\n     auto i = 0u;\n-    while (i < ty_param_count) { param_var_ids += [next_ty_var()]; i += 1u; }\n-    fn binder(span sp, ctxt cx, vec[int] param_var_ids,\n+    while (i < ty_param_count) {\n+        *param_var_ids += ~[next_ty_var()];\n+        i += 1u;\n+    }\n+    fn binder(span sp, ctxt cx, @mutable int[] param_var_ids,\n               fn() -> int next_ty_var, uint index) -> t {\n-        if (index < vec::len(param_var_ids)) {\n+        if (index < ivec::len(*param_var_ids)) {\n             ret mk_var(cx, param_var_ids.(index));\n         }\n         else {\n@@ -2777,7 +2780,7 @@ fn bind_params_in_type(&span sp, &ctxt cx, fn() -> int  next_ty_var, t typ,\n     auto new_typ =\n         fold_ty(cx, fm_param(bind binder(sp, cx, param_var_ids,\n                                          next_ty_var, _)), typ);\n-    ret tup(param_var_ids, new_typ);\n+    ret tup(*param_var_ids, new_typ);\n }\n \n "}]}