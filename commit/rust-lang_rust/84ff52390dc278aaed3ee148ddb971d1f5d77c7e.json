{"sha": "84ff52390dc278aaed3ee148ddb971d1f5d77c7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZmY1MjM5MGRjMjc4YWFlZDNlZTE0OGRkYjk3MWQxZjVkNzdjN2U=", "commit": {"author": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-20T15:09:57Z"}, "committer": {"name": "DJMcNab", "email": "36049421+DJMcNab@users.noreply.github.com", "date": "2018-12-20T15:09:57Z"}, "message": "Rename test_fail to test_err", "tree": {"sha": "405a57d4e17117c3a15b8f1f74e0886ba77afa83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/405a57d4e17117c3a15b8f1f74e0886ba77afa83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84ff52390dc278aaed3ee148ddb971d1f5d77c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84ff52390dc278aaed3ee148ddb971d1f5d77c7e", "html_url": "https://github.com/rust-lang/rust/commit/84ff52390dc278aaed3ee148ddb971d1f5d77c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84ff52390dc278aaed3ee148ddb971d1f5d77c7e/comments", "author": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DJMcNab", "id": 36049421, "node_id": "MDQ6VXNlcjM2MDQ5NDIx", "avatar_url": "https://avatars.githubusercontent.com/u/36049421?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DJMcNab", "html_url": "https://github.com/DJMcNab", "followers_url": "https://api.github.com/users/DJMcNab/followers", "following_url": "https://api.github.com/users/DJMcNab/following{/other_user}", "gists_url": "https://api.github.com/users/DJMcNab/gists{/gist_id}", "starred_url": "https://api.github.com/users/DJMcNab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DJMcNab/subscriptions", "organizations_url": "https://api.github.com/users/DJMcNab/orgs", "repos_url": "https://api.github.com/users/DJMcNab/repos", "events_url": "https://api.github.com/users/DJMcNab/events{/privacy}", "received_events_url": "https://api.github.com/users/DJMcNab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "63ca8bc91a2e34009a7e274a3105223040db6a37", "url": "https://api.github.com/repos/rust-lang/rust/commits/63ca8bc91a2e34009a7e274a3105223040db6a37", "html_url": "https://github.com/rust-lang/rust/commit/63ca8bc91a2e34009a7e274a3105223040db6a37"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6d4ac4726b13fbd6c15fc94fb3ca9b76fe4802d9", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84ff52390dc278aaed3ee148ddb971d1f5d77c7e/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84ff52390dc278aaed3ee148ddb971d1f5d77c7e/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=84ff52390dc278aaed3ee148ddb971d1f5d77c7e", "patch": "@@ -45,7 +45,7 @@ pub fn collect_tests(s: &str) -> Vec<(usize, Test)> {\n                 Some((idx, line)) if line.starts_with(\"test \") => {\n                     break (idx, line[\"test \".len()..].to_string());\n                 }\n-                Some((idx, line)) if line.starts_with(\"test_fail \") => {\n+                Some((idx, line)) if line.starts_with(\"test_err \") => {\n                     ok = false;\n                     break (idx, line[\"test_fail \".len()..].to_string());\n                 }"}]}