{"sha": "20805acf42e1bc78c0434276b71309df0a583045", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwODA1YWNmNDJlMWJjNzhjMDQzNDI3NmI3MTMwOWRmMGE1ODMwNDU=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T01:29:44Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-11-24T01:29:44Z"}, "message": "Merge `attributes_on_same_line_as_field` and `attributes_on_same_line_as_variant` into `same_line_attributes`", "tree": {"sha": "31c968a1d4927f3602a89f948698de4a8f6f9a1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31c968a1d4927f3602a89f948698de4a8f6f9a1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20805acf42e1bc78c0434276b71309df0a583045", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20805acf42e1bc78c0434276b71309df0a583045", "html_url": "https://github.com/rust-lang/rust/commit/20805acf42e1bc78c0434276b71309df0a583045", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20805acf42e1bc78c0434276b71309df0a583045/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d00c60df5cfa714b24182925bc3631392adfd0dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d00c60df5cfa714b24182925bc3631392adfd0dc", "html_url": "https://github.com/rust-lang/rust/commit/d00c60df5cfa714b24182925bc3631392adfd0dc"}], "stats": {"total": 142, "additions": 15, "deletions": 127}, "files": [{"sha": "c7fae70d1dddd3eb7e642087afc82127c067ef38", "filename": "Configurations.md", "status": "modified", "additions": 9, "deletions": 23, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/20805acf42e1bc78c0434276b71309df0a583045/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/20805acf42e1bc78c0434276b71309df0a583045/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=20805acf42e1bc78c0434276b71309df0a583045", "patch": "@@ -296,9 +296,9 @@ let lorem = vec![\"ipsum\", \"dolor\", \"sit\", \"amet\", \"consectetur\", \"adipiscing\", \"\n #### Lines longer than `array_width`:\n See [`indent_style`](#indent_style).\n \n-## `attributes_on_same_line_as_field`\n+## `same_line_attributes`\n \n-Try to put attributes on the same line as fields\n+Try to put attributes on the same line as fields and variants\n \n - **Default value**: `true`\n - **Possible values**: `true`, `false`\n@@ -311,6 +311,12 @@ struct Lorem {\n     #[serde(rename = \"Dolor\")] dolor: usize,\n     #[serde(rename = \"Amet\")] amet: usize,\n }\n+\n+enum Lorem {\n+    #[serde(skip_serializing)] Ipsum,\n+    #[serde(skip_serializing)] Dolor,\n+    #[serde(skip_serializing)] Amet,\n+}\n ```\n \n #### `false`:\n@@ -324,28 +330,7 @@ struct Lorem {\n     #[serde(rename = \"Amet\")]\n     amet: usize,\n }\n-```\n-\n-## `attributes_on_same_line_as_variant`\n-\n-Try to put attributes on the same line as variants\n-\n-- **Default value**: `true`\n-- **Possible values**: `true`, `false`\n-\n-#### `true` (default):\n-\n-```rust\n-enum Lorem {\n-    #[serde(skip_serializing)] Ipsum,\n-    #[serde(skip_serializing)] Dolor,\n-    #[serde(skip_serializing)] Amet,\n-}\n-```\n-\n-#### `false`:\n \n-```rust\n enum Lorem {\n     #[serde(skip_serializing)]\n     Ipsum,\n@@ -356,6 +341,7 @@ enum Lorem {\n }\n ```\n \n+\n ## `binop_separator`\n \n Where to put a binary operator when a binary expression goes multiline."}, {"sha": "ebbe67dada5bd88a0d675c7771ef71614eedd44b", "filename": "src/config.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20805acf42e1bc78c0434276b71309df0a583045/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20805acf42e1bc78c0434276b71309df0a583045/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=20805acf42e1bc78c0434276b71309df0a583045", "patch": "@@ -613,10 +613,8 @@ create_config! {\n                                              threshold.\";\n     remove_blank_lines_at_start_or_end_of_block: bool, true, false,\n         \"Remove blank lines at start or end of a block\";\n-    attributes_on_same_line_as_field: bool, true, false,\n-        \"Try to put attributes on the same line as fields.\";\n-    attributes_on_same_line_as_variant: bool, true, false,\n-        \"Try to put attributes on the same line as variants in enum declarations.\";\n+    same_line_attributes: bool, true, false,\n+        \"Try to put attributes on the same line as fields and variants.\";\n     multiline_closure_forces_block: bool, false, false,\n         \"Force multiline closure bodies to be wrapped in a block\";\n     multiline_match_arm_forces_block: bool, false, false,"}, {"sha": "c99a4db0fdf53e64c8953738c95d4e68afada204", "filename": "src/items.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/20805acf42e1bc78c0434276b71309df0a583045/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20805acf42e1bc78c0434276b71309df0a583045/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=20805acf42e1bc78c0434276b71309df0a583045", "patch": "@@ -567,8 +567,7 @@ impl<'a> FmtVisitor<'a> {\n         };\n \n         let attrs_extendable = attrs_str.is_empty()\n-            || (context.config.attributes_on_same_line_as_variant()\n-                && is_attributes_extendable(&attrs_str));\n+            || (context.config.same_line_attributes() && is_attributes_extendable(&attrs_str));\n         combine_strs_with_missing_comments(\n             &context,\n             &attrs_str,\n@@ -1450,8 +1449,7 @@ pub fn rewrite_struct_field(\n \n     let attrs_str = field.attrs.rewrite(context, shape)?;\n     let attrs_extendable = attrs_str.is_empty()\n-        || (context.config.attributes_on_same_line_as_field()\n-            && is_attributes_extendable(&attrs_str));\n+        || (context.config.same_line_attributes() && is_attributes_extendable(&attrs_str));\n     let missing_span = if field.attrs.is_empty() {\n         mk_sp(field.span.lo(), field.span.lo())\n     } else {"}, {"sha": "d3b35677407f6116a5b2361b6ed249093d75ae84", "filename": "src/vertical.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/20805acf42e1bc78c0434276b71309df0a583045/src%2Fvertical.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20805acf42e1bc78c0434276b71309df0a583045/src%2Fvertical.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvertical.rs?ref=20805acf42e1bc78c0434276b71309df0a583045", "patch": "@@ -54,8 +54,8 @@ impl AlignedItem for ast::StructField {\n         } else {\n             mk_sp(self.attrs.last().unwrap().span.hi(), self.span.lo())\n         };\n-        let attrs_extendable = context.config.attributes_on_same_line_as_field()\n-            && is_attributes_extendable(&attrs_str);\n+        let attrs_extendable =\n+            context.config.same_line_attributes() && is_attributes_extendable(&attrs_str);\n         rewrite_struct_field_prefix(context, self).and_then(|field_str| {\n             combine_strs_with_missing_comments(\n                 context,"}, {"sha": "202d3e56aeed611957103b8d4a6989a2e9f133fe", "filename": "tests/source/configs-attributes_on_same_line_as_field-false.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-false.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,17 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_field: false\n-// Option to place attributes on the same line as fields where possible\n-\n-struct Lorem {\n-    #[ serde(rename = \"Ipsum\") ]\n-    ipsum: usize,\n-    #[ serde(rename = \"Dolor\") ]\n-    dolor: usize,\n-    #[ serde(rename = \"Amet\") ]\n-    amet: usize,\n-}\n-\n-// #1943\n-pub struct Bzip2 {\n-    # [ serde (rename = \"level\") ]\n-     level: i32 ,\n-}"}, {"sha": "3258c754e5018815219edf5a30496045bdaef21f", "filename": "tests/source/configs-attributes_on_same_line_as_field-true.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_field-true.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_field: true\n-// Option to place attributes on the same line as fields where possible\n-\n-struct Lorem {\n-    #[ serde(rename = \"Ipsum\") ]\n-    ipsum: usize,\n-    #[ serde(rename = \"Dolor\") ]\n-    dolor: usize,\n-    #[ serde(rename = \"Amet\") ]\n-    amet: usize,\n-}"}, {"sha": "d3456b7087cc5b412800943a608eb332eac3155e", "filename": "tests/source/configs-attributes_on_same_line_as_variant-false.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-false.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_variant: false\n-// Option to place attributes on the same line as variants where possible\n-\n-enum Lorem {\n-    #[ serde(skip_serializing) ]\n-    Ipsum,\n-    #[ serde(skip_serializing) ]\n-    Dolor,\n-    #[ serde(skip_serializing) ]\n-    Amet,\n-}"}, {"sha": "0f7d98f200ac0f45d71333bdca288798e8df6265", "filename": "tests/source/configs-attributes_on_same_line_as_variant-true.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-attributes_on_same_line_as_variant-true.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_variant: true\n-// Option to place attributes on the same line as variants where possible\n-\n-enum Lorem {\n-    #[ serde(skip_serializing) ]\n-    Ipsum,\n-    #[ serde(skip_serializing) ]\n-    Dolor,\n-    #[ serde(skip_serializing) ]\n-    Amet,\n-}"}, {"sha": "98c3c4b791cd57c501e6f83330fea1b374ec0f9e", "filename": "tests/target/configs-attributes_on_same_line_as_field-false.rs", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-false.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,17 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_field: false\n-// Option to place attributes on the same line as fields where possible\n-\n-struct Lorem {\n-    #[serde(rename = \"Ipsum\")]\n-    ipsum: usize,\n-    #[serde(rename = \"Dolor\")]\n-    dolor: usize,\n-    #[serde(rename = \"Amet\")]\n-    amet: usize,\n-}\n-\n-// #1943\n-pub struct Bzip2 {\n-    #[serde(rename = \"level\")]\n-    level: i32,\n-}"}, {"sha": "3261fa24ea05df8ad81fa718a452bea4064c6fa7", "filename": "tests/target/configs-attributes_on_same_line_as_field-true.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_field-true.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,8 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_field: true\n-// Option to place attributes on the same line as fields where possible\n-\n-struct Lorem {\n-    #[serde(rename = \"Ipsum\")] ipsum: usize,\n-    #[serde(rename = \"Dolor\")] dolor: usize,\n-    #[serde(rename = \"Amet\")] amet: usize,\n-}"}, {"sha": "3442a10915a540ae699a39ce14d93c5e90ef012d", "filename": "tests/target/configs-attributes_on_same_line_as_variant-false.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-false.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,11 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_variant: false\n-// Option to place attributes on the same line as variants where possible\n-\n-enum Lorem {\n-    #[serde(skip_serializing)]\n-    Ipsum,\n-    #[serde(skip_serializing)]\n-    Dolor,\n-    #[serde(skip_serializing)]\n-    Amet,\n-}"}, {"sha": "0bced842c7585d0f6dd03ed41d5631a453ff73c5", "filename": "tests/target/configs-attributes_on_same_line_as_variant-true.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d00c60df5cfa714b24182925bc3631392adfd0dc/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-attributes_on_same_line_as_variant-true.rs?ref=d00c60df5cfa714b24182925bc3631392adfd0dc", "patch": "@@ -1,8 +0,0 @@\n-// rustfmt-attributes_on_same_line_as_variant: true\n-// Option to place attributes on the same line as variants where possible\n-\n-enum Lorem {\n-    #[serde(skip_serializing)] Ipsum,\n-    #[serde(skip_serializing)] Dolor,\n-    #[serde(skip_serializing)] Amet,\n-}"}]}