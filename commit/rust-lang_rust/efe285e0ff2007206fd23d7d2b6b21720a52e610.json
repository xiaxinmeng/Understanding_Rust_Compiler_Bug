{"sha": "efe285e0ff2007206fd23d7d2b6b21720a52e610", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVmZTI4NWUwZmYyMDA3MjA2ZmQyM2Q3ZDJiNmIyMTcyMGE1MmU2MTA=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-05-16T14:18:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-05-16T14:18:29Z"}, "message": "Rollup merge of #41982 - gamazeps:thread-yield-now, r=GuillaumeGomez\n\n[Doc] Explain why `thread::yield_now` could be used.\n\nPart of #29378.\n\nr? @steveklabnik", "tree": {"sha": "d4dee8ba52149633cb2fbec26de219f154728ea8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4dee8ba52149633cb2fbec26de219f154728ea8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efe285e0ff2007206fd23d7d2b6b21720a52e610", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efe285e0ff2007206fd23d7d2b6b21720a52e610", "html_url": "https://github.com/rust-lang/rust/commit/efe285e0ff2007206fd23d7d2b6b21720a52e610", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efe285e0ff2007206fd23d7d2b6b21720a52e610/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a9cf929d5befc5022d60a6f610178d383e64a33", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a9cf929d5befc5022d60a6f610178d383e64a33", "html_url": "https://github.com/rust-lang/rust/commit/7a9cf929d5befc5022d60a6f610178d383e64a33"}, {"sha": "a9cb094879fabd23774a0d9dcfed7f3eeb9a4aff", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9cb094879fabd23774a0d9dcfed7f3eeb9a4aff", "html_url": "https://github.com/rust-lang/rust/commit/a9cb094879fabd23774a0d9dcfed7f3eeb9a4aff"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "8f1a88ed3051508121e99517d6213700eb5b0fbb", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/efe285e0ff2007206fd23d7d2b6b21720a52e610/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe285e0ff2007206fd23d7d2b6b21720a52e610/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=efe285e0ff2007206fd23d7d2b6b21720a52e610", "patch": "@@ -468,13 +468,36 @@ pub fn current() -> Thread {\n \n /// Cooperatively gives up a timeslice to the OS scheduler.\n ///\n+/// This is used when the programmer knows that the thread will have nothing\n+/// to do for some time, and thus avoid wasting computing time.\n+///\n+/// For example when polling on a resource, it is common to check that it is\n+/// available, and if not to yield in order to avoid busy waiting.\n+///\n+/// Thus the pattern of `yield`ing after a failed poll is rather common when\n+/// implementing low-level shared resources or synchronization primitives.\n+///\n+/// However programmers will usualy prefer to use, [`channel`]s, [`Condvar`]s,\n+/// [`Mutex`]es or [`join`] for their synchronisation routines, as they avoid\n+/// thinking about thread schedulling.\n+///\n+/// Note that [`channel`]s for example are implemented using this primitive.\n+/// Indeed when you call `send` or `recv`, which are blocking, they will yield\n+/// if the channel is not available.\n+///\n /// # Examples\n ///\n /// ```\n /// use std::thread;\n ///\n /// thread::yield_now();\n /// ```\n+///\n+/// [`channel`]: ../../std/sync/mpsc/index.html\n+/// [`spawn`]: ../../std/thread/fn.spawn.html\n+/// [`join`]: ../../std/thread/struct.JoinHandle.html#method.join\n+/// [`Mutex`]: ../../std/sync/struct.Mutex.html\n+/// [`Condvar`]: ../../std/sync/struct.Condvar.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub fn yield_now() {\n     imp::Thread::yield_now()"}]}