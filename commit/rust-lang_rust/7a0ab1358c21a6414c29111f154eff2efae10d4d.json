{"sha": "7a0ab1358c21a6414c29111f154eff2efae10d4d", "node_id": "C_kwDOAAsO6NoAKDdhMGFiMTM1OGMyMWE2NDE0YzI5MTExZjE1NGVmZjJlZmFlMTBkNGQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-06-12T12:40:37Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-06-12T12:40:37Z"}, "message": "internal: Remove `Generics::type_iter` in favor of `Generics::iter`", "tree": {"sha": "8dcf4c20d54746281a553446133a60002805a8d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dcf4c20d54746281a553446133a60002805a8d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a0ab1358c21a6414c29111f154eff2efae10d4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a0ab1358c21a6414c29111f154eff2efae10d4d", "html_url": "https://github.com/rust-lang/rust/commit/7a0ab1358c21a6414c29111f154eff2efae10d4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a0ab1358c21a6414c29111f154eff2efae10d4d/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad109f7f0ab2ae1ad05fc18d9293a158a2b5ecd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad109f7f0ab2ae1ad05fc18d9293a158a2b5ecd1", "html_url": "https://github.com/rust-lang/rust/commit/ad109f7f0ab2ae1ad05fc18d9293a158a2b5ecd1"}], "stats": {"total": 37, "additions": 7, "deletions": 30}, "files": [{"sha": "f54f084ec3feb9c04785871bc72384c856ac9bf3", "filename": "crates/hir-def/src/generics.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7a0ab1358c21a6414c29111f154eff2efae10d4d/crates%2Fhir-def%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a0ab1358c21a6414c29111f154eff2efae10d4d/crates%2Fhir-def%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fgenerics.rs?ref=7a0ab1358c21a6414c29111f154eff2efae10d4d", "patch": "@@ -133,14 +133,6 @@ pub enum WherePredicateTypeTarget {\n }\n \n impl GenericParams {\n-    // FIXME: almost every usecase of this function is wrong. every one should check\n-    // const generics\n-    pub fn type_iter<'a>(\n-        &'a self,\n-    ) -> impl Iterator<Item = (Idx<TypeOrConstParamData>, &TypeParamData)> {\n-        self.type_or_consts.iter().filter_map(|x| x.1.type_param().map(|y| (x.0, y)))\n-    }\n-\n     /// Iterator of type_or_consts field\n     pub fn iter<'a>(\n         &'a self,"}, {"sha": "f64027c218379d83572b25b44918ef5f79217a3b", "filename": "crates/hir-ty/src/lower.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7a0ab1358c21a6414c29111f154eff2efae10d4d/crates%2Fhir-ty%2Fsrc%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a0ab1358c21a6414c29111f154eff2efae10d4d/crates%2Fhir-ty%2Fsrc%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Flower.rs?ref=7a0ab1358c21a6414c29111f154eff2efae10d4d", "patch": "@@ -292,9 +292,13 @@ impl<'a> TyLoweringContext<'a> {\n                         if let Some(def) = self.resolver.generic_def() {\n                             let generics = generics(self.db.upcast(), def);\n                             let param = generics\n-                                .type_iter()\n+                                .iter()\n                                 .filter(|(_, data)| {\n-                                    data.provenance == TypeParamProvenance::ArgumentImplTrait\n+                                    matches!(\n+                                        data,\n+                                        TypeOrConstParamData::TypeParamData(data)\n+                                        if data.provenance == TypeParamProvenance::ArgumentImplTrait\n+                                    )\n                                 })\n                                 .nth(idx as usize)\n                                 .map_or(TyKind::Error, |(id, _)| {"}, {"sha": "fb39e6095c094c06e2984ba9efb4e5a46c3e48fc", "filename": "crates/hir-ty/src/utils.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/7a0ab1358c21a6414c29111f154eff2efae10d4d/crates%2Fhir-ty%2Fsrc%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a0ab1358c21a6414c29111f154eff2efae10d4d/crates%2Fhir-ty%2Fsrc%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Futils.rs?ref=7a0ab1358c21a6414c29111f154eff2efae10d4d", "patch": "@@ -8,7 +8,7 @@ use chalk_ir::{fold::Shift, BoundVar, DebruijnIndex};\n use hir_def::{\n     db::DefDatabase,\n     generics::{\n-        GenericParams, TypeOrConstParamData, TypeParamData, TypeParamProvenance, WherePredicate,\n+        GenericParams, TypeOrConstParamData, TypeParamProvenance, WherePredicate,\n         WherePredicateTypeTarget,\n     },\n     intern::Interned,\n@@ -204,25 +204,6 @@ pub(crate) struct Generics {\n }\n \n impl Generics {\n-    // FIXME: we should drop this and handle const and type generics at the same time\n-    pub(crate) fn type_iter<'a>(\n-        &'a self,\n-    ) -> impl Iterator<Item = (TypeOrConstParamId, &'a TypeParamData)> + 'a {\n-        self.parent_generics\n-            .as_ref()\n-            .into_iter()\n-            .flat_map(|it| {\n-                it.params\n-                    .type_iter()\n-                    .map(move |(local_id, p)| (TypeOrConstParamId { parent: it.def, local_id }, p))\n-            })\n-            .chain(\n-                self.params.type_iter().map(move |(local_id, p)| {\n-                    (TypeOrConstParamId { parent: self.def, local_id }, p)\n-                }),\n-            )\n-    }\n-\n     pub(crate) fn iter_id<'a>(\n         &'a self,\n     ) -> impl Iterator<Item = Either<TypeParamId, ConstParamId>> + 'a {"}]}