{"sha": "0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "node_id": "C_kwDOAAsO6NoAKDBiYjg3NmViZTc2ZGVlNGMzZjAwZmNkM2M1ODFkODdhZDY3OTQwZWY", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-13T21:35:15Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-13T21:35:20Z"}, "message": "Layout of `&dyn Trait<[type error]>` is still wide", "tree": {"sha": "787b35eff1fe3cf662e847e4d4c6864b53002e11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/787b35eff1fe3cf662e847e4d4c6864b53002e11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "html_url": "https://github.com/rust-lang/rust/commit/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1b1ed7e18f1fbe5226a96626827c625985f8285", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b1ed7e18f1fbe5226a96626827c625985f8285", "html_url": "https://github.com/rust-lang/rust/commit/f1b1ed7e18f1fbe5226a96626827c625985f8285"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "42fb5d031bbc9d17104b454b2d959c640e88f6db", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "patch": "@@ -730,7 +730,11 @@ where\n                         */\n                     };\n \n-                    let metadata = if let Some(metadata_def_id) = tcx.lang_items().metadata_type() {\n+                    let metadata = if let Some(metadata_def_id) = tcx.lang_items().metadata_type()\n+                        // Projection eagerly bails out when the pointee references errors,\n+                        // fall back to structurally deducing metadata.\n+                        && !pointee.references_error()\n+                    {\n                         let metadata = tcx.normalize_erasing_regions(\n                             cx.param_env(),\n                             tcx.mk_projection(metadata_def_id, [pointee]),"}, {"sha": "1788f544a7f9a1ccddaa973c7a346264ac3e7b23", "filename": "compiler/rustc_ty_utils/src/layout.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Flayout.rs?ref=0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "patch": "@@ -156,7 +156,11 @@ fn layout_of_uncached<'tcx>(\n \n             let unsized_part = tcx.struct_tail_erasing_lifetimes(pointee, param_env);\n \n-            let metadata = if let Some(metadata_def_id) = tcx.lang_items().metadata_type() {\n+            let metadata = if let Some(metadata_def_id) = tcx.lang_items().metadata_type()\n+                // Projection eagerly bails out when the pointee references errors,\n+                // fall back to structurally deducing metadata.\n+                && !pointee.references_error()\n+            {\n                 let metadata_ty = tcx.normalize_erasing_regions(\n                     param_env,\n                     tcx.mk_projection(metadata_def_id, [pointee]),"}, {"sha": "6753ce15ed15827ed4351dba2429ec84e60c5461", "filename": "tests/ui/layout/transmute-to-tail-with-err.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/tests%2Fui%2Flayout%2Ftransmute-to-tail-with-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/tests%2Fui%2Flayout%2Ftransmute-to-tail-with-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flayout%2Ftransmute-to-tail-with-err.rs?ref=0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "patch": "@@ -0,0 +1,8 @@\n+trait Trait<T> {}\n+\n+struct Bar(Box<dyn Trait<T>>);\n+//~^ ERROR cannot find type `T` in this scope\n+\n+fn main() {\n+    let x: Bar = unsafe { std::mem::transmute(()) };\n+}"}, {"sha": "97ab59c398a3baa1b51d7ebbaa2439fb4fee3d66", "filename": "tests/ui/layout/transmute-to-tail-with-err.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/tests%2Fui%2Flayout%2Ftransmute-to-tail-with-err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0bb876ebe76dee4c3f00fcd3c581d87ad67940ef/tests%2Fui%2Flayout%2Ftransmute-to-tail-with-err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flayout%2Ftransmute-to-tail-with-err.stderr?ref=0bb876ebe76dee4c3f00fcd3c581d87ad67940ef", "patch": "@@ -0,0 +1,14 @@\n+error[E0412]: cannot find type `T` in this scope\n+  --> $DIR/transmute-to-tail-with-err.rs:3:26\n+   |\n+LL | struct Bar(Box<dyn Trait<T>>);\n+   |                          ^ not found in this scope\n+   |\n+help: you might be missing a type parameter\n+   |\n+LL | struct Bar<T>(Box<dyn Trait<T>>);\n+   |           +++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0412`."}]}