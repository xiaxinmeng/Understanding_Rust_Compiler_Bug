{"sha": "2854f0c75e40361a27f200a80612a8a357335843", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4NTRmMGM3NWU0MDM2MWEyN2YyMDBhODA2MTJhOGEzNTczMzU4NDM=", "commit": {"author": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-01-19T17:11:06Z"}, "committer": {"name": "Steven Fackler", "email": "sfackler@gmail.com", "date": "2015-01-19T17:11:06Z"}, "message": "Fix flaky condvar test", "tree": {"sha": "cf6e4f5769aaac407ac6bb43f5a9a27cfc26adf0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf6e4f5769aaac407ac6bb43f5a9a27cfc26adf0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2854f0c75e40361a27f200a80612a8a357335843", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2854f0c75e40361a27f200a80612a8a357335843", "html_url": "https://github.com/rust-lang/rust/commit/2854f0c75e40361a27f200a80612a8a357335843", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2854f0c75e40361a27f200a80612a8a357335843/comments", "author": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sfackler", "id": 1455697, "node_id": "MDQ6VXNlcjE0NTU2OTc=", "avatar_url": "https://avatars.githubusercontent.com/u/1455697?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sfackler", "html_url": "https://github.com/sfackler", "followers_url": "https://api.github.com/users/sfackler/followers", "following_url": "https://api.github.com/users/sfackler/following{/other_user}", "gists_url": "https://api.github.com/users/sfackler/gists{/gist_id}", "starred_url": "https://api.github.com/users/sfackler/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sfackler/subscriptions", "organizations_url": "https://api.github.com/users/sfackler/orgs", "repos_url": "https://api.github.com/users/sfackler/repos", "events_url": "https://api.github.com/users/sfackler/events{/privacy}", "received_events_url": "https://api.github.com/users/sfackler/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "43f2c199e4e87d7ccd15658c52ad8dc5a1d54fb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/43f2c199e4e87d7ccd15658c52ad8dc5a1d54fb9", "html_url": "https://github.com/rust-lang/rust/commit/43f2c199e4e87d7ccd15658c52ad8dc5a1d54fb9"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "d2d5335078e2657014c757e32c4aea4cdb968503", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2854f0c75e40361a27f200a80612a8a357335843/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2854f0c75e40361a27f200a80612a8a357335843/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=2854f0c75e40361a27f200a80612a8a357335843", "patch": "@@ -420,14 +420,15 @@ mod tests {\n         static M: StaticMutex = MUTEX_INIT;\n \n         let g = M.lock().unwrap();\n-        let (g, success) = C.wait_timeout(g, Duration::nanoseconds(1000)).unwrap();\n-        assert!(!success);\n+        let (g, _no_timeout) = C.wait_timeout(g, Duration::nanoseconds(1000)).unwrap();\n+        // spurious wakeups mean this isn't necessarily true\n+        // assert!(!no_timeout);\n         let _t = Thread::spawn(move || {\n             let _g = M.lock().unwrap();\n             C.notify_one();\n         });\n-        let (g, success) = C.wait_timeout(g, Duration::days(1)).unwrap();\n-        assert!(success);\n+        let (g, no_timeout) = C.wait_timeout(g, Duration::days(1)).unwrap();\n+        assert!(no_timeout);\n         drop(g);\n         unsafe { C.destroy(); M.destroy(); }\n     }"}]}