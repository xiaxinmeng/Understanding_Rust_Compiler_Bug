{"sha": "8e3082ff6e622c17a93bec34d2ddbd6f63609512", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMzA4MmZmNmU2MjJjMTdhOTNiZWMzNGQyZGRiZDZmNjM2MDk1MTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-09-21T10:36:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-09-21T10:36:51Z"}, "message": "Document AstTransformation", "tree": {"sha": "4d355bd1bcfb65e7e9c3a0e4dc7da6d7594f0225", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d355bd1bcfb65e7e9c3a0e4dc7da6d7594f0225"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e3082ff6e622c17a93bec34d2ddbd6f63609512", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3082ff6e622c17a93bec34d2ddbd6f63609512", "html_url": "https://github.com/rust-lang/rust/commit/8e3082ff6e622c17a93bec34d2ddbd6f63609512", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e3082ff6e622c17a93bec34d2ddbd6f63609512/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7", "html_url": "https://github.com/rust-lang/rust/commit/2c916bbc189da3dc5a1e34b3cdcfcb5e30d42af7"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "835da3bb261dc10d47e131b4ee6320f647fc145c", "filename": "crates/assists/src/ast_transform.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8e3082ff6e622c17a93bec34d2ddbd6f63609512/crates%2Fassists%2Fsrc%2Fast_transform.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e3082ff6e622c17a93bec34d2ddbd6f63609512/crates%2Fassists%2Fsrc%2Fast_transform.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fast_transform.rs?ref=8e3082ff6e622c17a93bec34d2ddbd6f63609512", "patch": "@@ -18,6 +18,34 @@ pub fn apply<'a, N: AstNode>(transformer: &dyn AstTransform<'a>, node: N) -> N {\n     .rewrite_ast(&node)\n }\n \n+/// `AstTransform` helps with applying bulk transformations to syntax nodes.\n+///\n+/// This is mostly useful for IDE code generation. If you paste some existing\n+/// code into a new context (for example, to add method overrides to an `impl`\n+/// block), you generally want to appropriately qualify the names, and sometimes\n+/// you might want to substitute generic parameters as well:\n+///\n+/// ```\n+/// mod x {\n+///   pub struct A;\n+///   pub trait T<U> { fn foo(&self, _: U) -> A; }\n+/// }\n+///\n+/// mod y {\n+///   use x::T;\n+///\n+///   impl T<()> for () {\n+///      // If we invoke **Add Missing Members** here, we want to copy-paste `foo`.\n+///      // But we want a slightly-modified version of it:\n+///      fn foo(&self, _: ()) -> x::A {}\n+///   }\n+/// }\n+/// ```\n+///\n+/// So, a single `AstTransform` describes such function from `SyntaxNode` to\n+/// `SyntaxNode`. Note that the API here is a bit too high-order and high-brow.\n+/// We'd want to somehow express this concept simpler, but so far nobody got to\n+/// simplifying this!\n pub trait AstTransform<'a> {\n     fn get_substitution(&self, node: &syntax::SyntaxNode) -> Option<syntax::SyntaxNode>;\n "}]}