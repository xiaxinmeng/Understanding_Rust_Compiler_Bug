{"sha": "62ac9d0b2e437dd6c469596299ac7eac8ed96918", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYWM5ZDBiMmU0MzdkZDZjNDY5NTk2Mjk5YWM3ZWFjOGVkOTY5MTg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T19:08:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-17T19:08:43Z"}, "message": "Restore test task setup\n\nThis is needed in order for the test runner to continue on failure, and I\ndon't see that it causes any problems.", "tree": {"sha": "df2fd19c42e5ca6adda524cc59682f9c02bec861", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df2fd19c42e5ca6adda524cc59682f9c02bec861"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62ac9d0b2e437dd6c469596299ac7eac8ed96918", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62ac9d0b2e437dd6c469596299ac7eac8ed96918", "html_url": "https://github.com/rust-lang/rust/commit/62ac9d0b2e437dd6c469596299ac7eac8ed96918", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62ac9d0b2e437dd6c469596299ac7eac8ed96918/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94260fb91d3e8a11f39eafc1c21bc974713db166", "url": "https://api.github.com/repos/rust-lang/rust/commits/94260fb91d3e8a11f39eafc1c21bc974713db166", "html_url": "https://github.com/rust-lang/rust/commit/94260fb91d3e8a11f39eafc1c21bc974713db166"}], "stats": {"total": 5, "additions": 1, "deletions": 4}, "files": [{"sha": "682a177bdf8fb29d4aac9d9e916155f5783de668", "filename": "src/lib/test.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/62ac9d0b2e437dd6c469596299ac7eac8ed96918/src%2Flib%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62ac9d0b2e437dd6c469596299ac7eac8ed96918/src%2Flib%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Ftest.rs?ref=62ac9d0b2e437dd6c469596299ac7eac8ed96918", "patch": "@@ -336,16 +336,13 @@ fn run_test(test: &test_desc, to_task: &test_to_task) -> test_future {\n // we've got to treat our test functions as unsafe pointers.  This function\n // only works with functions that don't contain closures.\n fn default_test_to_task(f: &fn()) -> task_id {\n-    /*\n     fn run_task(fptr: *mutable fn() ) {\n         configure_test_task();\n         // Run the test\n         (*fptr)()\n     }\n     let fptr = ptr::addr_of(f);\n-    */\n-    //ret task::_spawn(bind run_task(fptr));\n-    task::spawn(f)\n+    ret task::spawn(bind run_task(fptr));\n }\n \n // Call from within a test task to make sure it's set up correctly"}]}