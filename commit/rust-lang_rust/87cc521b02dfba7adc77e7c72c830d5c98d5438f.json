{"sha": "87cc521b02dfba7adc77e7c72c830d5c98d5438f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3Y2M1MjFiMDJkZmJhN2FkYzc3ZTdjNzJjODMwZDVjOThkNTQzOGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-28T16:17:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-28T16:17:31Z"}, "message": "Rollup merge of #69522 - Centril:fix-69341, r=petrochenkov\n\nerror_derive_forbidden_on_non_adt: be more graceful\n\nFixes #69341 which was injected by #67052.\n\nr? @petrochenkov", "tree": {"sha": "ee3cffb9a4ea0e51137e9a2f881d25472ed88e4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee3cffb9a4ea0e51137e9a2f881d25472ed88e4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87cc521b02dfba7adc77e7c72c830d5c98d5438f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeWT0cCRBK7hj4Ov3rIwAAdHIIAB6FHKHgbto27ad7JjwoBlVy\nu7z+PqUMO8Uy7wro7lbwzO57FgAWYx9wGuxWOSSb7ORyqoxQ0PmS1aKMG2zbV0Z3\nuhd6eX/EwOS01qTbj3T/XKqWoH2dcbRx69EzvrQ08C5ihHkpxSHlR8eZcPjoR0Ek\n9jyFVdKdD3lIvM6tCvh+yOk5IUqfsQBVMWuMRHgNUm4CCHSl6MkCrbfolfRH5QN8\nX1zWrbZd8V0SzGNKZtY1qFfFwZb2hOuvDf8ZkniWudNUeCzJpmd8Ye48+z6Rjxbi\nEZVoGV/tfXVxewPUadgUbXq6gh727z1gL2SEJyKnpleLZO0B81Z8bIhb3/4oCrU=\n=Tz3z\n-----END PGP SIGNATURE-----\n", "payload": "tree ee3cffb9a4ea0e51137e9a2f881d25472ed88e4e\nparent 07d9ed2c09b6eb4f114fff774570e6e11108f992\nparent 13d42f4784c2454a1890e48f50a8f672f4c0494c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1582906651 +0100\ncommitter GitHub <noreply@github.com> 1582906651 +0100\n\nRollup merge of #69522 - Centril:fix-69341, r=petrochenkov\n\nerror_derive_forbidden_on_non_adt: be more graceful\n\nFixes #69341 which was injected by #67052.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87cc521b02dfba7adc77e7c72c830d5c98d5438f", "html_url": "https://github.com/rust-lang/rust/commit/87cc521b02dfba7adc77e7c72c830d5c98d5438f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87cc521b02dfba7adc77e7c72c830d5c98d5438f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07d9ed2c09b6eb4f114fff774570e6e11108f992", "url": "https://api.github.com/repos/rust-lang/rust/commits/07d9ed2c09b6eb4f114fff774570e6e11108f992", "html_url": "https://github.com/rust-lang/rust/commit/07d9ed2c09b6eb4f114fff774570e6e11108f992"}, {"sha": "13d42f4784c2454a1890e48f50a8f672f4c0494c", "url": "https://api.github.com/repos/rust-lang/rust/commits/13d42f4784c2454a1890e48f50a8f672f4c0494c", "html_url": "https://github.com/rust-lang/rust/commit/13d42f4784c2454a1890e48f50a8f672f4c0494c"}], "stats": {"total": 43, "additions": 39, "deletions": 4}, "files": [{"sha": "84fe609ef9a09e1ffa7b71b1661358ea393a42f7", "filename": "src/librustc_expand/expand.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/87cc521b02dfba7adc77e7c72c830d5c98d5438f/src%2Flibrustc_expand%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cc521b02dfba7adc77e7c72c830d5c98d5438f/src%2Flibrustc_expand%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_expand%2Fexpand.rs?ref=87cc521b02dfba7adc77e7c72c830d5c98d5438f", "patch": "@@ -503,13 +503,12 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n     }\n \n     fn error_derive_forbidden_on_non_adt(&self, derives: &[Path], item: &Annotatable) {\n-        let attr =\n-            attr::find_by_name(item.attrs(), sym::derive).expect(\"`derive` attribute should exist\");\n-        let span = attr.span;\n+        let attr = attr::find_by_name(item.attrs(), sym::derive);\n+        let span = attr.map_or(item.span(), |attr| attr.span);\n         let mut err = self\n             .cx\n             .struct_span_err(span, \"`derive` may only be applied to structs, enums and unions\");\n-        if let ast::AttrStyle::Inner = attr.style {\n+        if let Some(ast::Attribute { style: ast::AttrStyle::Inner, .. }) = attr {\n             let trait_list = derives.iter().map(|t| pprust::path_to_string(t)).collect::<Vec<_>>();\n             let suggestion = format!(\"#[derive({})]\", trait_list.join(\", \"));\n             err.span_suggestion("}, {"sha": "24692f7cf52e1e262920471fec86f9ddc9f37c8d", "filename": "src/test/ui/malformed/issue-69341-malformed-derive-inert.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/87cc521b02dfba7adc77e7c72c830d5c98d5438f/src%2Ftest%2Fui%2Fmalformed%2Fissue-69341-malformed-derive-inert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cc521b02dfba7adc77e7c72c830d5c98d5438f/src%2Ftest%2Fui%2Fmalformed%2Fissue-69341-malformed-derive-inert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fissue-69341-malformed-derive-inert.rs?ref=87cc521b02dfba7adc77e7c72c830d5c98d5438f", "patch": "@@ -0,0 +1,10 @@\n+fn main() {}\n+\n+struct CLI {\n+    #[derive(parse())]\n+    //~^ ERROR traits in `#[derive(...)]` don't accept arguments\n+    //~| ERROR cannot find derive macro `parse` in this scope\n+    //~| ERROR cannot find derive macro `parse` in this scope\n+    path: (),\n+    //~^ ERROR `derive` may only be applied to structs, enums and unions\n+}"}, {"sha": "e8f96178d10bf94e8ed58b9cb5cd18f20ba607a5", "filename": "src/test/ui/malformed/issue-69341-malformed-derive-inert.stderr", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/87cc521b02dfba7adc77e7c72c830d5c98d5438f/src%2Ftest%2Fui%2Fmalformed%2Fissue-69341-malformed-derive-inert.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87cc521b02dfba7adc77e7c72c830d5c98d5438f/src%2Ftest%2Fui%2Fmalformed%2Fissue-69341-malformed-derive-inert.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmalformed%2Fissue-69341-malformed-derive-inert.stderr?ref=87cc521b02dfba7adc77e7c72c830d5c98d5438f", "patch": "@@ -0,0 +1,26 @@\n+error: traits in `#[derive(...)]` don't accept arguments\n+  --> $DIR/issue-69341-malformed-derive-inert.rs:4:19\n+   |\n+LL |     #[derive(parse())]\n+   |                   ^^ help: remove the arguments\n+\n+error: `derive` may only be applied to structs, enums and unions\n+  --> $DIR/issue-69341-malformed-derive-inert.rs:8:5\n+   |\n+LL |     path: (),\n+   |     ^^^^^^^^\n+\n+error: cannot find derive macro `parse` in this scope\n+  --> $DIR/issue-69341-malformed-derive-inert.rs:4:14\n+   |\n+LL |     #[derive(parse())]\n+   |              ^^^^^\n+\n+error: cannot find derive macro `parse` in this scope\n+  --> $DIR/issue-69341-malformed-derive-inert.rs:4:14\n+   |\n+LL |     #[derive(parse())]\n+   |              ^^^^^\n+\n+error: aborting due to 4 previous errors\n+"}]}