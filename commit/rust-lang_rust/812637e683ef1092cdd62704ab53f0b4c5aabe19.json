{"sha": "812637e683ef1092cdd62704ab53f0b4c5aabe19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMjYzN2U2ODNlZjEwOTJjZGQ2MjcwNGFiNTNmMGI0YzVhYWJlMTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-01T18:51:41Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-07-05T19:46:42Z"}, "message": "test: Fix tests for crate_id removal\n\nThis involved removing some tests whose functionality was removed such as many\nof the crateresolve tests", "tree": {"sha": "656164dbecf61bedfbda8ec2d2f3df72f81ffb1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/656164dbecf61bedfbda8ec2d2f3df72f81ffb1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/812637e683ef1092cdd62704ab53f0b4c5aabe19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/812637e683ef1092cdd62704ab53f0b4c5aabe19", "html_url": "https://github.com/rust-lang/rust/commit/812637e683ef1092cdd62704ab53f0b4c5aabe19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/812637e683ef1092cdd62704ab53f0b4c5aabe19/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "html_url": "https://github.com/rust-lang/rust/commit/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9"}], "stats": {"total": 455, "additions": 144, "deletions": 311}, "files": [{"sha": "e26ea7c4fa6d0b73b79e49c83722512ccd5549fa", "filename": "src/test/auxiliary/crateresolve1-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fcrateresolve1-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fcrateresolve1-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve1-1.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"crateresolve1#0.1\"]\n-\n+// compile-flags:-C extra-filename=-1\n+#![crate_name = \"crateresolve1\"]\n #![crate_type = \"lib\"]\n \n pub fn f() -> int { 10 }"}, {"sha": "715171b143a4a46686e59ad3ab168f2a52a6a272", "filename": "src/test/auxiliary/crateresolve1-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fcrateresolve1-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fcrateresolve1-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve1-2.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"crateresolve1#0.2\"]\n-\n+// compile-flags:-C extra-filename=-2\n+#![crate_name = \"crateresolve1\"]\n #![crate_type = \"lib\"]\n \n pub fn f() -> int { 20 }"}, {"sha": "f733b5b908ab49aff407753905edf2a33317e185", "filename": "src/test/auxiliary/crateresolve1-3.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fcrateresolve1-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fcrateresolve1-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve1-3.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"crateresolve1#0.3\"]\n-\n+// compile-flags:-C extra-filename=-3\n+#![crate_name = \"crateresolve1\"]\n #![crate_type = \"lib\"]\n \n pub fn f() -> int { 30 }"}, {"sha": "f436e7c95d1bfa37f566a5d4d4fa4907a49f394f", "filename": "src/test/auxiliary/crateresolve2-1.rs", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fauxiliary%2Fcrateresolve2-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fauxiliary%2Fcrateresolve2-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fcrateresolve2-1.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,15 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#![crate_id=\"crateresolve2#0.1\"]\n-\n-#![crate_type = \"lib\"]\n-\n-pub fn f() -> int { 10 }"}, {"sha": "5c83b327912270e6a15c9a7f6b89e154df86a19a", "filename": "src/test/auxiliary/extern-crosscrate-source.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"externcallback#0.1\"]\n+#![crate_name=\"externcallback\"]\n #![crate_type = \"lib\"]\n \n extern crate libc;"}, {"sha": "883bfd035f40abbcba04a8c212b8e4ecdb2890b1", "filename": "src/test/compile-fail/bad-crate-id.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fcompile-fail%2Fbad-crate-id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fcompile-fail%2Fbad-crate-id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-crate-id.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern crate foo = \"\"; //~ ERROR: malformed crate id\n-extern crate bar = \"#a\"; //~ ERROR: malformed crate id\n+extern crate foo = \"\"; //~ ERROR: crate name must not be empty\n \n fn main() {}"}, {"sha": "fcbdc6d1f2401f8e993aebb740f7d2205b7975d8", "filename": "src/test/compile-fail/bad-crate-id2.rs", "status": "renamed", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-crate-id2.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"crateresolve2#0.2\"]\n+extern crate bar = \"#a\"; //~ ERROR: invalid character in crate name: `#`\n \n-#![crate_type = \"lib\"]\n+fn main() {}\n \n-pub fn f() -> int { 20 }", "previous_filename": "src/test/auxiliary/crateresolve2-2.rs"}, {"sha": "c5e9d1281526d9585c7f9142c2fba696cca36500", "filename": "src/test/compile-fail/crateresolve2.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fcrateresolve2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fcrateresolve2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcrateresolve2.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve2-1.rs\n-// aux-build:crateresolve2-2.rs\n-// aux-build:crateresolve2-3.rs\n-// error-pattern:using multiple versions of crate `crateresolve2`\n-\n-extern crate crateresolve2 = \"crateresolve2#0.1\";\n-\n-mod m {\n-    pub extern crate crateresolve2 = \"crateresolve2#0.2\";\n-}\n-\n-fn main() {\n-    let x: int = false;\n-}"}, {"sha": "8b4801466b9b639d9dd65b1bff41505c69f3f2e0", "filename": "src/test/compile-fail/crateresolve5.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcrateresolve5.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve5-1.rs\n-// aux-build:crateresolve5-2.rs\n-\n-extern crate cr5_1 = \"crateresolve5#0.1\";\n-extern crate cr5_2 = \"crateresolve5#0.2\";\n-\n-\n-fn main() {\n-    // Nominal types from two multiple versions of a crate are different types\n-    assert!(cr5_1::nominal() == cr5_2::nominal()); //~ ERROR mismatched types: expected\n-}"}, {"sha": "dbedf355a56cb2f799f8517ee237cc347c6d28fd", "filename": "src/test/compile-fail/issue-11908-1.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fissue-11908-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fissue-11908-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11908-1.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:issue-11908-1.rs\n-// ignore-android this test is incompatible with the android test runner\n-// error-pattern: multiple dylib candidates for `url` found\n-\n-// This test ensures that if you have the same rlib or dylib at two locations\n-// in the same path that you don't hit an assertion in the compiler.\n-//\n-// Note that this relies on `liburl` to be in the path somewhere else,\n-// and then our aux-built libraries will collide with liburl (they have\n-// the same version listed)\n-\n-extern crate url;\n-\n-fn main() {}"}, {"sha": "8b916aad6535495b905d58d68cf2a50598e5ee5d", "filename": "src/test/compile-fail/issue-11908-2.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fissue-11908-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Fcompile-fail%2Fissue-11908-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-11908-2.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,21 +0,0 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:issue-11908-2.rs\n-// no-prefer-dynamic\n-// ignore-android this test is incompatible with the android test runner\n-// error-pattern: multiple rlib candidates for `url` found\n-\n-// see comments in issue-11908-1 for what's going on here\n-\n-extern crate url;\n-\n-fn main() {}\n-"}, {"sha": "c7753a67464ac64ad0e9b8193c8996632a076f41", "filename": "src/test/run-make/bootstrap-from-c-with-green/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -6,7 +6,6 @@ TARGET_RPATH_DIR:=$(TARGET_RPATH_DIR):$(TMPDIR)\n \n all:\n \t$(RUSTC) lib.rs\n-\tln -nsf $(call DYLIB,boot-*) $(call DYLIB,boot)\n \t$(CC) main.c -o $(call RUN_BINFILE,main) $(call RPATH_LINK_SEARCH,$(HOST_LIB_DIR)) -lboot\n \t$(call RUN,main)\n \t$(call REMOVE_DYLIBS,boot)"}, {"sha": "7f17018c486c0e11ef543dc54e8fa4fa69bff0c9", "filename": "src/test/run-make/bootstrap-from-c-with-green/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-green%2Flib.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"boot#0.1\"]\n+#![crate_name=\"boot\"]\n #![crate_type=\"dylib\"]\n \n extern crate rustuv;"}, {"sha": "c7753a67464ac64ad0e9b8193c8996632a076f41", "filename": "src/test/run-make/bootstrap-from-c-with-native/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-native%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-native%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fbootstrap-from-c-with-native%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -6,7 +6,6 @@ TARGET_RPATH_DIR:=$(TARGET_RPATH_DIR):$(TMPDIR)\n \n all:\n \t$(RUSTC) lib.rs\n-\tln -nsf $(call DYLIB,boot-*) $(call DYLIB,boot)\n \t$(CC) main.c -o $(call RUN_BINFILE,main) $(call RPATH_LINK_SEARCH,$(HOST_LIB_DIR)) -lboot\n \t$(call RUN,main)\n \t$(call REMOVE_DYLIBS,boot)"}, {"sha": "a5b4430ab6a0c30d4a64da45bb359b77e4f65997", "filename": "src/test/run-make/c-link-to-rust-dylib/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-dylib%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -4,7 +4,6 @@ HOST_LIB_DIR=$(TMPDIR)/../../../stage$(RUST_BUILD_STAGE)/lib\n \n all:\n \t$(RUSTC) foo.rs\n-\tln -s $(call DYLIB,foo-*) $(call DYLIB,foo)\n \t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(call RPATH_LINK_SEARCH,$(HOST_LIB_DIR)) -Wl,-rpath,$(TMPDIR)\n \t$(call RUN,bar)\n \t$(call REMOVE_DYLIBS,foo)"}, {"sha": "8a6d6e4dd6d786122f2a338232d128c33cb32532", "filename": "src/test/run-make/c-link-to-rust-staticlib/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fc-link-to-rust-staticlib%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -10,7 +10,6 @@ endif\n ifneq ($(shell uname),FreeBSD)\n all:\n \t$(RUSTC) foo.rs\n-\tln -s $(call STATICLIB,foo-*) $(call STATICLIB,foo)\n \t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(EXTRAFLAGS) -lstdc++\n \t$(call RUN,bar)\n \trm $(call STATICLIB,foo*)"}, {"sha": "a709320c0f910595d6a589763b89acfd9a4d6647", "filename": "src/test/run-make/crate-data-smoke/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,7 +1,6 @@\n -include ../tools.mk\n \n all:\n-\t[ `$(RUSTC) --crate-id crate.rs` = \"foo#0.11.0\" ]\n \t[ `$(RUSTC) --crate-name crate.rs` = \"foo\" ]\n \t[ `$(RUSTC) --crate-file-name crate.rs` = \"foo\" ]\n \t[ `$(RUSTC) --crate-file-name --crate-type=lib --test crate.rs` = \"foo\" ]"}, {"sha": "305b3dc70a625006de0c6f3a198e046bcf6a1ff0", "filename": "src/test/run-make/crate-data-smoke/crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Fcrate.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id = \"foo#0.11.0\"]\n+#![crate_name = \"foo\"]\n \n // Querying about the crate metadata should *not* parse the entire crate, it\n // only needs the crate attributes (which are guaranteed to be at the top) be"}, {"sha": "639a5d0387b8ea045146515086885abdd0c89e4e", "filename": "src/test/run-make/crate-data-smoke/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Flib.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,5 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id = \"mylib\"]\n+#![crate_name = \"mylib\"]\n #![crate_type = \"lib\"]"}, {"sha": "4e0937486003c19db4449023356883814c211b55", "filename": "src/test/run-make/crate-data-smoke/rlib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Frlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Frlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcrate-data-smoke%2Frlib.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,5 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id = \"mylib\"]\n+#![crate_name = \"mylib\"]\n #![crate_type = \"rlib\"]"}, {"sha": "7c15785bbb23d61eaa2a5e6315852dd2e9c2de25", "filename": "src/test/run-make/dep-info/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2Flib.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"foo#0.1\"]\n+#![crate_name = \"foo\"]\n \n pub mod foo;\n pub mod bar;"}, {"sha": "11b9ba6fce3383fd5e2162076b56854feeba83a6", "filename": "src/test/run-make/extern-flag-disambiguates/a.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fa.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #![crate_name = \"a\"]\n #![crate_type = \"rlib\"]\n "}, {"sha": "3156cf0ba7275a0f99ee4d1f0b0625f89c7624ea", "filename": "src/test/run-make/extern-flag-disambiguates/b.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fb.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #![crate_name = \"b\"]\n #![crate_type = \"rlib\"]\n "}, {"sha": "d3bbc762ef2f360e464ac5506e5b12e1c642e2be", "filename": "src/test/run-make/extern-flag-disambiguates/c.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fc.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #![crate_name = \"c\"]\n #![crate_type = \"rlib\"]\n "}, {"sha": "d850daffc39414ce661b238d61f32eb1fa907d3f", "filename": "src/test/run-make/extern-flag-disambiguates/d.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-disambiguates%2Fd.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #[cfg(before)] extern crate a;\n extern crate b;\n extern crate c;"}, {"sha": "2152aa79c3370a337ef242c64a9f04c09d45d8f3", "filename": "src/test/run-make/extern-flag-fun/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Fbar.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -0,0 +1,10 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+"}, {"sha": "52741668640112e4d2dc33bca3c1de4e0043ca38", "filename": "src/test/run-make/extern-flag-fun/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fextern-flag-fun%2Ffoo.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern crate bar;\n \n fn main() {}"}, {"sha": "66f360daa1a335c0cf895027eda2f8e71a798f18", "filename": "src/test/run-make/issue-11908/Makefile", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fissue-11908%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fissue-11908%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-11908%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -0,0 +1,21 @@\n+# This test ensures that if you have the same rlib or dylib at two locations\n+# in the same path that you don't hit an assertion in the compiler.\n+#\n+# Note that this relies on `liburl` to be in the path somewhere else,\n+# and then our aux-built libraries will collide with liburl (they have\n+# the same version listed)\n+\n+-include ../tools.mk\n+\n+all:\n+\tmkdir $(TMPDIR)/other\n+\t$(RUSTC) foo.rs --crate-type=dylib\n+\t$(RUSTC) foo.rs --crate-type=dylib -o $(TMPDIR)/other/libfoo.so\n+\t$(RUSTC) bar.rs -L $(TMPDIR)/other 2>&1 | \\\n+\t\tgrep \"multiple dylib candidates\"\n+\trm -rf $(TMPDIR)\n+\tmkdir -p $(TMPDIR)/other\n+\t$(RUSTC) foo.rs --crate-type=rlib\n+\t$(RUSTC) foo.rs --crate-type=rlib -o $(TMPDIR)/other/libfoo.rlib\n+\t$(RUSTC) bar.rs -L $(TMPDIR)/other 2>&1 | \\\n+\t\tgrep \"multiple rlib candidates\""}, {"sha": "6316cfa3bba08c9efa9bedac15a71633e66bf7a0", "filename": "src/test/run-make/issue-11908/bar.rs", "status": "renamed", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fissue-11908%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fissue-11908%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-11908%2Fbar.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-prefer-dynamic\n+extern crate foo;\n \n-#![crate_id = \"url#0.11.0\"]\n-#![crate_type = \"rlib\"]\n+fn main() {}", "previous_filename": "src/test/auxiliary/issue-11908-2.rs"}, {"sha": "0858d3c4e47a12b8f1ab52030597d3ee872df721", "filename": "src/test/run-make/issue-11908/foo.rs", "status": "renamed", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fissue-11908%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fissue-11908%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-11908%2Ffoo.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,6 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:can't find crate for `std`\n-\n-extern crate std = \"std#bogus\";\n+#![crate_name = \"foo\"]", "previous_filename": "src/test/compile-fail/use-meta.rc"}, {"sha": "6c7e9aa1d59fda347da1af71ffe94d2dcb5f1e21", "filename": "src/test/run-make/lto-smoke-c/Makefile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -5,6 +5,5 @@ CC := $(CC:-g=)\n \n all:\n \t$(RUSTC) foo.rs -Z lto\n-\tln -s $(call STATICLIB,foo-*) $(call STATICLIB,foo)\n \t$(CC) bar.c -lfoo -o $(call RUN_BINFILE,bar) $(EXTRACFLAGS) -lstdc++\n \t$(call RUN,bar)"}, {"sha": "04d3ae67207228d9bfe4d16f9873b5cd8bbe3f92", "filename": "src/test/run-make/lto-syntax-extension/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Flto-syntax-extension%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Flto-syntax-extension%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-syntax-extension%2Flib.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,4 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[crate_type = \"rlib\"];\n+#![crate_type = \"rlib\"]"}, {"sha": "44b9e2f874a4bf2610f7ec4ed8b97d975f198c38", "filename": "src/test/run-make/metadata-flag-frobs-symbols/bar.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmetadata-flag-frobs-symbols%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmetadata-flag-frobs-symbols%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmetadata-flag-frobs-symbols%2Fbar.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n extern crate foo1;\n extern crate foo2;\n "}, {"sha": "ed04eed8cf77e602f57358e674da214027fcc84e", "filename": "src/test/run-make/metadata-flag-frobs-symbols/foo.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmetadata-flag-frobs-symbols%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmetadata-flag-frobs-symbols%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmetadata-flag-frobs-symbols%2Ffoo.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #![crate_name = \"foo\"]\n #![crate_type = \"rlib\"]\n "}, {"sha": "e60c16ae0f6b8e8af8a828628f72ad051b22dd74", "filename": "src/test/run-make/multiple-versions/Makefile", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmultiple-versions%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmultiple-versions%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmultiple-versions%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -0,0 +1,9 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) foo.rs -C metadata=a -C extra-filename=-1 --crate-type=rlib\n+\t$(RUSTC) foo.rs -C metadata=b -C extra-filename=-2 --crate-type=rlib\n+\t$(RUSTC) bar.rs \\\n+\t\t--extern foo1=$(TMPDIR)/libfoo-1.rlib \\\n+\t\t--extern foo2=$(TMPDIR)/libfoo-2.rlib \\\n+\t\t2>&1 | grep \"using multiple versions of crate .foo.\""}, {"sha": "262193a08100aaff74244605393b531a70f3a041", "filename": "src/test/run-make/multiple-versions/bar.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmultiple-versions%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmultiple-versions%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmultiple-versions%2Fbar.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// no-prefer-dynamic\n+extern crate foo1;\n+extern crate foo2;\n \n-#![crate_id = \"url#0.11.0\"]\n-#![crate_type = \"dylib\"]\n+fn main() {}", "previous_filename": "src/test/auxiliary/issue-11908-1.rs"}, {"sha": "2661b1f4eb49b7a93d03ca34e2563991eb2e37c3", "filename": "src/test/run-make/multiple-versions/foo.rs", "status": "renamed", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmultiple-versions%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fmultiple-versions%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmultiple-versions%2Ffoo.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,8 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id=\"crateresolve2#0.3\"]\n-\n-#![crate_type = \"lib\"]\n-\n-pub fn f() -> int { 30 }\n+pub fn foo() {}", "previous_filename": "src/test/auxiliary/crateresolve2-3.rs"}, {"sha": "bb5796bd8737ff3c01d46d8aa588766c672a62ab", "filename": "src/test/run-make/output-type-permutations/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Foutput-type-permutations%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Foutput-type-permutations%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-type-permutations%2Ffoo.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -8,6 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![crate_id = \"bar\"]\n+#![crate_name = \"bar\"]\n \n fn main() {}"}, {"sha": "37dcf9a6c4a1bf361105c40f1184eb019fa17209", "filename": "src/test/run-make/weird-output-filenames/Makefile", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -1,9 +1,9 @@\n -include ../tools.mk\n \n all:\n-\t$(RUSTC) foo.rs -o $(TMPDIR)/.foo\n-\trm $(TMPDIR)/.foo\n-\t$(RUSTC) foo.rs -o $(TMPDIR)/.foo.bar\n-\trm $(TMPDIR)/.foo.bar\n-\t$(RUSTC) foo.rs -o $(TMPDIR)/+foo+bar\n-\trm $(TMPDIR)/$(call BIN,+foo+bar)\n+\t$(RUSTC) foo.rs -o $(TMPDIR)/.foo 2>&1 \\\n+\t\t| grep \"invalid character in crate name:\"\n+\t$(RUSTC) foo.rs -o $(TMPDIR)/.foo.bar 2>&1 \\\n+\t\t| grep \"invalid character in crate name:\"\n+\t$(RUSTC) foo.rs -o $(TMPDIR)/+foo+bar 2>&1 \\\n+\t\t| grep \"invalid character in crate name:\""}, {"sha": "61e269bf9e3544f8ccd9ff6fa4176680d1ce98e7", "filename": "src/test/run-pass/crateresolve1.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve1.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,19 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve1-1.rs\n-// aux-build:crateresolve1-2.rs\n-// aux-build:crateresolve1-3.rs\n-\n-extern crate crateresolve1 = \"crateresolve1#0.2\";\n-\n-pub fn main() {\n-    assert_eq!(crateresolve1::f(), 20);\n-}"}, {"sha": "5ed1f37c7b9e570872457c587e896bb5efd83e44", "filename": "src/test/run-pass/crateresolve2.rs", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve2.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,34 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve2-1.rs\n-// aux-build:crateresolve2-2.rs\n-// aux-build:crateresolve2-3.rs\n-\n-mod a {\n-    extern crate crateresolve2 = \"crateresolve2#0.1\";\n-    pub fn f() { assert!(crateresolve2::f() == 10); }\n-}\n-\n-mod b {\n-    extern crate crateresolve2 = \"crateresolve2#0.2\";\n-    pub fn f() { assert!(crateresolve2::f() == 20); }\n-}\n-\n-mod c {\n-    extern crate crateresolve2 = \"crateresolve2#0.3\";\n-    pub fn f() { assert!(crateresolve2::f() == 30); }\n-}\n-\n-pub fn main() {\n-    a::f();\n-    b::f();\n-    c::f();\n-}"}, {"sha": "cee9e6991c4564f08351b6c9e9bf76315c54832c", "filename": "src/test/run-pass/crateresolve3.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve3.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,30 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve3-1.rs\n-// aux-build:crateresolve3-2.rs\n-\n-// verify able to link with crates with same name but different versions\n-// as long as no name collision on invoked functions.\n-\n-mod a {\n-    extern crate crateresolve3 = \"crateresolve3#0.1\";\n-    pub fn f() { assert!(crateresolve3::f() == 10); }\n-}\n-\n-mod b {\n-    extern crate crateresolve3 = \"crateresolve3#0.2\";\n-    pub fn f() { assert!(crateresolve3::g() == 20); }\n-}\n-\n-pub fn main() {\n-    a::f();\n-    b::f();\n-}"}, {"sha": "c68961522269a5877c39fa07b47e8f9256bb96ca", "filename": "src/test/run-pass/crateresolve4.rs", "status": "removed", "additions": 0, "deletions": 29, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve4.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,29 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve4a-1.rs\n-// aux-build:crateresolve4a-2.rs\n-// aux-build:crateresolve4b-1.rs\n-// aux-build:crateresolve4b-2.rs\n-\n-pub mod a {\n-    extern crate crateresolve4b = \"crateresolve4b#0.1\";\n-    pub fn f() { assert!(crateresolve4b::f() == 20); }\n-}\n-\n-pub mod b {\n-    extern crate crateresolve4b = \"crateresolve4b#0.2\";\n-    pub fn f() { assert!(crateresolve4b::g() == 10); }\n-}\n-\n-pub fn main() {\n-    a::f();\n-    b::f();\n-}"}, {"sha": "3f74731090b6c08256db930b4c31c3da55b811b5", "filename": "src/test/run-pass/crateresolve5.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve5.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve5-1.rs\n-// aux-build:crateresolve5-2.rs\n-\n-extern crate cr5_1 = \"crateresolve5#0.1\";\n-extern crate cr5_2 = \"crateresolve5#0.2\";\n-\n-pub fn main() {\n-    // Structural types can be used between two versions of the same crate\n-    assert!(cr5_1::struct_nameval().name == cr5_2::struct_nameval().name);\n-    assert!(cr5_1::struct_nameval().val == cr5_2::struct_nameval().val);\n-    // Make sure these are actually two different crates\n-    assert!(cr5_1::f() == 10 && cr5_2::f() == 20);\n-}"}, {"sha": "f04e383cb3dc6d70660213917db6984e68dc1ef0", "filename": "src/test/run-pass/crateresolve8.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cc3c8bbfaf5af19caf3deb131a995a65ca4674f9/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrateresolve8.rs?ref=cc3c8bbfaf5af19caf3deb131a995a65ca4674f9", "patch": "@@ -1,20 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// aux-build:crateresolve8-1.rs\n-\n-#![crate_id=\"crateresolve8#0.1\"]\n-\n-extern crate crateresolve8 = \"crateresolve8#0.1\";\n-//extern crate crateresolve8(vers = \"0.1\");\n-\n-pub fn main() {\n-    assert_eq!(crateresolve8::f(), 20);\n-}"}, {"sha": "5dc25c85325c0f20780e82bf4784a91af87da3d1", "filename": "src/test/run-pass/extern-crosscrate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-crosscrate.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -10,7 +10,7 @@\n \n //aux-build:extern-crosscrate-source.rs\n \n-extern crate externcallback = \"externcallback#0.1\";\n+extern crate externcallback;\n \n fn fact(n: uint) -> uint {\n     unsafe {"}, {"sha": "dfed391640516d0cf6e6b90e4d65d5c0d685b2f7", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812637e683ef1092cdd62704ab53f0b4c5aabe19/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=812637e683ef1092cdd62704ab53f0b4c5aabe19", "patch": "@@ -15,13 +15,11 @@\n #![no_std]\n extern crate std;\n extern crate zed = \"std\";\n-extern crate bar = \"std#0.11.0\";\n \n \n use std::str;\n use x = zed::str;\n mod baz {\n-    pub use bar::str;\n     pub use x = std::str;\n }\n "}]}