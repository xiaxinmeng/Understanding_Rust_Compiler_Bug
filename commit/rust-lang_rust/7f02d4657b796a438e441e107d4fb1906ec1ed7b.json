{"sha": "7f02d4657b796a438e441e107d4fb1906ec1ed7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmMDJkNDY1N2I3OTZhNDM4ZTQ0MWUxMDdkNGZiMTkwNmVjMWVkN2I=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T00:00:34Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-03-14T00:01:46Z"}, "message": "vscode-postrefactor: minor config refactorings", "tree": {"sha": "6d955957f2bc85aaae4ed6e8e5ffb63014ec079f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d955957f2bc85aaae4ed6e8e5ffb63014ec079f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f02d4657b796a438e441e107d4fb1906ec1ed7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f02d4657b796a438e441e107d4fb1906ec1ed7b", "html_url": "https://github.com/rust-lang/rust/commit/7f02d4657b796a438e441e107d4fb1906ec1ed7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f02d4657b796a438e441e107d4fb1906ec1ed7b/comments", "author": null, "committer": null, "parents": [{"sha": "607d017229ce398bd7fef43aa5f4ab35914e6f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/607d017229ce398bd7fef43aa5f4ab35914e6f31", "html_url": "https://github.com/rust-lang/rust/commit/607d017229ce398bd7fef43aa5f4ab35914e6f31"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "93f72409ddfb9171151af66dd50327c3d9477e40", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7f02d4657b796a438e441e107d4fb1906ec1ed7b/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7f02d4657b796a438e441e107d4fb1906ec1ed7b/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=7f02d4657b796a438e441e107d4fb1906ec1ed7b", "patch": "@@ -35,6 +35,7 @@ export class Config {\n \n     private readonly rootSection = \"rust-analyzer\";\n     private readonly requiresReloadOpts = [\n+        \"serverPath\",\n         \"cargoFeatures\",\n         \"cargo-watch\",\n         \"highlighting.semanticTokens\",\n@@ -50,7 +51,7 @@ export class Config {\n             .extensions\n             .getExtension(this.extensionId)!\n             .packageJSON\n-            .version as string;\n+            .version as string; // n.n.YYYYMMDD[-nightly]\n \n         if (packageJsonVersion.endsWith(NIGHTLY_TAG)) return NIGHTLY_TAG;\n \n@@ -193,7 +194,7 @@ export class Config {\n     // We don't do runtime config validation here for simplicity. More on stackoverflow:\n     // https://stackoverflow.com/questions/60135780/what-is-the-best-way-to-type-check-the-configuration-for-vscode-extension\n \n-    get serverPath() { return this.cfg.get(\"serverPath\") as null | string; }\n+    private get serverPath() { return this.cfg.get(\"serverPath\") as null | string; }\n     get updatesChannel() { return this.cfg.get(\"updates.channel\") as UpdatesChannel; }\n     get askBeforeDownload() { return this.cfg.get(\"updates.askBeforeDownload\") as boolean; }\n     get highlightingSemanticTokens() { return this.cfg.get(\"highlighting.semanticTokens\") as boolean; }"}, {"sha": "2022d090d3e2a07daaa298be17e4b5e1fa7304d0", "filename": "editors/code/src/installation/extension.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7f02d4657b796a438e441e107d4fb1906ec1ed7b/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts", "raw_url": "https://github.com/rust-lang/rust/raw/7f02d4657b796a438e441e107d4fb1906ec1ed7b/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Fextension.ts?ref=7f02d4657b796a438e441e107d4fb1906ec1ed7b", "patch": "@@ -4,7 +4,7 @@ import { promises as fs } from 'fs';\n \n import { vscodeReinstallExtension, vscodeReloadWindow, log, vscodeInstallExtensionFromVsix, assert, notReentrant } from \"../util\";\n import { Config, UpdatesChannel } from \"../config\";\n-import { ArtifactReleaseInfo } from \"./interfaces\";\n+import { ArtifactReleaseInfo, ArtifactSource } from \"./interfaces\";\n import { downloadArtifactWithProgressUi } from \"./downloads\";\n import { fetchArtifactReleaseInfo } from \"./fetch_artifact_release_info\";\n \n@@ -16,7 +16,7 @@ const HEURISTIC_NIGHTLY_RELEASE_PERIOD_IN_HOURS = 25;\n  */\n export async function ensureProperExtensionVersion(config: Config): Promise<never | void> {\n     // User has built lsp server from sources, she should manage updates manually\n-    if (config.serverPath !== null) return;\n+    if (config.serverSource?.type === ArtifactSource.Type.ExplicitPath) return;\n \n     const currentUpdChannel = config.installedExtensionUpdateChannel;\n     const desiredUpdChannel = config.updatesChannel;"}]}