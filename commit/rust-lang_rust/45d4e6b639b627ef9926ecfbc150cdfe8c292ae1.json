{"sha": "45d4e6b639b627ef9926ecfbc150cdfe8c292ae1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1ZDRlNmI2MzliNjI3ZWY5OTI2ZWNmYmMxNTBjZGZlOGMyOTJhZTE=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-02-27T18:07:23Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-02-27T18:07:23Z"}, "message": "Add progress reporting", "tree": {"sha": "d5db8b6f6dec33186d40d9f70316a7b3cba3f0b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5db8b6f6dec33186d40d9f70316a7b3cba3f0b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1", "html_url": "https://github.com/rust-lang/rust/commit/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "669e11764430be3a098d6c8fe875d8efbb3547a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/669e11764430be3a098d6c8fe875d8efbb3547a3", "html_url": "https://github.com/rust-lang/rust/commit/669e11764430be3a098d6c8fe875d8efbb3547a3"}], "stats": {"total": 42, "additions": 25, "deletions": 17}, "files": [{"sha": "7ee5d82adf7701220b3a96f86ef921a5180e6fa7", "filename": "editors/code/package.json", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=45d4e6b639b627ef9926ecfbc150cdfe8c292ae1", "patch": "@@ -1164,7 +1164,14 @@\n                     \"command\": \"rust-analyzer.openCargoToml\",\n                     \"when\": \"inRustProject\"\n                 }\n+            ],\n+            \"editor/context\": [\n+                {\n+                    \"command\": \"rust-analyzer.peekTests\",\n+                    \"when\": \"inRustProject\",\n+                    \"group\": \"navigation@1000\"\n+                }\n             ]\n         }\n     }\n-}\n+}\n\\ No newline at end of file"}, {"sha": "d43db73072faeb70c39ae47b2e5380e03dc045b4", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/45d4e6b639b627ef9926ecfbc150cdfe8c292ae1/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=45d4e6b639b627ef9926ecfbc150cdfe8c292ae1", "patch": "@@ -566,24 +566,25 @@ export function peekTests(ctx: Ctx): Cmd {\n         const editor = ctx.activeRustEditor;\n         if (!editor || !client) return;\n \n-        const uri = editor.document.uri.toString();\n-        const position = client.code2ProtocolConverter.asPosition(\n-            editor.selection.active,\n-        );\n-        \n-        const tests = await client.sendRequest(ra.relatedTests, {\n-            textDocument: { uri: uri },\n-            position: position,\n-        });\n+        await vscode.window.withProgress({\n+            location: vscode.ProgressLocation.Notification,\n+            title: \"Looking for tests...\",\n+            cancellable: false,\n+        }, async (_progress, _token) => {\n+            const uri = editor.document.uri.toString();\n+            const position = client.code2ProtocolConverter.asPosition(\n+                editor.selection.active,\n+            );\n \n-        const locations: lc.Location[] = tests.map( it => {\n-            return {\n-                uri: it.runnable.location!.targetUri,\n-                range: it.runnable.location!.targetSelectionRange\n-            };\n-        });\n+            const tests = await client.sendRequest(ra.relatedTests, {\n+                textDocument: { uri: uri },\n+                position: position,\n+            });\n+            const locations: lc.Location[] = tests.map(it =>\n+                lc.Location.create(it.runnable.location!.targetUri, it.runnable.location!.targetSelectionRange));\n \n-        await showReferencesImpl(client, uri, position, locations);\n+            await showReferencesImpl(client, uri, position, locations);\n+        });\n     };\n }\n "}]}