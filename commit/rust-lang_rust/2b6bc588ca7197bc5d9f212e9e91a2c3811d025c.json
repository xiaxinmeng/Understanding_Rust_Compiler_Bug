{"sha": "2b6bc588ca7197bc5d9f212e9e91a2c3811d025c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNmJjNTg4Y2E3MTk3YmM1ZDlmMjEyZTllOTFhMmMzODExZDAyNWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-14T09:18:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-14T09:18:28Z"}, "message": "Auto merge of #44526 - leodasvacas:remove-deprecated-lang-items, r=arielb1\n\nRemove deprecated lang items\n\nThey have been deprecated for years and there is no trace left of them in the compiler. Also removed `require_owned_box` which is dead code and other small refactorings.", "tree": {"sha": "f6d8738e033b74f9f0583bc0a236102742914e66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f6d8738e033b74f9f0583bc0a236102742914e66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c", "html_url": "https://github.com/rust-lang/rust/commit/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84bbd14e3f392d63524482e2f0c69cd6fcd7f2c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/84bbd14e3f392d63524482e2f0c69cd6fcd7f2c5", "html_url": "https://github.com/rust-lang/rust/commit/84bbd14e3f392d63524482e2f0c69cd6fcd7f2c5"}, {"sha": "9218e444342d13088092edec90a4f889f98ecff2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9218e444342d13088092edec90a4f889f98ecff2", "html_url": "https://github.com/rust-lang/rust/commit/9218e444342d13088092edec90a4f889f98ecff2"}], "stats": {"total": 64, "additions": 15, "deletions": 49}, "files": [{"sha": "da9f9128cf4cef6b4bbe8b2be146f9b62f9e9244", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 15, "deletions": 40, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=2b6bc588ca7197bc5d9f212e9e91a2c3811d025c", "patch": "@@ -46,6 +46,14 @@ enum_from_u32! {\n     }\n }\n \n+impl LangItem {\n+    fn name(self) -> &'static str {\n+        match self {\n+            $( $variant => $name, )*\n+        }\n+    }\n+}\n+\n pub struct LanguageItems {\n     pub items: Vec<Option<DefId>>,\n     pub missing: Vec<LangItem>,\n@@ -65,42 +73,17 @@ impl LanguageItems {\n         &*self.items\n     }\n \n-    pub fn item_name(index: usize) -> &'static str {\n-        let item: Option<LangItem> = LangItem::from_u32(index as u32);\n-        match item {\n-            $( Some($variant) => $name, )*\n-            None => \"???\"\n-        }\n-    }\n-\n     pub fn require(&self, it: LangItem) -> Result<DefId, String> {\n-        match self.items[it as usize] {\n-            Some(id) => Ok(id),\n-            None => {\n-                Err(format!(\"requires `{}` lang_item\",\n-                            LanguageItems::item_name(it as usize)))\n-            }\n-        }\n-    }\n-\n-    pub fn require_owned_box(&self) -> Result<DefId, String> {\n-        self.require(OwnedBoxLangItem)\n+        self.items[it as usize].ok_or_else(|| format!(\"requires `{}` lang_item\", it.name()))\n     }\n \n     pub fn fn_trait_kind(&self, id: DefId) -> Option<ty::ClosureKind> {\n-        let def_id_kinds = [\n-            (self.fn_trait(), ty::ClosureKind::Fn),\n-            (self.fn_mut_trait(), ty::ClosureKind::FnMut),\n-            (self.fn_once_trait(), ty::ClosureKind::FnOnce),\n-            ];\n-\n-        for &(opt_def_id, kind) in &def_id_kinds {\n-            if Some(id) == opt_def_id {\n-                return Some(kind);\n-            }\n+        match Some(id) {\n+            x if x == self.fn_trait() => Some(ty::ClosureKind::Fn),\n+            x if x == self.fn_mut_trait() => Some(ty::ClosureKind::FnMut),\n+            x if x == self.fn_once_trait() => Some(ty::ClosureKind::FnOnce),\n+            _ => None\n         }\n-\n-        None\n     }\n \n     $(\n@@ -162,7 +145,7 @@ impl<'a, 'tcx> LanguageItemCollector<'a, 'tcx> {\n         // Check for duplicates.\n         match self.items.items[item_index] {\n             Some(original_def_id) if original_def_id != item_def_id => {\n-                let name = LanguageItems::item_name(item_index);\n+                let name = LangItem::from_u32(item_index as u32).unwrap().name();\n                 let mut err = match self.tcx.hir.span_if_local(item_def_id) {\n                     Some(span) => struct_span_err!(\n                         self.tcx.sess,\n@@ -327,14 +310,6 @@ language_item_table! {\n \n     PhantomDataItem,                 \"phantom_data\",            phantom_data;\n \n-    // Deprecated:\n-    CovariantTypeItem,               \"covariant_type\",          covariant_type;\n-    ContravariantTypeItem,           \"contravariant_type\",      contravariant_type;\n-    InvariantTypeItem,               \"invariant_type\",          invariant_type;\n-    CovariantLifetimeItem,           \"covariant_lifetime\",      covariant_lifetime;\n-    ContravariantLifetimeItem,       \"contravariant_lifetime\",  contravariant_lifetime;\n-    InvariantLifetimeItem,           \"invariant_lifetime\",      invariant_lifetime;\n-\n     NonZeroItem,                     \"non_zero\",                non_zero;\n \n     DebugTraitLangItem,              \"debug_trait\",             debug_trait;"}, {"sha": "ac3d575b64882de9516d892a213abd16fb46e293", "filename": "src/librustc_typeck/variance/terms.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b6bc588ca7197bc5d9f212e9e91a2c3811d025c/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Fterms.rs?ref=2b6bc588ca7197bc5d9f212e9e91a2c3811d025c", "patch": "@@ -98,15 +98,6 @@ fn lang_items(tcx: TyCtxt) -> Vec<(ast::NodeId, Vec<ty::Variance>)> {\n     let all = vec![\n         (lang_items.phantom_data(), vec![ty::Covariant]),\n         (lang_items.unsafe_cell_type(), vec![ty::Invariant]),\n-\n-        // Deprecated:\n-        (lang_items.covariant_type(), vec![ty::Covariant]),\n-        (lang_items.contravariant_type(), vec![ty::Contravariant]),\n-        (lang_items.invariant_type(), vec![ty::Invariant]),\n-        (lang_items.covariant_lifetime(), vec![ty::Covariant]),\n-        (lang_items.contravariant_lifetime(), vec![ty::Contravariant]),\n-        (lang_items.invariant_lifetime(), vec![ty::Invariant]),\n-\n         ];\n \n     all.into_iter() // iterating over (Option<DefId>, Variance)"}]}