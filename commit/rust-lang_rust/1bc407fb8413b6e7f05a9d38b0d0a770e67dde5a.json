{"sha": "1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYzQwN2ZiODQxM2I2ZTdmMDVhOWQzOGIwZDBhNzcwZTY3ZGRlNWE=", "commit": {"author": {"name": "Kevin Ballard", "email": "kevin@sb.org", "date": "2014-08-25T05:08:13Z"}, "committer": {"name": "Jakub Wieczorek", "email": "jakub@jakub.cc", "date": "2014-09-30T16:54:02Z"}, "message": "Add tests for `if let`", "tree": {"sha": "ed4a6303b646724f56ee4512c3c3485ac85a3818", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed4a6303b646724f56ee4512c3c3485ac85a3818"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a", "html_url": "https://github.com/rust-lang/rust/commit/1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a/comments", "author": {"login": "lilyball", "id": 714, "node_id": "MDQ6VXNlcjcxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/714?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lilyball", "html_url": "https://github.com/lilyball", "followers_url": "https://api.github.com/users/lilyball/followers", "following_url": "https://api.github.com/users/lilyball/following{/other_user}", "gists_url": "https://api.github.com/users/lilyball/gists{/gist_id}", "starred_url": "https://api.github.com/users/lilyball/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lilyball/subscriptions", "organizations_url": "https://api.github.com/users/lilyball/orgs", "repos_url": "https://api.github.com/users/lilyball/repos", "events_url": "https://api.github.com/users/lilyball/events{/privacy}", "received_events_url": "https://api.github.com/users/lilyball/received_events", "type": "User", "site_admin": false}, "committer": null, "parents": [{"sha": "0e6ff432dc83e5675163b1c29ce73dbc5e18ba24", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e6ff432dc83e5675163b1c29ce73dbc5e18ba24", "html_url": "https://github.com/rust-lang/rust/commit/0e6ff432dc83e5675163b1c29ce73dbc5e18ba24"}], "stats": {"total": 67, "additions": 67, "deletions": 0}, "files": [{"sha": "a6886bf9850e2da73ac7ac47ff55c6215b31e738", "filename": "src/test/run-pass/if-let.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a/src%2Ftest%2Frun-pass%2Fif-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a/src%2Ftest%2Frun-pass%2Fif-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-let.rs?ref=1bc407fb8413b6e7f05a9d38b0d0a770e67dde5a", "patch": "@@ -0,0 +1,67 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+    let x = Some(3i);\n+    if let Some(y) = x {\n+        assert_eq!(y, 3i);\n+    } else {\n+        fail!(\"if-let failed\");\n+    }\n+    let mut worked = false;\n+    if let Some(_) = x {\n+        worked = true;\n+    }\n+    assert!(worked);\n+    let clause: uint;\n+    if let None = Some(\"test\") {\n+        clause = 1;\n+    } else if 4u > 5 {\n+        clause = 2;\n+    } else if let Ok(()) = Err::<(),&'static str>(\"test\") {\n+        clause = 3;\n+    } else {\n+        clause = 4;\n+    }\n+    assert_eq!(clause, 4u);\n+\n+    if 3i > 4 {\n+        fail!(\"bad math\");\n+    } else if let 1 = 2i {\n+        fail!(\"bad pattern match\");\n+    }\n+\n+    enum Foo {\n+        One,\n+        Two(uint),\n+        Three(String, int)\n+    }\n+\n+    let foo = Three(\"three\".to_string(), 42i);\n+    if let One = foo {\n+        fail!(\"bad pattern match\");\n+    } else if let Two(_x) = foo {\n+        fail!(\"bad pattern match\");\n+    } else if let Three(s, _) = foo {\n+        assert_eq!(s.as_slice(), \"three\");\n+    } else {\n+        fail!(\"bad else\");\n+    }\n+\n+    if false {\n+        fail!(\"wat\");\n+    } else if let a@Two(_) = Two(42u) {\n+        if let Two(b) = a {\n+            assert_eq!(b, 42u);\n+        } else {\n+            fail!(\"fail in nested if-let\");\n+        }\n+    }\n+}"}]}