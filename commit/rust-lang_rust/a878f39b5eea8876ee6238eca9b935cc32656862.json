{"sha": "a878f39b5eea8876ee6238eca9b935cc32656862", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NzhmMzliNWVlYTg4NzZlZTYyMzhlY2E5YjkzNWNjMzI2NTY4NjI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-01T14:41:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-01T14:41:39Z"}, "message": "Merge #2963 #2967\n\n2963: Emacs fixes r=matklad a=flodiebold\n\n - use provided environment for runnables (finally set `RUST_BACKTRACE`)\r\n - implement `selectAndApplySourceChange` so auto-import works :slightly_smiling_face: \r\n\r\ncc @brotzeit \n\n2967: Disable optimizations for some build-time crates r=matklad a=lnicola\n\nThis speeds up a release build on my laptop from 4m 13s to 3m 33s. It's a bit disappointing, but we don't get perfect parallelism during the build. The non-RA dependencies finish building around 72s as opposed to 112s.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\nCo-authored-by: Florian Diebold <florian.diebold@freiheit.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>", "tree": {"sha": "bb24d795aa08120f16dcb4f4634f88f8f59fb8e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb24d795aa08120f16dcb4f4634f88f8f59fb8e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a878f39b5eea8876ee6238eca9b935cc32656862", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeNY4jCRBK7hj4Ov3rIwAAdHIIAKtARbbklvBzRVUhVjRn1lqC\niq62ywJXo8zjYOhL3p73sy+eMPL3QrvjlhcwbPSSRoV65OdssaCReTxwzDXa0j4r\nRhIEBAuLGZnEmfIFhJcx+BQkD9UmrHgqOcIGUxZVuLsx/SAK+osxwu8FJOJlSFvc\n5IOef3Io2bfDDaIZ0DInTJKam3og0xtGMlIApr0FbTR5ws4yrl1m/SUoIlA1YJNz\nJDFU+mQqFGxKJsL12TxorP9XE78uy3TiVIjdDVeKDEVuDs4XOI1xOol0WmtNSqae\nGpIfPpX58WTCuEp793oA1i90UH4xc6D4QSCWqJfxd+z0U9mmqwaFifRJj4aJ8Zs=\n=rj+u\n-----END PGP SIGNATURE-----\n", "payload": "tree bb24d795aa08120f16dcb4f4634f88f8f59fb8e2\nparent 8e0ad99832dec632621b09f626552a88506e43b0\nparent 2586cf9279c73b149f012228ce05b44410d66295\nparent f83154d4bfa3e82a9b8a2ed0c4904820be829c90\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1580568099 +0000\ncommitter GitHub <noreply@github.com> 1580568099 +0000\n\nMerge #2963 #2967\n\n2963: Emacs fixes r=matklad a=flodiebold\n\n - use provided environment for runnables (finally set `RUST_BACKTRACE`)\r\n - implement `selectAndApplySourceChange` so auto-import works :slightly_smiling_face: \r\n\r\ncc @brotzeit \n\n2967: Disable optimizations for some build-time crates r=matklad a=lnicola\n\nThis speeds up a release build on my laptop from 4m 13s to 3m 33s. It's a bit disappointing, but we don't get perfect parallelism during the build. The non-RA dependencies finish building around 72s as opposed to 112s.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\nCo-authored-by: Florian Diebold <florian.diebold@freiheit.com>\nCo-authored-by: Lauren\u021biu Nicola <lnicola@dend.ro>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a878f39b5eea8876ee6238eca9b935cc32656862", "html_url": "https://github.com/rust-lang/rust/commit/a878f39b5eea8876ee6238eca9b935cc32656862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a878f39b5eea8876ee6238eca9b935cc32656862/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e0ad99832dec632621b09f626552a88506e43b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e0ad99832dec632621b09f626552a88506e43b0", "html_url": "https://github.com/rust-lang/rust/commit/8e0ad99832dec632621b09f626552a88506e43b0"}, {"sha": "2586cf9279c73b149f012228ce05b44410d66295", "url": "https://api.github.com/repos/rust-lang/rust/commits/2586cf9279c73b149f012228ce05b44410d66295", "html_url": "https://github.com/rust-lang/rust/commit/2586cf9279c73b149f012228ce05b44410d66295"}, {"sha": "f83154d4bfa3e82a9b8a2ed0c4904820be829c90", "url": "https://api.github.com/repos/rust-lang/rust/commits/f83154d4bfa3e82a9b8a2ed0c4904820be829c90", "html_url": "https://github.com/rust-lang/rust/commit/f83154d4bfa3e82a9b8a2ed0c4904820be829c90"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "e5620b1b7dc2917f8145a062787dac796e241ae9", "filename": "Cargo.toml", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a878f39b5eea8876ee6238eca9b935cc32656862/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a878f39b5eea8876ee6238eca9b935cc32656862/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=a878f39b5eea8876ee6238eca9b935cc32656862", "patch": "@@ -10,5 +10,24 @@ debug = 0\n incremental = true\n debug = 0 # set this to 1 or 2 to get more useful backtraces in debugger\n \n+# ideally, we would use `build-override` here, but some crates are also\n+# needed at run-time and we end up compiling them twice\n+[profile.release.package.proc-macro2]\n+opt-level = 0\n+[profile.release.package.quote]\n+opt-level = 0\n+[profile.release.package.syn]\n+opt-level = 0\n+[profile.release.package.serde_derive]\n+opt-level = 0\n+[profile.release.package.chalk-derive]\n+opt-level = 0\n+[profile.release.package.chalk-macros]\n+opt-level = 0\n+[profile.release.package.salsa-macros]\n+opt-level = 0\n+[profile.release.package.xtask]\n+opt-level = 0\n+\n [patch.'crates-io']\n # rowan = { path = \"../rowan\" }"}, {"sha": "9b426fcae92741ce216160a0fe6619b0de054e59", "filename": "editors/emacs/rust-analyzer.el", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a878f39b5eea8876ee6238eca9b935cc32656862/editors%2Femacs%2Frust-analyzer.el", "raw_url": "https://github.com/rust-lang/rust/raw/a878f39b5eea8876ee6238eca9b935cc32656862/editors%2Femacs%2Frust-analyzer.el", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Femacs%2Frust-analyzer.el?ref=a878f39b5eea8876ee6238eca9b935cc32656862", "patch": "@@ -38,7 +38,9 @@\n \n (defconst rust-analyzer--action-handlers\n   '((\"rust-analyzer.applySourceChange\" .\n-     (lambda (p) (rust-analyzer--apply-source-change-command p)))))\n+     (lambda (p) (rust-analyzer--apply-source-change-command p)))\n+    (\"rust-analyzer.selectAndApplySourceChange\" .\n+     (lambda (p) (rust-analyzer--select-and-apply-source-change-command p)))))\n \n (defun rust-analyzer--uri-filename (text-document)\n   (lsp--uri-to-path (gethash \"uri\" text-document)))\n@@ -71,6 +73,12 @@\n   (let ((data (-> p (ht-get \"arguments\") (lsp-seq-first))))\n     (rust-analyzer--apply-source-change data)))\n \n+(defun rust-analyzer--select-and-apply-source-change-command (p)\n+  (let* ((options (-> p (ht-get \"arguments\") (lsp-seq-first)))\n+         (chosen-option (lsp--completing-read \"Select option:\" options\n+                                              (-lambda ((&hash \"label\")) label))))\n+    (rust-analyzer--apply-source-change chosen-option)))\n+\n (lsp-register-client\n  (make-lsp-client\n   :new-connection (lsp-stdio-connection (lambda () rust-analyzer-command))\n@@ -143,7 +151,8 @@\n \n (defun rust-analyzer-run (runnable)\n   (interactive (list (rust-analyzer--select-runnable)))\n-  (-let (((&hash \"env\" \"bin\" \"args\" \"label\") runnable))\n+  (-let* (((&hash \"env\" \"bin\" \"args\" \"label\") runnable)\n+          (compilation-environment (-map (-lambda ((k v)) (concat k \"=\" v)) (ht-items env))))\n     (compilation-start\n      (string-join (append (list bin) args '()) \" \")\n      ;; cargo-process-mode is nice, but try to work without it..."}]}