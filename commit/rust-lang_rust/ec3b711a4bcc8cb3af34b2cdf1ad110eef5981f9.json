{"sha": "ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "node_id": "C_kwDOAAsO6NoAKGVjM2I3MTFhNGJjYzhjYjNhZjM0YjJjZGYxYWQxMTBlZWY1OTgxZjk", "commit": {"author": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-01-27T22:22:33Z"}, "committer": {"name": "5225225", "email": "5225225@mailbox.org", "date": "2022-01-31T17:34:10Z"}, "message": "Write UI tests, tweak message", "tree": {"sha": "e570fe373c42d6e3f86bfea8ec3548357faa04f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e570fe373c42d6e3f86bfea8ec3548357faa04f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "html_url": "https://github.com/rust-lang/rust/commit/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/comments", "author": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "committer": {"login": "5225225", "id": 8584210, "node_id": "MDQ6VXNlcjg1ODQyMTA=", "avatar_url": "https://avatars.githubusercontent.com/u/8584210?v=4", "gravatar_id": "", "url": "https://api.github.com/users/5225225", "html_url": "https://github.com/5225225", "followers_url": "https://api.github.com/users/5225225/followers", "following_url": "https://api.github.com/users/5225225/following{/other_user}", "gists_url": "https://api.github.com/users/5225225/gists{/gist_id}", "starred_url": "https://api.github.com/users/5225225/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/5225225/subscriptions", "organizations_url": "https://api.github.com/users/5225225/orgs", "repos_url": "https://api.github.com/users/5225225/repos", "events_url": "https://api.github.com/users/5225225/events{/privacy}", "received_events_url": "https://api.github.com/users/5225225/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f2477810271d0e6e0e7025f0629a0213db90795", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f2477810271d0e6e0e7025f0629a0213db90795", "html_url": "https://github.com/rust-lang/rust/commit/7f2477810271d0e6e0e7025f0629a0213db90795"}], "stats": {"total": 257, "additions": 254, "deletions": 3}, "files": [{"sha": "0115d498a7fb889b4415d8aa1e4165d917c7bf10", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "patch": "@@ -1738,11 +1738,10 @@ impl<'a> Parser<'a> {\n                         .help(\"valid widths are 8, 16, 32, 64 and 128\")\n                         .emit();\n                 } else if let Some(fixed) = fix_base_capitalisation(suf) {\n-                    let msg = format!(\"invalid suffix `{}` for number literal\", suf);\n+                    let msg = \"invalid base prefix for number literal\";\n \n                     self.struct_span_err(span, &msg)\n-                        .span_label(span, format!(\"invalid suffix `{}`\", suf))\n-                        .help(\"base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\")\n+                        .note(\"base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\")\n                         .span_suggestion(\n                             span,\n                             \"try making the prefix lowercase\","}, {"sha": "1b1c837ec5040ef1ac3d2ddfe6d644b4a01b8f0c", "filename": "src/test/ui/numeric/uppercase-base-prefix.fixed", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.fixed?ref=ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "patch": "@@ -0,0 +1,77 @@\n+// run-rustfix\n+// Checks that integers with an uppercase base prefix (0B, 0X, 0O) have a nice error\n+#![allow(unused_variables)]\n+\n+fn main() {\n+    let a = 0xABCDEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEF\n+\n+    let b = 0o755;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755\n+\n+    let c = 0b10101010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010\n+\n+    let d = 0xABC_DEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF\n+\n+    let e = 0o7_55;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55\n+\n+    let f = 0b1010_1010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010\n+\n+    let g = 0xABC_DEF_u64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF_u64\n+\n+    let h = 0o7_55_u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55_u32\n+\n+    let i = 0b1010_1010_u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010_u8\n+    //\n+    let j = 0xABCDEFu64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEFu64\n+\n+    let k = 0o755u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755u32\n+\n+    let l = 0b10101010u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010u8\n+}"}, {"sha": "233d553da6585b017c730eb21c359b20fbb8da15", "filename": "src/test/ui/numeric/uppercase-base-prefix.rs", "status": "added", "additions": 77, "deletions": 0, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.rs?ref=ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "patch": "@@ -0,0 +1,77 @@\n+// run-rustfix\n+// Checks that integers with an uppercase base prefix (0B, 0X, 0O) have a nice error\n+#![allow(unused_variables)]\n+\n+fn main() {\n+    let a = 0XABCDEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEF\n+\n+    let b = 0O755;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755\n+\n+    let c = 0B10101010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010\n+\n+    let d = 0XABC_DEF;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF\n+\n+    let e = 0O7_55;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55\n+\n+    let f = 0B1010_1010;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010\n+\n+    let g = 0XABC_DEF_u64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABC_DEF_u64\n+\n+    let h = 0O7_55_u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o7_55_u32\n+\n+    let i = 0B1010_1010_u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b1010_1010_u8\n+    //\n+    let j = 0XABCDEFu64;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0xABCDEFu64\n+\n+    let k = 0O755u32;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0o755u32\n+\n+    let l = 0B10101010u8;\n+    //~^ ERROR invalid base prefix for number literal\n+    //~| NOTE base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+    //~| HELP try making the prefix lowercase\n+    //~| SUGGESTION 0b10101010u8\n+}"}, {"sha": "4ba8d5224b3e6f107cfc197dcdd88fd817772781", "filename": "src/test/ui/numeric/uppercase-base-prefix.stderr", "status": "added", "additions": 98, "deletions": 0, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fuppercase-base-prefix.stderr?ref=ec3b711a4bcc8cb3af34b2cdf1ad110eef5981f9", "patch": "@@ -0,0 +1,98 @@\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:6:13\n+   |\n+LL |     let a = 0XABCDEF;\n+   |             ^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABCDEF`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:12:13\n+   |\n+LL |     let b = 0O755;\n+   |             ^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o755`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:18:13\n+   |\n+LL |     let c = 0B10101010;\n+   |             ^^^^^^^^^^ help: try making the prefix lowercase: `0b10101010`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:24:13\n+   |\n+LL |     let d = 0XABC_DEF;\n+   |             ^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABC_DEF`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:30:13\n+   |\n+LL |     let e = 0O7_55;\n+   |             ^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o7_55`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:36:13\n+   |\n+LL |     let f = 0B1010_1010;\n+   |             ^^^^^^^^^^^ help: try making the prefix lowercase: `0b1010_1010`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:42:13\n+   |\n+LL |     let g = 0XABC_DEF_u64;\n+   |             ^^^^^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABC_DEF_u64`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:48:13\n+   |\n+LL |     let h = 0O7_55_u32;\n+   |             ^^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o7_55_u32`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:54:13\n+   |\n+LL |     let i = 0B1010_1010_u8;\n+   |             ^^^^^^^^^^^^^^ help: try making the prefix lowercase: `0b1010_1010_u8`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:60:13\n+   |\n+LL |     let j = 0XABCDEFu64;\n+   |             ^^^^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0xABCDEFu64`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:66:13\n+   |\n+LL |     let k = 0O755u32;\n+   |             ^^^^^^^^ help: try making the prefix lowercase (notice the capitalization): `0o755u32`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: invalid base prefix for number literal\n+  --> $DIR/uppercase-base-prefix.rs:72:13\n+   |\n+LL |     let l = 0B10101010u8;\n+   |             ^^^^^^^^^^^^ help: try making the prefix lowercase: `0b10101010u8`\n+   |\n+   = note: base prefixes (`0xff`, `0b1010`, `0o755`) are lowercase\n+\n+error: aborting due to 12 previous errors\n+"}]}