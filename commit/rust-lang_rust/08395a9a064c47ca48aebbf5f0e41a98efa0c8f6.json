{"sha": "08395a9a064c47ca48aebbf5f0e41a98efa0c8f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4Mzk1YTlhMDY0YzQ3Y2E0OGFlYmJmNWYwZTQxYTk4ZWZhMGM4ZjY=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-05T11:35:14Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-07-05T11:35:14Z"}, "message": "Rollup merge of #26785 - tshepang:inference, r=steveklabnik\n\n\u2026at and integer types", "tree": {"sha": "01dbe002b31ddaa3bf32dd18c456a4aeb38e459a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01dbe002b31ddaa3bf32dd18c456a4aeb38e459a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08395a9a064c47ca48aebbf5f0e41a98efa0c8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08395a9a064c47ca48aebbf5f0e41a98efa0c8f6", "html_url": "https://github.com/rust-lang/rust/commit/08395a9a064c47ca48aebbf5f0e41a98efa0c8f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08395a9a064c47ca48aebbf5f0e41a98efa0c8f6/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9f580936d81ed527115ae86375f69bb77723b1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9f580936d81ed527115ae86375f69bb77723b1c", "html_url": "https://github.com/rust-lang/rust/commit/f9f580936d81ed527115ae86375f69bb77723b1c"}, {"sha": "4fc28c90f888d85b42a3015b6766ee6f3fb305f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc28c90f888d85b42a3015b6766ee6f3fb305f5", "html_url": "https://github.com/rust-lang/rust/commit/4fc28c90f888d85b42a3015b6766ee6f3fb305f5"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "6fc46c764f590305281d40ddefbf43e1e87309dd", "filename": "src/doc/reference.md", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/08395a9a064c47ca48aebbf5f0e41a98efa0c8f6/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/08395a9a064c47ca48aebbf5f0e41a98efa0c8f6/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=08395a9a064c47ca48aebbf5f0e41a98efa0c8f6", "patch": "@@ -338,12 +338,16 @@ type of the literal. The integer suffix must be the name of one of the\n integral types: `u8`, `i8`, `u16`, `i16`, `u32`, `i32`, `u64`, `i64`,\n `isize`, or `usize`.\n \n-The type of an _unsuffixed_ integer literal is determined by type inference.\n-If an integer type can be _uniquely_ determined from the surrounding program\n-context, the unsuffixed integer literal has that type. If the program context\n-underconstrains the type, it defaults to the signed 32-bit integer `i32`; if\n-the program context overconstrains the type, it is considered a static type\n-error.\n+The type of an _unsuffixed_ integer literal is determined by type inference:\n+\n+* If an integer type can be _uniquely_ determined from the surrounding\n+  program context, the unsuffixed integer literal has that type.\n+\n+* If the program context underconstrains the type, it defaults to the\n+  signed 32-bit integer `i32`.\n+\n+* If the program context overconstrains the type, it is considered a\n+  static type error.\n \n Examples of integer literals of various forms:\n \n@@ -371,12 +375,17 @@ The suffix forcibly sets the type of the literal. There are two valid\n _floating-point suffixes_, `f32` and `f64` (the 32-bit and 64-bit floating point\n types), which explicitly determine the type of the literal.\n \n-The type of an _unsuffixed_ floating-point literal is determined by type\n-inference. If a floating-point type can be _uniquely_ determined from the\n-surrounding program context, the unsuffixed floating-point literal has that type.\n-If the program context underconstrains the type, it defaults to double-precision `f64`;\n-if the program context overconstrains the type, it is considered a static type\n-error.\n+The type of an _unsuffixed_ floating-point literal is determined by\n+type inference:\n+\n+* If a floating-point type can be _uniquely_ determined from the\n+  surrounding program context, the unsuffixed floating-point literal\n+  has that type.\n+\n+* If the program context underconstrains the type, it defaults to `f64`.\n+\n+* If the program context overconstrains the type, it is considered a\n+  static type error.\n \n Examples of floating-point literals of various forms:\n "}]}