{"sha": "838944b3870deefce57950d1604de9307d61d828", "node_id": "C_kwDOAAsO6NoAKDgzODk0NGIzODcwZGVlZmNlNTc5NTBkMTYwNGRlOTMwN2Q2MWQ4Mjg", "commit": {"author": {"name": "Eduardo Canellas", "email": "eduardocanellas98@gmail.com", "date": "2022-01-04T18:30:30Z"}, "committer": {"name": "Eduardo Canellas", "email": "eduardocanellas98@gmail.com", "date": "2022-01-04T18:30:30Z"}, "message": "improve logic for trailing comma addition", "tree": {"sha": "acc0ccd30fd50b605e89fd79428e86eb7c7cebe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acc0ccd30fd50b605e89fd79428e86eb7c7cebe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/838944b3870deefce57950d1604de9307d61d828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/838944b3870deefce57950d1604de9307d61d828", "html_url": "https://github.com/rust-lang/rust/commit/838944b3870deefce57950d1604de9307d61d828", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/838944b3870deefce57950d1604de9307d61d828/comments", "author": {"login": "dbofmmbt", "id": 34381457, "node_id": "MDQ6VXNlcjM0MzgxNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34381457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbofmmbt", "html_url": "https://github.com/dbofmmbt", "followers_url": "https://api.github.com/users/dbofmmbt/followers", "following_url": "https://api.github.com/users/dbofmmbt/following{/other_user}", "gists_url": "https://api.github.com/users/dbofmmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbofmmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbofmmbt/subscriptions", "organizations_url": "https://api.github.com/users/dbofmmbt/orgs", "repos_url": "https://api.github.com/users/dbofmmbt/repos", "events_url": "https://api.github.com/users/dbofmmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/dbofmmbt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dbofmmbt", "id": 34381457, "node_id": "MDQ6VXNlcjM0MzgxNDU3", "avatar_url": "https://avatars.githubusercontent.com/u/34381457?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dbofmmbt", "html_url": "https://github.com/dbofmmbt", "followers_url": "https://api.github.com/users/dbofmmbt/followers", "following_url": "https://api.github.com/users/dbofmmbt/following{/other_user}", "gists_url": "https://api.github.com/users/dbofmmbt/gists{/gist_id}", "starred_url": "https://api.github.com/users/dbofmmbt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dbofmmbt/subscriptions", "organizations_url": "https://api.github.com/users/dbofmmbt/orgs", "repos_url": "https://api.github.com/users/dbofmmbt/repos", "events_url": "https://api.github.com/users/dbofmmbt/events{/privacy}", "received_events_url": "https://api.github.com/users/dbofmmbt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9612666f82718380048895f07b35bd9f3c95a04", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9612666f82718380048895f07b35bd9f3c95a04", "html_url": "https://github.com/rust-lang/rust/commit/a9612666f82718380048895f07b35bd9f3c95a04"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "2fb5336f8742bc9ae931e1878c178846dd5261b5", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/838944b3870deefce57950d1604de9307d61d828/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/838944b3870deefce57950d1604de9307d61d828/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=838944b3870deefce57950d1604de9307d61d828", "patch": "@@ -98,8 +98,18 @@ fn should_add_self_completions(ctx: &CompletionContext, param_list: ast::ParamLi\n }\n \n fn surround_with_commas(ctx: &CompletionContext, param: String) -> Option<String> {\n-    let end_of_param_list = matches!(ctx.token.next_token()?.kind(), SyntaxKind::R_PAREN);\n-    let trailing = if end_of_param_list { \"\" } else { \",\" };\n+    let next_token = {\n+        let t = ctx.token.next_token()?;\n+        if !matches!(t.kind(), SyntaxKind::WHITESPACE) {\n+            t\n+        } else {\n+            t.next_token()?\n+        }\n+    };\n+\n+    let trailing_comma_missing = matches!(next_token.kind(), SyntaxKind::IDENT);\n+    let trailing = if trailing_comma_missing { \",\" } else { \"\" };\n+    dbg!(&ctx.token.next_token()?);\n \n     let previous_token = if matches!(ctx.token.kind(), SyntaxKind::IDENT | SyntaxKind::WHITESPACE) {\n         ctx.previous_token.as_ref()?"}]}