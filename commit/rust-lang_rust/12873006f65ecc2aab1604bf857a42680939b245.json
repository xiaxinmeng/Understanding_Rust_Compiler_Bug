{"sha": "12873006f65ecc2aab1604bf857a42680939b245", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyODczMDA2ZjY1ZWNjMmFhYjE2MDRiZjg1N2E0MjY4MDkzOWIyNDU=", "commit": {"author": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-10-10T18:25:09Z"}, "committer": {"name": "Havvy", "email": "ryan.havvy@gmail.com", "date": "2017-10-17T14:22:08Z"}, "message": "List of all lang items in unstable book.", "tree": {"sha": "f434cb6938ccd360047f8c85294ac424b859f867", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f434cb6938ccd360047f8c85294ac424b859f867"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12873006f65ecc2aab1604bf857a42680939b245", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12873006f65ecc2aab1604bf857a42680939b245", "html_url": "https://github.com/rust-lang/rust/commit/12873006f65ecc2aab1604bf857a42680939b245", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12873006f65ecc2aab1604bf857a42680939b245/comments", "author": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Havvy", "id": 731722, "node_id": "MDQ6VXNlcjczMTcyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/731722?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Havvy", "html_url": "https://github.com/Havvy", "followers_url": "https://api.github.com/users/Havvy/followers", "following_url": "https://api.github.com/users/Havvy/following{/other_user}", "gists_url": "https://api.github.com/users/Havvy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Havvy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Havvy/subscriptions", "organizations_url": "https://api.github.com/users/Havvy/orgs", "repos_url": "https://api.github.com/users/Havvy/repos", "events_url": "https://api.github.com/users/Havvy/events{/privacy}", "received_events_url": "https://api.github.com/users/Havvy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4af9309d060b76ddaeb91c52d9f0e05dc97264c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4af9309d060b76ddaeb91c52d9f0e05dc97264c", "html_url": "https://github.com/rust-lang/rust/commit/a4af9309d060b76ddaeb91c52d9f0e05dc97264c"}], "stats": {"total": 92, "additions": 92, "deletions": 0}, "files": [{"sha": "0137a052a62d868f02fcfded212f49fc0e634ba9", "filename": "src/doc/unstable-book/src/language-features/lang-items.md", "status": "modified", "additions": 92, "deletions": 0, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/12873006f65ecc2aab1604bf857a42680939b245/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/12873006f65ecc2aab1604bf857a42680939b245/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md?ref=12873006f65ecc2aab1604bf857a42680939b245", "patch": "@@ -227,3 +227,95 @@ A third function, `rust_eh_unwind_resume`, is also needed if the `custom_unwind_\n flag is set in the options of the compilation target. It allows customizing the\n process of resuming unwind at the end of the landing pads. The language item's name\n is `eh_unwind_resume`.\n+\n+## List of all language items\n+\n+This is a list of all language items in Rust along with where they are located in\n+the source code.\n+\n+- Primitives\n+  - `i8`: `libcore/num/mod.rs`\n+  - `i16`: `libcore/num/mod.rs`\n+  - `i32`: `libcore/num/mod.rs`\n+  - `i64`: `libcore/num/mod.rs`\n+  - `i128`: `libcore/num/mod.rs`\n+  - `isize`: `libcore/num/mod.rs`\n+  - `u8`: `libcore/num/mod.rs`\n+  - `u16`: `libcore/num/mod.rs`\n+  - `u32`: `libcore/num/mod.rs`\n+  - `u64`: `libcore/num/mod.rs`\n+  - `u128`: `libcore/num/mod.rs`\n+  - `usize`: `libcore/num/mod.rs`\n+  - `f32`: `libstd/f32.rs`\n+  - `f64`: `libstd/f64.rs`\n+  - `char`: `libstd_unicode/char.rs`\n+  - `slice`: `liballoc/slice.rs`\n+  - `str`: `liballoc/str.rs`\n+  - `const_ptr`: `libcore/ptr.rs`\n+  - `mut_ptr`: `libcore/ptr.rs`\n+  - `unsafe_cell`: `libcore/cell.rs`\n+- Runtime\n+  - `start`: `libstd/rt.rs`\n+  - `eh_personality`: `libpanic_unwind/emcc.rs` (EMCC)\n+  - `eh_personality`: `libpanic_unwind/seh64_gnu.rs` (SEH64 GNU)\n+  - `eh_personality`: `libpanic_unwind/seh.rs` (SEH)\n+  - `eh_unwind_resume`: `libpanic_unwind/seh64_gnu.rs` (SEH64 GNU)\n+  - `eh_unwind_resume`: `libpanic_unwind/gcc.rs` (GCC)\n+  - `msvc_try_filter`: `libpanic_unwind/seh.rs` (SEH)\n+  - `panic`: `libcore/panicking.rs`\n+  - `panic_bounds_check`: `libcore/panicking.rs`\n+  - `panic_fmt`: `libcore/panicking.rs`\n+  - `panic_fmt`: `libstd/panicking.rs`\n+- Allocations\n+  - `owned_box`: `liballoc/boxed.rs`\n+  - `exchange_malloc`: `liballoc/heap.rs`\n+  - `box_free`: `liballoc/heap.rs`\n+- Operands\n+  - `not`: `libcore/ops/bit.rs`\n+  - `bitand`: `libcore/ops/bit.rs`\n+  - `bitor`: `libcore/ops/bit.rs`\n+  - `bitxor`: `libcore/ops/bit.rs`\n+  - `shl`: `libcore/ops/bit.rs`\n+  - `shr`: `libcore/ops/bit.rs`\n+  - `bitand_assign`: `libcore/ops/bit.rs`\n+  - `bitor_assign`: `libcore/ops/bit.rs`\n+  - `bitxor_assign`: `libcore/ops/bit.rs`\n+  - `shl_assign`: `libcore/ops/bit.rs`\n+  - `shr_assign`: `libcore/ops/bit.rs`\n+  - `deref`: `libcore/ops/deref.rs`\n+  - `deref_mut`: `libcore/ops/deref.rs`\n+  - `index`: `libcore/ops/index.rs`\n+  - `index_mut`: `libcore/ops/index.rs`\n+  - `add`: `libcore/ops/arith.rs`\n+  - `sub`: `libcore/ops/arith.rs`\n+  - `mul`: `libcore/ops/arith.rs`\n+  - `div`: `libcore/ops/arith.rs`\n+  - `rem`: `libcore/ops/arith.rs`\n+  - `neg`: `libcore/ops/arith.rs`\n+  - `add_assign`: `libcore/ops/arith.rs`\n+  - `sub_assign`: `libcore/ops/arith.rs`\n+  - `mul_assign`: `libcore/ops/arith.rs`\n+  - `div_assign`: `libcore/ops/arith.rs`\n+  - `rem_assign`: `libcore/ops/arith.rs`\n+  - `eq`: `libcore/cmp.rs`\n+  - `ord`: `libcore/cmp.rs`\n+- Functions\n+  - `fn`: `libcore/ops/function.rs`\n+  - `fn_mut`: `libcore/ops/function.rs`\n+  - `fn_once`: `libcore/ops/function.rs`\n+  - `generator_state`: `libcore/ops/generator.rs`\n+  - `generator`: `libcore/ops/generator.rs`\n+- Other\n+  - `coerce_unsized`: `libcore/ops/unsize.rs`\n+  - `drop`: `libcore/ops/drop.rs`\n+  - `drop_in_place`: `libcore/ptr.rs`\n+  - `clone`: `libcore/clone.rs`\n+  - `copy`: `libcore/marker.rs`\n+  - `send`: `libcore/marker.rs`\n+  - `sized`: `libcore/marker.rs`\n+  - `unsize`: `libcore/marker.rs`\n+  - `sync`: `libcore/marker.rs`\n+  - `phantom_data`: `libcore/marker.rs`\n+  - `freeze`: `libcore/marker.rs`\n+  - `debug_trait`: `libcore/fmt/mod.rs`\n+  - `non_zero`: `libcore/nonzero.rs`\n\\ No newline at end of file"}]}