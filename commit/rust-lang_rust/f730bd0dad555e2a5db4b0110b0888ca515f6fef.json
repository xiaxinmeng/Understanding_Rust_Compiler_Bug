{"sha": "f730bd0dad555e2a5db4b0110b0888ca515f6fef", "node_id": "C_kwDOAAsO6NoAKGY3MzBiZDBkYWQ1NTVlMmE1ZGI0YjAxMTBiMDg4OGNhNTE1ZjZmZWY", "commit": {"author": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2021-12-17T01:15:35Z"}, "committer": {"name": "Eric Holk", "email": "ericholk@microsoft.com", "date": "2022-01-18T22:25:29Z"}, "message": "Track changed bitsets in CFG propagation\n\nThis reduces the amount of work done, especially in later iterations,\nby only processing nodes whose predecessors changed in the previous\niteration, or earlier in the current iteration. This also has the side\neffect of completely ignoring all unreachable nodes.", "tree": {"sha": "c691296b7c9bb7ad3617671a79362994010c30c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c691296b7c9bb7ad3617671a79362994010c30c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f730bd0dad555e2a5db4b0110b0888ca515f6fef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f730bd0dad555e2a5db4b0110b0888ca515f6fef", "html_url": "https://github.com/rust-lang/rust/commit/f730bd0dad555e2a5db4b0110b0888ca515f6fef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f730bd0dad555e2a5db4b0110b0888ca515f6fef/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d11b336f3ee9d65ba82b86d73cf9bc9fb174269", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d11b336f3ee9d65ba82b86d73cf9bc9fb174269", "html_url": "https://github.com/rust-lang/rust/commit/7d11b336f3ee9d65ba82b86d73cf9bc9fb174269"}], "stats": {"total": 29, "additions": 26, "deletions": 3}, "files": [{"sha": "139d17d2e1ca186d72705afb98d310597a1c09f5", "filename": "compiler/rustc_typeck/src/check/generator_interior/drop_ranges/cfg_propagate.rs", "status": "modified", "additions": 26, "deletions": 3, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f730bd0dad555e2a5db4b0110b0888ca515f6fef/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_propagate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f730bd0dad555e2a5db4b0110b0888ca515f6fef/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_propagate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior%2Fdrop_ranges%2Fcfg_propagate.rs?ref=f730bd0dad555e2a5db4b0110b0888ca515f6fef", "patch": "@@ -10,10 +10,28 @@ impl DropRangesBuilder {\n         trace!(\"predecessors: {:#?}\", preds.iter_enumerated().collect::<BTreeMap<_, _>>());\n \n         let mut new_state = BitSet::new_empty(self.num_values());\n+        let mut changed_nodes = BitSet::new_empty(self.nodes.len());\n+        let mut unchanged_mask = BitSet::new_filled(self.nodes.len());\n+        changed_nodes.insert(0u32.into());\n \n         let mut propagate = || {\n             let mut changed = false;\n+            unchanged_mask.insert_all();\n             for id in self.nodes.indices() {\n+                trace!(\"processing {:?}, changed_nodes: {:?}\", id, changed_nodes);\n+                // Check if any predecessor has changed, and if not then short-circuit.\n+                //\n+                // We handle the start node specially, since it doesn't have any predecessors,\n+                // but we need to start somewhere.\n+                if match id.index() {\n+                    0 => !changed_nodes.contains(id),\n+                    _ => !preds[id].iter().any(|pred| changed_nodes.contains(*pred)),\n+                } {\n+                    trace!(\"short-circuiting because none of {:?} have changed\", preds[id]);\n+                    unchanged_mask.remove(id);\n+                    continue;\n+                }\n+\n                 if id.index() == 0 {\n                     new_state.clear();\n                 } else {\n@@ -23,8 +41,7 @@ impl DropRangesBuilder {\n                 };\n \n                 for pred in &preds[id] {\n-                    let state = &self.nodes[*pred].drop_state;\n-                    new_state.intersect(state);\n+                    new_state.intersect(&self.nodes[*pred].drop_state);\n                 }\n \n                 for drop in &self.nodes[id].drops {\n@@ -35,9 +52,15 @@ impl DropRangesBuilder {\n                     new_state.remove(*reinit);\n                 }\n \n-                changed |= self.nodes[id].drop_state.intersect(&new_state);\n+                if self.nodes[id].drop_state.intersect(&new_state) {\n+                    changed_nodes.insert(id);\n+                    changed = true;\n+                } else {\n+                    unchanged_mask.remove(id);\n+                }\n             }\n \n+            changed_nodes.intersect(&unchanged_mask);\n             changed\n         };\n "}]}