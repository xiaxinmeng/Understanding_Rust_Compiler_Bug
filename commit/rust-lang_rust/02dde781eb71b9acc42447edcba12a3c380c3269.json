{"sha": "02dde781eb71b9acc42447edcba12a3c380c3269", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZGRlNzgxZWI3MWI5YWNjNDI0NDdlZGNiYTEyYTNjMzgwYzMyNjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-30T20:35:12Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-31T00:48:05Z"}, "message": "rustc: Don't typestate fns that don't have constrained function calls", "tree": {"sha": "c3327ebbfe5993696ab0ac50e8b1fbfa17a834ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3327ebbfe5993696ab0ac50e8b1fbfa17a834ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02dde781eb71b9acc42447edcba12a3c380c3269", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02dde781eb71b9acc42447edcba12a3c380c3269", "html_url": "https://github.com/rust-lang/rust/commit/02dde781eb71b9acc42447edcba12a3c380c3269", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02dde781eb71b9acc42447edcba12a3c380c3269/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b4cf00552ba2632ff35dfa90f8dab88137feb31", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b4cf00552ba2632ff35dfa90f8dab88137feb31", "html_url": "https://github.com/rust-lang/rust/commit/6b4cf00552ba2632ff35dfa90f8dab88137feb31"}], "stats": {"total": 68, "additions": 52, "deletions": 16}, "files": [{"sha": "2d998de2b00e368c76710432ed3d2bd1db47806b", "filename": "src/rustc/middle/tstate/ck.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/02dde781eb71b9acc42447edcba12a3c380c3269/src%2Frustc%2Fmiddle%2Ftstate%2Fck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02dde781eb71b9acc42447edcba12a3c380c3269/src%2Frustc%2Fmiddle%2Ftstate%2Fck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fck.rs?ref=02dde781eb71b9acc42447edcba12a3c380c3269", "patch": "@@ -115,14 +115,18 @@ fn check_fn_states(fcx: fn_ctxt,\n fn fn_states(fk: visit::fn_kind, f_decl: ast::fn_decl, f_body: ast::blk,\n              sp: span, id: node_id,\n              ccx: crate_ctxt, v: visit::vt<crate_ctxt>) {\n-    visit::visit_fn(fk, f_decl, f_body, sp, id, ccx, v);\n-    /* Look up the var-to-bit-num map for this function */\n-\n-    assert (ccx.fm.contains_key(id));\n-    let f_info = ccx.fm.get(id);\n-    let name = visit::name_of_fn(fk);\n-    let fcx = {enclosing: f_info, id: id, name: name, ccx: ccx};\n-    check_fn_states(fcx, fk, f_decl, f_body, sp, id)\n+\n+    // We may not care about typestate for this function if it contains\n+    // no constrained calls\n+    if ccx.fm.contains_key(id) {\n+        visit::visit_fn(fk, f_decl, f_body, sp, id, ccx, v);\n+        /* Look up the var-to-bit-num map for this function */\n+\n+        let f_info = ccx.fm.get(id);\n+        let name = visit::name_of_fn(fk);\n+        let fcx = {enclosing: f_info, id: id, name: name, ccx: ccx};\n+        check_fn_states(fcx, fk, f_decl, f_body, sp, id)\n+    }\n }\n \n fn check_crate(cx: ty::ctxt, crate: @crate) {"}, {"sha": "c453d6106031e5001eee541c3634f5c2f6d799c0", "filename": "src/rustc/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 40, "deletions": 8, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/02dde781eb71b9acc42447edcba12a3c380c3269/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02dde781eb71b9acc42447edcba12a3c380c3269/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=02dde781eb71b9acc42447edcba12a3c380c3269", "patch": "@@ -618,17 +618,49 @@ fn find_pre_post_fn(fcx: fn_ctxt, body: blk) {\n     }\n }\n \n+fn contains_constrained_calls(tcx: ty::ctxt, body: blk) -> bool {\n+    type cx = @{\n+        tcx: ty::ctxt,\n+        mut has: bool\n+    };\n+    let cx = @{\n+        tcx: tcx,\n+        mut has: false\n+    };\n+    let vtor = visit::default_visitor::<cx>();\n+    let vtor = @{visit_expr: visit_expr with *vtor};\n+    visit::visit_block(body, cx, visit::mk_vt(vtor));\n+    ret cx.has;\n+\n+    fn visit_expr(e: @expr, &&cx: cx, v: visit::vt<cx>) {\n+        import syntax::print::pprust;\n+        #debug(\"visiting %?\", pprust::expr_to_str(e));\n+\n+        visit::visit_expr(e, cx, v);\n+\n+        if constraints_expr(cx.tcx, e).is_not_empty() {\n+            #debug(\"has constraints\");\n+            cx.has = true;\n+        } else {\n+            #debug(\"has not constraints\");\n+        }\n+    }\n+}\n+\n fn fn_pre_post(fk: visit::fn_kind, decl: fn_decl, body: blk, sp: span,\n                id: node_id,\n                ccx: crate_ctxt, v: visit::vt<crate_ctxt>) {\n-    visit::visit_fn(fk, decl, body, sp, id, ccx, v);\n-    assert (ccx.fm.contains_key(id));\n-    let fcx =\n-        {enclosing: ccx.fm.get(id),\n-         id: id,\n-         name: visit::name_of_fn(fk),\n-         ccx: ccx};\n-    find_pre_post_fn(fcx, body);\n+\n+    if contains_constrained_calls(ccx.tcx, body) {\n+        visit::visit_fn(fk, decl, body, sp, id, ccx, v);\n+        assert (ccx.fm.contains_key(id));\n+        let fcx =\n+            {enclosing: ccx.fm.get(id),\n+             id: id,\n+             name: visit::name_of_fn(fk),\n+             ccx: ccx};\n+        find_pre_post_fn(fcx, body);\n+    }\n }\n \n //"}]}