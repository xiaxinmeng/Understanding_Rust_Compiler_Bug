{"sha": "36732a42bd24b6138b2c7bbc91495adfe558ec0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM2NzMyYTQyYmQyNGI2MTM4YjJjN2JiYzkxNDk1YWRmZTU1OGVjMGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-19T15:23:12Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-09-19T15:27:47Z"}, "message": "move fold conversino to conv.rs", "tree": {"sha": "0c6ebb20a62994768558c822ae7279b73bc4f43c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c6ebb20a62994768558c822ae7279b73bc4f43c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36732a42bd24b6138b2c7bbc91495adfe558ec0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36732a42bd24b6138b2c7bbc91495adfe558ec0f", "html_url": "https://github.com/rust-lang/rust/commit/36732a42bd24b6138b2c7bbc91495adfe558ec0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36732a42bd24b6138b2c7bbc91495adfe558ec0f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "184e80007b1d549ebabb6c7a86103648470a8c9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/184e80007b1d549ebabb6c7a86103648470a8c9f", "html_url": "https://github.com/rust-lang/rust/commit/184e80007b1d549ebabb6c7a86103648470a8c9f"}], "stats": {"total": 62, "additions": 28, "deletions": 34}, "files": [{"sha": "d78f7792558752dfb131747fb7cf749f91c64d27", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/36732a42bd24b6138b2c7bbc91495adfe558ec0f/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36732a42bd24b6138b2c7bbc91495adfe558ec0f/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=36732a42bd24b6138b2c7bbc91495adfe558ec0f", "patch": "@@ -6,8 +6,8 @@ use lsp_types::{\n };\n use ra_ide_api::{\n     translate_offset_with_edit, CompletionItem, CompletionItemKind, FileId, FilePosition,\n-    FileRange, FileSystemEdit, InsertTextFormat, LineCol, LineIndex, NavigationTarget, RangeInfo,\n-    Severity, SourceChange, SourceFileEdit,\n+    FileRange, FileSystemEdit, Fold, FoldKind, InsertTextFormat, LineCol, LineIndex,\n+    NavigationTarget, RangeInfo, Severity, SourceChange, SourceFileEdit,\n };\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n@@ -225,6 +225,26 @@ impl ConvWith<(&LineIndex, LineEndings)> for &AtomTextEdit {\n     }\n }\n \n+impl ConvWith<&LineIndex> for Fold {\n+    type Output = lsp_types::FoldingRange;\n+\n+    fn conv_with(self, line_index: &LineIndex) -> lsp_types::FoldingRange {\n+        let range = self.range.conv_with(&line_index);\n+        lsp_types::FoldingRange {\n+            start_line: range.start.line,\n+            start_character: Some(range.start.character),\n+            end_line: range.end.line,\n+            end_character: Some(range.end.character),\n+            kind: match self.kind {\n+                FoldKind::Comment => Some(lsp_types::FoldingRangeKind::Comment),\n+                FoldKind::Imports => Some(lsp_types::FoldingRangeKind::Imports),\n+                FoldKind::Mods => None,\n+                FoldKind::Block => None,\n+            },\n+        }\n+    }\n+}\n+\n impl<T: ConvWith<CTX>, CTX> ConvWith<CTX> for Option<T> {\n     type Output = Option<T::Output>;\n "}, {"sha": "ae57e57e95ef7d09ad280e17cb750daa8049e7ba", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 6, "deletions": 32, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/36732a42bd24b6138b2c7bbc91495adfe558ec0f/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36732a42bd24b6138b2c7bbc91495adfe558ec0f/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=36732a42bd24b6138b2c7bbc91495adfe558ec0f", "patch": "@@ -3,14 +3,11 @@ use std::{fmt::Write as _, io::Write as _};\n use lsp_server::ErrorCode;\n use lsp_types::{\n     CodeAction, CodeActionResponse, CodeLens, Command, CompletionItem, Diagnostic,\n-    DocumentFormattingParams, DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeKind,\n-    FoldingRangeParams, Hover, HoverContents, Location, MarkupContent, MarkupKind, Position,\n-    PrepareRenameResponse, Range, RenameParams, SymbolInformation, TextDocumentIdentifier,\n-    TextEdit, WorkspaceEdit,\n-};\n-use ra_ide_api::{\n-    AssistId, FileId, FilePosition, FileRange, FoldKind, Query, Runnable, RunnableKind,\n+    DocumentFormattingParams, DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeParams,\n+    Hover, HoverContents, Location, MarkupContent, MarkupKind, Position, PrepareRenameResponse,\n+    Range, RenameParams, SymbolInformation, TextDocumentIdentifier, TextEdit, WorkspaceEdit,\n };\n+use ra_ide_api::{AssistId, FileId, FilePosition, FileRange, Query, Runnable, RunnableKind};\n use ra_prof::profile;\n use ra_syntax::{AstNode, SyntaxKind, TextRange, TextUnit};\n use rustc_hash::FxHashMap;\n@@ -383,32 +380,9 @@ pub fn handle_folding_range(\n     params: FoldingRangeParams,\n ) -> Result<Option<Vec<FoldingRange>>> {\n     let file_id = params.text_document.try_conv_with(&world)?;\n+    let folds = world.analysis().folding_ranges(file_id)?;\n     let line_index = world.analysis().file_line_index(file_id)?;\n-\n-    let res = Some(\n-        world\n-            .analysis()\n-            .folding_ranges(file_id)?\n-            .into_iter()\n-            .map(|fold| {\n-                let kind = match fold.kind {\n-                    FoldKind::Comment => Some(FoldingRangeKind::Comment),\n-                    FoldKind::Imports => Some(FoldingRangeKind::Imports),\n-                    FoldKind::Mods => None,\n-                    FoldKind::Block => None,\n-                };\n-                let range = fold.range.conv_with(&line_index);\n-                FoldingRange {\n-                    start_line: range.start.line,\n-                    start_character: Some(range.start.character),\n-                    end_line: range.end.line,\n-                    end_character: Some(range.end.character),\n-                    kind,\n-                }\n-            })\n-            .collect(),\n-    );\n-\n+    let res = Some(folds.into_iter().map_conv_with(&*line_index).collect());\n     Ok(res)\n }\n "}]}