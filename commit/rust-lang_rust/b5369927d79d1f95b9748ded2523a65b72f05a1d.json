{"sha": "b5369927d79d1f95b9748ded2523a65b72f05a1d", "node_id": "C_kwDOAAsO6NoAKGI1MzY5OTI3ZDc5ZDFmOTViOTc0OGRlZDI1MjNhNjViNzJmMDVhMWQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-29T17:04:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-29T17:04:36Z"}, "message": "parse empty statemet as statemetn", "tree": {"sha": "f13fa8e4403e05f443ee392c520eb1868c666c98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f13fa8e4403e05f443ee392c520eb1868c666c98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5369927d79d1f95b9748ded2523a65b72f05a1d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5369927d79d1f95b9748ded2523a65b72f05a1d", "html_url": "https://github.com/rust-lang/rust/commit/b5369927d79d1f95b9748ded2523a65b72f05a1d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5369927d79d1f95b9748ded2523a65b72f05a1d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "url": "https://api.github.com/repos/rust-lang/rust/commits/841cd30b451ee80c54c47e9b0c6ea42ae2de4795", "html_url": "https://github.com/rust-lang/rust/commit/841cd30b451ee80c54c47e9b0c6ea42ae2de4795"}], "stats": {"total": 35, "additions": 15, "deletions": 20}, "files": [{"sha": "b93072d4466e420072a5cca8a0610a1981a458ac", "filename": "crates/hir_def/src/macro_expansion_tests/mbe/matching.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe%2Fmatching.rs?ref=b5369927d79d1f95b9748ded2523a65b72f05a1d", "patch": "@@ -85,17 +85,21 @@ fn stmt_boundaries() {\n     check(\n         r#\"\n macro_rules! m {\n-    ($($s:stmt)*) => (stringify!($($s |)*))\n+    ($($s:stmt)*) => (stringify!($($s |)*);)\n }\n-// +errors\n m!(;;92;let x = 92; loop {};);\n \"#,\n         expect![[r#\"\n macro_rules! m {\n-    ($($s:stmt)*) => (stringify!($($s |)*))\n+    ($($s:stmt)*) => (stringify!($($s |)*);)\n }\n-/* error: expected Stmt *//* parse error: expected SEMICOLON */\n-stringify!()\n+stringify!(;\n+|;\n+|92|;\n+|let x = 92|;\n+|loop {}\n+|;\n+|);\n \"#]],\n     );\n }"}, {"sha": "e1a265d817ca982514ac33350908e27dde2450ee", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=b5369927d79d1f95b9748ded2523a65b72f05a1d", "patch": "@@ -98,11 +98,6 @@ pub(crate) mod entry {\n             let m = p.start();\n \n             while !p.at(EOF) {\n-                if p.at(T![;]) {\n-                    p.bump(T![;]);\n-                    continue;\n-                }\n-\n                 expressions::stmt(p, expressions::Semicolon::Optional);\n             }\n "}, {"sha": "9dbba89c568efe0019e72d05743a5335944c64b4", "filename": "crates/parser/src/grammar/expressions.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=b5369927d79d1f95b9748ded2523a65b72f05a1d", "patch": "@@ -30,6 +30,10 @@ fn expr_no_struct(p: &mut Parser) {\n }\n \n pub(super) fn stmt(p: &mut Parser, semicolon: Semicolon) {\n+    if p.eat(T![;]) {\n+        return;\n+    }\n+\n     let m = p.start();\n     // test attr_on_expr_stmt\n     // fn foo() {\n@@ -143,12 +147,6 @@ pub(super) fn expr_block_contents(p: &mut Parser) {\n         //     fn f() {};\n         //     struct S {};\n         // }\n-\n-        if p.at(T![;]) {\n-            p.bump(T![;]);\n-            continue;\n-        }\n-\n         stmt(p, Semicolon::Required);\n     }\n }"}, {"sha": "7040608a9f7ab0b7ca92a4cca83803fb321bfd5c", "filename": "crates/parser/src/shortcuts.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fparser%2Fsrc%2Fshortcuts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b5369927d79d1f95b9748ded2523a65b72f05a1d/crates%2Fparser%2Fsrc%2Fshortcuts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fshortcuts.rs?ref=b5369927d79d1f95b9748ded2523a65b72f05a1d", "patch": "@@ -76,8 +76,7 @@ impl<'a> LexedStr<'a> {\n                 builder.eat_trivias();\n                 (builder.sink)(StrStep::Exit);\n             }\n-            State::PendingEnter => (),\n-            State::Normal => unreachable!(),\n+            State::PendingEnter | State::Normal => (),\n         }\n \n         let is_eof = builder.pos == builder.lexed.len();\n@@ -101,9 +100,8 @@ enum State {\n impl Builder<'_, '_> {\n     fn token(&mut self, kind: SyntaxKind, n_tokens: u8) {\n         match mem::replace(&mut self.state, State::Normal) {\n-            State::PendingEnter => unreachable!(),\n             State::PendingExit => (self.sink)(StrStep::Exit),\n-            State::Normal => (),\n+            State::PendingEnter | State::Normal => (),\n         }\n         self.eat_trivias();\n         self.do_token(kind, n_tokens as usize);"}]}