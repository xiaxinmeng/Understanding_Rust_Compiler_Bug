{"sha": "d1a541e34290364681550e82fe606d21c7235345", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYTU0MWUzNDI5MDM2NDY4MTU1MGU4MmZlNjA2ZDIxYzcyMzUzNDU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-14T10:31:33Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-02-14T10:31:33Z"}, "message": "Add tests for Atomic*::fetch_{min,max}", "tree": {"sha": "ed73a15b10bd2c544b4a8e9bd1549b7fbf1046c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed73a15b10bd2c544b4a8e9bd1549b7fbf1046c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a541e34290364681550e82fe606d21c7235345", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a541e34290364681550e82fe606d21c7235345", "html_url": "https://github.com/rust-lang/rust/commit/d1a541e34290364681550e82fe606d21c7235345", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a541e34290364681550e82fe606d21c7235345/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3158857297417566824631a85c4cb3c0615ec6c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3158857297417566824631a85c4cb3c0615ec6c2", "html_url": "https://github.com/rust-lang/rust/commit/3158857297417566824631a85c4cb3c0615ec6c2"}], "stats": {"total": 36, "additions": 36, "deletions": 0}, "files": [{"sha": "762642aecdab60e893d174fa639258fee1f7689e", "filename": "library/core/tests/atomic.rs", "status": "modified", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/d1a541e34290364681550e82fe606d21c7235345/library%2Fcore%2Ftests%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a541e34290364681550e82fe606d21c7235345/library%2Fcore%2Ftests%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fatomic.rs?ref=d1a541e34290364681550e82fe606d21c7235345", "patch": "@@ -59,6 +59,24 @@ fn uint_xor() {\n     assert_eq!(x.load(SeqCst), 0xf731 ^ 0x137f);\n }\n \n+#[test]\n+fn uint_min() {\n+    let x = AtomicUsize::new(0xf731);\n+    assert_eq!(x.fetch_min(0x137f, SeqCst), 0xf731);\n+    assert_eq!(x.load(SeqCst), 0x137f);\n+    assert_eq!(x.fetch_min(0xf731, SeqCst), 0x137f);\n+    assert_eq!(x.load(SeqCst), 0x137f);\n+}\n+\n+#[test]\n+fn uint_max() {\n+    let x = AtomicUsize::new(0x137f);\n+    assert_eq!(x.fetch_max(0xf731, SeqCst), 0x137f);\n+    assert_eq!(x.load(SeqCst), 0xf731);\n+    assert_eq!(x.fetch_max(0x137f, SeqCst), 0xf731);\n+    assert_eq!(x.load(SeqCst), 0xf731);\n+}\n+\n #[test]\n fn int_and() {\n     let x = AtomicIsize::new(0xf731);\n@@ -87,6 +105,24 @@ fn int_xor() {\n     assert_eq!(x.load(SeqCst), 0xf731 ^ 0x137f);\n }\n \n+#[test]\n+fn int_min() {\n+    let x = AtomicIsize::new(0xf731);\n+    assert_eq!(x.fetch_min(0x137f, SeqCst), 0xf731);\n+    assert_eq!(x.load(SeqCst), 0x137f);\n+    assert_eq!(x.fetch_min(0xf731, SeqCst), 0x137f);\n+    assert_eq!(x.load(SeqCst), 0x137f);\n+}\n+\n+#[test]\n+fn int_max() {\n+    let x = AtomicIsize::new(0x137f);\n+    assert_eq!(x.fetch_max(0xf731, SeqCst), 0x137f);\n+    assert_eq!(x.load(SeqCst), 0xf731);\n+    assert_eq!(x.fetch_max(0x137f, SeqCst), 0xf731);\n+    assert_eq!(x.load(SeqCst), 0xf731);\n+}\n+\n static S_FALSE: AtomicBool = AtomicBool::new(false);\n static S_TRUE: AtomicBool = AtomicBool::new(true);\n static S_INT: AtomicIsize = AtomicIsize::new(0);"}]}