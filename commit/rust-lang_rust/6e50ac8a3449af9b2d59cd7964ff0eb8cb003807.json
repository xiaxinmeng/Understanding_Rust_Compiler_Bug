{"sha": "6e50ac8a3449af9b2d59cd7964ff0eb8cb003807", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlNTBhYzhhMzQ0OWFmOWIyZDU5Y2Q3OTY0ZmYwZWI4Y2IwMDM4MDc=", "commit": {"author": {"name": "Jack Huey", "email": "31162821+jackh726@users.noreply.github.com", "date": "2021-04-29T23:27:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-29T23:27:25Z"}, "message": "Rollup merge of #84692 - r00ster91:var-var_os-vars, r=joshtriplett\n\nLink between std::env::{var, var_os} and std::env::{vars, vars_os}\n\nIn #84551 I linked between `std::env::{args, args_os}` and this PR does the same but for `std::env::{var, var_os}` and `std::env::{vars, vars_os}`. Now all of `std::env::{var, var_os, vars, vars_os, args, args_os}` should each mention their `_os` or non-`_os` equivalent in the docs so that you can easily navigate between them.", "tree": {"sha": "e7ce1263f25951e7a25dc9516639238ec7d77a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7ce1263f25951e7a25dc9516639238ec7d77a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e50ac8a3449af9b2d59cd7964ff0eb8cb003807", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgi0DeCRBK7hj4Ov3rIwAALg0IAHH+K/nkk41DelHQQJv/HwDl\n06tQQnNV+LPnSUKxdMHnFw0ypTPGF/yYttHVwFBnMGL2V4tii3H0/7oJ5EWJ4Kes\nASikTOPXcR/S2iDtMM5NE0eQLm9GG6Q07FhvJJ5WAqD/oIUE+noTktDzC/KU+3MR\nkhcJr9lFpJdn66z/WcLjy4ZqBZ81A71hb/iSXkcRHmabRk+d8gpiEOXHTnJt2Ayf\nqUhrKBZLuJq/4/yEl18v4Gv9Efy4cuJoWebuTraw4hKo09akKxuWmcCS6cyM396c\n/9K8W9xOWLwVDk+JRg/08SJ1SSIMLIzTIM06Bbj3iCN8pQCF36yTCZ4xYjuu4AA=\n=n1jY\n-----END PGP SIGNATURE-----\n", "payload": "tree e7ce1263f25951e7a25dc9516639238ec7d77a14\nparent 8460539f28538331bfc40139a9ceaa648e979b47\nparent d0c0b8a4a37827da956aafff33fa9882a3bc0df9\nauthor Jack Huey <31162821+jackh726@users.noreply.github.com> 1619738845 -0400\ncommitter GitHub <noreply@github.com> 1619738845 -0400\n\nRollup merge of #84692 - r00ster91:var-var_os-vars, r=joshtriplett\n\nLink between std::env::{var, var_os} and std::env::{vars, vars_os}\n\nIn #84551 I linked between `std::env::{args, args_os}` and this PR does the same but for `std::env::{var, var_os}` and `std::env::{vars, vars_os}`. Now all of `std::env::{var, var_os, vars, vars_os, args, args_os}` should each mention their `_os` or non-`_os` equivalent in the docs so that you can easily navigate between them.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e50ac8a3449af9b2d59cd7964ff0eb8cb003807", "html_url": "https://github.com/rust-lang/rust/commit/6e50ac8a3449af9b2d59cd7964ff0eb8cb003807", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e50ac8a3449af9b2d59cd7964ff0eb8cb003807/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8460539f28538331bfc40139a9ceaa648e979b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/8460539f28538331bfc40139a9ceaa648e979b47", "html_url": "https://github.com/rust-lang/rust/commit/8460539f28538331bfc40139a9ceaa648e979b47"}, {"sha": "d0c0b8a4a37827da956aafff33fa9882a3bc0df9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0c0b8a4a37827da956aafff33fa9882a3bc0df9", "html_url": "https://github.com/rust-lang/rust/commit/d0c0b8a4a37827da956aafff33fa9882a3bc0df9"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "821e7d4cfe7ad5e09bd099f3747120a6210c9d19", "filename": "library/std/src/env.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6e50ac8a3449af9b2d59cd7964ff0eb8cb003807/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e50ac8a3449af9b2d59cd7964ff0eb8cb003807/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=6e50ac8a3449af9b2d59cd7964ff0eb8cb003807", "patch": "@@ -124,6 +124,10 @@ pub fn vars() -> Vars {\n /// variables at the time of this invocation. Modifications to environment\n /// variables afterwards will not be reflected in the returned iterator.\n ///\n+/// Note that the returned iterator will not check if the environment variables\n+/// are valid Unicode. If you want to panic on invalid UTF-8,\n+/// use the [`vars`] function instead.\n+///\n /// # Examples\n ///\n /// ```\n@@ -180,8 +184,9 @@ impl fmt::Debug for VarsOs {\n ///\n /// # Errors\n ///\n-/// * Environment variable is not present\n-/// * Environment variable is not valid unicode\n+/// Errors if the environment variable is not present.\n+/// Errors if the environment variable is not valid Unicode. If this is not desired, consider using\n+/// [`var_os`].\n ///\n /// # Panics\n ///\n@@ -221,6 +226,10 @@ fn _var(key: &OsStr) -> Result<String, VarError> {\n /// `'='` or the NUL character `'\\0'`, or when the value contains the NUL\n /// character.\n ///\n+/// Note that the method will not check if the environment variable\n+/// is valid Unicode. If you want to have an error on invalid UTF-8,\n+/// use the [`var`] function instead.\n+///\n /// # Examples\n ///\n /// ```"}]}