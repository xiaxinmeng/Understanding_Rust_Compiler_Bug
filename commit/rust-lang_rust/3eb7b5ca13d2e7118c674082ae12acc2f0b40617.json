{"sha": "3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYjdiNWNhMTNkMmU3MTE4YzY3NDA4MmFlMTJhY2MyZjBiNDA2MTc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T19:30:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-09-28T19:30:18Z"}, "message": "De-export ops, cmp, num. Part of #3583.", "tree": {"sha": "035aad6f8d0df074ca0eea91bb672e0ae0523a9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/035aad6f8d0df074ca0eea91bb672e0ae0523a9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "html_url": "https://github.com/rust-lang/rust/commit/3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7", "html_url": "https://github.com/rust-lang/rust/commit/0792ebe08af6fbf80d89eeb3ee23241dce05a5b7"}], "stats": {"total": 39, "additions": 17, "deletions": 22}, "files": [{"sha": "c3630e9f857c5d7c51a220d85055bfc026f892b6", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "patch": "@@ -17,8 +17,6 @@ and `Eq` to overload the `==` and `!=` operators.\n pub use nounittest::*;\n pub use unittest::*;\n \n-export Ord, Eq;\n-\n /// Interfaces used for comparison.\n \n // Awful hack to work around duplicate lang items in core test."}, {"sha": "146ce946e60c3b84b6bc20c1cbb62186f96209cb", "filename": "src/libcore/core.rc", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fcore.rc", "raw_url": "https://github.com/rust-lang/rust/raw/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fcore.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcore.rc?ref=3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "patch": "@@ -206,11 +206,8 @@ mod uniq;\n // Ubiquitous-utility-type modules\n \n #[cfg(notest)]\n-#[legacy_exports]\n mod ops;\n-#[legacy_exports]\n mod cmp;\n-#[legacy_exports]\n mod num;\n #[legacy_exports]\n mod hash;"}, {"sha": "d84f97c963933cca41fd1ae6c3dc2cbdcedeab98", "filename": "src/libcore/num.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fnum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fnum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum.rs?ref=3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "patch": "@@ -1,6 +1,6 @@\n //! An interface for numeric types\n \n-trait Num {\n+pub trait Num {\n     // FIXME: Trait composition. (#2616)\n     pure fn add(other: &self) -> self;\n     pure fn sub(other: &self) -> self;"}, {"sha": "994e010e45257caf49be66b5f22705a08c74aa7a", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eb7b5ca13d2e7118c674082ae12acc2f0b40617/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=3eb7b5ca13d2e7118c674082ae12acc2f0b40617", "patch": "@@ -1,82 +1,82 @@\n // Core operators and kinds.\n \n #[lang=\"const\"]\n-trait Const {\n+pub trait Const {\n     // Empty.\n }\n \n #[lang=\"copy\"]\n-trait Copy {\n+pub trait Copy {\n     // Empty.\n }\n \n #[lang=\"send\"]\n-trait Send {\n+pub trait Send {\n     // Empty.\n }\n \n #[lang=\"owned\"]\n-trait Owned {\n+pub trait Owned {\n     // Empty.\n }\n \n #[lang=\"add\"]\n-trait Add<RHS,Result> {\n+pub trait Add<RHS,Result> {\n     pure fn add(rhs: &RHS) -> Result;\n }\n \n #[lang=\"sub\"]\n-trait Sub<RHS,Result> {\n+pub trait Sub<RHS,Result> {\n     pure fn sub(rhs: &RHS) -> Result;\n }\n \n #[lang=\"mul\"]\n-trait Mul<RHS,Result> {\n+pub trait Mul<RHS,Result> {\n     pure fn mul(rhs: &RHS) -> Result;\n }\n \n #[lang=\"div\"]\n-trait Div<RHS,Result> {\n+pub trait Div<RHS,Result> {\n     pure fn div(rhs: &RHS) -> Result;\n }\n \n #[lang=\"modulo\"]\n-trait Modulo<RHS,Result> {\n+pub trait Modulo<RHS,Result> {\n     pure fn modulo(rhs: &RHS) -> Result;\n }\n \n #[lang=\"neg\"]\n-trait Neg<Result> {\n+pub trait Neg<Result> {\n     pure fn neg() -> Result;\n }\n \n #[lang=\"bitand\"]\n-trait BitAnd<RHS,Result> {\n+pub trait BitAnd<RHS,Result> {\n     pure fn bitand(rhs: &RHS) -> Result;\n }\n \n #[lang=\"bitor\"]\n-trait BitOr<RHS,Result> {\n+pub trait BitOr<RHS,Result> {\n     pure fn bitor(rhs: &RHS) -> Result;\n }\n \n #[lang=\"bitxor\"]\n-trait BitXor<RHS,Result> {\n+pub trait BitXor<RHS,Result> {\n     pure fn bitxor(rhs: &RHS) -> Result;\n }\n \n #[lang=\"shl\"]\n-trait Shl<RHS,Result> {\n+pub trait Shl<RHS,Result> {\n     pure fn shl(rhs: &RHS) -> Result;\n }\n \n #[lang=\"shr\"]\n-trait Shr<RHS,Result> {\n+pub trait Shr<RHS,Result> {\n     pure fn shr(rhs: &RHS) -> Result;\n }\n \n #[lang=\"index\"]\n-trait Index<Index,Result> {\n+pub trait Index<Index,Result> {\n     pure fn index(+index: Index) -> Result;\n }\n "}]}