{"sha": "b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4YWU3YjgwMWJmMWYzZDI5ODQ5M2IyZTdlMTMyOGExYTdlY2FjZTc=", "commit": {"author": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2018-11-20T07:11:12Z"}, "committer": {"name": "Dan Aloni", "email": "alonid@gmail.com", "date": "2018-11-21T19:31:47Z"}, "message": "macro_literal_matcher: fixes per petrochenkov's review", "tree": {"sha": "69c677dfa0fd0c925981f8e7d71ee98a4022475e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69c677dfa0fd0c925981f8e7d71ee98a4022475e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "html_url": "https://github.com/rust-lang/rust/commit/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/comments", "author": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "committer": {"login": "da-x", "id": 321273, "node_id": "MDQ6VXNlcjMyMTI3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/321273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/da-x", "html_url": "https://github.com/da-x", "followers_url": "https://api.github.com/users/da-x/followers", "following_url": "https://api.github.com/users/da-x/following{/other_user}", "gists_url": "https://api.github.com/users/da-x/gists{/gist_id}", "starred_url": "https://api.github.com/users/da-x/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/da-x/subscriptions", "organizations_url": "https://api.github.com/users/da-x/orgs", "repos_url": "https://api.github.com/users/da-x/repos", "events_url": "https://api.github.com/users/da-x/events{/privacy}", "received_events_url": "https://api.github.com/users/da-x/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc284c1eee0180903fe11463dcee06e414202cf7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc284c1eee0180903fe11463dcee06e414202cf7", "html_url": "https://github.com/rust-lang/rust/commit/fc284c1eee0180903fe11463dcee06e414202cf7"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "d526e464ba4f50935ab50ba00b615fdb675e28a9", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "patch": "@@ -1033,9 +1033,9 @@ fn is_legal_fragment_specifier(_sess: &ParseSess,\n                                frag_name: &str,\n                                _frag_span: Span) -> bool {\n     /*\n-     * If new fragmnet specifiers are invented in nightly, `_sess`,\n-     * `_features`, `_attrs`, and `_frag_span` will be useful for\n-     * here for checking against feature gates. See past versions of\n+     * If new fragment specifiers are invented in nightly, `_sess`,\n+     * `_features`, `_attrs`, and `_frag_span` will be useful here\n+     * for checking against feature gates. See past versions of\n      * this function.\n      */\n     match frag_name {"}, {"sha": "c4ed534cc20ec84e0a3975a8758c1f0e1bce167f", "filename": "src/test/run-pass/issues/issue-52169.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/src%2Ftest%2Frun-pass%2Fissues%2Fissue-52169.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/src%2Ftest%2Frun-pass%2Fissues%2Fissue-52169.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-52169.rs?ref=b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // run-pass\n-#![cfg_attr(stage0, feature(macro_literal_matcher))]\n \n macro_rules! a {\n     ($i:literal) => { \"right\" };"}, {"sha": "de268e3388a5e34440cf789f525e7fd587baa850", "filename": "src/test/run-pass/macros/macro-literal.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fmacro-literal.rs?ref=b8ae7b801bf1f3d298493b2e7e1328a1a7ecace7", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // run-pass\n-#![cfg_attr(stage0, feature(macro_literal_matcher))]\n \n macro_rules! mtester {\n     ($l:literal) => {"}]}