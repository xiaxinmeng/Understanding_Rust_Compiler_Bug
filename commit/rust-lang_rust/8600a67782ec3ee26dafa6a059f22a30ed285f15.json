{"sha": "8600a67782ec3ee26dafa6a059f22a30ed285f15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2MDBhNjc3ODJlYzNlZTI2ZGFmYTZhMDU5ZjIyYTMwZWQyODVmMTU=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-11T00:33:46Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-11T01:14:58Z"}, "message": "mem_categorization: freely_aliasable doesn't need to take TyCtxt.", "tree": {"sha": "df005895ba054726fab687463f11460f68070476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df005895ba054726fab687463f11460f68070476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8600a67782ec3ee26dafa6a059f22a30ed285f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8600a67782ec3ee26dafa6a059f22a30ed285f15", "html_url": "https://github.com/rust-lang/rust/commit/8600a67782ec3ee26dafa6a059f22a30ed285f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8600a67782ec3ee26dafa6a059f22a30ed285f15/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e290998c3d8b2caf25715c932d416fb0104472e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e290998c3d8b2caf25715c932d416fb0104472e", "html_url": "https://github.com/rust-lang/rust/commit/6e290998c3d8b2caf25715c932d416fb0104472e"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "4c440b159880b9cab99f3b1de1c3877b76f286ea", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8600a67782ec3ee26dafa6a059f22a30ed285f15/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8600a67782ec3ee26dafa6a059f22a30ed285f15/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=8600a67782ec3ee26dafa6a059f22a30ed285f15", "patch": "@@ -1389,8 +1389,7 @@ impl<'tcx> cmt_<'tcx> {\n     }\n \n     /// Returns `FreelyAliasable(_)` if this lvalue represents a freely aliasable pointer type.\n-    pub fn freely_aliasable(&self, ctxt: &TyCtxt<'tcx>)\n-                            -> Aliasability {\n+    pub fn freely_aliasable(&self) -> Aliasability {\n         // Maybe non-obvious: copied upvars can only be considered\n         // non-aliasable in once closures, since any other kind can be\n         // aliased and eventually recused.\n@@ -1403,11 +1402,11 @@ impl<'tcx> cmt_<'tcx> {\n             Categorization::Downcast(ref b, _) |\n             Categorization::Interior(ref b, _) => {\n                 // Aliasability depends on base cmt\n-                b.freely_aliasable(ctxt)\n+                b.freely_aliasable()\n             }\n \n             Categorization::Deref(ref b, _, Unique) => {\n-                let sub = b.freely_aliasable(ctxt);\n+                let sub = b.freely_aliasable();\n                 if b.mutbl.is_mutable() {\n                     // Aliasability depends on base cmt alone\n                     sub"}, {"sha": "21787505b8af05b933b139f9953efcd6a9ee3481", "filename": "src/librustc_borrowck/borrowck/gather_loans/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8600a67782ec3ee26dafa6a059f22a30ed285f15/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8600a67782ec3ee26dafa6a059f22a30ed285f15/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fgather_loans%2Fmod.rs?ref=8600a67782ec3ee26dafa6a059f22a30ed285f15", "patch": "@@ -178,7 +178,7 @@ fn check_aliasability<'a, 'tcx>(bccx: &BorrowckCtxt<'a, 'tcx>,\n                                 req_kind: ty::BorrowKind)\n                                 -> Result<(),()> {\n \n-    let aliasability = cmt.freely_aliasable(bccx.tcx);\n+    let aliasability = cmt.freely_aliasable();\n     debug!(\"check_aliasability aliasability={:?} req_kind={:?}\",\n            aliasability, req_kind);\n "}]}