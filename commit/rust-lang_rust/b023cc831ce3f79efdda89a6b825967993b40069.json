{"sha": "b023cc831ce3f79efdda89a6b825967993b40069", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwMjNjYzgzMWNlM2Y3OWVmZGRhODlhNmI4MjU5Njc5OTNiNDAwNjk=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-05T05:02:46Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-06T04:52:25Z"}, "message": "Remove static lifetime", "tree": {"sha": "9c4a2be1a16b926c76ab8e2777ff67df89785565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c4a2be1a16b926c76ab8e2777ff67df89785565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b023cc831ce3f79efdda89a6b825967993b40069", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b023cc831ce3f79efdda89a6b825967993b40069", "html_url": "https://github.com/rust-lang/rust/commit/b023cc831ce3f79efdda89a6b825967993b40069", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b023cc831ce3f79efdda89a6b825967993b40069/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc4a51a24200376f461f643eb9da7378eed075b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc4a51a24200376f461f643eb9da7378eed075b5", "html_url": "https://github.com/rust-lang/rust/commit/fc4a51a24200376f461f643eb9da7378eed075b5"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0df8d37807bec2fe26eef8803767e1e8e67f3f08", "filename": "src/bin/rustfmt-format-diff.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b023cc831ce3f79efdda89a6b825967993b40069/src%2Fbin%2Frustfmt-format-diff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b023cc831ce3f79efdda89a6b825967993b40069/src%2Fbin%2Frustfmt-format-diff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Frustfmt-format-diff.rs?ref=b023cc831ce3f79efdda89a6b825967993b40069", "patch": "@@ -33,7 +33,7 @@ use regex::Regex;\n /// The default pattern of files to format.\n ///\n /// We only want to format rust files by default.\n-const DEFAULT_PATTERN: &'static str = r\".*\\.rs\";\n+const DEFAULT_PATTERN: &str = r\".*\\.rs\";\n \n #[derive(Debug)]\n enum FormatDiffError {"}, {"sha": "450e016bc5ae066c8cab63dfde0d6eb0f036f5cb", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b023cc831ce3f79efdda89a6b825967993b40069/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b023cc831ce3f79efdda89a6b825967993b40069/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=b023cc831ce3f79efdda89a6b825967993b40069", "patch": "@@ -500,7 +500,7 @@ macro_rules! create_config {\n ///\n /// Return the path if a config file exists, empty if no file exists, and Error for IO errors\n pub fn get_toml_path(dir: &Path) -> Result<Option<PathBuf>, Error> {\n-    const CONFIG_FILE_NAMES: [&'static str; 2] = [\".rustfmt.toml\", \"rustfmt.toml\"];\n+    const CONFIG_FILE_NAMES: [&str; 2] = [\".rustfmt.toml\", \"rustfmt.toml\"];\n     for config_file_name in &CONFIG_FILE_NAMES {\n         let config_file = dir.join(config_file_name);\n         match fs::metadata(&config_file) {"}, {"sha": "8f5feac474c12f222376f9e2e6703d8c0bac2ccb", "filename": "src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b023cc831ce3f79efdda89a6b825967993b40069/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b023cc831ce3f79efdda89a6b825967993b40069/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=b023cc831ce3f79efdda89a6b825967993b40069", "patch": "@@ -35,7 +35,7 @@ use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n use utils::mk_sp;\n \n-const FORCED_BRACKET_MACROS: &'static [&'static str] = &[\"vec!\"];\n+const FORCED_BRACKET_MACROS: &[&str] = &[\"vec!\"];\n \n // FIXME: use the enum from libsyntax?\n #[derive(Clone, Copy, PartialEq, Eq)]"}, {"sha": "b8fb83fefe5565a2696f14df1cda3184945bb194", "filename": "src/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b023cc831ce3f79efdda89a6b825967993b40069/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b023cc831ce3f79efdda89a6b825967993b40069/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=b023cc831ce3f79efdda89a6b825967993b40069", "patch": "@@ -19,7 +19,7 @@ use rewrite::RewriteContext;\n use shape::Shape;\n \n // When we get scoped annotations, we should have rustfmt::skip.\n-const SKIP_ANNOTATION: &'static str = \"rustfmt_skip\";\n+const SKIP_ANNOTATION: &str = \"rustfmt_skip\";\n \n // Computes the length of a string's last line, minus offset.\n pub fn extra_offset(text: &str, shape: Shape) -> usize {"}]}