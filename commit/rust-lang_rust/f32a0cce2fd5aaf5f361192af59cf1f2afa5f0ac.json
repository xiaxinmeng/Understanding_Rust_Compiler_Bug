{"sha": "f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzMmEwY2NlMmZkNWFhZjVmMzYxMTkyYWY1OWNmMWYyYWZhNWYwYWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-23T22:05:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-23T22:05:28Z"}, "message": "Auto merge of #78343 - camelid:macros-qualify-panic, r=m-ou-se\n\nQualify `panic!` as `core::panic!` in non-built-in `core` macros\n\nFixes #78333.\n\n-----\n\nOtherwise code like this\n\n    #![no_implicit_prelude]\n\n    fn main() {\n        ::std::todo!();\n        ::std::unimplemented!();\n    }\n\nwill fail to compile, which is unfortunate and presumably unintended.\n\nThis changes many invocations of `panic!` in a `macro_rules!` definition\nto invocations of `$crate::panic!`, which makes the invocations hygienic.\n\nNote that this does not make the built-in macro `assert!` hygienic.", "tree": {"sha": "3cace06ffc49ad1d8418bdc4fdc09dd32ed84196", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3cace06ffc49ad1d8418bdc4fdc09dd32ed84196"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "html_url": "https://github.com/rust-lang/rust/commit/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a105fdd46c926ae606777a46dd90e5b838f92f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a105fdd46c926ae606777a46dd90e5b838f92f", "html_url": "https://github.com/rust-lang/rust/commit/d9a105fdd46c926ae606777a46dd90e5b838f92f"}, {"sha": "d8b1d51b9540be6e51e46077ac6f196f088b0e80", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b1d51b9540be6e51e46077ac6f196f088b0e80", "html_url": "https://github.com/rust-lang/rust/commit/d8b1d51b9540be6e51e46077ac6f196f088b0e80"}], "stats": {"total": 952, "additions": 465, "deletions": 487}, "files": [{"sha": "0699c9eab1871922b819558ef3ac74286da95eeb", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -45,7 +45,7 @@ macro_rules! assert_eq {\n                     // The reborrows below are intentional. Without them, the stack slot for the\n                     // borrow is initialized even before the values are compared, leading to a\n                     // noticeable slow down.\n-                    panic!(r#\"assertion failed: `(left == right)`\n+                    $crate::panic!(r#\"assertion failed: `(left == right)`\n   left: `{:?}`,\n  right: `{:?}`\"#, &*left_val, &*right_val)\n                 }\n@@ -59,7 +59,7 @@ macro_rules! assert_eq {\n                     // The reborrows below are intentional. Without them, the stack slot for the\n                     // borrow is initialized even before the values are compared, leading to a\n                     // noticeable slow down.\n-                    panic!(r#\"assertion failed: `(left == right)`\n+                    $crate::panic!(r#\"assertion failed: `(left == right)`\n   left: `{:?}`,\n  right: `{:?}`: {}\"#, &*left_val, &*right_val,\n                            $crate::format_args!($($arg)+))\n@@ -96,7 +96,7 @@ macro_rules! assert_ne {\n                     // The reborrows below are intentional. Without them, the stack slot for the\n                     // borrow is initialized even before the values are compared, leading to a\n                     // noticeable slow down.\n-                    panic!(r#\"assertion failed: `(left != right)`\n+                    $crate::panic!(r#\"assertion failed: `(left != right)`\n   left: `{:?}`,\n  right: `{:?}`\"#, &*left_val, &*right_val)\n                 }\n@@ -110,7 +110,7 @@ macro_rules! assert_ne {\n                     // The reborrows below are intentional. Without them, the stack slot for the\n                     // borrow is initialized even before the values are compared, leading to a\n                     // noticeable slow down.\n-                    panic!(r#\"assertion failed: `(left != right)`\n+                    $crate::panic!(r#\"assertion failed: `(left != right)`\n   left: `{:?}`,\n  right: `{:?}`: {}\"#, &*left_val, &*right_val,\n                            $crate::format_args!($($arg)+))\n@@ -468,7 +468,7 @@ macro_rules! writeln {\n ///\n /// # Panics\n ///\n-/// This will always [`panic!`]\n+/// This will always [`panic!`].\n ///\n /// # Examples\n ///\n@@ -502,13 +502,13 @@ macro_rules! writeln {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n macro_rules! unreachable {\n     () => ({\n-        panic!(\"internal error: entered unreachable code\")\n+        $crate::panic!(\"internal error: entered unreachable code\")\n     });\n     ($msg:expr $(,)?) => ({\n         $crate::unreachable!(\"{}\", $msg)\n     });\n     ($fmt:expr, $($arg:tt)*) => ({\n-        panic!($crate::concat!(\"internal error: entered unreachable code: \", $fmt), $($arg)*)\n+        $crate::panic!($crate::concat!(\"internal error: entered unreachable code: \", $fmt), $($arg)*)\n     });\n }\n \n@@ -517,15 +517,15 @@ macro_rules! unreachable {\n /// This allows your code to type-check, which is useful if you are prototyping or\n /// implementing a trait that requires multiple methods which you don't plan of using all of.\n ///\n-/// The difference between `unimplemented!` and [`todo!`](macro.todo.html) is that while `todo!`\n+/// The difference between `unimplemented!` and [`todo!`] is that while `todo!`\n /// conveys an intent of implementing the functionality later and the message is \"not yet\n /// implemented\", `unimplemented!` makes no such claims. Its message is \"not implemented\".\n /// Also some IDEs will mark `todo!`s.\n ///\n /// # Panics\n ///\n-/// This will always [panic!](macro.panic.html) because `unimplemented!` is just a\n-/// shorthand for `panic!` with a fixed, specific message.\n+/// This will always [`panic!`] because `unimplemented!` is just a shorthand for `panic!` with a\n+/// fixed, specific message.\n ///\n /// Like `panic!`, this macro has a second form for displaying custom values.\n ///\n@@ -586,8 +586,8 @@ macro_rules! unreachable {\n #[macro_export]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n macro_rules! unimplemented {\n-    () => (panic!(\"not implemented\"));\n-    ($($arg:tt)+) => (panic!(\"not implemented: {}\", $crate::format_args!($($arg)+)));\n+    () => ($crate::panic!(\"not implemented\"));\n+    ($($arg:tt)+) => ($crate::panic!(\"not implemented: {}\", $crate::format_args!($($arg)+)));\n }\n \n /// Indicates unfinished code.\n@@ -602,7 +602,7 @@ macro_rules! unimplemented {\n ///\n /// # Panics\n ///\n-/// This will always [panic!](macro.panic.html)\n+/// This will always [`panic!`].\n ///\n /// # Examples\n ///\n@@ -647,8 +647,8 @@ macro_rules! unimplemented {\n #[macro_export]\n #[stable(feature = \"todo_macro\", since = \"1.40.0\")]\n macro_rules! todo {\n-    () => (panic!(\"not yet implemented\"));\n-    ($($arg:tt)+) => (panic!(\"not yet implemented: {}\", $crate::format_args!($($arg)+)));\n+    () => ($crate::panic!(\"not yet implemented\"));\n+    ($($arg:tt)+) => ($crate::panic!(\"not yet implemented: {}\", $crate::format_args!($($arg)+)));\n }\n \n /// Definitions of built-in macros."}, {"sha": "4db83c5c683d25a7b9937f26c8e42c22555a5d3e", "filename": "src/test/mir-opt/issue_73223.main.PreCodegen.32bit.diff", "status": "modified", "additions": 68, "deletions": 73, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.32bit.diff?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -11,17 +11,16 @@\n       let mut _9: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _10: bool;                   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _11: i32;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _12: &std::fmt::Arguments;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _13: std::fmt::Arguments;        // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _14: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _15: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _16: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _17: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _18: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _19: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _20: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _21: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _22: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _12: std::fmt::Arguments;    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _13: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _14: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _15: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _16: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _17: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _18: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _19: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _20: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _21: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       scope 1 {\n           debug split => _1;               // in scope 1 at $DIR/issue-73223.rs:2:9: 2:14\n           let _4: std::option::Option<i32>; // in scope 1 at $DIR/issue-73223.rs:7:9: 7:14\n@@ -33,33 +32,32 @@\n                   debug left_val => _7;    // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   debug right_val => _8;   // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   scope 5 {\n-                      debug arg0 => _25;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      debug arg1 => _28;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _25;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _24;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _23: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _24: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _25: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      debug arg0 => _24;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug arg1 => _27;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _24;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _23;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _22: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _23: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _24: &&i32; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 7 {\n                           }\n                       }\n-                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _28;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _27;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _26: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _27: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _28: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _27;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _26;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _25: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _26: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _27: &&i32; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 9 {\n                           }\n                       }\n                   }\n-                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug pieces => _29; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug args => _31;   // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _29: &[&str]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _30: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _31: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug pieces => (_12.0: &[&str]); // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug args => _29;   // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _28: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _29: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   }\n               }\n           }\n@@ -114,83 +112,80 @@\n       }\n   \n       bb2: {\n-          StorageLive(_13);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _14 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _13 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // ty::Const\n                                            // + ty: &[&str; 3]\n                                            // + val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0]))\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &[&str; 3], val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0])) }\n-          _29 = move _14 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_16);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_12.0: &[&str]) = move _13 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_15);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _17 = _7;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_16.0: &&i32) = &_17;           // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_18);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _18 = _7;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          (_17.0: &&i32) = &_18;           // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_19);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_20);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _20 = _8;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _19 = &_20;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          (_17.1: &&i32) = move _19;       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _25 = (_17.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _28 = (_17.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _24 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _19 = _8;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _18 = &_19;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_16.1: &&i32) = move _18;       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_18);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _24 = (_16.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _27 = (_16.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _23 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_23);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _23 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _24) -> bb3; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_22);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _22 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _23) -> bb3; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb3: {\n-          (_21.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _25) -> bb4; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_20.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _24) -> bb4; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb4: {\n-          (_21.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _23; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_23);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _27 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _22; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_22);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _26 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_26);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _26 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _27) -> bb5; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_25);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _25 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _26) -> bb5; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb5: {\n-          (_22.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _28) -> bb6; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_21.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _27) -> bb6; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb6: {\n-          (_22.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _26; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_26);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _16 = [move _21, move _22];      // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _15 = &_16;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _31 = move _15 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_30);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          discriminant(_30) = 0;           // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_13.0: &[&str]) = move _29;     // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_13.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _30; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_13.2: &[std::fmt::ArgumentV1]) = move _31; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_30);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _12 = &_13;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          begin_panic_fmt(move _12);       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_21.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _25; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_25);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _15 = [move _20, move _21];      // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _14 = &_15;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _29 = move _14 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_28);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          discriminant(_28) = 0;           // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_12.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _28; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_12.2: &[std::fmt::ArgumentV1]) = move _29; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_28);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          core::panicking::panic_fmt(move _12); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: for<'r, 's> fn(&'r std::fmt::Arguments<'s>) -> ! {std::rt::begin_panic_fmt}, val: Value(Scalar(<ZST>)) }\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                                           // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) -> ! {core::panicking::panic_fmt}, val: Value(Scalar(<ZST>)) }\n       }\n   }\n   "}, {"sha": "4db83c5c683d25a7b9937f26c8e42c22555a5d3e", "filename": "src/test/mir-opt/issue_73223.main.PreCodegen.64bit.diff", "status": "modified", "additions": 68, "deletions": 73, "changes": 141, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.PreCodegen.64bit.diff?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -11,17 +11,16 @@\n       let mut _9: bool;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _10: bool;                   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _11: i32;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _12: &std::fmt::Arguments;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _13: std::fmt::Arguments;        // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _14: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _15: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _16: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _17: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _18: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _19: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _20: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _21: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _22: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _12: std::fmt::Arguments;    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _13: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _14: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _15: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _16: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _17: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _18: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _19: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _20: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _21: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       scope 1 {\n           debug split => _1;               // in scope 1 at $DIR/issue-73223.rs:2:9: 2:14\n           let _4: std::option::Option<i32>; // in scope 1 at $DIR/issue-73223.rs:7:9: 7:14\n@@ -33,33 +32,32 @@\n                   debug left_val => _7;    // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   debug right_val => _8;   // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   scope 5 {\n-                      debug arg0 => _25;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      debug arg1 => _28;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _25;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _24;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _23: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _24: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _25: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      debug arg0 => _24;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug arg1 => _27;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _24;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _23;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _22: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _23: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _24: &&i32; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 7 {\n                           }\n                       }\n-                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _28;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _27;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _26: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _27: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _28: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _27;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _26;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _25: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _26: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _27: &&i32; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 9 {\n                           }\n                       }\n                   }\n-                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug pieces => _29; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug args => _31;   // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _29: &[&str]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _30: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _31: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug pieces => (_12.0: &[&str]); // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug args => _29;   // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _28: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _29: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   }\n               }\n           }\n@@ -114,83 +112,80 @@\n       }\n   \n       bb2: {\n-          StorageLive(_13);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _14 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _13 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // ty::Const\n                                            // + ty: &[&str; 3]\n                                            // + val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0]))\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &[&str; 3], val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0])) }\n-          _29 = move _14 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_16);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_12.0: &[&str]) = move _13 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_15);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_17);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _17 = _7;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_16.0: &&i32) = &_17;           // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_18);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _18 = _7;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          (_17.0: &&i32) = &_18;           // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_19);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_20);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _20 = _8;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _19 = &_20;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          (_17.1: &&i32) = move _19;       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _25 = (_17.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _28 = (_17.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _24 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _19 = _8;                        // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _18 = &_19;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_16.1: &&i32) = move _18;       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_18);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _24 = (_16.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _27 = (_16.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _23 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_23);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _23 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _24) -> bb3; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_22);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _22 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _23) -> bb3; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb3: {\n-          (_21.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _25) -> bb4; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_20.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _24) -> bb4; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb4: {\n-          (_21.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _23; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_23);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _27 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _22; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_22);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _26 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_26);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _26 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _27) -> bb5; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_25);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _25 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _26) -> bb5; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb5: {\n-          (_22.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _28) -> bb6; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_21.0: &core::fmt::Opaque) = transmute::<&&i32, &core::fmt::Opaque>(move _27) -> bb6; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb6: {\n-          (_22.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _26; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_26);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _16 = [move _21, move _22];      // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _15 = &_16;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _31 = move _15 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_30);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          discriminant(_30) = 0;           // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_13.0: &[&str]) = move _29;     // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_13.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _30; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_13.2: &[std::fmt::ArgumentV1]) = move _31; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_30);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _12 = &_13;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          begin_panic_fmt(move _12);       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          (_21.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _25; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_25);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _15 = [move _20, move _21];      // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _14 = &_15;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _29 = move _14 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_28);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          discriminant(_28) = 0;           // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_12.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _28; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_12.2: &[std::fmt::ArgumentV1]) = move _29; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_28);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          core::panicking::panic_fmt(move _12); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: for<'r, 's> fn(&'r std::fmt::Arguments<'s>) -> ! {std::rt::begin_panic_fmt}, val: Value(Scalar(<ZST>)) }\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                                           // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) -> ! {core::panicking::panic_fmt}, val: Value(Scalar(<ZST>)) }\n       }\n   }\n   "}, {"sha": "4e362f3556b208de12c4e8bd62983216cd3bdae2", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.32bit.diff", "status": "modified", "additions": 144, "deletions": 150, "changes": 294, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.32bit.diff?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -18,73 +18,71 @@\n       let mut _16: bool;                   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _17: i32;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _18: i32;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _19: !;                      // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _20: &std::fmt::Arguments;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _21: &std::fmt::Arguments;       // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _22: std::fmt::Arguments;        // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _23: &[&str];                // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _24: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _25: &[&str; 3];                 // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _26: [&str; 3];                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _27: &[std::fmt::ArgumentV1]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _28: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _29: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _30: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _31: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _19: !;                      // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _20: std::fmt::Arguments;    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _21: &[&str];                // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _22: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _23: &[&str; 3];                 // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _24: [&str; 3];                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _25: &[std::fmt::ArgumentV1]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _26: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _27: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _28: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _29: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _30: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _31: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _32: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let _33: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _34: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _35: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _38: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _39: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _40: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _41: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _42: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _43: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _36: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _37: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _38: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _39: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _40: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _41: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       scope 1 {\n           debug split => _1;               // in scope 1 at $DIR/issue-73223.rs:2:9: 2:14\n           let _6: std::option::Option<i32>; // in scope 1 at $DIR/issue-73223.rs:7:9: 7:14\n           scope 3 {\n               debug _prev => _6;           // in scope 3 at $DIR/issue-73223.rs:7:9: 7:14\n               let _13: &i32;               // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n               let _14: &i32;               // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-              let mut _45: &i32;           // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+              let mut _43: &i32;           // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n               scope 4 {\n                   debug left_val => _13;   // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   debug right_val => _14;  // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                  let _36: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                  let _37: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                  let mut _44: &[&str; 3]; // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                  let _34: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                  let _35: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                  let mut _42: &[&str; 3]; // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   scope 5 {\n-                      debug arg0 => _36;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      debug arg1 => _37;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _39;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _40;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _46: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _47: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _48: &core::fmt::Opaque; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _49: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      debug arg0 => _34;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug arg1 => _35;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _37;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _38;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _44: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _45: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _46: &core::fmt::Opaque; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _47: &&i32; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 7 {\n                           }\n                       }\n-                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _42;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _43;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _50: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _51: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _52: &core::fmt::Opaque; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _53: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _40;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _41;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _48: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _49: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _50: &core::fmt::Opaque; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _51: &&i32; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 9 {\n                           }\n                       }\n                   }\n-                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug pieces => _23; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug args => _27;   // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _54: &[&str]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _55: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _56: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug pieces => _21; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug args => _25;   // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _52: &[&str]; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _53: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _54: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   }\n               }\n           }\n@@ -126,14 +124,14 @@\n           StorageLive(_10);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _10 = &_1;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_11);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _45 = const main::promoted[1];   // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _43 = const main::promoted[1];   // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // ty::Const\n                                            // + ty: &i32\n                                            // + val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[1]))\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &i32, val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[1])) }\n-          _11 = _45;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _11 = _43;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           (_9.0: &i32) = move _10;         // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           (_9.1: &i32) = move _11;         // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_11);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n@@ -170,146 +168,142 @@\n       }\n   \n       bb4: {\n-          StorageLive(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_20);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_21);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_22);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_19);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_20);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_21);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_22);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_23);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_24);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_25);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _44 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _42 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // ty::Const\n                                            // + ty: &[&str; 3]\n                                            // + val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0]))\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &[&str; 3], val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0])) }\n-          _25 = _44;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _24 = _25;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _23 = move _24 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageDead(_24);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_27);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_28);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_29);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_30);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_31);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _23 = _42;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _22 = _23;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _21 = move _22 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_22);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_25);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_26);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_27);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_28);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_29);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_30);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_31);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _31 = _13;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _30 = &_31;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_32);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_33);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _33 = _13;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _33 = _14;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _32 = &_33;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_29.0: &&i32) = move _30;       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_29.1: &&i32) = move _32;       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_32);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_30);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_34);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _34 = (_29.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_35);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _35 = _14;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _34 = &_35;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          (_31.0: &&i32) = move _32;       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_31.1: &&i32) = move _34;       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_34);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_32);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_36);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _36 = (_31.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_37);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _37 = (_31.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_38);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _39 = _36;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _40 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _35 = (_29.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_36);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_37);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _37 = _34;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_38);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _38 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_46);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_47);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _47 = _40;                       // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _46 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _47) -> bb5; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_44);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_45);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _45 = _38;                       // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _44 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _45) -> bb5; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb5: {\n-          StorageDead(_47);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_48);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_49);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _49 = _39;                       // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _48 = transmute::<&&i32, &core::fmt::Opaque>(move _49) -> bb6; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_45);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_47);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _47 = _37;                       // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _46 = transmute::<&&i32, &core::fmt::Opaque>(move _47) -> bb6; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb6: {\n-          StorageDead(_49);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_38.0: &core::fmt::Opaque) = move _48; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_38.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _46; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_48);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_46);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_40);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_39);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_41);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_42);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _42 = _37;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_43);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _43 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_47);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_36.0: &core::fmt::Opaque) = move _46; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_36.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _44; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_46);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_44);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_38);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_37);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _40 = _35;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_41);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _41 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_50);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_51);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _51 = _43;                       // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _50 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _51) -> bb7; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_48);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_49);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _49 = _41;                       // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _48 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _49) -> bb7; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb7: {\n-          StorageDead(_51);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_52);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_53);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _53 = _42;                       // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _52 = transmute::<&&i32, &core::fmt::Opaque>(move _53) -> bb8; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_49);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_50);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _51 = _40;                       // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _50 = transmute::<&&i32, &core::fmt::Opaque>(move _51) -> bb8; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb8: {\n-          StorageDead(_53);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_41.0: &core::fmt::Opaque) = move _52; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_41.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _50; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_52);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_50);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_43);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_42);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _30 = [move _38, move _41];      // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_41);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_38);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_37);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_36);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _29 = &_30;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _28 = _29;                       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _27 = move _28 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_28);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_54);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _54 = _23;                       // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_55);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          discriminant(_55) = 0;           // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_56);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _56 = _27;                       // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_22.0: &[&str]) = move _54;     // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_22.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _55; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_22.2: &[std::fmt::ArgumentV1]) = move _56; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_56);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_55);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_54);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_27);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_23);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _21 = &_22;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _20 = _21;                       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          begin_panic_fmt(move _20);       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_39.0: &core::fmt::Opaque) = move _50; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_39.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _48; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_50);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_48);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_41);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_40);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _28 = [move _36, move _39];      // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_39);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_36);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_35);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_34);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _27 = &_28;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _26 = _27;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _25 = move _26 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_26);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_52);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _52 = _21;                       // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_53);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          discriminant(_53) = 0;           // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_54);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _54 = _25;                       // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.0: &[&str]) = move _52;     // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _53; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.2: &[std::fmt::ArgumentV1]) = move _54; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_54);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_53);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_52);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_25);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_21);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          core::panicking::panic_fmt(move _20); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: for<'r, 's> fn(&'r std::fmt::Arguments<'s>) -> ! {std::rt::begin_panic_fmt}, val: Value(Scalar(<ZST>)) }\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                                           // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) -> ! {core::panicking::panic_fmt}, val: Value(Scalar(<ZST>)) }\n       }\n   }\n   "}, {"sha": "4e362f3556b208de12c4e8bd62983216cd3bdae2", "filename": "src/test/mir-opt/issue_73223.main.SimplifyArmIdentity.64bit.diff", "status": "modified", "additions": 144, "deletions": 150, "changes": 294, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_73223.main.SimplifyArmIdentity.64bit.diff?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -18,73 +18,71 @@\n       let mut _16: bool;                   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _17: i32;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _18: i32;                    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _19: !;                      // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _20: &std::fmt::Arguments;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _21: &std::fmt::Arguments;       // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _22: std::fmt::Arguments;        // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _23: &[&str];                // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _24: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _25: &[&str; 3];                 // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _26: [&str; 3];                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _27: &[std::fmt::ArgumentV1]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _28: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _29: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let _30: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _31: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _19: !;                      // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _20: std::fmt::Arguments;    // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _21: &[&str];                // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _22: &[&str; 3];             // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _23: &[&str; 3];                 // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _24: [&str; 3];                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _25: &[std::fmt::ArgumentV1]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _26: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _27: &[std::fmt::ArgumentV1; 2]; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _28: [std::fmt::ArgumentV1; 2];  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _29: (&&i32, &&i32);         // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _30: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let _31: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let mut _32: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       let _33: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _34: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let _35: &i32;                       // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _38: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _39: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _40: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _41: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n-      let mut _42: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-      let mut _43: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _36: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _37: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _38: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _39: std::fmt::ArgumentV1;   // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _40: &&i32;                  // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+      let mut _41: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       scope 1 {\n           debug split => _1;               // in scope 1 at $DIR/issue-73223.rs:2:9: 2:14\n           let _6: std::option::Option<i32>; // in scope 1 at $DIR/issue-73223.rs:7:9: 7:14\n           scope 3 {\n               debug _prev => _6;           // in scope 3 at $DIR/issue-73223.rs:7:9: 7:14\n               let _13: &i32;               // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n               let _14: &i32;               // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-              let mut _45: &i32;           // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+              let mut _43: &i32;           // in scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n               scope 4 {\n                   debug left_val => _13;   // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   debug right_val => _14;  // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                  let _36: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                  let _37: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                  let mut _44: &[&str; 3]; // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                  let _34: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                  let _35: &&i32;          // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                  let mut _42: &[&str; 3]; // in scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   scope 5 {\n-                      debug arg0 => _36;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      debug arg1 => _37;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _39;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _40;  // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _46: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _47: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _48: &core::fmt::Opaque; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _49: &&i32; // in scope 6 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      debug arg0 => _34;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug arg1 => _35;   // in scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      scope 6 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _37;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _38;  // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _44: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _45: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _46: &core::fmt::Opaque; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _47: &&i32; // in scope 6 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 7 {\n                           }\n                       }\n-                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug x => _42;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          debug f => _43;  // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _50: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _51: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _52: &core::fmt::Opaque; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                          let mut _53: &&i32; // in scope 8 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                      scope 8 (inlined ArgumentV1::new::<&i32>) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug x => _40;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          debug f => _41;  // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _48: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _49: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _50: &core::fmt::Opaque; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                          let mut _51: &&i32; // in scope 8 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                           scope 9 {\n                           }\n                       }\n                   }\n-                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug pieces => _23; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      debug args => _27;   // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _54: &[&str]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _55: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-                      let mut _56: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n+                  scope 10 (inlined Arguments::new_v1) { // at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug pieces => _21; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      debug args => _25;   // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _52: &[&str]; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _53: std::option::Option<&[std::fmt::rt::v1::Argument]>; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                      let mut _54: &[std::fmt::ArgumentV1]; // in scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                   }\n               }\n           }\n@@ -126,14 +124,14 @@\n           StorageLive(_10);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _10 = &_1;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_11);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _45 = const main::promoted[1];   // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _43 = const main::promoted[1];   // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // ty::Const\n                                            // + ty: &i32\n                                            // + val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[1]))\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &i32, val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[1])) }\n-          _11 = _45;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _11 = _43;                       // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           (_9.0: &i32) = move _10;         // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           (_9.1: &i32) = move _11;         // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageDead(_11);                // scope 3 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n@@ -170,146 +168,142 @@\n       }\n   \n       bb4: {\n-          StorageLive(_19);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_20);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_21);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_22);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_19);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_20);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_21);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_22);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_23);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_24);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_25);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _44 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _42 = const main::promoted[0];   // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // ty::Const\n                                            // + ty: &[&str; 3]\n                                            // + val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0]))\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: &[&str; 3], val: Unevaluated(WithOptConstParam { did: DefId(0:3 ~ issue_73223[317d]::main), const_param_did: None }, [], Some(promoted[0])) }\n-          _25 = _44;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _24 = _25;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _23 = move _24 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageDead(_24);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_27);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_28);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_29);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_30);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_31);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          _23 = _42;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _22 = _23;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _21 = move _22 as &[&str] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_22);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_25);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_26);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_27);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_28);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_29);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_30);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_31);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _31 = _13;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _30 = &_31;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_32);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_33);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _33 = _13;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _33 = _14;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           _32 = &_33;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_29.0: &&i32) = move _30;       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_29.1: &&i32) = move _32;       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_32);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_30);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_34);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _34 = (_29.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n           StorageLive(_35);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _35 = _14;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _34 = &_35;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          (_31.0: &&i32) = move _32;       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_31.1: &&i32) = move _34;       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_34);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_32);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_36);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _36 = (_31.0: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_37);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _37 = (_31.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_38);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _39 = _36;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _40 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _35 = (_29.1: &&i32);            // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_36);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_37);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _37 = _34;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_38);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _38 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_46);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_47);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _47 = _40;                       // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _46 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _47) -> bb5; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_44);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_45);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _45 = _38;                       // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _44 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _45) -> bb5; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb5: {\n-          StorageDead(_47);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_48);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_49);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _49 = _39;                       // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _48 = transmute::<&&i32, &core::fmt::Opaque>(move _49) -> bb6; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_45);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_46);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_47);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _47 = _37;                       // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _46 = transmute::<&&i32, &core::fmt::Opaque>(move _47) -> bb6; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb6: {\n-          StorageDead(_49);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_38.0: &core::fmt::Opaque) = move _48; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_38.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _46; // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_48);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_46);                // scope 7 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_40);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_39);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_41);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_42);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _42 = _37;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          StorageLive(_43);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n-          _43 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_47);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_36.0: &core::fmt::Opaque) = move _46; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_36.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _44; // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_46);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_44);                // scope 7 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_38);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_37);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_39);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_40);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _40 = _35;                       // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_41);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _41 = <&i32 as Debug>::fmt as for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> (Pointer(ReifyFnPointer)); // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n                                            // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {<&i32 as std::fmt::Debug>::fmt}, val: Value(Scalar(<ZST>)) }\n-          StorageLive(_50);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_51);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _51 = _43;                       // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _50 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _51) -> bb7; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_48);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_49);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _49 = _41;                       // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _48 = transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>(move _49) -> bb7; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) -> for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error> {std::intrinsics::transmute::<for<'r, 's, 't0> fn(&'r &i32, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>, for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb7: {\n-          StorageDead(_51);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_52);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_53);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _53 = _42;                       // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _52 = transmute::<&&i32, &core::fmt::Opaque>(move _53) -> bb8; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_49);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_50);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_51);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _51 = _40;                       // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _50 = transmute::<&&i32, &core::fmt::Opaque>(move _51) -> bb8; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn(&&i32) -> &core::fmt::Opaque {std::intrinsics::transmute::<&&i32, &core::fmt::Opaque>}, val: Value(Scalar(<ZST>)) }\n       }\n   \n       bb8: {\n-          StorageDead(_53);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_41.0: &core::fmt::Opaque) = move _52; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_41.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _50; // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_52);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_50);                // scope 9 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_43);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_42);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _30 = [move _38, move _41];      // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_41);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_38);                // scope 5 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_37);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_36);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _29 = &_30;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _28 = _29;                       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _27 = move _28 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_28);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_54);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _54 = _23;                       // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_55);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          discriminant(_55) = 0;           // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageLive(_56);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _56 = _27;                       // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_22.0: &[&str]) = move _54;     // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_22.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _55; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          (_22.2: &[std::fmt::ArgumentV1]) = move _56; // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_56);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_55);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_54);                // scope 10 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_27);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          StorageDead(_23);                // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _21 = &_22;                      // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          _20 = _21;                       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          begin_panic_fmt(move _20);       // scope 4 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageDead(_51);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_39.0: &core::fmt::Opaque) = move _50; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_39.1: for<'r, 's, 't0> fn(&'r core::fmt::Opaque, &'s mut std::fmt::Formatter<'t0>) -> std::result::Result<(), std::fmt::Error>) = move _48; // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_50);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_48);                // scope 9 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_41);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_40);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _28 = [move _36, move _39];      // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_39);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_36);                // scope 5 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_35);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_34);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _27 = &_28;                      // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _26 = _27;                       // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _25 = move _26 as &[std::fmt::ArgumentV1] (Pointer(Unsize)); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_26);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_52);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _52 = _21;                       // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_53);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          discriminant(_53) = 0;           // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageLive(_54);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          _54 = _25;                       // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.0: &[&str]) = move _52;     // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.1: std::option::Option<&[std::fmt::rt::v1::Argument]>) = move _53; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          (_20.2: &[std::fmt::ArgumentV1]) = move _54; // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_54);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_53);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_52);                // scope 10 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_25);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          StorageDead(_21);                // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          core::panicking::panic_fmt(move _20); // scope 4 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: for<'r, 's> fn(&'r std::fmt::Arguments<'s>) -> ! {std::rt::begin_panic_fmt}, val: Value(Scalar(<ZST>)) }\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                                           // + literal: Const { ty: for<'r> fn(std::fmt::Arguments<'r>) -> ! {core::panicking::panic_fmt}, val: Value(Scalar(<ZST>)) }\n       }\n   }\n   "}, {"sha": "6450a2a22c6ca5eb1dede892c4f446388f05cd5d", "filename": "src/test/mir-opt/issue_76432.test.SimplifyComparisonIntegral.diff", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue_76432.test.SimplifyComparisonIntegral.diff?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -21,7 +21,7 @@\n       let mut _19: *const T;               // in scope 0 at $DIR/issue_76432.rs:9:54: 9:68\n       let mut _20: *const T;               // in scope 0 at $DIR/issue_76432.rs:9:70: 9:84\n       let mut _21: *const T;               // in scope 0 at $DIR/issue_76432.rs:9:70: 9:84\n-      let mut _22: !;                      // in scope 0 at $SRC_DIR/std/src/macros.rs:LL:COL\n+      let mut _22: !;                      // in scope 0 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n       scope 1 {\n           debug v => _2;                   // in scope 1 at $DIR/issue_76432.rs:7:9: 7:10\n           let _13: &T;                     // in scope 1 at $DIR/issue_76432.rs:9:10: 9:16\n@@ -64,11 +64,11 @@\n       }\n   \n       bb1: {\n-          StorageLive(_22);                // scope 1 at $SRC_DIR/std/src/macros.rs:LL:COL\n-          begin_panic::<&str>(const \"internal error: entered unreachable code\"); // scope 1 at $SRC_DIR/std/src/macros.rs:LL:COL\n+          StorageLive(_22);                // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+          core::panicking::panic(const \"internal error: entered unreachable code\"); // scope 1 at $SRC_DIR/core/src/macros/mod.rs:LL:COL\n                                            // mir::Constant\n-                                           // + span: $SRC_DIR/std/src/macros.rs:LL:COL\n-                                           // + literal: Const { ty: fn(&str) -> ! {std::rt::begin_panic::<&str>}, val: Value(Scalar(<ZST>)) }\n+                                           // + span: $SRC_DIR/core/src/macros/mod.rs:LL:COL\n+                                           // + literal: Const { ty: fn(&'static str) -> ! {core::panicking::panic}, val: Value(Scalar(<ZST>)) }\n                                            // ty::Const\n                                            // + ty: &str\n                                            // + val: Value(Slice { data: Allocation { bytes: [105, 110, 116, 101, 114, 110, 97, 108, 32, 101, 114, 114, 111, 114, 58, 32, 101, 110, 116, 101, 114, 101, 100, 32, 117, 110, 114, 101, 97, 99, 104, 97, 98, 108, 101, 32, 99, 111, 100, 101], relocations: Relocations(SortedMap { data: [] }), init_mask: InitMask { blocks: [1099511627775], len: Size { raw: 40 } }, size: Size { raw: 40 }, align: Align { pow2: 0 }, mutability: Not, extra: () }, start: 0, end: 40 })"}, {"sha": "e23826e9d4ef604f62f919920528eefda374bdd8", "filename": "src/test/ui/hygiene/no_implicit_prelude.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -1,7 +1,7 @@\n #![feature(decl_macro)]\n \n mod foo {\n-    pub macro m() { Vec::new(); ().clone() }\n+    pub macro m() { Vec::<i32>::new(); ().clone() }\n     fn f() { ::bar::m!(); }\n }\n \n@@ -13,7 +13,7 @@ mod bar {\n     }\n     fn f() {\n         ::foo::m!();\n-        assert_eq!(0, 0); //~ ERROR cannot find macro `panic` in this scope\n+        assert!(true);\n     }\n }\n "}, {"sha": "835ecce94b97a759346f0855eafc2a628a6b2cdf", "filename": "src/test/ui/hygiene/no_implicit_prelude.stderr", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhygiene%2Fno_implicit_prelude.stderr?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -1,14 +1,3 @@\n-error: cannot find macro `panic` in this scope\n-  --> $DIR/no_implicit_prelude.rs:16:9\n-   |\n-LL |         assert_eq!(0, 0);\n-   |         ^^^^^^^^^^^^^^^^^\n-   |\n-   = note: consider importing one of these items:\n-           core::panic\n-           std::panic\n-   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n error[E0433]: failed to resolve: use of undeclared type `Vec`\n   --> $DIR/no_implicit_prelude.rs:11:9\n    |\n@@ -38,7 +27,7 @@ LL |         ().clone()\n            `use std::clone::Clone;`\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n Some errors have detailed explanations: E0433, E0599.\n For more information about an error, try `rustc --explain E0433`."}, {"sha": "c38755db87ebf321f56392d1c684ebdb15d8aab9", "filename": "src/test/ui/iterators/iter-count-overflow-ndebug.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fiterators%2Fiter-count-overflow-ndebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fiterators%2Fiter-count-overflow-ndebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-count-overflow-ndebug.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -2,7 +2,6 @@\n // only-32bit too impatient for 2\u2076\u2074 items\n // compile-flags: -C debug_assertions=no -C opt-level=3\n \n-use std::panic;\n use std::usize::MAX;\n \n fn main() {"}, {"sha": "3b0c245a5c2a18369ff8ad0d2833a88d405f9880", "filename": "src/test/ui/iterators/iter-position-overflow-ndebug.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fiterators%2Fiter-position-overflow-ndebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fiterators%2Fiter-position-overflow-ndebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-position-overflow-ndebug.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -2,7 +2,6 @@\n // only-32bit too impatient for 2\u2076\u2074 items\n // compile-flags: -C debug_assertions=no -C opt-level=3\n \n-use std::panic;\n use std::usize::MAX;\n \n fn main() {"}, {"sha": "c376f2067045b6ea0c7c5ec1e3b5d3e28b4af191", "filename": "src/test/ui/macros/issue-78333.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fmacros%2Fissue-78333.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftest%2Fui%2Fmacros%2Fissue-78333.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-78333.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -0,0 +1,13 @@\n+// build-pass\n+\n+#![no_implicit_prelude]\n+\n+fn main() {\n+    ::std::panic!();\n+    ::std::todo!();\n+    ::std::unimplemented!();\n+    ::std::assert_eq!(0, 0);\n+    ::std::assert_ne!(0, 1);\n+    ::std::dbg!(123);\n+    ::std::unreachable!();\n+}"}, {"sha": "a01c6ef99db921386fb8ea8bdaac007cb804c08a", "filename": "src/tools/clippy/tests/ui/logic_bug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Flogic_bug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Flogic_bug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Flogic_bug.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::logic_bug)]\n \n fn main() {"}, {"sha": "971be26278f3c4276e2d8b0b1490cd62f4902d96", "filename": "src/tools/clippy/tests/ui/nonminimal_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::nonminimal_bool)]\n \n fn main() {"}, {"sha": "907587402908a7bf09ec65e1bead808c9426239b", "filename": "src/tools/clippy/tests/ui/nonminimal_bool_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool_methods.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -1,4 +1,4 @@\n-#![allow(unused, clippy::many_single_char_names)]\n+#![allow(unused, clippy::many_single_char_names, clippy::diverging_sub_expression)]\n #![warn(clippy::nonminimal_bool)]\n \n fn methods_with_negation() {"}, {"sha": "b1e5742b78531870fafac354b30323eafbcf72eb", "filename": "src/tools/clippy/tests/ui/wildcard_enum_match_arm.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwildcard_enum_match_arm.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwildcard_enum_match_arm.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwildcard_enum_match_arm.fixed?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -7,7 +7,7 @@\n     dead_code,\n     clippy::single_match,\n     clippy::wildcard_in_or_patterns,\n-    clippy::unnested_or_patterns\n+    clippy::unnested_or_patterns, clippy::diverging_sub_expression\n )]\n \n use std::io::ErrorKind;"}, {"sha": "cd3ec3ea8d2629a3e22a532dc10279a234c080d4", "filename": "src/tools/clippy/tests/ui/wildcard_enum_match_arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwildcard_enum_match_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwildcard_enum_match_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fwildcard_enum_match_arm.rs?ref=f32a0cce2fd5aaf5f361192af59cf1f2afa5f0ac", "patch": "@@ -7,7 +7,7 @@\n     dead_code,\n     clippy::single_match,\n     clippy::wildcard_in_or_patterns,\n-    clippy::unnested_or_patterns\n+    clippy::unnested_or_patterns, clippy::diverging_sub_expression\n )]\n \n use std::io::ErrorKind;"}]}