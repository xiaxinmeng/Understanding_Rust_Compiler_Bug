{"sha": "7d0b6b75f05a669ee8cc76e651a654296d7d166c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMGI2Yjc1ZjA1YTY2OWVlOGNjNzZlNjUxYTY1NDI5NmQ3ZDE2NmM=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-06T16:14:09Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-06-06T16:38:47Z"}, "message": "When unable to sinthesize link span, fallback to previous behavior", "tree": {"sha": "666b2653fe9eb718bf116896227c39b7d0be5202", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/666b2653fe9eb718bf116896227c39b7d0be5202"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d0b6b75f05a669ee8cc76e651a654296d7d166c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0b6b75f05a669ee8cc76e651a654296d7d166c", "html_url": "https://github.com/rust-lang/rust/commit/7d0b6b75f05a669ee8cc76e651a654296d7d166c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d0b6b75f05a669ee8cc76e651a654296d7d166c/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "507dfd2148f68bc3bd6349d5e666b12e360a9d15", "url": "https://api.github.com/repos/rust-lang/rust/commits/507dfd2148f68bc3bd6349d5e666b12e360a9d15", "html_url": "https://github.com/rust-lang/rust/commit/507dfd2148f68bc3bd6349d5e666b12e360a9d15"}], "stats": {"total": 184, "additions": 149, "deletions": 35}, "files": [{"sha": "226b3627e3e085dc81f36fe4c530e124bbe636f7", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 35, "deletions": 20, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/7d0b6b75f05a669ee8cc76e651a654296d7d166c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0b6b75f05a669ee8cc76e651a654296d7d166c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=7d0b6b75f05a669ee8cc76e651a654296d7d166c", "patch": "@@ -1194,9 +1194,6 @@ fn resolution_failure(\n     let msg = format!(\"`[{}]` cannot be resolved, ignoring it...\", path_str);\n \n     let code_dox = sp.to_src(cx);\n-    // The whitespace before the `///` to properly find the original span location.\n-    let dox_leading_whitespace = code_dox.lines().nth(1)\n-        .map(|x| x.len() - x.trim_left().len()).unwrap_or(0);\n \n     let doc_comment_padding = 3;\n     let mut diag = if let Some(link_range) = link_range {\n@@ -1205,26 +1202,44 @@ fn resolution_failure(\n         //                       |    link_range\n         //                       last_new_line_offset\n \n-        let line_offset = dox[..link_range.start].lines().count();\n-        let code_dox_len = if line_offset <= 1 {\n+        let mut diag;\n+        if dox.lines().count() == code_dox.lines().count() {\n+            let line_offset = dox[..link_range.start].lines().count();\n             // The span starts in the `///`, so we don't have to account for the leading whitespace\n-            doc_comment_padding\n-        } else {\n-            // The first `///`\n-            doc_comment_padding +\n-                // Each subsequent leading whitespace and `///`\n-                (doc_comment_padding + dox_leading_whitespace)\n-                // The line position inside the doc string\n-                * (line_offset - 1)\n-        };\n+            let code_dox_len = if line_offset <= 1 {\n+                doc_comment_padding\n+            } else {\n+                // The first `///`\n+                doc_comment_padding +\n+                    // Each subsequent leading whitespace and `///`\n+                    code_dox.lines().skip(1).take(line_offset - 1).fold(0, |sum, line| {\n+                        sum + doc_comment_padding + line.len() - line.trim().len()\n+                    })\n+            };\n \n-        // Extract the specific span\n-        let lo = sp.lo() + syntax_pos::BytePos((link_range.start + code_dox_len) as u32);\n-        let hi = lo + syntax_pos::BytePos(link_range.len() as u32);\n-        let sp = sp.with_lo(lo).with_hi(hi);\n+            // Extract the specific span\n+            let lo = sp.lo() + syntax_pos::BytePos((link_range.start + code_dox_len) as u32);\n+            let hi = lo + syntax_pos::BytePos(link_range.len() as u32);\n+            let sp = sp.with_lo(lo).with_hi(hi);\n \n-        let mut diag = cx.sess().struct_span_warn(sp, &msg);\n-        diag.span_label(sp, \"cannot be resolved, ignoring\");\n+            diag = cx.sess().struct_span_warn(sp, &msg);\n+            diag.span_label(sp, \"cannot be resolved, ignoring\");\n+        } else {\n+            diag = cx.sess().struct_span_warn(sp, &msg);\n+\n+            let last_new_line_offset = dox[..link_range.start].rfind('\\n').map_or(0, |n| n + 1);\n+            let line = dox[last_new_line_offset..].lines().next().unwrap_or(\"\");\n+\n+            // Print the line containing the `link_range` and manually mark it with '^'s\n+            diag.note(&format!(\n+                \"the link appears in this line:\\n\\n{line}\\n\\\n+                 {indicator: <before$}{indicator:^<found$}\",\n+                line=line,\n+                indicator=\"\",\n+                before=link_range.start - last_new_line_offset,\n+                found=link_range.len(),\n+            ));\n+        }\n         diag\n     } else {\n         cx.sess().struct_span_warn(sp, &msg)"}, {"sha": "d6bc275b57a6a2e05420c996eea31b437362e0cf", "filename": "src/test/rustdoc-ui/intra-links-warning.rs", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/7d0b6b75f05a669ee8cc76e651a654296d7d166c/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0b6b75f05a669ee8cc76e651a654296d7d166c/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.rs?ref=7d0b6b75f05a669ee8cc76e651a654296d7d166c", "patch": "@@ -11,11 +11,47 @@\n // compile-pass\n \n        //! Test with [Foo::baz], [Bar::foo], ...\n-       //! , [Uniooon::X] and [Qux::Z].\n-       //! .\n-       //! , [Uniooon::X] and [Qux::Z].\n+     //! , [Uniooon::X] and [Qux::Z].\n+       //!\n+      //! , [Uniooon::X] and [Qux::Z].\n \n        /// [Qux:Y]\n pub struct Foo {\n     pub bar: usize,\n }\n+\n+/// Foo\n+/// bar [BarA] bar\n+/// baz\n+pub fn a() {}\n+\n+/**\n+ * Foo\n+ * bar [BarB] bar\n+ * baz\n+ */\n+pub fn b() {}\n+\n+/** Foo\n+\n+bar [BarC] bar\n+baz\n+\n+    let bar_c_1 = 0;\n+    let bar_c_2 = 0;\n+    let g = [bar_c_1];\n+    let h = g[bar_c_2];\n+\n+*/\n+pub fn c() {}\n+\n+#[doc = \"Foo\\nbar [BarD] bar\\nbaz\"]\n+pub fn d() {}\n+\n+macro_rules! f {\n+    ($f:expr) => {\n+        #[doc = $f]\n+        pub fn f() {}\n+    }\n+}\n+f!(\"Foo\\nbar [BarF] bar\\nbaz\");"}, {"sha": "52adba5679fe0eb67a2996c57d958fc280694c05", "filename": "src/test/rustdoc-ui/intra-links-warning.stderr", "status": "modified", "additions": 75, "deletions": 12, "changes": 87, "blob_url": "https://github.com/rust-lang/rust/blob/7d0b6b75f05a669ee8cc76e651a654296d7d166c/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7d0b6b75f05a669ee8cc76e651a654296d7d166c/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-warning.stderr?ref=7d0b6b75f05a669ee8cc76e651a654296d7d166c", "patch": "@@ -11,32 +11,95 @@ warning: `[Bar::foo]` cannot be resolved, ignoring it...\n    |                                   ^^^^^^^^ cannot be resolved, ignoring\n \n warning: `[Uniooon::X]` cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:14:15\n+  --> $DIR/intra-links-warning.rs:14:13\n    |\n-14 |        //! , [Uniooon::X] and [Qux::Z].\n-   |               ^^^^^^^^^^ cannot be resolved, ignoring\n+14 |      //! , [Uniooon::X] and [Qux::Z].\n+   |             ^^^^^^^^^^ cannot be resolved, ignoring\n \n warning: `[Qux::Z]` cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:14:32\n+  --> $DIR/intra-links-warning.rs:14:30\n    |\n-14 |        //! , [Uniooon::X] and [Qux::Z].\n-   |                                ^^^^^^ cannot be resolved, ignoring\n+14 |      //! , [Uniooon::X] and [Qux::Z].\n+   |                              ^^^^^^ cannot be resolved, ignoring\n \n warning: `[Uniooon::X]` cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:16:15\n+  --> $DIR/intra-links-warning.rs:16:14\n    |\n-16 |        //! , [Uniooon::X] and [Qux::Z].\n-   |               ^^^^^^^^^^ cannot be resolved, ignoring\n+16 |       //! , [Uniooon::X] and [Qux::Z].\n+   |              ^^^^^^^^^^ cannot be resolved, ignoring\n \n warning: `[Qux::Z]` cannot be resolved, ignoring it...\n-  --> $DIR/intra-links-warning.rs:16:32\n+  --> $DIR/intra-links-warning.rs:16:31\n    |\n-16 |        //! , [Uniooon::X] and [Qux::Z].\n-   |                                ^^^^^^ cannot be resolved, ignoring\n+16 |       //! , [Uniooon::X] and [Qux::Z].\n+   |                               ^^^^^^ cannot be resolved, ignoring\n \n warning: `[Qux:Y]` cannot be resolved, ignoring it...\n   --> $DIR/intra-links-warning.rs:18:13\n    |\n 18 |        /// [Qux:Y]\n    |             ^^^^^ cannot be resolved, ignoring\n \n+warning: `[BarA]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:24:10\n+   |\n+24 | /// bar [BarA] bar\n+   |          ^^^^ cannot be resolved, ignoring\n+\n+warning: `[BarB]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:28:1\n+   |\n+28 | / /**\n+29 | |  * Foo\n+30 | |  * bar [BarB] bar\n+31 | |  * baz\n+32 | |  */\n+   | |___^\n+   |\n+   = note: the link appears in this line:\n+           \n+            bar [BarB] bar\n+                 ^^^^\n+\n+warning: `[BarC]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:35:1\n+   |\n+35 | / /** Foo\n+36 | |\n+37 | | bar [BarC] bar\n+38 | | baz\n+...  |\n+44 | |\n+45 | | */\n+   | |__^\n+   |\n+   = note: the link appears in this line:\n+           \n+           bar [BarC] bar\n+                ^^^^\n+\n+warning: `[BarD]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:48:1\n+   |\n+48 | #[doc = \"Foo/nbar [BarD] bar/nbaz\"]\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the link appears in this line:\n+           \n+           bar [BarD] bar\n+                ^^^^\n+\n+warning: `[BarF]` cannot be resolved, ignoring it...\n+  --> $DIR/intra-links-warning.rs:53:9\n+   |\n+53 |         #[doc = $f]\n+   |         ^^^^^^^^^^^\n+...\n+57 | f!(\"Foo/nbar [BarF] bar/nbaz\");\n+   | ------------------------------- in this macro invocation\n+   |\n+   = note: the link appears in this line:\n+           \n+           bar [BarF] bar\n+                ^^^^\n+"}]}