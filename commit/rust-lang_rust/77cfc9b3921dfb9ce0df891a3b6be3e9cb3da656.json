{"sha": "77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656", "node_id": "C_kwDOAAsO6NoAKDc3Y2ZjOWIzOTIxZGZiOWNlMGRmODkxYTNiNmJlM2U5Y2IzZGE2NTY", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-30T22:21:29Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-09-30T22:21:29Z"}, "message": "Fix type alias hovers not rendering generic parameters", "tree": {"sha": "13e6a1e4fa4d9d629046bbbf5766944eb2eb451e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13e6a1e4fa4d9d629046bbbf5766944eb2eb451e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656", "html_url": "https://github.com/rust-lang/rust/commit/77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39eaf7864cd786d53e98771864a689ff0f9b9259", "url": "https://api.github.com/repos/rust-lang/rust/commits/39eaf7864cd786d53e98771864a689ff0f9b9259", "html_url": "https://github.com/rust-lang/rust/commit/39eaf7864cd786d53e98771864a689ff0f9b9259"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "27b2f445d73cabfb415cf8d7b5625569e6355767", "filename": "crates/hir/src/display.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656/crates%2Fhir%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656/crates%2Fhir%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdisplay.rs?ref=77cfc9b3921dfb9ce0df891a3b6be3e9cb3da656", "patch": "@@ -492,6 +492,9 @@ impl HirDisplay for TypeAlias {\n         write_visibility(self.module(f.db).id, self.visibility(f.db), f)?;\n         let data = f.db.type_alias_data(self.id);\n         write!(f, \"type {}\", data.name)?;\n+        let def_id = GenericDefId::TypeAliasId(self.id);\n+        write_generic_params(def_id, f)?;\n+        write_where_clause(def_id, f)?;\n         if !data.bounds.is_empty() {\n             f.write_str(\": \")?;\n             f.write_joined(&data.bounds, \" + \")?;"}]}