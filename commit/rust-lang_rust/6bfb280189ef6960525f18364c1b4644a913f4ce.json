{"sha": "6bfb280189ef6960525f18364c1b4644a913f4ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZmIyODAxODllZjY5NjA1MjVmMTgzNjRjMWI0NjQ0YTkxM2Y0Y2U=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-01T18:53:32Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-02-01T18:53:32Z"}, "message": "deprecate before_exec in favor of unsafe pre_exec", "tree": {"sha": "ca62a24fbaaa6b0ff7437817038a6ba8a17797f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca62a24fbaaa6b0ff7437817038a6ba8a17797f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bfb280189ef6960525f18364c1b4644a913f4ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bfb280189ef6960525f18364c1b4644a913f4ce", "html_url": "https://github.com/rust-lang/rust/commit/6bfb280189ef6960525f18364c1b4644a913f4ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bfb280189ef6960525f18364c1b4644a913f4ce/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "742fcc71672b71957e8050964ffb9cd06015f550", "url": "https://api.github.com/repos/rust-lang/rust/commits/742fcc71672b71957e8050964ffb9cd06015f550", "html_url": "https://github.com/rust-lang/rust/commit/742fcc71672b71957e8050964ffb9cd06015f550"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "f5fc26dc9cca6c4550645087d3a27208d2fdafb9", "filename": "src/libstd/sys/unix/ext/process.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb280189ef6960525f18364c1b4644a913f4ce/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb280189ef6960525f18364c1b4644a913f4ce/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Fprocess.rs?ref=6bfb280189ef6960525f18364c1b4644a913f4ce", "patch": "@@ -45,12 +45,32 @@ pub trait CommandExt {\n     /// like `malloc` or acquiring a mutex are not guaranteed to work (due to\n     /// other threads perhaps still running when the `fork` was run).\n     ///\n+    /// This also means that all resources such as file descriptors and\n+    /// memory-mapped regions got duplicated. It is your responsibility to make\n+    /// sure that the closure does not violate library invariants by making\n+    /// invalid use of these duplicates.\n+    ///\n     /// When this closure is run, aspects such as the stdio file descriptors and\n     /// working directory have successfully been changed, so output to these\n     /// locations may not appear where intended.\n+    #[stable(feature = \"process_pre_exec\", since = \"1.34.0\")]\n+    unsafe fn pre_exec<F>(&mut self, f: F) -> &mut process::Command\n+        where F: FnMut() -> io::Result<()> + Send + Sync + 'static;\n+\n+    /// Schedules a closure to be run just before the `exec` function is\n+    /// invoked.\n+    ///\n+    /// This method should be unsafe, so it got deprecated in favor of the\n+    /// unsafe [`pre_exec`].\n+    ///\n+    /// [`pre_exec`]: #tymethod.pre_exec\n     #[stable(feature = \"process_exec\", since = \"1.15.0\")]\n+    #[rustc_deprecated(since = \"1.34.0\", reason = \"should be unsafe, use `pre_exec` instead\")]\n     fn before_exec<F>(&mut self, f: F) -> &mut process::Command\n-        where F: FnMut() -> io::Result<()> + Send + Sync + 'static;\n+        where F: FnMut() -> io::Result<()> + Send + Sync + 'static\n+    {\n+        unsafe { self.pre_exec(f) }\n+    }\n \n     /// Performs all the required setup by this `Command`, followed by calling\n     /// the `execvp` syscall.\n@@ -97,10 +117,10 @@ impl CommandExt for process::Command {\n         self\n     }\n \n-    fn before_exec<F>(&mut self, f: F) -> &mut process::Command\n+    unsafe fn pre_exec<F>(&mut self, f: F) -> &mut process::Command\n         where F: FnMut() -> io::Result<()> + Send + Sync + 'static\n     {\n-        self.as_inner_mut().before_exec(Box::new(f));\n+        self.as_inner_mut().pre_exec(Box::new(f));\n         self\n     }\n "}, {"sha": "9975064ca655fa45868f58dfab98692e4c385110", "filename": "src/libstd/sys/unix/process/process_common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6bfb280189ef6960525f18364c1b4644a913f4ce/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bfb280189ef6960525f18364c1b4644a913f4ce/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_common.rs?ref=6bfb280189ef6960525f18364c1b4644a913f4ce", "patch": "@@ -149,7 +149,7 @@ impl Command {\n         &mut self.closures\n     }\n \n-    pub fn before_exec(&mut self,\n+    pub unsafe fn pre_exec(&mut self,\n                        f: Box<dyn FnMut() -> io::Result<()> + Send + Sync>) {\n         self.closures.push(f);\n     }"}]}