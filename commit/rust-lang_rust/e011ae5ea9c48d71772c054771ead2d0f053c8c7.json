{"sha": "e011ae5ea9c48d71772c054771ead2d0f053c8c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwMTFhZTVlYTljNDhkNzE3NzJjMDU0NzcxZWFkMmQwZjA1M2M4Yzc=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-07T23:10:53Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-03-26T18:23:57Z"}, "message": "Cleanup trait search", "tree": {"sha": "2b7b0c276c79eb049ec08bbd12076dc7b08ea444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2b7b0c276c79eb049ec08bbd12076dc7b08ea444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e011ae5ea9c48d71772c054771ead2d0f053c8c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e011ae5ea9c48d71772c054771ead2d0f053c8c7", "html_url": "https://github.com/rust-lang/rust/commit/e011ae5ea9c48d71772c054771ead2d0f053c8c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e011ae5ea9c48d71772c054771ead2d0f053c8c7/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60a836fc930d808e19b39ece8982e46912964aa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a836fc930d808e19b39ece8982e46912964aa1", "html_url": "https://github.com/rust-lang/rust/commit/60a836fc930d808e19b39ece8982e46912964aa1"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "d9fc678554ff6de1e961d4c604641c830fcb46a1", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e011ae5ea9c48d71772c054771ead2d0f053c8c7/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e011ae5ea9c48d71772c054771ead2d0f053c8c7/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=e011ae5ea9c48d71772c054771ead2d0f053c8c7", "patch": "@@ -3233,18 +3233,15 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         }\n \n         let mut found_traits = Vec::new();\n-        let mut search_module = self.current_module;\n-        loop {\n-            // Look for the current trait.\n-            match self.current_trait_ref {\n-                Some((trait_def_id, _)) => {\n-                    if self.trait_item_map.contains_key(&(name, trait_def_id)) {\n-                        add_trait_info(&mut found_traits, trait_def_id, name);\n-                    }\n-                }\n-                None => {} // Nothing to do.\n+        // Look for the current trait.\n+        if let Some((trait_def_id, _)) = self.current_trait_ref {\n+            if self.trait_item_map.contains_key(&(name, trait_def_id)) {\n+                add_trait_info(&mut found_traits, trait_def_id, name);\n             }\n+        }\n \n+        let mut search_module = self.current_module;\n+        loop {\n             // Look for trait children.\n             let mut search_in_module = |module: Module<'a>| module.for_each_child(|_, ns, binding| {\n                 if ns != TypeNS { return }"}]}