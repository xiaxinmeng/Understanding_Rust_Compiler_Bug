{"sha": "f8653006d3f714348f05195e2597040aa3acf916", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NjUzMDA2ZDNmNzE0MzQ4ZjA1MTk1ZTI1OTcwNDBhYTNhY2Y5MTY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-09T16:32:00Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-24T17:27:38Z"}, "message": "ufcs with annot in position 1 and 2", "tree": {"sha": "4535ec318acbb73e2a853266804e99a17662264b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4535ec318acbb73e2a853266804e99a17662264b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8653006d3f714348f05195e2597040aa3acf916", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8653006d3f714348f05195e2597040aa3acf916", "html_url": "https://github.com/rust-lang/rust/commit/f8653006d3f714348f05195e2597040aa3acf916", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8653006d3f714348f05195e2597040aa3acf916/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05c1b89308dc92cf05deb6bc3c051346006be80c", "url": "https://api.github.com/repos/rust-lang/rust/commits/05c1b89308dc92cf05deb6bc3c051346006be80c", "html_url": "https://github.com/rust-lang/rust/commit/05c1b89308dc92cf05deb6bc3c051346006be80c"}], "stats": {"total": 240, "additions": 240, "deletions": 0}, "files": [{"sha": "5ac2ba5fa480a564076f15e535836021c24d4e12", "filename": "src/test/ui/nll/user-annotations/method-ufcs-1.rs", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-1.rs?ref=f8653006d3f714348f05195e2597040aa3acf916", "patch": "@@ -0,0 +1,75 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Unit test for the \"user substitutions\" that are annotated on each\n+// node.\n+\n+#![feature(nll)]\n+\n+trait Bazoom<T>: Sized {\n+    fn method<U>(self, arg: T, arg2: U) { }\n+}\n+\n+impl<T, U> Bazoom<U> for T {\n+}\n+\n+fn annot_underscore() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method::<_>(&a, b, c); // OK\n+}\n+\n+fn annot_reference_any_lifetime() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <&u32 as Bazoom<_>>::method(&a, b, c); // OK\n+}\n+\n+fn annot_reference_static_lifetime() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    let x = <&'static u32 as Bazoom<_>>::method;\n+    x(&a, b, c); //~ ERROR\n+}\n+\n+fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <&'a u32 as Bazoom<_>>::method(&a, b, c); //~ ERROR\n+}\n+\n+fn annot_reference_named_lifetime_ok<'a>(a: &'a u32) {\n+    let b = 44;\n+    let c = 66;\n+    <&'a u32 as Bazoom<_>>::method(&a, b, c);\n+}\n+\n+fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let _closure = || {\n+        let c = 66;\n+        <&'a u32 as Bazoom<_>>::method(&a, b, c); //~ ERROR\n+    };\n+}\n+\n+fn annot_reference_named_lifetime_in_closure_ok<'a>(a: &'a u32) {\n+    let b = 44;\n+    let c = 66;\n+    let _closure = || {\n+        <&'a u32 as Bazoom<_>>::method(&a, b, c);\n+    };\n+}\n+\n+fn main() { }"}, {"sha": "f439748ef97b970ccecb7d6c1c082dc747049c16", "filename": "src/test/ui/nll/user-annotations/method-ufcs-1.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-1.stderr?ref=f8653006d3f714348f05195e2597040aa3acf916", "patch": "@@ -0,0 +1,45 @@\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/method-ufcs-1.rs:42:7\n+   |\n+LL |     x(&a, b, c); //~ ERROR\n+   |       ^^ borrowed value does not live long enough\n+LL | }\n+   | - `a` dropped here while still borrowed\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/method-ufcs-1.rs:49:36\n+   |\n+LL |     <&'a u32 as Bazoom<_>>::method(&a, b, c); //~ ERROR\n+   |                                    ^^ borrowed value does not live long enough\n+LL | }\n+   | - `a` dropped here while still borrowed\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 45:35...\n+  --> $DIR/method-ufcs-1.rs:45:35\n+   |\n+LL | fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n+   |                                   ^^\n+\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/method-ufcs-1.rs:63:41\n+   |\n+LL |     let _closure = || {\n+   |                    -- value captured here\n+LL |         let c = 66;\n+LL |         <&'a u32 as Bazoom<_>>::method(&a, b, c); //~ ERROR\n+   |                                         ^ borrowed value does not live long enough\n+LL |     };\n+LL | }\n+   | - `a` dropped here while still borrowed\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 58:46...\n+  --> $DIR/method-ufcs-1.rs:58:46\n+   |\n+LL | fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n+   |                                              ^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0597`."}, {"sha": "082cc561ae78f1266aaa1531ccfafb7d9f5c031f", "filename": "src/test/ui/nll/user-annotations/method-ufcs-2.rs", "status": "added", "additions": 75, "deletions": 0, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-2.rs?ref=f8653006d3f714348f05195e2597040aa3acf916", "patch": "@@ -0,0 +1,75 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Unit test for the \"user substitutions\" that are annotated on each\n+// node.\n+\n+#![feature(nll)]\n+\n+trait Bazoom<T>: Sized {\n+    fn method<U>(self, arg: T, arg2: U) { }\n+}\n+\n+impl<T, U> Bazoom<U> for T {\n+}\n+\n+fn annot_underscore() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<_>>::method(a, &b, c); // OK\n+}\n+\n+fn annot_reference_any_lifetime() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<&u32>>::method(a, &b, c); // OK\n+}\n+\n+fn annot_reference_static_lifetime() {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    let x = <&'static u32 as Bazoom<_>>::method;\n+    x(&a, b, c); //~ ERROR\n+}\n+\n+fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let c = 66;\n+    <_ as Bazoom<&'a u32>>::method(a, &b, c); //~ ERROR\n+}\n+\n+fn annot_reference_named_lifetime_ok<'a>(b: &'a u32) {\n+    let a = 44;\n+    let c = 66;\n+    <_ as Bazoom<&'a u32>>::method(a, &b, c);\n+}\n+\n+fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n+    let a = 22;\n+    let b = 44;\n+    let _closure = || {\n+        let c = 66;\n+        <_ as Bazoom<&'a u32>>::method(a, &b, c); //~ ERROR\n+    };\n+}\n+\n+fn annot_reference_named_lifetime_in_closure_ok<'a>(b: &'a u32) {\n+    let a = 44;\n+    let c = 66;\n+    let _closure = || {\n+        <_ as Bazoom<&'a u32>>::method(a, &b, c);\n+    };\n+}\n+\n+fn main() { }"}, {"sha": "dc0f559659001fa97da7d1cb799572dcb7baa097", "filename": "src/test/ui/nll/user-annotations/method-ufcs-2.stderr", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8653006d3f714348f05195e2597040aa3acf916/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fmethod-ufcs-2.stderr?ref=f8653006d3f714348f05195e2597040aa3acf916", "patch": "@@ -0,0 +1,45 @@\n+error[E0597]: `a` does not live long enough\n+  --> $DIR/method-ufcs-2.rs:42:7\n+   |\n+LL |     x(&a, b, c); //~ ERROR\n+   |       ^^ borrowed value does not live long enough\n+LL | }\n+   | - `a` dropped here while still borrowed\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n+\n+error[E0597]: `b` does not live long enough\n+  --> $DIR/method-ufcs-2.rs:49:39\n+   |\n+LL |     <_ as Bazoom<&'a u32>>::method(a, &b, c); //~ ERROR\n+   |                                       ^^ borrowed value does not live long enough\n+LL | }\n+   | - `b` dropped here while still borrowed\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 45:35...\n+  --> $DIR/method-ufcs-2.rs:45:35\n+   |\n+LL | fn annot_reference_named_lifetime<'a>(_d: &'a u32) {\n+   |                                   ^^\n+\n+error[E0597]: `b` does not live long enough\n+  --> $DIR/method-ufcs-2.rs:63:44\n+   |\n+LL |     let _closure = || {\n+   |                    -- value captured here\n+LL |         let c = 66;\n+LL |         <_ as Bazoom<&'a u32>>::method(a, &b, c); //~ ERROR\n+   |                                            ^ borrowed value does not live long enough\n+LL |     };\n+LL | }\n+   | - `b` dropped here while still borrowed\n+   |\n+note: borrowed value must be valid for the lifetime 'a as defined on the function body at 58:46...\n+  --> $DIR/method-ufcs-2.rs:58:46\n+   |\n+LL | fn annot_reference_named_lifetime_in_closure<'a>(_: &'a u32) {\n+   |                                              ^^\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0597`."}]}