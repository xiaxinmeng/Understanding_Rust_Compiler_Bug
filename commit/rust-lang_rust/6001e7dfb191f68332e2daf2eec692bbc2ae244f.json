{"sha": "6001e7dfb191f68332e2daf2eec692bbc2ae244f", "node_id": "C_kwDOAAsO6NoAKDYwMDFlN2RmYjE5MWY2ODMzMmUyZGFmMmVlYzY5MmJiYzJhZTI0NGY", "commit": {"author": {"name": "Stanislav", "email": "enomado@users.noreply.github.com", "date": "2022-09-04T16:45:50Z"}, "committer": {"name": "Stanislav", "email": "enomado@users.noreply.github.com", "date": "2022-09-04T16:45:50Z"}, "message": "fix", "tree": {"sha": "6da8052f92c332c0859edb366b9ac46c788c9c48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6da8052f92c332c0859edb366b9ac46c788c9c48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6001e7dfb191f68332e2daf2eec692bbc2ae244f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6001e7dfb191f68332e2daf2eec692bbc2ae244f", "html_url": "https://github.com/rust-lang/rust/commit/6001e7dfb191f68332e2daf2eec692bbc2ae244f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6001e7dfb191f68332e2daf2eec692bbc2ae244f/comments", "author": {"login": "enomado", "id": 707007, "node_id": "MDQ6VXNlcjcwNzAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/707007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enomado", "html_url": "https://github.com/enomado", "followers_url": "https://api.github.com/users/enomado/followers", "following_url": "https://api.github.com/users/enomado/following{/other_user}", "gists_url": "https://api.github.com/users/enomado/gists{/gist_id}", "starred_url": "https://api.github.com/users/enomado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enomado/subscriptions", "organizations_url": "https://api.github.com/users/enomado/orgs", "repos_url": "https://api.github.com/users/enomado/repos", "events_url": "https://api.github.com/users/enomado/events{/privacy}", "received_events_url": "https://api.github.com/users/enomado/received_events", "type": "User", "site_admin": false}, "committer": {"login": "enomado", "id": 707007, "node_id": "MDQ6VXNlcjcwNzAwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/707007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/enomado", "html_url": "https://github.com/enomado", "followers_url": "https://api.github.com/users/enomado/followers", "following_url": "https://api.github.com/users/enomado/following{/other_user}", "gists_url": "https://api.github.com/users/enomado/gists{/gist_id}", "starred_url": "https://api.github.com/users/enomado/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/enomado/subscriptions", "organizations_url": "https://api.github.com/users/enomado/orgs", "repos_url": "https://api.github.com/users/enomado/repos", "events_url": "https://api.github.com/users/enomado/events{/privacy}", "received_events_url": "https://api.github.com/users/enomado/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba40aa72ac1e2d5ddd1f0732e27a84b87692ccae", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba40aa72ac1e2d5ddd1f0732e27a84b87692ccae", "html_url": "https://github.com/rust-lang/rust/commit/ba40aa72ac1e2d5ddd1f0732e27a84b87692ccae"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "53a7a3a2173030216d372ac0d0f1f0d72c1fbe15", "filename": "crates/ide/src/references.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6001e7dfb191f68332e2daf2eec692bbc2ae244f/crates%2Fide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6001e7dfb191f68332e2daf2eec692bbc2ae244f/crates%2Fide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Freferences.rs?ref=6001e7dfb191f68332e2daf2eec692bbc2ae244f", "patch": "@@ -124,12 +124,6 @@ fn retain_import_usages(usages: &mut UsageSearchResult, sema: &Semantics<'_, Roo\n             if let Some(node) = maybe_node {\n                 let res = match node {\n                     syntax::NodeOrToken::Node(x) => !matches!(x.kind(), USE),\n-                        if matches!(x.kind(), USE) {\n-                            false\n-                        } else {\n-                            true\n-                        }\n-                    }\n                     syntax::NodeOrToken::Token(_) => true,\n                 };\n                 res"}]}