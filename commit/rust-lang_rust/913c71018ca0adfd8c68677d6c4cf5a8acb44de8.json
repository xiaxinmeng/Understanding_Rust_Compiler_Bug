{"sha": "913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxM2M3MTAxOGNhMGFkZmQ4YzY4Njc3ZDZjNGNmNWE4YWNiNDRkZTg=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-24T22:41:32Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-24T22:50:55Z"}, "message": "upper_case_acronyms: add io-toml tests and bless previous tests", "tree": {"sha": "db2e8da5182140dc9b74a8b4a3acccfa00f8dad4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db2e8da5182140dc9b74a8b4a3acccfa00f8dad4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "html_url": "https://github.com/rust-lang/rust/commit/913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59750dceb8bb7a743efc4b4a84c3ea79e31791a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/59750dceb8bb7a743efc4b4a84c3ea79e31791a5", "html_url": "https://github.com/rust-lang/rust/commit/59750dceb8bb7a743efc4b4a84c3ea79e31791a5"}], "stats": {"total": 130, "additions": 103, "deletions": 27}, "files": [{"sha": "0470e1dbbb8122ae9804b2634f05986e9458a372", "filename": "clippy_lints/src/upper_case_acronyms.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fupper_case_acronyms.rs?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -16,7 +16,7 @@ declare_clippy_lint! {\n     /// for more.\n     ///\n     /// By default, the lint only triggers on fully-capitalized names.\n-    /// You can use the `upper_case_acronyms_aggressive: true` config option to enable linting\n+    /// You can use the `upper-case-acronyms-aggressive: true` config option to enable linting\n     /// on all camel case names\n     ///\n     /// **Known problems:** When two acronyms are contiguous, the lint can't tell where\n@@ -82,7 +82,7 @@ fn check_ident(cx: &EarlyContext<'_>, ident: &Ident, be_aggressive: bool) {\n     // (and don't warn)\n     if (ident.chars().all(|c| c.is_ascii_uppercase()) && ident.len() > 2)\n     // otherwise, warn if we have SOmeTHING lIKE THIs but only warn with the aggressive \n-    // upper_case_acronyms_aggressive config option enabled\n+    // upper-case-acronyms-aggressive config option enabled\n     || (be_aggressive && ident != &corrected)\n     {\n         span_lint_and_sugg("}, {"sha": "d83080b69f5e5311b68bc8ccd21d3c42bf107f51", "filename": "tests/ui-toml/toml_unknown_key/conf_unknown_key.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ftoml_unknown_key%2Fconf_unknown_key.stderr?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -1,4 +1,4 @@\n-error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `msrv`, `blacklisted-names`, `cognitive-complexity-threshold`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `trivial-copy-size-limit`, `pass-by-value-size-limit`, `too-many-lines-threshold`, `array-size-threshold`, `vec-box-size-threshold`, `max-trait-bounds`, `max-struct-bools`, `max-fn-params-bools`, `warn-on-all-wildcard-imports`, `disallowed-methods`, `unreadable-literal-lint-fractions`, `cargo-ignore-publish`, `third-party` at line 5 column 1\n+error: error reading Clippy's configuration file `$DIR/clippy.toml`: unknown field `foobar`, expected one of `msrv`, `blacklisted-names`, `cognitive-complexity-threshold`, `cyclomatic-complexity-threshold`, `doc-valid-idents`, `too-many-arguments-threshold`, `type-complexity-threshold`, `single-char-binding-names-threshold`, `too-large-for-stack`, `enum-variant-name-threshold`, `enum-variant-size-threshold`, `verbose-bit-mask-threshold`, `literal-representation-threshold`, `trivial-copy-size-limit`, `pass-by-value-size-limit`, `too-many-lines-threshold`, `array-size-threshold`, `vec-box-size-threshold`, `max-trait-bounds`, `max-struct-bools`, `max-fn-params-bools`, `warn-on-all-wildcard-imports`, `disallowed-methods`, `unreadable-literal-lint-fractions`, `upper-case-acronyms-aggressive`, `cargo-ignore-publish`, `third-party` at line 5 column 1\n \n error: aborting due to previous error\n "}, {"sha": "cc94ec53e1358fb6006ba16e506a96484122e669", "filename": "tests/ui-toml/upper_case_acronyms_aggressive/clippy.toml", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fclippy.toml", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fclippy.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fclippy.toml?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -0,0 +1 @@\n+upper-case-acronyms-aggressive = true"}, {"sha": "fdf8905f812f6fbc1fa587f9aad0fc5116fa893d", "filename": "tests/ui-toml/upper_case_acronyms_aggressive/upper_case_acronyms.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fupper_case_acronyms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fupper_case_acronyms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fupper_case_acronyms.rs?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -0,0 +1,22 @@\n+#![warn(clippy::upper_case_acronyms)]\n+\n+struct HTTPResponse; // not linted by default, but with cfg option\n+\n+struct CString; // not linted\n+\n+enum Flags {\n+    NS, // not linted\n+    CWR,\n+    ECE,\n+    URG,\n+    ACK,\n+    PSH,\n+    RST,\n+    SYN,\n+    FIN,\n+}\n+\n+struct GCCLLVMSomething; // linted with cfg option, beware that lint suggests `GccllvmSomething` instead of\n+                         // `GccLlvmSomething`\n+\n+fn main() {}"}, {"sha": "1cc59dc45f2aa6c05d35da735c9ae2e83b53923f", "filename": "tests/ui-toml/upper_case_acronyms_aggressive/upper_case_acronyms.stderr", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fupper_case_acronyms.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fupper_case_acronyms.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Fupper_case_acronyms_aggressive%2Fupper_case_acronyms.stderr?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -0,0 +1,70 @@\n+error: name `HTTPResponse` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:3:8\n+   |\n+LL | struct HTTPResponse; // not linted by default, but with cfg option\n+   |        ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `HttpResponse`\n+   |\n+   = note: `-D clippy::upper-case-acronyms` implied by `-D warnings`\n+\n+error: name `NS` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:8:5\n+   |\n+LL |     NS, // not linted\n+   |     ^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Ns`\n+\n+error: name `CWR` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:9:5\n+   |\n+LL |     CWR,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Cwr`\n+\n+error: name `ECE` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:10:5\n+   |\n+LL |     ECE,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Ece`\n+\n+error: name `URG` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:11:5\n+   |\n+LL |     URG,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Urg`\n+\n+error: name `ACK` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:12:5\n+   |\n+LL |     ACK,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Ack`\n+\n+error: name `PSH` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:13:5\n+   |\n+LL |     PSH,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Psh`\n+\n+error: name `RST` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:14:5\n+   |\n+LL |     RST,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Rst`\n+\n+error: name `SYN` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:15:5\n+   |\n+LL |     SYN,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Syn`\n+\n+error: name `FIN` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:16:5\n+   |\n+LL |     FIN,\n+   |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Fin`\n+\n+error: name `GCCLLVMSomething` contains a capitalized acronym\n+  --> $DIR/upper_case_acronyms.rs:19:8\n+   |\n+LL | struct GCCLLVMSomething; // linted with cfg option, beware that lint suggests `GccllvmSomething` instead of\n+   |        ^^^^^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `GccllvmSomething`\n+\n+error: aborting due to 11 previous errors\n+"}, {"sha": "fdf8905f812f6fbc1fa587f9aad0fc5116fa893d", "filename": "tests/ui/upper_case_acronyms.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui%2Fupper_case_acronyms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui%2Fupper_case_acronyms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fupper_case_acronyms.rs?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -1,11 +1,11 @@\n #![warn(clippy::upper_case_acronyms)]\n \n-struct HTTPResponse; // linted\n+struct HTTPResponse; // not linted by default, but with cfg option\n \n struct CString; // not linted\n \n enum Flags {\n-    NS, // linted\n+    NS, // not linted\n     CWR,\n     ECE,\n     URG,\n@@ -16,6 +16,7 @@ enum Flags {\n     FIN,\n }\n \n-struct GCCLLVMSomething; // linted, beware that lint suggests `GccllvmSomething` instead of `GccLlvmSomething`\n+struct GCCLLVMSomething; // linted with cfg option, beware that lint suggests `GccllvmSomething` instead of\n+                         // `GccLlvmSomething`\n \n fn main() {}"}, {"sha": "bbe38991e52714a89faff46fd844bbc4a8adb346", "filename": "tests/ui/upper_case_acronyms.stderr", "status": "modified", "additions": 3, "deletions": 21, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui%2Fupper_case_acronyms.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/913c71018ca0adfd8c68677d6c4cf5a8acb44de8/tests%2Fui%2Fupper_case_acronyms.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fupper_case_acronyms.stderr?ref=913c71018ca0adfd8c68677d6c4cf5a8acb44de8", "patch": "@@ -1,22 +1,10 @@\n-error: name `HTTPResponse` contains a capitalized acronym\n-  --> $DIR/upper_case_acronyms.rs:3:8\n-   |\n-LL | struct HTTPResponse; // linted\n-   |        ^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `HttpResponse`\n-   |\n-   = note: `-D clippy::upper-case-acronyms` implied by `-D warnings`\n-\n-error: name `NS` contains a capitalized acronym\n-  --> $DIR/upper_case_acronyms.rs:8:5\n-   |\n-LL |     NS, // linted\n-   |     ^^ help: consider making the acronym lowercase, except the initial letter (notice the capitalization): `Ns`\n-\n error: name `CWR` contains a capitalized acronym\n   --> $DIR/upper_case_acronyms.rs:9:5\n    |\n LL |     CWR,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Cwr`\n+   |\n+   = note: `-D clippy::upper-case-acronyms` implied by `-D warnings`\n \n error: name `ECE` contains a capitalized acronym\n   --> $DIR/upper_case_acronyms.rs:10:5\n@@ -60,11 +48,5 @@ error: name `FIN` contains a capitalized acronym\n LL |     FIN,\n    |     ^^^ help: consider making the acronym lowercase, except the initial letter: `Fin`\n \n-error: name `GCCLLVMSomething` contains a capitalized acronym\n-  --> $DIR/upper_case_acronyms.rs:19:8\n-   |\n-LL | struct GCCLLVMSomething; // linted, beware that lint suggests `GccllvmSomething` instead of `GccLlvmSomething`\n-   |        ^^^^^^^^^^^^^^^^ help: consider making the acronym lowercase, except the initial letter: `GccllvmSomething`\n-\n-error: aborting due to 11 previous errors\n+error: aborting due to 8 previous errors\n "}]}