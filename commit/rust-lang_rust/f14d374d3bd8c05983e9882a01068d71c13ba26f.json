{"sha": "f14d374d3bd8c05983e9882a01068d71c13ba26f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNGQzNzRkM2JkOGMwNTk4M2U5ODgyYTAxMDY4ZDcxYzEzYmEyNmY=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-06T04:54:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-06T04:54:57Z"}, "message": "Rollup merge of #65066 - wesleywiser:fix_const_prop_ice_on_polymorphic_promoted_mir, r=oli-obk\n\n[const-prop] Fix ICE when trying to eval polymorphic promoted MIR\n\nFixes #64908\n\nr? @oli-obk\ncc @nikomatsakis @pnkfelix", "tree": {"sha": "95de9eb20842823530d64b4b14443b0e3342507d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95de9eb20842823530d64b4b14443b0e3342507d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f14d374d3bd8c05983e9882a01068d71c13ba26f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdmXOhCRBK7hj4Ov3rIwAAdHIIAJ9+DCr27psXomI46ML0j6gR\n/1Pbbxmr1+4AgfCQYBtd/HCjdM/aTbfoSaeOQnhOUYk06tVCiVbkJLNfp9xpwpOU\nYetQqiV5Gk1+iRB/sHZzSgCX0rV5pC9xFmkCqM/MHJR4DGm0iq4MUSbN5SH9UFw6\n0K9qZMEFSJsHrfMHcW87D/2XcfOCIEG+Bjgi8QPi6bpe8piLLmISTlT/agS/5szy\nbOQB7qNlS3S431UoTsL173hkuJeuQI+zWODAyOHxLrpS/nqG5oynms5WNpACViRb\nsnCuZqAQ3Pw7mpftQqMfFdwud87mduqiTZvPeapot4CMt1VOulSOFhj397uPKJc=\n=VK3H\n-----END PGP SIGNATURE-----\n", "payload": "tree 95de9eb20842823530d64b4b14443b0e3342507d\nparent df471c11760daeea221f4ae1161f907aa0d2890d\nparent e9009c86d2ed877e21011478f1083e3950507428\nauthor Tyler Mandry <tmandry@gmail.com> 1570337697 -0700\ncommitter GitHub <noreply@github.com> 1570337697 -0700\n\nRollup merge of #65066 - wesleywiser:fix_const_prop_ice_on_polymorphic_promoted_mir, r=oli-obk\n\n[const-prop] Fix ICE when trying to eval polymorphic promoted MIR\n\nFixes #64908\n\nr? @oli-obk\ncc @nikomatsakis @pnkfelix\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f14d374d3bd8c05983e9882a01068d71c13ba26f", "html_url": "https://github.com/rust-lang/rust/commit/f14d374d3bd8c05983e9882a01068d71c13ba26f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f14d374d3bd8c05983e9882a01068d71c13ba26f/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df471c11760daeea221f4ae1161f907aa0d2890d", "url": "https://api.github.com/repos/rust-lang/rust/commits/df471c11760daeea221f4ae1161f907aa0d2890d", "html_url": "https://github.com/rust-lang/rust/commit/df471c11760daeea221f4ae1161f907aa0d2890d"}, {"sha": "e9009c86d2ed877e21011478f1083e3950507428", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9009c86d2ed877e21011478f1083e3950507428", "html_url": "https://github.com/rust-lang/rust/commit/e9009c86d2ed877e21011478f1083e3950507428"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "3ba989529f18f1263b943da1e2f6d310d4c7d4a5", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=f14d374d3bd8c05983e9882a01068d71c13ba26f", "patch": "@@ -594,6 +594,13 @@ where\n             StaticKind::Promoted(promoted, promoted_substs) => {\n                 let substs = self.subst_from_frame_and_normalize_erasing_regions(promoted_substs);\n                 let instance = ty::Instance::new(place_static.def_id, substs);\n+\n+                // Even after getting `substs` from the frame, this instance may still be\n+                // polymorphic because `ConstProp` will try to promote polymorphic MIR.\n+                if instance.needs_subst() {\n+                    throw_inval!(TooGeneric);\n+                }\n+\n                 self.const_eval_raw(GlobalId {\n                     instance,\n                     promoted: Some(promoted),"}, {"sha": "b85cecda16e9550fb45726a14b0e55c367ff4cfb", "filename": "src/test/ui/consts/const-eval/issue-50814.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.rs?ref=f14d374d3bd8c05983e9882a01068d71c13ba26f", "patch": "@@ -11,7 +11,6 @@ struct Sum<A,B>(A,B);\n \n impl<A: Unsigned, B: Unsigned> Unsigned for Sum<A,B> {\n     const MAX: u8 = A::MAX + B::MAX; //~ ERROR any use of this value will cause an error\n-    //~| ERROR any use of this value will cause an error\n }\n \n fn foo<T>(_: T) -> &'static u8 {"}, {"sha": "707dfee7cd5b89c96b2128a858a80a5ebf91ef64", "filename": "src/test/ui/consts/const-eval/issue-50814.stderr", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-50814.stderr?ref=f14d374d3bd8c05983e9882a01068d71c13ba26f", "patch": "@@ -9,21 +9,13 @@ LL |     const MAX: u8 = A::MAX + B::MAX;\n    = note: `#[deny(const_err)]` on by default\n \n error[E0080]: evaluation of constant expression failed\n-  --> $DIR/issue-50814.rs:18:5\n+  --> $DIR/issue-50814.rs:17:5\n    |\n LL |     &Sum::<U8,U8>::MAX\n    |     ^-----------------\n    |      |\n    |      referenced constant has errors\n \n-error: any use of this value will cause an error\n-  --> $DIR/issue-50814.rs:13:21\n-   |\n-LL |     const MAX: u8 = A::MAX + B::MAX;\n-   |     ----------------^^^^^^^^^^^^^^^-\n-   |                     |\n-   |                     attempt to add with overflow\n-\n-error: aborting due to 3 previous errors\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0080`."}, {"sha": "d2e095072844ff1f6cd5a0baad255a07cac7c844", "filename": "src/test/ui/consts/const-eval/issue-64908.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-64908.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f14d374d3bd8c05983e9882a01068d71c13ba26f/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-64908.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fissue-64908.rs?ref=f14d374d3bd8c05983e9882a01068d71c13ba26f", "patch": "@@ -0,0 +1,20 @@\n+// run-pass\n+\n+// This test verifies that the `ConstProp` pass doesn't cause an ICE when evaluating polymorphic\n+// promoted MIR.\n+\n+pub trait ArrowPrimitiveType {\n+    type Native;\n+}\n+\n+pub fn new<T: ArrowPrimitiveType>() {\n+    assert_eq!(0, std::mem::size_of::<T::Native>());\n+}\n+\n+impl ArrowPrimitiveType for () {\n+    type Native = ();\n+}\n+\n+fn main() {\n+    new::<()>();\n+}"}]}