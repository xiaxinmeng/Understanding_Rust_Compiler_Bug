{"sha": "74be9458200febab1ca4bc8c0ef57f8ed1f096dc", "node_id": "C_kwDOAAsO6NoAKDc0YmU5NDU4MjAwZmViYWIxY2E0YmM4YzBlZjU3ZjhlZDFmMDk2ZGM", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-05-02T18:32:10Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-07-06T21:15:11Z"}, "message": "Expand comment in `with_hir_id_owner`.", "tree": {"sha": "8063e5490f4eef14c4dbb0a7dd807c0989e7bbac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8063e5490f4eef14c4dbb0a7dd807c0989e7bbac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74be9458200febab1ca4bc8c0ef57f8ed1f096dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74be9458200febab1ca4bc8c0ef57f8ed1f096dc", "html_url": "https://github.com/rust-lang/rust/commit/74be9458200febab1ca4bc8c0ef57f8ed1f096dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74be9458200febab1ca4bc8c0ef57f8ed1f096dc/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15530a1c84b6ccc7f321ac855a76702677de2563", "url": "https://api.github.com/repos/rust-lang/rust/commits/15530a1c84b6ccc7f321ac855a76702677de2563", "html_url": "https://github.com/rust-lang/rust/commit/15530a1c84b6ccc7f321ac855a76702677de2563"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "a5beb7b8e1ae19fca3f40ea42dd0690ae966a9b9", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/74be9458200febab1ca4bc8c0ef57f8ed1f096dc/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74be9458200febab1ca4bc8c0ef57f8ed1f096dc/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=74be9458200febab1ca4bc8c0ef57f8ed1f096dc", "patch": "@@ -491,6 +491,11 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         self.opt_local_def_id(node).unwrap_or_else(|| panic!(\"no entry for node id: `{:?}`\", node))\n     }\n \n+    /// Freshen the `LoweringContext` and ready it to lower a nested item.\n+    /// The lowered item is registered into `self.children`.\n+    ///\n+    /// This function sets up `HirId` lowering infrastructure,\n+    /// and stashes the shared mutable state to avoid pollution by the closure.\n     #[instrument(level = \"debug\", skip(self, f))]\n     fn with_hir_id_owner(\n         &mut self,\n@@ -509,8 +514,10 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n             std::mem::replace(&mut self.item_local_id_counter, hir::ItemLocalId::new(1));\n         let current_impl_trait_defs = std::mem::take(&mut self.impl_trait_defs);\n         let current_impl_trait_bounds = std::mem::take(&mut self.impl_trait_bounds);\n-        // Do not reset `next_node_id` and `node_id_to_def_id` as we want to refer to the\n-        // subdefinitions' nodes.\n+\n+        // Do not reset `next_node_id` and `node_id_to_def_id`:\n+        // we want `f` to be able to refer to the `LocalDefId`s that the caller created.\n+        // and the caller to refer to some of the subdefinitions' nodes' `LocalDefId`s.\n \n         // Always allocate the first `HirId` for the owner itself.\n         let _old = self.node_id_to_local_id.insert(owner, hir::ItemLocalId::new(0));"}]}