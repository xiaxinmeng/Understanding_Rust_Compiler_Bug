{"sha": "7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjOWFjNGY1YTY4MjdiZjBlZTg0NThhOWQwODY0MmE4YzYyZDU1ZTg=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-01-13T09:42:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-01-13T09:42:32Z"}, "message": "Rollup merge of #38995 - petrochenkov:minmax, r=GuillaumeGomez\n\nFix docs for min/max algorithms\n\nI thought at first \"what did they think about when stabilizing this!?\", but it turned out it's just wrong docs. Phew.\n\nr? @steveklabnik\n\nTest:\n```\nuse std::cmp::Ordering;\n\nstruct S(u8, u8);\n\nimpl PartialEq for S {\n    fn eq(&self, other: &Self) -> bool {\n        self.0 == other.0\n    }\n}\nimpl PartialOrd for S {\n    fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n        Some(self.0.cmp(&other.0))\n    }\n}\nimpl Ord for S {\n    fn cmp(&self, other: &Self) -> Ordering {\n        self.0.cmp(&other.0)\n    }\n}\n\nfn main() {\n    let arr = [S(0, 1), S(0, 2)];\n    println!(\"min {:?}\", arr.iter().min());\n    println!(\"min_by {:?}\", arr.iter().min_by(|x, y| x.0.cmp(&y.0)));\n    println!(\"min_by_key {:?}\", arr.iter().min_by_key(|x| x.0));\n    println!(\"max {:?}\", arr.iter().max());\n    println!(\"max_by {:?}\", arr.iter().max_by(|x, y| x.0.cmp(&y.0)));\n    println!(\"max_by_key {:?}\", arr.iter().max_by_key(|x| x.0));\n}\n```\nOutput:\n```\nrustc 1.15.0-beta.3 (a035041ba 2017-01-07)\nmin Some(S(0, 1))\nmin_by Some(S(0, 1))\nmin_by_key Some(S(0, 1))\nmax Some(S(0, 2))\nmax_by Some(S(0, 2))\nmax_by_key Some(S(0, 2))\n```", "tree": {"sha": "13f2eedaaa0af267580c41540d8ab94a8193e400", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13f2eedaaa0af267580c41540d8ab94a8193e400"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8", "html_url": "https://github.com/rust-lang/rust/commit/7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d2fb1225217a387f25e671210648231ddffcf45", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d2fb1225217a387f25e671210648231ddffcf45", "html_url": "https://github.com/rust-lang/rust/commit/6d2fb1225217a387f25e671210648231ddffcf45"}, {"sha": "bf0253475026bed9cedc849f709045e65ec2b821", "url": "https://api.github.com/repos/rust-lang/rust/commits/bf0253475026bed9cedc849f709045e65ec2b821", "html_url": "https://github.com/rust-lang/rust/commit/bf0253475026bed9cedc849f709045e65ec2b821"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "91c09c5530565144660d761ae36784e17d7fcec0", "filename": "src/libcore/iter/iterator.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8/src%2Flibcore%2Fiter%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8/src%2Flibcore%2Fiter%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fiterator.rs?ref=7c9ac4f5a6827bf0ee8458a9d08642a8c62d55e8", "patch": "@@ -1612,7 +1612,7 @@ pub trait Iterator {\n \n     /// Returns the maximum element of an iterator.\n     ///\n-    /// If the two elements are equally maximum, the latest element is\n+    /// If several elements are equally maximum, the last element is\n     /// returned.\n     ///\n     /// # Examples\n@@ -1638,7 +1638,7 @@ pub trait Iterator {\n \n     /// Returns the minimum element of an iterator.\n     ///\n-    /// If the two elements are equally minimum, the first element is\n+    /// If several elements are equally minimum, the first element is\n     /// returned.\n     ///\n     /// # Examples\n@@ -1665,8 +1665,8 @@ pub trait Iterator {\n     /// Returns the element that gives the maximum value from the\n     /// specified function.\n     ///\n-    /// Returns the rightmost element if the comparison determines two elements\n-    /// to be equally maximum.\n+    /// If several elements are equally maximum, the last element is\n+    /// returned.\n     ///\n     /// # Examples\n     ///\n@@ -1690,8 +1690,8 @@ pub trait Iterator {\n     /// Returns the element that gives the maximum value with respect to the\n     /// specified comparison function.\n     ///\n-    /// Returns the rightmost element if the comparison determines two elements\n-    /// to be equally maximum.\n+    /// If several elements are equally maximum, the last element is\n+    /// returned.\n     ///\n     /// # Examples\n     ///\n@@ -1715,8 +1715,8 @@ pub trait Iterator {\n     /// Returns the element that gives the minimum value from the\n     /// specified function.\n     ///\n-    /// Returns the latest element if the comparison determines two elements\n-    /// to be equally minimum.\n+    /// If several elements are equally minimum, the first element is\n+    /// returned.\n     ///\n     /// # Examples\n     ///\n@@ -1739,8 +1739,8 @@ pub trait Iterator {\n     /// Returns the element that gives the minimum value with respect to the\n     /// specified comparison function.\n     ///\n-    /// Returns the latest element if the comparison determines two elements\n-    /// to be equally minimum.\n+    /// If several elements are equally minimum, the first element is\n+    /// returned.\n     ///\n     /// # Examples\n     ///"}]}