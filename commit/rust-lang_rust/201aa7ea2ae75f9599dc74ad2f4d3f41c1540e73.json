{"sha": "201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwMWFhN2VhMmFlNzVmOTU5OWRjNzRhZDJmNGQzZjQxYzE1NDBlNzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T23:15:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-27T23:15:21Z"}, "message": "remove syntax ptr", "tree": {"sha": "56fdc206dc7ba7b6654e53b836afae6ddc3f2acc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56fdc206dc7ba7b6654e53b836afae6ddc3f2acc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "html_url": "https://github.com/rust-lang/rust/commit/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2abd17f57fa14960e8a175bdabe49eb365a585f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2abd17f57fa14960e8a175bdabe49eb365a585f", "html_url": "https://github.com/rust-lang/rust/commit/c2abd17f57fa14960e8a175bdabe49eb365a585f"}], "stats": {"total": 27, "additions": 1, "deletions": 26}, "files": [{"sha": "4c9c84e4febfaac4c57a73bd3ffa563003dd96c9", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "patch": "@@ -2,13 +2,12 @@ use std::sync::Arc;\n #[cfg(test)]\n use parking_lot::Mutex;\n use ra_editor::LineIndex;\n-use ra_syntax::{SourceFileNode, SyntaxNode};\n+use ra_syntax::{SourceFileNode};\n use salsa::{self, Database};\n \n use crate::{\n     hir,\n     symbol_index::SymbolIndex,\n-    syntax_ptr::SyntaxPtr,\n     loc2id::{IdMaps},\n     Cancelable, Canceled, FileId,\n };\n@@ -122,7 +121,6 @@ salsa::database_storage! {\n             fn file_syntax() for FileSyntaxQuery;\n             fn file_lines() for FileLinesQuery;\n             fn file_symbols() for FileSymbolsQuery;\n-            fn resolve_syntax_ptr() for ResolveSyntaxPtrQuery;\n         }\n         impl hir::db::HirDatabase {\n             fn module_tree() for hir::db::ModuleTreeQuery;\n@@ -148,12 +146,6 @@ salsa::query_group! {\n         fn file_symbols(file_id: FileId) -> Cancelable<Arc<SymbolIndex>> {\n             type FileSymbolsQuery;\n         }\n-        fn resolve_syntax_ptr(ptr: SyntaxPtr) -> SyntaxNode {\n-            type ResolveSyntaxPtrQuery;\n-            // Don't retain syntax trees in memory\n-            storage dependencies;\n-            use fn crate::syntax_ptr::resolve_syntax_ptr;\n-        }\n     }\n }\n "}, {"sha": "f4b05fc19bde8e496cc7ddf57549699701d5692b", "filename": "crates/ra_analysis/src/syntax_ptr.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73/crates%2Fra_analysis%2Fsrc%2Fsyntax_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73/crates%2Fra_analysis%2Fsrc%2Fsyntax_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsyntax_ptr.rs?ref=201aa7ea2ae75f9599dc74ad2f4d3f41c1540e73", "patch": "@@ -1,22 +1,5 @@\n use ra_syntax::{SourceFileNode, SyntaxKind, SyntaxNode, SyntaxNodeRef, TextRange};\n \n-use crate::db::SyntaxDatabase;\n-use crate::FileId;\n-\n-pub(crate) fn resolve_syntax_ptr(db: &impl SyntaxDatabase, ptr: SyntaxPtr) -> SyntaxNode {\n-    let syntax = db.file_syntax(ptr.file_id);\n-    ptr.local.resolve(&syntax)\n-}\n-\n-/// SyntaxPtr is a cheap `Copy` id which identifies a particular syntax node,\n-/// without retaining syntax tree in memory. You need to explicitly `resolve`\n-/// `SyntaxPtr` to get a `SyntaxNode`\n-#[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub(crate) struct SyntaxPtr {\n-    file_id: FileId,\n-    local: LocalSyntaxPtr,\n-}\n-\n /// A pionter to a syntax node inside a file.\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub(crate) struct LocalSyntaxPtr {"}]}