{"sha": "797a0bd1c13175398aa0e2e45f6dbb61bcb8c329", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5N2EwYmQxYzEzMTc1Mzk4YWEwZTJlNDVmNmRiYjYxYmNiOGMzMjk=", "commit": {"author": {"name": "ebadf", "email": "brian.cain@gmail.com", "date": "2015-11-27T16:23:58Z"}, "committer": {"name": "ebadf", "email": "brian.cain@gmail.com", "date": "2015-11-27T16:23:58Z"}, "message": "Shifted focus of while-let example per review.", "tree": {"sha": "7783ba87ae55243b496ee981ee012610f9e11299", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7783ba87ae55243b496ee981ee012610f9e11299"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/797a0bd1c13175398aa0e2e45f6dbb61bcb8c329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/797a0bd1c13175398aa0e2e45f6dbb61bcb8c329", "html_url": "https://github.com/rust-lang/rust/commit/797a0bd1c13175398aa0e2e45f6dbb61bcb8c329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/797a0bd1c13175398aa0e2e45f6dbb61bcb8c329/comments", "author": {"login": "androm3da", "id": 8779799, "node_id": "MDQ6VXNlcjg3Nzk3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8779799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/androm3da", "html_url": "https://github.com/androm3da", "followers_url": "https://api.github.com/users/androm3da/followers", "following_url": "https://api.github.com/users/androm3da/following{/other_user}", "gists_url": "https://api.github.com/users/androm3da/gists{/gist_id}", "starred_url": "https://api.github.com/users/androm3da/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/androm3da/subscriptions", "organizations_url": "https://api.github.com/users/androm3da/orgs", "repos_url": "https://api.github.com/users/androm3da/repos", "events_url": "https://api.github.com/users/androm3da/events{/privacy}", "received_events_url": "https://api.github.com/users/androm3da/received_events", "type": "User", "site_admin": false}, "committer": {"login": "androm3da", "id": 8779799, "node_id": "MDQ6VXNlcjg3Nzk3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8779799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/androm3da", "html_url": "https://github.com/androm3da", "followers_url": "https://api.github.com/users/androm3da/followers", "following_url": "https://api.github.com/users/androm3da/following{/other_user}", "gists_url": "https://api.github.com/users/androm3da/gists{/gist_id}", "starred_url": "https://api.github.com/users/androm3da/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/androm3da/subscriptions", "organizations_url": "https://api.github.com/users/androm3da/orgs", "repos_url": "https://api.github.com/users/androm3da/repos", "events_url": "https://api.github.com/users/androm3da/events{/privacy}", "received_events_url": "https://api.github.com/users/androm3da/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "465a5cb19435a495ce5d6e868b2699c908190bec", "url": "https://api.github.com/repos/rust-lang/rust/commits/465a5cb19435a495ce5d6e868b2699c908190bec", "html_url": "https://github.com/rust-lang/rust/commit/465a5cb19435a495ce5d6e868b2699c908190bec"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "9afe5fa826d29eb0fb2e345b59c8950816dc9ef7", "filename": "src/doc/book/if-let.md", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/797a0bd1c13175398aa0e2e45f6dbb61bcb8c329/src%2Fdoc%2Fbook%2Fif-let.md", "raw_url": "https://github.com/rust-lang/rust/raw/797a0bd1c13175398aa0e2e45f6dbb61bcb8c329/src%2Fdoc%2Fbook%2Fif-let.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fif-let.md?ref=797a0bd1c13175398aa0e2e45f6dbb61bcb8c329", "patch": "@@ -61,10 +61,10 @@ In a similar fashion, `while let` can be used when you want to conditionally\n loop  as long as a value matches a certain pattern. It turns code like this:\n \n ```rust\n-# let option: Option<i32> = None;\n+let mut v = vec![1, 3, 5, 7, 11];\n loop {\n-    match option {\n-        Some(x) => println!(\"{}\", x),\n+    match v.pop() {\n+        Some(x) =>  println!(\"{}\", x),\n         None => break,\n     }\n }\n@@ -73,9 +73,8 @@ loop {\n Into code like this:\n \n ```rust\n-let v: vec![1, 3, 5, 7, 11, ];\n-let mut iter: v.iter();\n-while let Some(x) = iter.next() {\n+let mut v = vec![1, 3, 5, 7, 11];\n+while let Some(x) = v.pop() {\n     println!(\"{}\", x);\n }\n ```"}]}