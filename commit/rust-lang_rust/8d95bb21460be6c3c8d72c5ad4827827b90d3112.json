{"sha": "8d95bb21460be6c3c8d72c5ad4827827b90d3112", "node_id": "C_kwDOAAsO6NoAKDhkOTViYjIxNDYwYmU2YzNjOGQ3MmM1YWQ0ODI3ODI3YjkwZDMxMTI", "commit": {"author": {"name": "the8472", "email": "the8472@users.noreply.github.com", "date": "2021-09-21T20:54:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-21T20:54:06Z"}, "message": "Rollup merge of #89126 - FabianWolff:issue-89088, r=petrochenkov\n\nFix ICE when `indirect_structural_match` is allowed\n\nFixes #89088. The ICE is caused by `delay_good_path_bug()`, which is called (indirectly) from a `format!()` macro invocation. I have moved the macro invocation into the `decorate` closure of `struct_span_lint_hir()`, so that the macro is only invoked if the lint is not allowed (i.e., causes at least a warning, and thus prevents `delay_good_path_bug()` from firing).", "tree": {"sha": "dff4d460b2f71635461a0197de387989d1a6a4c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dff4d460b2f71635461a0197de387989d1a6a4c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d95bb21460be6c3c8d72c5ad4827827b90d3112", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhSkZuCRBK7hj4Ov3rIwAADZQIACrYQlDw0txbGgwfcvWNlNtQ\nlKmE1Ar3I+4Z58BijbmLQIDke7doFFvru++6OjH7Aieb2QpxXDCkFsNN/nPFDlQf\nkYVZ3evnc77neHMDa6k5n/rhcH+HTgp9OeCv9JFtcrb4jx3XDKNM9AYkhSiCaJVn\nRCmSGa9ND+QJLxODZOOWIHGAKO0cr4t5uNhRqfLb1bYeCpD4Gi7LBuxg6hiCE6e/\nq/3wu/9nLkjMZEpD8NrReb1yi6/Re9b0kUa+1+zp0bs9OwXrZj4Mu/wyDAKSgWsU\nyITLG/G38ta6BNipRbARhuQpOKci2DGQ6Vifcr+SAiDoaJiDCp20/e+rfALSzqg=\n=BrXP\n-----END PGP SIGNATURE-----\n", "payload": "tree dff4d460b2f71635461a0197de387989d1a6a4c0\nparent 74cdd64ac946ab17131b8e95154a37c28a07bb5b\nparent 402ebc72b32529398220467e09227e2749200345\nauthor the8472 <the8472@users.noreply.github.com> 1632257646 +0200\ncommitter GitHub <noreply@github.com> 1632257646 +0200\n\nRollup merge of #89126 - FabianWolff:issue-89088, r=petrochenkov\n\nFix ICE when `indirect_structural_match` is allowed\n\nFixes #89088. The ICE is caused by `delay_good_path_bug()`, which is called (indirectly) from a `format!()` macro invocation. I have moved the macro invocation into the `decorate` closure of `struct_span_lint_hir()`, so that the macro is only invoked if the lint is not allowed (i.e., causes at least a warning, and thus prevents `delay_good_path_bug()` from firing).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d95bb21460be6c3c8d72c5ad4827827b90d3112", "html_url": "https://github.com/rust-lang/rust/commit/8d95bb21460be6c3c8d72c5ad4827827b90d3112", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d95bb21460be6c3c8d72c5ad4827827b90d3112/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74cdd64ac946ab17131b8e95154a37c28a07bb5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/74cdd64ac946ab17131b8e95154a37c28a07bb5b", "html_url": "https://github.com/rust-lang/rust/commit/74cdd64ac946ab17131b8e95154a37c28a07bb5b"}, {"sha": "402ebc72b32529398220467e09227e2749200345", "url": "https://api.github.com/repos/rust-lang/rust/commits/402ebc72b32529398220467e09227e2749200345", "html_url": "https://github.com/rust-lang/rust/commit/402ebc72b32529398220467e09227e2749200345"}], "stats": {"total": 36, "additions": 30, "deletions": 6}, "files": [{"sha": "847b89f0464f6fa474ea962ed70448b24711a903", "filename": "compiler/rustc_mir_build/src/thir/pattern/const_to_pat.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8d95bb21460be6c3c8d72c5ad4827827b90d3112/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d95bb21460be6c3c8d72c5ad4827827b90d3112/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fconst_to_pat.rs?ref=8d95bb21460be6c3c8d72c5ad4827827b90d3112", "patch": "@@ -322,16 +322,18 @@ impl<'a, 'tcx> ConstToPat<'a, 'tcx> {\n                     && !self.saw_const_match_lint.get()\n                 {\n                     self.saw_const_match_lint.set(true);\n-                    let msg = format!(\n-                        \"to use a constant of type `{}` in a pattern, \\\n-                        `{}` must be annotated with `#[derive(PartialEq, Eq)]`\",\n-                        cv.ty, cv.ty,\n-                    );\n                     tcx.struct_span_lint_hir(\n                         lint::builtin::INDIRECT_STRUCTURAL_MATCH,\n                         id,\n                         span,\n-                        |lint| lint.build(&msg).emit(),\n+                        |lint| {\n+                            let msg = format!(\n+                                \"to use a constant of type `{}` in a pattern, \\\n+                                 `{}` must be annotated with `#[derive(PartialEq, Eq)]`\",\n+                                cv.ty, cv.ty,\n+                            );\n+                            lint.build(&msg).emit()\n+                        },\n                     );\n                 }\n                 // Since we are behind a reference, we can just bubble the error up so we get a"}, {"sha": "40cc665fb612bd325835d1c1652171261fc05a76", "filename": "src/test/ui/consts/issue-89088.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8d95bb21460be6c3c8d72c5ad4827827b90d3112/src%2Ftest%2Fui%2Fconsts%2Fissue-89088.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d95bb21460be6c3c8d72c5ad4827827b90d3112/src%2Ftest%2Fui%2Fconsts%2Fissue-89088.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-89088.rs?ref=8d95bb21460be6c3c8d72c5ad4827827b90d3112", "patch": "@@ -0,0 +1,22 @@\n+// Regression test for the ICE described in #89088.\n+\n+// check-pass\n+\n+#![allow(indirect_structural_match)]\n+use std::borrow::Cow;\n+\n+const FOO: &A = &A::Field(Cow::Borrowed(\"foo\"));\n+\n+#[derive(PartialEq, Eq)]\n+enum A {\n+    Field(Cow<'static, str>)\n+}\n+\n+fn main() {\n+    let var = A::Field(Cow::Borrowed(\"bar\"));\n+\n+    match &var {\n+        FOO => todo!(),\n+        _ => todo!()\n+    }\n+}"}]}