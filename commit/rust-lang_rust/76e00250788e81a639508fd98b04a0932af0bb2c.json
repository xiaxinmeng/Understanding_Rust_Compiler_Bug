{"sha": "76e00250788e81a639508fd98b04a0932af0bb2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2ZTAwMjUwNzg4ZTgxYTYzOTUwOGZkOThiMDRhMDkzMmFmMGJiMmM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-02T21:24:24Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-02T21:24:24Z"}, "message": "Rollup merge of #27499 - barosl:macro-doc-raw-str-hashes, r=nikomatsakis\n\nAny documentation comments that contain raw-string-looking sequences may pretty-print invalid code when expanding them, as the current logic always uses the `r\"literal\"` form, without appending any `#`s.\n\nThis commit calculates the minimum number of `#`s required to wrap a comment correctly and appends `#`s appropriately.\n\nFixes #27489.", "tree": {"sha": "fd79e388f022e3414e21366442963054691c51cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd79e388f022e3414e21366442963054691c51cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76e00250788e81a639508fd98b04a0932af0bb2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76e00250788e81a639508fd98b04a0932af0bb2c", "html_url": "https://github.com/rust-lang/rust/commit/76e00250788e81a639508fd98b04a0932af0bb2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76e00250788e81a639508fd98b04a0932af0bb2c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59b7c907a3e3dd8b263297adf6ff0515fac125e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/59b7c907a3e3dd8b263297adf6ff0515fac125e3", "html_url": "https://github.com/rust-lang/rust/commit/59b7c907a3e3dd8b263297adf6ff0515fac125e3"}, {"sha": "1a8cdc0f2f6a9f513cefbed36e5f57c1c45b8039", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a8cdc0f2f6a9f513cefbed36e5f57c1c45b8039", "html_url": "https://github.com/rust-lang/rust/commit/1a8cdc0f2f6a9f513cefbed36e5f57c1c45b8039"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "b7afd12d8e527bcc0c440c3015c059273cf093be", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/76e00250788e81a639508fd98b04a0932af0bb2c/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76e00250788e81a639508fd98b04a0932af0bb2c/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=76e00250788e81a639508fd98b04a0932af0bb2c", "patch": "@@ -365,6 +365,9 @@ pub mod builtin {\n     /// stringification of all the tokens passed to the macro. No restrictions\n     /// are placed on the syntax of the macro invocation itself.\n     ///\n+    /// Note that the expanded results of the input tokens may change in the\n+    /// future. You should be careful if you rely on the output.\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "088f911ed8c446a2e0473962cce640fea291225d", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/76e00250788e81a639508fd98b04a0932af0bb2c/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76e00250788e81a639508fd98b04a0932af0bb2c/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=76e00250788e81a639508fd98b04a0932af0bb2c", "patch": "@@ -1174,14 +1174,28 @@ impl TokenTree {\n             }\n             (&TokenTree::Token(sp, token::DocComment(name)), _) => {\n                 let stripped = strip_doc_comment_decoration(&name.as_str());\n+\n+                // Searches for the occurrences of `\"#*` and returns the minimum number of `#`s\n+                // required to wrap the text.\n+                let num_of_hashes = stripped.chars().scan(0, |cnt, x| {\n+                    *cnt = if x == '\"' {\n+                        1\n+                    } else if *cnt != 0 && x == '#' {\n+                        *cnt + 1\n+                    } else {\n+                        0\n+                    };\n+                    Some(*cnt)\n+                }).max().unwrap_or(0);\n+\n                 TokenTree::Delimited(sp, Rc::new(Delimited {\n                     delim: token::Bracket,\n                     open_span: sp,\n                     tts: vec![TokenTree::Token(sp, token::Ident(token::str_to_ident(\"doc\"),\n                                                                 token::Plain)),\n                               TokenTree::Token(sp, token::Eq),\n                               TokenTree::Token(sp, token::Literal(\n-                                  token::StrRaw(token::intern(&stripped), 0), None))],\n+                                  token::StrRaw(token::intern(&stripped), num_of_hashes), None))],\n                     close_span: sp,\n                 }))\n             }"}, {"sha": "ffbe237b74e60a1a55ded10444bd81a1dba1e6fb", "filename": "src/test/run-pass/macro-doc-raw-str-hashes.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/76e00250788e81a639508fd98b04a0932af0bb2c/src%2Ftest%2Frun-pass%2Fmacro-doc-raw-str-hashes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76e00250788e81a639508fd98b04a0932af0bb2c/src%2Ftest%2Frun-pass%2Fmacro-doc-raw-str-hashes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-doc-raw-str-hashes.rs?ref=76e00250788e81a639508fd98b04a0932af0bb2c", "patch": "@@ -0,0 +1,39 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// The number of `#`s used to wrap the documentation comment should differ regarding the content.\n+//\n+// Related issue: #27489\n+\n+macro_rules! homura {\n+    ($x:expr, #[$y:meta]) => (assert_eq!($x, stringify!($y)))\n+}\n+\n+fn main() {\n+    homura! {\n+        r#\"doc = r\" Madoka\"\"#,\n+        /// Madoka\n+    };\n+\n+    homura! {\n+        r##\"doc = r#\" One quote mark: [\"]\"#\"##,\n+        /// One quote mark: [\"]\n+    };\n+\n+    homura! {\n+        r##\"doc = r#\" Two quote marks: [\"\"]\"#\"##,\n+        /// Two quote marks: [\"\"]\n+    };\n+\n+    homura! {\n+        r#####\"doc = r####\" Raw string ending sequences: [\"###]\"####\"#####,\n+        /// Raw string ending sequences: [\"###]\n+    };\n+}"}]}