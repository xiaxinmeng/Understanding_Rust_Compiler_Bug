{"sha": "f825d6c6ccb5bc1eab9dfda96d3189f7092eb867", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MjVkNmM2Y2NiNWJjMWVhYjlkZmRhOTZkMzE4OWY3MDkyZWI4Njc=", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-09-02T14:29:04Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2021-09-02T14:34:25Z"}, "message": "add test", "tree": {"sha": "ed682735211e7a58526775a3e21b2e537ff4e9fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed682735211e7a58526775a3e21b2e537ff4e9fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f825d6c6ccb5bc1eab9dfda96d3189f7092eb867", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f825d6c6ccb5bc1eab9dfda96d3189f7092eb867", "html_url": "https://github.com/rust-lang/rust/commit/f825d6c6ccb5bc1eab9dfda96d3189f7092eb867", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f825d6c6ccb5bc1eab9dfda96d3189f7092eb867/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5f680e7484dd96b1417c0219c5616ef2cd82d9d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5f680e7484dd96b1417c0219c5616ef2cd82d9d", "html_url": "https://github.com/rust-lang/rust/commit/b5f680e7484dd96b1417c0219c5616ef2cd82d9d"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "8724fa69825463a33700f615a7d633dce3e27aa7", "filename": "src/test/ui/const-generics/const_trait_fn-issue-88433.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f825d6c6ccb5bc1eab9dfda96d3189f7092eb867/src%2Ftest%2Fui%2Fconst-generics%2Fconst_trait_fn-issue-88433.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f825d6c6ccb5bc1eab9dfda96d3189f7092eb867/src%2Ftest%2Fui%2Fconst-generics%2Fconst_trait_fn-issue-88433.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst_trait_fn-issue-88433.rs?ref=f825d6c6ccb5bc1eab9dfda96d3189f7092eb867", "patch": "@@ -0,0 +1,26 @@\n+// build-pass\n+\n+#![feature(const_trait_impl)]\n+\n+trait Func<T> {\n+    type Output;\n+\n+    fn call_once(self, arg: T) -> Self::Output;\n+}\n+\n+\n+struct Closure;\n+\n+impl const Func<&usize> for Closure {\n+    type Output = usize;\n+\n+    fn call_once(self, arg: &usize) -> Self::Output {\n+        *arg\n+    }\n+}\n+\n+enum Bug<T = [(); Closure.call_once(&0) ]> {\n+    V(T),\n+}\n+\n+fn main() {}"}]}