{"sha": "223b280f31622e6292653c5b5a0755657e514524", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyM2IyODBmMzE2MjJlNjI5MjY1M2M1YjVhMDc1NTY1N2U1MTQ1MjQ=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-03-27T19:00:46Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-04-09T20:30:34Z"}, "message": "Reviewer changes", "tree": {"sha": "0097131a053a680f08ba17bee31601b26e6770b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0097131a053a680f08ba17bee31601b26e6770b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/223b280f31622e6292653c5b5a0755657e514524", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/223b280f31622e6292653c5b5a0755657e514524", "html_url": "https://github.com/rust-lang/rust/commit/223b280f31622e6292653c5b5a0755657e514524", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/223b280f31622e6292653c5b5a0755657e514524/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c55325e0f7252d67bda60695497751b63f51931d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c55325e0f7252d67bda60695497751b63f51931d", "html_url": "https://github.com/rust-lang/rust/commit/c55325e0f7252d67bda60695497751b63f51931d"}], "stats": {"total": 92, "additions": 19, "deletions": 73}, "files": [{"sha": "88fc39bd654c536b4f8f1cd1fc8245706f0284ec", "filename": "rls", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rls?ref=223b280f31622e6292653c5b5a0755657e514524", "patch": "@@ -1 +1 @@\n-Subproject commit e24fc84bfc4b3360a3d65d9adeab0f701140094d\n+Subproject commit 88fc39bd654c536b4f8f1cd1fc8245706f0284ec"}, {"sha": "88a3441d42015d703fb0bfa3c5becf878d08b651", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 52, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/223b280f31622e6292653c5b5a0755657e514524/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/223b280f31622e6292653c5b5a0755657e514524/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=223b280f31622e6292653c5b5a0755657e514524", "patch": "@@ -40,7 +40,7 @@ fn pkgname(build: &Build, component: &str) -> String {\n     if component == \"cargo\" {\n         format!(\"{}-{}\", component, build.cargo_package_vers())\n     } else {\n-        assert!(component.starts_with(\"rust\"));\n+        assert!(component.starts_with(\"rust\") || component == \"rls\");\n         format!(\"{}-{}\", component, build.rust_package_vers())\n     }\n }\n@@ -540,7 +540,7 @@ pub fn cargo(build: &Build, stage: u32, target: &str) {\n \n     let src = build.src.join(\"cargo\");\n     let etc = src.join(\"src/etc\");\n-    let release_num = build.cargo_release_num();\n+    let release_num = build.release_num(\"cargo\");\n     let name = pkgname(build, \"cargo\");\n     let version = build.cargo_info.version(build, &release_num);\n \n@@ -599,7 +599,7 @@ pub fn rls(build: &Build, stage: u32, target: &str) {\n     let compiler = Compiler::new(stage, &build.config.build);\n \n     let src = build.src.join(\"rls\");\n-    let release_num = build.rls_release_num();\n+    let release_num = build.release_num(\"rls\");\n     let name = format!(\"rls-{}\", build.package_vers(&release_num));\n \n     let tmp = tmpdir(build);\n@@ -642,8 +642,9 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n     let cargo_installer = dist.join(format!(\"{}-{}.tar.gz\",\n                                             pkgname(build, \"cargo\"),\n                                             target));\n-    let rls_installer = dist.join(format!(\"{}.tar.gz\",\n-                                          pkgname(build, \"rls\")));\n+    let rls_installer = dist.join(format!(\"{}-{}.tar.gz\",\n+                                          pkgname(build, \"rls\"),\n+                                          target));\n     let analysis_installer = dist.join(format!(\"{}-{}.tar.gz\",\n                                                pkgname(build, \"rust-analysis\"),\n                                                target));\n@@ -720,28 +721,20 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n         let _ = fs::remove_dir_all(&pkg);\n         t!(fs::create_dir_all(pkg.join(\"rustc\")));\n         t!(fs::create_dir_all(pkg.join(\"cargo\")));\n-        t!(fs::create_dir_all(pkg.join(\"rls\")));\n-        t!(fs::create_dir_all(pkg.join(\"rust-analysis\")));\n         t!(fs::create_dir_all(pkg.join(\"rust-docs\")));\n         t!(fs::create_dir_all(pkg.join(\"rust-std\")));\n \n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target)),\n              &pkg.join(\"rustc\"));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"cargo\"), target)),\n              &pkg.join(\"cargo\"));\n-        cp_r(&work.join(pkgname(build, \"rls\")),\n-             &pkg.join(\"rls\"));\n-        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-analysis\"), target)),\n-             &pkg.join(\"rust-analysis\"));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target)),\n              &pkg.join(\"rust-docs\"));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-std\"), target)),\n              &pkg.join(\"rust-std\"));\n \n         install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rustc\"), 0o755);\n         install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"cargo\"), 0o755);\n-        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rls\"), 0o755);\n-        install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-analysis\"), 0o755);\n         install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-docs\"), 0o755);\n         install(&etc.join(\"pkg/postinstall\"), &pkg.join(\"rust-std\"), 0o755);\n \n@@ -755,8 +748,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n         };\n         pkgbuild(\"rustc\");\n         pkgbuild(\"cargo\");\n-        pkgbuild(\"rls\");\n-        pkgbuild(\"rust-analysis\");\n         pkgbuild(\"rust-docs\");\n         pkgbuild(\"rust-std\");\n \n@@ -782,8 +773,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n         let _ = fs::remove_dir_all(&exe);\n         t!(fs::create_dir_all(exe.join(\"rustc\")));\n         t!(fs::create_dir_all(exe.join(\"cargo\")));\n-        t!(fs::create_dir_all(exe.join(\"rls\")));\n-        t!(fs::create_dir_all(exe.join(\"rust-analysis\")));\n         t!(fs::create_dir_all(exe.join(\"rust-docs\")));\n         t!(fs::create_dir_all(exe.join(\"rust-std\")));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rustc\"), target))\n@@ -792,12 +781,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"cargo\"), target))\n                   .join(\"cargo\"),\n              &exe.join(\"cargo\"));\n-        cp_r(&work.join(pkgname(build, \"rls\"))\n-                  .join(\"rls\"),\n-             &exe.join(\"rls\"));\n-        cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-analysis\"), target))\n-                  .join(\"rust-analysis\"),\n-             &exe.join(\"rust-analysis\"));\n         cp_r(&work.join(&format!(\"{}-{}\", pkgname(build, \"rust-docs\"), target))\n                   .join(\"rust-docs\"),\n              &exe.join(\"rust-docs\"));\n@@ -807,8 +790,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n \n         t!(fs::remove_file(exe.join(\"rustc/manifest.in\")));\n         t!(fs::remove_file(exe.join(\"cargo/manifest.in\")));\n-        t!(fs::remove_file(exe.join(\"rls/manifest.in\")));\n-        t!(fs::remove_file(exe.join(\"rust-analysis/manifest.in\")));\n         t!(fs::remove_file(exe.join(\"rust-docs/manifest.in\")));\n         t!(fs::remove_file(exe.join(\"rust-std/manifest.in\")));\n \n@@ -865,26 +846,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n                         .arg(\"-var\").arg(\"var.DocsDir\")\n                         .arg(\"-out\").arg(exe.join(\"DocsGroup.wxs\"))\n                         .arg(\"-t\").arg(etc.join(\"msi/squash-components.xsl\")));\n-        build.run(Command::new(&heat)\n-                        .current_dir(&exe)\n-                        .arg(\"dir\")\n-                        .arg(\"rls\")\n-                        .args(&heat_flags)\n-                        .arg(\"-cg\").arg(\"RlsGroup\")\n-                        .arg(\"-dr\").arg(\"Rls\")\n-                        .arg(\"-var\").arg(\"var.RlsDir\")\n-                        .arg(\"-out\").arg(exe.join(\"RlsGroup.wxs\"))\n-                        .arg(\"-t\").arg(etc.join(\"msi/squash-components.xsl\")));\n-        build.run(Command::new(&heat)\n-                        .current_dir(&exe)\n-                        .arg(\"dir\")\n-                        .arg(\"rust-analysis\")\n-                        .args(&heat_flags)\n-                        .arg(\"-cg\").arg(\"AnalysisGroup\")\n-                        .arg(\"-dr\").arg(\"Analysis\")\n-                        .arg(\"-var\").arg(\"var.AnalysisDir\")\n-                        .arg(\"-out\").arg(exe.join(\"AnalysisGroup.wxs\"))\n-                        .arg(\"-t\").arg(etc.join(\"msi/squash-components.xsl\")));\n         build.run(Command::new(&heat)\n                         .current_dir(&exe)\n                         .arg(\"dir\")\n@@ -925,8 +886,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n                .arg(\"-nologo\")\n                .arg(\"-dRustcDir=rustc\")\n                .arg(\"-dDocsDir=rust-docs\")\n-               .arg(\"-dRlsDir=rls\")\n-               .arg(\"-dAnalysisDir=rust-analysis\")\n                .arg(\"-dCargoDir=cargo\")\n                .arg(\"-dStdDir=rust-std\")\n                .arg(\"-arch\").arg(&arch)\n@@ -944,8 +903,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n         candle(&etc.join(\"msi/rustwelcomedlg.wxs\"));\n         candle(\"RustcGroup.wxs\".as_ref());\n         candle(\"DocsGroup.wxs\".as_ref());\n-        candle(\"RlsGroup.wxs\".as_ref());\n-        candle(\"AnalysisGroup.wxs\".as_ref());\n         candle(\"CargoGroup.wxs\".as_ref());\n         candle(\"StdGroup.wxs\".as_ref());\n \n@@ -968,8 +925,6 @@ pub fn extended(build: &Build, stage: u32, target: &str) {\n            .arg(\"rustwelcomedlg.wixobj\")\n            .arg(\"RustcGroup.wixobj\")\n            .arg(\"DocsGroup.wixobj\")\n-           .arg(\"RlsGroup.wixobj\")\n-           .arg(\"AnalysisGroup.wixobj\")\n            .arg(\"CargoGroup.wixobj\")\n            .arg(\"StdGroup.wixobj\")\n            .current_dir(&exe);\n@@ -1037,7 +992,7 @@ pub fn hash_and_sign(build: &Build) {\n     cmd.arg(distdir(build));\n     cmd.arg(today.trim());\n     cmd.arg(build.rust_package_vers());\n-    cmd.arg(build.package_vers(&build.cargo_release_num()));\n+    cmd.arg(build.package_vers(&build.release_num(\"cargo\")));\n     cmd.arg(addr);\n \n     t!(fs::create_dir_all(distdir(build)));"}, {"sha": "f9981f76ad845d88ff8489f81aaf7740b3abd133", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 6, "deletions": 20, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/223b280f31622e6292653c5b5a0755657e514524/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/223b280f31622e6292653c5b5a0755657e514524/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=223b280f31622e6292653c5b5a0755657e514524", "patch": "@@ -1017,7 +1017,7 @@ impl Build {\n \n     /// Returns the value of `package_vers` above for Cargo\n     fn cargo_package_vers(&self) -> String {\n-        self.package_vers(&self.cargo_release_num())\n+        self.package_vers(&self.release_num(\"cargo\"))\n     }\n \n     /// Returns the `version` string associated with this compiler for Rust\n@@ -1029,10 +1029,11 @@ impl Build {\n         self.rust_info.version(self, channel::CFG_RELEASE_NUM)\n     }\n \n-    /// Returns the `a.b.c` version that Cargo is at.\n-    fn cargo_release_num(&self) -> String {\n+    /// Returns the `a.b.c` version that the given package is at.\n+    fn release_num(&self, package: &str) -> String {\n         let mut toml = String::new();\n-        t!(t!(File::open(self.src.join(\"cargo/Cargo.toml\"))).read_to_string(&mut toml));\n+        let toml_file_name = self.src.join(&format!(\"{}/Cargo.toml\", package));\n+        t!(t!(File::open(toml_file_name)).read_to_string(&mut toml));\n         for line in toml.lines() {\n             let prefix = \"version = \\\"\";\n             let suffix = \"\\\"\";\n@@ -1041,22 +1042,7 @@ impl Build {\n             }\n         }\n \n-        panic!(\"failed to find version in cargo's Cargo.toml\")\n-    }\n-\n-    /// Returns the `a.b.c` version that the RLS is at.\n-    fn rls_release_num(&self) -> String {\n-        let mut toml = String::new();\n-        t!(t!(File::open(self.src.join(\"rls/Cargo.toml\"))).read_to_string(&mut toml));\n-        for line in toml.lines() {\n-            let prefix = \"version = \\\"\";\n-            let suffix = \"\\\"\";\n-            if line.starts_with(prefix) && line.ends_with(suffix) {\n-                return line[prefix.len()..line.len() - suffix.len()].to_string()\n-            }\n-        }\n-\n-        panic!(\"failed to find version in the RLS's Cargo.toml\")\n+        panic!(\"failed to find version in {}'s Cargo.toml\", package)\n     }\n \n     /// Returns whether unstable features should be enabled for the compiler"}, {"sha": "eab2dc75af8d06a39248537f10df7eaad03d1443", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/223b280f31622e6292653c5b5a0755657e514524/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/223b280f31622e6292653c5b5a0755657e514524/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=223b280f31622e6292653c5b5a0755657e514524", "patch": "@@ -225,6 +225,7 @@ impl Builder {\n         self.package(\"rust-src\", &mut manifest.pkg, &[\"*\"]);\n \n         if self.rust_release == \"nightly\" {\n+            self.package(\"rls\", &mut manifest.pkg, HOSTS);\n             self.package(\"rust-analysis\", &mut manifest.pkg, TARGETS);\n         }\n \n@@ -277,6 +278,10 @@ impl Builder {\n                         pkg: \"rust-analysis\".to_string(),\n                         target: target.to_string(),\n                     });\n+                    extensions.push(Component {\n+                        pkg: \"rls\".to_string(),\n+                        target: host.to_string(),\n+                    });\n                 }\n             }\n             extensions.push(Component {"}]}