{"sha": "6f0141a14026827edfe4ef046013001acd22d94d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmMDE0MWExNDAyNjgyN2VkZmU0ZWYwNDYwMTMwMDFhY2QyMmQ5NGQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-12T14:49:41Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-06-12T14:49:41Z"}, "message": "minor: optimize\n\nWe shouldn't be looking at the source map unless we actually have\ndiagnostics.", "tree": {"sha": "b3302438048c38379027e536470e5ea0d363f8a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3302438048c38379027e536470e5ea0d363f8a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f0141a14026827edfe4ef046013001acd22d94d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f0141a14026827edfe4ef046013001acd22d94d", "html_url": "https://github.com/rust-lang/rust/commit/6f0141a14026827edfe4ef046013001acd22d94d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f0141a14026827edfe4ef046013001acd22d94d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b1e3de988ed835b9469360d584963684d1c8ff6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b1e3de988ed835b9469360d584963684d1c8ff6", "html_url": "https://github.com/rust-lang/rust/commit/1b1e3de988ed835b9469360d584963684d1c8ff6"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "0ffc91548196eae6d8b9b23c1822666e58973d9a", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f0141a14026827edfe4ef046013001acd22d94d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6f0141a14026827edfe4ef046013001acd22d94d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6f0141a14026827edfe4ef046013001acd22d94d", "patch": "@@ -482,6 +482,7 @@ dependencies = [\n  \"hir_ty\",\n  \"itertools\",\n  \"log\",\n+ \"once_cell\",\n  \"profile\",\n  \"rustc-hash\",\n  \"smallvec\","}, {"sha": "7c148fd403287c2447f806ddf174391ef3880f92", "filename": "crates/hir/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6f0141a14026827edfe4ef046013001acd22d94d/crates%2Fhir%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6f0141a14026827edfe4ef046013001acd22d94d/crates%2Fhir%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2FCargo.toml?ref=6f0141a14026827edfe4ef046013001acd22d94d", "patch": "@@ -16,6 +16,7 @@ either = \"1.5.3\"\n arrayvec = \"0.7\"\n itertools = \"0.10.0\"\n smallvec = \"1.4.0\"\n+once_cell = \"1\"\n \n stdx = { path = \"../stdx\", version = \"0.0.0\" }\n syntax = { path = \"../syntax\", version = \"0.0.0\" }"}, {"sha": "8804e63c52fc6c98e564693d4101e93a61c406bb", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6f0141a14026827edfe4ef046013001acd22d94d/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f0141a14026827edfe4ef046013001acd22d94d/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=6f0141a14026827edfe4ef046013001acd22d94d", "patch": "@@ -73,6 +73,7 @@ use hir_ty::{\n };\n use itertools::Itertools;\n use nameres::diagnostics::DefDiagnosticKind;\n+use once_cell::unsync::Lazy;\n use rustc_hash::FxHashSet;\n use stdx::{format_to, impl_from};\n use syntax::{\n@@ -1044,7 +1045,7 @@ impl Function {\n         }\n \n         let infer = db.infer(self.id.into());\n-        let (_, source_map) = db.body_with_source_map(self.id.into());\n+        let source_map = Lazy::new(|| db.body_with_source_map(self.id.into()).1);\n         for d in &infer.diagnostics {\n             match d {\n                 hir_ty::InferenceDiagnostic::NoSuchField { expr } => {\n@@ -1061,13 +1062,13 @@ impl Function {\n         }\n \n         for expr in hir_ty::diagnostics::missing_unsafe(db, self.id.into()) {\n-            match source_map.as_ref().expr_syntax(expr) {\n+            match source_map.expr_syntax(expr) {\n                 Ok(in_file) => {\n                     sink.push(MissingUnsafe { file: in_file.file_id, expr: in_file.value })\n                 }\n                 Err(SyntheticSyntax) => {\n                     // FIXME: The `expr` was desugared, report or assert that\n-                    // this dosen't happen.\n+                    // this doesn't happen.\n                 }\n             }\n         }"}]}