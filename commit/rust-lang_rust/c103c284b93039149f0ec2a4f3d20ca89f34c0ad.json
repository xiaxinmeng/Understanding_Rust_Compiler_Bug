{"sha": "c103c284b93039149f0ec2a4f3d20ca89f34c0ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMDNjMjg0YjkzMDM5MTQ5ZjBlYzJhNGYzZDIwY2E4OWYzNGMwYWQ=", "commit": {"author": {"name": "Phoebe Bell", "email": "minaphoebebell@gmail.com", "date": "2020-01-17T02:38:04Z"}, "committer": {"name": "Phoebe Bell", "email": "minaphoebebell@gmail.com", "date": "2020-01-17T02:38:04Z"}, "message": "Move comments for tidy", "tree": {"sha": "c46c8637fd33867972dec613533ae1183414337b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c46c8637fd33867972dec613533ae1183414337b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c103c284b93039149f0ec2a4f3d20ca89f34c0ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c103c284b93039149f0ec2a4f3d20ca89f34c0ad", "html_url": "https://github.com/rust-lang/rust/commit/c103c284b93039149f0ec2a4f3d20ca89f34c0ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c103c284b93039149f0ec2a4f3d20ca89f34c0ad/comments", "author": {"login": "foeb", "id": 16327576, "node_id": "MDQ6VXNlcjE2MzI3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16327576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foeb", "html_url": "https://github.com/foeb", "followers_url": "https://api.github.com/users/foeb/followers", "following_url": "https://api.github.com/users/foeb/following{/other_user}", "gists_url": "https://api.github.com/users/foeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/foeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foeb/subscriptions", "organizations_url": "https://api.github.com/users/foeb/orgs", "repos_url": "https://api.github.com/users/foeb/repos", "events_url": "https://api.github.com/users/foeb/events{/privacy}", "received_events_url": "https://api.github.com/users/foeb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "foeb", "id": 16327576, "node_id": "MDQ6VXNlcjE2MzI3NTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16327576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/foeb", "html_url": "https://github.com/foeb", "followers_url": "https://api.github.com/users/foeb/followers", "following_url": "https://api.github.com/users/foeb/following{/other_user}", "gists_url": "https://api.github.com/users/foeb/gists{/gist_id}", "starred_url": "https://api.github.com/users/foeb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/foeb/subscriptions", "organizations_url": "https://api.github.com/users/foeb/orgs", "repos_url": "https://api.github.com/users/foeb/repos", "events_url": "https://api.github.com/users/foeb/events{/privacy}", "received_events_url": "https://api.github.com/users/foeb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca2fae8edbf0fce88e8e780d69745b26c856f4fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca2fae8edbf0fce88e8e780d69745b26c856f4fc", "html_url": "https://github.com/rust-lang/rust/commit/ca2fae8edbf0fce88e8e780d69745b26c856f4fc"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "3bfeee87cc0136b5f3b3963e223527bdf676ab41", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c103c284b93039149f0ec2a4f3d20ca89f34c0ad/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c103c284b93039149f0ec2a4f3d20ca89f34c0ad/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=c103c284b93039149f0ec2a4f3d20ca89f34c0ad", "patch": "@@ -1301,9 +1301,9 @@ where\n impl<'a, P: Pattern<'a>> MatchIndicesInternal<'a, P> {\n     #[inline]\n     fn next(&mut self) -> Option<(usize, &'a str)> {\n-        // SAFETY: `Searcher` guarantees that `start` and `end` lie on unicode boundaries.\n         self.0\n             .next_match()\n+            // SAFETY: `Searcher` guarantees that `start` and `end` lie on unicode boundaries.\n             .map(|(start, end)| unsafe { (start, self.0.haystack().get_unchecked(start..end)) })\n     }\n \n@@ -1312,9 +1312,9 @@ impl<'a, P: Pattern<'a>> MatchIndicesInternal<'a, P> {\n     where\n         P::Searcher: ReverseSearcher<'a>,\n     {\n-        // SAFETY: `Searcher` guarantees that `start` and `end` lie on unicode boundaries.\n         self.0\n             .next_match_back()\n+            // SAFETY: `Searcher` guarantees that `start` and `end` lie on unicode boundaries.\n             .map(|(start, end)| unsafe { (start, self.0.haystack().get_unchecked(start..end)) })\n     }\n }\n@@ -3901,8 +3901,8 @@ impl str {\n                 \"The first search step from Searcher \\\n                 must include the first character\"\n             );\n+            // SAFETY: `Searcher` is known to return valid indices.\n             unsafe {\n-                // Searcher is known to return valid indices.\n                 Some(self.get_unchecked(len..))\n             }\n         } else {\n@@ -3942,8 +3942,8 @@ impl str {\n                 \"The first search step from ReverseSearcher \\\n                 must include the last character\"\n             );\n+            // SAFETY: `Searcher` is known to return valid indices.\n             unsafe {\n-                // Searcher is known to return valid indices.\n                 Some(self.get_unchecked(..start))\n             }\n         } else {\n@@ -4381,8 +4381,8 @@ impl Default for &str {\n #[stable(feature = \"default_mut_str\", since = \"1.28.0\")]\n impl Default for &mut str {\n     /// Creates an empty mutable str\n-    // SAFETY: `str` is guranteed to be UTF-8.\n     fn default() -> Self {\n+        // SAFETY: The empty string is valid UTF-8.\n         unsafe { from_utf8_unchecked_mut(&mut []) }\n     }\n }"}]}