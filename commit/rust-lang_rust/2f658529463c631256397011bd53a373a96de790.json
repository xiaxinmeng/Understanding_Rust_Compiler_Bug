{"sha": "2f658529463c631256397011bd53a373a96de790", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJmNjU4NTI5NDYzYzYzMTI1NjM5NzAxMWJkNTNhMzczYTk2ZGU3OTA=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-05-29T23:20:34Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-05-29T23:44:57Z"}, "message": "Do not insert spaces around braces with empty body or multiple lines", "tree": {"sha": "21d44f73e5511d296e7a6b0fef685e75b7715bb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21d44f73e5511d296e7a6b0fef685e75b7715bb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f658529463c631256397011bd53a373a96de790", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f658529463c631256397011bd53a373a96de790", "html_url": "https://github.com/rust-lang/rust/commit/2f658529463c631256397011bd53a373a96de790", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f658529463c631256397011bd53a373a96de790/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "966fe8d7052238f3c662a4f02d1cb7b96c644293", "url": "https://api.github.com/repos/rust-lang/rust/commits/966fe8d7052238f3c662a4f02d1cb7b96c644293", "html_url": "https://github.com/rust-lang/rust/commit/966fe8d7052238f3c662a4f02d1cb7b96c644293"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "ae95acaf3016e153534208aa07bebb3472150ee8", "filename": "src/macros.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2f658529463c631256397011bd53a373a96de790/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f658529463c631256397011bd53a373a96de790/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=2f658529463c631256397011bd53a373a96de790", "patch": "@@ -493,11 +493,18 @@ fn delim_token_to_str(\n     delim_token: &DelimToken,\n     shape: Shape,\n     use_multiple_lines: bool,\n+    inner_is_empty: bool,\n ) -> (String, String) {\n     let (lhs, rhs) = match *delim_token {\n         DelimToken::Paren => (\"(\", \")\"),\n         DelimToken::Bracket => (\"[\", \"]\"),\n-        DelimToken::Brace => (\"{ \", \" }\"),\n+        DelimToken::Brace => {\n+            if inner_is_empty || use_multiple_lines {\n+                (\"{\", \"}\")\n+            } else {\n+                (\"{ \", \" }\")\n+            }\n+        }\n         DelimToken::NoDelim => (\"\", \"\"),\n     };\n     if use_multiple_lines {\n@@ -553,13 +560,13 @@ impl MacroArgKind {\n         use_multiple_lines: bool,\n     ) -> Option<String> {\n         let rewrite_delimited_inner = |delim_tok, args| -> Option<(String, String, String)> {\n-            let (lhs, rhs) = delim_token_to_str(context, delim_tok, shape, false);\n             let inner = wrap_macro_args(context, args, shape)?;\n+            let (lhs, rhs) = delim_token_to_str(context, delim_tok, shape, false, inner.is_empty());\n             if lhs.len() + inner.len() + rhs.len() <= shape.width {\n                 return Some((lhs, inner, rhs));\n             }\n \n-            let (lhs, rhs) = delim_token_to_str(context, delim_tok, shape, true);\n+            let (lhs, rhs) = delim_token_to_str(context, delim_tok, shape, true, false);\n             let nested_shape = shape\n                 .block_indent(context.config.tab_spaces())\n                 .with_max_width(context.config);"}]}