{"sha": "5ffc9197264a07a50bfb27e436fe284ae8c0687c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZmM5MTk3MjY0YTA3YTUwYmZiMjdlNDM2ZmUyODRhZThjMDY4N2M=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-02-10T16:49:26Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-02-21T19:03:34Z"}, "message": "Move the exit block of the match to the end", "tree": {"sha": "4165aaf956854f0a737a96bc2a262f9300b57b6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4165aaf956854f0a737a96bc2a262f9300b57b6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ffc9197264a07a50bfb27e436fe284ae8c0687c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ffc9197264a07a50bfb27e436fe284ae8c0687c", "html_url": "https://github.com/rust-lang/rust/commit/5ffc9197264a07a50bfb27e436fe284ae8c0687c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ffc9197264a07a50bfb27e436fe284ae8c0687c/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "90f40cd0fb592bbdc74ef6324e378dd566191386", "url": "https://api.github.com/repos/rust-lang/rust/commits/90f40cd0fb592bbdc74ef6324e378dd566191386", "html_url": "https://github.com/rust-lang/rust/commit/90f40cd0fb592bbdc74ef6324e378dd566191386"}], "stats": {"total": 256, "additions": 130, "deletions": 126}, "files": [{"sha": "2c4eb0bc091c3c18b9c49f1954601394a756113d", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=5ffc9197264a07a50bfb27e436fe284ae8c0687c", "patch": "@@ -250,12 +250,8 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n \n         // Step 5. Create everything else: the guards and the arms.\n \n-        // all the arm blocks will rejoin here\n-        let end_block = self.cfg.start_new_block();\n-\n         let outer_source_info = self.source_info(span);\n-\n-        for (arm, candidates) in arm_candidates {\n+        let arm_end_blocks: Vec<_> = arm_candidates.into_iter().map(|(arm, candidates)| {\n             let mut arm_block = self.cfg.start_new_block();\n \n             let body = self.hir.mirror(arm.body.clone());\n@@ -283,6 +279,14 @@ impl<'a, 'gcx, 'tcx> Builder<'a, 'gcx, 'tcx> {\n             }\n \n             unpack!(arm_block = self.into(destination, arm_block, body));\n+\n+            arm_block\n+        }).collect();\n+\n+        // all the arm blocks will rejoin here\n+        let end_block = self.cfg.start_new_block();\n+\n+        for arm_block in arm_end_blocks {\n             self.cfg.terminate(\n                 arm_block,\n                 outer_source_info,"}, {"sha": "0f0401a55eacae8d4bdd16134aab434ebe81f6c8", "filename": "src/test/mir-opt/issue-49232.rs", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fissue-49232.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fissue-49232.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-49232.rs?ref=5ffc9197264a07a50bfb27e436fe284ae8c0687c", "patch": "@@ -47,10 +47,10 @@ fn main() {\n //         resume;\n //     }\n //     bb5: {\n-//         falseEdges -> [real: bb12, imaginary: bb6];\n+//         falseEdges -> [real: bb11, imaginary: bb6];\n //     }\n //     bb6: {\n-//         falseEdges -> [real: bb14, imaginary: bb7];\n+//         falseEdges -> [real: bb13, imaginary: bb7];\n //     }\n //     bb7: {\n //         unreachable;\n@@ -62,41 +62,41 @@ fn main() {\n //         goto -> bb5;\n //     }\n //     bb10: {\n-//         FakeRead(ForLet, _2);\n-//         StorageDead(_3);\n-//         StorageLive(_6);\n-//         _6 = &_2;\n-//         _5 = const std::mem::drop(move _6) -> [return: bb19, unwind: bb4];\n+//         _2 = const 4i32;\n+//         goto -> bb18;\n //     }\n //     bb11: {\n-//         _2 = const 4i32;\n //         goto -> bb10;\n //     }\n //     bb12: {\n-//         goto -> bb11;\n+//         _0 = ();\n+//         goto -> bb14;\n //     }\n //     bb13: {\n-//         _0 = ();\n-//         goto -> bb15;\n+//         goto -> bb12;\n //     }\n //     bb14: {\n-//         goto -> bb13;\n-//     }\n-//     bb15: {\n //         StorageDead(_3);\n-//         goto -> bb16;\n+//         goto -> bb15;\n //     }\n-//     bb16: {\n+//     bb15: {\n //         StorageDead(_2);\n //         goto -> bb2;\n //     }\n-//     bb17: {\n+//     bb16: {\n //         _4 = ();\n //         unreachable;\n //     }\n-//     bb18: {\n+//     bb17: {\n //         StorageDead(_4);\n-//         goto -> bb10;\n+//         goto -> bb18;\n+//     }\n+//     bb18: {\n+//         FakeRead(ForLet, _2);\n+//         StorageDead(_3);\n+//         StorageLive(_6);\n+//         _6 = &_2;\n+//         _5 = const std::mem::drop(move _6) -> [return: bb19, unwind: bb4];\n //     }\n //     bb19: {\n //         StorageDead(_6);"}, {"sha": "ab6de71d2894d49488ebbbcbd3e89dc8da918a97", "filename": "src/test/mir-opt/match_false_edges.rs", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_false_edges.rs?ref=5ffc9197264a07a50bfb27e436fe284ae8c0687c", "patch": "@@ -51,13 +51,13 @@ fn main() {\n //      resume;\n //  }\n //  bb2: {\n-//      falseEdges -> [real: bb9, imaginary: bb3]; //pre_binding1\n+//      falseEdges -> [real: bb8, imaginary: bb3]; //pre_binding1\n //  }\n //  bb3: {\n-//      falseEdges -> [real: bb12, imaginary: bb4]; //pre_binding2\n+//      falseEdges -> [real: bb11, imaginary: bb4]; //pre_binding2\n //  }\n //  bb4: {\n-//      falseEdges -> [real: bb13, imaginary: bb5]; //pre_binding3\n+//      falseEdges -> [real: bb12, imaginary: bb5]; //pre_binding3\n //  }\n //  bb5: {\n //      unreachable;\n@@ -68,43 +68,43 @@ fn main() {\n //  bb7: {\n //      unreachable;\n //  }\n-//  bb8: {\n-//      ...\n-//      return;\n-//  }\n-//  bb9: { // binding1 and guard\n+//  bb8: { // binding1 and guard\n //      StorageLive(_6);\n //      _6 = &(((promoted[1]: std::option::Option<i32>) as Some).0: i32);\n //      _4 = &shallow (promoted[0]: std::option::Option<i32>);\n //      StorageLive(_7);\n-//      _7 = const guard() -> [return: bb10, unwind: bb1];\n+//      _7 = const guard() -> [return: bb9, unwind: bb1];\n //  }\n-//  bb10: {\n+//  bb9: {\n //      FakeRead(ForMatchGuard, _4);\n //      FakeRead(ForGuardBinding, _6);\n-//      switchInt(move _7) -> [false: bb6, otherwise: bb11];\n+//      switchInt(move _7) -> [false: bb6, otherwise: bb10];\n //  }\n-//  bb11: {\n+//  bb10: {\n //      StorageLive(_5);\n //      _5 = ((_2 as Some).0: i32);\n //      StorageLive(_8);\n //      _8 = _5;\n //      _1 = (const 1i32, move _8);\n //      StorageDead(_8);\n-//      goto -> bb8;\n+//      goto -> bb13;\n //  }\n-//  bb12: {\n+//  bb11: {\n //      StorageLive(_9);\n //      _9 = ((_2 as Some).0: i32);\n //      StorageLive(_10);\n //      _10 = _9;\n //      _1 = (const 2i32, move _10);\n //      StorageDead(_10);\n-//      goto -> bb8;\n+//      goto -> bb13;\n //  }\n-//  bb13: {\n+//  bb12: {\n //      _1 = (const 3i32, const 3i32);\n-//      goto -> bb8;\n+//      goto -> bb13;\n+//  }\n+//  bb13: {\n+//      ...\n+//      return;\n //  }\n // END rustc.full_tested_match.QualifyAndPromoteConstants.after.mir\n //\n@@ -120,13 +120,13 @@ fn main() {\n //      resume;\n //  }\n //  bb2: {\n-//      falseEdges -> [real: bb9, imaginary: bb3];\n+//      falseEdges -> [real: bb8, imaginary: bb3];\n //  }\n //  bb3: {\n-//      falseEdges -> [real: bb12, imaginary: bb4];\n+//      falseEdges -> [real: bb11, imaginary: bb4];\n //  }\n //  bb4: {\n-//      falseEdges -> [real: bb13, imaginary: bb5];\n+//      falseEdges -> [real: bb12, imaginary: bb5];\n //  }\n //  bb5: {\n //      unreachable;\n@@ -137,43 +137,43 @@ fn main() {\n //  bb7: {\n //      unreachable;\n //  }\n-//  bb8: {\n-//      ...\n-//      return;\n-//  }\n-//  bb9: { // binding1 and guard\n+//  bb8: { // binding1 and guard\n //      StorageLive(_6);\n //      _6 = &((_2 as Some).0: i32);\n //      _4 = &shallow _2;\n //      StorageLive(_7);\n-//      _7 = const guard() -> [return: bb10, unwind: bb1];\n+//      _7 = const guard() -> [return: bb9, unwind: bb1];\n //  }\n-//  bb10: { // end of guard\n+//  bb9: { // end of guard\n //      FakeRead(ForMatchGuard, _4);\n //      FakeRead(ForGuardBinding, _6);\n-//      switchInt(move _7) -> [false: bb6, otherwise: bb11];\n+//      switchInt(move _7) -> [false: bb6, otherwise: bb10];\n //  }\n-//  bb11: { // arm1\n+//  bb10: { // arm1\n //      StorageLive(_5);\n //      _5 = ((_2 as Some).0: i32);\n //      StorageLive(_8);\n //      _8 = _5;\n //      _1 = (const 1i32, move _8);\n //      StorageDead(_8);\n-//      goto -> bb8;\n+//      goto -> bb13;\n //  }\n-//  bb12: { // arm2\n+//  bb11: { // arm2\n //      _1 = (const 3i32, const 3i32);\n-//      goto -> bb8;\n+//      goto -> bb13;\n //  }\n-//  bb13: { // binding3 and arm3\n+//  bb12: { // binding3 and arm3\n //      StorageLive(_9);\n //      _9 = ((_2 as Some).0: i32);\n //      StorageLive(_10);\n //      _10 = _9;\n //      _1 = (const 2i32, move _10);\n //      StorageDead(_10);\n-//      goto -> bb8;\n+//      goto -> bb13;\n+//  }\n+//  bb13: {\n+//      ...\n+//      return;\n //  }\n // END rustc.full_tested_match2.QualifyAndPromoteConstants.before.mir\n //\n@@ -189,79 +189,79 @@ fn main() {\n //      resume;\n //  }\n //  bb2: {\n-//      falseEdges -> [real: bb10, imaginary: bb3]; //pre_binding1\n+//      falseEdges -> [real: bb9, imaginary: bb3];\n //  }\n //  bb3: {\n-//      falseEdges -> [real: bb13, imaginary: bb4]; //pre_binding2\n+//      falseEdges -> [real: bb12, imaginary: bb4];\n //  }\n //  bb4: {\n-//      falseEdges -> [real: bb14, imaginary: bb5]; //pre_binding3\n+//      falseEdges -> [real: bb13, imaginary: bb5];\n //  }\n //  bb5: {\n-//      falseEdges -> [real: bb17, imaginary: bb6]; //pre_binding4\n+//      falseEdges -> [real: bb16, imaginary: bb6];\n //  }\n //  bb6: {\n //      unreachable;\n //  }\n-//  bb7: { // to pre_binding2\n+//  bb7: {\n //      falseEdges -> [real: bb3, imaginary: bb3];\n //  }\n-//  bb8: { // to pre_binding4\n+//  bb8: {\n //      falseEdges -> [real: bb5, imaginary: bb5];\n //  }\n-//  bb9: {\n-//      ...\n-//      return;\n-//  }\n-//  bb10: { // binding1: Some(w) if guard()\n+//  bb9: { // binding1: Some(w) if guard()\n //      StorageLive(_7);\n //      _7 = &((_2 as Some).0: i32);\n //      _5 = &shallow _2;\n //      StorageLive(_8);\n-//      _8 = const guard() -> [return: bb11, unwind: bb1];\n+//      _8 = const guard() -> [return: bb10, unwind: bb1];\n //  }\n-//  bb11: { //end of guard\n+//  bb10: { //end of guard\n //      FakeRead(ForMatchGuard, _5);\n //      FakeRead(ForGuardBinding, _7);\n-//      switchInt(move _8) -> [false: bb7, otherwise: bb12];\n+//      switchInt(move _8) -> [false: bb7, otherwise: bb11];\n //  }\n-//  bb12: { // set up bindings for arm1\n+//  bb11: { // set up bindings for arm1\n //      StorageLive(_6);\n //      _6 = ((_2 as Some).0: i32);\n //      _1 = const 1i32;\n-//      goto -> bb9;\n+//      goto -> bb17;\n //  }\n-//  bb13: { // binding2 & arm2\n+//  bb12: { // binding2 & arm2\n //      StorageLive(_9);\n //      _9 = _2;\n //      _1 = const 2i32;\n-//      goto -> bb9;\n+//      goto -> bb17;\n //  }\n-//  bb14: { // binding3: Some(y) if guard2(y)\n+//  bb13: { // binding3: Some(y) if guard2(y)\n //      StorageLive(_11);\n //      _11 = &((_2 as Some).0: i32);\n //      _5 = &shallow _2;\n //      StorageLive(_12);\n //      StorageLive(_13);\n //      _13 = (*_11);\n-//      _12 = const guard2(move _13) -> [return: bb15, unwind: bb1];\n+//      _12 = const guard2(move _13) -> [return: bb14, unwind: bb1];\n //  }\n-//  bb15: { // end of guard2\n+//  bb14: { // end of guard2\n //      StorageDead(_13);\n //      FakeRead(ForMatchGuard, _5);\n //      FakeRead(ForGuardBinding, _11);\n-//      switchInt(move _12) -> [false: bb8, otherwise: bb16];\n+//      switchInt(move _12) -> [false: bb8, otherwise: bb15];\n //  }\n-//  bb16: { // binding4 & arm4\n+//  bb15: { // binding4 & arm4\n //      StorageLive(_10);\n //      _10 = ((_2 as Some).0: i32);\n //      _1 = const 3i32;\n-//      goto -> bb9;\n+//      goto -> bb17;\n //  }\n-//  bb17: {\n+//  bb16: {\n //      StorageLive(_14);\n //      _14 = _2;\n //      _1 = const 4i32;\n-//      goto -> bb9;\n+//      goto -> bb17;\n+//  }\n+//  bb17: {\n+//      ...\n+//      return;\n //  }\n // END rustc.main.QualifyAndPromoteConstants.before.mir"}, {"sha": "3f248f3d41a646d3fcca0ad3ce20f7896872783a", "filename": "src/test/mir-opt/match_test.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fmatch_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fmatch_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmatch_test.rs?ref=5ffc9197264a07a50bfb27e436fe284ae8c0687c", "patch": "@@ -23,16 +23,16 @@ fn main() {\n //        switchInt(move _4) -> [false: bb7, otherwise: bb8];\n //    }\n //    bb1: {\n-//        falseEdges -> [real: bb13, imaginary: bb2];\n+//        falseEdges -> [real: bb12, imaginary: bb2];\n //    }\n //    bb2: {\n-//        falseEdges -> [real: bb14, imaginary: bb3];\n+//        falseEdges -> [real: bb13, imaginary: bb3];\n //    }\n //    bb3: {\n-//        falseEdges -> [real: bb15, imaginary: bb4];\n+//        falseEdges -> [real: bb14, imaginary: bb4];\n //    }\n //    bb4: {\n-//        falseEdges -> [real: bb16, imaginary: bb5];\n+//        falseEdges -> [real: bb15, imaginary: bb5];\n //    }\n //    bb5: {\n //        unreachable;\n@@ -56,31 +56,31 @@ fn main() {\n //        switchInt(move _7) -> [false: bb9, otherwise: bb2];\n //    }\n //    bb11: {\n-//        StorageDead(_8);\n-//        _0 = ();\n-//        StorageDead(_2);\n-//        StorageDead(_1);\n-//        return;\n-//    }\n-//    bb12: {\n //        _3 = const 0i32;\n-//        goto -> bb11;\n+//        goto -> bb16;\n //    }\n-//    bb13: {\n+//    bb12: {\n //        StorageLive(_8);\n //        _8 = _2;\n-//        switchInt(move _8) -> [false: bb6, otherwise: bb12];\n+//        switchInt(move _8) -> [false: bb6, otherwise: bb11];\n //    }\n-//    bb14: {\n+//    bb13: {\n //        _3 = const 1i32;\n-//        goto -> bb11;\n+//        goto -> bb16;\n //    }\n-//    bb15: {\n+//    bb14: {\n //        _3 = const 2i32;\n-//        goto -> bb11;\n+//        goto -> bb16;\n //    }\n-//    bb16: {\n+//    bb15: {\n //        _3 = const 3i32;\n-//        goto -> bb11;\n+//        goto -> bb16;\n+//    }\n+//    bb16: {\n+//        StorageDead(_8);\n+//        _0 = ();\n+//        StorageDead(_2);\n+//        StorageDead(_1);\n+//        return;\n //    }\n // END rustc.main.SimplifyCfg-initial.after.mir"}, {"sha": "48d1c991b623ed981eda7306d6d21e87eae7e701", "filename": "src/test/mir-opt/remove_fake_borrows.rs", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc9197264a07a50bfb27e436fe284ae8c0687c/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs?ref=5ffc9197264a07a50bfb27e436fe284ae8c0687c", "patch": "@@ -24,10 +24,10 @@ fn main() {\n //     switchInt(move _3) -> [1isize: bb5, otherwise: bb2];\n // }\n // bb1: {\n-//     goto -> bb8;\n+//     goto -> bb7;\n // }\n // bb2: {\n-//     goto -> bb9;\n+//     goto -> bb8;\n // }\n // bb3: {\n //     unreachable;\n@@ -39,14 +39,10 @@ fn main() {\n //     switchInt((*(*((_1 as Some).0: &'<empty> &'<empty> i32)))) -> [0i32: bb1, otherwise: bb2];\n // }\n // bb6: {\n-//     StorageDead(_8);\n-//     return;\n-// }\n-// bb7: {\n //     _0 = const 0i32;\n-//     goto -> bb6;\n+//     goto -> bb9;\n // }\n-// bb8: {\n+// bb7: {\n //     _4 = &shallow _1;\n //     _5 = &shallow ((_1 as Some).0: &'<empty> &'<empty> i32);\n //     _6 = &shallow (*((_1 as Some).0: &'<empty> &'<empty> i32));\n@@ -57,11 +53,15 @@ fn main() {\n //     FakeRead(ForMatchGuard, _5);\n //     FakeRead(ForMatchGuard, _6);\n //     FakeRead(ForMatchGuard, _7);\n-//     switchInt(move _8) -> [false: bb4, otherwise: bb7];\n+//     switchInt(move _8) -> [false: bb4, otherwise: bb6];\n // }\n-// bb9: {\n+// bb8: {\n //     _0 = const 1i32;\n-//     goto -> bb6;\n+//     goto -> bb9;\n+// }\n+// bb9: {\n+//     StorageDead(_8);\n+//     return;\n // }\n // bb10: {\n //     resume;\n@@ -75,10 +75,10 @@ fn main() {\n //     switchInt(move _3) -> [1isize: bb5, otherwise: bb2];\n // }\n // bb1: {\n-//     goto -> bb8;\n+//     goto -> bb7;\n // }\n // bb2: {\n-//     goto -> bb9;\n+//     goto -> bb8;\n // }\n // bb3: {\n //     unreachable;\n@@ -90,14 +90,10 @@ fn main() {\n //     switchInt((*(*((_1 as Some).0: &'<empty> &'<empty> i32)))) -> [0i32: bb1, otherwise: bb2];\n // }\n // bb6: {\n-//     StorageDead(_8);\n-//     return;\n-// }\n-// bb7: {\n //     _0 = const 0i32;\n-//     goto -> bb6;\n+//     goto -> bb9;\n // }\n-// bb8: {\n+// bb7: {\n //     nop;\n //     nop;\n //     nop;\n@@ -108,11 +104,15 @@ fn main() {\n //     nop;\n //     nop;\n //     nop;\n-//     switchInt(move _8) -> [false: bb4, otherwise: bb7];\n+//     switchInt(move _8) -> [false: bb4, otherwise: bb6];\n // }\n-// bb9: {\n+// bb8: {\n //     _0 = const 1i32;\n-//     goto -> bb6;\n+//     goto -> bb9;\n+// }\n+// bb9: {\n+//     StorageDead(_8);\n+//     return;\n // }\n // bb10: {\n //     resume;"}]}