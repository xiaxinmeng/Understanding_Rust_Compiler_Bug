{"sha": "0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "node_id": "C_kwDOAAsO6NoAKDBkZWNmMTRlZjFlNjNlN2U3YjcwODA1Y2RmM2QwM2I0MmQyZjQ1N2M", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-01-31T14:51:34Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2022-01-31T14:51:34Z"}, "message": "Do not store overlap_mode, just pass it down on insert", "tree": {"sha": "92203b1a5bbcece59fcf96f6af70b82d43f1a39a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92203b1a5bbcece59fcf96f6af70b82d43f1a39a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmH393YACgkQgTGiTgx5\n769eOA//f9wTWZ9J+3yBdS/yc0DVwiEukojVVwl3SGVH7gXYIj4C8mYuMo1gJPis\nqPNffi3ph7oo0cgnjOcaFCjD6V8ahllis0CQZpHRZ0ImFp3a9jM5GmpdVyAILLv0\ngB0eT1ilsz2q1bPczg4GoAIYP+u6m5gSmK99Orn/MtaapNolDAdZwZOCa93z8YIC\n8hMGvHWrJcmTMdUqIHaTZ4oo2YXnHveA9ugbdY6u0oDg4cFo8xTDFh/GYAiNgd+4\nKG/+/r1v/VbPXpHZSPlPQbAbm4eNLLG7iz+8udropCNgfmC5NLJqr00FFs0NaZwn\nxMhb3D5uVddTTYVAq/dcNd7TavaVcx9LKza1wnTsHGuYwZFzuHAJdsqJ8rtRnJH/\nmwFfQ0T9w0kl5o2vHJiK9XkWSrRF5/AqoMMtLZh254dL1di9Msi6mgNIJsKaYO/j\nYth35o1veuNq817k6y9yCJftMYA81IjPC2NhtcwtjLI67VdCIvJsVGLqZi9n6ugz\nc9ZOSm8df38/1Hjwa/OuPWJkmDipuyfwr1raUkQ1aNin28aas4OwWwDVTIU1fFRZ\nVA1/PzgplaPgej06xTVyIsOFyiL7xMPz/oUjCFYETFdSTzdu/14gCQp+H2tcfm+t\nrGtKTX+d7wV1p6yh05SqUcVzk55BosqMVFDWad2c/JADSngBX+I=\n=y4po\n-----END PGP SIGNATURE-----", "payload": "tree 92203b1a5bbcece59fcf96f6af70b82d43f1a39a\nparent a9bfb5d83754710a8cb7da2f7d17f62ec3cafdcc\nauthor Santiago Pastorino <spastorino@gmail.com> 1643640694 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1643640694 -0300\n\nDo not store overlap_mode, just pass it down on insert\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "html_url": "https://github.com/rust-lang/rust/commit/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9bfb5d83754710a8cb7da2f7d17f62ec3cafdcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9bfb5d83754710a8cb7da2f7d17f62ec3cafdcc", "html_url": "https://github.com/rust-lang/rust/commit/a9bfb5d83754710a8cb7da2f7d17f62ec3cafdcc"}], "stats": {"total": 22, "additions": 6, "deletions": 16}, "files": [{"sha": "03a6daaf8aa4f6996c76e5f819b233ddada98e8e", "filename": "compiler/rustc_middle/src/traits/specialization_graph.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fspecialization_graph.rs?ref=0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "patch": "@@ -32,23 +32,11 @@ pub struct Graph {\n \n     /// Whether an error was emitted while constructing the graph.\n     pub has_errored: bool,\n-\n-    /// Overlap mode to be used\n-    pub overlap_mode: OverlapMode,\n }\n \n impl Graph {\n     pub fn new() -> Graph {\n-        Graph {\n-            parent: Default::default(),\n-            children: Default::default(),\n-            has_errored: false,\n-            overlap_mode: OverlapMode::Stable,\n-        }\n-    }\n-\n-    pub fn set_overlap_mode(&mut self, overlap_mode: OverlapMode) {\n-        self.overlap_mode = overlap_mode;\n+        Graph { parent: Default::default(), children: Default::default(), has_errored: false }\n     }\n \n     /// The parent of a given impl, which is the `DefId` of the trait when the"}, {"sha": "b098e8590da01e19f50afa446e817de4691578ee", "filename": "compiler/rustc_trait_selection/src/traits/specialize/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fmod.rs?ref=0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "patch": "@@ -257,7 +257,7 @@ pub(super) fn specialization_graph_provider(\n     trait_id: DefId,\n ) -> specialization_graph::Graph {\n     let mut sg = specialization_graph::Graph::new();\n-    sg.set_overlap_mode(specialization_graph::OverlapMode::get(tcx, trait_id));\n+    let overlap_mode = specialization_graph::OverlapMode::get(tcx, trait_id);\n \n     let mut trait_impls: Vec<_> = tcx.all_impls(trait_id).collect();\n \n@@ -271,7 +271,7 @@ pub(super) fn specialization_graph_provider(\n     for impl_def_id in trait_impls {\n         if let Some(impl_def_id) = impl_def_id.as_local() {\n             // This is where impl overlap checking happens:\n-            let insert_result = sg.insert(tcx, impl_def_id.to_def_id());\n+            let insert_result = sg.insert(tcx, impl_def_id.to_def_id(), overlap_mode);\n             // Report error if there was one.\n             let (overlap, used_to_be_allowed) = match insert_result {\n                 Err(overlap) => (Some(overlap), None),"}, {"sha": "5ee8b45e66b5c07934d95fca6668c7b571680659", "filename": "compiler/rustc_trait_selection/src/traits/specialize/specialization_graph.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0decf14ef1e63e7e7b70805cdf3d03b42d2f457c/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fspecialize%2Fspecialization_graph.rs?ref=0decf14ef1e63e7e7b70805cdf3d03b42d2f457c", "patch": "@@ -277,6 +277,7 @@ pub trait GraphExt {\n         &mut self,\n         tcx: TyCtxt<'_>,\n         impl_def_id: DefId,\n+        overlap_mode: OverlapMode,\n     ) -> Result<Option<FutureCompatOverlapError>, OverlapError>;\n \n     /// Insert cached metadata mapping from a child impl back to its parent.\n@@ -291,6 +292,7 @@ impl GraphExt for Graph {\n         &mut self,\n         tcx: TyCtxt<'_>,\n         impl_def_id: DefId,\n+        overlap_mode: OverlapMode,\n     ) -> Result<Option<FutureCompatOverlapError>, OverlapError> {\n         assert!(impl_def_id.is_local());\n \n@@ -335,7 +337,7 @@ impl GraphExt for Graph {\n                 tcx,\n                 impl_def_id,\n                 simplified,\n-                self.overlap_mode,\n+                overlap_mode,\n             )?;\n \n             match insert_result {"}]}