{"sha": "9d38541d3fbc21dfed58877b9181b40169c149a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkMzg1NDFkM2ZiYzIxZGZlZDU4ODc3YjkxODFiNDAxNjljMTQ5YTI=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-11-29T18:47:34Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-05T13:42:34Z"}, "message": "improve error reporting", "tree": {"sha": "9071b7323e5c238ce0454cc84a294d5c95834e51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9071b7323e5c238ce0454cc84a294d5c95834e51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d38541d3fbc21dfed58877b9181b40169c149a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d38541d3fbc21dfed58877b9181b40169c149a2", "html_url": "https://github.com/rust-lang/rust/commit/9d38541d3fbc21dfed58877b9181b40169c149a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d38541d3fbc21dfed58877b9181b40169c149a2/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2614cc51dde5e57983dd9809372845073ac30aac", "url": "https://api.github.com/repos/rust-lang/rust/commits/2614cc51dde5e57983dd9809372845073ac30aac", "html_url": "https://github.com/rust-lang/rust/commit/2614cc51dde5e57983dd9809372845073ac30aac"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "0c4071b8b5d9c6d9861e7fb0c3e268d20c465f2b", "filename": "src/librustc/traits/select.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9d38541d3fbc21dfed58877b9181b40169c149a2/src%2Flibrustc%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d38541d3fbc21dfed58877b9181b40169c149a2/src%2Flibrustc%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fselect.rs?ref=9d38541d3fbc21dfed58877b9181b40169c149a2", "patch": "@@ -1088,15 +1088,14 @@ impl<'cx, 'gcx, 'tcx> SelectionContext<'cx, 'gcx, 'tcx> {\n         }\n \n         match self.is_knowable(stack) {\n-            Some(Conflict::Downstream { used_to_be_broken: true }) if false => {\n-                // ignore this for future-compat.\n-            }\n             None => {}\n             Some(conflict) => {\n                 debug!(\"coherence stage: not knowable\");\n                 // Heuristics: show the diagnostics when there are no candidates in crate.\n                 let candidate_set = self.assemble_candidates(stack)?;\n-                if !candidate_set.ambiguous && candidate_set.vec.is_empty() {\n+                if !candidate_set.ambiguous && candidate_set.vec.iter().all(|c| {\n+                    !self.evaluate_candidate(stack, &c).may_apply()\n+                }) {\n                     let trait_ref = stack.obligation.predicate.skip_binder().trait_ref;\n                     let self_ty = trait_ref.self_ty();\n                     let trait_desc = trait_ref.to_string();"}]}