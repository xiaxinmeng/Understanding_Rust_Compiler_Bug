{"sha": "06ab643b007592a7f76309e3c9cb2e715e211a96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2YWI2NDNiMDA3NTkyYTdmNzYzMDllM2M5Y2IyZTcxNWUyMTFhOTY=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-16T17:54:33Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-16T17:54:33Z"}, "message": "Merge #136\n\n136: Teraro r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "75f6dacf0c0a8a1c19c7f1ac8b369e6f49048115", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75f6dacf0c0a8a1c19c7f1ac8b369e6f49048115"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/06ab643b007592a7f76309e3c9cb2e715e211a96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/06ab643b007592a7f76309e3c9cb2e715e211a96", "html_url": "https://github.com/rust-lang/rust/commit/06ab643b007592a7f76309e3c9cb2e715e211a96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/06ab643b007592a7f76309e3c9cb2e715e211a96/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "1216878f7be20dd0e652fb8cdc395009fdcfae07", "url": "https://api.github.com/repos/rust-lang/rust/commits/1216878f7be20dd0e652fb8cdc395009fdcfae07", "html_url": "https://github.com/rust-lang/rust/commit/1216878f7be20dd0e652fb8cdc395009fdcfae07"}, {"sha": "b43bcd43c604126c2b250a30cc56459be754572a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b43bcd43c604126c2b250a30cc56459be754572a", "html_url": "https://github.com/rust-lang/rust/commit/b43bcd43c604126c2b250a30cc56459be754572a"}], "stats": {"total": 164, "additions": 53, "deletions": 111}, "files": [{"sha": "79da84ebcc24be28a1e9ee663d2b6a58e506c375", "filename": "Cargo.lock", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/06ab643b007592a7f76309e3c9cb2e715e211a96/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/06ab643b007592a7f76309e3c9cb2e715e211a96/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=06ab643b007592a7f76309e3c9cb2e715e211a96", "patch": "@@ -794,7 +794,7 @@ dependencies = [\n \n [[package]]\n name = \"ron\"\n-version = \"0.3.0\"\n+version = \"0.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"base64 0.9.3 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1003,7 +1003,7 @@ dependencies = [\n \n [[package]]\n name = \"tera\"\n-version = \"0.11.17\"\n+version = \"0.11.18\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n dependencies = [\n  \"chrono 0.4.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -1021,6 +1021,17 @@ dependencies = [\n  \"url 1.7.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"teraron\"\n+version = \"0.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"failure 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"heck 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"ron 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"tera 0.11.18 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n [[package]]\n name = \"termion\"\n version = \"1.5.1\"\n@@ -1080,10 +1091,8 @@ version = \"0.1.0\"\n dependencies = [\n  \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"heck 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"ron 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"tera 0.11.17 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"teraron 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"walkdir 2.2.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n@@ -1345,7 +1354,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"747ba3b235651f6e2f67dfa8bcdcd073ddb7c243cb21c442fc12395dfcac212d\"\n \"checksum relative-path 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"e614f96449605730b4f7ad2c019e88c1652d730634b4eba07b810801856635e3\"\n \"checksum remove_dir_all 0.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3488ba1b9a2084d38645c4c08276a1752dcbf2c7130d74f1569681ad5d2799c5\"\n-\"checksum ron 0.3.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a9fa11b7a38511d46ff1959ae46ebb60bd8a746f17bdd0206b4c8de7559ac47b\"\n+\"checksum ron 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c48677d8a9247a4e0d1f3f9cb4b0a8e29167fdc3c04f383a5e669cd7a960ae0f\"\n \"checksum rowan 0.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"4a1a7366ece9deee5e7df8316a136d585d5c5042854c2297f7f1aee3014c9130\"\n \"checksum rustc-demangle 0.1.9 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bcfe5b13211b4d78e5c2cadfebd7769197d95c639c35a50057eb4c05de811395\"\n \"checksum rustc-hash 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7540fc8b0c49f096ee9c961cda096467dce8084bec6bdca2fc83895fd9b28cb8\"\n@@ -1371,7 +1380,8 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum syn 0.15.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b036b7b35e846707c0e55c2c9441fa47867c0f87fca416921db3261b1d8c741a\"\n \"checksum synstructure 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"85bb9b7550d063ea184027c9b8c20ac167cd36d3e06b3a40bceb9d746dc1a7b7\"\n \"checksum tempdir 0.3.7 (registry+https://github.com/rust-lang/crates.io-index)\" = \"15f2b5fb00ccdf689e0149d1b1b3c03fead81c2b37735d812fa8bddbbf41b6d8\"\n-\"checksum tera 0.11.17 (registry+https://github.com/rust-lang/crates.io-index)\" = \"2829d259c4699fbbe8acb353d231e6da31ff4301c52244413ed29ff6093da412\"\n+\"checksum tera 0.11.18 (registry+https://github.com/rust-lang/crates.io-index)\" = \"6c87cae42cc4fc480278c7583792cc5da2d51a25be916b7921cbb45c43063b8d\"\n+\"checksum teraron 0.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"0d89ad4617d1dec55331067fadaa041e813479e1779616f3d3ce9308bf46184e\"\n \"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n \"checksum text_unit 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"93fc86da66d0b9aa8d359b0ec31b4342c6bc52637eadef05b91b098551a9f8e9\"\n \"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\""}, {"sha": "41b19c5c69c2270acc94c6ef0969cce35dd18f21", "filename": "crates/tools/Cargo.toml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2FCargo.toml?ref=06ab643b007592a7f76309e3c9cb2e715e211a96", "patch": "@@ -6,10 +6,8 @@ authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n publish = false\n \n [dependencies]\n-ron = \"0.3.0\"\n+teraron = \"0.0.1\"\n walkdir = \"2.1.3\"\n itertools = \"0.7.8\"\n-tera = \"0.11\"\n clap = \"2.32.0\"\n failure = \"0.1.1\"\n-heck = \"0.3.0\""}, {"sha": "444745be5dc4ce7292a31fb34dcd568ef02525d6", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 22, "deletions": 63, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=06ab643b007592a7f76309e3c9cb2e715e211a96", "patch": "@@ -1,25 +1,20 @@\n extern crate itertools;\n-#[macro_use]\n extern crate failure;\n-extern crate heck;\n-extern crate ron;\n-extern crate tera;\n+extern crate teraron;\n \n-use heck::{CamelCase, ShoutySnakeCase, SnakeCase};\n-use itertools::Itertools;\n use std::{\n-    collections::HashMap,\n-    fs,\n     path::{Path, PathBuf},\n };\n \n+use itertools::Itertools;\n+\n+pub use teraron::{Mode, Verify, Overwrite};\n+\n pub type Result<T> = ::std::result::Result<T, failure::Error>;\n \n-const GRAMMAR: &str = \"ra_syntax/src/grammar.ron\";\n-pub const SYNTAX_KINDS: &str = \"ra_syntax/src/syntax_kinds/generated.rs\";\n-pub const SYNTAX_KINDS_TEMPLATE: &str = \"ra_syntax/src/syntax_kinds/generated.rs.tera\";\n-pub const AST: &str = \"ra_syntax/src/ast/generated.rs\";\n-pub const AST_TEMPLATE: &str = \"ra_syntax/src/ast/generated.rs.tera\";\n+pub const GRAMMAR: &str = \"ra_syntax/src/grammar.ron\";\n+pub const SYNTAX_KINDS: &str = \"ra_syntax/src/syntax_kinds/generated.rs.tera\";\n+pub const AST: &str = \"ra_syntax/src/ast/generated.rs.tera\";\n \n #[derive(Debug)]\n pub struct Test {\n@@ -61,59 +56,23 @@ pub fn collect_tests(s: &str) -> Vec<(usize, Test)> {\n     res\n }\n \n-pub fn update(path: &Path, contents: &str, verify: bool) -> Result<()> {\n-    match fs::read_to_string(path) {\n-        Ok(ref old_contents) if old_contents == contents => {\n-            return Ok(());\n-        }\n-        _ => (),\n-    }\n-    if verify {\n-        bail!(\"`{}` is not up-to-date\", path.display());\n-    }\n-    eprintln!(\"updating {}\", path.display());\n-    fs::write(path, contents)?;\n+pub fn generate(mode: Mode) -> Result<()> {\n+    let grammar = project_root().join(GRAMMAR);\n+    let syntax_kinds = project_root().join(SYNTAX_KINDS);\n+    let ast = project_root().join(AST);\n+    teraron::generate(\n+        &syntax_kinds,\n+        &grammar,\n+        mode,\n+    )?;\n+    teraron::generate(\n+        &ast,\n+        &grammar,\n+        mode,\n+    )?;\n     Ok(())\n }\n \n-pub fn render_template(template: &Path) -> Result<String> {\n-    let grammar: ron::value::Value = {\n-        let text = fs::read_to_string(project_root().join(GRAMMAR))?;\n-        ron::de::from_str(&text)?\n-    };\n-    let template = fs::read_to_string(template)?;\n-    let mut tera = tera::Tera::default();\n-    tera.add_raw_template(\"grammar\", &template)\n-        .map_err(|e| format_err!(\"template error: {:?}\", e))?;\n-    tera.register_function(\"concat\", Box::new(concat));\n-    tera.register_filter(\"camel\", |arg, _| {\n-        Ok(arg.as_str().unwrap().to_camel_case().into())\n-    });\n-    tera.register_filter(\"snake\", |arg, _| {\n-        Ok(arg.as_str().unwrap().to_snake_case().into())\n-    });\n-    tera.register_filter(\"SCREAM\", |arg, _| {\n-        Ok(arg.as_str().unwrap().to_shouty_snake_case().into())\n-    });\n-    let ret = tera\n-        .render(\"grammar\", &grammar)\n-        .map_err(|e| format_err!(\"template error: {:?}\", e))?;\n-    return Ok(ret);\n-\n-    fn concat(args: HashMap<String, tera::Value>) -> tera::Result<tera::Value> {\n-        let mut elements = Vec::new();\n-        for &key in [\"a\", \"b\", \"c\"].iter() {\n-            let val = match args.get(key) {\n-                Some(val) => val,\n-                None => continue,\n-            };\n-            let val = val.as_array().unwrap();\n-            elements.extend(val.iter().cloned());\n-        }\n-        Ok(tera::Value::Array(elements))\n-    }\n-}\n-\n pub fn project_root() -> PathBuf {\n     Path::new(&std::env::var(\"CARGO_MANIFEST_DIR\").unwrap())\n         .parent()"}, {"sha": "965bc772967a5a76cf33e5f898643649e440c8b0", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 11, "deletions": 25, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=06ab643b007592a7f76309e3c9cb2e715e211a96", "patch": "@@ -3,6 +3,7 @@ extern crate clap;\n extern crate failure;\n extern crate tools;\n extern crate walkdir;\n+extern crate teraron;\n \n use clap::{App, Arg, SubCommand};\n use std::{\n@@ -12,8 +13,7 @@ use std::{\n     process::Command,\n };\n use tools::{\n-    collect_tests, project_root, render_template, update, Result, Test, AST, AST_TEMPLATE,\n-    SYNTAX_KINDS, SYNTAX_KINDS_TEMPLATE,\n+    collect_tests, Result, Test, generate, Mode, Overwrite, Verify,\n };\n \n const GRAMMAR_DIR: &str = \"./crates/ra_syntax/src/grammar\";\n@@ -32,35 +32,21 @@ fn main() -> Result<()> {\n         .subcommand(SubCommand::with_name(\"gen-tests\"))\n         .subcommand(SubCommand::with_name(\"install-code\"))\n         .get_matches();\n+    let mode = if matches.is_present(\"verify\") {\n+        Verify\n+    } else {\n+        Overwrite\n+    };\n     match matches.subcommand() {\n         (\"install-code\", _) => install_code_extension()?,\n-        (name, Some(matches)) => run_gen_command(name, matches.is_present(\"verify\"))?,\n-        _ => unreachable!(),\n-    }\n-    Ok(())\n-}\n-\n-fn run_gen_command(name: &str, verify: bool) -> Result<()> {\n-    match name {\n-        \"gen-kinds\" => {\n-            update(\n-                &project_root().join(SYNTAX_KINDS),\n-                &render_template(&project_root().join(SYNTAX_KINDS_TEMPLATE))?,\n-                verify,\n-            )?;\n-            update(\n-                &project_root().join(AST),\n-                &render_template(&project_root().join(AST_TEMPLATE))?,\n-                verify,\n-            )?;\n-        }\n-        \"gen-tests\" => gen_tests(verify)?,\n+        (\"gen-tests\", _) => gen_tests(mode)?,\n+        (\"gen-kinds\", _) => generate(Overwrite)?,\n         _ => unreachable!(),\n     }\n     Ok(())\n }\n \n-fn gen_tests(verify: bool) -> Result<()> {\n+fn gen_tests(mode: Mode) -> Result<()> {\n     let tests = tests_from_dir(Path::new(GRAMMAR_DIR))?;\n \n     let inline_tests_dir = Path::new(INLINE_TESTS_DIR);\n@@ -83,7 +69,7 @@ fn gen_tests(verify: bool) -> Result<()> {\n                 inline_tests_dir.join(file_name)\n             }\n         };\n-        update(&path, &test.text, verify)?;\n+        teraron::update(&path, &test.text, mode)?;\n     }\n     Ok(())\n }"}, {"sha": "0bb5d15d8e183f892c1f7ec0e16ec8fe45dba0e3", "filename": "crates/tools/tests/cli.rs", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2Ftests%2Fcli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/06ab643b007592a7f76309e3c9cb2e715e211a96/crates%2Ftools%2Ftests%2Fcli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Ftests%2Fcli.rs?ref=06ab643b007592a7f76309e3c9cb2e715e211a96", "patch": "@@ -1,23 +1,12 @@\n extern crate tools;\n \n use tools::{\n-    project_root, render_template, update, AST, AST_TEMPLATE, SYNTAX_KINDS, SYNTAX_KINDS_TEMPLATE,\n+    generate, Verify\n };\n \n #[test]\n fn verify_template_generation() {\n-    if let Err(error) = update(\n-        &project_root().join(SYNTAX_KINDS),\n-        &render_template(&project_root().join(SYNTAX_KINDS_TEMPLATE)).unwrap(),\n-        true,\n-    ) {\n-        panic!(\"{}. Please update it by running `cargo gen-kinds`\", error);\n-    }\n-    if let Err(error) = update(\n-        &project_root().join(AST),\n-        &render_template(&project_root().join(AST_TEMPLATE)).unwrap(),\n-        true,\n-    ) {\n+    if let Err(error) = generate(Verify) {\n         panic!(\"{}. Please update it by running `cargo gen-kinds`\", error);\n     }\n }"}]}