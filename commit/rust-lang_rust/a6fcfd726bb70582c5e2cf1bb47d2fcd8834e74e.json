{"sha": "a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2ZmNmZDcyNmJiNzA1ODJjNWUyY2YxYmI0N2QyZmNkODgzNGU3NGU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-12-07T00:19:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-12-07T19:21:14Z"}, "message": "syntax: fix missing push in item macro expansion", "tree": {"sha": "6aab1e14b965e3c24425a76e7a0768f4ac874c4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6aab1e14b965e3c24425a76e7a0768f4ac874c4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e", "html_url": "https://github.com/rust-lang/rust/commit/a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70e0c6e27d54779e718aef866d6ab569af3c6a28", "url": "https://api.github.com/repos/rust-lang/rust/commits/70e0c6e27d54779e718aef866d6ab569af3c6a28", "html_url": "https://github.com/rust-lang/rust/commit/70e0c6e27d54779e718aef866d6ab569af3c6a28"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "1890ec36bddd1e5d7cc3bf698dd9c9e4be585061", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=a6fcfd726bb70582c5e2cf1bb47d2fcd8834e74e", "patch": "@@ -237,7 +237,7 @@ fn expand_item_mac(exts: HashMap<~str, syntax_extension>,\n     );\n \n     let extname = cx.parse_sess().interner.get(pth.idents[0]);\n-    let (expanded, ex_span) = match exts.find(*extname) {\n+    let expanded = match exts.find(*extname) {\n         None => cx.span_fatal(pth.span,\n                               fmt!(\"macro undefined: '%s!'\", *extname)),\n \n@@ -248,22 +248,26 @@ fn expand_item_mac(exts: HashMap<~str, syntax_extension>,\n                                     given '%s'\", *extname,\n                                    *cx.parse_sess().interner.get(it.ident)));\n             }\n-            (((*expand).expander)(cx, it.span, tts), (*expand).span)\n+            cx.bt_push(ExpandedFrom({call_site: it.span,\n+                                     callie: {name: *extname,\n+                                              span: (*expand).span}}));\n+            ((*expand).expander)(cx, it.span, tts)\n         }\n         Some(item_tt(ref expand)) => {\n             if it.ident == parse::token::special_idents::invalid {\n                 cx.span_fatal(pth.span,\n                               fmt!(\"macro %s! expects an ident argument\",\n                                    *extname));\n             }\n-            (((*expand).expander)(cx, it.span, it.ident, tts), (*expand).span)\n+            cx.bt_push(ExpandedFrom({call_site: it.span,\n+                                     callie: {name: *extname,\n+                                              span: (*expand).span}}));\n+            ((*expand).expander)(cx, it.span, it.ident, tts)\n         }\n         _ => cx.span_fatal(\n             it.span, fmt!(\"%s! is not legal in item position\", *extname))\n     };\n \n-    cx.bt_push(ExpandedFrom({call_site: it.span,\n-                              callie: {name: *extname, span: ex_span}}));\n     let maybe_it = match expanded {\n         mr_item(it) => fld.fold_item(it),\n         mr_expr(_) => cx.span_fatal(pth.span,"}]}