{"sha": "f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3YzdmODljM2NmYjVjMWQ4ZDlmYzEzNjU2MWU5NmUzZDk1NzJmZTQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-31T13:24:21Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-31T13:30:45Z"}, "message": "Annotate type hints for pattern name ranges instead of the pattern itself", "tree": {"sha": "139265c90e2140fab9efe3fd95cf6557fc74b18f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/139265c90e2140fab9efe3fd95cf6557fc74b18f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4", "html_url": "https://github.com/rust-lang/rust/commit/f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b36375590165f910bd3b40498eb9cb634bd61e6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b36375590165f910bd3b40498eb9cb634bd61e6f", "html_url": "https://github.com/rust-lang/rust/commit/b36375590165f910bd3b40498eb9cb634bd61e6f"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "8c533d641b229f28f48aedccc33c9f78489e3b6b", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 32, "deletions": 6, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=f7c7f89c3cfb5c1d8d9fc136561e96e3d9572fe4", "patch": "@@ -194,8 +194,12 @@ fn get_bind_pat_hints(\n     if should_not_display_type_hint(sema, &pat, &ty) {\n         return None;\n     }\n+\n     acc.push(InlayHint {\n-        range: pat.syntax().text_range(),\n+        range: match pat.name() {\n+            Some(name) => name.syntax().text_range(),\n+            None => pat.syntax().text_range(),\n+        },\n         kind: InlayKind::TypeHint,\n         label: hint_iterator(sema, &famous_defs, config, &ty)\n             .unwrap_or_else(|| ty.display_truncated(sema.db, config.max_length).to_string().into()),\n@@ -799,6 +803,28 @@ fn main() {\n         );\n     }\n \n+    #[test]\n+    fn type_hints_bindings_after_at() {\n+        check_types(\n+            r#\"\n+//- minicore: option\n+fn main() {\n+    let ref foo @ bar @ ref mut baz = 0;\n+          //^^^ &i32\n+                //^^^ i32\n+                              //^^^ &mut i32\n+    let [x @ ..] = [0];\n+       //^ [i32; 1]\n+    if let x @ Some(_) = Some(0) {}\n+         //^ Option<i32>\n+    let foo @ (bar, baz) = (3, 3);\n+      //^^^ (i32, i32)\n+             //^^^ i32\n+                  //^^^ i32\n+}\"#,\n+        );\n+    }\n+\n     #[test]\n     fn default_generic_types_should_not_be_displayed() {\n         check(\n@@ -839,7 +865,7 @@ impl<T> Iterator for SomeIter<T> {\n \n fn main() {\n     let mut some_iter = SomeIter::new();\n-      //^^^^^^^^^^^^^ SomeIter<Take<Repeat<i32>>>\n+          //^^^^^^^^^ SomeIter<Take<Repeat<i32>>>\n       some_iter.push(iter::repeat(2).take(2));\n     let iter_of_iters = some_iter.take(2);\n       //^^^^^^^^^^^^^ impl Iterator<Item = impl Iterator<Item = i32>>\n@@ -938,7 +964,7 @@ fn main() {\n       //^^^^ i32\n     let test: i32 = 33;\n     let mut test = 33;\n-      //^^^^^^^^ i32\n+          //^^^^ i32\n     let _ = 22;\n     let test = \"test\";\n       //^^^^ &str\n@@ -1048,7 +1074,7 @@ impl<T> IntoIterator for Vec<T> {\n \n fn main() {\n     let mut data = Vec::new();\n-      //^^^^^^^^ Vec<&str>\n+          //^^^^ Vec<&str>\n     data.push(\"foo\");\n     for i in\n \n@@ -1076,7 +1102,7 @@ impl<T> IntoIterator for Vec<T> {\n \n fn main() {\n     let mut data = Vec::new();\n-      //^^^^^^^^ Vec<&str>\n+          //^^^^ Vec<&str>\n     data.push(\"foo\");\n     for i in data {\n       //^ &str\n@@ -1153,7 +1179,7 @@ fn main() {\n             r#\"\n fn main() {\n     let mut start = 0;\n-      //^^^^^^^^^ i32\n+          //^^^^^ i32\n     (0..2).for_each(|increment| { start += increment; });\n                    //^^^^^^^^^ i32\n "}]}