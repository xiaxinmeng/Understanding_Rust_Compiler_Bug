{"sha": "25263c9576a0a92be32c3647da59df3c43d40ef4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MjYzYzk1NzZhMGE5MmJlMzJjMzY0N2RhNTlkZjNjNDNkNDBlZjQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-22T19:12:01Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-10-22T19:12:01Z"}, "message": "Make test targets in Makefile end in -boot.x86 or -boot.llvm when made by rustboot.", "tree": {"sha": "427d93965e175996ecbbfab4d1bf4cf536a3dec7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/427d93965e175996ecbbfab4d1bf4cf536a3dec7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25263c9576a0a92be32c3647da59df3c43d40ef4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25263c9576a0a92be32c3647da59df3c43d40ef4", "html_url": "https://github.com/rust-lang/rust/commit/25263c9576a0a92be32c3647da59df3c43d40ef4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25263c9576a0a92be32c3647da59df3c43d40ef4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36aea66e479708a9058dde1b2ad459972a62807c", "url": "https://api.github.com/repos/rust-lang/rust/commits/36aea66e479708a9058dde1b2ad459972a62807c", "html_url": "https://github.com/rust-lang/rust/commit/36aea66e479708a9058dde1b2ad459972a62807c"}], "stats": {"total": 65, "additions": 34, "deletions": 31}, "files": [{"sha": "6deb2626621a33897d838f759b35569156ac5da8", "filename": "src/Makefile", "status": "modified", "additions": 34, "deletions": 31, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/25263c9576a0a92be32c3647da59df3c43d40ef4/src%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/25263c9576a0a92be32c3647da59df3c43d40ef4/src%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FMakefile?ref=25263c9576a0a92be32c3647da59df3c43d40ef4", "patch": "@@ -653,11 +653,11 @@ endif\n \n TEST_RPASS_EXTRAS := $(wildcard test/run-pass/*/*.rs)\n TEST_RPASS_EXES_X86 := \\\n-                      $(TEST_RPASS_CRATES_X86:.rc=.x86$(CFG_EXE_SUFFIX)) \\\n-                      $(TEST_RPASS_SOURCES_X86:.rs=.x86$(CFG_EXE_SUFFIX))\n+              $(TEST_RPASS_CRATES_X86:.rc=-boot.x86$(CFG_EXE_SUFFIX)) \\\n+              $(TEST_RPASS_SOURCES_X86:.rs=-boot.x86$(CFG_EXE_SUFFIX))\n TEST_RPASS_EXES_LLVM := \\\n-                      $(TEST_RPASS_CRATES_LLVM:.rc=.llvm$(CFG_EXE_SUFFIX)) \\\n-                      $(TEST_RPASS_SOURCES_LLVM:.rs=.llvm$(CFG_EXE_SUFFIX))\n+              $(TEST_RPASS_CRATES_LLVM:.rc=-boot.llvm$(CFG_EXE_SUFFIX)) \\\n+              $(TEST_RPASS_SOURCES_LLVM:.rs=-boot.llvm$(CFG_EXE_SUFFIX))\n TEST_RPASS_OUTS_X86  := \\\n                     $(TEST_RPASS_EXES_X86:.x86$(CFG_EXE_SUFFIX)=.x86.out)\n TEST_RPASS_OUTS_LLVM := \\\n@@ -674,11 +674,11 @@ TEST_RFAIL_SOURCES_X86 := $(filter-out $(TEST_XFAILS_X86), $(RFAIL_RS))\n TEST_RFAIL_SOURCES_LLVM := $(filter-out $(TEST_XFAILS_LLVM), $(RFAIL_RS))\n TEST_RFAIL_EXTRAS := $(wildcard test/run-fail/*/*.rs)\n TEST_RFAIL_EXES_X86 := \\\n-                      $(TEST_RFAIL_CRATES_X86:.rc=.x86$(CFG_EXE_SUFFIX)) \\\n-                      $(TEST_RFAIL_SOURCES_X86:.rs=.x86$(CFG_EXE_SUFFIX))\n+              $(TEST_RFAIL_CRATES_X86:.rc=-boot.x86$(CFG_EXE_SUFFIX)) \\\n+              $(TEST_RFAIL_SOURCES_X86:.rs=-boot.x86$(CFG_EXE_SUFFIX))\n TEST_RFAIL_EXES_LLVM := \\\n-                      $(TEST_RFAIL_CRATES_LLVM:.rc=.llvm$(CFG_EXE_SUFFIX)) \\\n-                      $(TEST_RFAIL_SOURCES_LLVM:.rs=.llvm$(CFG_EXE_SUFFIX))\n+              $(TEST_RFAIL_CRATES_LLVM:.rc=-boot.llvm$(CFG_EXE_SUFFIX)) \\\n+              $(TEST_RFAIL_SOURCES_LLVM:.rs=-boot.llvm$(CFG_EXE_SUFFIX))\n TEST_RFAIL_OUTS_X86  := \\\n                     $(TEST_RFAIL_EXES_X86:.x86$(CFG_EXE_SUFFIX)=.x86.out)\n TEST_RFAIL_OUTS_LLVM := \\\n@@ -695,11 +695,11 @@ TEST_CFAIL_SOURCES_X86 := $(filter-out $(TEST_XFAILS_X86), $(CFAIL_RS))\n TEST_CFAIL_SOURCES_LLVM := $(filter-out $(TEST_XFAILS_LLVM), $(CFAIL_RS))\n TEST_CFAIL_EXTRAS := $(wildcard test/compile-fail/*/*.rs)\n TEST_CFAIL_EXES_X86 := \\\n-                  $(TEST_CFAIL_CRATES_X86:.rc=.x86$(CFG_EXE_SUFFIX)) \\\n-                  $(TEST_CFAIL_SOURCES_X86:.rs=.x86$(CFG_EXE_SUFFIX))\n+              $(TEST_CFAIL_CRATES_X86:.rc=-boot.x86$(CFG_EXE_SUFFIX)) \\\n+              $(TEST_CFAIL_SOURCES_X86:.rs=-boot.x86$(CFG_EXE_SUFFIX))\n TEST_CFAIL_EXES_LLVM := \\\n-                  $(TEST_CFAIL_CRATES_LLVM:.rc=.llvm$(CFG_EXE_SUFFIX)) \\\n-                  $(TEST_CFAIL_SOURCES_LLVM:.rs=.llvm$(CFG_EXE_SUFFIX))\n+              $(TEST_CFAIL_CRATES_LLVM:.rc=-boot.llvm$(CFG_EXE_SUFFIX)) \\\n+              $(TEST_CFAIL_SOURCES_LLVM:.rs=-boot.llvm$(CFG_EXE_SUFFIX))\n TEST_CFAIL_OUTS_X86 := \\\n                 $(TEST_CFAIL_EXES_X86:.x86$(CFG_EXE_SUFFIX)=.x86.out)\n TEST_CFAIL_OUTS_LLVM := \\\n@@ -777,26 +777,27 @@ test/run-fail/%.out.tmp: test/run-fail/%$(CFG_EXE_SUFFIX) $(CFG_RUNTIME)\n       \"`awk -F: '/error-pattern/ { print $$2 }' \\\n         $(basename $(basename $(basename $@))).rs | tr -d '\\n\\r'`\" $@\n \n-test/compile-fail/%.x86.out.tmp: test/compile-fail/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [x86]: $<)\n+test/compile-fail/%-boot.x86.out.tmp: test/compile-fail/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot x86]: $<)\n \t$(CFG_QUIET)rm -f $@\n \t$(BOOT) -o $(@:.out=$(CFG_EXE_SUFFIX)) $< >$@ 2>&1 || true\n \t$(CFG_QUIET)grep --text --quiet \\\n       \"`awk -F: '/error-pattern/ { print $$2 }' $< | tr -d '\\n\\r'`\" $@\n \n-test/compile-fail/%.llvm.out.tmp: test/compile-fail/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [llvm]: $<)\n+test/compile-fail/%-boot.llvm.out.tmp: test/compile-fail/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot llvm]: $<)\n \t$(CFG_QUIET)rm -f $@\n \t$(BOOT) -o $(@:.out=$(CFG_EXE_SUFFIX)) $< >$@ 2>&1 || true\n \t$(CFG_QUIET)grep --text --quiet \\\n       \"`awk -F: '/error-pattern/ { print $$2 }' $< | tr -d '\\n\\r'`\" $@\n \n-test/run-pass/%.x86$(CFG_EXE_SUFFIX): test/run-pass/%.rc $(REQ)\n-\t@$(call CFG_ECHO, compile [x86]: $<)\n+test/run-pass/%-boot.x86$(CFG_EXE_SUFFIX): test/run-pass/%.rc $(REQ)\n+\t@$(call CFG_ECHO, compile [boot x86]: $<)\n \t$(BOOT) -o $@ $<\n \n-test/bench/shootout/%.x86$(CFG_EXE_SUFFIX): test/bench/shootout/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [x86]: $<)\n+test/bench/shootout/%-boot.x86$(CFG_EXE_SUFFIX): \\\n+  test/bench/shootout/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot x86]: $<)\n \t$(BOOT) -o $@ $<\n \n %.ll: %.bc\n@@ -820,24 +821,24 @@ test/bench/shootout/%.x86$(CFG_EXE_SUFFIX): test/bench/shootout/%.rs $(REQ)\n \t@# programs, I\\'ll live with the noise.\n \t-$(CFG_QUIET)$(DSYMUTIL) $@\n \n-test/run-pass/%.bc: test/run-pass/%.rc $(REQ)\n-\t@$(call CFG_ECHO, compile [llvm]: $<)\n+test/run-pass/%-boot.bc: test/run-pass/%.rc $(REQ)\n+\t@$(call CFG_ECHO, compile [boot llvm]: $<)\n \t$(BOOT) -o $@ -llvm $<\n \n-test/run-pass/%.x86$(CFG_EXE_SUFFIX): test/run-pass/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [x86]: $<)\n+test/run-pass/%-boot.x86$(CFG_EXE_SUFFIX): test/run-pass/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot x86]: $<)\n \t$(BOOT) -o $@ $<\n \n-test/run-pass/%.bc: test/run-pass/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [llvm]: $<)\n+test/run-pass/%-boot.bc: test/run-pass/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot llvm]: $<)\n \t$(BOOT) -o $@ -llvm $<\n \n-test/run-fail/%.x86$(CFG_EXE_SUFFIX): test/run-fail/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [x86]: $<)\n+test/run-fail/%-boot.x86$(CFG_EXE_SUFFIX): test/run-fail/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot x86]: $<)\n \t$(BOOT) -o $@ $<\n \n-test/run-fail/%.bc: test/run-fail/%.rs $(REQ)\n-\t@$(call CFG_ECHO, compile [llvm]: $<)\n+test/run-fail/%-boot.bc: test/run-fail/%.rs $(REQ)\n+\t@$(call CFG_ECHO, compile [boot llvm]: $<)\n \t$(BOOT) -o $@ -llvm $<\n \n \n@@ -986,7 +987,9 @@ clean:\n \t$(CFG_QUIET)rm -rf $(TEST_RFAIL_EXES_LLVM:.llvm=.llvm.dSYM)\n \t$(CFG_QUIET)rm -Rf $(PKG_NAME)-*.tar.gz dist\n \t$(CFG_QUIET)rm -f $(foreach ext,cmx cmi cmo cma o a d exe,\\\n-                        $(wildcard boot/*/*.$(ext) boot/*/*/*.$(ext)))\n+                        $(wildcard boot/*/*.$(ext) boot/*/*/*.$(ext))) \\\n+\t$(CFG_QUIET)rm -f $(foreach ext,out llvm x86 o s exe,\\\n+                        $(wildcard test/*/*.$(ext))) \\\n \n \n # Local Variables:"}]}