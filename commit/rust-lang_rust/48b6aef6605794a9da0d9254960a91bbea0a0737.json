{"sha": "48b6aef6605794a9da0d9254960a91bbea0a0737", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YjZhZWY2NjA1Nzk0YTlkYTBkOTI1NDk2MGE5MWJiZWEwYTA3Mzc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-06T21:40:00Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-06T21:53:39Z"}, "message": "rustc: Don't fall back to -L if using --extern\n\nThe compiler would previously fall back to using `-L` and normal lookup paths if\na `--extern` path was specified but it did not match (wrong architecture, for\nexample). This commit removes this behavior and forces the hand of the crate\nloader to *always* use the `--extern` path if specified, no matter whether it is\ncorrect or not.\n\nThis fixes a bug today where the compiler's own libraries are favored in cross\ncompilation by accident. For example when a crate using the crates.io version of\n`log` was cross compiled, Cargo would compile `log` for the target architecture.\nWhen loading the macros, however, the compiler currently favors using the *host*\narchitecture (for plugins), and because the `--extern log=...` pointed at an\nrlib for the target architecture, that lookup failed. The crate loader  then\nfell back on `-L` paths to find the compiler-used `log` crate (the wrong one!)\nand then a compile failure happened because the logging macros are slightly\ndifferent.", "tree": {"sha": "93abc56a14ed15074ac2f0358a2fd4d38e402ad0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93abc56a14ed15074ac2f0358a2fd4d38e402ad0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b6aef6605794a9da0d9254960a91bbea0a0737", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b6aef6605794a9da0d9254960a91bbea0a0737", "html_url": "https://github.com/rust-lang/rust/commit/48b6aef6605794a9da0d9254960a91bbea0a0737", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b6aef6605794a9da0d9254960a91bbea0a0737/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b56e9b1cb2fc00d7d9bc044e2a78b8fb12f2f1b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b56e9b1cb2fc00d7d9bc044e2a78b8fb12f2f1b", "html_url": "https://github.com/rust-lang/rust/commit/0b56e9b1cb2fc00d7d9bc044e2a78b8fb12f2f1b"}], "stats": {"total": 81, "additions": 72, "deletions": 9}, "files": [{"sha": "6d94f075290bf257b1c890583c8d8cb2986741d9", "filename": "src/librustc/metadata/loader.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Flibrustc%2Fmetadata%2Floader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Flibrustc%2Fmetadata%2Floader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Floader.rs?ref=48b6aef6605794a9da0d9254960a91bbea0a0737", "patch": "@@ -357,9 +357,8 @@ impl<'a> Context<'a> {\n         // must be loaded via -L plus some filtering.\n         if self.hash.is_none() {\n             self.should_match_name = false;\n-            match self.find_commandline_library() {\n-                Some(l) => return Some(l),\n-                None => {}\n+            if let Some(s) = self.sess.opts.externs.get(self.crate_name) {\n+                return self.find_commandline_library(s);\n             }\n             self.should_match_name = true;\n         }\n@@ -596,12 +595,7 @@ impl<'a> Context<'a> {\n         (t.options.dll_prefix.clone(), t.options.dll_suffix.clone())\n     }\n \n-    fn find_commandline_library(&mut self) -> Option<Library> {\n-        let locs = match self.sess.opts.externs.get(self.crate_name) {\n-            Some(s) => s,\n-            None => return None,\n-        };\n-\n+    fn find_commandline_library(&mut self, locs: &[String]) -> Option<Library> {\n         // First, filter out all libraries that look suspicious. We only accept\n         // files which actually exist that have the correct naming scheme for\n         // rlibs/dylibs."}, {"sha": "84032b45159f5b8753f8cc6dd06d4cc6f5671092", "filename": "src/test/run-make/use-extern-for-plugins/Makefile", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2FMakefile?ref=48b6aef6605794a9da0d9254960a91bbea0a0737", "patch": "@@ -0,0 +1,13 @@\n+-include ../tools.mk\n+\n+HOST := $(shell $(RUSTC) -vV | grep 'host:' | sed 's/host: //')\n+ifeq ($(findstring i686,$(HOST)),i686)\n+TARGET := $(subst i686,x86_64,$(HOST))\n+else\n+TARGET := $(subst x86_64,i686,$(HOST))\n+endif\n+\n+all:\n+\t$(RUSTC) foo.rs -C extra-filename=-host\n+\t$(RUSTC) bar.rs -C extra-filename=-targ --target $(TARGET)\n+\t$(RUSTC) baz.rs --extern a=$(TMPDIR)/liba-targ.rlib --target $(TARGET)"}, {"sha": "f279893b77bf94bc8c417a245e0c237151fe22f0", "filename": "src/test/run-make/use-extern-for-plugins/bar.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Fbar.rs?ref=48b6aef6605794a9da0d9254960a91bbea0a0737", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(no_std)]\n+#![no_std]\n+#![crate_type = \"lib\"]\n+#![crate_name = \"a\"]\n+\n+#[macro_export]\n+macro_rules! bar {\n+    () => ()\n+}"}, {"sha": "89d6c6bc58c81736fa0c4e48b1f50e8e52963b3f", "filename": "src/test/run-make/use-extern-for-plugins/baz.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Fbaz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Fbaz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Fbaz.rs?ref=48b6aef6605794a9da0d9254960a91bbea0a0737", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(no_std)]\n+#![no_std]\n+#![crate_type = \"lib\"]\n+\n+#[macro_use]\n+extern crate a;\n+\n+bar!();"}, {"sha": "554c0fe0326527de2bfbbe911d18bc9d642ecd29", "filename": "src/test/run-make/use-extern-for-plugins/foo.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b6aef6605794a9da0d9254960a91bbea0a0737/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fuse-extern-for-plugins%2Ffoo.rs?ref=48b6aef6605794a9da0d9254960a91bbea0a0737", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(no_std)]\n+#![no_std]\n+#![crate_type = \"lib\"]\n+#![crate_name = \"a\"]\n+\n+#[macro_export]\n+macro_rules! foo {\n+    () => ()\n+}"}]}