{"sha": "0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmNGEzZmVjY2NkNTVjMGU1YjRkNTBjZTU5ZWQ2NjBhYzhlNjdkY2M=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-01T15:41:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-03-01T15:41:00Z"}, "message": "Auto merge of #5247 - JohnTitor:syntax, r=flip1995\n\nSome rustups\n\nchangelog: none", "tree": {"sha": "656c8407cd70354d521521bc5e54a4d48e24b49e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/656c8407cd70354d521521bc5e54a4d48e24b49e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "html_url": "https://github.com/rust-lang/rust/commit/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "610bceae716e9c68f899a56823bdd356d4c4f37e", "url": "https://api.github.com/repos/rust-lang/rust/commits/610bceae716e9c68f899a56823bdd356d4c4f37e", "html_url": "https://github.com/rust-lang/rust/commit/610bceae716e9c68f899a56823bdd356d4c4f37e"}, {"sha": "cda7881869e6c96ae5b7839d2536e97c6127ef26", "url": "https://api.github.com/repos/rust-lang/rust/commits/cda7881869e6c96ae5b7839d2536e97c6127ef26", "html_url": "https://github.com/rust-lang/rust/commit/cda7881869e6c96ae5b7839d2536e97c6127ef26"}], "stats": {"total": 231, "additions": 116, "deletions": 115}, "files": [{"sha": "ec192de191b1aa6df06795e301e3649985b43901", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -231,7 +231,8 @@ jobs:\n       matrix:\n         integration:\n         - 'rust-lang/cargo'\n-        - 'rust-lang/rls'\n+        # FIXME: Re-enable once we can test with rls again.\n+        # - 'rust-lang/rls'\n         - 'rust-lang/chalk'\n         - 'rust-lang/rustfmt'\n         - 'Marwes/combine'"}, {"sha": "a3ccb2758e258a79fc166902b496b502bcc1e212", "filename": "clippy_dev/src/new_lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_dev%2Fsrc%2Fnew_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_dev%2Fsrc%2Fnew_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fnew_lint.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -13,7 +13,7 @@ pub fn create(pass: Option<&str>, lint_name: Option<&str>, category: Option<&str\n     match open_files(lint_name) {\n         Ok((mut test_file, mut lint_file)) => {\n             let (pass_type, pass_lifetimes, pass_import, context_import) = match pass {\n-                \"early\" => (\"EarlyLintPass\", \"\", \"use syntax::ast::*;\", \"EarlyContext\"),\n+                \"early\" => (\"EarlyLintPass\", \"\", \"use rustc_ast::ast::*;\", \"EarlyContext\"),\n                 \"late\" => (\"LateLintPass\", \"<'_, '_>\", \"use rustc_hir::*;\", \"LateContext\"),\n                 _ => {\n                     unreachable!(\"`pass_type` should only ever be `early` or `late`!\");"}, {"sha": "0e497e175d66c6bf912de3f6add02db0f376c6ab", "filename": "clippy_lints/src/approx_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fapprox_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fapprox_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fapprox_const.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::span_lint;\n+use rustc_ast::ast::{FloatTy, LitFloatType, LitKind};\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol;\n use std::f64::consts as f64;\n-use syntax::ast::{FloatTy, LitFloatType, LitKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for floating point literals that approximate"}, {"sha": "1ec3377193ec9b616d1a027b56e8e9978c23c85b", "filename": "clippy_lints/src/as_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fas_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fas_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fas_conversions.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,7 +1,7 @@\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Expr, ExprKind};\n \n use crate::utils::span_lint_and_help;\n "}, {"sha": "bd9a2a7c40c4cf10876c05732d9d2b293c92aec3", "filename": "clippy_lints/src/assertions_on_constants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fassertions_on_constants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fassertions_on_constants.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,10 +2,10 @@ use crate::consts::{constant, Constant};\n use crate::utils::paths;\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, snippet_opt, span_lint_and_help};\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_hir::{Expr, ExprKind, PatKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `assert!(true)` and `assert!(false)` calls."}, {"sha": "f753d3dc1c7be3a03313f0d205a483faf46adfc2", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -8,6 +8,8 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n use rustc::ty;\n+use rustc_ast::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n+use rustc_ast::util::lev_distance::find_best_match_for_name;\n use rustc_errors::Applicability;\n use rustc_hir::{\n     Block, Expr, ExprKind, ImplItem, ImplItemKind, Item, ItemKind, StmtKind, TraitItem, TraitItemKind, TraitMethod,\n@@ -17,8 +19,6 @@ use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n use semver::Version;\n-use syntax::ast::{AttrKind, AttrStyle, Attribute, Lit, LitKind, MetaItemKind, NestedMetaItem};\n-use syntax::util::lev_distance::find_best_match_for_name;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for items annotated with `#[inline(always)]`,"}, {"sha": "780535423499097be9b41158e11f9c9537aaa496", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,12 +2,12 @@ use crate::consts::{constant, Constant};\n use crate::utils::sugg::Sugg;\n use crate::utils::{span_lint, span_lint_and_then};\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for incompatible bit masks in comparisons."}, {"sha": "ccaa277efbdaa91e3ff90eb5349cf14abcf4dbf7", "filename": "clippy_lints/src/booleans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fbooleans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fbooleans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbooleans.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,13 +4,13 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{BinOpKind, Body, Expr, ExprKind, FnDecl, HirId, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for boolean expressions that can be written more"}, {"sha": "9c06eb962d7b6155eff6ba399573c65e76aa8a29", "filename": "clippy_lints/src/bytecount.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fbytecount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fbytecount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbytecount.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,11 +4,11 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::ty;\n+use rustc_ast::ast::{Name, UintTy};\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, BorrowKind, Expr, ExprKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Name, UintTy};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for naive byte counts"}, {"sha": "06e866dd72a010b661d90331dd952900a69c471b", "filename": "clippy_lints/src/cargo_common_metadata.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcargo_common_metadata.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -3,10 +3,10 @@\n use std::path::PathBuf;\n \n use crate::utils::span_lint;\n+use rustc_ast::ast::Crate;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::ast::Crate;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks to see if all common metadata is defined in"}, {"sha": "23992ae89a7086046f2a1fc72c59f99914c52f6c", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,11 +2,11 @@\n \n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOp, BinOpKind, Expr, ExprKind, QPath, TyKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::LitKind;\n \n use crate::utils::{snippet_with_applicability, span_lint_and_sugg, SpanlessEq};\n "}, {"sha": "d0f15d2373a7a7eb1cf81dd0885b757c9d9790d9", "filename": "clippy_lints/src/cognitive_complexity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fcognitive_complexity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcognitive_complexity.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,13 +1,13 @@\n //! calculate cognitive complexity and warn about overly complex functions\n \n use rustc::hir::map::Map;\n+use rustc_ast::ast::Attribute;\n use rustc_hir::intravisit::{walk_expr, FnKind, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, Expr, ExprKind, FnDecl, HirId};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;\n-use syntax::ast::Attribute;\n \n use crate::utils::{match_type, paths, snippet_opt, span_lint_and_help, LimitStack};\n "}, {"sha": "25fb773a6d674a3b33f4bc6a6ed1f68b501c7fd8", "filename": "clippy_lints/src/collapsible_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fcollapsible_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcollapsible_if.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -13,9 +13,9 @@\n //! This lint is **warn** by default\n \n use if_chain::if_chain;\n+use rustc_ast::ast;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast;\n \n use crate::utils::sugg::Sugg;\n use crate::utils::{snippet_block, snippet_block_with_applicability, span_lint_and_sugg, span_lint_and_then};"}, {"sha": "9bb7b540d68fde94e2fa22116cf57e84921d5629", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -5,6 +5,7 @@ use if_chain::if_chain;\n use rustc::ty::subst::{Subst, SubstsRef};\n use rustc::ty::{self, Ty, TyCtxt};\n use rustc::{bug, span_bug};\n+use rustc_ast::ast::{FloatTy, LitFloatType, LitKind};\n use rustc_data_structures::sync::Lrc;\n use rustc_hir::def::{DefKind, Res};\n use rustc_hir::{BinOp, BinOpKind, Block, Expr, ExprKind, HirId, QPath, UnOp};\n@@ -13,7 +14,6 @@ use rustc_span::symbol::Symbol;\n use std::cmp::Ordering::{self, Equal};\n use std::convert::TryInto;\n use std::hash::{Hash, Hasher};\n-use syntax::ast::{FloatTy, LitFloatType, LitKind};\n \n /// A `LitKind`-like enum to fold constant `Expr`s into.\n #[derive(Debug, Clone)]"}, {"sha": "67f86f50ef61da739a49e5cdbdb5d240baa86e25", "filename": "clippy_lints/src/dbg_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fdbg_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fdbg_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdbg_macro.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{snippet_opt, span_lint_and_help, span_lint_and_sugg};\n+use rustc_ast::ast;\n+use rustc_ast::tokenstream::TokenStream;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast;\n-use syntax::tokenstream::TokenStream;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of dbg!() macro."}, {"sha": "89a68990c87e3c1ac872d42bdd027a890b5e2e62", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -3,14 +3,14 @@ use if_chain::if_chain;\n use itertools::Itertools;\n use rustc::lint::in_external_macro;\n use rustc::ty;\n+use rustc_ast::ast::{AttrKind, Attribute};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, MultiSpan, Span};\n use rustc_span::Pos;\n use std::ops::Range;\n-use syntax::ast::{AttrKind, Attribute};\n use url::Url;\n \n declare_clippy_lint! {\n@@ -251,8 +251,8 @@ fn lint_for_missing_headers<'a, 'tcx>(\n \n /// Cleanup documentation decoration (`///` and such).\n ///\n-/// We can't use `syntax::attr::AttributeMethods::with_desugared_doc` or\n-/// `syntax::parse::lexer::comments::strip_doc_comment_decoration` because we\n+/// We can't use `rustc_ast::attr::AttributeMethods::with_desugared_doc` or\n+/// `rustc_ast::parse::lexer::comments::strip_doc_comment_decoration` because we\n /// need to keep track of\n /// the spans but this function is inspired from the later.\n #[allow(clippy::cast_possible_truncation)]"}, {"sha": "7f2ff8b9b26f62bb42252aca0293c3e49e3ca410", "filename": "clippy_lints/src/double_parens.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,7 +1,7 @@\n use crate::utils::span_lint;\n+use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Expr, ExprKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for unnecessary double parentheses."}, {"sha": "ccaa35350cc22b040cd14c896b7a3c9c57f77e08", "filename": "clippy_lints/src/else_if_without_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Felse_if_without_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Felse_if_without_else.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n //! Lint on if expressions with an else if, but without a final else branch.\n \n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Expr, ExprKind};\n \n use crate::utils::span_lint_and_help;\n "}, {"sha": "5bc8a446cf0ac4386118402c1c914890fc7e14cc", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -5,11 +5,11 @@ use crate::consts::{miri_to_const, Constant};\n use crate::utils::span_lint;\n use rustc::ty;\n use rustc::ty::util::IntTypeExt;\n+use rustc_ast::ast::{IntTy, UintTy};\n use rustc_hir::{Item, ItemKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::convert::TryFrom;\n-use syntax::ast::{IntTy, UintTy};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for C-like enumerations that are"}, {"sha": "882020a7adc77a9e43abe7fe47554b26b06ad1b0", "filename": "clippy_lints/src/enum_variants.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fenum_variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fenum_variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_variants.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,11 +2,11 @@\n \n use crate::utils::{camel_case, is_present_in_source};\n use crate::utils::{span_lint, span_lint_and_help};\n+use rustc_ast::ast::{EnumDef, Item, ItemKind, VisibilityKind};\n use rustc_lint::{EarlyContext, EarlyLintPass, Lint};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::Symbol;\n-use syntax::ast::{EnumDef, Item, ItemKind, VisibilityKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Detects enumeration variants that are prefixed or suffixed"}, {"sha": "ddbc3c377a27a13b428a319a74f9e787a0a849b9", "filename": "clippy_lints/src/excessive_bools.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fexcessive_bools.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexcessive_bools.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{attr_by_name, in_macro, match_path_ast, span_lint_and_help};\n+use rustc_ast::ast::{AssocItemKind, Extern, FnSig, Item, ItemKind, Ty, TyKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::Span;\n-use syntax::ast::{AssocItemKind, Extern, FnSig, Item, ItemKind, Ty, TyKind};\n \n use std::convert::TryInto;\n "}, {"sha": "320121b277140727d3a190bcacad260e5b46ac54", "filename": "clippy_lints/src/explicit_write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fexplicit_write.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fexplicit_write.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fexplicit_write.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{is_expn_of, match_function_call, paths, span_lint, span_lint_and_sugg};\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `write!()` / `writeln()!` which can be"}, {"sha": "30d4b25318f7fb1139b9b02a0e2c9d5c565c5194", "filename": "clippy_lints/src/float_literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ffloat_literal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ffloat_literal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloat_literal.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,12 +2,12 @@ use crate::utils::span_lint_and_sugg;\n use crate::utils::sugg::format_numeric_literal;\n use if_chain::if_chain;\n use rustc::ty;\n+use rustc_ast::ast::{FloatTy, LitFloatType, LitKind};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::{f32, f64, fmt};\n-use syntax::ast::{FloatTy, LitFloatType, LitKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for float literals with a precision greater"}, {"sha": "29f924ebe1c5af14be675934f662eb3ee5e4d233", "filename": "clippy_lints/src/floating_point_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffloating_point_arithmetic.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -11,10 +11,10 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n \n+use rustc_ast::ast;\n use std::f32::consts as f32_consts;\n use std::f64::consts as f64_consts;\n use sugg::{format_numeric_literal, Sugg};\n-use syntax::ast;\n \n declare_clippy_lint! {\n     /// **What it does:** Looks for floating-point expressions that"}, {"sha": "10bc2f12f252a44cb0c415e8e196aa245b570931", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,12 +4,12 @@ use crate::utils::{\n     walk_ptrs_ty,\n };\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{Arm, BorrowKind, Expr, ExprKind, MatchSource, PatKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for the use of `format!(\"string literal with no"}, {"sha": "a05f911c4c5e1264a6c39462bb430699e86b05b2", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{differing_macro_contexts, snippet_opt, span_lint_and_help, span_lint_and_note};\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::{BinOpKind, Block, Expr, ExprKind, StmtKind, UnOp};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for use of the non-existent `=*`, `=!` and `=-`"}, {"sha": "e435b61bbbefcd0438affcfda07bb50ea765c0fc", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -6,6 +6,7 @@ use crate::utils::{\n use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n use rustc::ty::{self, Ty};\n+use rustc_ast::ast::Attribute;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -15,7 +16,6 @@ use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_target::spec::abi::Abi;\n-use syntax::ast::Attribute;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for functions with too many parameters."}, {"sha": "e4bad5ca5c5176e597da8f2cb000aea067fb63ac", "filename": "clippy_lints/src/get_last_with_len.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fget_last_with_len.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fget_last_with_len.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,13 +2,13 @@\n \n use crate::utils::{is_type_diagnostic_item, snippet_with_applicability, span_lint_and_sugg, SpanlessEq};\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::Symbol;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for using `x.get(x.len() - 1)` instead of"}, {"sha": "9b6e243f5f044a61bf3271120e659cb84e22ba6a", "filename": "clippy_lints/src/if_not_else.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fif_not_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fif_not_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_not_else.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,9 +2,9 @@\n //! on the condition\n \n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::{BinOpKind, Expr, ExprKind, UnOp};\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{BinOpKind, Expr, ExprKind, UnOp};\n \n use crate::utils::span_lint_and_help;\n "}, {"sha": "21444ffb23d77f04fd6159b01dc26ca33824e3ab", "filename": "clippy_lints/src/indexing_slicing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Findexing_slicing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Findexing_slicing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Findexing_slicing.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -3,10 +3,10 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{higher, span_lint, span_lint_and_help};\n use rustc::ty;\n+use rustc_ast::ast::RangeLimits;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::RangeLimits;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for out of bounds array indexing with a constant"}, {"sha": "de16a4f1ef82a4a7ac2304a163edfab05bc7225e", "filename": "clippy_lints/src/inline_fn_without_body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Finline_fn_without_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Finline_fn_without_body.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,11 +2,11 @@\n \n use crate::utils::span_lint_and_then;\n use crate::utils::sugg::DiagnosticBuilderExt;\n+use rustc_ast::ast::{Attribute, Name};\n use rustc_errors::Applicability;\n use rustc_hir::{TraitItem, TraitItemKind, TraitMethod};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Attribute, Name};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for `#[inline]` on trait methods without bodies"}, {"sha": "f2781b734cf61691220fe7602b8f2a2fbf539a03", "filename": "clippy_lints/src/int_plus_one.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fint_plus_one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fint_plus_one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fint_plus_one.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n //! lint on blocks unnecessarily using >= with a + 1 or - 1\n \n+use rustc_ast::ast::{BinOpKind, Expr, ExprKind, Lit, LitKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{BinOpKind, Expr, ExprKind, Lit, LitKind};\n \n use crate::utils::{snippet_opt, span_lint_and_then};\n "}, {"sha": "8d6a0212b5c19dc40546b945a5a6c885e3835937", "filename": "clippy_lints/src/items_after_statements.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fitems_after_statements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_statements.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,9 +2,9 @@\n \n use crate::utils::span_lint;\n use matches::matches;\n+use rustc_ast::ast::{Block, ItemKind, StmtKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Block, ItemKind, StmtKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for items declared after some statement in a block."}, {"sha": "48881e1c2f0316309aca2b878f7b0b927543f532", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,13 +1,13 @@\n use crate::utils::{get_item_name, snippet_with_applicability, span_lint, span_lint_and_sugg, walk_ptrs_ty};\n use rustc::ty;\n+use rustc_ast::ast::{LitKind, Name};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_errors::Applicability;\n use rustc_hir::def_id::DefId;\n use rustc_hir::{AssocItemKind, BinOpKind, Expr, ExprKind, ImplItemRef, Item, ItemKind, TraitItemRef};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{Span, Spanned};\n-use syntax::ast::{LitKind, Name};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for getting the length of something via `.len()`"}, {"sha": "8f05fe565cfb370c4a19b2e37b92f084d47ce73f", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -19,6 +19,8 @@ extern crate fmt_macros;\n #[allow(unused_extern_crates)]\n extern crate rustc;\n #[allow(unused_extern_crates)]\n+extern crate rustc_ast;\n+#[allow(unused_extern_crates)]\n extern crate rustc_ast_pretty;\n #[allow(unused_extern_crates)]\n extern crate rustc_attr;\n@@ -50,8 +52,6 @@ extern crate rustc_span;\n extern crate rustc_target;\n #[allow(unused_extern_crates)]\n extern crate rustc_typeck;\n-#[allow(unused_extern_crates)]\n-extern crate syntax;\n \n use rustc::session::Session;\n use rustc_data_structures::fx::FxHashSet;\n@@ -318,7 +318,7 @@ pub mod zero_div_zero;\n pub use crate::utils::conf::Conf;\n \n mod reexport {\n-    crate use syntax::ast::Name;\n+    crate use rustc_ast::ast::Name;\n }\n \n /// Register all pre expansion lints\n@@ -341,7 +341,7 @@ pub fn register_pre_expansion_lints(store: &mut rustc_lint::LintStore, conf: &Co\n }\n \n #[doc(hidden)]\n-pub fn read_conf(args: &[syntax::ast::NestedMetaItem], sess: &Session) -> Conf {\n+pub fn read_conf(args: &[rustc_ast::ast::NestedMetaItem], sess: &Session) -> Conf {\n     use std::path::Path;\n     match utils::conf::file_from_args(args) {\n         Ok(file_name) => {"}, {"sha": "66435f954231c94b10a2e62dd9cbcb3f26d72c6f", "filename": "clippy_lints/src/literal_representation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fliteral_representation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fliteral_representation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fliteral_representation.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,10 +4,10 @@\n use crate::utils::{in_macro, snippet_opt, span_lint_and_sugg};\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::{Expr, ExprKind, Lit, LitFloatType, LitIntType, LitKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n-use syntax::ast::{Expr, ExprKind, Lit, LitFloatType, LitIntType, LitKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Warns if a long integral or floating-point constant does"}, {"sha": "006281a1b5b594b93d73302f0521046499dee386", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -15,6 +15,7 @@ use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n use rustc::middle::region;\n use rustc::ty::{self, Ty};\n+use rustc_ast::ast;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_hir::def::{DefKind, Res};\n@@ -31,7 +32,6 @@ use rustc_span::{BytePos, Symbol};\n use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n use std::iter::{once, Iterator};\n use std::mem;\n-use syntax::ast;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for for-loops that manually copy items between"}, {"sha": "72227555b2595d72c5478b10aaf602c130d077c2", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,12 +4,12 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::ty;\n+use rustc_ast::ast::Ident;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::Ident;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `iterator.map(|x| x.clone())` and suggests"}, {"sha": "6f1efe0fd85c162dab711b933436dcae19f616b5", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -10,6 +10,7 @@ use crate::utils::{\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n use rustc::ty::{self, Ty};\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::def::CtorKind;\n use rustc_hir::{\n@@ -21,7 +22,6 @@ use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use std::cmp::Ordering;\n use std::collections::Bound;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for matches with a single arm where an `if let`"}, {"sha": "aaed6d75048c6299dae5c8cf8138f7bd19cbc311", "filename": "clippy_lints/src/methods/manual_saturating_arithmetic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmanual_saturating_arithmetic.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{match_qpath, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n+use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n use rustc_target::abi::LayoutOf;\n-use syntax::ast;\n \n pub fn lint(cx: &LateContext<'_, '_>, expr: &hir::Expr<'_>, args: &[&[hir::Expr<'_>]], arith: &str) {\n     let unwrap_arg = &args[0][1];"}, {"sha": "06fb9516456eabb9b1f4783ef29394d66e65ae33", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -12,14 +12,14 @@ use matches::matches;\n use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n use rustc::ty::{self, Predicate, Ty};\n+use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_lint::{LateContext, LateLintPass, Lint, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, Symbol, SymbolStr};\n-use syntax::ast;\n \n use crate::consts::{constant, Constant};\n use crate::utils::usage::mutated_variables;"}, {"sha": "6618876b3751a80ff8fe7ece7f67254705dd6f13", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,6 +1,7 @@\n use if_chain::if_chain;\n use matches::matches;\n use rustc::ty;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::FnKind;\n use rustc_hir::{\n@@ -10,7 +11,6 @@ use rustc_hir::{\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{ExpnKind, Span};\n-use syntax::ast::LitKind;\n \n use crate::consts::{constant, Constant};\n use crate::utils::sugg::Sugg;"}, {"sha": "60b6727662311ffe667c9f29e093d678c9ab899d", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,16 +4,16 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::{\n+    Block, Expr, ExprKind, GenericParamKind, Generics, Lit, LitFloatType, LitIntType, LitKind, NodeId, Pat, PatKind,\n+    StmtKind, UnOp,\n+};\n+use rustc_ast::visit::{walk_expr, FnKind, Visitor};\n use rustc_data_structures::fx::FxHashMap;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::{\n-    Block, Expr, ExprKind, GenericParamKind, Generics, Lit, LitFloatType, LitIntType, LitKind, NodeId, Pat, PatKind,\n-    StmtKind, UnOp,\n-};\n-use syntax::visit::{walk_expr, FnKind, Visitor};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for structure field patterns bound to wildcards."}, {"sha": "5e32172d78a171a339f16f0384092ece5a17e8dc", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -8,12 +8,12 @@\n use crate::utils::span_lint;\n use if_chain::if_chain;\n use rustc::ty;\n+use rustc_ast::ast::{self, MetaItem, MetaItemKind};\n+use rustc_ast::attr;\n use rustc_hir as hir;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n-use syntax::ast::{self, MetaItem, MetaItemKind};\n-use syntax::attr;\n \n declare_clippy_lint! {\n     /// **What it does:** Warns if there is missing doc for any documentable item"}, {"sha": "b736c58879ba9d84682eb8641a288ab583508338", "filename": "clippy_lints/src/missing_inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmissing_inline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmissing_inline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_inline.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::span_lint;\n+use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_lint::{self, LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast;\n \n declare_clippy_lint! {\n     /// **What it does:** it lints if an exported function, method, trait method with default impl,"}, {"sha": "88605c52f2e2b4718c743c71baa2cd22704f23a1", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n //! lint on multiple versions of a crate being used\n \n use crate::utils::span_lint;\n+use rustc_ast::ast::Crate;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::ast::Crate;\n \n use itertools::Itertools;\n "}, {"sha": "bbd2e4d83faae2ee7cbba0ccdad0f4bd1b7004a5", "filename": "clippy_lints/src/mutex_atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fmutex_atomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmutex_atomic.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,10 +4,10 @@\n \n use crate::utils::{match_type, paths, span_lint};\n use rustc::ty::{self, Ty};\n+use rustc_ast::ast;\n use rustc_hir::Expr;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usages of `Mutex<X>` where an atomic will do."}, {"sha": "4c00d15538fff21e71d7e802d4c51639e43e5b68", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,12 +4,12 @@\n \n use crate::utils::sugg::Sugg;\n use crate::utils::{higher, parent_node_is_if_expr, span_lint, span_lint_and_sugg};\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Block, Expr, ExprKind, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for expressions of the form `if c { true } else {"}, {"sha": "6be4b1effeaeff90985b2e4ac289d1cdf02f62bb", "filename": "clippy_lints/src/needless_continue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fneedless_continue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fneedless_continue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_continue.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -33,11 +33,11 @@\n //! ```\n //!\n //! This lint is **warn** by default.\n+use rustc_ast::ast;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{original_sp, DUMMY_SP};\n use rustc_span::Span;\n-use syntax::ast;\n \n use crate::utils::{indent_of, snippet, snippet_block, span_lint_and_help};\n "}, {"sha": "01343341726a3d085c069bc2767a3ed42e88ff5b", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -6,6 +6,7 @@ use crate::utils::{\n use if_chain::if_chain;\n use matches::matches;\n use rustc::ty::{self, TypeFoldable};\n+use rustc_ast::ast::Attribute;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir::intravisit::FnKind;\n@@ -19,7 +20,6 @@ use rustc_span::{Span, Symbol};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::expr_use_visitor as euv;\n use std::borrow::Cow;\n-use syntax::ast::Attribute;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for functions taking arguments by value, but not"}, {"sha": "847eb0eaf025d51d233f87fab8b76d4384b7fe97", "filename": "clippy_lints/src/non_expressive_names.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnon_expressive_names.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,14 +1,14 @@\n use crate::utils::{span_lint, span_lint_and_then};\n+use rustc_ast::ast::{\n+    Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, Ident, Item, ItemKind, Local, Mac, Pat, PatKind,\n+};\n+use rustc_ast::attr;\n+use rustc_ast::visit::{walk_block, walk_expr, walk_pat, Visitor};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n use std::cmp::Ordering;\n-use syntax::ast::{\n-    Arm, AssocItem, AssocItemKind, Attribute, Block, FnDecl, Ident, Item, ItemKind, Local, Mac, Pat, PatKind,\n-};\n-use syntax::attr;\n-use syntax::visit::{walk_block, walk_expr, walk_pat, Visitor};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for names that are very similar and thus confusing."}, {"sha": "9d3b67988dbb55d35612886ba7f8bd207b6e3292", "filename": "clippy_lints/src/open_options.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fopen_options.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fopen_options.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fopen_options.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_type, paths, span_lint, walk_ptrs_ty};\n+use rustc_ast::ast::LitKind;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{Span, Spanned};\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for duplicate open options as well as combinations"}, {"sha": "96ab4238008d0f22ad4f536f864b39c89232c08f", "filename": "clippy_lints/src/option_env_unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Foption_env_unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Foption_env_unwrap.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{is_direct_expn_of, span_lint_and_help};\n use if_chain::if_chain;\n+use rustc_ast::ast::{Expr, ExprKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Expr, ExprKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `option_env!(...).unwrap()` and"}, {"sha": "2cd9200ddb252d291fd818853a152484e9d82a6b", "filename": "clippy_lints/src/panic_unimplemented.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpanic_unimplemented.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{is_direct_expn_of, is_expn_of, match_function_call, paths, span_lint};\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::Span;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for missing parameters in `panic!`."}, {"sha": "bdbaf2695c8ef84c697cfcb0b5cb46fa1d93d9fb", "filename": "clippy_lints/src/path_buf_push_overwrite.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fpath_buf_push_overwrite.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::{match_type, paths, span_lint_and_sugg, walk_ptrs_ty};\n use if_chain::if_chain;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::path::{Component, Path};\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:*** Checks for [push](https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.push)"}, {"sha": "8b6d0336b2079d5a1e88635a1dca8589041a8ff2", "filename": "clippy_lints/src/precedence.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fprecedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fprecedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fprecedence.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{snippet_with_applicability, span_lint_and_sugg};\n+use rustc_ast::ast::{BinOpKind, Expr, ExprKind, LitKind, UnOp};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n-use syntax::ast::{BinOpKind, Expr, ExprKind, LitKind, UnOp};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for operations where precedence may be unclear\n@@ -123,7 +123,7 @@ fn is_arith_expr(expr: &Expr) -> bool {\n \n #[must_use]\n fn is_bit_op(op: BinOpKind) -> bool {\n-    use syntax::ast::BinOpKind::{BitAnd, BitOr, BitXor, Shl, Shr};\n+    use rustc_ast::ast::BinOpKind::{BitAnd, BitOr, BitXor, Shl, Shr};\n     match op {\n         BitXor | BitAnd | BitOr | Shl | Shr => true,\n         _ => false,\n@@ -132,7 +132,7 @@ fn is_bit_op(op: BinOpKind) -> bool {\n \n #[must_use]\n fn is_arith_op(op: BinOpKind) -> bool {\n-    use syntax::ast::BinOpKind::{Add, Div, Mul, Rem, Sub};\n+    use rustc_ast::ast::BinOpKind::{Add, Div, Mul, Rem, Sub};\n     match op {\n         Add | Sub | Mul | Div | Rem => true,\n         _ => false,"}, {"sha": "c9de88d9c83d2e157d059a7cc9281bd6322afb12", "filename": "clippy_lints/src/ranges.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Franges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Franges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Franges.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use if_chain::if_chain;\n+use rustc_ast::ast::RangeLimits;\n use rustc_errors::Applicability;\n use rustc_hir::{BinOpKind, Expr, ExprKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Spanned;\n-use syntax::ast::RangeLimits;\n \n use crate::utils::sugg::Sugg;\n use crate::utils::{higher, SpanlessEq};"}, {"sha": "b12c3c344ef4cbfc1fd61078157edf224d3e1bbb", "filename": "clippy_lints/src/redundant_field_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_field_names.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::span_lint_and_sugg;\n+use rustc_ast::ast::{Expr, ExprKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Expr, ExprKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for fields in struct literals where shorthands"}, {"sha": "a0b584b57ef321b2358434bf5fefdf33ce044aeb", "filename": "clippy_lints/src/redundant_pattern_matching.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_pattern_matching.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{match_qpath, paths, snippet, span_lint_and_then};\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{Arm, Expr, ExprKind, MatchSource, PatKind, QPath};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Lint for redundant pattern matching over `Result` or"}, {"sha": "4a7a15aba5be2385865c332a3507158f15cdeca6", "filename": "clippy_lints/src/redundant_static_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_static_lifetimes.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::{snippet, span_lint_and_then};\n+use rustc_ast::ast::{Item, ItemKind, Ty, TyKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Item, ItemKind, Ty, TyKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for constants and statics with an explicit `'static` lifetime."}, {"sha": "d5797468e9d53b8ab4bf142e5fed34b2c1fa3444", "filename": "clippy_lints/src/reference.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Freference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Freference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freference.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::{in_macro, snippet_with_applicability, span_lint_and_sugg};\n use if_chain::if_chain;\n+use rustc_ast::ast::{Expr, ExprKind, UnOp};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Expr, ExprKind, UnOp};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for usage of `*&` and `*&mut` in expressions."}, {"sha": "4bcb9198792df03cb0e2d5039b9732f6168e8cc0", "filename": "clippy_lints/src/regex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fregex.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,13 +1,13 @@\n use crate::consts::{constant, Constant};\n use crate::utils::{is_expn_of, match_def_path, match_type, paths, span_lint, span_lint_and_help};\n use if_chain::if_chain;\n+use rustc_ast::ast::{LitKind, StrStyle};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::{Block, BorrowKind, Crate, Expr, ExprKind, HirId};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;\n-use syntax::ast::{LitKind, StrStyle};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks [regex](https://crates.io/crates/regex) creation"}, {"sha": "ef1bbfd8fa9252ef4ae840deec885748e4bdf21b", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,12 +1,12 @@\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast;\n+use rustc_ast::visit::FnKind;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::BytePos;\n-use syntax::ast;\n-use syntax::visit::FnKind;\n \n use crate::utils::{in_macro, match_path_ast, snippet_opt, span_lint_and_then};\n "}, {"sha": "8d767a7fec88d60d88a47eabb0eb3210917cda3c", "filename": "clippy_lints/src/single_component_path_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsingle_component_path_imports.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{in_macro, span_lint_and_sugg};\n use if_chain::if_chain;\n+use rustc_ast::ast::{Item, ItemKind, UseTreeKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::edition::Edition;\n-use syntax::ast::{Item, ItemKind, UseTreeKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checking for imports with single component use path."}, {"sha": "8d8dbe0e4083dc6c10ac3fa1d969d2beb30a1f0e", "filename": "clippy_lints/src/slow_vector_initialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fslow_vector_initialization.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,13 +2,13 @@ use crate::utils::sugg::Sugg;\n use crate::utils::{get_enclosing_block, match_qpath, span_lint_and_then, SpanlessEq};\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit::{walk_block, walk_expr, walk_stmt, NestedVisitorMap, Visitor};\n use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, HirId, PatKind, QPath, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass, Lint};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks slow zero-filled vector initialization"}, {"sha": "e777adb22cfb2d7a6c9f34424e7455dc1fa1aa92", "filename": "clippy_lints/src/strings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fstrings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fstrings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fstrings.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -153,7 +153,7 @@ declare_lint_pass!(StringLitAsBytes => [STRING_LIT_AS_BYTES]);\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for StringLitAsBytes {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, e: &'tcx Expr<'_>) {\n         use crate::utils::{snippet, snippet_with_applicability};\n-        use syntax::ast::LitKind;\n+        use rustc_ast::ast::LitKind;\n \n         if_chain! {\n             if let ExprKind::MethodCall(path, _, args) = &e.kind;"}, {"sha": "7b673e15b764a101c0c267229575a952d472433a", "filename": "clippy_lints/src/tabs_in_doc_comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftabs_in_doc_comments.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::span_lint_and_sugg;\n+use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::{BytePos, Span};\n use std::convert::TryFrom;\n-use syntax::ast;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks doc comments for usage of tab characters."}, {"sha": "4d1996ffcefbf265a37159a761b959ccfce3b1b0", "filename": "clippy_lints/src/transmute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftransmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftransmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmute.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -3,12 +3,12 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::ty::{self, Ty};\n+use rustc_ast::ast;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, GenericArg, Mutability, QPath, TyKind, UnOp};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use std::borrow::Cow;\n-use syntax::ast;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for transmutes that can't ever be correct on any"}, {"sha": "494dd4486891830e16cfd7bf39b7f6ad2b928277", "filename": "clippy_lints/src/transmuting_null.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftransmuting_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftransmuting_null.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,10 +2,10 @@ use crate::consts::{constant_context, Constant};\n use crate::utils::{match_qpath, paths, span_lint};\n use if_chain::if_chain;\n use rustc::lint::in_external_macro;\n+use rustc_ast::ast::LitKind;\n use rustc_hir::{Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::LitKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for transmute calls which would receive a null pointer."}, {"sha": "f90867605aa12771c28d10209209f1e89d4a37bc", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -9,6 +9,7 @@ use rustc::hir::map::Map;\n use rustc::lint::in_external_macro;\n use rustc::ty::layout::LayoutOf;\n use rustc::ty::{self, InferTy, Ty, TyCtxt, TypeckTables};\n+use rustc_ast::ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n use rustc_errors::{Applicability, DiagnosticBuilder};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{walk_body, walk_expr, walk_ty, FnKind, NestedVisitorMap, Visitor};\n@@ -24,7 +25,6 @@ use rustc_span::source_map::Span;\n use rustc_span::symbol::{sym, Symbol};\n use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n-use syntax::ast::{FloatTy, IntTy, LitFloatType, LitIntType, LitKind, UintTy};\n \n use crate::consts::{constant, Constant};\n use crate::utils::paths;"}, {"sha": "d073c197656c61b5cac6e0d557f3ad3ae19ddd58", "filename": "clippy_lints/src/unicode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Funicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Funicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funicode.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,10 +1,10 @@\n use crate::utils::{is_allowed, snippet, span_lint_and_sugg};\n+use rustc_ast::ast::LitKind;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, HirId};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n-use syntax::ast::LitKind;\n use unicode_normalization::UnicodeNormalization;\n \n declare_clippy_lint! {"}, {"sha": "86c469a4dccf7377b62b916eaadd375f19f13c8c", "filename": "clippy_lints/src/unsafe_removed_from_name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funsafe_removed_from_name.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,9 +1,9 @@\n use crate::utils::span_lint;\n+use rustc_ast::ast::{Ident, Item, ItemKind, UseTree, UseTreeKind};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::Span;\n use rustc_span::symbol::SymbolStr;\n-use syntax::ast::{Ident, Item, ItemKind, UseTree, UseTreeKind};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for imports that remove \"unsafe\" from an item's"}, {"sha": "3721350959b9840c422a9658977a4c2a5f39481c", "filename": "clippy_lints/src/utils/attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fattrs.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,7 +1,7 @@\n use rustc::session::Session;\n+use rustc_ast::ast;\n use rustc_errors::Applicability;\n use std::str::FromStr;\n-use syntax::ast;\n \n /// Deprecation status of attributes known by Clippy.\n #[allow(dead_code)]"}, {"sha": "e2a19d633b3e3ae167f6bdecdc087e2e81437d4d", "filename": "clippy_lints/src/utils/author.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fauthor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fauthor.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,14 +4,14 @@\n use crate::utils::{get_attr, higher};\n use rustc::hir::map::Map;\n use rustc::session::Session;\n+use rustc_ast::ast::{Attribute, LitFloatType, LitKind};\n+use rustc_ast::walk_list;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir as hir;\n use rustc_hir::intravisit::{NestedVisitorMap, Visitor};\n use rustc_hir::{BindingAnnotation, Block, Expr, ExprKind, Pat, PatKind, QPath, Stmt, StmtKind, TyKind};\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::{Attribute, LitFloatType, LitKind};\n-use syntax::walk_list;\n \n declare_clippy_lint! {\n     /// **What it does:** Generates clippy code that detects the offending pattern"}, {"sha": "a1d7bebc7b5654801c487989c1152757cf6eaeae", "filename": "clippy_lints/src/utils/conf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fconf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fconf.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -3,12 +3,12 @@\n #![deny(clippy::missing_docs_in_private_items)]\n \n use lazy_static::lazy_static;\n+use rustc_ast::ast::{LitKind, MetaItemKind, NestedMetaItem};\n use rustc_span::source_map;\n use source_map::Span;\n use std::path::{Path, PathBuf};\n use std::sync::Mutex;\n use std::{env, fmt, fs, io};\n-use syntax::ast::{LitKind, MetaItemKind, NestedMetaItem};\n \n /// Gets the configuration file from arguments.\n pub fn file_from_args(args: &[NestedMetaItem]) -> Result<Option<PathBuf>, (&'static str, Span)> {"}, {"sha": "f27cc57fb545f748be5c4105252b6f4943a4eacf", "filename": "clippy_lints/src/utils/higher.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fhigher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhigher.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -6,9 +6,9 @@\n use crate::utils::{is_expn_of, match_def_path, match_qpath, paths};\n use if_chain::if_chain;\n use rustc::ty;\n+use rustc_ast::ast;\n use rustc_hir as hir;\n use rustc_lint::LateContext;\n-use syntax::ast;\n \n /// Converts a hir binary operator to the corresponding `ast` type.\n #[must_use]"}, {"sha": "dcdec2e7eb6a9e32614335052a7c1cf172106537", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,6 +2,7 @@ use crate::consts::{constant_context, constant_simple};\n use crate::utils::differing_macro_contexts;\n use rustc::ich::StableHashingContextProvider;\n use rustc::ty::TypeckTables;\n+use rustc_ast::ast::Name;\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_hir::{\n     BinOpKind, Block, BlockCheckMode, BodyId, BorrowKind, CaptureBy, Expr, ExprKind, Field, FnRetTy, GenericArg,\n@@ -10,7 +11,6 @@ use rustc_hir::{\n };\n use rustc_lint::LateContext;\n use std::hash::Hash;\n-use syntax::ast::Name;\n \n /// Type used to check whether two ast are the same. This is different from the\n /// operator"}, {"sha": "a2a4dc4201b0f5260ba45b0d7534bd509d56c7d1", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,11 +2,11 @@\n \n use crate::utils::get_attr;\n use rustc::session::Session;\n+use rustc_ast::ast::Attribute;\n use rustc_hir as hir;\n use rustc_hir::print;\n use rustc_lint::{LateContext, LateLintPass, LintContext};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use syntax::ast::Attribute;\n \n declare_clippy_lint! {\n     /// **What it does:** Dumps every ast/hir node which has the `#[clippy::dump]`"}, {"sha": "c348f5794b9c43acaa106ec639f8d79d60e79a2a", "filename": "clippy_lints/src/utils/internal_lints.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finternal_lints.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -4,6 +4,8 @@ use crate::utils::{\n };\n use if_chain::if_chain;\n use rustc::hir::map::Map;\n+use rustc_ast::ast::{Crate as AstCrate, ItemKind, LitKind, Name, NodeId};\n+use rustc_ast::visit::FnKind;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -14,8 +16,6 @@ use rustc_lint::{EarlyContext, EarlyLintPass, LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint, impl_lint_pass};\n use rustc_span::source_map::{Span, Spanned};\n use rustc_span::symbol::SymbolStr;\n-use syntax::ast::{Crate as AstCrate, ItemKind, LitKind, Name, NodeId};\n-use syntax::visit::FnKind;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for various things we like to keep tidy in clippy."}, {"sha": "640cce113806315aa54cd50e0916717848d5464b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -33,6 +33,7 @@ use rustc::ty::{\n     subst::GenericArg,\n     Binder, Ty, TyCtxt,\n };\n+use rustc_ast::ast::{self, Attribute, LitKind};\n use rustc_attr as attr;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -52,7 +53,6 @@ use rustc_span::source_map::original_sp;\n use rustc_span::symbol::{self, kw, Symbol};\n use rustc_span::{BytePos, Pos, Span, DUMMY_SP};\n use smallvec::SmallVec;\n-use syntax::ast::{self, Attribute, LitKind};\n \n use crate::consts::{constant, Constant};\n use crate::reexport::Name;"}, {"sha": "176edcf1652f2f8340af18a08e627cc1a16dc61c", "filename": "clippy_lints/src/utils/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fptr.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,11 +1,11 @@\n use crate::utils::{get_pat_name, match_var, snippet};\n use rustc::hir::map::Map;\n+use rustc_ast::ast::Name;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n use rustc_hir::{Body, BodyId, Expr, ExprKind, Param};\n use rustc_lint::LateContext;\n use rustc_span::source_map::Span;\n use std::borrow::Cow;\n-use syntax::ast::Name;\n \n pub fn get_spans(\n     cx: &LateContext<'_, '_>,"}, {"sha": "05cc4f33eaedef66f5acdee69e3acdff599119c4", "filename": "clippy_lints/src/utils/sugg.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fsugg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fsugg.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -3,6 +3,8 @@\n \n use crate::utils::{higher, snippet, snippet_opt, snippet_with_macro_callsite};\n use matches::matches;\n+use rustc_ast::util::parser::AssocOp;\n+use rustc_ast::{ast, token};\n use rustc_ast_pretty::pprust::token_kind_to_string;\n use rustc_errors::Applicability;\n use rustc_hir as hir;\n@@ -12,8 +14,6 @@ use rustc_span::{BytePos, Pos};\n use std::borrow::Cow;\n use std::convert::TryInto;\n use std::fmt::Display;\n-use syntax::util::parser::AssocOp;\n-use syntax::{ast, token};\n \n pub use crate::literal_representation::format_numeric_literal;\n \n@@ -132,7 +132,7 @@ impl<'a> Sugg<'a> {\n \n     /// Prepare a suggestion from an expression.\n     pub fn ast(cx: &EarlyContext<'_>, expr: &ast::Expr, default: &'a str) -> Self {\n-        use syntax::ast::RangeLimits;\n+        use rustc_ast::ast::RangeLimits;\n \n         let snippet = snippet(cx, expr.span, default);\n \n@@ -426,7 +426,7 @@ enum Associativity {\n /// associative.\n #[must_use]\n fn associativity(op: &AssocOp) -> Associativity {\n-    use syntax::util::parser::AssocOp::{\n+    use rustc_ast::util::parser::AssocOp::{\n         Add, As, Assign, AssignOp, BitAnd, BitOr, BitXor, Colon, Divide, DotDot, DotDotEq, Equal, Greater,\n         GreaterEqual, LAnd, LOr, Less, LessEqual, Modulus, Multiply, NotEqual, ShiftLeft, ShiftRight, Subtract,\n     };\n@@ -442,7 +442,7 @@ fn associativity(op: &AssocOp) -> Associativity {\n \n /// Converts a `hir::BinOp` to the corresponding assigning binary operator.\n fn hirbinop2assignop(op: hir::BinOp) -> AssocOp {\n-    use syntax::token::BinOpToken::{And, Caret, Minus, Or, Percent, Plus, Shl, Shr, Slash, Star};\n+    use rustc_ast::token::BinOpToken::{And, Caret, Minus, Or, Percent, Plus, Shl, Shr, Slash, Star};\n \n     AssocOp::AssignOp(match op.node {\n         hir::BinOpKind::Add => Plus,\n@@ -469,10 +469,10 @@ fn hirbinop2assignop(op: hir::BinOp) -> AssocOp {\n \n /// Converts an `ast::BinOp` to the corresponding assigning binary operator.\n fn astbinop2assignop(op: ast::BinOp) -> AssocOp {\n-    use syntax::ast::BinOpKind::{\n+    use rustc_ast::ast::BinOpKind::{\n         Add, And, BitAnd, BitOr, BitXor, Div, Eq, Ge, Gt, Le, Lt, Mul, Ne, Or, Rem, Shl, Shr, Sub,\n     };\n-    use syntax::token::BinOpToken;\n+    use rustc_ast::token::BinOpToken;\n \n     AssocOp::AssignOp(match op.node {\n         Add => BinOpToken::Plus,"}, {"sha": "5871cf45ef9001e4ca73988d0583e221fa5cbdd6", "filename": "clippy_lints/src/utils/usage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Futils%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fusage.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,6 +1,7 @@\n use crate::utils::match_var;\n use rustc::hir::map::Map;\n use rustc::ty;\n+use rustc_ast::ast;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_hir::def::Res;\n use rustc_hir::intravisit::{walk_expr, NestedVisitorMap, Visitor};\n@@ -9,7 +10,6 @@ use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_span::symbol::Ident;\n use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, Place, PlaceBase};\n-use syntax::ast;\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined.\n pub fn mutated_variables<'a, 'tcx>(expr: &'tcx Expr<'_>, cx: &'a LateContext<'a, 'tcx>) -> Option<FxHashSet<HirId>> {"}, {"sha": "035a10b1a2478a552b58aa56ecc32df7624168b9", "filename": "clippy_lints/src/wildcard_dependencies.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwildcard_dependencies.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -1,8 +1,8 @@\n use crate::utils::span_lint;\n+use rustc_ast::ast::Crate;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n-use syntax::ast::Crate;\n \n use if_chain::if_chain;\n "}, {"sha": "c59799fa1cf3689a3ddecc043ff6344eb3c74769", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=0f4a3fecccd55c0e5b4d50ce59ed660ac8e67dcc", "patch": "@@ -2,16 +2,16 @@ use std::borrow::Cow;\n use std::ops::Range;\n \n use crate::utils::{snippet_with_applicability, span_lint, span_lint_and_sugg, span_lint_and_then};\n+use rustc_ast::ast::{Expr, ExprKind, Mac, StrLit, StrStyle};\n+use rustc_ast::token;\n+use rustc_ast::tokenstream::TokenStream;\n use rustc_errors::Applicability;\n use rustc_lexer::unescape::{self, EscapeError};\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_parse::parser;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::symbol::Symbol;\n use rustc_span::{BytePos, Span};\n-use syntax::ast::{Expr, ExprKind, Mac, StrLit, StrStyle};\n-use syntax::token;\n-use syntax::tokenstream::TokenStream;\n \n declare_clippy_lint! {\n     /// **What it does:** This lint warns when you use `println!(\"\")` to\n@@ -349,7 +349,7 @@ fn check_tts<'a>(cx: &EarlyContext<'a>, tts: &TokenStream, is_write: bool) -> (O\n         if let Piece::NextArgument(arg) = piece {\n             if arg.format.ty == \"?\" {\n                 // FIXME: modify rustc's fmt string parser to give us the current span\n-                span_lint(cx, USE_DEBUG, parser.prev_span, \"use of `Debug`-based formatting\");\n+                span_lint(cx, USE_DEBUG, parser.prev_token.span, \"use of `Debug`-based formatting\");\n             }\n             args.push(arg);\n         }"}]}