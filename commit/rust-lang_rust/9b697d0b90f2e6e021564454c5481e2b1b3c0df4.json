{"sha": "9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "node_id": "C_kwDOAAsO6NoAKDliNjk3ZDBiOTBmMmU2ZTAyMTU2NDQ1NGM1NDgxZTJiMWIzYzBkZjQ", "commit": {"author": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-05-21T18:45:14Z"}, "committer": {"name": "Jacob Pratt", "email": "jacob@jhpratt.dev", "date": "2022-05-21T21:02:55Z"}, "message": "Merge crate and restricted visibilities", "tree": {"sha": "d6a73030bc99c6d1fb37b5bfee80b4727ed11ad0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6a73030bc99c6d1fb37b5bfee80b4727ed11ad0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "html_url": "https://github.com/rust-lang/rust/commit/9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9b697d0b90f2e6e021564454c5481e2b1b3c0df4/comments", "author": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhpratt", "id": 3161395, "node_id": "MDQ6VXNlcjMxNjEzOTU=", "avatar_url": "https://avatars.githubusercontent.com/u/3161395?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhpratt", "html_url": "https://github.com/jhpratt", "followers_url": "https://api.github.com/users/jhpratt/followers", "following_url": "https://api.github.com/users/jhpratt/following{/other_user}", "gists_url": "https://api.github.com/users/jhpratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhpratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhpratt/subscriptions", "organizations_url": "https://api.github.com/users/jhpratt/orgs", "repos_url": "https://api.github.com/users/jhpratt/repos", "events_url": "https://api.github.com/users/jhpratt/events{/privacy}", "received_events_url": "https://api.github.com/users/jhpratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d27f70743e12255804d40ff491108c8962bd7a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d27f70743e12255804d40ff491108c8962bd7a3", "html_url": "https://github.com/rust-lang/rust/commit/0d27f70743e12255804d40ff491108c8962bd7a3"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "8816d7d2f1fe2623da86deca3f056547e42d88bf", "filename": "src/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9b697d0b90f2e6e021564454c5481e2b1b3c0df4/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b697d0b90f2e6e021564454c5481e2b1b3c0df4/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "patch": "@@ -1361,7 +1361,7 @@ pub(crate) fn format_struct_struct(\n \n fn get_bytepos_after_visibility(vis: &ast::Visibility, default_span: Span) -> BytePos {\n     match vis.kind {\n-        ast::VisibilityKind::Crate | ast::VisibilityKind::Restricted { .. } => vis.span.hi(),\n+        ast::VisibilityKind::Restricted { .. } => vis.span.hi(),\n         _ => default_span.lo(),\n     }\n }"}, {"sha": "58fd95c656e799fafccf22f41a52483495c0ce16", "filename": "src/utils.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9b697d0b90f2e6e021564454c5481e2b1b3c0df4/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9b697d0b90f2e6e021564454c5481e2b1b3c0df4/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=9b697d0b90f2e6e021564454c5481e2b1b3c0df4", "patch": "@@ -44,11 +44,7 @@ pub(crate) fn is_same_visibility(a: &Visibility, b: &Visibility) -> bool {\n             VisibilityKind::Restricted { path: q, .. },\n         ) => pprust::path_to_string(p) == pprust::path_to_string(q),\n         (VisibilityKind::Public, VisibilityKind::Public)\n-        | (VisibilityKind::Inherited, VisibilityKind::Inherited)\n-        | (\n-            VisibilityKind::Crate,\n-            VisibilityKind::Crate,\n-        ) => true,\n+        | (VisibilityKind::Inherited, VisibilityKind::Inherited) => true,\n         _ => false,\n     }\n }\n@@ -61,7 +57,6 @@ pub(crate) fn format_visibility(\n     match vis.kind {\n         VisibilityKind::Public => Cow::from(\"pub \"),\n         VisibilityKind::Inherited => Cow::from(\"\"),\n-        VisibilityKind::Crate => Cow::from(\"pub(crate) \"),\n         VisibilityKind::Restricted { ref path, .. } => {\n             let Path { ref segments, .. } = **path;\n             let mut segments_iter = segments.iter().map(|seg| rewrite_ident(context, seg.ident));\n@@ -70,7 +65,7 @@ pub(crate) fn format_visibility(\n                     .next()\n                     .expect(\"Non-global path in pub(restricted)?\");\n             }\n-            let is_keyword = |s: &str| s == \"self\" || s == \"super\";\n+            let is_keyword = |s: &str| s == \"crate\" || s == \"self\" || s == \"super\";\n             let path = segments_iter.collect::<Vec<_>>().join(\"::\");\n             let in_str = if is_keyword(&path) { \"\" } else { \"in \" };\n "}]}