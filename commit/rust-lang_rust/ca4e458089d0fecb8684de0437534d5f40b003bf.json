{"sha": "ca4e458089d0fecb8684de0437534d5f40b003bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhNGU0NTgwODlkMGZlY2I4Njg0ZGUwNDM3NTM0ZDVmNDBiMDAzYmY=", "commit": {"author": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-12T21:12:11Z"}, "committer": {"name": "Fabian Zaiser", "email": "fabian.zaiser@gmail.com", "date": "2018-04-12T21:12:11Z"}, "message": "Address more nits.", "tree": {"sha": "94aeff65e5733a80fe9b70a1a7f294516136bd50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94aeff65e5733a80fe9b70a1a7f294516136bd50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca4e458089d0fecb8684de0437534d5f40b003bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca4e458089d0fecb8684de0437534d5f40b003bf", "html_url": "https://github.com/rust-lang/rust/commit/ca4e458089d0fecb8684de0437534d5f40b003bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca4e458089d0fecb8684de0437534d5f40b003bf/comments", "author": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fanzier", "id": 5846332, "node_id": "MDQ6VXNlcjU4NDYzMzI=", "avatar_url": "https://avatars.githubusercontent.com/u/5846332?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fanzier", "html_url": "https://github.com/fanzier", "followers_url": "https://api.github.com/users/fanzier/followers", "following_url": "https://api.github.com/users/fanzier/following{/other_user}", "gists_url": "https://api.github.com/users/fanzier/gists{/gist_id}", "starred_url": "https://api.github.com/users/fanzier/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fanzier/subscriptions", "organizations_url": "https://api.github.com/users/fanzier/orgs", "repos_url": "https://api.github.com/users/fanzier/repos", "events_url": "https://api.github.com/users/fanzier/events{/privacy}", "received_events_url": "https://api.github.com/users/fanzier/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0870e2f55b8b160c8ad7af684831902b4979cfb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0870e2f55b8b160c8ad7af684831902b4979cfb", "html_url": "https://github.com/rust-lang/rust/commit/c0870e2f55b8b160c8ad7af684831902b4979cfb"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "d11ee7cf740faa78861512060069a149c079e67d", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/ca4e458089d0fecb8684de0437534d5f40b003bf/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca4e458089d0fecb8684de0437534d5f40b003bf/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=ca4e458089d0fecb8684de0437534d5f40b003bf", "patch": "@@ -1050,9 +1050,9 @@ $EndFeature, \"\n             concat!(\"Wrapping Euclidean division. Computes `self.div_euc(rhs)`,\n wrapping around at the boundary of the type.\n \n-The only case where such wrapping can occur is when one divides `MIN / -1` on a signed type (where\n-`MIN` is the negative minimal value for the type); this is equivalent to `-MIN`, a positive value\n-that is too large to represent in the type. In such a case, this function returns `MIN` itself.\n+Wrapping will only occur in `MIN / -1` on a signed type (where `MIN` is the negative minimal value\n+for the type). This is equivalent to `-MIN`, a positive value that is too large to represent in the\n+type. In this case, this method returns `MIN` itself.\n \n # Panics\n \n@@ -1106,9 +1106,8 @@ $EndFeature, \"\n             concat!(\"Wrapping Euclidean modulo. Computes `self.mod_euc(rhs)`, wrapping around at the\n boundary of the type.\n \n-Such wrap-around never actually occurs mathematically; implementation artifacts make `x % y`\n-invalid for `MIN / -1` on a signed type (where `MIN` is the negative minimal value). In such a case,\n-this function returns `0`.\n+Wrapping will only occur in `MIN % -1` on a signed type (where `MIN` is the negative minimal value\n+for the type). In this case, this method returns 0.\n \n # Panics\n \n@@ -1399,7 +1398,7 @@ $EndFeature, \"\n             concat!(\"Calculates the quotient of Euclidean division `self.div_euc(rhs)`.\n \n Returns a tuple of the divisor along with a boolean indicating whether an arithmetic overflow would\n-occur. If an overflow would occur then self is returned.\n+occur. If an overflow would occur then `self` is returned.\n \n # Panics\n "}]}