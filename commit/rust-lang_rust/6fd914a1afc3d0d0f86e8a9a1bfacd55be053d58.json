{"sha": "6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmZDkxNGExYWZjM2QwZDBmODZlOGE5YTFiZmFjZDU1YmUwNTNkNTg=", "commit": {"author": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-09-10T14:00:50Z"}, "committer": {"name": "Masaki Hara", "email": "ackie.h.gmai@gmail.com", "date": "2018-10-24T12:59:06Z"}, "message": "Add vtable-shim helper methods for Instance.", "tree": {"sha": "dc61463dfb312ca6997deda587e04a883b01be3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc61463dfb312ca6997deda587e04a883b01be3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58", "html_url": "https://github.com/rust-lang/rust/commit/6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58/comments", "author": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "qnighy", "id": 41755, "node_id": "MDQ6VXNlcjQxNzU1", "avatar_url": "https://avatars.githubusercontent.com/u/41755?v=4", "gravatar_id": "", "url": "https://api.github.com/users/qnighy", "html_url": "https://github.com/qnighy", "followers_url": "https://api.github.com/users/qnighy/followers", "following_url": "https://api.github.com/users/qnighy/following{/other_user}", "gists_url": "https://api.github.com/users/qnighy/gists{/gist_id}", "starred_url": "https://api.github.com/users/qnighy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/qnighy/subscriptions", "organizations_url": "https://api.github.com/users/qnighy/orgs", "repos_url": "https://api.github.com/users/qnighy/repos", "events_url": "https://api.github.com/users/qnighy/events{/privacy}", "received_events_url": "https://api.github.com/users/qnighy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0ad4c6f85022642ddbb3fc10f1743eb4e16abef0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ad4c6f85022642ddbb3fc10f1743eb4e16abef0", "html_url": "https://github.com/rust-lang/rust/commit/0ad4c6f85022642ddbb3fc10f1743eb4e16abef0"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "83029df0fe72fa05d164c3f91e177610f0bdf4fa", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=6fd914a1afc3d0d0f86e8a9a1bfacd55be053d58", "patch": "@@ -237,6 +237,25 @@ impl<'a, 'b, 'tcx> Instance<'tcx> {\n         result\n     }\n \n+    pub fn resolve_for_vtable(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n+                              param_env: ty::ParamEnv<'tcx>,\n+                              def_id: DefId,\n+                              substs: &'tcx Substs<'tcx>) -> Option<Instance<'tcx>> {\n+        debug!(\"resolve(def_id={:?}, substs={:?})\", def_id, substs);\n+        let fn_sig = tcx.fn_sig(def_id);\n+        let is_vtable_shim =\n+            fn_sig.inputs().skip_binder().len() > 0 && fn_sig.input(0).skip_binder().is_self();\n+        if is_vtable_shim {\n+            debug!(\" => associated item with unsizeable self: Self\");\n+            Some(Instance {\n+                def: InstanceDef::VtableShim(def_id),\n+                substs,\n+            })\n+        } else {\n+            Instance::resolve(tcx, param_env, def_id, substs)\n+        }\n+    }\n+\n     pub fn resolve_closure(\n         tcx: TyCtxt<'a, 'tcx, 'tcx>,\n         def_id: DefId,\n@@ -251,6 +270,14 @@ impl<'a, 'b, 'tcx> Instance<'tcx> {\n             _ => Instance::new(def_id, substs.substs)\n         }\n     }\n+\n+    pub fn is_vtable_shim(&self) -> bool {\n+        if let InstanceDef::VtableShim(..) = self.def {\n+            true\n+        } else {\n+            false\n+        }\n+    }\n }\n \n fn resolve_associated_item<'a, 'tcx>("}]}