{"sha": "69715c903312c3e734bfd9098a5e8773f2e19d01", "node_id": "C_kwDOAAsO6NoAKDY5NzE1YzkwMzMxMmMzZTczNGJmZDkwOThhNWU4NzczZjJlMTlkMDE", "commit": {"author": {"name": "Vincenzo Palazzo", "email": "vincenzopalazzodev@gmail.com", "date": "2022-08-20T20:47:31Z"}, "committer": {"name": "Vincenzo Palazzo", "email": "vincenzopalazzodev@gmail.com", "date": "2022-08-22T22:53:40Z"}, "message": "sugg: suggest the usage of boolean value when there is a typo in the keyword\n\nSigned-off-by: Vincenzo Palazzo <vincenzopalazzodev@gmail.com>", "tree": {"sha": "0ee1869b86dad60ecb23c2693c57454af271c86c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee1869b86dad60ecb23c2693c57454af271c86c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/69715c903312c3e734bfd9098a5e8773f2e19d01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/69715c903312c3e734bfd9098a5e8773f2e19d01", "html_url": "https://github.com/rust-lang/rust/commit/69715c903312c3e734bfd9098a5e8773f2e19d01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/69715c903312c3e734bfd9098a5e8773f2e19d01/comments", "author": {"login": "vincenzopalazzo", "id": 17150045, "node_id": "MDQ6VXNlcjE3MTUwMDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincenzopalazzo", "html_url": "https://github.com/vincenzopalazzo", "followers_url": "https://api.github.com/users/vincenzopalazzo/followers", "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}", "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions", "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs", "repos_url": "https://api.github.com/users/vincenzopalazzo/repos", "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vincenzopalazzo", "id": 17150045, "node_id": "MDQ6VXNlcjE3MTUwMDQ1", "avatar_url": "https://avatars.githubusercontent.com/u/17150045?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vincenzopalazzo", "html_url": "https://github.com/vincenzopalazzo", "followers_url": "https://api.github.com/users/vincenzopalazzo/followers", "following_url": "https://api.github.com/users/vincenzopalazzo/following{/other_user}", "gists_url": "https://api.github.com/users/vincenzopalazzo/gists{/gist_id}", "starred_url": "https://api.github.com/users/vincenzopalazzo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vincenzopalazzo/subscriptions", "organizations_url": "https://api.github.com/users/vincenzopalazzo/orgs", "repos_url": "https://api.github.com/users/vincenzopalazzo/repos", "events_url": "https://api.github.com/users/vincenzopalazzo/events{/privacy}", "received_events_url": "https://api.github.com/users/vincenzopalazzo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd01122b5c62a04e64b4109c5576eeea9ae4145b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd01122b5c62a04e64b4109c5576eeea9ae4145b", "html_url": "https://github.com/rust-lang/rust/commit/dd01122b5c62a04e64b4109c5576eeea9ae4145b"}], "stats": {"total": 64, "additions": 59, "deletions": 5}, "files": [{"sha": "9bb6e4645804b181e9a976fe40bad281f3e6109c", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 22, "deletions": 5, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/69715c903312c3e734bfd9098a5e8773f2e19d01/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69715c903312c3e734bfd9098a5e8773f2e19d01/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=69715c903312c3e734bfd9098a5e8773f2e19d01", "patch": "@@ -250,13 +250,30 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                 .map_or_else(String::new, |res| format!(\"{} \", res.descr()));\n                 (mod_prefix, format!(\"`{}`\", Segment::names_to_string(mod_path)), None)\n             };\n+\n+            let (fallback_label, suggestion) = if path_str == \"async\"\n+                && expected.starts_with(\"struct\")\n+            {\n+                (\"`async` blocks are only allowed in Rust 2018 or later\".to_string(), suggestion)\n+            } else {\n+                // check if we are in situation of typo like `True` instead of `true`.\n+                let override_suggestion =\n+                    if [\"true\", \"false\"].contains(&item_str.to_string().to_lowercase().as_str()) {\n+                        let item_typo = item_str.to_string().to_lowercase();\n+                        Some((\n+                            item_span,\n+                            \"you may want to use a bool value instead\",\n+                            format!(\"{}\", item_typo),\n+                        ))\n+                    } else {\n+                        suggestion\n+                    };\n+                (format!(\"not found in {mod_str}\"), override_suggestion)\n+            };\n+\n             BaseError {\n                 msg: format!(\"cannot find {expected} `{item_str}` in {mod_prefix}{mod_str}\"),\n-                fallback_label: if path_str == \"async\" && expected.starts_with(\"struct\") {\n-                    \"`async` blocks are only allowed in Rust 2018 or later\".to_string()\n-                } else {\n-                    format!(\"not found in {mod_str}\")\n-                },\n+                fallback_label,\n                 span: item_span,\n                 span_label: None,\n                 could_be_expr: false,"}, {"sha": "deab0fb05b76b4cbe2e5ab4c7e41410b436e50f0", "filename": "src/test/ui/suggestions/bool_typo_err_suggest.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/69715c903312c3e734bfd9098a5e8773f2e19d01/src%2Ftest%2Fui%2Fsuggestions%2Fbool_typo_err_suggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/69715c903312c3e734bfd9098a5e8773f2e19d01/src%2Ftest%2Fui%2Fsuggestions%2Fbool_typo_err_suggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fbool_typo_err_suggest.rs?ref=69715c903312c3e734bfd9098a5e8773f2e19d01", "patch": "@@ -0,0 +1,12 @@\n+// Suggest the boolean value instead of emit a generic error that the value\n+// True is not in the scope.\n+\n+fn main() {\n+    let x = True;\n+    //~^ ERROR cannot find value `True` in this scope\n+    //~| HELP you may want to use a bool value instead\n+\n+    let y = False;\n+    //~^ ERROR cannot find value `False` in this scope\n+    //~| HELP you may want to use a bool value instead\n+}"}, {"sha": "52bde07ca07701e0f786a40f604fff1cb5a7b484", "filename": "src/test/ui/suggestions/bool_typo_err_suggest.stderr", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/69715c903312c3e734bfd9098a5e8773f2e19d01/src%2Ftest%2Fui%2Fsuggestions%2Fbool_typo_err_suggest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/69715c903312c3e734bfd9098a5e8773f2e19d01/src%2Ftest%2Fui%2Fsuggestions%2Fbool_typo_err_suggest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fbool_typo_err_suggest.stderr?ref=69715c903312c3e734bfd9098a5e8773f2e19d01", "patch": "@@ -0,0 +1,25 @@\n+error[E0425]: cannot find value `True` in this scope\n+  --> $DIR/bool_typo_err_suggest.rs:5:13\n+   |\n+LL |     let x = True;\n+   |             ^^^^ not found in this scope\n+   |\n+help: you may want to use a bool value instead\n+   |\n+LL |     let x = true;\n+   |             ~~~~\n+\n+error[E0425]: cannot find value `False` in this scope\n+  --> $DIR/bool_typo_err_suggest.rs:9:13\n+   |\n+LL |     let y = False;\n+   |             ^^^^^ not found in this scope\n+   |\n+help: you may want to use a bool value instead\n+   |\n+LL |     let y = false;\n+   |             ~~~~~\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}