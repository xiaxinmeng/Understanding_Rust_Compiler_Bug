{"sha": "763b6cba37438d16156f7b3c372e2f34f2def623", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2M2I2Y2JhMzc0MzhkMTYxNTZmN2IzYzM3MmUyZjM0ZjJkZWY2MjM=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-25T13:35:56Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:51Z"}, "message": "rustc_llvm: Update the Attribute bitflags and remove OtherAttribute.", "tree": {"sha": "ca034f7e062b2f8603833927265da50ac39a960d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca034f7e062b2f8603833927265da50ac39a960d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/763b6cba37438d16156f7b3c372e2f34f2def623", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/763b6cba37438d16156f7b3c372e2f34f2def623", "html_url": "https://github.com/rust-lang/rust/commit/763b6cba37438d16156f7b3c372e2f34f2def623", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/763b6cba37438d16156f7b3c372e2f34f2def623/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d7c9bd137b883623921a7befb57ed8781a0e614", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d7c9bd137b883623921a7befb57ed8781a0e614", "html_url": "https://github.com/rust-lang/rust/commit/1d7c9bd137b883623921a7befb57ed8781a0e614"}], "stats": {"total": 65, "additions": 25, "deletions": 40}, "files": [{"sha": "aa7fdfaf67669300fb2e12292de2603544e3a2f3", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 25, "deletions": 40, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/763b6cba37438d16156f7b3c372e2f34f2def623/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/763b6cba37438d16156f7b3c372e2f34f2def623/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=763b6cba37438d16156f7b3c372e2f34f2def623", "patch": "@@ -151,41 +151,40 @@ bitflags! {\n         const OptimizeForSize = 1 << 13,\n         const StackProtect    = 1 << 14,\n         const StackProtectReq = 1 << 15,\n-        const Alignment       = 1 << 16,\n         const NoCapture       = 1 << 21,\n         const NoRedZone       = 1 << 22,\n         const NoImplicitFloat = 1 << 23,\n         const Naked           = 1 << 24,\n         const InlineHint      = 1 << 25,\n-        const Stack           = 7 << 26,\n         const ReturnsTwice    = 1 << 29,\n         const UWTable         = 1 << 30,\n         const NonLazyBind     = 1 << 31,\n-        const OptimizeNone    = 1 << 42,\n-    }\n-}\n \n-\n-#[repr(u64)]\n-#[derive(Copy, Clone)]\n-pub enum OtherAttribute {\n-    // The following are not really exposed in\n-    // the LLVM C api so instead to add these\n-    // we call a wrapper function in RustWrapper\n-    // that uses the C++ api.\n-    SanitizeAddressAttribute = 1 << 32,\n-    MinSizeAttribute = 1 << 33,\n-    NoDuplicateAttribute = 1 << 34,\n-    StackProtectStrongAttribute = 1 << 35,\n-    SanitizeThreadAttribute = 1 << 36,\n-    SanitizeMemoryAttribute = 1 << 37,\n-    NoBuiltinAttribute = 1 << 38,\n-    ReturnedAttribute = 1 << 39,\n-    ColdAttribute = 1 << 40,\n-    BuiltinAttribute = 1 << 41,\n-    OptimizeNoneAttribute = 1 << 42,\n-    InAllocaAttribute = 1 << 43,\n-    NonNullAttribute = 1 << 44,\n+        // Some of these are missing from the LLVM C API, the rest are\n+        // present, but commented out, and preceded by the following warning:\n+        // FIXME: These attributes are currently not included in the C API as\n+        // a temporary measure until the API/ABI impact to the C API is understood\n+        // and the path forward agreed upon.\n+        const SanitizeAddress = 1 << 32;\n+        const MinSize         = 1 << 33;\n+        const NoDuplicate     = 1 << 34;\n+        const StackProtectStrong = 1 << 35;\n+        const SanitizeThread  = 1 << 36;\n+        const SanitizeMemory  = 1 << 37;\n+        const NoBuiltin       = 1 << 38;\n+        const Returned        = 1 << 39;\n+        const Cold            = 1 << 40;\n+        const Builtin         = 1 << 41;\n+        const OptimizeNone    = 1 << 42;\n+        const InAlloca        = 1 << 43;\n+        const NonNull         = 1 << 44;\n+        const JumpTable       = 1 << 45;\n+        const Convergent      = 1 << 46;\n+        const SafeStack       = 1 << 47;\n+        const NoRecurse       = 1 << 48;\n+        const InaccessibleMemOnly         = 1 << 49;\n+        const InaccessibleMemOrArgMemOnly = 1 << 50;\n+    }\n }\n \n #[derive(Copy, Clone)]\n@@ -219,20 +218,6 @@ impl AttrHelper for Attribute {\n     }\n }\n \n-impl AttrHelper for OtherAttribute {\n-    fn apply_llfn(&self, idx: c_uint, llfn: ValueRef) {\n-        unsafe {\n-            LLVMAddFunctionAttribute(llfn, idx, *self as uint64_t);\n-        }\n-    }\n-\n-    fn apply_callsite(&self, idx: c_uint, callsite: ValueRef) {\n-        unsafe {\n-            LLVMAddCallSiteAttribute(callsite, idx, *self as uint64_t);\n-        }\n-    }\n-}\n-\n impl AttrHelper for SpecialAttribute {\n     fn apply_llfn(&self, idx: c_uint, llfn: ValueRef) {\n         match *self {"}]}