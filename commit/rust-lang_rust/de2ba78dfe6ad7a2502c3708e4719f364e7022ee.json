{"sha": "de2ba78dfe6ad7a2502c3708e4719f364e7022ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMmJhNzhkZmU2YWQ3YTI1MDJjMzcwOGU0NzE5ZjM2NGU3MDIyZWU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-22T16:07:46Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-12-22T18:12:05Z"}, "message": "Rollup merge of #56973 - RalfJung:miri-trace, r=oli-obk\n\nmake basic CTFE tracing available on release builds\n\nDebugging things going wrong in miri is currently pretty much impossible with a nightly Rust.\n\nr? @oli-obk", "tree": {"sha": "2bd02278b8a34f3251fd8bf57fd818fadda33145", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bd02278b8a34f3251fd8bf57fd818fadda33145"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de2ba78dfe6ad7a2502c3708e4719f364e7022ee", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlwefnUACgkQ/vbIBR0O\nATzxlBAAmir8qJIW66+CPDkilVuTsAm7fPaNoGDbSthtP9uozWTq95eLghAVV45Y\nvbY9WUnAO8c6e2igcKrDdbzJI1+ZBI2+QpwUkYo74QmwE2BlpqTMmefK3nNrQJh1\nQ7IySGbahkxUkP+Tm+moFMCK4wJaecSszY1rcy9wY7MSBu5i3nrxA6VKMpxrAb10\nc8VdOOBR7iEKHPkYhrksTBdzpv9SfMtVXg+cptL2gBKhKvqgWz4w5LQbDzF8hgcA\n+/UtDT35S+rWUqyk+tSMchKuTSuFw/HgBAinDmWrhYA8JZtiA5GWw3JWiu0xssga\nfZTC/wgseB4nsSO4SIOfzO0RuyodpV6qQbFvWata3KnvMtpwaYJ/875HZ3nl3ZKn\nzSNmWO9GpjO5SBp22Y+pq8VX+bwALSjI06TgIb4RsXdhvzwsT6T2WcBElvhwSkVr\n8vkL6u9jJ2yd/526wWQ0A7IfVhmec8fDORLPtEfE5Vlz/oLhPHhlcw31dqrCKB+Z\n2g+sgMYRyUZ6IixrsoKMtJXIJzBvwPvyJKPBlWj/cTXiVh6KQBrTGwOzBnNmEdIB\njA2YJqG0qoNt+jUb1vVbd9+sjr/2h4TJhQ2lDMFfRHrp/NeSIsJV85k2KcHdC3e7\nSRFBQBnnufwJ2FCrOo79pLTXXW7hDlECAl+9Lp+HPCSBZWEkvxk=\n=TJR6\n-----END PGP SIGNATURE-----", "payload": "tree 2bd02278b8a34f3251fd8bf57fd818fadda33145\nparent 22dfa2b44a797b76f38b9ce775da9bc9886787af\nparent 202904b3f7a7d2563e6808b8d8d530768c949a99\nauthor kennytm <kennytm@gmail.com> 1545494866 +0800\ncommitter kennytm <kennytm@gmail.com> 1545502325 +0800\n\nRollup merge of #56973 - RalfJung:miri-trace, r=oli-obk\n\nmake basic CTFE tracing available on release builds\n\nDebugging things going wrong in miri is currently pretty much impossible with a nightly Rust.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de2ba78dfe6ad7a2502c3708e4719f364e7022ee", "html_url": "https://github.com/rust-lang/rust/commit/de2ba78dfe6ad7a2502c3708e4719f364e7022ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de2ba78dfe6ad7a2502c3708e4719f364e7022ee/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22dfa2b44a797b76f38b9ce775da9bc9886787af", "url": "https://api.github.com/repos/rust-lang/rust/commits/22dfa2b44a797b76f38b9ce775da9bc9886787af", "html_url": "https://github.com/rust-lang/rust/commit/22dfa2b44a797b76f38b9ce775da9bc9886787af"}, {"sha": "202904b3f7a7d2563e6808b8d8d530768c949a99", "url": "https://api.github.com/repos/rust-lang/rust/commits/202904b3f7a7d2563e6808b8d8d530768c949a99", "html_url": "https://github.com/rust-lang/rust/commit/202904b3f7a7d2563e6808b8d8d530768c949a99"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "8ae0345e07a34a5da3fae486c8b1c56b35fefcf3", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/de2ba78dfe6ad7a2502c3708e4719f364e7022ee/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ba78dfe6ad7a2502c3708e4719f364e7022ee/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=de2ba78dfe6ad7a2502c3708e4719f364e7022ee", "patch": "@@ -422,7 +422,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         return_to_block: StackPopCleanup,\n     ) -> EvalResult<'tcx> {\n         if self.stack.len() > 1 { // FIXME should be \"> 0\", printing topmost frame crashes rustc...\n-            debug!(\"PAUSING({}) {}\", self.cur_frame(), self.frame().instance);\n+            info!(\"PAUSING({}) {}\", self.cur_frame(), self.frame().instance);\n         }\n         ::log_settings::settings().indentation += 1;\n \n@@ -491,7 +491,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         }\n \n         if self.stack.len() > 1 { // FIXME no check should be needed, but some instances ICE\n-            debug!(\"ENTERING({}) {}\", self.cur_frame(), self.frame().instance);\n+            info!(\"ENTERING({}) {}\", self.cur_frame(), self.frame().instance);\n         }\n \n         if self.stack.len() > self.tcx.sess.const_eval_stack_frame_limit {\n@@ -503,7 +503,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n \n     pub(super) fn pop_stack_frame(&mut self) -> EvalResult<'tcx> {\n         if self.stack.len() > 1 { // FIXME no check should be needed, but some instances ICE\n-            debug!(\"LEAVING({}) {}\", self.cur_frame(), self.frame().instance);\n+            info!(\"LEAVING({}) {}\", self.cur_frame(), self.frame().instance);\n         }\n         ::log_settings::settings().indentation -= 1;\n         let frame = self.stack.pop().expect(\n@@ -557,7 +557,7 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tc\n         }\n \n         if self.stack.len() > 1 { // FIXME should be \"> 0\", printing topmost frame crashes rustc...\n-            debug!(\"CONTINUING({}) {}\", self.cur_frame(), self.frame().instance);\n+            info!(\"CONTINUING({}) {}\", self.cur_frame(), self.frame().instance);\n         }\n \n         Ok(())"}, {"sha": "308abdbbb90f0327e4eb70192c2d0932f4d63f28", "filename": "src/librustc_mir/interpret/step.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/de2ba78dfe6ad7a2502c3708e4719f364e7022ee/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de2ba78dfe6ad7a2502c3708e4719f364e7022ee/src%2Flibrustc_mir%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fstep.rs?ref=de2ba78dfe6ad7a2502c3708e4719f364e7022ee", "patch": "@@ -81,7 +81,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n     }\n \n     fn statement(&mut self, stmt: &mir::Statement<'tcx>) -> EvalResult<'tcx> {\n-        debug!(\"{:?}\", stmt);\n+        info!(\"{:?}\", stmt);\n \n         use rustc::mir::StatementKind::*;\n \n@@ -289,7 +289,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n     }\n \n     fn terminator(&mut self, terminator: &mir::Terminator<'tcx>) -> EvalResult<'tcx> {\n-        debug!(\"{:?}\", terminator.kind);\n+        info!(\"{:?}\", terminator.kind);\n         self.tcx.span = terminator.source_info.span;\n         self.memory.tcx.span = terminator.source_info.span;\n \n@@ -299,7 +299,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         if !self.stack.is_empty() {\n             // This should change *something*\n             debug_assert!(self.cur_frame() != old_stack || self.frame().block != old_bb);\n-            debug!(\"// {:?}\", self.frame().block);\n+            info!(\"// {:?}\", self.frame().block);\n         }\n         Ok(())\n     }"}]}