{"sha": "87c5927b79b8eec8763659da8a3cf4561a4ceabd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3YzU5MjdiNzliOGVlYzg3NjM2NTlkYThhM2NmNDU2MWE0Y2VhYmQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-12-19T11:46:04Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2014-12-19T13:46:42Z"}, "message": "debuginfo: Add test case for destructured for-loop variable.", "tree": {"sha": "b8e3b79db85e0e2a04f00c95449682c92d7eb501", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8e3b79db85e0e2a04f00c95449682c92d7eb501"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87c5927b79b8eec8763659da8a3cf4561a4ceabd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87c5927b79b8eec8763659da8a3cf4561a4ceabd", "html_url": "https://github.com/rust-lang/rust/commit/87c5927b79b8eec8763659da8a3cf4561a4ceabd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87c5927b79b8eec8763659da8a3cf4561a4ceabd/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34a6fcf19566e5015c1ef4c144a408a2f182cf4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34a6fcf19566e5015c1ef4c144a408a2f182cf4d", "html_url": "https://github.com/rust-lang/rust/commit/34a6fcf19566e5015c1ef4c144a408a2f182cf4d"}], "stats": {"total": 178, "additions": 178, "deletions": 0}, "files": [{"sha": "19a82ee5e67b3f5a702dfbf4e02b78ad0d6af303", "filename": "src/test/debuginfo/destructured-for-loop-variable.rs", "status": "added", "additions": 178, "deletions": 0, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/87c5927b79b8eec8763659da8a3cf4561a4ceabd/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87c5927b79b8eec8763659da8a3cf4561a4ceabd/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fdestructured-for-loop-variable.rs?ref=87c5927b79b8eec8763659da8a3cf4561a4ceabd", "patch": "@@ -0,0 +1,178 @@\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-android: FIXME(#10381)\n+// min-lldb-version: 310\n+\n+// compile-flags:-g\n+\n+// === GDB TESTS ===================================================================================\n+\n+// gdb-command:run\n+\n+// DESTRUCTURED STRUCT\n+// gdb-command:print x\n+// gdb-check:$1 = 400\n+// gdb-command:print y\n+// gdb-check:$2 = 401.5\n+// gdb-command:print z\n+// gdb-check:$3 = true\n+// gdb-command:continue\n+\n+// DESTRUCTURED TUPLE\n+// gdb-command:print/x _i8\n+// gdb-check:$4 = 0x6f\n+// gdb-command:print/x _u8\n+// gdb-check:$5 = 0x70\n+// gdb-command:print _i16\n+// gdb-check:$6 = -113\n+// gdb-command:print _u16\n+// gdb-check:$7 = 114\n+// gdb-command:print _i32\n+// gdb-check:$8 = -115\n+// gdb-command:print _u32\n+// gdb-check:$9 = 116\n+// gdb-command:print _i64\n+// gdb-check:$10 = -117\n+// gdb-command:print _u64\n+// gdb-check:$11 = 118\n+// gdb-command:print _f32\n+// gdb-check:$12 = 119.5\n+// gdb-command:print _f64\n+// gdb-check:$13 = 120.5\n+// gdb-command:continue\n+\n+// MORE COMPLEX CASE\n+// gdb-command:print v1\n+// gdb-check:$14 = 80000\n+// gdb-command:print x1\n+// gdb-check:$15 = 8000\n+// gdb-command:print *y1\n+// gdb-check:$16 = 80001.5\n+// gdb-command:print z1\n+// gdb-check:$17 = false\n+// gdb-command:print *x2\n+// gdb-check:$18 = -30000\n+// gdb-command:print y2\n+// gdb-check:$19 = -300001.5\n+// gdb-command:print *z2\n+// gdb-check:$20 = true\n+// gdb-command:print v2\n+// gdb-check:$21 = 854237.5\n+// gdb-command:continue\n+\n+\n+// === LLDB TESTS ==================================================================================\n+\n+// lldb-command:type format add --format hex char\n+// lldb-command:type format add --format hex 'unsigned char'\n+\n+// lldb-command:run\n+\n+// DESTRUCTURED STRUCT\n+// lldb-command:print x\n+// lldb-check:[...]$0 = 400\n+// lldb-command:print y\n+// lldb-check:[...]$1 = 401.5\n+// lldb-command:print z\n+// lldb-check:[...]$2 = true\n+// lldb-command:continue\n+\n+// DESTRUCTURED TUPLE\n+// lldb-command:print _i8\n+// lldb-check:[...]$3 = 0x6f\n+// lldb-command:print _u8\n+// lldb-check:[...]$4 = 0x70\n+// lldb-command:print _i16\n+// lldb-check:[...]$5 = -113\n+// lldb-command:print _u16\n+// lldb-check:[...]$6 = 114\n+// lldb-command:print _i32\n+// lldb-check:[...]$7 = -115\n+// lldb-command:print _u32\n+// lldb-check:[...]$8 = 116\n+// lldb-command:print _i64\n+// lldb-check:[...]$9 = -117\n+// lldb-command:print _u64\n+// lldb-check:[...]$10 = 118\n+// lldb-command:print _f32\n+// lldb-check:[...]$11 = 119.5\n+// lldb-command:print _f64\n+// lldb-check:[...]$12 = 120.5\n+// lldb-command:continue\n+\n+// MORE COMPLEX CASE\n+// lldb-command:print v1\n+// lldb-check:[...]$13 = 80000\n+// lldb-command:print x1\n+// lldb-check:[...]$14 = 8000\n+// lldb-command:print *y1\n+// lldb-check:[...]$15 = 80001.5\n+// lldb-command:print z1\n+// lldb-check:[...]$16 = false\n+// lldb-command:print *x2\n+// lldb-check:[...]$17 = -30000\n+// lldb-command:print y2\n+// lldb-check:[...]$18 = -300001.5\n+// lldb-command:print *z2\n+// lldb-check:[...]$19 = true\n+// lldb-command:print v2\n+// lldb-check:[...]$20 = 854237.5\n+// lldb-command:continue\n+\n+\n+struct Struct {\n+    x: i16,\n+    y: f32,\n+    z: bool\n+}\n+\n+fn main() {\n+\n+    let s = Struct {\n+        x: 400,\n+        y: 401.5,\n+        z: true\n+    };\n+\n+    for &Struct { x, y, z } in [s].iter() {\n+        zzz(); // #break\n+    }\n+\n+    let tuple: (i8, u8, i16, u16, i32, u32, i64, u64, f32, f64) =\n+        (0x6f, 0x70, -113, 114, -115, 116, -117, 118, 119.5, 120.5);\n+\n+    for &(_i8, _u8, _i16, _u16, _i32, _u32, _i64, _u64, _f32, _f64) in [tuple].iter() {\n+        zzz(); // #break\n+    }\n+\n+    let more_complex: (i32, &Struct, Struct, Box<f64>) =\n+        (80000,\n+         &Struct {\n+            x: 8000,\n+            y: 80001.5,\n+            z: false\n+         },\n+         Struct {\n+            x: -30000,\n+            y: -300001.5,\n+            z: true\n+         },\n+         box 854237.5);\n+\n+    for &(v1,\n+          &Struct { x: x1, y: ref y1, z: z1 },\n+          Struct { x: ref x2, y: y2, z: ref z2 },\n+          box v2) in [more_complex].iter() {\n+        zzz(); // #break\n+    }\n+}\n+\n+fn zzz() {()}"}]}