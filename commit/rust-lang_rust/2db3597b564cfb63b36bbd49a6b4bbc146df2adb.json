{"sha": "2db3597b564cfb63b36bbd49a6b4bbc146df2adb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYjM1OTdiNTY0Y2ZiNjNiMzZiYmQ0OWE2YjRiYmMxNDZkZjJhZGI=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-04-23T06:39:38Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-04-23T06:39:38Z"}, "message": "Implement boolean binops.", "tree": {"sha": "d965aaa41371bbb6d364c3bd5753c7cc9f544a24", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d965aaa41371bbb6d364c3bd5753c7cc9f544a24"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2db3597b564cfb63b36bbd49a6b4bbc146df2adb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2db3597b564cfb63b36bbd49a6b4bbc146df2adb", "html_url": "https://github.com/rust-lang/rust/commit/2db3597b564cfb63b36bbd49a6b4bbc146df2adb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2db3597b564cfb63b36bbd49a6b4bbc146df2adb/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f50289d437bd2d9308761bd2405d63a633cbe1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f50289d437bd2d9308761bd2405d63a633cbe1e", "html_url": "https://github.com/rust-lang/rust/commit/6f50289d437bd2d9308761bd2405d63a633cbe1e"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "3d844cebd31174699c4986187c2f1c52d754b96d", "filename": "src/primval.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/2db3597b564cfb63b36bbd49a6b4bbc146df2adb/src%2Fprimval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db3597b564cfb63b36bbd49a6b4bbc146df2adb/src%2Fprimval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fprimval.rs?ref=2db3597b564cfb63b36bbd49a6b4bbc146df2adb", "patch": "@@ -14,10 +14,11 @@ pub enum PrimVal {\n }\n \n pub fn binary_op(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> EvalResult<PrimVal> {\n+    use rustc::mir::repr::BinOp::*;\n+    use self::PrimVal::*;\n+\n     macro_rules! int_binops {\n         ($v:ident, $l:ident, $r:ident) => ({\n-            use rustc::mir::repr::BinOp::*;\n-            use self::PrimVal::*;\n             match bin_op {\n                 Add    => $v($l + $r),\n                 Sub    => $v($l - $r),\n@@ -52,7 +53,6 @@ pub fn binary_op(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> EvalResul\n         }\n     }\n \n-    use self::PrimVal::*;\n     let val = match (left, right) {\n         (I8(l),  I8(r))  => int_binops!(I8, l, r),\n         (I16(l), I16(r)) => int_binops!(I16, l, r),\n@@ -63,6 +63,18 @@ pub fn binary_op(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> EvalResul\n         (U32(l), U32(r)) => int_binops!(U32, l, r),\n         (U64(l), U64(r)) => int_binops!(U64, l, r),\n \n+        (Bool(l), Bool(r)) => {\n+            Bool(match bin_op {\n+                Eq => l == r,\n+                Ne => l != r,\n+                Lt => l < r,\n+                Le => l <= r,\n+                Gt => l > r,\n+                Ge => l >= r,\n+                _ => panic!(\"invalid binary operation on booleans: {:?}\", bin_op),\n+            })\n+        }\n+\n         (IntegerPtr(l), IntegerPtr(r)) => int_binops!(IntegerPtr, l, r),\n \n         (AbstractPtr(_), IntegerPtr(_)) | (IntegerPtr(_), AbstractPtr(_)) =>\n@@ -76,7 +88,6 @@ pub fn binary_op(bin_op: mir::BinOp, left: PrimVal, right: PrimVal) -> EvalResul\n             let l = l_ptr.offset;\n             let r = r_ptr.offset;\n \n-            use rustc::mir::repr::BinOp::*;\n             match bin_op {\n                 Eq => Bool(l == r),\n                 Ne => Bool(l != r),"}, {"sha": "4b5f510ad44091789ca67775fcf4e7ed59e587e5", "filename": "tests/run-pass/specialization.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2db3597b564cfb63b36bbd49a6b4bbc146df2adb/tests%2Frun-pass%2Fspecialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2db3597b564cfb63b36bbd49a6b4bbc146df2adb/tests%2Frun-pass%2Fspecialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fspecialization.rs?ref=2db3597b564cfb63b36bbd49a6b4bbc146df2adb", "patch": "@@ -18,6 +18,7 @@ fn specialization() -> (bool, bool) {\n     (i32::is_unit(), <()>::is_unit())\n }\n \n+#[miri_run]\n fn main() {\n     assert_eq!(specialization(), (false, true));\n }"}]}