{"sha": "669e11764430be3a098d6c8fe875d8efbb3547a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2OWUxMTc2NDQzMGJlM2EwOThkNmM4ZmU4NzVkOGVmYmIzNTQ3YTM=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-02-27T17:04:43Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-02-27T17:04:43Z"}, "message": "Add LSP request and VSCode command", "tree": {"sha": "652dc3728183ea67624116b27f36008677ae9f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/652dc3728183ea67624116b27f36008677ae9f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/669e11764430be3a098d6c8fe875d8efbb3547a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/669e11764430be3a098d6c8fe875d8efbb3547a3", "html_url": "https://github.com/rust-lang/rust/commit/669e11764430be3a098d6c8fe875d8efbb3547a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/669e11764430be3a098d6c8fe875d8efbb3547a3/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31f5f816e3747c1a0972d2f0aca25ded9980cd36", "url": "https://api.github.com/repos/rust-lang/rust/commits/31f5f816e3747c1a0972d2f0aca25ded9980cd36", "html_url": "https://github.com/rust-lang/rust/commit/31f5f816e3747c1a0972d2f0aca25ded9980cd36"}], "stats": {"total": 105, "additions": 96, "deletions": 9}, "files": [{"sha": "53b0d3e4138f187eb8b168d6021ffeef8f9533d4", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -607,6 +607,24 @@ pub(crate) fn handle_runnables(\n     Ok(res)\n }\n \n+pub(crate) fn handle_related_tests(\n+    snap: GlobalStateSnapshot,\n+    params: lsp_ext::RelatedTestsParams,\n+) -> Result<Vec<lsp_ext::TestInfo>> {\n+    let _p = profile::span(\"handle_related_tests\");\n+    let position = from_proto::file_position(&snap, params.text_document_position)?;\n+\n+    let tests = snap.analysis.related_tests(position, None)?;\n+    let mut res = Vec::new();\n+    for it in tests {\n+        if let Ok(runnable) = to_proto::runnable(&snap, it) {\n+            res.push(lsp_ext::TestInfo { runnable })\n+        }\n+    }\n+\n+    Ok(res)\n+}\n+\n pub(crate) fn handle_completion(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::CompletionParams,"}, {"sha": "fe11903f945e4a8b609e4e9f8760cc215509633f", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -177,6 +177,26 @@ pub struct CargoRunnable {\n     pub expect_test: Option<bool>,\n }\n \n+pub enum RelatedTests {}\n+\n+impl Request for RelatedTests {\n+    type Params = RelatedTestsParams;\n+    type Result = Vec<TestInfo>;\n+    const METHOD: &'static str = \"rust-analyzer/relatedTests\";\n+}\n+\n+#[derive(Serialize, Deserialize, Debug)]\n+#[serde(rename_all = \"camelCase\")]\n+pub struct RelatedTestsParams {\n+    #[serde(flatten)]\n+    pub text_document_position: lsp_types::TextDocumentPositionParams,\n+}\n+\n+#[derive(Debug, Deserialize, Serialize)]\n+pub struct TestInfo {\n+    pub runnable: Runnable,\n+}\n+\n pub enum InlayHints {}\n \n impl Request for InlayHints {"}, {"sha": "9f86b8c0d57db66bf05ef36bbfcbe838fdc0a4c5", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -500,6 +500,7 @@ impl GlobalState {\n             .on::<lsp_ext::ExpandMacro>(handlers::handle_expand_macro)\n             .on::<lsp_ext::ParentModule>(handlers::handle_parent_module)\n             .on::<lsp_ext::Runnables>(handlers::handle_runnables)\n+            .on::<lsp_ext::RelatedTests>(handlers::handle_related_tests)\n             .on::<lsp_ext::InlayHints>(handlers::handle_inlay_hints)\n             .on::<lsp_ext::CodeActionRequest>(handlers::handle_code_action)\n             .on::<lsp_ext::CodeActionResolveRequest>(handlers::handle_code_action_resolve)"}, {"sha": "43ea1225abff5c3f52b1160bd07a70395d23ba0e", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -202,6 +202,11 @@\n                 \"command\": \"rust-analyzer.openCargoToml\",\n                 \"title\": \"Open Cargo.toml\",\n                 \"category\": \"Rust Analyzer\"\n+            },\n+            {\n+                \"command\": \"rust-analyzer.peekTests\",\n+                \"title\": \"Peek related tests\",\n+                \"category\": \"Rust Analyzer\"\n             }\n         ],\n         \"keybindings\": ["}, {"sha": "3512fefdf55dffd03192e1d6a15b23152262f0d8", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 42, "deletions": 9, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -9,6 +9,7 @@ import { RunnableQuickPick, selectRunnable, createTask, createArgs } from './run\n import { AstInspector } from './ast_inspector';\n import { isRustDocument, sleep, isRustEditor } from './util';\n import { startDebugSession, makeDebugConfig } from './debug';\n+import { LanguageClient } from 'vscode-languageclient/node';\n \n export * from './ast_inspector';\n export * from './run';\n@@ -456,17 +457,20 @@ export function reloadWorkspace(ctx: Ctx): Cmd {\n     return async () => ctx.client.sendRequest(ra.reloadWorkspace);\n }\n \n+async function showReferencesImpl(client: LanguageClient, uri: string, position: lc.Position, locations: lc.Location[]) {\n+    if (client) {\n+        await vscode.commands.executeCommand(\n+            'editor.action.showReferences',\n+            vscode.Uri.parse(uri),\n+            client.protocol2CodeConverter.asPosition(position),\n+            locations.map(client.protocol2CodeConverter.asLocation),\n+        );\n+    }\n+}\n+\n export function showReferences(ctx: Ctx): Cmd {\n     return async (uri: string, position: lc.Position, locations: lc.Location[]) => {\n-        const client = ctx.client;\n-        if (client) {\n-            await vscode.commands.executeCommand(\n-                'editor.action.showReferences',\n-                vscode.Uri.parse(uri),\n-                client.protocol2CodeConverter.asPosition(position),\n-                locations.map(client.protocol2CodeConverter.asLocation),\n-            );\n-        }\n+        await showReferencesImpl(ctx.client, uri, position, locations);\n     };\n }\n \n@@ -555,6 +559,35 @@ export function run(ctx: Ctx): Cmd {\n     };\n }\n \n+export function peekTests(ctx: Ctx): Cmd {\n+    const client = ctx.client;\n+\n+    return async () => {\n+        const editor = ctx.activeRustEditor;\n+        if (!editor || !client) return;\n+\n+        const uri = editor.document.uri.toString();\n+        const position = client.code2ProtocolConverter.asPosition(\n+            editor.selection.active,\n+        );\n+        \n+        const tests = await client.sendRequest(ra.relatedTests, {\n+            textDocument: { uri: uri },\n+            position: position,\n+        });\n+\n+        const locations: lc.Location[] = tests.map( it => {\n+            return {\n+                uri: it.runnable.location!.targetUri,\n+                range: it.runnable.location!.targetSelectionRange\n+            };\n+        });\n+\n+        await showReferencesImpl(client, uri, position, locations);\n+    };\n+}\n+\n+\n export function runSingle(ctx: Ctx): Cmd {\n     return async (runnable: ra.Runnable) => {\n         const editor = ctx.activeRustEditor;"}, {"sha": "11d4d5f00e3dae5a509028bc5fc84b32ae25d844", "filename": "editors/code/src/lsp_ext.ts", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fsrc%2Flsp_ext.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Flsp_ext.ts?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -72,6 +72,15 @@ export interface Runnable {\n }\n export const runnables = new lc.RequestType<RunnablesParams, Runnable[], void>(\"experimental/runnables\");\n \n+export interface RelatedTestsParams extends lc.TextDocumentPositionParams {    \n+}\n+\n+export interface TestInfo {\n+    runnable: Runnable;\n+}\n+\n+export const relatedTests = new lc.RequestType<RelatedTestsParams, TestInfo[], void>(\"rust-analyzer/relatedTests\");\n+\n export type InlayHint = InlayHint.TypeHint | InlayHint.ParamHint | InlayHint.ChainingHint;\n \n export namespace InlayHint {"}, {"sha": "f1a2020aa726d1cdf176cebc12410b574093ecaf", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/669e11764430be3a098d6c8fe875d8efbb3547a3/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=669e11764430be3a098d6c8fe875d8efbb3547a3", "patch": "@@ -113,6 +113,7 @@ async function tryActivate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('newDebugConfig', commands.newDebugConfig);\n     ctx.registerCommand('openDocs', commands.openDocs);\n     ctx.registerCommand('openCargoToml', commands.openCargoToml);\n+    ctx.registerCommand('peekTests', commands.peekTests);\n \n     defaultOnEnter.dispose();\n     ctx.registerCommand('onEnter', commands.onEnter);"}]}