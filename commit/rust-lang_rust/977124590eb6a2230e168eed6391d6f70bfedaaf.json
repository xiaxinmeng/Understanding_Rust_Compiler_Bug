{"sha": "977124590eb6a2230e168eed6391d6f70bfedaaf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3NzEyNDU5MGViNmEyMjMwZTE2OGVlZDYzOTFkNmY3MGJmZWRhYWY=", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-09T08:38:27Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2021-08-26T09:14:31Z"}, "message": "inline stuff", "tree": {"sha": "7fc7862a6aa419e4972d43a73977482b3ab2dd33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fc7862a6aa419e4972d43a73977482b3ab2dd33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/977124590eb6a2230e168eed6391d6f70bfedaaf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/977124590eb6a2230e168eed6391d6f70bfedaaf", "html_url": "https://github.com/rust-lang/rust/commit/977124590eb6a2230e168eed6391d6f70bfedaaf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/977124590eb6a2230e168eed6391d6f70bfedaaf/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc0983df060c7131a3a7384cd26b6aef18096670", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc0983df060c7131a3a7384cd26b6aef18096670", "html_url": "https://github.com/rust-lang/rust/commit/bc0983df060c7131a3a7384cd26b6aef18096670"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "7188eed5445516bd28a58d089b47a175df2f84ab", "filename": "compiler/rustc_middle/src/ty/consts/kind.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/977124590eb6a2230e168eed6391d6f70bfedaaf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/977124590eb6a2230e168eed6391d6f70bfedaaf/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fconsts%2Fkind.rs?ref=977124590eb6a2230e168eed6391d6f70bfedaaf", "patch": "@@ -28,25 +28,29 @@ pub struct Unevaluated<'tcx, P = Option<Promoted>> {\n }\n \n impl<'tcx> Unevaluated<'tcx> {\n+    #[inline]\n     pub fn shrink(self) -> Unevaluated<'tcx, ()> {\n         debug_assert_eq!(self.promoted, None);\n         Unevaluated { def: self.def, substs_: self.substs_, promoted: () }\n     }\n }\n \n impl<'tcx> Unevaluated<'tcx, ()> {\n+    #[inline]\n     pub fn expand(self) -> Unevaluated<'tcx> {\n         Unevaluated { def: self.def, substs_: self.substs_, promoted: None }\n     }\n }\n \n impl<'tcx, P: Default> Unevaluated<'tcx, P> {\n+    #[inline]\n     pub fn new(def: ty::WithOptConstParam<DefId>, substs: SubstsRef<'tcx>) -> Unevaluated<'tcx, P> {\n         Unevaluated { def, substs_: Some(substs), promoted: Default::default() }\n     }\n }\n \n impl<'tcx, P: Default + PartialEq + fmt::Debug> Unevaluated<'tcx, P> {\n+    #[inline]\n     pub fn substs(self, tcx: TyCtxt<'tcx>) -> SubstsRef<'tcx> {\n         self.substs_.unwrap_or_else(|| {\n             // We must not use the parents default substs for promoted constants"}]}