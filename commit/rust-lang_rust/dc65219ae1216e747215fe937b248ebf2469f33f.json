{"sha": "dc65219ae1216e747215fe937b248ebf2469f33f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNjUyMTlhZTEyMTZlNzQ3MjE1ZmU5MzdiMjQ4ZWJmMjQ2OWYzM2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-25T06:00:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-10-25T06:00:30Z"}, "message": "document feature flags", "tree": {"sha": "6239cfcafd1d0a579b4f51e4e875cc0a8e85efb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6239cfcafd1d0a579b4f51e4e875cc0a8e85efb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc65219ae1216e747215fe937b248ebf2469f33f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc65219ae1216e747215fe937b248ebf2469f33f", "html_url": "https://github.com/rust-lang/rust/commit/dc65219ae1216e747215fe937b248ebf2469f33f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc65219ae1216e747215fe937b248ebf2469f33f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c02f1165ca4099ea6c3706a670513f7904630615", "url": "https://api.github.com/repos/rust-lang/rust/commits/c02f1165ca4099ea6c3706a670513f7904630615", "html_url": "https://github.com/rust-lang/rust/commit/c02f1165ca4099ea6c3706a670513f7904630615"}], "stats": {"total": 41, "additions": 20, "deletions": 21}, "files": [{"sha": "9871a3b37f3958ece204a6b07248c13041e81e8c", "filename": "crates/ra_lsp_server/src/config.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dc65219ae1216e747215fe937b248ebf2469f33f/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc65219ae1216e747215fe937b248ebf2469f33f/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconfig.rs?ref=dc65219ae1216e747215fe937b248ebf2469f33f", "patch": "@@ -1,4 +1,11 @@\n-//! FIXME: write short doc here\n+//! Config used by the language server.\n+//!\n+//! We currently get this config from `initialize` LSP request, which is not the\n+//! best way to do it, but was the simplest thing we could implement.\n+//!\n+//! Of particular interest is the `feature_flags` hash map: while other fields\n+//! configure the server itself, feature flags are passed into analysis, and\n+//! tweak things like automatic insertion of `()` in completions.\n \n use rustc_hash::FxHashMap;\n \n@@ -72,10 +79,7 @@ mod test {\n         assert_eq!(default, serde_json::from_str(r#\"{}\"#).unwrap());\n         assert_eq!(\n             default,\n-            serde_json::from_str(\n-                r#\"{\"publishDecorations\":null, \"showWorkspaceLoaded\":null, \"lruCapacity\":null}\"#\n-            )\n-            .unwrap()\n+            serde_json::from_str(r#\"{\"publishDecorations\":null, \"lruCapacity\":null}\"#).unwrap()\n         );\n     }\n }"}, {"sha": "a1cef22cc6a3f4a905b8cea9c862ed7dae95d502", "filename": "docs/user/README.md", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/dc65219ae1216e747215fe937b248ebf2469f33f/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/dc65219ae1216e747215fe937b248ebf2469f33f/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=dc65219ae1216e747215fe937b248ebf2469f33f", "patch": "@@ -83,8 +83,6 @@ host.\n ### Settings\n \n * `rust-analyzer.highlightingOn`: enables experimental syntax highlighting\n-* `rust-analyzer.showWorkspaceLoadedNotification`: to ease troubleshooting, a\n-  notification is shown by default when a workspace is loaded\n * `rust-analyzer.enableEnhancedTyping`: by default, rust-analyzer intercepts\n   `Enter` key to make it easier to continue comments. Note that it may conflict with VIM emulation plugin.\n * `rust-analyzer.raLspServerPath`: path to `ra_lsp_server` executable\n@@ -102,6 +100,17 @@ host.\n * `rust-analyzer.trace.server`: enables internal logging\n * `rust-analyzer.trace.cargo-watch`: enables cargo-watch logging\n * `RUST_SRC_PATH`: environment variable that overwrites the sysroot\n+* `rust-analyzer.featureFlags` -- a JSON object to tweak fine-grained behavior:\n+   ```js\n+   {\n+       // Show diagnostics produced by rust-analyzer itself.\n+       \"lsp.diagnostics\": true,\n+       // Automatically insert `()` and `<>` when completing functions and types.\n+       \"completion.insertion.add-call-parenthesis\": true,\n+       // Show notification when workspace is fully loaded\n+       \"notifications.workspace-loaded\": true,\n+   }\n+   ```\n \n \n ## Emacs"}, {"sha": "ee997e58f5d09c099f63210215e65efd1419c345", "filename": "editors/code/package.json", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dc65219ae1216e747215fe937b248ebf2469f33f/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/dc65219ae1216e747215fe937b248ebf2469f33f/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=dc65219ae1216e747215fe937b248ebf2469f33f", "patch": "@@ -229,11 +229,6 @@\n                     \"description\": \"A list of patterns for cargo-watch to ignore (will be passed as `--ignore`)\",\n                     \"default\": []\n                 },\n-                \"rust-analyzer.showWorkspaceLoadedNotification\": {\n-                    \"type\": \"boolean\",\n-                    \"description\": \"Controls whether rust-analyzer displays a notification when a project is loaded.\",\n-                    \"default\": false\n-                },\n                 \"rust-analyzer.trace.server\": {\n                     \"type\": \"string\",\n                     \"scope\": \"window\","}, {"sha": "95c3f42e50ff42a6b7084a9c67b5e5e4fb81478f", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dc65219ae1216e747215fe937b248ebf2469f33f/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/dc65219ae1216e747215fe937b248ebf2469f33f/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=dc65219ae1216e747215fe937b248ebf2469f33f", "patch": "@@ -20,7 +20,6 @@ export class Config {\n     public rainbowHighlightingOn = false;\n     public enableEnhancedTyping = true;\n     public raLspServerPath = RA_LSP_DEBUG || 'ra_lsp_server';\n-    public showWorkspaceLoadedNotification = true;\n     public lruCapacity: null | number = null;\n     public displayInlayHints = true;\n     public maxInlayHintLength: null | number = null;\n@@ -56,12 +55,6 @@ export class Config {\n             ) as boolean;\n         }\n \n-        if (config.has('showWorkspaceLoadedNotification')) {\n-            this.showWorkspaceLoadedNotification = config.get(\n-                'showWorkspaceLoadedNotification'\n-            ) as boolean;\n-        }\n-\n         if (!this.highlightingOn && Server) {\n             Server.highlighter.removeHighlights();\n         }"}, {"sha": "a3ef21a1671949dec48dfe8ff7c409be8a34c1e6", "filename": "editors/code/src/server.ts", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc65219ae1216e747215fe937b248ebf2469f33f/editors%2Fcode%2Fsrc%2Fserver.ts", "raw_url": "https://github.com/rust-lang/rust/raw/dc65219ae1216e747215fe937b248ebf2469f33f/editors%2Fcode%2Fsrc%2Fserver.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fserver.ts?ref=dc65219ae1216e747215fe937b248ebf2469f33f", "patch": "@@ -42,8 +42,6 @@ export class Server {\n             documentSelector: [{ scheme: 'file', language: 'rust' }],\n             initializationOptions: {\n                 publishDecorations: true,\n-                showWorkspaceLoaded:\n-                    Server.config.showWorkspaceLoadedNotification,\n                 lruCapacity: Server.config.lruCapacity,\n                 excludeGlobs: Server.config.excludeGlobs,\n                 useClientWatching: Server.config.useClientWatching,"}]}