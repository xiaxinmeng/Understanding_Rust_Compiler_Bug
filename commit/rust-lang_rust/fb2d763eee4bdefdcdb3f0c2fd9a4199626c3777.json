{"sha": "fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZiMmQ3NjNlZWU0YmRlZmRjZGIzZjBjMmZkOWE0MTk5NjI2YzM3Nzc=", "commit": {"author": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2017-02-23T10:45:30Z"}, "committer": {"name": "Josh Driver", "email": "keeperofdakeys@gmail.com", "date": "2017-02-28T11:10:00Z"}, "message": "Replace ./configure with config.toml in README.md and CONTRIBUTING.md", "tree": {"sha": "641383034d71f67f841b992be1b1d5a630ebe8c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/641383034d71f67f841b992be1b1d5a630ebe8c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777", "html_url": "https://github.com/rust-lang/rust/commit/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777/comments", "author": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "committer": {"login": "keeperofdakeys", "id": 141626, "node_id": "MDQ6VXNlcjE0MTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/141626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/keeperofdakeys", "html_url": "https://github.com/keeperofdakeys", "followers_url": "https://api.github.com/users/keeperofdakeys/followers", "following_url": "https://api.github.com/users/keeperofdakeys/following{/other_user}", "gists_url": "https://api.github.com/users/keeperofdakeys/gists{/gist_id}", "starred_url": "https://api.github.com/users/keeperofdakeys/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/keeperofdakeys/subscriptions", "organizations_url": "https://api.github.com/users/keeperofdakeys/orgs", "repos_url": "https://api.github.com/users/keeperofdakeys/repos", "events_url": "https://api.github.com/users/keeperofdakeys/events{/privacy}", "received_events_url": "https://api.github.com/users/keeperofdakeys/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bfe45974a18af63191d40a6ac5beb0cf2ab9c9f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/bfe45974a18af63191d40a6ac5beb0cf2ab9c9f7", "html_url": "https://github.com/rust-lang/rust/commit/bfe45974a18af63191d40a6ac5beb0cf2ab9c9f7"}], "stats": {"total": 113, "additions": 71, "deletions": 42}, "files": [{"sha": "1e983cfd726d6990c25f6ce28f30a3efa8405082", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 31, "deletions": 23, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777", "patch": "@@ -97,33 +97,38 @@ system internals, try asking in [`#rust-internals`][pound-rust-internals].\n \n Before you can start building the compiler you need to configure the build for\n your system. In most cases, that will just mean using the defaults provided\n-for Rust. Configuring involves invoking the `configure` script in the project\n-root.\n+for Rust.\n \n-```\n-./configure\n-```\n+To change configuration, you must copy the file `src/bootstrap/config.toml.example`\n+to `config.toml` in the directory from which you will be running the build, and\n+change the settings provided.\n+\n+There are large number of options provided in this config file that will alter the\n+configuration used in the build process. Some options to note:\n \n-There are large number of options accepted by this script to alter the\n-configuration used later in the build process. Some options to note:\n+#### `[llvm]`:\n+- `ccache = true` - Use ccache when building llvm\n \n-- `--enable-debug` - Build a debug version of the compiler (disables optimizations,\n-    which speeds up compilation of stage1 rustc)\n-- `--enable-optimize` - Enable optimizations (can be used with `--enable-debug`\n-    to make a debug build with optimizations)\n-- `--disable-valgrind-rpass` - Don't run tests with valgrind\n-- `--enable-clang` - Prefer clang to gcc for building dependencies (e.g., LLVM)\n-- `--enable-ccache` - Invoke clang/gcc with ccache to re-use object files between builds\n-- `--enable-compiler-docs` - Build compiler documentation\n+#### `[build]`:\n+- `compiler-docs = true` - Build compiler documentation\n \n-To see a full list of options, run `./configure --help`.\n+#### `[rust]`:\n+- `debuginfo = true` - Build a compiler with debuginfo\n+- `optimize = false` - Disable optimizations to speed up compilation of stage1 rust\n+\n+For more options, the `config.toml` file contains commented out defaults, with\n+descriptions of what each option will do.\n+\n+Note: Previously the `./configure` script was used to configure this\n+project. It can still be used, but it's recommended to use a `config.toml`\n+file. If you still have a `config.mk` file in your directory - from\n+`./configure` - you may need to delete it for `config.toml` to work.\n \n ### Building\n \n-Although the `./configure` script will generate a `Makefile`, this is actually\n-just a thin veneer over the actual build system driver, `x.py`. This file, at\n-the root of the repository, is used to build, test, and document various parts\n-of the compiler. You can execute it as:\n+The build system uses the `x.py` script to control the build process. This script\n+is used to build, test, and document various parts of the compiler. You can\n+execute it as:\n \n ```sh\n python x.py build\n@@ -185,6 +190,9 @@ To learn about all possible rules you can execute, run:\n python x.py build --help --verbose\n ```\n \n+Note: Previously `./configure` and `make` were used to build this project.\n+They are still available, but `x.py` is the recommended build system.\n+\n ### Useful commands\n \n Some common invocations of `x.py` are:\n@@ -235,8 +243,8 @@ feature. We use the 'fork and pull' model described there.\n \n Please make pull requests against the `master` branch.\n \n-Compiling all of `make check` can take a while. When testing your pull request,\n-consider using one of the more specialized `make` targets to cut down on the\n+Compiling all of `./x.py test` can take a while. When testing your pull request,\n+consider using one of the more specialized `./x.py` targets to cut down on the\n amount of time you have to wait. You need to have built the compiler at least\n once before running these will work, but that\u2019s only one full build rather than\n one each time.\n@@ -307,7 +315,7 @@ To find documentation-related issues, sort by the [A-docs label][adocs].\n \n [adocs]: https://github.com/rust-lang/rust/issues?q=is%3Aopen+is%3Aissue+label%3AA-docs\n \n-In many cases, you don't need a full `make doc`. You can use `rustdoc` directly\n+In many cases, you don't need a full `./x.py doc`. You can use `rustdoc` directly\n to check small fixes. For example, `rustdoc src/doc/reference.md` will render\n reference to `doc/reference.html`. The CSS might be messed up, but you can\n verify that the HTML is right."}, {"sha": "93415adc423f4b26a28dddc1856fc2b519f8f0f7", "filename": "README.md", "status": "modified", "additions": 40, "deletions": 19, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=fb2d763eee4bdefdcdb3f0c2fd9a4199626c3777", "patch": "@@ -35,15 +35,15 @@ Read [\"Installing Rust\"] from [The Book].\n 3. Build and install:\n \n     ```sh\n-    $ ./configure\n-    $ make && sudo make install\n+    $ ./x.py build && sudo ./x.py dist --install\n     ```\n \n-    > ***Note:*** Install locations can be adjusted by passing a `--prefix`\n-    > argument to `configure`. Various other options are also supported \u2013 pass\n-    > `--help` for more information on them.\n+    > ***Note:*** Install locations can be adjusted by copying the config file\n+    > from `./src/bootstrap/config.toml.example` to `./config.toml`, and\n+    > adjusting the `prefix` option under `[install]`. Various other options are\n+    > also supported, and are documented in the config file.\n \n-    When complete, `sudo make install` will place several programs into\n+    When complete, `sudo ./x.py dist --install` will place several programs into\n     `/usr/local/bin`: `rustc`, the Rust compiler, and `rustdoc`, the\n     API-documentation tool. This install does not include [Cargo],\n     Rust's package manager, which you may also want to build.\n@@ -59,7 +59,6 @@ for interop with software produced by Visual Studio use the MSVC build of Rust;\n for interop with GNU software built using the MinGW/MSYS2 toolchain use the GNU\n build.\n \n-\n #### MinGW\n \n [MSYS2][msys2] can be used to easily build Rust on Windows:\n@@ -94,11 +93,10 @@ build.\n                mingw-w64-x86_64-gcc\n    ```\n \n-4. Navigate to Rust's source code (or clone it), then configure and build it:\n+4. Navigate to Rust's source code (or clone it), then build it:\n \n    ```sh\n-   $ ./configure\n-   $ make && make install\n+   $ ./x.py build && ./x.py dist --install\n    ```\n \n #### MSVC\n@@ -114,13 +112,6 @@ shell with:\n > python x.py build\n ```\n \n-If you're running inside of an msys shell, however, you can run:\n-\n-```sh\n-$ ./configure --build=x86_64-pc-windows-msvc\n-$ make && make install\n-```\n-\n Currently building Rust only works with some known versions of Visual Studio. If\n you have a more recent version installed the build system doesn't understand\n then you may need to force rustbuild to use an older version. This can be done\n@@ -131,13 +122,43 @@ CALL \"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\vcvars64.\n python x.py build\n ```\n \n+#### Specifying an ABI\n+\n+Each specific ABI can also be used from either environment (for example, using\n+the GNU ABI in powershell) by using an explicit build triple. The available\n+Windows build triples are:\n+- GNU ABI (using GCC)\n+    - `i686-pc-windows-gnu`\n+    - `x86_64-pc-windows-gnu`\n+- The MSVC ABI\n+    - `i686-pc-windows-msvc`\n+    - `x86_64-pc-windows-msvc`\n+\n+The build triple can be specified by either specifying `--build=ABI` when\n+invoking `x.py` commands, or by copying the `config.toml` file (as described\n+in Building From Source), and modifying the `build` option under the `[build]`\n+section.\n+\n+### Configure and Make\n+\n+While it's not the recommended build system, this project also provides a\n+configure script and makefile (the latter of which just invokes `x.py`).\n+\n+```sh\n+$ ./configure\n+$ make && sudo make install\n+```\n+\n+When using the configure script, the generated config.mk` file may override the\n+`config.toml` file. To go back to the `config.toml` file, delete the generated\n+`config.mk` file.\n+\n ## Building Documentation\n \n If you\u2019d like to build the documentation, it\u2019s almost the same:\n \n ```sh\n-$ ./configure\n-$ make docs\n+$ ./x.py doc\n ```\n \n The generated documentation will appear in a top-level `doc` directory,"}]}