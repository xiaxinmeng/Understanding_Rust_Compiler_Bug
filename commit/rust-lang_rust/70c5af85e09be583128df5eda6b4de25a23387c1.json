{"sha": "70c5af85e09be583128df5eda6b4de25a23387c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwYzVhZjg1ZTA5YmU1ODMxMjhkZjVlZGE2YjRkZTI1YTIzMzg3YzE=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-02-13T21:46:45Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-02-13T21:46:45Z"}, "message": "Avoid allocation in std::sys::unix::weak\n\nIf we add a terminating NUL to the name in the `weak!` macro, then\n`fetch()` can use `CStr::from_bytes_with_nul()` instead of `CString`.", "tree": {"sha": "d8bc8228e9f2fdf3b90f18d071bf99ab888065e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8bc8228e9f2fdf3b90f18d071bf99ab888065e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/70c5af85e09be583128df5eda6b4de25a23387c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/70c5af85e09be583128df5eda6b4de25a23387c1", "html_url": "https://github.com/rust-lang/rust/commit/70c5af85e09be583128df5eda6b4de25a23387c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/70c5af85e09be583128df5eda6b4de25a23387c1/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e54494727855cd14229f5d456591ed2a2f027c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/e54494727855cd14229f5d456591ed2a2f027c46", "html_url": "https://github.com/rust-lang/rust/commit/e54494727855cd14229f5d456591ed2a2f027c46"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9b80ad8d9b27f1feee1e7c2961fb23b94dbb78c3", "filename": "src/libstd/sys/unix/weak.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/70c5af85e09be583128df5eda6b4de25a23387c1/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "raw_url": "https://github.com/rust-lang/rust/raw/70c5af85e09be583128df5eda6b4de25a23387c1/src%2Flibstd%2Fsys%2Funix%2Fweak.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fweak.rs?ref=70c5af85e09be583128df5eda6b4de25a23387c1", "patch": "@@ -18,15 +18,15 @@\n \n use libc;\n \n-use ffi::CString;\n+use ffi::CStr;\n use marker;\n use mem;\n use sync::atomic::{AtomicUsize, Ordering};\n \n macro_rules! weak {\n     (fn $name:ident($($t:ty),*) -> $ret:ty) => (\n         static $name: ::sys::weak::Weak<unsafe extern fn($($t),*) -> $ret> =\n-            ::sys::weak::Weak::new(stringify!($name));\n+            ::sys::weak::Weak::new(concat!(stringify!($name), '\\0'));\n     )\n }\n \n@@ -61,7 +61,7 @@ impl<F> Weak<F> {\n }\n \n unsafe fn fetch(name: &str) -> usize {\n-    let name = match CString::new(name) {\n+    let name = match CStr::from_bytes_with_nul(name.as_bytes()) {\n         Ok(cstr) => cstr,\n         Err(..) => return 0,\n     };"}]}