{"sha": "f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwNzhmN2NkNjQzMDJiOWEzZjI5ZTExMzg3ZmQwZjdhNTQ3ZmE2MGM=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-12-22T18:50:41Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-12-22T18:57:05Z"}, "message": "docs: Update rustc_middle::middle::region::ScopeTree\n\nThis corrects the return type in docs for yield_in_source method.\n\nCloses #80287.", "tree": {"sha": "40e385b4ac527f8e2803db87d08e16e50fe5b03d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40e385b4ac527f8e2803db87d08e16e50fe5b03d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "html_url": "https://github.com/rust-lang/rust/commit/f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f078f7cd64302b9a3f29e11387fd0f7a547fa60c/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fe1dc6ac214d443369134177940b4d0111e1df6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fe1dc6ac214d443369134177940b4d0111e1df6", "html_url": "https://github.com/rust-lang/rust/commit/0fe1dc6ac214d443369134177940b4d0111e1df6"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "eb48198991c294dd08cf0864999d31bad36adf80", "filename": "compiler/rustc_middle/src/middle/region.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f078f7cd64302b9a3f29e11387fd0f7a547fa60c/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f078f7cd64302b9a3f29e11387fd0f7a547fa60c/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmiddle%2Fregion.rs?ref=f078f7cd64302b9a3f29e11387fd0f7a547fa60c", "patch": "@@ -332,7 +332,7 @@ pub struct ScopeTree {\n pub struct YieldData {\n     /// The `Span` of the yield.\n     pub span: Span,\n-    /// The number of expressions and patterns appearing before the `yield` in the body plus one.\n+    /// The number of expressions and patterns appearing before the `yield` in the body, plus one.\n     pub expr_and_pat_count: usize,\n     pub source: hir::YieldSource,\n }\n@@ -449,9 +449,7 @@ impl ScopeTree {\n     }\n \n     /// Checks whether the given scope contains a `yield`. If so,\n-    /// returns `Some((span, expr_count))` with the span of a yield we found and\n-    /// the number of expressions and patterns appearing before the `yield` in the body + 1.\n-    /// If there a are multiple yields in a scope, the one with the highest number is returned.\n+    /// returns `Some(YieldData)`. If not, returns `None`.\n     pub fn yield_in_scope(&self, scope: Scope) -> Option<YieldData> {\n         self.yield_in_scope.get(&scope).cloned()\n     }"}]}