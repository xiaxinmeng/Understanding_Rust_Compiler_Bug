{"sha": "e301cd39ad62cda469034539d06819a30ee12305", "node_id": "C_kwDOAAsO6NoAKGUzMDFjZDM5YWQ2MmNkYTQ2OTAzNDUzOWQwNjgxOWEzMGVlMTIzMDU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-19T06:08:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-19T06:08:58Z"}, "message": "Rollup merge of #99434 - timvermeulen:skip_next_non_fused, r=scottmcm\n\nFix `Skip::next` for non-fused inner iterators\n\n`iter.skip(n).next()` will currently call `nth` and `next` in succession on `iter`, without checking whether `nth` exhausts the iterator. Using `?` to propagate a `None` value returned by `nth` avoids this.", "tree": {"sha": "b66f6f06ac58e278cd8ace1dadd7ce5682dec2ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b66f6f06ac58e278cd8ace1dadd7ce5682dec2ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e301cd39ad62cda469034539d06819a30ee12305", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi1kp6CRBK7hj4Ov3rIwAA+HcIABcep2oVpQ9HOJ7IvLOIIKaE\nfqDLvbSutu33A7Ior7a96WYikKVpgpqrsVdd6ojJDflvtd9PHWyGEhOX9qK6Hkzj\nLM+SaPh8bQK6Ldo/aG7euBDiMwpat+uSqyOKRcz0XvGBkYlSKC+GX0IHEafeREfC\nsJ5Zd87hkVdkmKbJQ7piqzbAB7WZoHmePqPIj9ag1eGqX8JKJHGwUpY7IYw94GgG\nt+bsvdWbBifBOQxvVRsvEgaZGa93s5eJq+YAgHi56CMYnZoZZcsM6/IlLpFo1Dg9\n0JkXqrAqDBI++4qQXFPzlyWvmyQMTgo9f3Zxtzn0HmneKtW4WtoVADpd8FoKAAU=\n=8tJa\n-----END PGP SIGNATURE-----\n", "payload": "tree b66f6f06ac58e278cd8ace1dadd7ce5682dec2ca\nparent 415f7e1c81a88dac99d1073526d56fc02e4395e4\nparent e52837c362d00fb7672dacb30de58dd114d2811e\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1658210938 +0530\ncommitter GitHub <noreply@github.com> 1658210938 +0530\n\nRollup merge of #99434 - timvermeulen:skip_next_non_fused, r=scottmcm\n\nFix `Skip::next` for non-fused inner iterators\n\n`iter.skip(n).next()` will currently call `nth` and `next` in succession on `iter`, without checking whether `nth` exhausts the iterator. Using `?` to propagate a `None` value returned by `nth` avoids this.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e301cd39ad62cda469034539d06819a30ee12305", "html_url": "https://github.com/rust-lang/rust/commit/e301cd39ad62cda469034539d06819a30ee12305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e301cd39ad62cda469034539d06819a30ee12305/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "415f7e1c81a88dac99d1073526d56fc02e4395e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/415f7e1c81a88dac99d1073526d56fc02e4395e4", "html_url": "https://github.com/rust-lang/rust/commit/415f7e1c81a88dac99d1073526d56fc02e4395e4"}, {"sha": "e52837c362d00fb7672dacb30de58dd114d2811e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e52837c362d00fb7672dacb30de58dd114d2811e", "html_url": "https://github.com/rust-lang/rust/commit/e52837c362d00fb7672dacb30de58dd114d2811e"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "2c283100f071fca4c0966702053b886ea1efb485", "filename": "library/core/src/iter/adapters/skip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e301cd39ad62cda469034539d06819a30ee12305/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e301cd39ad62cda469034539d06819a30ee12305/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fadapters%2Fskip.rs?ref=e301cd39ad62cda469034539d06819a30ee12305", "patch": "@@ -33,7 +33,7 @@ where\n     #[inline]\n     fn next(&mut self) -> Option<I::Item> {\n         if unlikely(self.n > 0) {\n-            self.iter.nth(crate::mem::take(&mut self.n) - 1);\n+            self.iter.nth(crate::mem::take(&mut self.n) - 1)?;\n         }\n         self.iter.next()\n     }"}, {"sha": "65f235e86aab9a99d1389704630c38142065527b", "filename": "library/core/tests/iter/adapters/skip.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e301cd39ad62cda469034539d06819a30ee12305/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e301cd39ad62cda469034539d06819a30ee12305/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fiter%2Fadapters%2Fskip.rs?ref=e301cd39ad62cda469034539d06819a30ee12305", "patch": "@@ -1,5 +1,7 @@\n use core::iter::*;\n \n+use super::Unfuse;\n+\n #[test]\n fn test_iterator_skip() {\n     let xs = [0, 1, 2, 3, 5, 13, 15, 16, 17, 19, 20, 30];\n@@ -190,3 +192,12 @@ fn test_skip_nth_back() {\n     it.by_ref().skip(2).nth_back(10);\n     assert_eq!(it.next_back(), Some(&1));\n }\n+\n+#[test]\n+fn test_skip_non_fused() {\n+    let non_fused = Unfuse::new(0..10);\n+\n+    // `Skip` would previously exhaust the iterator in this `next` call and then erroneously try to\n+    // advance it further. `Unfuse` tests that this doesn't happen by panicking in that scenario.\n+    let _ = non_fused.skip(20).next();\n+}"}]}