{"sha": "983e035b11d90787fe27c5c31203b4e03ea0266a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4M2UwMzViMTFkOTA3ODdmZTI3YzVjMzEyMDNiNGUwM2VhMDI2NmE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-09-13T13:14:28Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-09-21T15:43:56Z"}, "message": "add long error explanation for E0524", "tree": {"sha": "d0f3b3c5664edb112168e07eefcd3478445e711c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0f3b3c5664edb112168e07eefcd3478445e711c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/983e035b11d90787fe27c5c31203b4e03ea0266a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/983e035b11d90787fe27c5c31203b4e03ea0266a", "html_url": "https://github.com/rust-lang/rust/commit/983e035b11d90787fe27c5c31203b4e03ea0266a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/983e035b11d90787fe27c5c31203b4e03ea0266a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9edc02e8320a9e5799d185910ece7d491f524e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9edc02e8320a9e5799d185910ece7d491f524e6", "html_url": "https://github.com/rust-lang/rust/commit/c9edc02e8320a9e5799d185910ece7d491f524e6"}], "stats": {"total": 64, "additions": 63, "deletions": 1}, "files": [{"sha": "196bcf147f8f81ad2abc6b489a539b22598768f4", "filename": "src/librustc_mir/error_codes.rs", "status": "modified", "additions": 63, "deletions": 1, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/983e035b11d90787fe27c5c31203b4e03ea0266a/src%2Flibrustc_mir%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/983e035b11d90787fe27c5c31203b4e03ea0266a/src%2Flibrustc_mir%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ferror_codes.rs?ref=983e035b11d90787fe27c5c31203b4e03ea0266a", "patch": "@@ -1993,6 +1993,69 @@ fn get_owned_iterator() -> IntoIter<i32> {\n ```\n \"##,\n \n+E0524: r##\"\n+A variable which requires unique access is being used in more than one closure\n+at the same time.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0524\n+fn set(x: &mut isize) {\n+    *x += 4;\n+}\n+\n+fn dragoooon(x: &mut isize) {\n+    let mut c1 = || set(x);\n+    let mut c2 = || set(x); // error!\n+\n+    c2();\n+    c1();\n+}\n+```\n+\n+To solve this issue, multiple solutions are available. First, is it required\n+for this variable to be used in more than one closure at a time? If it is the\n+case, use reference counted types such as `Rc` (or `Arc` if it runs\n+concurrently):\n+\n+```\n+use std::rc::Rc;\n+use std::cell::RefCell;\n+\n+fn set(x: &mut isize) {\n+    *x += 4;\n+}\n+\n+fn dragoooon(x: &mut isize) {\n+    let x = Rc::new(RefCell::new(x));\n+    let y = Rc::clone(&x);\n+    let mut c1 = || { let mut x2 = x.borrow_mut(); set(&mut x2); };\n+    let mut c2 = || { let mut x2 = y.borrow_mut(); set(&mut x2); }; // ok!\n+\n+    c2();\n+    c1();\n+}\n+```\n+\n+If not, just run closures one at a time:\n+\n+```\n+fn set(x: &mut isize) {\n+    *x += 4;\n+}\n+\n+fn dragoooon(x: &mut isize) {\n+    { // This block isn't necessary since non-lexical lifetimes, it's just to\n+      // make it more clear.\n+        let mut c1 = || set(&mut *x);\n+        c1();\n+    } // `c1` has been dropped here so we're free to use `x` again!\n+    let mut c2 = || set(&mut *x);\n+    c2();\n+}\n+```\n+\"##,\n+\n E0595: r##\"\n #### Note: this error code is no longer emitted by the compiler.\n \n@@ -2393,7 +2456,6 @@ There are some known bugs that trigger this message.\n //  E0385, // {} in an aliasable location\n     E0493, // destructors cannot be evaluated at compile-time\n     E0521, // borrowed data escapes outside of closure\n-    E0524, // two closures require unique access to `..` at the same time\n     E0526, // shuffle indices are not constant\n     E0594, // cannot assign to {}\n //  E0598, // lifetime of {} is too short to guarantee its contents can be..."}]}