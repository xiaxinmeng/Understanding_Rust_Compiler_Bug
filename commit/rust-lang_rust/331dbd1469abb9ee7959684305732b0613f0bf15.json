{"sha": "331dbd1469abb9ee7959684305732b0613f0bf15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMWRiZDE0NjlhYmI5ZWU3OTU5Njg0MzA1NzMyYjA2MTNmMGJmMTU=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T05:05:09Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Add a test for joining in a destructor.", "tree": {"sha": "2e1c7dd42422febe7ea517e77a6cfc590fd84565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e1c7dd42422febe7ea517e77a6cfc590fd84565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/331dbd1469abb9ee7959684305732b0613f0bf15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/331dbd1469abb9ee7959684305732b0613f0bf15", "html_url": "https://github.com/rust-lang/rust/commit/331dbd1469abb9ee7959684305732b0613f0bf15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/331dbd1469abb9ee7959684305732b0613f0bf15/comments", "author": null, "committer": null, "parents": [{"sha": "f204b67b0f5ae6f498d29938790cd989e58f5bec", "url": "https://api.github.com/repos/rust-lang/rust/commits/f204b67b0f5ae6f498d29938790cd989e58f5bec", "html_url": "https://github.com/rust-lang/rust/commit/f204b67b0f5ae6f498d29938790cd989e58f5bec"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "de2566de85c6ac04a2364798466c7046ca559042", "filename": "tests/run-pass/concurrency/tls_lib_drop.rs", "status": "modified", "additions": 41, "deletions": 4, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/331dbd1469abb9ee7959684305732b0613f0bf15/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/331dbd1469abb9ee7959684305732b0613f0bf15/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.rs?ref=331dbd1469abb9ee7959684305732b0613f0bf15", "patch": "@@ -1,8 +1,5 @@\n // ignore-windows: Concurrency on Windows is not supported yet.\n \n-//! Check that destructors of the library thread locals are executed immediately\n-//! after a thread terminates.\n-\n use std::cell::RefCell;\n use std::thread;\n \n@@ -20,7 +17,9 @@ thread_local! {\n     static A: TestCell = TestCell { value: RefCell::new(0) };\n }\n \n-fn main() {\n+/// Check that destructors of the library thread locals are executed immediately\n+/// after a thread terminates.\n+fn check_destructors() {\n     thread::spawn(|| {\n         A.with(|f| {\n             assert_eq!(*f.value.borrow(), 0);\n@@ -31,3 +30,41 @@ fn main() {\n     .unwrap();\n     println!(\"Continue main.\")\n }\n+\n+struct JoinCell {\n+    value: RefCell<Option<thread::JoinHandle<u8>>>,\n+}\n+\n+impl Drop for JoinCell {\n+    fn drop(&mut self) {\n+        let join_handle = self.value.borrow_mut().take().unwrap();\n+        println!(\"Joining: {}\", join_handle.join().unwrap());\n+    }\n+}\n+\n+thread_local! {\n+    static B: JoinCell = JoinCell { value: RefCell::new(None) };\n+}\n+\n+/// Check that the destructor can be blocked joining another thread.\n+fn check_blocking() {\n+    thread::spawn(|| {\n+        B.with(|f| {\n+            assert!(f.value.borrow().is_none());\n+            let handle = thread::spawn(|| 7);\n+            *f.value.borrow_mut() = Some(handle);\n+        });\n+    })\n+    .join()\n+    .unwrap();\n+    println!(\"Continue main 2.\");\n+    // Preempt the main thread so that the destructor gets executed and can join\n+    // the thread.\n+    thread::yield_now();\n+    thread::yield_now();\n+}\n+\n+fn main() {\n+    check_destructors();\n+    check_blocking();\n+}"}, {"sha": "d622c0ccce88260835a99ee647972e6e6d33ffa5", "filename": "tests/run-pass/concurrency/tls_lib_drop.stdout", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/331dbd1469abb9ee7959684305732b0613f0bf15/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/331dbd1469abb9ee7959684305732b0613f0bf15/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fconcurrency%2Ftls_lib_drop.stdout?ref=331dbd1469abb9ee7959684305732b0613f0bf15", "patch": "@@ -1,2 +1,4 @@\n Dropping: 5\n Continue main.\n+Continue main 2.\n+Joining: 7"}]}