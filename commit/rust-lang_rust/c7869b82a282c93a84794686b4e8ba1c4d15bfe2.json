{"sha": "c7869b82a282c93a84794686b4e8ba1c4d15bfe2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ODY5YjgyYTI4MmM5M2E4NDc5NDY4NmI0ZThiYTFjNGQxNWJmZTI=", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-02-18T11:08:46Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-02-23T23:50:30Z"}, "message": "Update references in doc directory", "tree": {"sha": "0e9fecdef7ef8e283f4232c322d24a2eed3ee445", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e9fecdef7ef8e283f4232c322d24a2eed3ee445"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7869b82a282c93a84794686b4e8ba1c4d15bfe2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7869b82a282c93a84794686b4e8ba1c4d15bfe2", "html_url": "https://github.com/rust-lang/rust/commit/c7869b82a282c93a84794686b4e8ba1c4d15bfe2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7869b82a282c93a84794686b4e8ba1c4d15bfe2/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33ee598a9fcea326fec219a125d64313c934c5d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/33ee598a9fcea326fec219a125d64313c934c5d1", "html_url": "https://github.com/rust-lang/rust/commit/33ee598a9fcea326fec219a125d64313c934c5d1"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "f62c2d29c707e3e45eb143bdc0fc4895021eebf0", "filename": "doc/adding_lints.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c7869b82a282c93a84794686b4e8ba1c4d15bfe2/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/c7869b82a282c93a84794686b4e8ba1c4d15bfe2/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=c7869b82a282c93a84794686b4e8ba1c4d15bfe2", "patch": "@@ -292,7 +292,7 @@ the next section. Let's worry about the details later and emit our lint for\n \n Depending on how complex we want our lint message to be, we can choose from a\n variety of lint emission functions. They can all be found in\n-[`clippy_lints/src/utils/diagnostics.rs`][diagnostics].\n+[`clippy_utils/src/diagnostics.rs`][diagnostics].\n \n `span_lint_and_help` seems most appropriate in this case. It allows us to\n provide an extra help message and we can't really suggest a better name\n@@ -321,7 +321,7 @@ When code or an identifier must appear in a message or label, it should be\n surrounded with single grave accents \\`.\n \n [check_fn]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/trait.EarlyLintPass.html#method.check_fn\n-[diagnostics]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/diagnostics.rs\n+[diagnostics]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_utils/src/diagnostics.rs\n [the rustc-dev-guide]: https://rustc-dev-guide.rust-lang.org/diagnostics.html\n \n ## Adding the lint logic\n@@ -537,7 +537,7 @@ directory. Adding a configuration to a lint can be useful for thresholds or to c\n behavior that can be seen as a false positive for some users. Adding a configuration is done \n in the following steps:\n \n-1. Adding a new configuration entry to [clippy_lints::utils::conf](/clippy_lints/src/utils/conf.rs)\n+1. Adding a new configuration entry to [clippy_utils::conf](/clippy_utils/src/conf.rs)\n     like this:\n     ```rust\n     /// Lint: LINT_NAME. <The configuration field doc comment>\n@@ -636,7 +636,7 @@ documentation currently. This is unfortunate, but in most cases you can probably\n get away with copying things from existing similar lints. If you are stuck,\n don't hesitate to ask on [Zulip] or in the issue/PR.\n \n-[utils]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_lints/src/utils/mod.rs\n+[utils]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_utils/src/lib.rs\n [if_chain]: https://docs.rs/if_chain/*/if_chain/\n [from_expansion]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/struct.Span.html#method.from_expansion\n [in_external_macro]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/lint/fn.in_external_macro.html"}, {"sha": "abac1227b4ff389cee02b348ddf01ad9a5346b78", "filename": "doc/common_tools_writing_lints.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c7869b82a282c93a84794686b4e8ba1c4d15bfe2/doc%2Fcommon_tools_writing_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/c7869b82a282c93a84794686b4e8ba1c4d15bfe2/doc%2Fcommon_tools_writing_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fcommon_tools_writing_lints.md?ref=c7869b82a282c93a84794686b4e8ba1c4d15bfe2", "patch": "@@ -78,7 +78,7 @@ impl LateLintPass<'_> for MyStructLint {\n There are two ways to do this, depending if the target trait is part of lang items.\n \n ```rust\n-use crate::utils::{implements_trait, match_trait_method, paths};\n+use clippy_utils::{implements_trait, match_trait_method, paths};\n \n impl LateLintPass<'_> for MyStructLint {\n     fn check_expr(&mut self, cx: &LateContext<'_>, expr: &Expr<'_>) {\n@@ -112,7 +112,7 @@ We access lang items through the type context `tcx`. `tcx` is of type [`TyCtxt`]\n To check if our type defines a method called `some_method`:\n \n ```rust\n-use crate::utils::{is_type_diagnostic_item, return_ty};\n+use clippy_utils::{is_type_diagnostic_item, return_ty};\n \n impl<'tcx> LateLintPass<'tcx> for MyTypeImpl {\n     fn check_impl_item(&mut self, cx: &LateContext<'tcx>, impl_item: &'tcx ImplItem<'_>) {\n@@ -135,7 +135,7 @@ impl<'tcx> LateLintPass<'tcx> for MyTypeImpl {\n \n # Dealing with macros\n \n-There are several helpers in Clippy's utils to deal with macros:\n+There are several helpers in [`clippy_utils`][utils] to deal with macros:\n \n - `in_macro()`: detect if the given span is expanded by a macro\n \n@@ -199,4 +199,5 @@ assert_eq!(differing_macro_contexts(x_is_some_span, x_unwrap_span), true);\n [LateContext]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_lint/struct.LateContext.html\n [TyCtxt]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TyCtxt.html\n [pat_ty]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_middle/ty/context/struct.TypeckResults.html#method.pat_ty\n-[paths]: ../clippy_lints/src/utils/paths.rs\n+[paths]: ../clippy_utils/src/paths.rs\n+[utils]: https://github.com/rust-lang/rust-clippy/blob/master/clippy_utils/src/lib.rs"}]}