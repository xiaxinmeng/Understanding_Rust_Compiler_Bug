{"sha": "a29f341a8ac4e9325a5e37027b4215f50a76d06f", "node_id": "C_kwDOAAsO6NoAKGEyOWYzNDFhOGFjNGU5MzI1YTVlMzcwMjdiNDIxNWY1MGE3NmQwNmY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-18T08:44:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-18T08:44:27Z"}, "message": "Auto merge of #101963 - scottmcm:from-ptr-range-optimization, r=Mark-Simulacrum\n\nAdd a codegen test for `slice::from_ptr_range`\n\nI noticed back in #95579 that this didn't optimize as well as it should.\n\nIt's better now, after #95837 changed the code in `from_ptr_range` and https://github.com/llvm/llvm-project/issues/54824 was fixed in LLVM 15.\n\nSo here's a test to keep it generating the good version.", "tree": {"sha": "bcee636a2492d4e92d62e0182a3646c7e1ef8e5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcee636a2492d4e92d62e0182a3646c7e1ef8e5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a29f341a8ac4e9325a5e37027b4215f50a76d06f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a29f341a8ac4e9325a5e37027b4215f50a76d06f", "html_url": "https://github.com/rust-lang/rust/commit/a29f341a8ac4e9325a5e37027b4215f50a76d06f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a29f341a8ac4e9325a5e37027b4215f50a76d06f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c2e500788cb3875f90eedb0791b76bcbb91d758", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c2e500788cb3875f90eedb0791b76bcbb91d758", "html_url": "https://github.com/rust-lang/rust/commit/4c2e500788cb3875f90eedb0791b76bcbb91d758"}, {"sha": "335690200ef72899cd675f1ebb65d5d7a17dc29b", "url": "https://api.github.com/repos/rust-lang/rust/commits/335690200ef72899cd675f1ebb65d5d7a17dc29b", "html_url": "https://github.com/rust-lang/rust/commit/335690200ef72899cd675f1ebb65d5d7a17dc29b"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "0e3fefd9728df064304fba4b0685c0e6ac9f8a18", "filename": "src/test/codegen/slice_as_from_ptr_range.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a29f341a8ac4e9325a5e37027b4215f50a76d06f/src%2Ftest%2Fcodegen%2Fslice_as_from_ptr_range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a29f341a8ac4e9325a5e37027b4215f50a76d06f/src%2Ftest%2Fcodegen%2Fslice_as_from_ptr_range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fslice_as_from_ptr_range.rs?ref=a29f341a8ac4e9325a5e37027b4215f50a76d06f", "patch": "@@ -0,0 +1,23 @@\n+// compile-flags: -O\n+// only-64bit (because we're using [ui]size)\n+// ignore-debug (because the assertions get in the way)\n+// min-llvm-version: 15.0 (because this is a relatively new instcombine)\n+\n+#![crate_type = \"lib\"]\n+#![feature(slice_from_ptr_range)]\n+\n+// This is intentionally using a non-power-of-two array length,\n+// as that's where the optimization differences show up\n+\n+// CHECK-LABEL: @flatten_via_ptr_range\n+#[no_mangle]\n+pub fn flatten_via_ptr_range(slice_of_arrays: &[[i32; 13]]) -> &[i32] {\n+    // CHECK-NOT: lshr\n+    // CHECK-NOT: udiv\n+    // CHECK: mul nuw nsw i64 %{{.+}}, 13\n+    // CHECK-NOT: lshr\n+    // CHECK-NOT: udiv\n+    let r = slice_of_arrays.as_ptr_range();\n+    let r = r.start.cast()..r.end.cast();\n+    unsafe { core::slice::from_ptr_range(r) }\n+}"}]}