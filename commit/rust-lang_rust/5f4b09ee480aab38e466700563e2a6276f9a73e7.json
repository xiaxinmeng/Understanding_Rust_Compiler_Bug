{"sha": "5f4b09ee480aab38e466700563e2a6276f9a73e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmNGIwOWVlNDgwYWFiMzhlNDY2NzAwNTYzZTJhNjI3NmY5YTczZTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-08T02:36:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-08T02:36:15Z"}, "message": "Auto merge of #46574 - GuillaumeGomez:rollup, r=GuillaumeGomez\n\nRollup of 5 pull requests\n\n- Successful merges: #46416, #46444, #46526, #46539, #46548\n- Failed merges:", "tree": {"sha": "ae12c58f6a6c0ab6e569d1f3b8ffff74b2de94cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae12c58f6a6c0ab6e569d1f3b8ffff74b2de94cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f4b09ee480aab38e466700563e2a6276f9a73e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4b09ee480aab38e466700563e2a6276f9a73e7", "html_url": "https://github.com/rust-lang/rust/commit/5f4b09ee480aab38e466700563e2a6276f9a73e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f4b09ee480aab38e466700563e2a6276f9a73e7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ddf28527119a06a9f5da9bd34c97ae97afe531", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ddf28527119a06a9f5da9bd34c97ae97afe531", "html_url": "https://github.com/rust-lang/rust/commit/c8ddf28527119a06a9f5da9bd34c97ae97afe531"}, {"sha": "0b47f0226760ae059f011006342833564cfa40ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b47f0226760ae059f011006342833564cfa40ae", "html_url": "https://github.com/rust-lang/rust/commit/0b47f0226760ae059f011006342833564cfa40ae"}], "stats": {"total": 246, "additions": 206, "deletions": 40}, "files": [{"sha": "2b4f3d472632a356d67f5a01cdf7daa047a5f002", "filename": ".gitattributes", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -7,3 +7,4 @@\n src/etc/installer/gfx/* binary\n *.woff binary\n src/vendor/** -text\n+Cargo.lock -merge"}, {"sha": "948ad104cdf2f2e409ad6e5a40c87235f689d4be", "filename": "src/libcore/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibcore%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibcore%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros.rs?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -736,7 +736,7 @@ mod builtin {\n     #[cfg(dox)]\n     macro_rules! module_path { () => ({ /* compiler built-in */ }) }\n \n-    /// Boolean evaluation of configuration flags.\n+    /// Boolean evaluation of configuration flags, at compile-time.\n     ///\n     /// For more information, see the documentation for [`std::cfg!`].\n     ///"}, {"sha": "d8f3ec38cf38c4a2297d592ab9b1d2c6c78652b5", "filename": "src/libcore/option.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -338,6 +338,12 @@ impl<T> Option<T> {\n \n     /// Returns the contained value or a default.\n     ///\n+    /// Arguments passed to `unwrap_or` are eagerly evaluated; if you are passing\n+    /// the result of a function call, it is recommended to use [`unwrap_or_else`],\n+    /// which is lazily evaluated.\n+    ///\n+    /// [`unwrap_or_else`]: #method.unwrap_or_else\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -451,11 +457,16 @@ impl<T> Option<T> {\n     /// Transforms the `Option<T>` into a [`Result<T, E>`], mapping [`Some(v)`] to\n     /// [`Ok(v)`] and [`None`] to [`Err(err)`].\n     ///\n+    /// Arguments passed to `ok_or` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`ok_or_else`], which is\n+    /// lazily evaluated.\n+    ///\n     /// [`Result<T, E>`]: ../../std/result/enum.Result.html\n     /// [`Ok(v)`]: ../../std/result/enum.Result.html#variant.Ok\n     /// [`Err(err)`]: ../../std/result/enum.Result.html#variant.Err\n     /// [`None`]: #variant.None\n     /// [`Some(v)`]: #variant.Some\n+    /// [`ok_or_else`]: #method.ok_or_else\n     ///\n     /// # Examples\n     ///\n@@ -644,6 +655,12 @@ impl<T> Option<T> {\n \n     /// Returns the option if it contains a value, otherwise returns `optb`.\n     ///\n+    /// Arguments passed to `or` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`or_else`], which is\n+    /// lazily evaluated.\n+    ///\n+    /// [`or_else`]: #method.or_else\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "2ace3d2aee8739fc4671637a7c467f0b0dea34b0", "filename": "src/libcore/result.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -625,8 +625,13 @@ impl<T, E> Result<T, E> {\n \n     /// Returns `res` if the result is [`Err`], otherwise returns the [`Ok`] value of `self`.\n     ///\n+    /// Arguments passed to `or` are eagerly evaluated; if you are passing the\n+    /// result of a function call, it is recommended to use [`or_else`], which is\n+    /// lazily evaluated.\n+    ///\n     /// [`Ok`]: enum.Result.html#variant.Ok\n     /// [`Err`]: enum.Result.html#variant.Err\n+    /// [`or_else`]: #method.or_else\n     ///\n     /// # Examples\n     ///\n@@ -690,8 +695,13 @@ impl<T, E> Result<T, E> {\n     /// Unwraps a result, yielding the content of an [`Ok`].\n     /// Else, it returns `optb`.\n     ///\n+    /// Arguments passed to `unwrap_or` are eagerly evaluated; if you are passing\n+    /// the result of a function call, it is recommended to use [`unwrap_or_else`],\n+    /// which is lazily evaluated.\n+    ///\n     /// [`Ok`]: enum.Result.html#variant.Ok\n     /// [`Err`]: enum.Result.html#variant.Err\n+    /// [`unwrap_or_else`]: #method.unwrap_or_else\n     ///\n     /// # Examples\n     ///"}, {"sha": "61de5f4bc4c4500e9155024cb9edcb179ddf53a4", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -65,6 +65,7 @@ r##\"<!DOCTYPE html>\n     {before_content}\n \n     <nav class=\"sidebar\">\n+        <div class=\"sidebar-menu\">&#9776;</div>\n         {logo}\n         {sidebar}\n     </nav>"}, {"sha": "d42faebd39e57a8acaffa98a8cb1f0c5e84bef27", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -3542,6 +3542,7 @@ impl<'a> fmt::Display for Sidebar<'a> {\n         let cx = self.cx;\n         let it = self.item;\n         let parentlen = cx.current.len() - if it.is_mod() {1} else {0};\n+        let mut should_close = false;\n \n         if it.is_struct() || it.is_trait() || it.is_primitive() || it.is_union()\n             || it.is_enum() || it.is_mod() || it.is_typedef()\n@@ -3575,6 +3576,8 @@ impl<'a> fmt::Display for Sidebar<'a> {\n                 }\n             }\n \n+            write!(fmt, \"<div class=\\\"sidebar-elems\\\">\")?;\n+            should_close = true;\n             match it.inner {\n                 clean::StructItem(ref s) => sidebar_struct(fmt, it, s)?,\n                 clean::TraitItem(ref t) => sidebar_trait(fmt, it, t)?,\n@@ -3625,6 +3628,10 @@ impl<'a> fmt::Display for Sidebar<'a> {\n             write!(fmt, \"<script defer src=\\\"{path}sidebar-items.js\\\"></script>\",\n                    path = relpath)?;\n         }\n+        if should_close {\n+            // Closes sidebar-elems div.\n+            write!(fmt, \"</div>\")?;\n+        }\n \n         Ok(())\n     }"}, {"sha": "06e9cbbdf9a71118c65cf6b9510f66b96c499215", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 43, "deletions": 1, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -106,6 +106,30 @@\n         return (elem.offsetParent === null)\n     }\n \n+    function showSidebar() {\n+        var elems = document.getElementsByClassName(\"sidebar-elems\")[0];\n+        if (elems) {\n+            elems.style.display = \"block\";\n+        }\n+        var sidebar = document.getElementsByClassName('sidebar')[0];\n+        sidebar.style.position = 'fixed';\n+        sidebar.style.width = '100%';\n+        sidebar.style.marginLeft = '0';\n+        document.getElementsByTagName(\"body\")[0].style.marginTop = '45px';\n+    }\n+\n+    function hideSidebar() {\n+        var elems = document.getElementsByClassName(\"sidebar-elems\")[0];\n+        if (elems) {\n+            elems.style.display = \"\";\n+        }\n+        var sidebar = document.getElementsByClassName('sidebar')[0];\n+        sidebar.style.position = '';\n+        sidebar.style.width = '';\n+        sidebar.style.marginLeft = '';\n+        document.getElementsByTagName(\"body\")[0].style.marginTop = '';\n+    }\n+\n     // used for special search precedence\n     var TY_PRIMITIVE = itemTypes.indexOf(\"primitive\");\n \n@@ -130,6 +154,8 @@\n     }\n \n     function highlightSourceLines(ev) {\n+        // If we're in mobile mode, we should add the sidebar in any case.\n+        hideSidebar();\n         var search = document.getElementById(\"search\");\n         var i, from, to, match = window.location.hash.match(/^#?(\\d+)(?:-(\\d+))?$/);\n         if (match) {\n@@ -1459,7 +1485,7 @@\n \n     // delayed sidebar rendering.\n     function initSidebarItems(items) {\n-        var sidebar = document.getElementsByClassName('sidebar')[0];\n+        var sidebar = document.getElementsByClassName('sidebar-elems')[0];\n         var current = window.sidebarCurrent;\n \n         function block(shortty, longty) {\n@@ -1829,6 +1855,22 @@\n         removeClass(search, \"hidden\");\n         search.innerHTML = '<h3 style=\"text-align: center;\">Loading search results...</h3>';\n     }\n+\n+    var sidebar_menu = document.getElementsByClassName(\"sidebar-menu\")[0];\n+    if (sidebar_menu) {\n+        sidebar_menu.onclick = function() {\n+            var sidebar = document.getElementsByClassName('sidebar')[0];\n+            if (sidebar.style.position === \"fixed\") {\n+                hideSidebar();\n+            } else {\n+                showSidebar();\n+            }\n+        };\n+    }\n+\n+    window.onresize = function() {\n+        hideSidebar();\n+    };\n }());\n \n // Sets the focus on the search bar at the top of the page"}, {"sha": "b342df6a464aed299363bc4843d4b08a695d235b", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 36, "deletions": 37, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -208,7 +208,7 @@ nav.sub {\n .sidebar .version {\n \tfont-size: 15px;\n \ttext-align: center;\n-\tborder-bottom: #DDDDDD 1px solid;\n+\tborder-bottom: 1px solid;\n \toverflow-wrap: break-word;\n \tword-wrap: break-word; /* deprecated */\n \tword-break: break-word; /* Chrome, non-standard */\n@@ -247,8 +247,8 @@ nav.sub {\n }\n \n .sidebar-title {\n-\tborder-top: 1px solid #777;\n-\tborder-bottom: 1px solid #777;\n+\tborder-top: 1px solid;\n+\tborder-bottom: 1px solid;\n \ttext-align: center;\n \tfont-size: 17px;\n \tmargin-bottom: 5px;\n@@ -263,6 +263,10 @@ nav.sub {\n \twidth: 100%;\n }\n \n+.sidebar-menu {\n+\tdisplay: none;\n+}\n+\n .content {\n \tpadding: 15px 0;\n }\n@@ -364,7 +368,6 @@ h4 > code, h3 > code, .invisible > code {\n }\n \n .invisible {\n-\tbackground: rgba(0, 0, 0, 0);\n \twidth: 100%;\n \tdisplay: inline-block;\n }\n@@ -444,7 +447,6 @@ h4 > code, h3 > code, .invisible > code {\n .content .fn .where,\n .content .where.fmt-newline {\n \tdisplay: block;\n-\tcolor: #4E4C4C;\n \tfont-size: 0.8em;\n }\n \n@@ -538,7 +540,6 @@ a {\n }\n \n .search-input:focus {\n-\tborder-color: #66afe9;\n \tborder-radius: 2px;\n \tborder: 0;\n \toutline: 0;\n@@ -560,7 +561,8 @@ a {\n .content .search-results td:first-child a { padding-right: 10px; }\n \n tr.result span.primitive::after {\n-\tcontent: ' (primitive type)'; font-style: italic; color: black;\n+\tcontent: ' (primitive type)';\n+\tfont-style: italic;\n }\n \n body.blur > :not(#help) {\n@@ -697,7 +699,6 @@ a.test-arrow:hover{\n \tfont-weight: 300;\n \tposition: absolute;\n \tleft: -23px;\n-\tcolor: #999;\n \ttop: 0;\n }\n \n@@ -823,7 +824,7 @@ span.since {\n \t\tposition: static;\n \t}\n \n-\t.sidebar .location {\n+\t.sidebar > .location {\n \t\tfloat: right;\n \t\tmargin: 0px;\n \t\tmargin-top: 2px;\n@@ -843,16 +844,33 @@ span.since {\n \t\tmargin-top: 5px;\n \t\tmargin-bottom: 5px;\n \t\tfloat: left;\n+\t\tmargin-left: 50px;\n \t}\n \n-\tnav.sub {\n-\t\tmargin: 0 auto;\n+\t.sidebar-menu {\n+\t\tposition: absolute;\n+\t\tfont-size: 2rem;\n+\t\tcursor: pointer;\n+\t\tmargin-top: 2px;\n+\t\tdisplay: block;\n \t}\n \n-\t.sidebar .block {\n+\t.sidebar-elems {\n+\t\tbackground-color: #F1F1F1;\n+\t\tposition: fixed;\n+\t\tz-index: 1;\n+\t\tleft: 0;\n+\t\ttop: 45px;\n+\t\tbottom: 0;\n+\t\toverflow-y: auto;\n+\t\tborder-right: 1px solid #000;\n \t\tdisplay: none;\n \t}\n \n+\tnav.sub {\n+\t\tmargin: 0 auto;\n+\t}\n+\n \t.content {\n \t\tmargin-left: 0px;\n \t}\n@@ -904,8 +922,6 @@ span.since {\n .tooltip .tooltiptext {\n \twidth: 120px;\n \tdisplay: none;\n-\tbackground-color: black;\n-\tcolor: #fff;\n \ttext-align: center;\n \tpadding: 5px 3px;\n \tborder-radius: 6px;\n@@ -927,13 +943,10 @@ span.since {\n \tmargin-top: -5px;\n \tborder-width: 5px;\n \tborder-style: solid;\n-\tborder-color: transparent black transparent transparent;\n }\n \n .important-traits .tooltip .tooltiptext {\n-\tbackground-color: white;\n-\tcolor: black;\n-\tborder: 1px solid #000;\n+\tborder: 1px solid;\n }\n \n pre.rust {\n@@ -953,22 +966,21 @@ pre.rust {\n \tfloat: left;\n \twidth: 33.3%;\n \ttext-align: center;\n-\tborder-bottom: 1px solid #ccc;\n+\tborder-bottom: 1px solid;\n \tfont-size: 18px;\n \tcursor: pointer;\n }\n \n #titles > div.selected {\n-\tborder-bottom: 3px solid #0078ee;\n+\tborder-bottom: 3px solid;\n }\n \n #titles > div:hover {\n-\tborder-bottom: 3px solid #0089ff;\n+\tborder-bottom: 3px solid;\n }\n \n #titles > div > div.count {\n \tdisplay: inline-block;\n-\tcolor: #888;\n \tfont-size: 16px;\n }\n \n@@ -987,7 +999,6 @@ h4 > .important-traits {\n \tposition: fixed;\n \twidth: 100vw;\n \theight: 100vh;\n-\tbackground-color: rgba(0,0,0,0.3);\n \tz-index: 10000;\n \ttop: 0;\n \tleft: 0;\n@@ -997,13 +1008,12 @@ h4 > .important-traits {\n \tdisplay: block;\n \tmax-width: 60%;\n \tmin-width: 200px;\n-\tbackground-color: #eee;\n \tpadding: 8px;\n \ttop: 40%;\n \tposition: absolute;\n \tleft: 50%;\n \ttransform: translate(-50%, -40%);\n-\tborder: 1px solid #999;\n+\tborder: 1px solid;\n \tborder-radius: 4px;\n \tborder-top-right-radius: 0;\n }\n@@ -1030,35 +1040,24 @@ h3.important {\n \tright: -25px;\n \ttop: -1px;\n \tfont-size: 18px;\n-\tbackground-color: #eee;\n \twidth: 25px;\n \tpadding-right: 2px;\n \tborder-top-right-radius: 5px;\n \tborder-bottom-right-radius: 5px;\n \ttext-align: center;\n-\tborder: 1px solid #999;\n+\tborder: 1px solid;\n \tborder-right: 0;\n \tcursor: pointer;\n }\n \n-.modal-content > .close:hover {\n-\tbackground-color: #ff1f1f;\n-\tcolor: white;\n-}\n-\n .modal-content > .whiter {\n \theight: 25px;\n \tposition: absolute;\n \twidth: 3px;\n-\tbackground-color: #eee;\n \tright: -2px;\n \ttop: 0px;\n }\n \n-.modal-content > .close:hover + .whiter {\n-\tbackground-color: #ff1f1f;\n-}\n-\n #main > div.important-traits {\n \tposition: absolute;\n \tleft: -24px;"}, {"sha": "5cace837a5557eab7ca296c728a8a86a28ecd3c3", "filename": "src/librustdoc/html/static/styles/main.css", "status": "modified", "additions": 89, "deletions": 0, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -31,6 +31,10 @@ h2, h3:not(.impl):not(.method):not(.type):not(.tymethod), h4:not(.method):not(.t\n \tbackground-color: white;\n }\n \n+.invisible {\n+\tbackground: rgba(0, 0, 0, 0);\n+}\n+\n .docblock code, .docblock-short code {\n \tbackground-color: #F5F5F5;\n }\n@@ -56,6 +60,15 @@ pre {\n \tcolor: #333;\n }\n \n+.sidebar .version {\n+\tborder-bottom-color: #DDD;\n+}\n+\n+.sidebar-title {\n+\tborder-top-color: #777;\n+\tborder-bottom-color: #777;\n+}\n+\n .block a:hover {\n \tbackground: #F5F5F5;\n }\n@@ -89,6 +102,12 @@ pre {\n \tbackground: #FDFFD3;\n }\n \n+.content .method .where,\n+.content .fn .where,\n+.content .where.fmt-newline {\n+\tcolor: #4E4C4C;\n+}\n+\n .content .highlighted {\n \tcolor: #000 !important;\n \tbackground-color: #ccc;\n@@ -152,12 +171,20 @@ a.test-arrow {\n \tcolor: #f5f5f5;\n }\n \n+.collapse-toggle {\n+\tcolor: #999;\n+}\n+\n .search-input {\n \tcolor: #555;\n \tbox-shadow: 0 0 0 1px #e0e0e0, 0 0 0 2px transparent;\n \tbackground-color: white;\n }\n \n+.search-input:focus {\n+\tborder-color: #66afe9;\n+}\n+\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; }\n .stab.deprecated { background: #F3DFFF; border-color: #7F0087; }\n .stab.portability { background: #C4ECFF; border-color: #7BA5DB; }\n@@ -176,6 +203,10 @@ a.test-arrow {\n \tcolor: grey;\n }\n \n+tr.result span.primitive::after {\n+\tcolor: black;\n+}\n+\n .line-numbers :target { background-color: transparent; }\n \n /* Code highlighting */\n@@ -241,3 +272,61 @@ pre.ignore:hover, .information:hover + pre.ignore {\n .search-failed > a {\n \tcolor: #0089ff;\n }\n+\n+.tooltip .tooltiptext {\n+\tbackground-color: black;\n+\tcolor: #fff;\n+}\n+\n+.tooltip .tooltiptext::after {\n+\tborder-color: transparent black transparent transparent;\n+}\n+\n+.important-traits .tooltip .tooltiptext {\n+\tbackground-color: white;\n+\tcolor: black;\n+\tborder-color: black;\n+}\n+\n+#titles > div {\n+\tborder-bottom-color:  #ccc;\n+}\n+\n+#titles > div.selected {\n+\tborder-bottom-color: #0078ee;\n+}\n+\n+#titles > div:hover {\n+\tborder-bottom-color: #0089ff;\n+}\n+\n+#titles > div > div.count {\n+\tcolor: #888;\n+}\n+\n+.modal {\n+\tbackground-color: rgba(0,0,0,0.3);\n+}\n+\n+.modal-content {\n+\tbackground-color: #eee;\n+\tborder-color: #999;\n+}\n+\n+.modal-content > .close {\n+\tbackground-color: #eee;\n+\tborder-color: #999;\n+}\n+\n+.modal-content > .close:hover {\n+\tbackground-color: #ff1f1f;\n+\tcolor: white;\n+}\n+\n+.modal-content > .whiter {\n+\tbackground-color: #eee;\n+}\n+\n+.modal-content > .close:hover + .whiter {\n+\tbackground-color: #ff1f1f;\n+}"}, {"sha": "de46fedaebb76e4e8c328c09d2304955dcf931a9", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f4b09ee480aab38e466700563e2a6276f9a73e7/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=5f4b09ee480aab38e466700563e2a6276f9a73e7", "patch": "@@ -631,7 +631,7 @@ pub mod builtin {\n     #[macro_export]\n     macro_rules! module_path { () => ({ /* compiler built-in */ }) }\n \n-    /// Boolean evaluation of configuration flags.\n+    /// Boolean evaluation of configuration flags, at compile-time.\n     ///\n     /// In addition to the `#[cfg]` attribute, this macro is provided to allow\n     /// boolean expression evaluation of configuration flags. This frequently"}]}