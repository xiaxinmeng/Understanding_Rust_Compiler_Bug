{"sha": "8fbe4b58412b2818d4ef3d92259bdf5f88f61606", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmYmU0YjU4NDEyYjI4MThkNGVmM2Q5MjI1OWJkZjVmODhmNjE2MDY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-12T18:51:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-12T18:52:00Z"}, "message": "Rename core::rt_fail to core::rt_fail_", "tree": {"sha": "a2eac42cce92858c1217630f6edf76a1009fdbe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2eac42cce92858c1217630f6edf76a1009fdbe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fbe4b58412b2818d4ef3d92259bdf5f88f61606", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fbe4b58412b2818d4ef3d92259bdf5f88f61606", "html_url": "https://github.com/rust-lang/rust/commit/8fbe4b58412b2818d4ef3d92259bdf5f88f61606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fbe4b58412b2818d4ef3d92259bdf5f88f61606/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86e02554fd3e3795626cba4d50de6243c19ff972", "url": "https://api.github.com/repos/rust-lang/rust/commits/86e02554fd3e3795626cba4d50de6243c19ff972", "html_url": "https://github.com/rust-lang/rust/commit/86e02554fd3e3795626cba4d50de6243c19ff972"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "4ec6accf634b89b9d739055301094b57636bcd34", "filename": "src/libcore/rt.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8fbe4b58412b2818d4ef3d92259bdf5f88f61606/src%2Flibcore%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fbe4b58412b2818d4ef3d92259bdf5f88f61606/src%2Flibcore%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt.rs?ref=8fbe4b58412b2818d4ef3d92259bdf5f88f61606", "patch": "@@ -39,6 +39,12 @@ fn rt_fail(expr: *c_char, file: *c_char, line: size_t) {\n     rustrt::rust_upcall_fail(expr, file, line);\n }\n \n+#[rt(fail_)]\n+fn rt_fail_(expr: *c_char, file: *c_char, line: size_t) {\n+    cleanup_stack_for_failure();\n+    rustrt::rust_upcall_fail(expr, file, line);\n+}\n+\n #[rt(exchange_malloc)]\n fn rt_exchange_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n     return rustrt::rust_upcall_exchange_malloc(td, size);"}, {"sha": "638ccca3dbef921d54df91adc132339233871cc7", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8fbe4b58412b2818d4ef3d92259bdf5f88f61606/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fbe4b58412b2818d4ef3d92259bdf5f88f61606/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=8fbe4b58412b2818d4ef3d92259bdf5f88f61606", "patch": "@@ -2403,7 +2403,7 @@ fn gather_rtcalls(ccx: @crate_ctxt, crate: @ast::crate) {\n     // in some obscure place in LLVM if the user provides the wrong signature\n     // for an rtcall.\n     let expected_rtcalls =\n-        ~[~\"exchange_free\", ~\"exchange_malloc\", ~\"fail\", ~\"free\", ~\"malloc\"];\n+        ~[~\"exchange_free\", ~\"exchange_malloc\", ~\"fail_\", ~\"free\", ~\"malloc\"];\n     for vec::each(expected_rtcalls) |name| {\n         if !ccx.rtcalls.contains_key(name) {\n             fail fmt!(\"no definition for runtime call %s\", name);"}]}