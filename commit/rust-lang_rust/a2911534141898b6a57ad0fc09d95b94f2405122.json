{"sha": "a2911534141898b6a57ad0fc09d95b94f2405122", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyOTExNTM0MTQxODk4YjZhNTdhZDBmYzA5ZDk1Yjk0ZjI0MDUxMjI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-05T22:18:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-06-05T22:18:40Z"}, "message": "Permit ptr->int->ptr roundtrip", "tree": {"sha": "0433795be754fe56dc53289b3985443cda604d34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0433795be754fe56dc53289b3985443cda604d34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2911534141898b6a57ad0fc09d95b94f2405122", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2911534141898b6a57ad0fc09d95b94f2405122", "html_url": "https://github.com/rust-lang/rust/commit/a2911534141898b6a57ad0fc09d95b94f2405122", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2911534141898b6a57ad0fc09d95b94f2405122/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a231d66fc3c9d5678363d5017ee386f9f36428e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a231d66fc3c9d5678363d5017ee386f9f36428e", "html_url": "https://github.com/rust-lang/rust/commit/2a231d66fc3c9d5678363d5017ee386f9f36428e"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "e601f4b38fac0c910e8947a5a3ccc2a2eb128ee4", "filename": "src/eval_context.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a2911534141898b6a57ad0fc09d95b94f2405122/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2911534141898b6a57ad0fc09d95b94f2405122/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=a2911534141898b6a57ad0fc09d95b94f2405122", "patch": "@@ -662,7 +662,6 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                         let src = self.eval_operand(operand)?;\n                         let src_ty = self.operand_ty(operand);\n                         if self.type_is_fat_ptr(src_ty) {\n-                            trace!(\"misc cast: {:?}\", src);\n                             match (src, self.type_is_fat_ptr(dest_ty)) {\n                                 (Value::ByRef(_), _) |\n                                 (Value::ByValPair(..), true) => {\n@@ -674,9 +673,19 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n                                 (Value::ByVal(_), _) => bug!(\"expected fat ptr\"),\n                             }\n                         } else {\n-                            let src_val = self.value_to_primval(src, src_ty)?;\n-                            let dest_val = self.cast_primval(src_val, src_ty, dest_ty)?;\n-                            self.write_value(Value::ByVal(dest_val), dest, dest_ty)?;\n+                            // First, try casting\n+                            let dest_val = self.value_to_primval(src, src_ty).and_then(\n+                                |src_val| { self.cast_primval(src_val, src_ty, dest_ty) })\n+                                // Alternatively, if the sizes are equal, try just reading at the target type\n+                                .or_else(|err| {\n+                                    let size = self.type_size(src_ty)?;\n+                                    if size.is_some() && size == self.type_size(dest_ty)? {\n+                                        self.value_to_primval(src, dest_ty)\n+                                    } else {\n+                                        Err(err)\n+                                    }\n+                                });\n+                            self.write_value(Value::ByVal(dest_val?), dest, dest_ty)?;\n                         }\n                     }\n "}, {"sha": "e245cb22475d504fb4adcb907af54e036ddf042a", "filename": "tests/run-pass/ptr_int_casts.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a2911534141898b6a57ad0fc09d95b94f2405122/tests%2Frun-pass%2Fptr_int_casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2911534141898b6a57ad0fc09d95b94f2405122/tests%2Frun-pass%2Fptr_int_casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fptr_int_casts.rs?ref=a2911534141898b6a57ad0fc09d95b94f2405122", "patch": "@@ -1,16 +1,15 @@\n-// fn eq_ref<T>(x: &T, y: &T) -> bool {\n-//     x as *const _ == y as *const _\n-// }\n+fn eq_ref<T>(x: &T, y: &T) -> bool {\n+    x as *const _ == y as *const _\n+}\n \n fn main() {\n     // int-ptr-int\n     assert_eq!(1 as *const i32 as usize, 1);\n \n-    // TODO\n-//     {   // ptr-int-ptr\n-//         let x = 13;\n-//         let y = &x as *const _ as usize;\n-//         let y = y as *const _;\n-//         assert!(eq_ref(&x, unsafe { &*y }));\n-//     }\n+    {   // ptr-int-ptr\n+        let x = 13;\n+        let y = &x as *const _ as usize;\n+        let y = y as *const _;\n+        assert!(eq_ref(&x, unsafe { &*y }));\n+    }\n }"}]}