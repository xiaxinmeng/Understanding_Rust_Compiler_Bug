{"sha": "ab8338fb5ad71d577f7c056087e2c81505f51eff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiODMzOGZiNWFkNzFkNTc3ZjdjMDU2MDg3ZTJjODE1MDVmNTFlZmY=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-29T18:31:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-09-30T05:58:33Z"}, "message": "Make rustc's host triple agree with the build system's", "tree": {"sha": "bec9a9edc5efd280b2ce31379661cbdf7c72d6af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bec9a9edc5efd280b2ce31379661cbdf7c72d6af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8338fb5ad71d577f7c056087e2c81505f51eff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8338fb5ad71d577f7c056087e2c81505f51eff", "html_url": "https://github.com/rust-lang/rust/commit/ab8338fb5ad71d577f7c056087e2c81505f51eff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8338fb5ad71d577f7c056087e2c81505f51eff/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0148daa0588a857e7a844bae672f8265b3e3aef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0148daa0588a857e7a844bae672f8265b3e3aef8", "html_url": "https://github.com/rust-lang/rust/commit/0148daa0588a857e7a844bae672f8265b3e3aef8"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "1561f2869e96feb3a601747f0aa4053fc0bf5aa2", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8338fb5ad71d577f7c056087e2c81505f51eff/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/ab8338fb5ad71d577f7c056087e2c81505f51eff/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=ab8338fb5ad71d577f7c056087e2c81505f51eff", "patch": "@@ -198,7 +198,7 @@ endif\n \n STAGE$(1) := $$(Q)$$(call CFG_RUN_TARG,stage$(1), \\\n                 $$(CFG_VALGRIND_COMPILE$(1)) stage$(1)/bin/rustc$$(X) \\\n-                $$(CFG_RUSTC_FLAGS) --target=$(2))\n+                $$(CFG_RUSTC_FLAGS))\n endef\n \n FUZZ := stage1/bin/fuzzer$(X)"}, {"sha": "dc216d541e1748753f439b42dcc069a049914b26", "filename": "mk/tests.mk", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab8338fb5ad71d577f7c056087e2c81505f51eff/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/ab8338fb5ad71d577f7c056087e2c81505f51eff/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=ab8338fb5ad71d577f7c056087e2c81505f51eff", "patch": "@@ -189,7 +189,7 @@ CTEST_COMMON_ARGS$(2) := --compile-lib-path stage$(2)/lib \\\n                          --run-lib-path stage$(2)/lib/$$(CFG_HOST_TRIPLE) \\\n                          --rustc-path stage$(2)/bin/rustc$$(X) \\\n                          --stage-id stage$(2) \\\n-                         --rustcflags \"--target=$$(CFG_HOST_TRIPLE) $$(CFG_RUSTC_FLAGS)\" \\\n+                         --rustcflags \"$$(CFG_RUSTC_FLAGS)\" \\\n                          $$(CTEST_TESTARGS) \\\n \n CFAIL_ARGS$(2) := $$(CTEST_COMMON_ARGS$(2)) \\"}, {"sha": "1d5b39f9ac234fb07f48a3bb6221a91059875a7c", "filename": "src/comp/driver/rustc.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab8338fb5ad71d577f7c056087e2c81505f51eff/src%2Fcomp%2Fdriver%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8338fb5ad71d577f7c056087e2c81505f51eff/src%2Fcomp%2Fdriver%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fdriver%2Frustc.rs?ref=ab8338fb5ad71d577f7c056087e2c81505f51eff", "patch": "@@ -309,7 +309,15 @@ fn build_target_config(sopts: @session::options) -> @session::config {\n }\n \n fn host_triple() -> str {\n-    str::str_from_cstr(llvm::llvm::LLVMRustGetHostTriple())\n+    // Get the host triple out of the build environment. This ensures that our\n+    // idea of the host triple is the same as for the set of libraries we've\n+    // actually built.  We can't just take LLVM's host triple because they\n+    // normalize all ix86 architectures to i386.\n+    // FIXME: Instead of grabbing the host triple we really should be\n+    // grabbing (at compile time) the target triple that this rustc is\n+    // built with and calling that (at runtime) the host triple.\n+    let ht = #env(\"CFG_HOST_TRIPLE\");\n+    ret ht != \"\" ? ht : fail \"rustc built without CFG_HOST_TRIPLE\";\n }\n \n fn build_session_options(binary: str, match: getopts::match)"}]}