{"sha": "bcf95067e487e0bbaed7035296e05975b77eb981", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjZjk1MDY3ZTQ4N2UwYmJhZWQ3MDM1Mjk2ZTA1OTc1Yjc3ZWI5ODE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-28T14:26:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-28T14:26:52Z"}, "message": "Auto merge of #42167 - scottmcm:iter-stepby-sizehint, r=alexcrichton\n\nOverride size_hint and propagate ExactSizeIterator for iter::StepBy\n\nGenerally useful, but also a prerequisite for moving a bunch of unit tests off `Range*::step_by`.\n\nA small non-breaking subset of https://github.com/rust-lang/rust/pull/42110 (which I closed).\n\nIncludes two small documentation changes @ivandardi requested on that PR.\n\nr? @alexcrichton", "tree": {"sha": "be048dc6501a0c4569b671210539a50f905cbf84", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be048dc6501a0c4569b671210539a50f905cbf84"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bcf95067e487e0bbaed7035296e05975b77eb981", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bcf95067e487e0bbaed7035296e05975b77eb981", "html_url": "https://github.com/rust-lang/rust/commit/bcf95067e487e0bbaed7035296e05975b77eb981", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bcf95067e487e0bbaed7035296e05975b77eb981/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "924898f88a687d381b83fc1ba5bce8cad424ebc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/924898f88a687d381b83fc1ba5bce8cad424ebc8", "html_url": "https://github.com/rust-lang/rust/commit/924898f88a687d381b83fc1ba5bce8cad424ebc8"}, {"sha": "fcb3a7109c84f48c4f60504255dd3f375818fdfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcb3a7109c84f48c4f60504255dd3f375818fdfd", "html_url": "https://github.com/rust-lang/rust/commit/fcb3a7109c84f48c4f60504255dd3f375818fdfd"}], "stats": {"total": 97, "additions": 96, "deletions": 1}, "files": [{"sha": "8b70e8be38a2719aa2935944c628e8292adb7b18", "filename": "src/doc/unstable-book/src/SUMMARY.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "raw_url": "https://github.com/rust-lang/rust/raw/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2FSUMMARY.md?ref=bcf95067e487e0bbaed7035296e05975b77eb981", "patch": "@@ -153,6 +153,7 @@\n     - [io](library-features/io.md)\n     - [ip](library-features/ip.md)\n     - [iter_rfind](library-features/iter-rfind.md)\n+    - [iterator_step_by](library-features/iterator-step-by.md)\n     - [libstd_io_internals](library-features/libstd-io-internals.md)\n     - [libstd_sys_internals](library-features/libstd-sys-internals.md)\n     - [libstd_thread_internals](library-features/libstd-thread-internals.md)"}, {"sha": "07aed65f7a05709b9725529e27b977c1b91e3aef", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=bcf95067e487e0bbaed7035296e05975b77eb981", "patch": "@@ -520,7 +520,7 @@ impl<I> Iterator for Cycle<I> where I: Clone + Iterator {\n #[unstable(feature = \"fused\", issue = \"35602\")]\n impl<I> FusedIterator for Cycle<I> where I: Clone + Iterator {}\n \n-/// An iterator that steps by n elements every iteration.\n+/// An adapter for stepping iterators by a custom amount.\n ///\n /// This `struct` is created by the [`step_by`] method on [`Iterator`]. See\n /// its documentation for more.\n@@ -553,8 +553,27 @@ impl<I> Iterator for StepBy<I> where I: Iterator {\n             self.iter.nth(self.step)\n         }\n     }\n+\n+    #[inline]\n+    fn size_hint(&self) -> (usize, Option<usize>) {\n+        let inner_hint = self.iter.size_hint();\n+\n+        if self.first_take {\n+            let f = |n| if n == 0 { 0 } else { 1 + (n-1)/(self.step+1) };\n+            (f(inner_hint.0), inner_hint.1.map(f))\n+        } else {\n+            let f = |n| n / (self.step+1);\n+            (f(inner_hint.0), inner_hint.1.map(f))\n+        }\n+    }\n }\n \n+// StepBy can only make the iterator shorter, so the len will still fit.\n+#[unstable(feature = \"iterator_step_by\",\n+           reason = \"unstable replacement of Range::step_by\",\n+           issue = \"27741\")]\n+impl<I> ExactSizeIterator for StepBy<I> where I: ExactSizeIterator {}\n+\n /// An iterator that strings two iterators together.\n ///\n /// This `struct` is created by the [`chain`] method on [`Iterator`]. See its"}, {"sha": "4030eaf2b23330f7701f988f38316a1e670d2289", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=bcf95067e487e0bbaed7035296e05975b77eb981", "patch": "@@ -171,6 +171,79 @@ fn test_iterator_step_by_zero() {\n     it.next();\n }\n \n+#[test]\n+fn test_iterator_step_by_size_hint() {\n+    struct StubSizeHint(usize, Option<usize>);\n+    impl Iterator for StubSizeHint {\n+        type Item = ();\n+        fn next(&mut self) -> Option<()> {\n+            self.0 -= 1;\n+            if let Some(ref mut upper) = self.1 {\n+                *upper -= 1;\n+            }\n+            Some(())\n+        }\n+        fn size_hint(&self) -> (usize, Option<usize>) {\n+            (self.0, self.1)\n+        }\n+    }\n+\n+    // The two checks in each case are needed because the logic\n+    // is different before the first call to `next()`.\n+\n+    let mut it = StubSizeHint(10, Some(10)).step_by(1);\n+    assert_eq!(it.size_hint(), (10, Some(10)));\n+    it.next();\n+    assert_eq!(it.size_hint(), (9, Some(9)));\n+\n+    // exact multiple\n+    let mut it = StubSizeHint(10, Some(10)).step_by(3);\n+    assert_eq!(it.size_hint(), (4, Some(4)));\n+    it.next();\n+    assert_eq!(it.size_hint(), (3, Some(3)));\n+\n+    // larger base range, but not enough to get another element\n+    let mut it = StubSizeHint(12, Some(12)).step_by(3);\n+    assert_eq!(it.size_hint(), (4, Some(4)));\n+    it.next();\n+    assert_eq!(it.size_hint(), (3, Some(3)));\n+\n+    // smaller base range, so fewer resulting elements\n+    let mut it = StubSizeHint(9, Some(9)).step_by(3);\n+    assert_eq!(it.size_hint(), (3, Some(3)));\n+    it.next();\n+    assert_eq!(it.size_hint(), (2, Some(2)));\n+\n+    // infinite upper bound\n+    let mut it = StubSizeHint(usize::MAX, None).step_by(1);\n+    assert_eq!(it.size_hint(), (usize::MAX, None));\n+    it.next();\n+    assert_eq!(it.size_hint(), (usize::MAX-1, None));\n+\n+    // still infinite with larger step\n+    let mut it = StubSizeHint(7, None).step_by(3);\n+    assert_eq!(it.size_hint(), (3, None));\n+    it.next();\n+    assert_eq!(it.size_hint(), (2, None));\n+\n+    // propagates ExactSizeIterator\n+    let a = [1,2,3,4,5];\n+    let it = a.iter().step_by(2);\n+    assert_eq!(it.len(), 3);\n+\n+    // Cannot be TrustedLen as a step greater than one makes an iterator\n+    // with (usize::MAX, None) no longer meet the safety requirements\n+    trait TrustedLenCheck { fn test(self) -> bool; }\n+    impl<T:Iterator> TrustedLenCheck for T {\n+        default fn test(self) -> bool { false }\n+    }\n+    impl<T:TrustedLen> TrustedLenCheck for T {\n+        fn test(self) -> bool { true }\n+    }\n+    assert!(TrustedLenCheck::test(a.iter()));\n+    assert!(!TrustedLenCheck::test(a.iter().step_by(1)));\n+}\n+\n #[test]\n fn test_filter_map() {\n     let it = (0..).step_by(1).take(10)"}, {"sha": "e9f62dfbaed76c140bd866b11d5babea9c205884", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bcf95067e487e0bbaed7035296e05975b77eb981/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=bcf95067e487e0bbaed7035296e05975b77eb981", "patch": "@@ -32,9 +32,11 @@\n #![feature(slice_patterns)]\n #![feature(sort_internals)]\n #![feature(sort_unstable)]\n+#![feature(specialization)]\n #![feature(step_by)]\n #![feature(step_trait)]\n #![feature(test)]\n+#![feature(trusted_len)]\n #![feature(try_from)]\n #![feature(unicode)]\n #![feature(unique)]"}]}