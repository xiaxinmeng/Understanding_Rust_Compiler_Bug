{"sha": "a407f74d6d3ccf13dc188c64b70b9a86db831f6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MDdmNzRkNmQzY2NmMTNkYzE4OGM2NGI3MGI5YTg2ZGI4MzFmNmI=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-12T22:10:56Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-07-13T01:09:31Z"}, "message": "Update and un-xfail reflect-visit-data", "tree": {"sha": "feb0782a31afd84d03fd0e59b2348dcf92c26d8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/feb0782a31afd84d03fd0e59b2348dcf92c26d8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a407f74d6d3ccf13dc188c64b70b9a86db831f6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a407f74d6d3ccf13dc188c64b70b9a86db831f6b", "html_url": "https://github.com/rust-lang/rust/commit/a407f74d6d3ccf13dc188c64b70b9a86db831f6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a407f74d6d3ccf13dc188c64b70b9a86db831f6b/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8e143b9d794f61aad664fb2d141304e6f640792", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e143b9d794f61aad664fb2d141304e6f640792", "html_url": "https://github.com/rust-lang/rust/commit/e8e143b9d794f61aad664fb2d141304e6f640792"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "c3e7709cf006a8c0a7340405c22c66131503215d", "filename": "src/test/run-pass/reflect-visit-data.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a407f74d6d3ccf13dc188c64b70b9a86db831f6b/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a407f74d6d3ccf13dc188c64b70b9a86db831f6b/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-data.rs?ref=a407f74d6d3ccf13dc188c64b70b9a86db831f6b", "patch": "@@ -1,5 +1,3 @@\n-// FIXME: un-xfail after snapshot\n-// xfail-test\n \n import intrinsic::{tydesc, get_tydesc, visit_tydesc, ty_visitor};\n import libc::c_void;\n@@ -32,16 +30,16 @@ impl ptr_visitor<V: ty_visitor movable_ptr>\n \n     #[inline(always)]\n     fn bump(sz: uint) {\n-        self.inner.move_ptr() {|p|\n+      do self.inner.move_ptr() |p| {\n             ((p as uint) + sz) as *c_void\n-        }\n+      };\n     }\n \n     #[inline(always)]\n     fn align(a: uint) {\n-        self.inner.move_ptr() {|p|\n+      do self.inner.move_ptr() |p| {\n             align(p as uint, a) as *c_void\n-        }\n+      };\n     }\n \n     #[inline(always)]\n@@ -247,9 +245,9 @@ impl ptr_visitor<V: ty_visitor movable_ptr>\n     }\n \n     fn visit_vec(mtbl: uint, inner: *tydesc) -> bool {\n-        self.align_to::<[u8]>();\n+        self.align_to::<~[u8]>();\n         if ! self.inner.visit_vec(mtbl, inner) { ret false; }\n-        self.bump_past::<[u8]>();\n+        self.bump_past::<~[u8]>();\n         true\n     }\n \n@@ -407,7 +405,7 @@ impl ptr_visitor<V: ty_visitor movable_ptr>\n \n     fn visit_trait() -> bool {\n         self.align_to::<ty_visitor>();\n-        if ! self.inner.visit_iface() { ret false; }\n+        if ! self.inner.visit_trait() { ret false; }\n         self.bump_past::<ty_visitor>();\n         true\n     }\n@@ -492,16 +490,16 @@ impl of ty_visitor for my_visitor {\n     fn visit_bot() -> bool { true }\n     fn visit_nil() -> bool { true }\n     fn visit_bool() -> bool {\n-        self.get::<bool>() {|b|\n+      do self.get::<bool>() |b| {\n             self.vals += ~[bool::to_str(b)];\n-        }\n-        true\n+      };\n+      true\n     }\n     fn visit_int() -> bool {\n-        self.get::<int>() {|i|\n+      do self.get::<int>() |i| {\n             self.vals += ~[int::to_str(i, 10u)];\n-        }\n-        true\n+      };\n+      true\n     }\n     fn visit_i8() -> bool { true }\n     fn visit_i16() -> bool { true }\n@@ -623,9 +621,9 @@ fn main() {\n     let v = v as ty_visitor;\n     visit_tydesc(td, v);\n \n-    for (copy u.vals).each {|s|\n+    for (copy u.vals).each |s| {\n         io::println(#fmt(\"val: %s\", s));\n     }\n     #error(\"%?\", copy u.vals);\n-    assert u.vals == [\"1\", \"2\", \"3\", \"true\", \"false\", \"5\", \"4\", \"3\"];\n+    assert u.vals == ~[\"1\", \"2\", \"3\", \"true\", \"false\", \"5\", \"4\", \"3\"];\n  }"}]}