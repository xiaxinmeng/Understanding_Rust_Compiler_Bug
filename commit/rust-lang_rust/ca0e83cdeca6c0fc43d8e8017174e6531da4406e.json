{"sha": "ca0e83cdeca6c0fc43d8e8017174e6531da4406e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMGU4M2NkZWNhNmMwZmM0M2Q4ZTgwMTcxNzRlNjUzMWRhNDQwNmU=", "commit": {"author": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2015-01-29T00:56:59Z"}, "committer": {"name": "Michael Neumann", "email": "mneumann@ntecs.de", "date": "2015-01-29T00:56:59Z"}, "message": "Fix wrong use std::io -> old_io", "tree": {"sha": "e7305270b81f2f4862ef0317faf2920c74284c92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7305270b81f2f4862ef0317faf2920c74284c92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca0e83cdeca6c0fc43d8e8017174e6531da4406e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca0e83cdeca6c0fc43d8e8017174e6531da4406e", "html_url": "https://github.com/rust-lang/rust/commit/ca0e83cdeca6c0fc43d8e8017174e6531da4406e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca0e83cdeca6c0fc43d8e8017174e6531da4406e/comments", "author": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mneumann", "id": 34112, "node_id": "MDQ6VXNlcjM0MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/34112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mneumann", "html_url": "https://github.com/mneumann", "followers_url": "https://api.github.com/users/mneumann/followers", "following_url": "https://api.github.com/users/mneumann/following{/other_user}", "gists_url": "https://api.github.com/users/mneumann/gists{/gist_id}", "starred_url": "https://api.github.com/users/mneumann/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mneumann/subscriptions", "organizations_url": "https://api.github.com/users/mneumann/orgs", "repos_url": "https://api.github.com/users/mneumann/repos", "events_url": "https://api.github.com/users/mneumann/events{/privacy}", "received_events_url": "https://api.github.com/users/mneumann/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5961ad06d45689b44ff305c15d6ec7ec65755a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5961ad06d45689b44ff305c15d6ec7ec65755a9", "html_url": "https://github.com/rust-lang/rust/commit/c5961ad06d45689b44ff305c15d6ec7ec65755a9"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "dd343baa7c9c3842d4cc900a82253fbcd44e17d8", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca0e83cdeca6c0fc43d8e8017174e6531da4406e/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca0e83cdeca6c0fc43d8e8017174e6531da4406e/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=ca0e83cdeca6c0fc43d8e8017174e6531da4406e", "patch": "@@ -196,7 +196,7 @@ pub fn load_self() -> Option<Vec<u8>> {\n \n #[cfg(target_os = \"dragonfly\")]\n pub fn load_self() -> Option<Vec<u8>> {\n-    use std::io;\n+    use old_io;\n \n     match old_io::fs::readlink(&Path::new(\"/proc/curproc/file\")) {\n         Ok(path) => Some(path.into_vec()),"}]}