{"sha": "44575f708aed13f4260c6ce27b35ab102e5dd9f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0NTc1ZjcwOGFlZDEzZjQyNjBjNmNlMjdiMzVhYjEwMmU1ZGQ5ZjI=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-07-16T19:11:28Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-07-17T17:12:35Z"}, "message": "Rename `mtwt` to `hygiene`", "tree": {"sha": "bcc0dc2d006b4e573d27b616b294ef9b2fe335c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcc0dc2d006b4e573d27b616b294ef9b2fe335c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44575f708aed13f4260c6ce27b35ab102e5dd9f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44575f708aed13f4260c6ce27b35ab102e5dd9f2", "html_url": "https://github.com/rust-lang/rust/commit/44575f708aed13f4260c6ce27b35ab102e5dd9f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44575f708aed13f4260c6ce27b35ab102e5dd9f2/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76ed4456224f6bf7dc35dc72cc1c2cc93186285a", "url": "https://api.github.com/repos/rust-lang/rust/commits/76ed4456224f6bf7dc35dc72cc1c2cc93186285a", "html_url": "https://github.com/rust-lang/rust/commit/76ed4456224f6bf7dc35dc72cc1c2cc93186285a"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "65b97abfccbd75f5cb456115f24431e70340939a", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -735,8 +735,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n           \"for every macro invocation, print its name and arguments\"),\n     enable_nonzeroing_move_hints: bool = (false, parse_bool,\n           \"force nonzeroing move optimization on\"),\n-    keep_mtwt_tables: bool = (false, parse_bool,\n-          \"don't clear the resolution tables after analysis\"),\n+    keep_hygiene_data: bool = (false, parse_bool,\n+          \"don't clear the hygiene data after analysis\"),\n     keep_ast: bool = (false, parse_bool,\n           \"keep the AST after lowering it to HIR\"),\n     show_span: Option<String> = (None, parse_opt_string,"}, {"sha": "ab3b20e08c8099130c1b5c3a874a519f9b29fddb", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -236,8 +236,8 @@ pub fn compile_input(sess: &Session,\n     Ok(())\n }\n \n-fn keep_mtwt_tables(sess: &Session) -> bool {\n-    sess.opts.debugging_opts.keep_mtwt_tables\n+fn keep_hygiene_data(sess: &Session) -> bool {\n+    sess.opts.debugging_opts.keep_hygiene_data\n }\n \n fn keep_ast(sess: &Session) -> bool {\n@@ -479,7 +479,7 @@ pub fn phase_1_parse_input<'a>(sess: &'a Session,\n                                input: &Input)\n                                -> PResult<'a, ast::Crate> {\n     // These may be left in an incoherent state after a previous compile.\n-    syntax::ext::mtwt::reset_hygiene_data();\n+    syntax::ext::hygiene::reset_hygiene_data();\n     // `clear_ident_interner` can be used to free memory, but it does not restore the initial state.\n     token::reset_ident_interner();\n     let continue_after_error = sess.opts.continue_parse_after_error;\n@@ -760,9 +760,9 @@ pub fn phase_2_configure_and_expand<'a, F>(sess: &Session,\n         hir_map::Forest::new(lower_crate(sess, &krate, &mut resolver), &sess.dep_graph)\n     });\n \n-    // Discard MTWT tables that aren't required past lowering to HIR.\n-    if !keep_mtwt_tables(sess) {\n-        syntax::ext::mtwt::reset_hygiene_data();\n+    // Discard hygiene data, which isn't required past lowering to HIR.\n+    if !keep_hygiene_data(sess) {\n+        syntax::ext::hygiene::reset_hygiene_data();\n     }\n \n     Ok(ExpansionResult {"}, {"sha": "70e566de8a7be5ab9a53900cd82678e7268329fe", "filename": "src/librustc_resolve/assign_ids.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc_resolve%2Fassign_ids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc_resolve%2Fassign_ids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fassign_ids.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -11,7 +11,7 @@\n use Resolver;\n use rustc::session::Session;\n use syntax::ast;\n-use syntax::ext::mtwt::Mark;\n+use syntax::ext::hygiene::Mark;\n use syntax::fold::{self, Folder};\n use syntax::ptr::P;\n use syntax::util::move_map::MoveMap;"}, {"sha": "aa8c706ea1e27b9cb73978f7248864c3627ee7e8", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -53,7 +53,7 @@ use rustc::ty::subst::{ParamSpace, FnSpace, TypeSpace};\n use rustc::hir::{Freevar, FreevarMap, TraitCandidate, TraitMap, GlobMap};\n use rustc::util::nodemap::{NodeMap, NodeSet, FnvHashMap, FnvHashSet};\n \n-use syntax::ext::mtwt::Mark;\n+use syntax::ext::hygiene::Mark;\n use syntax::ast::{self, FloatTy};\n use syntax::ast::{CRATE_NODE_ID, Name, NodeId, CrateNum, IntTy, UintTy};\n use syntax::parse::token::{self, keywords};"}, {"sha": "a8bb255fba4a4d4b099c936239dee1abdc7fee7c", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -19,7 +19,7 @@ pub use util::ThinVec;\n use syntax_pos::{mk_sp, Span, DUMMY_SP, ExpnId};\n use codemap::{respan, Spanned};\n use abi::Abi;\n-use ext::mtwt::SyntaxContext;\n+use ext::hygiene::SyntaxContext;\n use parse::token::{self, keywords, InternedString};\n use print::pprust;\n use ptr::P;"}, {"sha": "18342f2e38c1be8c51be9d662fed96c24ef83e7a", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -11,7 +11,7 @@\n use ast::{Block, Crate, Ident, Mac_, Name, PatKind};\n use ast::{MacStmtStyle, Stmt, StmtKind, ItemKind};\n use ast;\n-use ext::mtwt::Mark;\n+use ext::hygiene::Mark;\n use attr::{self, HasAttrs};\n use attr::AttrMetaMethods;\n use codemap::{dummy_spanned, ExpnInfo, NameAndSpan, MacroBang, MacroAttribute};"}, {"sha": "521930f69a93ddd9e5ef120a18ed203b4245599f", "filename": "src/libsyntax/ext/hygiene.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Fext%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Fext%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fhygiene.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! Machinery for hygienic macros, as described in the MTWT[1] paper.\n+//! Machinery for hygienic macros, inspired by the MTWT[1] paper.\n //!\n //! [1] Matthew Flatt, Ryan Culpepper, David Darais, and Robert Bruce Findler.\n //! 2012. *Macros that work together: Compile-time bindings, partial expansion,", "previous_filename": "src/libsyntax/ext/mtwt.rs"}, {"sha": "5ad1744418890b21f46e0b68139f04bf5386ce51", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44575f708aed13f4260c6ce27b35ab102e5dd9f2/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=44575f708aed13f4260c6ce27b35ab102e5dd9f2", "patch": "@@ -127,7 +127,7 @@ pub mod ext {\n     pub mod base;\n     pub mod build;\n     pub mod expand;\n-    pub mod mtwt;\n+    pub mod hygiene;\n     pub mod quote;\n     pub mod source_util;\n "}]}