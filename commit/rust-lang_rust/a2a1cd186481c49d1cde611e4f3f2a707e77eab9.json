{"sha": "a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyYTFjZDE4NjQ4MWM0OWQxY2RlNjExZTRmM2YyYTcwN2U3N2VhYjk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-13T21:11:59Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-15T09:42:07Z"}, "message": "pprust: Fix formatting regressions from the previous commits\n\nFix some remaining cases of bad formatting\nUpdate some failing tests", "tree": {"sha": "233f58e59461cf478984f1139af72f2a31598793", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/233f58e59461cf478984f1139af72f2a31598793"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "html_url": "https://github.com/rust-lang/rust/commit/a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75896011dc2a137d96a4941f5c415c2c108f5cf9", "url": "https://api.github.com/repos/rust-lang/rust/commits/75896011dc2a137d96a4941f5c415c2c108f5cf9", "html_url": "https://github.com/rust-lang/rust/commit/75896011dc2a137d96a4941f5c415c2c108f5cf9"}], "stats": {"total": 150, "additions": 100, "deletions": 50}, "files": [{"sha": "dc656222fbc1082659d2915a62abe979dccc5169", "filename": "src/libsyntax/mut_visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Flibsyntax%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Flibsyntax%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fmut_visit.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -1328,7 +1328,7 @@ mod tests {\n                 matches_codepattern,\n                 \"matches_codepattern\",\n                 pprust::to_string(|s| fake_print_crate(s, &krate)),\n-                \"macro_rules! zz((zz$zz:zz$(zz $zz:zz)zz+=>(zz$(zz$zz$zz)+)));\".to_string());\n+                \"macro_rules! zz{(zz$zz:zz$(zz $zz:zz)zz+=>(zz$(zz$zz$zz)+))}\".to_string());\n         })\n     }\n }"}, {"sha": "47985351f7d33ee527a768e3b8bf9512dc0dd36a", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -714,34 +714,37 @@ pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefM\n         convert_dollar_crate: bool,\n         span: Span,\n     ) {\n+        if delim == DelimToken::Brace {\n+            self.cbox(INDENT_UNIT);\n+        }\n         if let Some(path) = path {\n             self.print_path(path, false, 0);\n         }\n         if has_bang {\n             self.word(\"!\");\n         }\n         if let Some(ident) = ident {\n-            self.space();\n+            self.nbsp();\n             self.print_ident(ident);\n-            self.space();\n         }\n         match delim {\n-            DelimToken::Paren => self.popen(),\n-            DelimToken::Bracket => self.word(\"[\"),\n-            DelimToken::NoDelim => self.word(\" \"),\n             DelimToken::Brace => {\n-                self.head(\"\");\n-                self.bopen();\n+                if path.is_some() || has_bang || ident.is_some() {\n+                    self.nbsp();\n+                }\n+                self.word(\"{\");\n+                if !tts.is_empty() {\n+                    self.space();\n+                }\n             }\n+            _ => self.word(token_kind_to_string(&token::OpenDelim(delim))),\n         }\n         self.ibox(0);\n         self.print_tts(tts, convert_dollar_crate);\n         self.end();\n         match delim {\n-            DelimToken::Paren => self.pclose(),\n-            DelimToken::Bracket => self.word(\"]\"),\n-            DelimToken::NoDelim => self.word(\" \"),\n             DelimToken::Brace => self.bclose(span),\n+            _ => self.word(token_kind_to_string(&token::CloseDelim(delim))),\n         }\n     }\n "}, {"sha": "47a7dac95b9c5081cf936c03538e84c12925ea9b", "filename": "src/test/pretty/cast-lt.pp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fcast-lt.pp", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fcast-lt.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fcast-lt.pp?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -8,6 +8,6 @@\n // pretty-mode:expanded\n // pp-exact:cast-lt.pp\n \n-macro_rules! negative {($ e : expr) => {$ e < 0 } }\n+macro_rules! negative { ($ e : expr) => { $ e < 0 } }\n \n fn main() { (1 as i32) < 0; }"}, {"sha": "768f27ad23a8ebc9a3306b7aa998502e6981f5cb", "filename": "src/test/pretty/delimited-token-groups.rs", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -0,0 +1,49 @@\n+// pp-exact\n+\n+#![feature(rustc_attrs)]\n+\n+macro_rules! mac { ($ ($ tt : tt) *) => () }\n+\n+mac! {\n+    struct S { field1 : u8 , field2 : u16 , } impl Clone for S\n+    {\n+        fn clone () -> S\n+        {\n+            panic ! () ;\n+\n+        }\n+    }\n+}\n+\n+mac! {\n+    a\n+    (aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+     aaaaaaaa aaaaaaaa) a\n+    [aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+     aaaaaaaa aaaaaaaa] a\n+    {\n+        aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+        aaaaaaaa aaaaaaaa aaaaaaaa\n+    } a\n+}\n+\n+mac!(aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+     aaaaaaaa aaaaaaaa);\n+mac![aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+     aaaaaaaa aaaaaaaa];\n+mac! {\n+    aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+    aaaaaaaa aaaaaaaa\n+}\n+\n+#[rustc_dummy(aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+              aaaaaaaa aaaaaaaa aaaaaaaa)]\n+#[rustc_dummy[aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+              aaaaaaaa aaaaaaaa aaaaaaaa]]\n+#[rustc_dummy {\n+      aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\n+      aaaaaaaa aaaaaaaa\n+  }]\n+#[rustc_dummy =\n+  \"aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\"]\n+fn main() { }"}, {"sha": "02951395e70b440491cab26889ef5c1301bda97c", "filename": "src/test/pretty/issue-30731.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fissue-30731.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fissue-30731.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fissue-30731.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -5,4 +5,4 @@\n // pretty-compare-only\n // pp-exact\n \n-fn main() { b!{ } c }\n+fn main() { b! { } c }"}, {"sha": "02d93238dd6435497b797b9939c5b31bce5305f4", "filename": "src/test/pretty/stmt_expr_attributes.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -111,31 +111,29 @@ fn _8() {\n }\n \n fn _9() {\n-    macro_rules!\n-    stmt_mac\n-    {() => {let _ = () ; } }\n+    macro_rules! stmt_mac { () => { let _ = () ; } }\n \n     #[rustc_dummy]\n     stmt_mac!();\n \n     #[rustc_dummy]\n-    stmt_mac!{ };\n+    stmt_mac! { };\n \n     #[rustc_dummy]\n     stmt_mac![];\n \n     #[rustc_dummy]\n-    stmt_mac!{ }\n+    stmt_mac! { }\n \n     let _ = ();\n }\n \n-macro_rules! expr_mac {() => {() } }\n+macro_rules! expr_mac { () => { () } }\n \n fn _10() {\n     let _ = #[rustc_dummy] expr_mac!();\n     let _ = #[rustc_dummy] expr_mac![];\n-    let _ = #[rustc_dummy] expr_mac!{ };\n+    let _ = #[rustc_dummy] expr_mac! { };\n }\n \n fn _11() {\n@@ -238,7 +236,7 @@ fn _11() {\n     || #[rustc_dummy] return;\n     let _ = #[rustc_dummy] expr_mac!();\n     let _ = #[rustc_dummy] expr_mac![];\n-    let _ = #[rustc_dummy] expr_mac!{ };\n+    let _ = #[rustc_dummy] expr_mac! { };\n     let _ = #[rustc_dummy] Foo{#![rustc_dummy] data: (),};\n     let _ = #[rustc_dummy] Foo{#![rustc_dummy] ..s};\n     let _ = #[rustc_dummy] Foo{#![rustc_dummy] data: (), ..s};"}, {"sha": "9d081c970dabca125628d0ac6a7803c4647e3a0b", "filename": "src/test/run-make-fulldeps/pretty-expanded-hygiene/input.pp.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded-hygiene%2Finput.pp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded-hygiene%2Finput.pp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fpretty-expanded-hygiene%2Finput.pp.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -1,9 +1,9 @@\n // minimal junk\n-#![feature(no_core)]\n-#![no_core]\n+#![feature /* 0#0 */(no_core)]\n+#![no_core /* 0#0 */]\n \n-macro_rules! foo /* 60#0 */(( $ x : ident ) => { y + $ x });\n+macro_rules /* 0#0 */! foo /* 0#0 */ { ($ x : ident) => { y + $ x } }\n \n-fn bar /* 62#0 */() { let x /* 59#2 */ = 1; y /* 61#4 */ + x /* 59#5 */ }\n+fn bar /* 0#0 */() { let x /* 0#0 */ = 1; y /* 0#1 */ + x /* 0#0 */ }\n \n-fn y /* 61#0 */() { }\n+fn y /* 0#0 */() { }"}, {"sha": "7e46260d5163f7282e633e67da4a696b378b9c47", "filename": "src/test/run-pass/macros/syntax-extension-source-utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Frun-pass%2Fmacros%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Frun-pass%2Fmacros%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacros%2Fsyntax-extension-source-utils.rs?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -18,7 +18,7 @@ pub fn main() {\n     assert_eq!(column!(), 16);\n     assert_eq!(indirect_line!(), 19);\n     assert!((file!().ends_with(\"syntax-extension-source-utils.rs\")));\n-    assert_eq!(stringify!((2*3) + 5).to_string(), \"( 2 * 3 ) + 5\".to_string());\n+    assert_eq!(stringify!((2*3) + 5).to_string(), \"(2 * 3) + 5\".to_string());\n     assert!(include!(\"syntax-extension-source-utils-files/includeme.\\\n                       fragment\").to_string()\n            == \"victory robot 6\".to_string());\n@@ -33,5 +33,5 @@ pub fn main() {\n     // The Windows tests are wrapped in an extra module for some reason\n     assert!((m1::m2::where_am_i().ends_with(\"m1::m2\")));\n \n-    assert_eq!((36, \"( 2 * 3 ) + 5\"), (line!(), stringify!((2*3) + 5)));\n+    assert_eq!((36, \"(2 * 3) + 5\"), (line!(), stringify!((2*3) + 5)));\n }"}, {"sha": "e7bd141ccd5ae94dc3b1b2fdb149d991dc698735", "filename": "src/test/ui/macro_backtrace/main.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacro_backtrace%2Fmain.stderr?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -24,10 +24,10 @@ LL |       ping!();\n    | \n   ::: <::ping::ping macros>:1:1\n    |\n-LL |   () => {pong ! () ; }\n-   |   --------------------\n-   |   |      |\n-   |   |      in this macro invocation\n+LL |   () => { pong ! () ; }\n+   |   ---------------------\n+   |   |       |\n+   |   |       in this macro invocation\n    |   in this expansion of `ping!`\n \n error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `error`\n@@ -44,34 +44,34 @@ LL |       deep!();\n    | \n   ::: <::ping::deep macros>:1:1\n    |\n-LL |   () => {foo ! () ; }\n-   |   -------------------\n-   |   |      |\n-   |   |      in this macro invocation (#2)\n+LL |   () => { foo ! () ; }\n+   |   --------------------\n+   |   |       |\n+   |   |       in this macro invocation (#2)\n    |   in this expansion of `deep!` (#1)\n    | \n   ::: <::ping::foo macros>:1:1\n    |\n-LL |   () => {bar ! () ; }\n-   |   -------------------\n-   |   |      |\n-   |   |      in this macro invocation (#3)\n+LL |   () => { bar ! () ; }\n+   |   --------------------\n+   |   |       |\n+   |   |       in this macro invocation (#3)\n    |   in this expansion of `foo!` (#2)\n    | \n   ::: <::ping::bar macros>:1:1\n    |\n-LL |   () => {ping ! () ; }\n-   |   --------------------\n-   |   |      |\n-   |   |      in this macro invocation (#4)\n+LL |   () => { ping ! () ; }\n+   |   ---------------------\n+   |   |       |\n+   |   |       in this macro invocation (#4)\n    |   in this expansion of `bar!` (#3)\n    | \n   ::: <::ping::ping macros>:1:1\n    |\n-LL |   () => {pong ! () ; }\n-   |   --------------------\n-   |   |      |\n-   |   |      in this macro invocation (#5)\n+LL |   () => { pong ! () ; }\n+   |   ---------------------\n+   |   |       |\n+   |   |       in this macro invocation (#5)\n    |   in this expansion of `ping!` (#4)\n \n error: aborting due to 3 previous errors"}, {"sha": "287f7b297d5c60350dc226b1597808d37969789c", "filename": "src/test/ui/macros/trace-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Ftrace-macro.stderr?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -5,5 +5,5 @@ LL |     println!(\"Hello, World!\");\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: expanding `println! { \"Hello, World!\" }`\n-   = note: to `{$crate :: io :: _print (format_args_nl ! (\"Hello, World!\")) ; }`\n+   = note: to `{ $crate :: io :: _print (format_args_nl ! (\"Hello, World!\")) ; }`\n "}, {"sha": "faf31712156654edaf1f5431c435c1d5af7388a7", "filename": "src/test/ui/proc-macro/attribute-spans-preserved.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-spans-preserved.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/a2a1cd186481c49d1cde611e4f3f2a707e77eab9/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-spans-preserved.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fattribute-spans-preserved.stdout?ref=a2a1cd186481c49d1cde611e4f3f2a707e77eab9", "patch": "@@ -1 +1 @@\n-fn main () {let y : u32 = \"z\" ; {let x : u32 = \"y\" ; } }\n+fn main () { let y : u32 = \"z\" ; { let x : u32 = \"y\" ; } }"}]}