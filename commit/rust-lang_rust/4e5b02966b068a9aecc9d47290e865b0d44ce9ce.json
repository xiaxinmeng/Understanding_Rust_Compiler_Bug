{"sha": "4e5b02966b068a9aecc9d47290e865b0d44ce9ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNWIwMjk2NmIwNjhhOWFlY2M5ZDQ3MjkwZTg2NWIwZDQ0Y2U5Y2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-30T11:26:27Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-30T11:26:27Z"}, "message": "add list of builtin types", "tree": {"sha": "7f015d5713fe66e2d1f6c4fb52c431e527d7c85c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f015d5713fe66e2d1f6c4fb52c431e527d7c85c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e5b02966b068a9aecc9d47290e865b0d44ce9ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e5b02966b068a9aecc9d47290e865b0d44ce9ce", "html_url": "https://github.com/rust-lang/rust/commit/4e5b02966b068a9aecc9d47290e865b0d44ce9ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e5b02966b068a9aecc9d47290e865b0d44ce9ce/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6545cc647829091dd5aae5753bd4f5302becab6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6545cc647829091dd5aae5753bd4f5302becab6", "html_url": "https://github.com/rust-lang/rust/commit/e6545cc647829091dd5aae5753bd4f5302becab6"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "3053f5488e07eb77325b694ed378d2b2fa1acdb8", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/4e5b02966b068a9aecc9d47290e865b0d44ce9ce/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5b02966b068a9aecc9d47290e865b0d44ce9ce/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=4e5b02966b068a9aecc9d47290e865b0d44ce9ce", "patch": "@@ -4,12 +4,12 @@ use ra_db::{CrateId, SourceRootId, Edition, FileId};\n use ra_syntax::{ast::{self, NameOwner, TypeAscriptionOwner}, TreeArc};\n \n use crate::{\n-    Name, AsName, AstId, Ty, HirFileId, Either,\n+    Name, AsName, AstId, Ty, HirFileId, Either, KnownName,\n     HirDatabase, DefDatabase,\n     type_ref::TypeRef,\n     nameres::{ModuleScope, Namespace, ImportId, CrateModuleId},\n     expr::{Body, BodySourceMap, validation::ExprValidator},\n-    ty::{TraitRef, InferenceResult, primitive::{IntTy, FloatTy}},\n+    ty::{TraitRef, InferenceResult, primitive::{IntTy, FloatTy, Signedness, IntBitness, FloatBitness}},\n     adt::{EnumVariantId, StructFieldId, VariantDef},\n     generics::HasGenericParams,\n     docs::{Documentation, Docs, docs_from_ast},\n@@ -84,6 +84,32 @@ pub enum BuiltinType {\n     Float(FloatTy),\n }\n \n+impl BuiltinType {\n+    #[rustfmt::skip]\n+    pub(crate) const ALL: &'static [(KnownName, BuiltinType)] = &[\n+        (KnownName::Char, BuiltinType::Char),\n+        (KnownName::Bool, BuiltinType::Bool),\n+        (KnownName::Str, BuiltinType::Str),\n+\n+        (KnownName::Isize, BuiltinType::Int(IntTy { signedness: Signedness::Signed, bitness: IntBitness::Xsize })),\n+        (KnownName::I8,    BuiltinType::Int(IntTy { signedness: Signedness::Signed, bitness: IntBitness::X8 })),\n+        (KnownName::I16,   BuiltinType::Int(IntTy { signedness: Signedness::Signed, bitness: IntBitness::X16 })),\n+        (KnownName::I32,   BuiltinType::Int(IntTy { signedness: Signedness::Signed, bitness: IntBitness::X32 })),\n+        (KnownName::I64,   BuiltinType::Int(IntTy { signedness: Signedness::Signed, bitness: IntBitness::X64 })),\n+        (KnownName::I128,  BuiltinType::Int(IntTy { signedness: Signedness::Signed, bitness: IntBitness::X128 })),\n+\n+        (KnownName::Usize, BuiltinType::Int(IntTy { signedness: Signedness::Unsigned, bitness: IntBitness::Xsize })),\n+        (KnownName::U8,    BuiltinType::Int(IntTy { signedness: Signedness::Unsigned, bitness: IntBitness::X8 })),\n+        (KnownName::U16,   BuiltinType::Int(IntTy { signedness: Signedness::Unsigned, bitness: IntBitness::X16 })),\n+        (KnownName::U32,   BuiltinType::Int(IntTy { signedness: Signedness::Unsigned, bitness: IntBitness::X32 })),\n+        (KnownName::U64,   BuiltinType::Int(IntTy { signedness: Signedness::Unsigned, bitness: IntBitness::X64 })),\n+        (KnownName::U128,  BuiltinType::Int(IntTy { signedness: Signedness::Unsigned, bitness: IntBitness::X128 })),\n+\n+        (KnownName::F32, BuiltinType::Float(FloatTy { bitness: FloatBitness::X32 })),\n+        (KnownName::F64, BuiltinType::Float(FloatTy { bitness: FloatBitness::X32 })),\n+    ];\n+}\n+\n /// The defs which can be visible in the module.\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub enum ModuleDef {"}, {"sha": "51a7b8b955b91e9e5eee4e56cd253820e1e610ae", "filename": "crates/ra_hir/src/nameres.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e5b02966b068a9aecc9d47290e865b0d44ce9ce/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e5b02966b068a9aecc9d47290e865b0d44ce9ce/crates%2Fra_hir%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres.rs?ref=4e5b02966b068a9aecc9d47290e865b0d44ce9ce", "patch": "@@ -64,7 +64,7 @@ use ra_syntax::ast;\n use ra_prof::profile;\n \n use crate::{\n-    ModuleDef, Name, Crate, Module, MacroDef,\n+    ModuleDef, Name, Crate, Module, MacroDef, KnownName, BuiltinType,\n     DefDatabase, Path, PathKind, HirFileId, Trait,\n     ids::MacroDefId,\n     diagnostics::DiagnosticSink,"}]}