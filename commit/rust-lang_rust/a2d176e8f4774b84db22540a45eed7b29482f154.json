{"sha": "a2d176e8f4774b84db22540a45eed7b29482f154", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyZDE3NmU4ZjQ3NzRiODRkYjIyNTQwYTQ1ZWVkN2IyOTQ4MmYxNTQ=", "commit": {"author": {"name": "Amos Onn", "email": "amosonn@gmail.com", "date": "2017-02-16T01:21:08Z"}, "committer": {"name": "Amos Onn", "email": "amosonn@gmail.com", "date": "2017-02-16T02:20:49Z"}, "message": "std::io::cursor: Fixed Seek so test passes.", "tree": {"sha": "d706dd04c3d8c3ddefb1ee1e478528a8696740c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d706dd04c3d8c3ddefb1ee1e478528a8696740c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2d176e8f4774b84db22540a45eed7b29482f154", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d176e8f4774b84db22540a45eed7b29482f154", "html_url": "https://github.com/rust-lang/rust/commit/a2d176e8f4774b84db22540a45eed7b29482f154", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2d176e8f4774b84db22540a45eed7b29482f154/comments", "author": {"login": "amosonn", "id": 3142573, "node_id": "MDQ6VXNlcjMxNDI1NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3142573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amosonn", "html_url": "https://github.com/amosonn", "followers_url": "https://api.github.com/users/amosonn/followers", "following_url": "https://api.github.com/users/amosonn/following{/other_user}", "gists_url": "https://api.github.com/users/amosonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/amosonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amosonn/subscriptions", "organizations_url": "https://api.github.com/users/amosonn/orgs", "repos_url": "https://api.github.com/users/amosonn/repos", "events_url": "https://api.github.com/users/amosonn/events{/privacy}", "received_events_url": "https://api.github.com/users/amosonn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amosonn", "id": 3142573, "node_id": "MDQ6VXNlcjMxNDI1NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/3142573?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amosonn", "html_url": "https://github.com/amosonn", "followers_url": "https://api.github.com/users/amosonn/followers", "following_url": "https://api.github.com/users/amosonn/following{/other_user}", "gists_url": "https://api.github.com/users/amosonn/gists{/gist_id}", "starred_url": "https://api.github.com/users/amosonn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amosonn/subscriptions", "organizations_url": "https://api.github.com/users/amosonn/orgs", "repos_url": "https://api.github.com/users/amosonn/repos", "events_url": "https://api.github.com/users/amosonn/events{/privacy}", "received_events_url": "https://api.github.com/users/amosonn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab57e7b86817b8ca9b7e6afb2f689ae67274ec7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab57e7b86817b8ca9b7e6afb2f689ae67274ec7c", "html_url": "https://github.com/rust-lang/rust/commit/ab57e7b86817b8ca9b7e6afb2f689ae67274ec7c"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "60767ea4786618551f9720c2318db53ef7e3543c", "filename": "src/libstd/io/cursor.rs", "status": "modified", "additions": 12, "deletions": 10, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/a2d176e8f4774b84db22540a45eed7b29482f154/src%2Flibstd%2Fio%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d176e8f4774b84db22540a45eed7b29482f154/src%2Flibstd%2Fio%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fcursor.rs?ref=a2d176e8f4774b84db22540a45eed7b29482f154", "patch": "@@ -200,18 +200,20 @@ impl<T> Cursor<T> {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> io::Seek for Cursor<T> where T: AsRef<[u8]> {\n     fn seek(&mut self, style: SeekFrom) -> io::Result<u64> {\n-        let pos = match style {\n-            SeekFrom::Start(n) => { self.pos = n; return Ok(n) }\n-            SeekFrom::End(n) => self.inner.as_ref().len() as i64 + n,\n-            SeekFrom::Current(n) => self.pos as i64 + n,\n+        let (base_pos, offset) = match style {\n+            SeekFrom::Start(n) => { self.pos = n; return Ok(n); }\n+            SeekFrom::End(n) => (self.inner.as_ref().len() as u64, n),\n+            SeekFrom::Current(n) => (self.pos, n),\n         };\n-\n-        if pos < 0 {\n-            Err(Error::new(ErrorKind::InvalidInput,\n-                           \"invalid seek to a negative position\"))\n+        let new_pos = if offset >= 0 {\n+            base_pos.checked_add(offset as u64)\n         } else {\n-            self.pos = pos as u64;\n-            Ok(self.pos)\n+            base_pos.checked_sub((offset.wrapping_neg()) as u64)\n+        };\n+        match new_pos {\n+            Some(n) => {self.pos = n; Ok(self.pos)}\n+            None => Err(Error::new(ErrorKind::InvalidInput,\n+                           \"invalid seek to a negative or overflowing position\"))\n         }\n     }\n }"}]}