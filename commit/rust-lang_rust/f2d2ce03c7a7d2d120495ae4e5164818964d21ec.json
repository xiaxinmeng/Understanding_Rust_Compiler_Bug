{"sha": "f2d2ce03c7a7d2d120495ae4e5164818964d21ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZDJjZTAzYzdhN2QyZDEyMDQ5NWFlNGU1MTY0ODE4OTY0ZDIxZWM=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-02T15:26:22Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-08-02T15:38:16Z"}, "message": "Also search for pattern nodes in ranged hover", "tree": {"sha": "8b8075fea1c3b72e192bcc136ed73c5c5dff524d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b8075fea1c3b72e192bcc136ed73c5c5dff524d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2d2ce03c7a7d2d120495ae4e5164818964d21ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d2ce03c7a7d2d120495ae4e5164818964d21ec", "html_url": "https://github.com/rust-lang/rust/commit/f2d2ce03c7a7d2d120495ae4e5164818964d21ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2d2ce03c7a7d2d120495ae4e5164818964d21ec/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "486603d55943b409f6157a71582e5bd707feaaa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/486603d55943b409f6157a71582e5bd707feaaa7", "html_url": "https://github.com/rust-lang/rust/commit/486603d55943b409f6157a71582e5bd707feaaa7"}], "stats": {"total": 51, "additions": 41, "deletions": 10}, "files": [{"sha": "7b8bf28e14357b35696a4fd3c7890d27d3794de0", "filename": "crates/ide/src/hover.rs", "status": "modified", "additions": 41, "deletions": 10, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/f2d2ce03c7a7d2d120495ae4e5164818964d21ec/crates%2Fide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2d2ce03c7a7d2d120495ae4e5164818964d21ec/crates%2Fide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover.rs?ref=f2d2ce03c7a7d2d120495ae4e5164818964d21ec", "patch": "@@ -12,12 +12,8 @@ use ide_db::{\n use itertools::Itertools;\n use stdx::format_to;\n use syntax::{\n-    algo::{self, find_node_at_range},\n-    ast,\n-    display::fn_as_proc_macro_label,\n-    match_ast, AstNode, AstToken, Direction,\n-    SyntaxKind::*,\n-    SyntaxToken, T,\n+    algo, ast, display::fn_as_proc_macro_label, match_ast, AstNode, AstToken, Direction,\n+    SyntaxKind::*, SyntaxToken, T,\n };\n \n use crate::{\n@@ -88,7 +84,15 @@ pub(crate) fn hover(\n     let offset = if range.is_empty() {\n         range.start()\n     } else {\n-        let expr = find_node_at_range::<ast::Expr>(&file, range).map(Either::Left)?;\n+        let expr = file.covering_element(range).ancestors().find_map(|it| {\n+            match_ast! {\n+                match it {\n+                    ast::Expr(expr) => Some(Either::Left(expr)),\n+                    ast::Pat(pat) => Some(Either::Right(pat)),\n+                    _ => None,\n+                }\n+            }\n+        })?;\n         return hover_type_info(&sema, config, expr).map(|it| RangeInfo::new(range, it));\n     };\n \n@@ -4097,15 +4101,42 @@ fn f() { let expr$0 = $0[1, 2, 3, 4] }\n     }\n \n     #[test]\n-    fn hover_range_shows_coercions_if_applicable() {\n+    fn hover_range_for_pat() {\n+        check_hover_range(\n+            r#\"\n+fn foo() {\n+    let $0x$0 = 0;\n+}\n+\"#,\n+            expect![[r#\"\n+                ```rust\n+                i32\n+                ```\"#]],\n+        );\n+\n+        check_hover_range(\n+            r#\"\n+fn foo() {\n+    let $0x$0 = \"\";\n+}\n+\"#,\n+            expect![[r#\"\n+                ```rust\n+                &str\n+                ```\"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn hover_range_shows_coercions_if_applicable_expr() {\n         check_hover_range(\n             r#\"\n fn foo() {\n     let x: &u32 = $0&&&&&0$0;\n }\n \"#,\n             expect![[r#\"\n-                ```\n+                ```text\n                 Type:       &&&&&u32\n                 Coerced to:     &u32\n                 ```\n@@ -4118,7 +4149,7 @@ fn foo() {\n }\n \"#,\n             expect![[r#\"\n-                ```\n+                ```text\n                 Type:             &u32\n                 Coerced to: *const u32\n                 ```"}]}