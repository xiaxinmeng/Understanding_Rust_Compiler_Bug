{"sha": "4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d", "node_id": "C_kwDOAAsO6NoAKDRiZDJlYmM1OGJlZDFlZTViZjdmZjkzNDk5OWUzZGIzYzZlOWYyMmQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-08T21:17:29Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Do not codegen overflow check when not required.", "tree": {"sha": "8398c286f37193405f1ddd01049b4769ee9aecc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8398c286f37193405f1ddd01049b4769ee9aecc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d", "html_url": "https://github.com/rust-lang/rust/commit/4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3eb5c4581a386b13c414e8c8bd73846ef37236d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3eb5c4581a386b13c414e8c8bd73846ef37236d1", "html_url": "https://github.com/rust-lang/rust/commit/3eb5c4581a386b13c414e8c8bd73846ef37236d1"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "a7e74279a13a89976b36562273707cf09e9a29b5", "filename": "compiler/rustc_codegen_ssa/src/mir/block.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fblock.rs?ref=4bd2ebc58bed1ee5bf7ff934999e3db3c6e9f22d", "patch": "@@ -568,8 +568,17 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n         // NOTE: Unlike binops, negation doesn't have its own\n         // checked operation, just a comparison with the minimum\n         // value, so we have to check for the assert message.\n-        if !bx.check_overflow() {\n-            if let AssertKind::OverflowNeg(_) = *msg {\n+        if !bx.cx().check_overflow() {\n+            if let AssertKind::OverflowNeg(_)\n+            | AssertKind::Overflow(\n+                mir::BinOp::Add\n+                | mir::BinOp::Sub\n+                | mir::BinOp::Mul\n+                | mir::BinOp::Shl\n+                | mir::BinOp::Shr,\n+                ..,\n+            ) = *msg\n+            {\n                 const_cond = Some(expected);\n             }\n         }"}]}