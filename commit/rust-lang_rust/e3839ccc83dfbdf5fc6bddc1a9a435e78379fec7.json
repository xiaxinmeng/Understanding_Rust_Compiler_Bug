{"sha": "e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "node_id": "C_kwDOAAsO6NoAKGUzODM5Y2NjODNkZmJkZjVmYzZiZGRjMWE5YTQzNWU3ODM3OWZlYzc", "commit": {"author": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-06-13T21:47:51Z"}, "committer": {"name": "Jane Lusby", "email": "jlusby@yaah.dev", "date": "2022-06-13T21:47:51Z"}, "message": "fix broken doc comment", "tree": {"sha": "87e002726123bdd2db89ad430da46498cca8e18a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87e002726123bdd2db89ad430da46498cca8e18a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "html_url": "https://github.com/rust-lang/rust/commit/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7/comments", "author": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yaahc", "id": 1993852, "node_id": "MDQ6VXNlcjE5OTM4NTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1993852?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yaahc", "html_url": "https://github.com/yaahc", "followers_url": "https://api.github.com/users/yaahc/followers", "following_url": "https://api.github.com/users/yaahc/following{/other_user}", "gists_url": "https://api.github.com/users/yaahc/gists{/gist_id}", "starred_url": "https://api.github.com/users/yaahc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yaahc/subscriptions", "organizations_url": "https://api.github.com/users/yaahc/orgs", "repos_url": "https://api.github.com/users/yaahc/repos", "events_url": "https://api.github.com/users/yaahc/events{/privacy}", "received_events_url": "https://api.github.com/users/yaahc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb2d2e53fde0c74029aad4c10750fdb07a973263", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb2d2e53fde0c74029aad4c10750fdb07a973263", "html_url": "https://github.com/rust-lang/rust/commit/fb2d2e53fde0c74029aad4c10750fdb07a973263"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "6ad04e3f922caffc2e5214c88390ffb9a082d67f", "filename": "library/std/src/error.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=e3839ccc83dfbdf5fc6bddc1a9a435e78379fec7", "patch": "@@ -298,13 +298,14 @@ pub trait Error: Debug + Display {\n \n     /// Provides type based access to context intended for error reports.\n     ///\n-    /// Used in conjunction with [`provide_value`] and [`provide_ref`] to extract\n+    /// Used in conjunction with [`Demand::provide_value`] and [`Demand::provide_ref`] to extract\n     /// references to member variables from `dyn Error` trait objects.\n     ///\n     /// # Example\n     ///\n     /// ```rust\n     /// #![feature(provide_any)]\n+    /// #![feature(error_generic_member_access)]\n     /// use core::fmt;\n     /// use core::any::Demand;\n     ///\n@@ -363,11 +364,11 @@ pub trait Error: Debug + Display {\n     ///     assert!(core::ptr::eq(&error.backtrace, backtrace_ref));\n     /// }\n     /// ```\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     fn provide<'a>(&'a self, _req: &mut Demand<'a>) {}\n }\n \n-#[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+#[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n impl Provider for dyn Error + 'static {\n     fn provide<'a>(&'a self, req: &mut Demand<'a>) {\n         self.provide(req)\n@@ -910,13 +911,13 @@ impl dyn Error + 'static {\n     }\n \n     /// Request a reference to context of type `T`.\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         core::any::request_ref(self)\n     }\n \n     /// Request a value to context of type `T`.\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         core::any::request_value(self)\n     }\n@@ -945,13 +946,13 @@ impl dyn Error + 'static + Send {\n     }\n \n     /// Request a reference to context of type `T`.\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         <dyn Error + 'static>::request_ref(self)\n     }\n \n     /// Request a value to context of type `T`.\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         <dyn Error + 'static>::request_value(self)\n     }\n@@ -980,13 +981,13 @@ impl dyn Error + 'static + Send + Sync {\n     }\n \n     /// Request a reference to context of type `T`.\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_ref<T: ?Sized + 'static>(&self) -> Option<&T> {\n         <dyn Error + 'static>::request_ref(self)\n     }\n \n     /// Request a value to context of type `T`.\n-    #[unstable(feature = \"generic_member_access\", issue = \"none\")]\n+    #[unstable(feature = \"error_generic_member_access\", issue = \"none\")]\n     pub fn request_value<T: 'static>(&self) -> Option<T> {\n         <dyn Error + 'static>::request_value(self)\n     }"}]}