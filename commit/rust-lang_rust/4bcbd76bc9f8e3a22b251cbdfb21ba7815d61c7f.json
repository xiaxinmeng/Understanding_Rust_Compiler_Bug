{"sha": "4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f", "node_id": "C_kwDOAAsO6NoAKDRiY2JkNzZiYzlmOGUzYTIyYjI1MWNiZGZiMjFiYTc4MTVkNjFjN2Y", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-08T05:31:09Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-07-11T04:09:53Z"}, "message": "Move the no-variants handling code earlier in `expand_enum_method_body`.\n\nTo avoid computing a bunch of stuff that it doesn't need.", "tree": {"sha": "ed3b1d29c4b6c8157df167e9f1ce7f8523686146", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed3b1d29c4b6c8157df167e9f1ce7f8523686146"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f", "html_url": "https://github.com/rust-lang/rust/commit/4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1d9e2b50c71afe82ead3e99069a3fb1f96301b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1d9e2b50c71afe82ead3e99069a3fb1f96301b8", "html_url": "https://github.com/rust-lang/rust/commit/f1d9e2b50c71afe82ead3e99069a3fb1f96301b8"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "c953cc36534f2540a31c6c715fc7050fab07e1c3", "filename": "compiler/rustc_builtin_macros/src/deriving/generic/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fderiving%2Fgeneric%2Fmod.rs?ref=4bcbd76bc9f8e3a22b251cbdfb21ba7815d61c7f", "patch": "@@ -1173,6 +1173,12 @@ impl<'a> MethodDef<'a> {\n         let span = trait_.span;\n         let variants = &enum_def.variants;\n \n+        // There is no sensible code to be generated for *any* deriving on a\n+        // zero-variant enum. So we just generate a failing expression.\n+        if variants.is_empty() {\n+            return BlockOrExpr(vec![], Some(deriving::call_unreachable(cx, span)));\n+        }\n+\n         let prefixes = iter::once(\"__self\".to_string())\n             .chain(\n                 selflike_args\n@@ -1365,11 +1371,6 @@ impl<'a> MethodDef<'a> {\n             let all_match = cx.expr_match(span, match_arg, match_arms);\n             let arm_expr = cx.expr_if(span, discriminant_test, all_match, Some(arm_expr));\n             BlockOrExpr(index_let_stmts, Some(arm_expr))\n-        } else if variants.is_empty() {\n-            // There is no sensible code to be generated for *any* deriving on\n-            // a zero-variant enum. So we just generate a failing expression\n-            // for the zero variant case.\n-            BlockOrExpr(vec![], Some(deriving::call_unreachable(cx, span)))\n         } else {\n             let match_arg = if selflike_args.len() == 1 {\n                 selflike_args.pop().unwrap()"}]}