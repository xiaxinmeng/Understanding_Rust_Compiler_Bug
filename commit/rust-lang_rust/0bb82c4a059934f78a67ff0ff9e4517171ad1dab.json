{"sha": "0bb82c4a059934f78a67ff0ff9e4517171ad1dab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYjgyYzRhMDU5OTM0Zjc4YTY3ZmYwZmY5ZTQ1MTcxNzFhZDFkYWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-11-28T17:02:12Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-11-28T17:02:12Z"}, "message": "expand iter_projections comment", "tree": {"sha": "7e8691c6468251929878fcdff04cbdb4e3776d0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e8691c6468251929878fcdff04cbdb4e3776d0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bb82c4a059934f78a67ff0ff9e4517171ad1dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bb82c4a059934f78a67ff0ff9e4517171ad1dab", "html_url": "https://github.com/rust-lang/rust/commit/0bb82c4a059934f78a67ff0ff9e4517171ad1dab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bb82c4a059934f78a67ff0ff9e4517171ad1dab/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "571da2c62d0ac6360b78796e764ad5fe0753f553", "url": "https://api.github.com/repos/rust-lang/rust/commits/571da2c62d0ac6360b78796e764ad5fe0753f553", "html_url": "https://github.com/rust-lang/rust/commit/571da2c62d0ac6360b78796e764ad5fe0753f553"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "62e5a1e18f884eddda10feb6c17ea92944376d25", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0bb82c4a059934f78a67ff0ff9e4517171ad1dab/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0bb82c4a059934f78a67ff0ff9e4517171ad1dab/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=0bb82c4a059934f78a67ff0ff9e4517171ad1dab", "patch": "@@ -1744,6 +1744,10 @@ impl<'tcx> Place<'tcx> {\n \n     /// Iterate over the projections in evaluation order, i.e., the first element is the base with\n     /// its projection and then subsequently more projections are added.\n+    /// As a concrete example, given the place a.b.c, this would yield:\n+    /// - (a, .b)\n+    /// - (a.b, .c)\n+    /// Given a place without projections, the iterator is empty.\n     pub fn iter_projections(\n         self,\n     ) -> impl Iterator<Item = (PlaceRef<'tcx>, PlaceElem<'tcx>)> + DoubleEndedIterator {"}]}