{"sha": "a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZWIxYWM5MGY0YWEwMzNjZDdhNTJkZDJkZTZkZWEyMWMxM2Q2ZDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-15T00:59:13Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-15T00:59:13Z"}, "message": "Move call_expr parse rule to the place where it needs to be to understand complex calls.", "tree": {"sha": "5b510788c9715d4be1986e410d9b1c50fb2dff96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b510788c9715d4be1986e410d9b1c50fb2dff96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5", "html_url": "https://github.com/rust-lang/rust/commit/a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0998847bee42134b0de48a82412503ca72a7fb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0998847bee42134b0de48a82412503ca72a7fb9", "html_url": "https://github.com/rust-lang/rust/commit/e0998847bee42134b0de48a82412503ca72a7fb9"}], "stats": {"total": 27, "additions": 13, "deletions": 14}, "files": [{"sha": "84a5c3052450a31d9ab69a7b8d1406cb6ef92d2e", "filename": "src/comp/front/parser.rs", "status": "modified", "additions": 13, "deletions": 14, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5/src%2Fcomp%2Ffront%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5/src%2Fcomp%2Ffront%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fparser.rs?ref=a7eb1ac90f4aa033cd7a52dd2de6dea21c13d6d5", "patch": "@@ -392,20 +392,6 @@ impure fn parse_bottom_expr(parser p) -> @ast.expr {\n             auto n = parse_name(p, i);\n             hi = n.span;\n             ex = ast.expr_name(n, none[ast.def], ast.ann_none);\n-            alt (p.peek()) {\n-                case (token.LPAREN) {\n-                    // Call expr.\n-                    auto pf = parse_expr;\n-                    auto es = parse_seq[@ast.expr](token.LPAREN,\n-                                                   token.RPAREN,\n-                                                   some(token.COMMA),\n-                                                   pf, p);\n-                    ex = ast.expr_call(@spanned(lo, hi, ex),\n-                                       es.node, ast.ann_none);\n-                    hi = es.span;\n-                }\n-                case (_) { /* fall through */ }\n-            }\n         }\n \n         case (token.LPAREN) {\n@@ -488,6 +474,19 @@ impure fn parse_path_expr(parser p) -> @ast.expr {\n     auto hi = e.span;\n     while (true) {\n         alt (p.peek()) {\n+\n+            case (token.LPAREN) {\n+                // Call expr.\n+                auto pf = parse_expr;\n+                auto es = parse_seq[@ast.expr](token.LPAREN,\n+                                               token.RPAREN,\n+                                               some(token.COMMA),\n+                                               pf, p);\n+                hi = es.span;\n+                auto e_ = ast.expr_call(e, es.node, ast.ann_none);\n+                e = @spanned(lo, hi, e_);\n+            }\n+\n             case (token.DOT) {\n                 p.bump();\n                 alt (p.peek()) {"}]}