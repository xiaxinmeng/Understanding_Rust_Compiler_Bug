{"sha": "9e00272441e0a17fed015f9112921f0815f9ec6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllMDAyNzI0NDFlMGExN2ZlZDAxNWY5MTEyOTIxZjA4MTVmOWVjNmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-22T23:06:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-12-22T23:06:32Z"}, "message": "auto merge of #11046 : zargony/rust/dep-info, r=alexcrichton\n\nUsing --dep-info writes Makefile-compatible dependency info to a file that is by default named based on the crate source filename. This adds an optional string argument to the --dep-info option which allows to write dependency info to an arbitrary filename.\r\n\r\ncc #10698", "tree": {"sha": "6e8123d5b460ad8f687b66ae30a188e8b2e4cafa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e8123d5b460ad8f687b66ae30a188e8b2e4cafa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e00272441e0a17fed015f9112921f0815f9ec6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e00272441e0a17fed015f9112921f0815f9ec6c", "html_url": "https://github.com/rust-lang/rust/commit/9e00272441e0a17fed015f9112921f0815f9ec6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e00272441e0a17fed015f9112921f0815f9ec6c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c0c492101225b7e78800efc0f4bec6b43bb931f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c0c492101225b7e78800efc0f4bec6b43bb931f", "html_url": "https://github.com/rust-lang/rust/commit/0c0c492101225b7e78800efc0f4bec6b43bb931f"}, {"sha": "66e3fbebd9b2c7061c139e601e73067e4b3feb5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/66e3fbebd9b2c7061c139e601e73067e4b3feb5b", "html_url": "https://github.com/rust-lang/rust/commit/66e3fbebd9b2c7061c139e601e73067e4b3feb5b"}], "stats": {"total": 92, "additions": 62, "deletions": 30}, "files": [{"sha": "ad510b4407661d7c12bccd50a139fcd124470dbd", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 29, "deletions": 19, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -393,24 +393,33 @@ pub fn phase_6_link_output(sess: Session,\n                            &outputs.out_filename,\n                            &trans.link));\n \n-    // Write out dependency rules to the .d file if requested\n-    if sess.opts.write_dependency_info {\n-        match *input {\n+    // Write out dependency rules to the dep-info file if requested with --dep-info\n+    let deps_filename = match sess.opts.write_dependency_info {\n+        // Use filename from --dep-file argument if given\n+        (true, Some(ref filename)) => filename.clone(),\n+        // Use default filename: crate source filename with extension replaced by \".d\"\n+        (true, None) => match *input {\n             file_input(ref input_path) => {\n-                let files: ~[@str] = sess.codemap.files.iter()\n-                    .filter_map(|fmap| if fmap.is_real_file() { Some(fmap.name) } else { None })\n-                    .collect();\n-                let mut output_path = outputs[0].dir_path();\n                 let filestem = input_path.filestem().expect(\"input file must have stem\");\n-                output_path.push(Path::new(filestem).with_extension(\"d\"));\n-                let mut file = io::File::create(&output_path);\n-                for output in outputs.iter() {\n-                    write!(&mut file as &mut Writer,\n-                           \"{}: {}\\n\\n\", output.display(), files.connect(\" \"));\n-                }\n-            }\n-            str_input(_) => {}\n-        }\n+                let filename = outputs[0].dir_path().join(filestem).with_extension(\"d\");\n+                filename\n+            },\n+            str_input(..) => {\n+                sess.warn(\"can not write --dep-info without a filename when compiling stdin.\");\n+                return;\n+            },\n+        },\n+        _ => return,\n+    };\n+    // Build a list of files used to compile the output and\n+    // write Makefile-compatible dependency rules\n+    let files: ~[@str] = sess.codemap.files.iter()\n+        .filter_map(|fmap| if fmap.is_real_file() { Some(fmap.name) } else { None })\n+        .collect();\n+    let mut file = io::File::create(&deps_filename);\n+    for output in outputs.iter() {\n+        write!(&mut file as &mut Writer,\n+               \"{}: {}\\n\\n\", output.display(), files.connect(\" \"));\n     }\n }\n \n@@ -771,7 +780,8 @@ pub fn build_session_options(binary: @str,\n     let cfg = parse_cfgspecs(matches.opt_strs(\"cfg\"), demitter);\n     let test = matches.opt_present(\"test\");\n     let android_cross_path = matches.opt_str(\"android-cross-path\");\n-    let write_dependency_info = matches.opt_present(\"dep-info\");\n+    let write_dependency_info = (matches.opt_present(\"dep-info\"),\n+                                 matches.opt_str(\"dep-info\").map(|p| Path::new(p)));\n \n     let custom_passes = match matches.opt_str(\"passes\") {\n         None => ~[],\n@@ -933,8 +943,8 @@ pub fn optgroups() -> ~[getopts::groups::OptGroup] {\n                           or identified (fully parenthesized,\n                           AST nodes and blocks with IDs)\", \"TYPE\"),\n   optflag(\"S\", \"\",    \"Compile only; do not assemble or link\"),\n-  optflag(\"\", \"dep-info\",\n-                        \"Output dependency info to .d file after compiling\"),\n+  optflagopt(\"\", \"dep-info\",\n+                        \"Output dependency info to <filename> after compiling\", \"FILENAME\"),\n   optflag(\"\", \"save-temps\",\n                         \"Write intermediate files (.bc, .opt.bc, .o)\n                           in addition to normal output\"),"}, {"sha": "9492e22921a1818195abd3a2ec71b89099eaec18", "filename": "src/librustc/driver/session.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Flibrustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Flibrustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fsession.rs?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -168,8 +168,8 @@ pub struct options {\n     no_trans: bool,\n     debugging_opts: uint,\n     android_cross_path: Option<~str>,\n-    /// Whether to write .d dependency files\n-    write_dependency_info: bool,\n+    /// Whether to write dependency files. It's (enabled, optional filename).\n+    write_dependency_info: (bool, Option<Path>),\n     /// Crate id-related things to maybe print. It's (crate_id, crate_name, crate_file_name).\n     print_metas: (bool, bool, bool),\n }\n@@ -397,7 +397,7 @@ pub fn basic_options() -> @options {\n         no_trans: false,\n         debugging_opts: 0u,\n         android_cross_path: None,\n-        write_dependency_info: false,\n+        write_dependency_info: (false, None),\n         print_metas: (false, false, false),\n     }\n }"}, {"sha": "7a1f99ac2d5928c3869b736d455b58876a916518", "filename": "src/test/run-make/dep-info-custom/Makefile", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2FMakefile?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -0,0 +1,12 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) --dep-info $(TMPDIR)/custom-deps-file.d --lib lib.rs\n+\tsleep 1\n+\ttouch foo.rs\n+\t-rm -f $(TMPDIR)/done\n+\t$(MAKE) -drf Makefile.foo\n+\trm $(TMPDIR)/done\n+\tpwd\n+\t$(MAKE) -drf Makefile.foo\n+\trm $(TMPDIR)/done && exit 1 || exit 0"}, {"sha": "95e736deb41a189ee740a9148b7987132665e1b2", "filename": "src/test/run-make/dep-info-custom/Makefile.foo", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2FMakefile.foo", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2FMakefile.foo", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2FMakefile.foo?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -0,0 +1,7 @@\n+LIB := $(shell $(RUSTC) --crate-file-name --lib lib.rs)\n+\n+$(TMPDIR)/$(LIB):\n+\t$(RUSTC) --dep-info $(TMPDIR)/custom-deps-file.d --lib lib.rs\n+\ttouch $(TMPDIR)/done\n+\n+-include $(TMPDIR)/custom-deps-file.d"}, {"sha": "c5c0bc606cd699cda9d339035a1ca95bff4a70f4", "filename": "src/test/run-make/dep-info-custom/bar.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2Fbar.rs?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -0,0 +1 @@\n+pub fn bar() {}"}, {"sha": "b76b4321d62aa8e066b24d213c79ccc8230b8d7b", "filename": "src/test/run-make/dep-info-custom/foo.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2Ffoo.rs?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -0,0 +1 @@\n+pub fn foo() {}"}, {"sha": "937118269a7473e7edd5bf16dbc27367e323bb69", "filename": "src/test/run-make/dep-info-custom/lib.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info-custom%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info-custom%2Flib.rs?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -0,0 +1,4 @@\n+#[crate_id=\"foo#0.1\"];\n+\n+pub mod foo;\n+pub mod bar;"}, {"sha": "36a43b4c45560e39098e281e54ede83860218974", "filename": "src/test/run-make/dep-info/Makefile", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2FMakefile?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -1,11 +1,12 @@\n -include ../tools.mk\n+\n all:\n \t$(RUSTC) --dep-info --lib lib.rs\n \tsleep 1\n \ttouch foo.rs\n \t-rm -f $(TMPDIR)/done\n-\t$(MAKE) -f Makefile.foo\n+\t$(MAKE) -drf Makefile.foo\n \trm $(TMPDIR)/done\n \tpwd\n-\t$(MAKE) -df Makefile.foo\n+\t$(MAKE) -drf Makefile.foo\n \trm $(TMPDIR)/done && exit 1 || exit 0"}, {"sha": "2a1ce715e280ae49fe76e39027756cb9b6461008", "filename": "src/test/run-make/dep-info/Makefile.foo", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info%2FMakefile.foo", "raw_url": "https://github.com/rust-lang/rust/raw/9e00272441e0a17fed015f9112921f0815f9ec6c/src%2Ftest%2Frun-make%2Fdep-info%2FMakefile.foo", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fdep-info%2FMakefile.foo?ref=9e00272441e0a17fed015f9112921f0815f9ec6c", "patch": "@@ -1,10 +1,6 @@\n-ifeq ($(shell uname),Darwin)\n-LIBEXT=dylib\n-else\n-LIBEXT=so\n-endif\n+LIB := $(shell $(RUSTC) --crate-file-name --lib lib.rs)\n \n-$(TMPDIR)/libfoo-b517899a-0.1.$(LIBEXT):\n+$(TMPDIR)/$(LIB):\n \t$(RUSTC) --dep-info --lib lib.rs\n \ttouch $(TMPDIR)/done\n "}]}