{"sha": "2eb76fc8a17cbbbbefe12c6a4413b3d803c03941", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYjc2ZmM4YTE3Y2JiYmJlZmUxMmM2YTQ0MTNiM2Q4MDNjMDM5NDE=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-06T16:38:15Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-09-06T23:58:22Z"}, "message": "add a useful debug to `give_region_a_name`", "tree": {"sha": "e1e67a5accd9a1ac549e58ccb9b31ced2c3cf9d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1e67a5accd9a1ac549e58ccb9b31ced2c3cf9d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eb76fc8a17cbbbbefe12c6a4413b3d803c03941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb76fc8a17cbbbbefe12c6a4413b3d803c03941", "html_url": "https://github.com/rust-lang/rust/commit/2eb76fc8a17cbbbbefe12c6a4413b3d803c03941", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eb76fc8a17cbbbbefe12c6a4413b3d803c03941/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e706f56bd3beb0833d9e05b0dabdc3c3ce750e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e706f56bd3beb0833d9e05b0dabdc3c3ce750e4", "html_url": "https://github.com/rust-lang/rust/commit/4e706f56bd3beb0833d9e05b0dabdc3c3ce750e4"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "8ac4bcd67b6bf0ab46920f698059df1232c55648", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2eb76fc8a17cbbbbefe12c6a4413b3d803c03941/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2eb76fc8a17cbbbbefe12c6a4413b3d803c03941/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=2eb76fc8a17cbbbbefe12c6a4413b3d803c03941", "patch": "@@ -62,20 +62,26 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         assert!(self.universal_regions.is_universal_region(fr));\n \n-        self.give_name_from_error_region(infcx.tcx, mir_def_id, fr, counter, diag)\n+        let value = self.give_name_from_error_region(infcx.tcx, mir_def_id, fr, counter, diag)\n             .or_else(|| {\n                 self.give_name_if_anonymous_region_appears_in_arguments(\n-                    infcx, mir, mir_def_id, fr, counter, diag)\n+                    infcx, mir, mir_def_id, fr, counter, diag,\n+                )\n             })\n             .or_else(|| {\n                 self.give_name_if_anonymous_region_appears_in_upvars(\n-                    infcx.tcx, mir, fr, counter, diag)\n+                    infcx.tcx, mir, fr, counter, diag,\n+                )\n             })\n             .or_else(|| {\n                 self.give_name_if_anonymous_region_appears_in_output(\n-                    infcx, mir, mir_def_id, fr, counter, diag)\n+                    infcx, mir, mir_def_id, fr, counter, diag,\n+                )\n             })\n-            .unwrap_or_else(|| span_bug!(mir.span, \"can't make a name for free region {:?}\", fr))\n+            .unwrap_or_else(|| span_bug!(mir.span, \"can't make a name for free region {:?}\", fr));\n+\n+        debug!(\"give_region_a_name: gave name {:?}\", value);\n+        value\n     }\n \n     /// Check for the case where `fr` maps to something that the"}]}