{"sha": "881a50c0b7c089831aaf403e9238f77deefe04c3", "node_id": "C_kwDOAAsO6NoAKDg4MWE1MGMwYjdjMDg5ODMxYWFmNDAzZTkyMzhmNzdkZWVmZTA0YzM", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-10-01T18:09:31Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-10-24T20:28:44Z"}, "message": "Always sort suggestions before emitting them", "tree": {"sha": "04b573fdb2b107f1e8205a863e47dcccdb7faa7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04b573fdb2b107f1e8205a863e47dcccdb7faa7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/881a50c0b7c089831aaf403e9238f77deefe04c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/881a50c0b7c089831aaf403e9238f77deefe04c3", "html_url": "https://github.com/rust-lang/rust/commit/881a50c0b7c089831aaf403e9238f77deefe04c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/881a50c0b7c089831aaf403e9238f77deefe04c3/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef212e7fb306626b4dc2c484aa3cf3b42a83e83a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef212e7fb306626b4dc2c484aa3cf3b42a83e83a", "html_url": "https://github.com/rust-lang/rust/commit/ef212e7fb306626b4dc2c484aa3cf3b42a83e83a"}], "stats": {"total": 74, "additions": 39, "deletions": 35}, "files": [{"sha": "f2381d75c565fd6d365edf242f363b44c0836722", "filename": "compiler/rustc_errors/src/diagnostic.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fdiagnostic.rs?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -465,10 +465,14 @@ impl Diagnostic {\n         suggestions: impl Iterator<Item = String>,\n         applicability: Applicability,\n     ) -> &mut Self {\n+        let mut suggestions: Vec<_> = suggestions.collect();\n+        suggestions.sort();\n+        let substitutions = suggestions\n+            .into_iter()\n+            .map(|snippet| Substitution { parts: vec![SubstitutionPart { snippet, span: sp }] })\n+            .collect();\n         self.suggestions.push(CodeSuggestion {\n-            substitutions: suggestions\n-                .map(|snippet| Substitution { parts: vec![SubstitutionPart { snippet, span: sp }] })\n-                .collect(),\n+            substitutions,\n             msg: msg.to_owned(),\n             style: SuggestionStyle::ShowCode,\n             applicability,"}, {"sha": "b56eedeb80d16a1080861467b6c8a91a011264b5", "filename": "src/test/ui/deprecation/invalid-literal.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fdeprecation%2Finvalid-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fdeprecation%2Finvalid-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdeprecation%2Finvalid-literal.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -6,12 +6,12 @@ LL | #[deprecated = b\"test\"]\n    |\n help: the following are the possible correct uses\n    |\n-LL | #[deprecated]\n-   | ~~~~~~~~~~~~~\n-LL | #[deprecated(/*opt*/ since = \"version\", /*opt*/ note = \"reason\")]\n-   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL | #[deprecated = \"reason\"]\n    | ~~~~~~~~~~~~~~~~~~~~~~~~\n+LL | #[deprecated(/*opt*/ since = \"version\", /*opt*/ note = \"reason\")]\n+   | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL | #[deprecated]\n+   | ~~~~~~~~~~~~~\n \n error: aborting due to previous error\n "}, {"sha": "bc8a93757a5994288cdd9aa9856433338fb78abf", "filename": "src/test/ui/did_you_mean/issue-42764.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-42764.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -8,10 +8,10 @@ LL |     this_function_expects_a_double_option(n);\n               found type `usize`\n help: try using a variant of the expected enum\n    |\n-LL |     this_function_expects_a_double_option(DoubleOption::FirstSome(n));\n-   |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     this_function_expects_a_double_option(DoubleOption::AlternativeSome(n));\n    |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     this_function_expects_a_double_option(DoubleOption::FirstSome(n));\n+   |                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0308]: mismatched types\n   --> $DIR/issue-42764.rs:27:33"}, {"sha": "9a12851f20e5f87036c7c04249d99b6ebf2d557c", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-macro_use.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-macro_use.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-macro_use.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-macro_use.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -24,10 +24,10 @@ LL |     #[macro_use = \"2700\"] struct S;\n    |\n help: the following are the possible correct uses\n    |\n-LL |     #[macro_use] struct S;\n-   |     ~~~~~~~~~~~~\n LL |     #[macro_use(name1, name2, ...)] struct S;\n    |     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     #[macro_use] struct S;\n+   |     ~~~~~~~~~~~~\n \n error: aborting due to 4 previous errors\n "}, {"sha": "c8ebed3bfd9ae9bd71ed642b52b101be776cfd5a", "filename": "src/test/ui/impl-trait/no-method-suggested-traits.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fno-method-suggested-traits.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -9,12 +9,12 @@ help: the following traits are implemented but not in scope; perhaps add a `use`\n    |\n LL | use foo::Bar;\n    |\n+LL | use no_method_suggested_traits::Reexported;\n+   |\n LL | use no_method_suggested_traits::foo::PubPub;\n    |\n LL | use no_method_suggested_traits::qux::PrivPub;\n    |\n-LL | use no_method_suggested_traits::Reexported;\n-   |\n \n error[E0599]: no method named `method` found for struct `Rc<&mut Box<&u32>>` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:26:44\n@@ -27,12 +27,12 @@ help: the following traits are implemented but not in scope; perhaps add a `use`\n    |\n LL | use foo::Bar;\n    |\n+LL | use no_method_suggested_traits::Reexported;\n+   |\n LL | use no_method_suggested_traits::foo::PubPub;\n    |\n LL | use no_method_suggested_traits::qux::PrivPub;\n    |\n-LL | use no_method_suggested_traits::Reexported;\n-   |\n \n error[E0599]: no method named `method` found for type `char` in the current scope\n   --> $DIR/no-method-suggested-traits.rs:30:9"}, {"sha": "59bb98a340a5f894803cdf0d2fab79e10a48d67a", "filename": "src/test/ui/issues/issue-73427.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fissues%2Fissue-73427.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fissues%2Fissue-73427.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-73427.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -120,10 +120,10 @@ LL | | }\n    | |_^\n help: try to construct one of the enum's variants\n    |\n-LL |     let x = A::TupleWithFields(3);\n-   |             ~~~~~~~~~~~~~~~~~~\n LL |     let x = A::Tuple(3);\n    |             ~~~~~~~~\n+LL |     let x = A::TupleWithFields(3);\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error[E0532]: expected tuple struct or tuple variant, found enum `A`\n   --> $DIR/issue-73427.rs:42:12\n@@ -145,10 +145,10 @@ LL | | }\n    | |_^\n help: try to match against one of the enum's variants\n    |\n-LL |     if let A::TupleWithFields(3) = x { }\n-   |            ~~~~~~~~~~~~~~~~~~\n LL |     if let A::Tuple(3) = x { }\n    |            ~~~~~~~~\n+LL |     if let A::TupleWithFields(3) = x { }\n+   |            ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 6 previous errors\n "}, {"sha": "a8d3c8680faae46907328f7e684eb1dc500e3d6b", "filename": "src/test/ui/on-unimplemented/bad-annotation.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fon-unimplemented%2Fbad-annotation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fon-unimplemented%2Fbad-annotation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fon-unimplemented%2Fbad-annotation.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -6,10 +6,10 @@ LL | #[rustc_on_unimplemented]\n    |\n help: the following are the possible correct uses\n    |\n-LL | #[rustc_on_unimplemented(/*opt*/ message = \"...\", /*opt*/ label = \"...\", /*opt*/ note = \"...\")]\n-   |\n LL | #[rustc_on_unimplemented = \"message\"]\n    |\n+LL | #[rustc_on_unimplemented(/*opt*/ message = \"...\", /*opt*/ label = \"...\", /*opt*/ note = \"...\")]\n+   |\n \n error[E0230]: there is no parameter `C` on trait `BadAnnotation2`\n   --> $DIR/bad-annotation.rs:22:1"}, {"sha": "ce85d93b96ca8de5f288d1f54a2f0fdc583fd608", "filename": "src/test/ui/suggestions/core-std-import-order-issue-83564.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fsuggestions%2Fcore-std-import-order-issue-83564.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Fsuggestions%2Fcore-std-import-order-issue-83564.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fcore-std-import-order-issue-83564.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -6,10 +6,10 @@ LL |     let _x = NonZeroU32::new(5).unwrap();\n    |\n help: consider importing one of these items\n    |\n-LL | use std::num::NonZeroU32;\n-   |\n LL | use core::num::NonZeroU32;\n    |\n+LL | use std::num::NonZeroU32;\n+   |\n \n error: aborting due to previous error\n "}, {"sha": "e868756504f19f36c5cee4996f42dd1aa60cbf0b", "filename": "src/test/ui/traits/issue-77982.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Ftraits%2Fissue-77982.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftest%2Fui%2Ftraits%2Fissue-77982.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-77982.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -31,10 +31,10 @@ LL |     opts.get(<String as AsRef<OsStr>>::as_ref(opt));\n    |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     opts.get(<String as AsRef<Path>>::as_ref(opt));\n    |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n-LL |     opts.get(<String as AsRef<str>>::as_ref(opt));\n-   |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n LL |     opts.get(<String as AsRef<[u8]>>::as_ref(opt));\n    |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n+LL |     opts.get(<String as AsRef<str>>::as_ref(opt));\n+   |              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n \n error[E0283]: type annotations needed\n   --> $DIR/issue-77982.rs:13:44"}, {"sha": "bb93cbbd5e1904d196e29c39d453db59db8c04ff", "filename": "src/tools/clippy/tests/ui/nonminimal_bool.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/881a50c0b7c089831aaf403e9238f77deefe04c3/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Ftests%2Fui%2Fnonminimal_bool.stderr?ref=881a50c0b7c089831aaf403e9238f77deefe04c3", "patch": "@@ -50,10 +50,10 @@ LL |     let _ = a == b && c == 5 && a == b;\n    |\n help: try\n    |\n-LL |     let _ = a == b && c == 5;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b || c != 5);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a == b && c == 5;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:28:13\n@@ -63,10 +63,10 @@ LL |     let _ = a == b || c == 5 || a == b;\n    |\n help: try\n    |\n-LL |     let _ = a == b || c == 5;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b && c != 5);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a == b || c == 5;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:29:13\n@@ -76,10 +76,10 @@ LL |     let _ = a == b && c == 5 && b == a;\n    |\n help: try\n    |\n-LL |     let _ = a == b && c == 5;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b || c != 5);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a == b && c == 5;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:30:13\n@@ -89,10 +89,10 @@ LL |     let _ = a != b || !(a != b || c == d);\n    |\n help: try\n    |\n-LL |     let _ = a != b || c != d;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a == b && c == d);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a != b || c != d;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:31:13\n@@ -102,10 +102,10 @@ LL |     let _ = a != b && !(a != b && c == d);\n    |\n help: try\n    |\n-LL |     let _ = a != b && c != d;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a == b || c == d);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a != b && c != d;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: aborting due to 12 previous errors\n "}]}