{"sha": "a377893da2cd7124e5a18c7116cbb70e16dd5541", "node_id": "C_kwDOAAsO6NoAKGEzNzc4OTNkYTJjZDcxMjRlNWExOGM3MTE2Y2JiNzBlMTZkZDU1NDE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-08T22:40:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-08T22:40:38Z"}, "message": "Auto merge of #90291 - geeklint:loosen_weak_debug_bound, r=dtolnay\n\nLoosen the bound on the Debug implementation of Weak.\n\nBoth `rc::Weak<T>` and `sync::Weak<T>` currently require `T: Debug` in their own `Debug` implementations, but they don't currently use it;  they only ever print a fixed string.\n\nA general implementation of Debug for Weak that actually attempts to upgrade and rely on the contents is unlikely in the future because it may have unbounded recursion in the presence of reference cycles, which Weak is commonly used in.  (This was the justification for why the current implementation [was implemented the way it is](https://github.com/rust-lang/rust/pull/19388/commits/f0976e2cf3f6b0027f118b791e0888b29fbb41a7)).\n\nWhen I brought it up [on the forum](https://internals.rust-lang.org/t/could-the-bound-on-weak-debug-be-relaxed/15504), it was suggested that, even if an implementation is specialized in the future that relies on the data stored within the Weak, it would likely rely on specialization anyway, and could therefore easily specialize on the Debug bound as well.", "tree": {"sha": "82931f27eca406ae31632605605a7ecaa80bebbb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82931f27eca406ae31632605605a7ecaa80bebbb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a377893da2cd7124e5a18c7116cbb70e16dd5541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a377893da2cd7124e5a18c7116cbb70e16dd5541", "html_url": "https://github.com/rust-lang/rust/commit/a377893da2cd7124e5a18c7116cbb70e16dd5541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a377893da2cd7124e5a18c7116cbb70e16dd5541/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc47b069983292e4ee8982d5dabe6301452c5f25", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc47b069983292e4ee8982d5dabe6301452c5f25", "html_url": "https://github.com/rust-lang/rust/commit/cc47b069983292e4ee8982d5dabe6301452c5f25"}, {"sha": "ca7297b86673cf06c7089a962b763abb246ec4d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca7297b86673cf06c7089a962b763abb246ec4d5", "html_url": "https://github.com/rust-lang/rust/commit/ca7297b86673cf06c7089a962b763abb246ec4d5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c1d853ed652160149e6911c5577e8cc93891f1a9", "filename": "library/alloc/src/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a377893da2cd7124e5a18c7116cbb70e16dd5541/library%2Falloc%2Fsrc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a377893da2cd7124e5a18c7116cbb70e16dd5541/library%2Falloc%2Fsrc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Frc.rs?ref=a377893da2cd7124e5a18c7116cbb70e16dd5541", "patch": "@@ -2561,7 +2561,7 @@ impl<T: ?Sized> Clone for Weak<T> {\n }\n \n #[stable(feature = \"rc_weak\", since = \"1.4.0\")]\n-impl<T: ?Sized + fmt::Debug> fmt::Debug for Weak<T> {\n+impl<T: ?Sized> fmt::Debug for Weak<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"(Weak)\")\n     }"}, {"sha": "d833d4d1dfbd327a5f53b606498e5e717cbcae69", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a377893da2cd7124e5a18c7116cbb70e16dd5541/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a377893da2cd7124e5a18c7116cbb70e16dd5541/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=a377893da2cd7124e5a18c7116cbb70e16dd5541", "patch": "@@ -312,7 +312,7 @@ impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<Weak<U>> for Weak<T> {}\n impl<T: ?Sized + Unsize<U>, U: ?Sized> DispatchFromDyn<Weak<U>> for Weak<T> {}\n \n #[stable(feature = \"arc_weak\", since = \"1.4.0\")]\n-impl<T: ?Sized + fmt::Debug> fmt::Debug for Weak<T> {\n+impl<T: ?Sized> fmt::Debug for Weak<T> {\n     fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n         write!(f, \"(Weak)\")\n     }"}]}