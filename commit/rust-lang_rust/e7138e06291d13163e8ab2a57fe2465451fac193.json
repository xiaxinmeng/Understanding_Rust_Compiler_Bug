{"sha": "e7138e06291d13163e8ab2a57fe2465451fac193", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MTM4ZTA2MjkxZDEzMTYzZThhYjJhNTdmZTI0NjU0NTFmYWMxOTM=", "commit": {"author": {"name": "CrazyRoka", "email": "RokaRostuk@gmail.com", "date": "2020-05-02T11:25:45Z"}, "committer": {"name": "CrazyRoka", "email": "RokaRostuk@gmail.com", "date": "2020-05-02T11:25:45Z"}, "message": "Fix match on vec items: match on vec[..]\n\n- Added new tests\n- Fixed false positive when matching on full range, which will never panic", "tree": {"sha": "c85b99e0dacb8d702ffb6c01811070253e0673d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c85b99e0dacb8d702ffb6c01811070253e0673d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7138e06291d13163e8ab2a57fe2465451fac193", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7138e06291d13163e8ab2a57fe2465451fac193", "html_url": "https://github.com/rust-lang/rust/commit/e7138e06291d13163e8ab2a57fe2465451fac193", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7138e06291d13163e8ab2a57fe2465451fac193/comments", "author": {"login": "CrazyRoka", "id": 19844144, "node_id": "MDQ6VXNlcjE5ODQ0MTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/19844144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrazyRoka", "html_url": "https://github.com/CrazyRoka", "followers_url": "https://api.github.com/users/CrazyRoka/followers", "following_url": "https://api.github.com/users/CrazyRoka/following{/other_user}", "gists_url": "https://api.github.com/users/CrazyRoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrazyRoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrazyRoka/subscriptions", "organizations_url": "https://api.github.com/users/CrazyRoka/orgs", "repos_url": "https://api.github.com/users/CrazyRoka/repos", "events_url": "https://api.github.com/users/CrazyRoka/events{/privacy}", "received_events_url": "https://api.github.com/users/CrazyRoka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CrazyRoka", "id": 19844144, "node_id": "MDQ6VXNlcjE5ODQ0MTQ0", "avatar_url": "https://avatars.githubusercontent.com/u/19844144?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CrazyRoka", "html_url": "https://github.com/CrazyRoka", "followers_url": "https://api.github.com/users/CrazyRoka/followers", "following_url": "https://api.github.com/users/CrazyRoka/following{/other_user}", "gists_url": "https://api.github.com/users/CrazyRoka/gists{/gist_id}", "starred_url": "https://api.github.com/users/CrazyRoka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CrazyRoka/subscriptions", "organizations_url": "https://api.github.com/users/CrazyRoka/orgs", "repos_url": "https://api.github.com/users/CrazyRoka/repos", "events_url": "https://api.github.com/users/CrazyRoka/events{/privacy}", "received_events_url": "https://api.github.com/users/CrazyRoka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "991efa6375e548ff86334916a585a7e36a9d6839", "url": "https://api.github.com/repos/rust-lang/rust/commits/991efa6375e548ff86334916a585a7e36a9d6839", "html_url": "https://github.com/rust-lang/rust/commit/991efa6375e548ff86334916a585a7e36a9d6839"}], "stats": {"total": 43, "additions": 38, "deletions": 5}, "files": [{"sha": "236362130e5422d25c09618402d1d4b5e55065e0", "filename": "clippy_lints/src/match_on_vec_items.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e7138e06291d13163e8ab2a57fe2465451fac193/clippy_lints%2Fsrc%2Fmatch_on_vec_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7138e06291d13163e8ab2a57fe2465451fac193/clippy_lints%2Fsrc%2Fmatch_on_vec_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatch_on_vec_items.rs?ref=e7138e06291d13163e8ab2a57fe2465451fac193", "patch": "@@ -1,4 +1,4 @@\n-use crate::utils::{is_type_diagnostic_item, snippet, span_lint_and_sugg, walk_ptrs_ty};\n+use crate::utils::{is_type_diagnostic_item, match_type, snippet, span_lint_and_sugg, walk_ptrs_ty};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::{Expr, ExprKind, MatchSource};\n@@ -75,10 +75,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MatchOnVecItems {\n \n fn is_vec_indexing<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'tcx>) -> Option<&'tcx Expr<'tcx>> {\n     if_chain! {\n-        if let ExprKind::Index(ref array, _) = expr.kind;\n-        let ty = cx.tables.expr_ty(array);\n-        let ty = walk_ptrs_ty(ty);\n-        if is_type_diagnostic_item(cx, ty, sym!(vec_type));\n+        if let ExprKind::Index(ref array, ref index) = expr.kind;\n+        if is_vector(cx, array);\n+        if !is_full_range(cx, index);\n \n         then {\n             return Some(expr);\n@@ -87,3 +86,15 @@ fn is_vec_indexing<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr<'tcx>)\n \n     None\n }\n+\n+fn is_vector(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> bool {\n+    let ty = cx.tables.expr_ty(expr);\n+    let ty = walk_ptrs_ty(ty);\n+    is_type_diagnostic_item(cx, ty, sym!(vec_type))\n+}\n+\n+fn is_full_range(cx: &LateContext<'_, '_>, expr: &Expr<'_>) -> bool {\n+    let ty = cx.tables.expr_ty(expr);\n+    let ty = walk_ptrs_ty(ty);\n+    match_type(cx, ty, &[\"core\", \"ops\", \"range\", \"RangeFull\"])\n+}"}, {"sha": "30415e3b94dc4b1e95458eba5473d2cc8f4f7da1", "filename": "tests/ui/match_on_vec_items.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e7138e06291d13163e8ab2a57fe2465451fac193/tests%2Fui%2Fmatch_on_vec_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7138e06291d13163e8ab2a57fe2465451fac193/tests%2Fui%2Fmatch_on_vec_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch_on_vec_items.rs?ref=e7138e06291d13163e8ab2a57fe2465451fac193", "patch": "@@ -120,11 +120,33 @@ fn match_with_array() {\n     }\n }\n \n+fn match_with_endless_range() {\n+    let arr = vec![0, 1, 2, 3];\n+    let range = ..;\n+\n+    // Ok\n+    match arr[range] {\n+        [0, 1] => println!(\"0 1\"),\n+        [1, 2] => println!(\"1 2\"),\n+        [0, 1, 2, 3] => println!(\"0, 1, 2, 3\"),\n+        _ => {},\n+    }\n+\n+    // Ok\n+    match arr[..] {\n+        [0, 1] => println!(\"0 1\"),\n+        [1, 2] => println!(\"1 2\"),\n+        [0, 1, 2, 3] => println!(\"0, 1, 2, 3\"),\n+        _ => {},\n+    }\n+}\n+\n fn main() {\n     match_with_wildcard();\n     match_without_wildcard();\n     match_wildcard_and_action();\n     match_vec_ref();\n     match_with_get();\n     match_with_array();\n+    match_with_endless_range();\n }"}]}