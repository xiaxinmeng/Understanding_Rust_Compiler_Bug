{"sha": "555d5aed37bc62d3c4f953668c324505ed72e6f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1NWQ1YWVkMzdiYzYyZDNjNGY5NTM2NjhjMzI0NTA1ZWQ3MmU2Zjk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-15T23:23:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:41Z"}, "message": "rustdoc: Move markdown-writing functions into gen module", "tree": {"sha": "6e2548f12185ed3e370b93ac1dae4cecd9b1ecf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e2548f12185ed3e370b93ac1dae4cecd9b1ecf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/555d5aed37bc62d3c4f953668c324505ed72e6f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/555d5aed37bc62d3c4f953668c324505ed72e6f9", "html_url": "https://github.com/rust-lang/rust/commit/555d5aed37bc62d3c4f953668c324505ed72e6f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/555d5aed37bc62d3c4f953668c324505ed72e6f9/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "140fbd301962991afac2358e445b48b4f647ca43", "url": "https://api.github.com/repos/rust-lang/rust/commits/140fbd301962991afac2358e445b48b4f647ca43", "html_url": "https://github.com/rust-lang/rust/commit/140fbd301962991afac2358e445b48b4f647ca43"}], "stats": {"total": 94, "additions": 47, "deletions": 47}, "files": [{"sha": "e53bb15a9c726b429641a75ee2d847f8cd783a70", "filename": "src/rustdoc/gen.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/555d5aed37bc62d3c4f953668c324505ed72e6f9/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/555d5aed37bc62d3c4f953668c324505ed72e6f9/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=555d5aed37bc62d3c4f953668c324505ed72e6f9", "patch": "@@ -0,0 +1,43 @@\n+#[doc(\n+  brief = \"Generate a crate document header.\",\n+  args(rd = \"Rustdoc context\",\n+       name = \"Crate name\")\n+)]\n+fn write_header(rd: rustdoc, name: str) {\n+    rd.w.write_line(\"# Crate \" + name);\n+}\n+\n+#[doc(\n+  brief = \"Documents a single function.\",\n+  args(rd = \"Rustdoc context\",\n+       ident = \"Identifier for this function\",\n+       doc = \"Function docs extracted from attributes\",\n+       _fn = \"AST object representing this function\")\n+)]\n+fn write_fndoc(rd: rustdoc, ident: str, doc: doc::fndoc, decl: ast::fn_decl) {\n+    rd.w.write_line(\"## Function `\" + ident + \"`\");\n+    rd.w.write_line(doc.brief);\n+    alt doc.desc {\n+        some(_d) {\n+            rd.w.write_line(\"\");\n+            rd.w.write_line(_d);\n+            rd.w.write_line(\"\");\n+        }\n+        none. { }\n+    }\n+    for arg: ast::arg in decl.inputs {\n+        rd.w.write_str(\"### Argument `\" + arg.ident + \"`: \");\n+        rd.w.write_line(\"`\" + pprust::ty_to_str(arg.ty) + \"`\");\n+        alt doc.args.find(arg.ident) {\n+            some(_d) {\n+                rd.w.write_line(_d);\n+            }\n+            none. { }\n+        };\n+    }\n+    rd.w.write_line(\"### Returns `\" + pprust::ty_to_str(decl.output) + \"`\");\n+    alt doc.return {\n+        some(_r) { rd.w.write_line(_r); }\n+        none. { }\n+    }\n+}"}, {"sha": "3f482740852ed97c00e2f8364b2dd14a1f4d4062", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/555d5aed37bc62d3c4f953668c324505ed72e6f9/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/555d5aed37bc62d3c4f953668c324505ed72e6f9/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=555d5aed37bc62d3c4f953668c324505ed72e6f9", "patch": "@@ -8,4 +8,5 @@\n #[crate_type = \"bin\"];\n \n mod parse;\n-mod doc;\n\\ No newline at end of file\n+mod doc;\n+mod gen;\n\\ No newline at end of file"}, {"sha": "2e53155f06c4836e9e3366a1dbded23f8a10b123", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 2, "deletions": 46, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/555d5aed37bc62d3c4f953668c324505ed72e6f9/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/555d5aed37bc62d3c4f953668c324505ed72e6f9/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=555d5aed37bc62d3c4f953668c324505ed72e6f9", "patch": "@@ -22,41 +22,6 @@ type rustdoc = {\n     w: io::writer\n };\n \n-#[doc(\n-  brief = \"Documents a single function.\",\n-  args(rd = \"Rustdoc context\",\n-       ident = \"Identifier for this function\",\n-       doc = \"Function docs extracted from attributes\",\n-       _fn = \"AST object representing this function\")\n-)]\n-fn doc_fn(rd: rustdoc, ident: str, doc: doc::fndoc, decl: ast::fn_decl) {\n-    rd.w.write_line(\"## Function `\" + ident + \"`\");\n-    rd.w.write_line(doc.brief);\n-    alt doc.desc {\n-        some(_d) {\n-            rd.w.write_line(\"\");\n-            rd.w.write_line(_d);\n-            rd.w.write_line(\"\");\n-        }\n-        none. { }\n-    }\n-    for arg: ast::arg in decl.inputs {\n-        rd.w.write_str(\"### Argument `\" + arg.ident + \"`: \");\n-        rd.w.write_line(\"`\" + pprust::ty_to_str(arg.ty) + \"`\");\n-        alt doc.args.find(arg.ident) {\n-            some(_d) {\n-                rd.w.write_line(_d);\n-            }\n-            none. { }\n-        };\n-    }\n-    rd.w.write_line(\"### Returns `\" + pprust::ty_to_str(decl.output) + \"`\");\n-    alt doc.return {\n-        some(_r) { rd.w.write_line(_r); }\n-        none. { }\n-    }\n-}\n-\n #[doc(\n   brief = \"Parses function docs from a complex #[doc] attribute.\",\n   desc = \"Supported attributes:\n@@ -152,7 +117,7 @@ fn doc_item(rd: rustdoc, item: @ast::item) {\n     alt item.node {\n         ast::item_const(ty, expr) { }\n         ast::item_fn(decl, _, _) {\n-            doc_fn(rd, item.ident, _fndoc0, decl);\n+            gen::write_fndoc(rd, item.ident, _fndoc0, decl);\n         }\n         ast::item_mod(_mod) { }\n         ast::item_ty(ty, typarams) { }\n@@ -161,15 +126,6 @@ fn doc_item(rd: rustdoc, item: @ast::item) {\n     };\n }\n \n-#[doc(\n-  brief = \"Generate a crate document header.\",\n-  args(rd = \"Rustdoc context\",\n-       name = \"Crate name\")\n-)]\n-fn doc_header(rd: rustdoc, name: str) {\n-    rd.w.write_line(\"# Crate \" + name);\n-}\n-\n #[doc(\n   brief = \"Main function.\",\n   desc = \"Command-line arguments:\n@@ -188,7 +144,7 @@ fn main(argv: [str]) {\n \n     let w = io::stdout();\n     let rd = { ps: pprust::rust_printer(w), w: w };\n-    doc_header(rd, argv[1]);\n+    gen::write_header(rd, argv[1]);\n \n     let v = visit::mk_simple_visitor(@{\n         visit_item: bind doc_item(rd, _)"}]}