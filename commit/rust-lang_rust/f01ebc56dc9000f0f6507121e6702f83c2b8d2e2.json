{"sha": "f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMWViYzU2ZGM5MDAwZjBmNjUwNzEyMWU2NzAyZjgzYzJiOGQyZTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-02-24T04:56:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-02-24T04:56:02Z"}, "message": "Rollup merge of #58642 - tspiteri:intra-rustdoc-prim-method, r=GuillaumeGomez\n\nrustdoc: support methods on primitives in intra-doc links\n\nFixes #58598.", "tree": {"sha": "7834d105ea47e53e915001dd824573f74ccffb04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7834d105ea47e53e915001dd824573f74ccffb04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcciPjCRBK7hj4Ov3rIwAAdHIIADHgfWcS7tI2KQcueUJypeN3\n2D8GTScsHhbFirci2sbanmtUNG7aOaLwl/7ooP0PEcfLUoUmxzF0NQLKYT4Q/wve\n/maiGST5eU+BMpq5vVIieVMtqoNE2Iz8o5s1Uj3F0/wDN2JQXHLSO7cqT09641QI\nAsPvqTKMAEpr2zcBebXa6UQz1+PBlTG4AUCEa5ElopKveWoh/cdtF8y21S4KHvI3\nS7u1kRepuwweCdMVwDmsbc90S2J21h8giCSTMNp8kcC5OJedXzDfdT7LKotkOS1n\nV0rPNpWWH//5AE+rzL+3pVPQ6H/kTIOYIC2YH5xxzlGBwh16gsVFfNwWA5v+2rU=\n=hCAn\n-----END PGP SIGNATURE-----\n", "payload": "tree 7834d105ea47e53e915001dd824573f74ccffb04\nparent 1082a292eafef01a24376b82be4dc875e595691e\nparent aa0fa752c455eca11db012be76caa94b15804350\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1550984162 +0100\ncommitter GitHub <noreply@github.com> 1550984162 +0100\n\nRollup merge of #58642 - tspiteri:intra-rustdoc-prim-method, r=GuillaumeGomez\n\nrustdoc: support methods on primitives in intra-doc links\n\nFixes #58598.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "html_url": "https://github.com/rust-lang/rust/commit/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1082a292eafef01a24376b82be4dc875e595691e", "url": "https://api.github.com/repos/rust-lang/rust/commits/1082a292eafef01a24376b82be4dc875e595691e", "html_url": "https://github.com/rust-lang/rust/commit/1082a292eafef01a24376b82be4dc875e595691e"}, {"sha": "aa0fa752c455eca11db012be76caa94b15804350", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa0fa752c455eca11db012be76caa94b15804350", "html_url": "https://github.com/rust-lang/rust/commit/aa0fa752c455eca11db012be76caa94b15804350"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "03dff108770413c0959f4c24fbf8d6eb3a468bfc", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "patch": "@@ -976,11 +976,13 @@ impl Attributes {\n                                 \"https://doc.rust-lang.org/nightly\",\n                         };\n                         // This is a primitive so the url is done \"by hand\".\n+                        let tail = fragment.find('#').unwrap_or_else(|| fragment.len());\n                         Some((s.clone(),\n-                              format!(\"{}{}std/primitive.{}.html\",\n+                              format!(\"{}{}std/primitive.{}.html{}\",\n                                       url,\n                                       if !url.ends_with('/') { \"/\" } else { \"\" },\n-                                      fragment)))\n+                                      &fragment[..tail],\n+                                      &fragment[tail..])))\n                     } else {\n                         panic!(\"This isn't a primitive?!\");\n                     }"}, {"sha": "42fa3e2006b42320e3fcb19163ba30d7cc36ec09", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "patch": "@@ -1,6 +1,7 @@\n use rustc::lint as lint;\n use rustc::hir;\n use rustc::hir::def::Def;\n+use rustc::hir::def_id::DefId;\n use rustc::ty;\n use syntax;\n use syntax::ast::{self, Ident, NodeId};\n@@ -126,6 +127,17 @@ impl<'a, 'tcx, 'rcx> LinkCollector<'a, 'tcx, 'rcx> {\n                     path = name.clone();\n                 }\n             }\n+            if let Some(prim) = is_primitive(&path, false) {\n+                let did = primitive_impl(cx, &path).ok_or(())?;\n+                return cx.tcx.associated_items(did)\n+                    .find(|item| item.ident.name == item_name)\n+                    .and_then(|item| match item.kind {\n+                        ty::AssociatedKind::Method => Some(\"method\"),\n+                        _ => None,\n+                    })\n+                    .map(|out| (prim, Some(format!(\"{}#{}.{}\", path, out, item_name))))\n+                    .ok_or(());\n+            }\n \n             // FIXME: `with_scope` requires the `NodeId` of a module.\n             let ty = cx.resolver.borrow_mut()\n@@ -589,3 +601,26 @@ fn is_primitive(path_str: &str, is_val: bool) -> Option<Def> {\n         PRIMITIVES.iter().find(|x| x.0 == path_str).map(|x| x.1)\n     }\n }\n+\n+fn primitive_impl(cx: &DocContext<'_, '_, '_>, path_str: &str) -> Option<DefId> {\n+    let tcx = cx.tcx;\n+    match path_str {\n+        \"u8\" => tcx.lang_items().u8_impl(),\n+        \"u16\" => tcx.lang_items().u16_impl(),\n+        \"u32\" => tcx.lang_items().u32_impl(),\n+        \"u64\" => tcx.lang_items().u64_impl(),\n+        \"u128\" => tcx.lang_items().u128_impl(),\n+        \"usize\" => tcx.lang_items().usize_impl(),\n+        \"i8\" => tcx.lang_items().i8_impl(),\n+        \"i16\" => tcx.lang_items().i16_impl(),\n+        \"i32\" => tcx.lang_items().i32_impl(),\n+        \"i64\" => tcx.lang_items().i64_impl(),\n+        \"i128\" => tcx.lang_items().i128_impl(),\n+        \"isize\" => tcx.lang_items().isize_impl(),\n+        \"f32\" => tcx.lang_items().f32_impl(),\n+        \"f64\" => tcx.lang_items().f64_impl(),\n+        \"str\" => tcx.lang_items().str_impl(),\n+        \"char\" => tcx.lang_items().char_impl(),\n+        _ => None,\n+    }\n+}"}, {"sha": "af0426b22c557adf233f3db8c3b769be42ac7ef2", "filename": "src/test/rustdoc/intra-link-prim-methods.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f01ebc56dc9000f0f6507121e6702f83c2b8d2e2/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-methods.rs?ref=f01ebc56dc9000f0f6507121e6702f83c2b8d2e2", "patch": "@@ -0,0 +1,3 @@\n+#![deny(intra_doc_link_resolution_failure)]\n+\n+//! A [`char`] and its [`char::len_utf8`]."}]}