{"sha": "8f921502bdd37aa00f78ee0ae93d25443722f715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmOTIxNTAyYmRkMzdhYTAwZjc4ZWUwYWU5M2QyNTQ0MzcyMmY3MTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-23T09:24:50Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-02-23T19:43:56Z"}, "message": "Rollup merge of #22667 - dotdash:retslot_cast.rs, r=huonw\n\n We already do this for the function arguments, but miss it for the\nretslot pointer, which can lead to LLVM assertions because the retslot\nhas the wrong type.\n\nFixes #22663", "tree": {"sha": "9b042998dd0f64b082d33aa6a7a5d07b6808d4ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b042998dd0f64b082d33aa6a7a5d07b6808d4ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f921502bdd37aa00f78ee0ae93d25443722f715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f921502bdd37aa00f78ee0ae93d25443722f715", "html_url": "https://github.com/rust-lang/rust/commit/8f921502bdd37aa00f78ee0ae93d25443722f715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f921502bdd37aa00f78ee0ae93d25443722f715/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a41536462af8bdf58950238c101a5ffd11267f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a41536462af8bdf58950238c101a5ffd11267f6", "html_url": "https://github.com/rust-lang/rust/commit/5a41536462af8bdf58950238c101a5ffd11267f6"}, {"sha": "b593c60c33b5ac0f4b8b4bffdbfb54ed538a5659", "url": "https://api.github.com/repos/rust-lang/rust/commits/b593c60c33b5ac0f4b8b4bffdbfb54ed538a5659", "html_url": "https://github.com/rust-lang/rust/commit/b593c60c33b5ac0f4b8b4bffdbfb54ed538a5659"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "25568db814824da35738eaa01acc4b99b2e61cd6", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8f921502bdd37aa00f78ee0ae93d25443722f715/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f921502bdd37aa00f78ee0ae93d25443722f715/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=8f921502bdd37aa00f78ee0ae93d25443722f715", "patch": "@@ -765,8 +765,16 @@ pub fn trans_call_inner<'a, 'blk, 'tcx, F>(bcx: Block<'blk, 'tcx>,\n     if is_rust_fn {\n         let mut llargs = Vec::new();\n \n-        if let (ty::FnConverging(ret_ty), Some(llretslot)) = (ret_ty, opt_llretslot) {\n+        if let (ty::FnConverging(ret_ty), Some(mut llretslot)) = (ret_ty, opt_llretslot) {\n             if type_of::return_uses_outptr(ccx, ret_ty) {\n+                let llformal_ret_ty = type_of::type_of(ccx, ret_ty).ptr_to();\n+                let llret_ty = common::val_ty(llretslot);\n+                if llformal_ret_ty != llret_ty {\n+                    // this could happen due to e.g. subtyping\n+                    debug!(\"casting actual return type ({}) to match formal ({})\",\n+                        bcx.llty_str(llret_ty), bcx.llty_str(llformal_ret_ty));\n+                    llretslot = PointerCast(bcx, llretslot, llformal_ret_ty);\n+                }\n                 llargs.push(llretslot);\n             }\n         }"}, {"sha": "fafae0cb705a891e3e89f40fe2abc91d01e8e583", "filename": "src/test/compile-fail/retslot-cast.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/8f921502bdd37aa00f78ee0ae93d25443722f715/src%2Ftest%2Fcompile-fail%2Fretslot-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f921502bdd37aa00f78ee0ae93d25443722f715/src%2Ftest%2Fcompile-fail%2Fretslot-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fretslot-cast.rs?ref=8f921502bdd37aa00f78ee0ae93d25443722f715", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+#![allow(warnings)]\n+\n+pub fn fail(x: Option<& (Iterator+Send)>) -> Option<&Iterator> {\n+    // This call used to trigger an LLVM assertion because the return slot had type\n+    // \"Option<&Iterator>\"* instead of \"Option<&(Iterator+Send)>\"*\n+    inner(x)\n+}\n+\n+pub fn inner(x: Option<& (Iterator+Send)>) -> Option<&(Iterator+Send)> {\n+    x\n+}\n+\n+#[rustc_error]\n+fn main() {} //~ ERROR compilation successful"}]}