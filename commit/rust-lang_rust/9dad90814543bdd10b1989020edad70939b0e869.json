{"sha": "9dad90814543bdd10b1989020edad70939b0e869", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkYWQ5MDgxNDU0M2JkZDEwYjE5ODkwMjBlZGFkNzA5MzliMGU4Njk=", "commit": {"author": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-09-14T21:42:56Z"}, "committer": {"name": "Eric Huss", "email": "eric@huss.org", "date": "2020-09-14T21:42:56Z"}, "message": "Fix generating rustc docs with non-default lib directory.", "tree": {"sha": "877b7db4441339f82544f882c9fac18ad9994624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/877b7db4441339f82544f882c9fac18ad9994624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dad90814543bdd10b1989020edad70939b0e869", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dad90814543bdd10b1989020edad70939b0e869", "html_url": "https://github.com/rust-lang/rust/commit/9dad90814543bdd10b1989020edad70939b0e869", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dad90814543bdd10b1989020edad70939b0e869/comments", "author": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ehuss", "id": 43198, "node_id": "MDQ6VXNlcjQzMTk4", "avatar_url": "https://avatars.githubusercontent.com/u/43198?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ehuss", "html_url": "https://github.com/ehuss", "followers_url": "https://api.github.com/users/ehuss/followers", "following_url": "https://api.github.com/users/ehuss/following{/other_user}", "gists_url": "https://api.github.com/users/ehuss/gists{/gist_id}", "starred_url": "https://api.github.com/users/ehuss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ehuss/subscriptions", "organizations_url": "https://api.github.com/users/ehuss/orgs", "repos_url": "https://api.github.com/users/ehuss/repos", "events_url": "https://api.github.com/users/ehuss/events{/privacy}", "received_events_url": "https://api.github.com/users/ehuss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32efcfca2fece73a69efcedd1c78f45b0bbcb39c", "url": "https://api.github.com/repos/rust-lang/rust/commits/32efcfca2fece73a69efcedd1c78f45b0bbcb39c", "html_url": "https://github.com/rust-lang/rust/commit/32efcfca2fece73a69efcedd1c78f45b0bbcb39c"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "53560c9deb6c20f5a5a14029911e89408a93d858", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9dad90814543bdd10b1989020edad70939b0e869/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dad90814543bdd10b1989020edad70939b0e869/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=9dad90814543bdd10b1989020edad70939b0e869", "patch": "@@ -710,15 +710,15 @@ impl<'a> Builder<'a> {\n \n     /// Adds the compiler's directory of dynamic libraries to `cmd`'s dynamic\n     /// library lookup path.\n-    pub fn add_rustc_lib_path(&self, compiler: Compiler, cmd: &mut Cargo) {\n+    pub fn add_rustc_lib_path(&self, compiler: Compiler, cmd: &mut Command) {\n         // Windows doesn't need dylib path munging because the dlls for the\n         // compiler live next to the compiler and the system will find them\n         // automatically.\n         if cfg!(windows) {\n             return;\n         }\n \n-        add_dylib_path(vec![self.rustc_libdir(compiler)], &mut cmd.command);\n+        add_dylib_path(vec![self.rustc_libdir(compiler)], cmd);\n     }\n \n     /// Gets a path to the compiler specified.\n@@ -1515,6 +1515,10 @@ impl Cargo {\n         self.command.env(key.as_ref(), value.as_ref());\n         self\n     }\n+\n+    pub fn add_rustc_lib_path(&mut self, builder: &Builder<'_>, compiler: Compiler) {\n+        builder.add_rustc_lib_path(compiler, &mut self.command);\n+    }\n }\n \n impl From<Cargo> for Command {"}, {"sha": "f90e76a4f4ea68f8a8ee331a125bc9c5c0f56f3c", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9dad90814543bdd10b1989020edad70939b0e869/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dad90814543bdd10b1989020edad70939b0e869/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=9dad90814543bdd10b1989020edad70939b0e869", "patch": "@@ -766,6 +766,10 @@ impl Step for RustcBook {\n         if builder.config.verbose() {\n             cmd.arg(\"--verbose\");\n         }\n+        // If the lib directories are in an unusual location (changed in\n+        // config.toml), then this needs to explicitly update the dylib search\n+        // path.\n+        builder.add_rustc_lib_path(self.compiler, &mut cmd);\n         builder.run(&mut cmd);\n         // Run rustbook/mdbook to generate the HTML pages.\n         builder.ensure(RustbookSrc {"}, {"sha": "ba5f75c49ac7769e2de63b3686afc88ec98ee89e", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9dad90814543bdd10b1989020edad70939b0e869/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dad90814543bdd10b1989020edad70939b0e869/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=9dad90814543bdd10b1989020edad70939b0e869", "patch": "@@ -270,7 +270,7 @@ impl Step for Rls {\n             &[],\n         );\n \n-        builder.add_rustc_lib_path(compiler, &mut cargo);\n+        cargo.add_rustc_lib_path(builder, compiler);\n         cargo.arg(\"--\").args(builder.config.cmd.test_args());\n \n         if try_run(builder, &mut cargo.into()) {\n@@ -328,7 +328,7 @@ impl Step for Rustfmt {\n         t!(fs::create_dir_all(&dir));\n         cargo.env(\"RUSTFMT_TEST_DIR\", dir);\n \n-        builder.add_rustc_lib_path(compiler, &mut cargo);\n+        cargo.add_rustc_lib_path(builder, compiler);\n \n         if try_run(builder, &mut cargo.into()) {\n             builder.save_toolstate(\"rustfmt\", ToolState::TestPass);\n@@ -449,7 +449,7 @@ impl Step for Miri {\n \n             cargo.arg(\"--\").args(builder.config.cmd.test_args());\n \n-            builder.add_rustc_lib_path(compiler, &mut cargo);\n+            cargo.add_rustc_lib_path(builder, compiler);\n \n             if !try_run(builder, &mut cargo.into()) {\n                 return;\n@@ -554,7 +554,7 @@ impl Step for Clippy {\n \n         cargo.arg(\"--\").args(builder.config.cmd.test_args());\n \n-        builder.add_rustc_lib_path(compiler, &mut cargo);\n+        cargo.add_rustc_lib_path(builder, compiler);\n \n         builder.run(&mut cargo.into());\n     }"}]}