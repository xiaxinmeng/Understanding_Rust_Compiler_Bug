{"sha": "3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "node_id": "C_kwDOAAsO6NoAKDNkNDQ2N2RmY2M1MTJmY2IyZGMyNDU0YzljZjc3YzIzZmYzZGUzNDM", "commit": {"author": {"name": "Jubilee", "email": "46493976+workingjubilee@users.noreply.github.com", "date": "2021-10-04T20:58:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-10-04T20:58:16Z"}, "message": "Rollup merge of #89500 - FabianWolff:issue-87308, r=petrochenkov\n\nFix ICE with buffered lint referring to AST node deleted by everybody_loops\n\nFixes #87308. Note the following comment:\nhttps://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_lint/src/early.rs#L415-L417\n\nAs it turns out, this is not _always_ a bug, because `-Zunpretty=everybody_loops` causes a lot of AST nodes to be deleted, and thus some buffered lints will refer to non-existent node ids. To fix this, my changes simply ignore buffered lints if `-Zunpretty=everybody_loops` is enabled, which, from my understanding, shouldn't be a big issue because it only affects pretty-printing. Of course, a more elegant solution would only ignore buffered lints that actually point at deleted node ids, but I haven't figured out an easy way of achieving this.\n\nFor the concrete example in #87308, the buffered lint is created [here](https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_expand/src/mbe/macro_rules.rs#L145-L151) with the `lint_node_id` from [here](https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_expand/src/mbe/macro_rules.rs#L319), i.e. it points at the macro _expansion_, which then gets deleted by `ReplaceBodyWithLoop` [here](https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_interface/src/passes.rs#L377).", "tree": {"sha": "c48dd998c239d821f01baa71d55b557ec83d2a44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c48dd998c239d821f01baa71d55b557ec83d2a44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhW2rpCRBK7hj4Ov3rIwAARZ8IAFxp3d0GrfRFguqiDU7eeNYN\n4XgtJUsa8FEPTy4MN2QZIbZVwpJDI/zAeTefjgWNF1S3SL6GLdjABNfTQYV1Eh14\nMBQL2QyprxVwlcZp2ZTi3wtsJwXwrPxHHWv+Lp4ePkWpcmMasiqNTcMCj+SGZDYh\nf1dyID1632fW0EGloHWd3zeq03HjrWvwaPwsdgNAaHMfibugL52AJ9ZqfoXdmaL+\nuhjNwBQhnAIgdZipPFKSolIYkMTI++0P4iuXILD9UtrCzWisxOkEM9bjw2WWrOXu\nwwd35Le7H+7J0E0ptPC8wHAhncTNt9Zi+rbDgkjUr2sNvRFZFUM2OJjEmByU9m8=\n=Y9Ol\n-----END PGP SIGNATURE-----\n", "payload": "tree c48dd998c239d821f01baa71d55b557ec83d2a44\nparent 5352e17df3b2500b4cf92ee86c7dbf002018600f\nparent a28a78f247a0f02521e97eabf98e790085a4a753\nauthor Jubilee <46493976+workingjubilee@users.noreply.github.com> 1633381096 -0700\ncommitter GitHub <noreply@github.com> 1633381096 -0700\n\nRollup merge of #89500 - FabianWolff:issue-87308, r=petrochenkov\n\nFix ICE with buffered lint referring to AST node deleted by everybody_loops\n\nFixes #87308. Note the following comment:\nhttps://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_lint/src/early.rs#L415-L417\n\nAs it turns out, this is not _always_ a bug, because `-Zunpretty=everybody_loops` causes a lot of AST nodes to be deleted, and thus some buffered lints will refer to non-existent node ids. To fix this, my changes simply ignore buffered lints if `-Zunpretty=everybody_loops` is enabled, which, from my understanding, shouldn't be a big issue because it only affects pretty-printing. Of course, a more elegant solution would only ignore buffered lints that actually point at deleted node ids, but I haven't figured out an easy way of achieving this.\n\nFor the concrete example in #87308, the buffered lint is created [here](https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_expand/src/mbe/macro_rules.rs#L145-L151) with the `lint_node_id` from [here](https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_expand/src/mbe/macro_rules.rs#L319), i.e. it points at the macro _expansion_, which then gets deleted by `ReplaceBodyWithLoop` [here](https://github.com/rust-lang/rust/blob/08759c691e2e9799a3c6780ffdf910240ebd4a6b/compiler/rustc_interface/src/passes.rs#L377).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "html_url": "https://github.com/rust-lang/rust/commit/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/comments", "author": {"login": "workingjubilee", "id": 46493976, "node_id": "MDQ6VXNlcjQ2NDkzOTc2", "avatar_url": "https://avatars.githubusercontent.com/u/46493976?v=4", "gravatar_id": "", "url": "https://api.github.com/users/workingjubilee", "html_url": "https://github.com/workingjubilee", "followers_url": "https://api.github.com/users/workingjubilee/followers", "following_url": "https://api.github.com/users/workingjubilee/following{/other_user}", "gists_url": "https://api.github.com/users/workingjubilee/gists{/gist_id}", "starred_url": "https://api.github.com/users/workingjubilee/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/workingjubilee/subscriptions", "organizations_url": "https://api.github.com/users/workingjubilee/orgs", "repos_url": "https://api.github.com/users/workingjubilee/repos", "events_url": "https://api.github.com/users/workingjubilee/events{/privacy}", "received_events_url": "https://api.github.com/users/workingjubilee/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5352e17df3b2500b4cf92ee86c7dbf002018600f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5352e17df3b2500b4cf92ee86c7dbf002018600f", "html_url": "https://github.com/rust-lang/rust/commit/5352e17df3b2500b4cf92ee86c7dbf002018600f"}, {"sha": "a28a78f247a0f02521e97eabf98e790085a4a753", "url": "https://api.github.com/repos/rust-lang/rust/commits/a28a78f247a0f02521e97eabf98e790085a4a753", "html_url": "https://github.com/rust-lang/rust/commit/a28a78f247a0f02521e97eabf98e790085a4a753"}], "stats": {"total": 44, "additions": 38, "deletions": 6}, "files": [{"sha": "2d12ea94a0bbf87d63f7331b5ee182eed77004bb", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "patch": "@@ -437,12 +437,18 @@ pub fn configure_and_expand(\n     });\n \n     // Add all buffered lints from the `ParseSess` to the `Session`.\n-    sess.parse_sess.buffered_lints.with_lock(|buffered_lints| {\n-        info!(\"{} parse sess buffered_lints\", buffered_lints.len());\n-        for early_lint in buffered_lints.drain(..) {\n-            resolver.lint_buffer().add_early_lint(early_lint);\n-        }\n-    });\n+    // The ReplaceBodyWithLoop pass may have deleted some AST nodes, potentially\n+    // causing a delay_span_bug later if a buffered lint refers to such a deleted\n+    // AST node (issue #87308). Since everybody_loops is for pretty-printing only,\n+    // anyway, we simply skip all buffered lints here.\n+    if !matches!(sess.opts.pretty, Some(PpMode::Source(PpSourceMode::EveryBodyLoops))) {\n+        sess.parse_sess.buffered_lints.with_lock(|buffered_lints| {\n+            info!(\"{} parse sess buffered_lints\", buffered_lints.len());\n+            for early_lint in buffered_lints.drain(..) {\n+                resolver.lint_buffer().add_early_lint(early_lint);\n+            }\n+        });\n+    }\n \n     Ok(krate)\n }"}, {"sha": "48fbb2a0139f050abd67bea238904063c00e3eae", "filename": "src/test/ui/lint/issue-87308.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/src%2Ftest%2Fui%2Flint%2Fissue-87308.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/src%2Ftest%2Fui%2Flint%2Fissue-87308.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-87308.rs?ref=3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "patch": "@@ -0,0 +1,12 @@\n+// Regression test for issue #87308.\n+\n+// compile-flags: -Zunpretty=everybody_loops\n+// check-pass\n+\n+macro_rules! foo {\n+    () => { break 'x; }\n+}\n+\n+pub fn main() {\n+    'x: loop { foo!() }\n+}"}, {"sha": "68a076c93be614b0071e64e011bbee894f410401", "filename": "src/test/ui/lint/issue-87308.stdout", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/src%2Ftest%2Fui%2Flint%2Fissue-87308.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/3d4467dfcc512fcb2dc2454c9cf77c23ff3de343/src%2Ftest%2Fui%2Flint%2Fissue-87308.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-87308.stdout?ref=3d4467dfcc512fcb2dc2454c9cf77c23ff3de343", "patch": "@@ -0,0 +1,14 @@\n+#![feature(prelude_import)]\n+#![no_std]\n+#[prelude_import]\n+use ::std::prelude::rust_2015::*;\n+#[macro_use]\n+extern crate std;\n+// Regression test for issue #87308.\n+\n+// compile-flags: -Zunpretty=everybody_loops\n+// check-pass\n+\n+macro_rules! foo { () => { break 'x ; } }\n+\n+pub fn main() { loop { } }"}]}