{"sha": "24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "node_id": "C_kwDOAAsO6NoAKDI0YWRiMWY2OGNiNWNlN2ZhZThjYjlhNGIwMWFhYjcyOGQ4MjdmYTI", "commit": {"author": {"name": "Sameer Puri", "email": "sameer@dropbox.com", "date": "2023-04-28T07:53:09Z"}, "committer": {"name": "Sameer Puri", "email": "sameer@dropbox.com", "date": "2023-04-28T15:32:46Z"}, "message": "include source error for LoadLibraryExW", "tree": {"sha": "66b9355e323f0b092c896a6d2ff097341457c046", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66b9355e323f0b092c896a6d2ff097341457c046"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "html_url": "https://github.com/rust-lang/rust/commit/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2/comments", "author": null, "committer": null, "parents": [{"sha": "033aa092ab23ba14cdad27073c5e37ba0eddb428", "url": "https://api.github.com/repos/rust-lang/rust/commits/033aa092ab23ba14cdad27073c5e37ba0eddb428", "html_url": "https://github.com/rust-lang/rust/commit/033aa092ab23ba14cdad27073c5e37ba0eddb428"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "01b69966ca92c643ba9899128031895976df6e07", "filename": "compiler/rustc_metadata/src/creader.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Fcreader.rs?ref=24adb1f68cb5ce7fae8cb9a4b01aab728d827fa2", "patch": "@@ -27,6 +27,7 @@ use rustc_span::{Span, DUMMY_SP};\n use rustc_target::spec::{PanicStrategy, TargetTriple};\n \n use proc_macro::bridge::client::ProcMacro;\n+use std::error::Error;\n use std::ops::Fn;\n use std::path::Path;\n use std::time::Duration;\n@@ -1094,5 +1095,12 @@ fn load_dylib(path: &Path, max_attempts: usize) -> Result<libloading::Library, S\n     }\n \n     debug!(\"Failed to load proc-macro `{}` even after {} attempts.\", path.display(), max_attempts);\n-    Err(format!(\"{} (retried {} times)\", last_error.unwrap(), max_attempts))\n+\n+    let last_error = last_error.unwrap();\n+    let message = if let Some(src) = last_error.source() {\n+        format!(\"{last_error} ({src}) (retried {max_attempts} times)\")\n+    } else {\n+        format!(\"{last_error} (retried {max_attempts} times)\")\n+    };\n+    Err(message)\n }"}]}