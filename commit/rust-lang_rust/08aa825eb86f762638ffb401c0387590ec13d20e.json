{"sha": "08aa825eb86f762638ffb401c0387590ec13d20e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YWE4MjVlYjg2Zjc2MjYzOGZmYjQwMWMwMzg3NTkwZWMxM2QyMGU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-12-19T21:30:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-12-19T21:30:42Z"}, "message": "remove O(n^2) to O(n) behavior", "tree": {"sha": "83ea9cf170db4e3d9ba71aec8be7d88b5d4c9728", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/83ea9cf170db4e3d9ba71aec8be7d88b5d4c9728"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08aa825eb86f762638ffb401c0387590ec13d20e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08aa825eb86f762638ffb401c0387590ec13d20e", "html_url": "https://github.com/rust-lang/rust/commit/08aa825eb86f762638ffb401c0387590ec13d20e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08aa825eb86f762638ffb401c0387590ec13d20e/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2841bf3bc79bb866980c5aea55a96a3d1cdea2f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2841bf3bc79bb866980c5aea55a96a3d1cdea2f6", "html_url": "https://github.com/rust-lang/rust/commit/2841bf3bc79bb866980c5aea55a96a3d1cdea2f6"}], "stats": {"total": 31, "additions": 17, "deletions": 14}, "files": [{"sha": "846c0721ccbd3cd6c0efe242818c62d6b6cbdee9", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 17, "deletions": 14, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/08aa825eb86f762638ffb401c0387590ec13d20e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08aa825eb86f762638ffb401c0387590ec13d20e/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=08aa825eb86f762638ffb401c0387590ec13d20e", "patch": "@@ -2110,24 +2110,27 @@ fn item_trait(w: &mut fmt::Formatter, cx: &Context, it: &clean::Item,\n         <h2 id='implementors'>Implementors</h2>\n         <ul class='item-list' id='implementors-list'>\n     \")?;\n+    let mut implementor_count: FxHashMap<String, usize> = FxHashMap();\n+    for (_, implementors) in cache.implementors.iter() {\n+        for implementor in implementors {\n+            if let clean::Type::ResolvedPath {ref path, ..} = implementor.impl_.for_ {\n+                *implementor_count.entry(path.last_name()).or_insert(0) += 1;\n+            }\n+        }\n+    }\n     if let Some(implementors) = cache.implementors.get(&it.def_id) {\n-        for k in implementors.iter() {\n+        for implementor in implementors.iter() {\n             write!(w, \"<li><code>\")?;\n             // If there's already another implementor that has the same abbridged name, use the\n             // full path, for example in `std::iter::ExactSizeIterator`\n-            let mut dissambiguate = false;\n-            for l in implementors.iter() {\n-                match (k.impl_.for_.clone(), l.impl_.for_.clone()) {\n-                    (clean::Type::ResolvedPath {path: path_a, ..},\n-                     clean::Type::ResolvedPath {path: path_b, ..}) => {\n-                        if k.def_id != l.def_id && path_a.last_name() == path_b.last_name() {\n-                            dissambiguate = true;\n-                        }\n-                    }\n-                    _ => (),\n-                }\n-            }\n-            fmt_impl_for_trait_page(&k.impl_, w, dissambiguate)?;\n+            let dissambiguate = if let clean::Type::ResolvedPath {\n+                ref path, ..\n+            } = implementor.impl_.for_ {\n+                *implementor_count.get(&path.last_name()).unwrap_or(&0) > 1\n+            } else {\n+                false\n+            };\n+            fmt_impl_for_trait_page(&implementor.impl_, w, dissambiguate)?;\n             writeln!(w, \"</code></li>\")?;\n         }\n     }"}]}