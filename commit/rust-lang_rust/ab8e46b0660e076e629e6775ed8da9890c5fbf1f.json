{"sha": "ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiOGU0NmIwNjYwZTA3NmU2MjllNjc3NWVkOGRhOTg5MGM1ZmJmMWY=", "commit": {"author": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-13T19:10:32Z"}, "committer": {"name": "John Clements", "email": "clements@racket-lang.org", "date": "2013-03-20T20:27:45Z"}, "message": "add assert_eq! macro\n\nthe assert_eq! macro compares its arguments and fails if they're not\nequal. It's more informative than fail_unless!, because it explicitly\nwrites the given and expected arguments on failure.", "tree": {"sha": "75200518eac0c8128d10fae12cbaa556a2c2f2ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75200518eac0c8128d10fae12cbaa556a2c2f2ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "html_url": "https://github.com/rust-lang/rust/commit/ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/comments", "author": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbclements", "id": 226617, "node_id": "MDQ6VXNlcjIyNjYxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/226617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbclements", "html_url": "https://github.com/jbclements", "followers_url": "https://api.github.com/users/jbclements/followers", "following_url": "https://api.github.com/users/jbclements/following{/other_user}", "gists_url": "https://api.github.com/users/jbclements/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbclements/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbclements/subscriptions", "organizations_url": "https://api.github.com/users/jbclements/orgs", "repos_url": "https://api.github.com/users/jbclements/repos", "events_url": "https://api.github.com/users/jbclements/events{/privacy}", "received_events_url": "https://api.github.com/users/jbclements/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0847d52a8677a39525b7cf7a09571851b6deb8b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0847d52a8677a39525b7cf7a09571851b6deb8b9", "html_url": "https://github.com/rust-lang/rust/commit/0847d52a8677a39525b7cf7a09571851b6deb8b9"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "030cdab7951c14aa908ef34ed709416cd5ce8abd", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "patch": "@@ -464,6 +464,15 @@ pub fn core_macros() -> ~str {\n         }\n     )\n \n+    macro_rules! assert_eq (\n+        ($given:expr , $expected:expr) =>\n+        ({let given_val = $given;\n+          let expected_val = $expected;\n+          // check both directions of equality....\n+          if !((given_val == expected_val) && (expected_val == given_val)) {\n+            fail!(fmt!(\\\"expected: %?, given: %?\\\",expected_val,given_val));\n+        }}))\n+\n     macro_rules! condition (\n \n         { $c:ident: $in:ty -> $out:ty; } => {\n@@ -481,6 +490,7 @@ pub fn core_macros() -> ~str {\n         }\n     )\n \n+\n }\";\n }\n "}, {"sha": "a5f438903ce9b75540147e76d9f8ce3316429fb8", "filename": "src/test/run-fail/assert-eq-macro-fail.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-eq-macro-fail.rs?ref=ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "patch": "@@ -0,0 +1,8 @@\n+// error-pattern:expected: 15, given: 14\n+\n+#[deriving_eq]\n+struct Point { x : int }\n+\n+fn main() {\n+    assert_eq!(14,15);\n+}"}, {"sha": "c929b5c6246e9c75ed166de6146f5eafc703b7d8", "filename": "src/test/run-pass/assert-eq-macro-success.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/src%2Ftest%2Frun-pass%2Fassert-eq-macro-success.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab8e46b0660e076e629e6775ed8da9890c5fbf1f/src%2Ftest%2Frun-pass%2Fassert-eq-macro-success.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassert-eq-macro-success.rs?ref=ab8e46b0660e076e629e6775ed8da9890c5fbf1f", "patch": "@@ -0,0 +1,10 @@\n+#[deriving_eq]\n+struct Point { x : int }\n+\n+fn main() {\n+    assert_eq!(14,14);\n+    assert_eq!(~\"abc\",~\"abc\");\n+    assert_eq!(~Point{x:34},~Point{x:34});\n+    assert_eq!(&Point{x:34},&Point{x:34});\n+    assert_eq!(@Point{x:34},@Point{x:34});\n+}"}]}