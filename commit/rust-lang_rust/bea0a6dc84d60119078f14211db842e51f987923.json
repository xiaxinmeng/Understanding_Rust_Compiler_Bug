{"sha": "bea0a6dc84d60119078f14211db842e51f987923", "node_id": "C_kwDOAAsO6NoAKGJlYTBhNmRjODRkNjAxMTkwNzhmMTQyMTFkYjg0MmU1MWY5ODc5MjM", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-07-04T19:30:31Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-09-13T15:44:53Z"}, "message": "address review", "tree": {"sha": "b446a2a7b4180ed628b898adcae8ed84cad81afe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b446a2a7b4180ed628b898adcae8ed84cad81afe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bea0a6dc84d60119078f14211db842e51f987923", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bea0a6dc84d60119078f14211db842e51f987923", "html_url": "https://github.com/rust-lang/rust/commit/bea0a6dc84d60119078f14211db842e51f987923", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bea0a6dc84d60119078f14211db842e51f987923/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "372c4fd67fc41f0a06b1e6d804e8345db508761a", "url": "https://api.github.com/repos/rust-lang/rust/commits/372c4fd67fc41f0a06b1e6d804e8345db508761a", "html_url": "https://github.com/rust-lang/rust/commit/372c4fd67fc41f0a06b1e6d804e8345db508761a"}], "stats": {"total": 18, "additions": 5, "deletions": 13}, "files": [{"sha": "5efb716429fbd6c0de7ae29700597d1db5d2d412", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=bea0a6dc84d60119078f14211db842e51f987923", "patch": "@@ -1819,7 +1819,7 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n                     _ => None,\n                 },\n                 ConstantKind::Unevaluated(uv, _) => Some(uv),\n-                _ => None,\n+                ConstantKind::Val(..) => None,\n             };\n \n             if let Some(uv) = maybe_uneval {"}, {"sha": "738b62e3cb809bb620b878ad24fc4abf650d0c22", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=bea0a6dc84d60119078f14211db842e51f987923", "patch": "@@ -2062,7 +2062,7 @@ pub enum ConstantKind<'tcx> {\n     /// This constant came from the type system\n     Ty(ty::Const<'tcx>),\n \n-    /// An unevaluated constant that cannot go back into the type system.\n+    /// An unevaluated mir constant which is not part of the type system.\n     Unevaluated(ty::Unevaluated<'tcx, Option<Promoted>>, Ty<'tcx>),\n \n     /// This constant cannot go back into the type system, as it represents"}, {"sha": "d9b24566bf14a2ca64880f168ad2d823d94ae72b", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=bea0a6dc84d60119078f14211db842e51f987923", "patch": "@@ -1077,20 +1077,12 @@ macro_rules! visit_place_fns {\n                         location,\n                     );\n \n-                    if new_local == local {\n-                        None\n-                    } else {\n-                        Some(PlaceElem::Index(new_local))\n-                    }\n+                    if new_local == local { None } else { Some(PlaceElem::Index(new_local)) }\n                 }\n                 PlaceElem::Field(field, ty) => {\n                     let mut new_ty = ty;\n                     self.visit_ty(&mut new_ty, TyContext::Location(location));\n-                    if ty != new_ty {\n-                        Some(PlaceElem::Field(field, new_ty))\n-                    } else {\n-                        None\n-                    }\n+                    if ty != new_ty { Some(PlaceElem::Field(field, new_ty)) } else { None }\n                 }\n                 PlaceElem::Deref\n                 | PlaceElem::ConstantIndex { .. }"}, {"sha": "072abe86008e8c3b3006e3a47639e6441de21206", "filename": "compiler/rustc_mir_transform/src/const_prop_lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bea0a6dc84d60119078f14211db842e51f987923/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop_lint.rs?ref=bea0a6dc84d60119078f14211db842e51f987923", "patch": "@@ -299,7 +299,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n                 let err = ConstEvalErr::new(&self.ecx, error, Some(c.span));\n                 if let Some(lint_root) = self.lint_root(source_info) {\n                     let lint_only = match c.literal {\n-                        ConstantKind::Ty(_) => c.literal.needs_subst(),\n+                        ConstantKind::Ty(ct) => ct.needs_subst(),\n                         ConstantKind::Unevaluated(\n                             ty::Unevaluated { def: _, substs: _, promoted: Some(_) },\n                             _,"}]}