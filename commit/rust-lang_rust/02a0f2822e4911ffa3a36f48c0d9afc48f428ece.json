{"sha": "02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYTBmMjgyMmU0OTExZmZhM2EzNmY0OGMwZDlhZmM0OGY0MjhlY2U=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-18T15:12:33Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@gmail", "date": "2013-07-25T17:47:03Z"}, "message": "debuginfo: Support for destructured function arguments.", "tree": {"sha": "42e395d7db514690d69564eb8e5e35a2a608f091", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42e395d7db514690d69564eb8e5e35a2a608f091"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "html_url": "https://github.com/rust-lang/rust/commit/02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9e51cef122bcdd50e4571649421e5ab7d99faeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9e51cef122bcdd50e4571649421e5ab7d99faeb", "html_url": "https://github.com/rust-lang/rust/commit/c9e51cef122bcdd50e4571649421e5ab7d99faeb"}], "stats": {"total": 436, "additions": 429, "deletions": 7}, "files": [{"sha": "9179a1fc9bea6ac626833bcd5ea5d13625a0c44b", "filename": "src/librustc/middle/trans/debuginfo.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fdebuginfo.rs?ref=02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "patch": "@@ -200,18 +200,16 @@ pub fn create_argument_metadata(bcx: @mut Block, arg: &ast::arg, span: span) {\n     let fcx = bcx.fcx;\n     let cx = fcx.ccx;\n \n-    if fcx.span.is_none() {\n-        return;\n-    }\n-\n-    if \"<intrinsic>\" == span_start(cx, span).file.name {\n+    if fcx.id == -1 ||\n+       fcx.span.is_none() ||\n+       \"<intrinsic>\" == span_start(cx, span).file.name {\n         return;\n     }\n \n     let def_map = cx.tcx.def_map;\n     let pattern = arg.pat;\n \n-    let mut argument_index = match dbg_cx(cx).argument_index_counters.find_copy(&arg.id) {\n+    let mut argument_index = match dbg_cx(cx).argument_index_counters.find_copy(&fcx.id) {\n         Some(value) => value,\n         None => 0\n     };\n@@ -266,7 +264,7 @@ pub fn create_argument_metadata(bcx: @mut Block, arg: &ast::arg, span: span) {\n         }\n     }\n \n-    dbg_cx(cx).argument_index_counters.insert(arg.id, argument_index);\n+    dbg_cx(cx).argument_index_counters.insert(fcx.id, argument_index);\n }\n \n /// Sets the current debug location at the beginning of the span"}, {"sha": "fe0d9a486bcfe3c91bb04a6d5ca188e1976cecf0", "filename": "src/test/debug-info/destructured-fn-argument.rs", "status": "added", "additions": 316, "deletions": 0, "changes": 316, "blob_url": "https://github.com/rust-lang/rust/blob/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fdestructured-fn-argument.rs?ref=02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "patch": "@@ -0,0 +1,316 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+\n+// debugger:finish\n+// debugger:print a\n+// check:$1 = 1\n+// debugger:print b\n+// check:$2 = false\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print a\n+// check:$3 = 2\n+// debugger:print b\n+// check:$4 = 3\n+// debugger:print c\n+// check:$5 = 4\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print a\n+// check:$6 = 5\n+// debugger:print b\n+// check:$7 = {6, 7}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print h\n+// check:$8 = 8\n+// debugger:print i\n+// check:$9 = {a = 9, b = 10}\n+// debugger:print j\n+// check:$10 = 11\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print k\n+// check:$11 = 12\n+// debugger:print l\n+// check:$12 = 13\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print m\n+// check:$13 = 14\n+// debugger:print n\n+// check:$14 = 16\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print o\n+// check:$15 = 18\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print p\n+// check:$16 = 19\n+// debugger:print q\n+// check:$17 = 20\n+// debugger:print r\n+// check:$18 = {a = 21, b = 22}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print s\n+// check:$19 = 24\n+// debugger:print t\n+// check:$20 = 23\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print u\n+// check:$21 = 25\n+// debugger:print v\n+// check:$22 = 26\n+// debugger:print w\n+// check:$23 = 27\n+// debugger:print x\n+// check:$24 = 28\n+// debugger:print y\n+// check:$25 = 29\n+// debugger:print z\n+// check:$26 = 30\n+// debugger:print ae\n+// check:$27 = 31\n+// debugger:print oe\n+// check:$28 = 32\n+// debugger:print ue\n+// check:$29 = 33\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print aa\n+// check:$30 = {34, 35}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print bb\n+// check:$31 = {36, 37}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print cc\n+// check:$32 = 38\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print dd\n+// check:$33 = {40, 41, 42}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print *ee\n+// check:$34 = {43, 44, 45}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print *ff\n+// check:$35 = 46\n+// debugger:print gg\n+// check:$36 = {47, 48}\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print *hh\n+// check:$37 = 50\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print ii\n+// check:$38 = 51\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print *jj\n+// check:$39 = 52\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print kk\n+// check:$40 = 53\n+// debugger:print ll\n+// check:$41 = 54\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print mm\n+// check:$42 = 55\n+// debugger:print *nn\n+// check:$43 = 56\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print oo\n+// check:$44 = 57\n+// debugger:print pp\n+// check:$45 = 58\n+// debugger:print qq\n+// check:$46 = 59\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print rr\n+// check:$47 = 60\n+// debugger:print ss\n+// check:$48 = 61\n+// debugger:print tt\n+// check:$49 = 62\n+// debugger:continue\n+\n+\n+struct Struct {\n+    a: i64,\n+    b: i32\n+}\n+\n+enum Univariant {\n+    Unit(i32)\n+}\n+\n+struct TupleStruct (float, int);\n+\n+\n+fn simple_tuple((a, b): (int, bool)) {\n+    zzz();\n+}\n+\n+fn nested_tuple((a, (b, c)): (int, (u16, u16))) {\n+    zzz();\n+}\n+\n+fn destructure_only_first_level((a, b): (int, (u32, u32))) {\n+    zzz();\n+}\n+\n+fn struct_as_tuple_element((h, i, j): (i16, Struct, i16)) {\n+    zzz();\n+}\n+\n+fn struct_pattern(Struct { a: k, b: l }: Struct) {\n+    zzz();\n+}\n+\n+fn ignored_tuple_element((m, _, n): (int, u16, i32)) {\n+    zzz();\n+}\n+\n+fn ignored_struct_field(Struct { b: o, _ }: Struct) {\n+    zzz();\n+}\n+\n+fn one_struct_destructured_one_not((Struct { a: p, b: q }, r): (Struct, Struct)) {\n+    zzz();\n+}\n+\n+fn different_order_of_struct_fields(Struct { b: s, a: t }: Struct ) {\n+    zzz();\n+}\n+\n+fn complex_nesting(((u,   v  ), ((w,   (x,   Struct { a: y, b: z})), Struct { a: ae, b: oe }), ue ):\n+                   ((i16, i32), ((i64, (i32, Struct,             )), Struct                 ), u16)) {\n+    zzz();\n+}\n+\n+fn managed_box(@aa: @(int, int)) {\n+    zzz();\n+}\n+\n+fn borrowed_pointer(&bb: &(int, int)) {\n+    zzz();\n+}\n+\n+fn contained_borrowed_pointer((&cc, _): (&int, int)) {\n+    zzz();\n+}\n+\n+fn unique_pointer(~dd: ~(int, int, int)) {\n+    zzz();\n+}\n+\n+fn ref_binding(ref ee: (int, int, int)) {\n+    zzz();\n+}\n+\n+fn ref_binding_in_tuple((ref ff, gg): (int, (int, int))) {\n+    zzz();\n+}\n+\n+fn ref_binding_in_struct(Struct { b: ref hh, _ }: Struct) {\n+    zzz();\n+}\n+\n+fn univariant_enum(Unit(ii): Univariant) {\n+    zzz();\n+}\n+\n+fn univariant_enum_with_ref_binding(Unit(ref jj): Univariant) {\n+    zzz();\n+}\n+\n+fn tuple_struct(TupleStruct(kk, ll): TupleStruct) {\n+    zzz();\n+}\n+\n+fn tuple_struct_with_ref_binding(TupleStruct(mm, ref nn): TupleStruct) {\n+    zzz();\n+}\n+\n+fn multiple_arguments((oo, pp): (int, int), qq : int) {\n+    zzz();\n+}\n+\n+fn main() {\n+\tsimple_tuple((1, false));\n+    nested_tuple((2, (3, 4)));\n+    destructure_only_first_level((5, (6, 7)));\n+    struct_as_tuple_element((8, Struct { a: 9, b: 10 }, 11));\n+    struct_pattern(Struct { a: 12, b: 13 });\n+    ignored_tuple_element((14, 15, 16));\n+    ignored_struct_field(Struct { a: 17, b: 18 });\n+    one_struct_destructured_one_not((Struct { a: 19, b: 20 }, Struct { a: 21, b: 22 }));\n+    different_order_of_struct_fields(Struct { a: 23, b: 24 });\n+\tcomplex_nesting(((25, 26), ((27, (28, Struct { a: 29, b: 30})), Struct { a: 31, b: 32 }), 33));\n+\tmanaged_box(@(34, 35));\n+    borrowed_pointer(&(36, 37));\n+    contained_borrowed_pointer((&38, 39));\n+    unique_pointer(~(40, 41, 42));\n+    ref_binding((43, 44, 45));\n+    ref_binding_in_tuple((46, (47, 48)));\n+    ref_binding_in_struct(Struct { a: 49, b: 50 });\n+    univariant_enum(Unit(51));\n+    univariant_enum_with_ref_binding(Unit(52));\n+    tuple_struct(TupleStruct(53.0, 54));\n+    tuple_struct_with_ref_binding(TupleStruct(55.0, 56));\n+    multiple_arguments((57, 58), 59);\n+\n+    fn nested_function(rr: int, (ss, tt): (int, int)) {\n+        zzz();\n+    }\n+\n+    nested_function(60, (61, 62));\n+}\n+\n+\n+fn zzz() {()}\n\\ No newline at end of file"}, {"sha": "5b690b9d067c426585a82c2d5c1e1a2e641ef853", "filename": "src/test/debug-info/multiple-functions-equal-var-names.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Ftest%2Fdebug-info%2Fmultiple-functions-equal-var-names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Ftest%2Fdebug-info%2Fmultiple-functions-equal-var-names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmultiple-functions-equal-var-names.rs?ref=02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+\n+// debugger:print abc\n+// check:$1 = 10101\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print abc\n+// check:$2 = 20202\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print abc\n+// check:$3 = 30303\n+\n+fn function_one() {\n+\tlet abc = 10101;\n+\tzzz();\n+}\n+\n+fn function_two() {\n+\tlet abc = 20202;\n+\tzzz();\n+}\n+\n+\n+fn function_three() {\n+\tlet abc = 30303;\n+\tzzz();\n+}\n+\n+\n+fn main() {\n+\tfunction_one();\n+\tfunction_two();\n+\tfunction_three();\n+}\n+\n+fn zzz() {()}"}, {"sha": "aaac723f1613eaf3941ef51851cbc40bd0d8a86a", "filename": "src/test/debug-info/multiple-functions.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Ftest%2Fdebug-info%2Fmultiple-functions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a0f2822e4911ffa3a36f48c0d9afc48f428ece/src%2Ftest%2Fdebug-info%2Fmultiple-functions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmultiple-functions.rs?ref=02a0f2822e4911ffa3a36f48c0d9afc48f428ece", "patch": "@@ -0,0 +1,54 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// xfail-win32 Broken because of LLVM bug: http://llvm.org/bugs/show_bug.cgi?id=16249\n+\n+// compile-flags:-Z extra-debug-info\n+// debugger:break zzz\n+// debugger:run\n+// debugger:finish\n+\n+// debugger:print a\n+// check:$1 = 10101\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print b\n+// check:$2 = 20202\n+// debugger:continue\n+\n+// debugger:finish\n+// debugger:print c\n+// check:$3 = 30303\n+\n+fn function_one() {\n+\tlet a = 10101;\n+\tzzz();\n+}\n+\n+fn function_two() {\n+\tlet b = 20202;\n+\tzzz();\n+}\n+\n+\n+fn function_three() {\n+\tlet c = 30303;\n+\tzzz();\n+}\n+\n+\n+fn main() {\n+\tfunction_one();\n+\tfunction_two();\n+\tfunction_three();\n+}\n+\n+fn zzz() {()}"}]}