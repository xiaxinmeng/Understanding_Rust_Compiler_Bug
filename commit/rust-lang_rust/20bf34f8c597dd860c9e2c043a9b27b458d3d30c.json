{"sha": "20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "node_id": "C_kwDOAAsO6NoAKDIwYmYzNGY4YzU5N2RkODYwYzllMmMwNDNhOWIyN2I0NThkM2QzMGM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-15T18:50:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-15T18:50:43Z"}, "message": "Rollup merge of #94461 - jhpratt:2024-edition, r=pnkfelix\n\nCreate (unstable) 2024 edition\n\n[On Zulip](https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/Deprecating.20macro.20scoping.20shenanigans/near/272860652), there was a small aside regarding creating the 2024 edition now as opposed to later. There was a reasonable amount of support and no stated opposition.\n\nThis change creates the 2024 edition in the compiler and creates a prelude for the 2024 edition. There is no current difference between the 2021 and 2024 editions. Cargo and other tools will need to be updated separately, as it's not in the same repository. This change permits the vast majority of work towards the next edition to proceed _now_ instead of waiting until 2024.\n\nFor sanity purposes, I've merged the \"hello\" UI tests into a single file with multiple revisions. Otherwise we'd end up with a file per edition, despite them being essentially identical.\n\n````@rustbot```` label +T-lang +S-waiting-on-review\n\nNot sure on the relevant team, to be honest.", "tree": {"sha": "037eb79a79c53aba478f0eb27940fe01d1e51743", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/037eb79a79c53aba478f0eb27940fe01d1e51743"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWb6ECRBK7hj4Ov3rIwAAuA4IAJVFt4ontCNo7RKRekQw3be+\nKNMdW87ygLEOTlWz6wdEsJg8exoQRvYF7coZKfyUx6uZU1aszSD3ZVclbok+50iM\nIv9wsy7jWm9ynLv2cWKjzRJffvB5Kr5WfsnYlG4THh+XfB12TBygSBgBE1OBYIiA\nrlhtEZFMYOyi8o3CHEwfwuwYm8WHXfcbEBDMzmQDguW3a5V4kz1GT897RV0UVHbV\nySPJUU35PPE5d0OJVUTGlk759Koh1hYOVPkEczSA7RMZNcDkKCkP0kIOUGVSPg5R\n4DWtLDXwLqyr2xiEIt866xQIueuZMYEBLP7Ew/u1SPHege8bceIsUHzfPyWtCWI=\n=Weuo\n-----END PGP SIGNATURE-----\n", "payload": "tree 037eb79a79c53aba478f0eb27940fe01d1e51743\nparent 27e2d811e67f5fa0658f62aa55538bed250ecb68\nparent 6b75406f5a7b006f7c724c08c6a00d7696a3620d\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650048643 +0200\ncommitter GitHub <noreply@github.com> 1650048643 +0200\n\nRollup merge of #94461 - jhpratt:2024-edition, r=pnkfelix\n\nCreate (unstable) 2024 edition\n\n[On Zulip](https://rust-lang.zulipchat.com/#narrow/stream/213817-t-lang/topic/Deprecating.20macro.20scoping.20shenanigans/near/272860652), there was a small aside regarding creating the 2024 edition now as opposed to later. There was a reasonable amount of support and no stated opposition.\n\nThis change creates the 2024 edition in the compiler and creates a prelude for the 2024 edition. There is no current difference between the 2021 and 2024 editions. Cargo and other tools will need to be updated separately, as it's not in the same repository. This change permits the vast majority of work towards the next edition to proceed _now_ instead of waiting until 2024.\n\nFor sanity purposes, I've merged the \"hello\" UI tests into a single file with multiple revisions. Otherwise we'd end up with a file per edition, despite them being essentially identical.\n\n````@rustbot```` label +T-lang +S-waiting-on-review\n\nNot sure on the relevant team, to be honest.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "html_url": "https://github.com/rust-lang/rust/commit/20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27e2d811e67f5fa0658f62aa55538bed250ecb68", "url": "https://api.github.com/repos/rust-lang/rust/commits/27e2d811e67f5fa0658f62aa55538bed250ecb68", "html_url": "https://github.com/rust-lang/rust/commit/27e2d811e67f5fa0658f62aa55538bed250ecb68"}, {"sha": "6b75406f5a7b006f7c724c08c6a00d7696a3620d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b75406f5a7b006f7c724c08c6a00d7696a3620d", "html_url": "https://github.com/rust-lang/rust/commit/6b75406f5a7b006f7c724c08c6a00d7696a3620d"}], "stats": {"total": 95, "additions": 83, "deletions": 12}, "files": [{"sha": "5aa8011ca5eb627a99e24c70ba9b75d085d4e7d5", "filename": "compiler/rustc_ast/src/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Ftoken.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -722,7 +722,7 @@ impl NonterminalKind {\n                 Edition::Edition2015 | Edition::Edition2018 => {\n                     NonterminalKind::PatParam { inferred: true }\n                 }\n-                Edition::Edition2021 => NonterminalKind::PatWithOr,\n+                Edition::Edition2021 | Edition::Edition2024 => NonterminalKind::PatWithOr,\n             },\n             sym::pat_param => NonterminalKind::PatParam { inferred: false },\n             sym::expr => NonterminalKind::Expr,"}, {"sha": "09ad5f9b3eaa98d40984ae1ed059e95962fb0c50", "filename": "compiler/rustc_builtin_macros/src/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -70,6 +70,7 @@ pub fn inject(\n             Edition2015 => sym::rust_2015,\n             Edition2018 => sym::rust_2018,\n             Edition2021 => sym::rust_2021,\n+            Edition2024 => sym::rust_2024,\n         }])\n         .map(|&symbol| Ident::new(symbol, span))\n         .collect();"}, {"sha": "e4fa5ccfe31622c3fd59d801e58e262b093de0ef", "filename": "compiler/rustc_expand/src/mbe/macro_rules.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fmbe%2Fmacro_rules.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -1114,7 +1114,7 @@ fn check_matcher_core<'tt>(\n                             err.span_label(sp, format!(\"not allowed after `{}` fragments\", kind));\n \n                             if kind == NonterminalKind::PatWithOr\n-                                && sess.edition == Edition::Edition2021\n+                                && sess.edition.rust_2021()\n                                 && next_token.is_token(&BinOp(token::BinOpToken::Or))\n                             {\n                                 let suggestion = quoted_tt_to_string(&TokenTree::MetaVarDecl("}, {"sha": "29aee6a947924df5ded0ce15dc5b2b3df0a8dd36", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -991,6 +991,11 @@ impl Session {\n         self.opts.edition >= Edition::Edition2021\n     }\n \n+    /// Are we allowed to use features from the Rust 2024 edition?\n+    pub fn rust_2024(&self) -> bool {\n+        self.opts.edition >= Edition::Edition2024\n+    }\n+\n     pub fn edition(&self) -> Edition {\n         self.opts.edition\n     }"}, {"sha": "065d3660e5008955269305b45450874886d8a7f2", "filename": "compiler/rustc_span/src/edition.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_span%2Fsrc%2Fedition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_span%2Fsrc%2Fedition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fedition.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -22,13 +22,15 @@ pub enum Edition {\n     Edition2018,\n     /// The 2021 edition\n     Edition2021,\n+    /// The 2024 edition\n+    Edition2024,\n }\n \n // Must be in order from oldest to newest.\n pub const ALL_EDITIONS: &[Edition] =\n-    &[Edition::Edition2015, Edition::Edition2018, Edition::Edition2021];\n+    &[Edition::Edition2015, Edition::Edition2018, Edition::Edition2021, Edition::Edition2024];\n \n-pub const EDITION_NAME_LIST: &str = \"2015|2018|2021\";\n+pub const EDITION_NAME_LIST: &str = \"2015|2018|2021|2024\";\n \n pub const DEFAULT_EDITION: Edition = Edition::Edition2015;\n \n@@ -40,6 +42,7 @@ impl fmt::Display for Edition {\n             Edition::Edition2015 => \"2015\",\n             Edition::Edition2018 => \"2018\",\n             Edition::Edition2021 => \"2021\",\n+            Edition::Edition2024 => \"2024\",\n         };\n         write!(f, \"{}\", s)\n     }\n@@ -51,6 +54,7 @@ impl Edition {\n             Edition::Edition2015 => \"rust_2015_compatibility\",\n             Edition::Edition2018 => \"rust_2018_compatibility\",\n             Edition::Edition2021 => \"rust_2021_compatibility\",\n+            Edition::Edition2024 => \"rust_2024_compatibility\",\n         }\n     }\n \n@@ -59,6 +63,7 @@ impl Edition {\n             Edition::Edition2015 => sym::rust_2015_preview,\n             Edition::Edition2018 => sym::rust_2018_preview,\n             Edition::Edition2021 => sym::rust_2021_preview,\n+            Edition::Edition2024 => sym::rust_2024_preview,\n         }\n     }\n \n@@ -67,8 +72,28 @@ impl Edition {\n             Edition::Edition2015 => true,\n             Edition::Edition2018 => true,\n             Edition::Edition2021 => true,\n+            Edition::Edition2024 => false,\n         }\n     }\n+\n+    pub fn rust_2015(&self) -> bool {\n+        *self == Edition::Edition2015\n+    }\n+\n+    /// Are we allowed to use features from the Rust 2018 edition?\n+    pub fn rust_2018(&self) -> bool {\n+        *self >= Edition::Edition2018\n+    }\n+\n+    /// Are we allowed to use features from the Rust 2021 edition?\n+    pub fn rust_2021(&self) -> bool {\n+        *self >= Edition::Edition2021\n+    }\n+\n+    /// Are we allowed to use features from the Rust 2024 edition?\n+    pub fn rust_2024(&self) -> bool {\n+        *self >= Edition::Edition2024\n+    }\n }\n \n impl FromStr for Edition {\n@@ -78,6 +103,7 @@ impl FromStr for Edition {\n             \"2015\" => Ok(Edition::Edition2015),\n             \"2018\" => Ok(Edition::Edition2018),\n             \"2021\" => Ok(Edition::Edition2021),\n+            \"2024\" => Ok(Edition::Edition2024),\n             _ => Err(()),\n         }\n     }"}, {"sha": "b132c0a2132b724b0077f3019432112d4a1ba55e", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -684,6 +684,11 @@ impl Span {\n         self.edition() >= edition::Edition::Edition2021\n     }\n \n+    #[inline]\n+    pub fn rust_2024(self) -> bool {\n+        self.edition() >= edition::Edition::Edition2024\n+    }\n+\n     /// Returns the source callee.\n     ///\n     /// Returns `None` if the supplied span has no expansion trace,"}, {"sha": "f6acb3c76fe588f6a455fca793157fd5cab8a095", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -1149,6 +1149,8 @@ symbols! {\n         rust_2018_preview,\n         rust_2021,\n         rust_2021_preview,\n+        rust_2024,\n+        rust_2024_preview,\n         rust_begin_unwind,\n         rust_eh_catch_typeinfo,\n         rust_eh_personality,"}, {"sha": "3cd3a3b780e9c3621765a93048dc2c9bb509570c", "filename": "library/core/src/prelude/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/library%2Fcore%2Fsrc%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/library%2Fcore%2Fsrc%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fprelude%2Fmod.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -45,3 +45,13 @@ pub mod rust_2021 {\n     #[doc(no_inline)]\n     pub use crate::convert::{TryFrom, TryInto};\n }\n+\n+/// The 2024 edition of the core prelude.\n+///\n+/// See the [module-level documentation](self) for more.\n+#[unstable(feature = \"prelude_2024\", issue = \"none\")]\n+pub mod rust_2024 {\n+    #[unstable(feature = \"prelude_2024\", issue = \"none\")]\n+    #[doc(no_inline)]\n+    pub use super::rust_2021::*;\n+}"}, {"sha": "da7753216d0630b91aa893f256adf54036d96f3f", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -279,6 +279,7 @@\n #![feature(panic_info_message)]\n #![feature(panic_internals)]\n #![feature(portable_simd)]\n+#![feature(prelude_2024)]\n #![feature(ptr_as_uninit)]\n #![feature(raw_os_nonzero)]\n #![feature(slice_internals)]"}, {"sha": "c314bbbb68e570c2972df7f9358d321d9da470d6", "filename": "library/std/src/prelude/mod.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprelude%2Fmod.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -132,3 +132,17 @@ pub mod rust_2021 {\n     #[doc(no_inline)]\n     pub use core::prelude::rust_2021::*;\n }\n+\n+/// The 2024 version of the prelude of The Rust Standard Library.\n+///\n+/// See the [module-level documentation](self) for more.\n+#[unstable(feature = \"prelude_2024\", issue = \"none\")]\n+pub mod rust_2024 {\n+    #[unstable(feature = \"prelude_2024\", issue = \"none\")]\n+    #[doc(no_inline)]\n+    pub use super::v1::*;\n+\n+    #[unstable(feature = \"prelude_2024\", issue = \"none\")]\n+    #[doc(no_inline)]\n+    pub use core::prelude::rust_2024::*;\n+}"}, {"sha": "c66b7c60fb4eac0584a8d0578334dc7e3eefb827", "filename": "src/test/ui/hello.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/src%2Ftest%2Fui%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/src%2Ftest%2Fui%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhello.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -1,5 +1,12 @@\n // run-pass\n+// revisions: e2015 e2018 e2021 e2024\n \n-pub fn main() {\n-    println!(\"hello, world\");\n+//[e2018] edition:2018\n+//[e2021] edition:2021\n+//[e2024] edition:2024\n+\n+//[e2024] compile-flags: -Zunstable-options\n+\n+fn main() {\n+    println!(\"hello\");\n }"}, {"sha": "134d8af5bfb8aba42320695460111a4b87ca45cf", "filename": "src/test/ui/hello2021.rs", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fhello2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27e2d811e67f5fa0658f62aa55538bed250ecb68/src%2Ftest%2Fui%2Fhello2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fhello2021.rs?ref=27e2d811e67f5fa0658f62aa55538bed250ecb68", "patch": "@@ -1,6 +0,0 @@\n-// run-pass\n-// edition:2021\n-\n-fn main() {\n-    println!(\"hello, 2021\");\n-}"}, {"sha": "8e871e61f26837c5b2ed21cd1fd4348ec60e4cbd", "filename": "src/tools/rustfmt/src/bin/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/src%2Ftools%2Frustfmt%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/src%2Ftools%2Frustfmt%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fbin%2Fmain.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -693,6 +693,7 @@ fn edition_from_edition_str(edition_str: &str) -> Result<Edition> {\n         \"2015\" => Ok(Edition::Edition2015),\n         \"2018\" => Ok(Edition::Edition2018),\n         \"2021\" => Ok(Edition::Edition2021),\n+        \"2024\" => Ok(Edition::Edition2024),\n         _ => Err(format_err!(\"Invalid value for `--edition`\")),\n     }\n }"}, {"sha": "257a17b2703a9deab95d0e5f5533dde1523ed112", "filename": "src/tools/rustfmt/src/config/options.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/src%2Ftools%2Frustfmt%2Fsrc%2Fconfig%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20bf34f8c597dd860c9e2c043a9b27b458d3d30c/src%2Ftools%2Frustfmt%2Fsrc%2Fconfig%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fsrc%2Fconfig%2Foptions.rs?ref=20bf34f8c597dd860c9e2c043a9b27b458d3d30c", "patch": "@@ -423,6 +423,10 @@ pub enum Edition {\n     #[doc_hint = \"2021\"]\n     /// Edition 2021.\n     Edition2021,\n+    #[value = \"2024\"]\n+    #[doc_hint = \"2024\"]\n+    /// Edition 2024.\n+    Edition2024,\n }\n \n impl Default for Edition {\n@@ -437,6 +441,7 @@ impl From<Edition> for rustc_span::edition::Edition {\n             Edition::Edition2015 => Self::Edition2015,\n             Edition::Edition2018 => Self::Edition2018,\n             Edition::Edition2021 => Self::Edition2021,\n+            Edition::Edition2024 => Self::Edition2024,\n         }\n     }\n }"}]}