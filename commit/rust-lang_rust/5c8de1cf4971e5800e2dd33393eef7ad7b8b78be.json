{"sha": "5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOGRlMWNmNDk3MWU1ODAwZTJkZDMzMzkzZWVmN2FkN2I4Yjc4YmU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-11T16:32:03Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-12-11T22:02:17Z"}, "message": "use strip_prefix over slicing (clippy::manual_strip)", "tree": {"sha": "6fafbe7b8aee0a32ad31c5514cd89e82bcd6ee23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fafbe7b8aee0a32ad31c5514cd89e82bcd6ee23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "html_url": "https://github.com/rust-lang/rust/commit/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2225ee1b62ff089917434aefd9b2bf509cfa087f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2225ee1b62ff089917434aefd9b2bf509cfa087f", "html_url": "https://github.com/rust-lang/rust/commit/2225ee1b62ff089917434aefd9b2bf509cfa087f"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "bf0d499e6c4919b433095c08e9e41dc716301c9f", "filename": "compiler/rustc_codegen_llvm/src/intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fintrinsic.rs?ref=5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "patch": "@@ -854,8 +854,8 @@ fn generic_simd_intrinsic(\n         ));\n     }\n \n-    if name_str.starts_with(\"simd_shuffle\") {\n-        let n: u64 = name_str[\"simd_shuffle\".len()..].parse().unwrap_or_else(|_| {\n+    if let Some(stripped) = name_str.strip_prefix(\"simd_shuffle\") {\n+        let n: u64 = stripped.parse().unwrap_or_else(|_| {\n             span_bug!(span, \"bad `simd_shuffle` instruction only caught in codegen?\")\n         });\n "}, {"sha": "621363bed80e1ea2c989a6580da34ee1c82c66a6", "filename": "compiler/rustc_llvm/build.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/compiler%2Frustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/compiler%2Frustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_llvm%2Fbuild.rs?ref=5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "patch": "@@ -201,10 +201,10 @@ fn main() {\n     cmd.args(&components);\n \n     for lib in output(&mut cmd).split_whitespace() {\n-        let name = if lib.starts_with(\"-l\") {\n-            &lib[2..]\n-        } else if lib.starts_with('-') {\n-            &lib[1..]\n+        let name = if let Some(stripped) = lib.strip_prefix(\"-l\") {\n+            stripped\n+        } else if let Some(stripped) = lib.strip_prefix('-') {\n+            stripped\n         } else if Path::new(lib).exists() {\n             // On MSVC llvm-config will print the full name to libraries, but\n             // we're only interested in the name part\n@@ -241,17 +241,17 @@ fn main() {\n     cmd.arg(llvm_link_arg).arg(\"--ldflags\");\n     for lib in output(&mut cmd).split_whitespace() {\n         if is_crossed {\n-            if lib.starts_with(\"-LIBPATH:\") {\n-                println!(\"cargo:rustc-link-search=native={}\", lib[9..].replace(&host, &target));\n-            } else if lib.starts_with(\"-L\") {\n-                println!(\"cargo:rustc-link-search=native={}\", lib[2..].replace(&host, &target));\n+            if let Some(stripped) = lib.strip_prefix(\"-LIBPATH:\") {\n+                println!(\"cargo:rustc-link-search=native={}\", stripped.replace(&host, &target));\n+            } else if let Some(stripped) = lib.strip_prefix(\"-L\") {\n+                println!(\"cargo:rustc-link-search=native={}\", stripped.replace(&host, &target));\n             }\n-        } else if lib.starts_with(\"-LIBPATH:\") {\n-            println!(\"cargo:rustc-link-search=native={}\", &lib[9..]);\n-        } else if lib.starts_with(\"-l\") {\n-            println!(\"cargo:rustc-link-lib={}\", &lib[2..]);\n-        } else if lib.starts_with(\"-L\") {\n-            println!(\"cargo:rustc-link-search=native={}\", &lib[2..]);\n+        } else if let Some(stripped) = lib.strip_prefix(\"-LIBPATH:\") {\n+            println!(\"cargo:rustc-link-search=native={}\", stripped);\n+        } else if let Some(stripped) = lib.strip_prefix(\"-l\") {\n+            println!(\"cargo:rustc-link-lib={}\", stripped);\n+        } else if let Some(stripped) = lib.strip_prefix(\"-L\") {\n+            println!(\"cargo:rustc-link-search=native={}\", stripped);\n         }\n     }\n \n@@ -262,10 +262,10 @@ fn main() {\n     let llvm_linker_flags = tracked_env_var_os(\"LLVM_LINKER_FLAGS\");\n     if let Some(s) = llvm_linker_flags {\n         for lib in s.into_string().unwrap().split_whitespace() {\n-            if lib.starts_with(\"-l\") {\n-                println!(\"cargo:rustc-link-lib={}\", &lib[2..]);\n-            } else if lib.starts_with(\"-L\") {\n-                println!(\"cargo:rustc-link-search=native={}\", &lib[2..]);\n+            if let Some(stripped) = lib.strip_prefix(\"-l\") {\n+                println!(\"cargo:rustc-link-lib={}\", stripped);\n+            } else if let Some(stripped) = lib.strip_prefix(\"-L\") {\n+                println!(\"cargo:rustc-link-search=native={}\", stripped);\n             }\n         }\n     }"}, {"sha": "360e51ed2bb2a8886420ade12ccabe61c58feeda", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "patch": "@@ -1186,7 +1186,7 @@ pub fn sanitize_sh(path: &Path) -> String {\n     return change_drive(unc_to_lfs(&path)).unwrap_or(path);\n \n     fn unc_to_lfs(s: &str) -> &str {\n-        if s.starts_with(\"//?/\") { &s[4..] } else { s }\n+        s.strip_prefix(\"//?/\").unwrap_or(s)\n     }\n \n     fn change_drive(s: &str) -> Option<String> {"}, {"sha": "22096203d4ce63855857d297bf173bb4299c6daa", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c8de1cf4971e5800e2dd33393eef7ad7b8b78be/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=5c8de1cf4971e5800e2dd33393eef7ad7b8b78be", "patch": "@@ -139,9 +139,9 @@ fn map_line(s: &str) -> Line<'_> {\n     let trimmed = s.trim();\n     if trimmed.starts_with(\"##\") {\n         Line::Shown(Cow::Owned(s.replacen(\"##\", \"#\", 1)))\n-    } else if trimmed.starts_with(\"# \") {\n+    } else if let Some(stripped) = trimmed.strip_prefix(\"# \") {\n         // # text\n-        Line::Hidden(&trimmed[2..])\n+        Line::Hidden(&stripped)\n     } else if trimmed == \"#\" {\n         // We cannot handle '#text' because it could be #[attr].\n         Line::Hidden(\"\")"}]}