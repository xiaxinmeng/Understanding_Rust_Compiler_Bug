{"sha": "4db8b5bfdf1c0f70183f5a416581215c62412f80", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYjhiNWJmZGYxYzBmNzAxODNmNWE0MTY1ODEyMTVjNjI0MTJmODA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-15T07:10:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-15T07:10:29Z"}, "message": "Auto merge of #32238 - frewsxcv:compiletest, r=alexcrichton\n\nUtilize `Option::cloned` over explicit `clone` usage.", "tree": {"sha": "d6a09044df048c1e73b99aa339a93e7056580469", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6a09044df048c1e73b99aa339a93e7056580469"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4db8b5bfdf1c0f70183f5a416581215c62412f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4db8b5bfdf1c0f70183f5a416581215c62412f80", "html_url": "https://github.com/rust-lang/rust/commit/4db8b5bfdf1c0f70183f5a416581215c62412f80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4db8b5bfdf1c0f70183f5a416581215c62412f80/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34b95a3c6a2a56d76bbd8ae19f318c03a2e5041d", "url": "https://api.github.com/repos/rust-lang/rust/commits/34b95a3c6a2a56d76bbd8ae19f318c03a2e5041d", "html_url": "https://github.com/rust-lang/rust/commit/34b95a3c6a2a56d76bbd8ae19f318c03a2e5041d"}, {"sha": "8f008ba4eed563cc2995509048ae638a64426a96", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f008ba4eed563cc2995509048ae638a64426a96", "html_url": "https://github.com/rust-lang/rust/commit/8f008ba4eed563cc2995509048ae638a64426a96"}], "stats": {"total": 13, "additions": 2, "deletions": 11}, "files": [{"sha": "458a3a8c739f435447116d09f1c4423296dfaf01", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4db8b5bfdf1c0f70183f5a416581215c62412f80/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4db8b5bfdf1c0f70183f5a416581215c62412f80/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=4db8b5bfdf1c0f70183f5a416581215c62412f80", "patch": "@@ -116,12 +116,6 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         }\n     }\n \n-    let filter = if !matches.free.is_empty() {\n-        Some(matches.free[0].clone())\n-    } else {\n-        None\n-    };\n-\n     Config {\n         compile_lib_path: matches.opt_str(\"compile-lib-path\").unwrap(),\n         run_lib_path: matches.opt_str(\"run-lib-path\").unwrap(),\n@@ -137,7 +131,7 @@ pub fn parse_config(args: Vec<String> ) -> Config {\n         stage_id: matches.opt_str(\"stage-id\").unwrap(),\n         mode: matches.opt_str(\"mode\").unwrap().parse().ok().expect(\"invalid mode\"),\n         run_ignored: matches.opt_present(\"ignored\"),\n-        filter: filter,\n+        filter: matches.free.first().cloned(),\n         logfile: matches.opt_str(\"logfile\").map(|s| PathBuf::from(&s)),\n         runtool: matches.opt_str(\"runtool\"),\n         host_rustcflags: matches.opt_str(\"host-rustcflags\"),\n@@ -251,10 +245,7 @@ pub fn run_tests(config: &Config) {\n \n pub fn test_opts(config: &Config) -> test::TestOpts {\n     test::TestOpts {\n-        filter: match config.filter {\n-            None => None,\n-            Some(ref filter) => Some(filter.clone()),\n-        },\n+        filter: config.filter.clone(),\n         run_ignored: config.run_ignored,\n         logfile: config.logfile.clone(),\n         run_tests: true,"}]}