{"sha": "193279daa2bef57be8b897d3e7426943db577282", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MzI3OWRhYTJiZWY1N2JlOGI4OTdkM2U3NDI2OTQzZGI1NzcyODI=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-01-18T22:14:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-01-18T22:14:42Z"}, "message": "Refactor the doc building rules a bit, sensitize them to the presence or absence of xetex and luatex (for now).", "tree": {"sha": "fdd0877de3eaa70c9062b637f55f400a0d7beb8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdd0877de3eaa70c9062b637f55f400a0d7beb8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/193279daa2bef57be8b897d3e7426943db577282", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/193279daa2bef57be8b897d3e7426943db577282", "html_url": "https://github.com/rust-lang/rust/commit/193279daa2bef57be8b897d3e7426943db577282", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/193279daa2bef57be8b897d3e7426943db577282/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ac57d1891bcea2207fef3bd5302f0b9467656e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ac57d1891bcea2207fef3bd5302f0b9467656e9", "html_url": "https://github.com/rust-lang/rust/commit/5ac57d1891bcea2207fef3bd5302f0b9467656e9"}], "stats": {"total": 133, "additions": 73, "deletions": 60}, "files": [{"sha": "ffc6e104078f4913736dcf008c7960e6297691a3", "filename": "Makefile.in", "status": "modified", "additions": 2, "deletions": 35, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/193279daa2bef57be8b897d3e7426943db577282/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/193279daa2bef57be8b897d3e7426943db577282/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=193279daa2bef57be8b897d3e7426943db577282", "patch": "@@ -133,39 +133,6 @@ ifdef CFG_BAD_VALGRIND\n   CFG_VALGRIND :=\n endif\n \n-DOCS :=\n-ifeq ($(CFG_PANDOC),)\n-  $(info cfg: no pandoc found, omitting doc/rust.html)\n-else\n-  DOCS += doc/rust.html\n-endif\n-\n-ifeq ($(CFG_PANDOC),)\n-  $(info cfg: no pandoc found, omitting doc/rust.pdf)\n-else\n-  ifeq ($(CFG_PDFLATEX),)\n-    $(info cfg: no pdflatex found, omitting doc/rust.pdf)\n-  else\n-    DOCS += doc/rust.pdf\n-  endif\n-endif\n-\n-ifeq ($(CFG_NODE),)\n-  $(info cfg: no node found, omitting doc/tutorial/web)\n-else\n-  DOCS += doc/tutorial/web/index.html\n-endif\n-\n-ifeq ($(CFG_NATURALDOCS),)\n-  $(info cfg: no naturaldocs found, omitting library doc build)\n-else\n-  DOCS += doc/core/index.html doc/std/index.html\n-endif\n-\n-ifdef CFG_DISABLE_DOCS\n-  $(info cfg: disabling doc build (CFG_DISABLE_DOCS))\n-  DOCS :=\n-endif\n \n ######################################################################\n # Target-and-rule \"utility variables\"\n@@ -431,7 +398,7 @@ CFG_INFO := $(info cfg: *** compiler is in snapshot transition ***)\n CFG_INFO := $(info cfg: *** stage2 and later will not be built ***)\n CFG_INFO := $(info cfg:)\n \n-all: $(SREQ1$(CFG_HOST_TRIPLE)) $(GENERATED) $(DOCS)\n+all: $(SREQ1$(CFG_HOST_TRIPLE)) $(GENERATED) docs\n \n else\n \n@@ -442,7 +409,7 @@ FUZZ := $(HBIN3_H_$(CFG_HOST_TRIPLE))/fuzzer$(X)\n CARGO := $(HBIN3_H_$(CFG_HOST_TRIPLE))/cargo$(X)\n RUSTDOC := $(HBIN3_H_$(CFG_HOST_TRIPLE))/rustdoc$(X)\n \n-all: rustc $(GENERATED) $(DOCS) $(FUZZ) $(CARGO) $(RUSTDOC)\n+all: rustc $(GENERATED) docs $(FUZZ) $(CARGO) $(RUSTDOC)\n \n endif\n "}, {"sha": "71ee86389d34018695034808a4cdef6ea8f4e434", "filename": "configure", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/193279daa2bef57be8b897d3e7426943db577282/configure", "raw_url": "https://github.com/rust-lang/rust/raw/193279daa2bef57be8b897d3e7426943db577282/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=193279daa2bef57be8b897d3e7426943db577282", "patch": "@@ -289,6 +289,8 @@ probe CFG_NATURALDOCS      naturaldocs\n probe CFG_LLNEXTGEN        LLnextgen\n probe CFG_PANDOC           pandoc\n probe CFG_PDFLATEX         pdflatex\n+probe CFG_XETEX            xetex\n+probe CFG_LUATEX           luatex\n probe CFG_NODE             node\n \n if [ -z \"$CFG_NODE\" ]"}, {"sha": "60dd912d8c9cc54387c5f3ea325454089963cdfa", "filename": "mk/docs.mk", "status": "modified", "additions": 69, "deletions": 25, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/193279daa2bef57be8b897d3e7426943db577282/mk%2Fdocs.mk", "raw_url": "https://github.com/rust-lang/rust/raw/193279daa2bef57be8b897d3e7426943db577282/mk%2Fdocs.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fdocs.mk?ref=193279daa2bef57be8b897d3e7426943db577282", "patch": "@@ -2,16 +2,17 @@\n # Doc variables and rules\n ######################################################################\n \n-doc/version.md: $(MKFILE_DEPS) rust.md\n-\t@$(call E, version-stamp: $@)\n-\t$(Q)echo \"$(CFG_VERSION)\" >>$@\n+DOCS :=\n \n-doc/keywords.md: $(MKFILE_DEPS) rust.md\n-\t@$(call E, grep -v: $$@)\n-\t$(Q)grep -v '^#' $< >$@\n \n-ifdef CFG_PANDOC\n+######################################################################\n+# Pandoc (reference-manual related)\n+######################################################################\n+ifeq ($(CFG_PANDOC),)\n+  $(info cfg: no pandoc found, omitting doc/rust.pdf)\n+else\n \n+DOCS += doc/rust.html\n doc/rust.html: rust.md doc/version.md doc/keywords.md\n \t@$(call E, pandoc: $@)\n \t$(Q)$(CFG_PANDOC) \\\n@@ -26,8 +27,17 @@ doc/rust.html: rust.md doc/version.md doc/keywords.md\n \t-$(Q)cp -a $(S)doc/rust.css doc/rust.css 2> /dev/null\n \n \n-ifdef CFG_PDFLATEX\n+  ifeq ($(CFG_PDFLATEX),)\n+    $(info cfg: no pdflatex found, omitting doc/rust.pdf)\n+  else\n+    ifeq ($(CFG_XETEX),)\n+      $(info cfg: no xetex found, disabling doc/rust.pdf)\n+    else\n+      ifeq ($(CFG_LUATEX),)\n+        $(info cfg: lacking luatex, disabling pdflatex)\n+      else\n \n+DOCS += doc/rust.pdf\n doc/rust.tex: rust.md doc/version.md doc/keywords.md\n \t@$(call E, pandoc: $@)\n \t$(Q)$(CFG_PANDOC) \\\n@@ -44,13 +54,39 @@ doc/rust.pdf: doc/rust.tex\n         -output-directory=doc \\\n         $<\n \n+      endif\n+    endif\n+  endif\n endif\n \n+\n+######################################################################\n+# LLnextgen (grammar analysis from refman)\n+######################################################################\n+ifeq ($(CFG_LLNEXTGEN),)\n+  $(info cfg: no llnextgen found, omitting grammar-verification)\n+else\n+.PHONY: verify-grammar\n+\n+doc/rust.g: rust.md $(S)src/etc/extract_grammar.py\n+\t@$(call E, extract_grammar: $@)\n+\t$(Q)$(S)src/etc/extract_grammar.py $< >$@\n+\n+verify-grammar: doc/rust.g\n+\t@$(call E, LLnextgen: $<)\n+\t$(Q)$(CFG_LLNEXTGEN) --generate-lexer-wrapper=no $< >$@\n+\t$(Q)rm -f doc/rust.c doc/rust.h\n endif\n \n \n-ifdef CFG_NODE\n+######################################################################\n+# Node (tutorial related)\n+######################################################################\n+ifeq ($(CFG_NODE),)\n+  $(info cfg: no node found, omitting doc/tutorial/web)\n+else\n \n+DOCS += doc/tutorial/web/index.html\n doc/tutorial/web/index.html: \\\n         $(wildcard $(S)doc/tutorial/*.md)\n \t@$(call E, cp: $(S)doc/tutorial)\n@@ -61,23 +97,14 @@ doc/tutorial/web/index.html: \\\n endif\n \n \n-ifdef CFG_LLNEXTGEN\n-doc/rust.g: rust.md $(S)src/etc/extract_grammar.py\n-\t@$(call E, extract_grammar: $@)\n-\t$(Q)$(S)src/etc/extract_grammar.py $< >$@\n \n-verify-grammar: doc/rust.g\n-\t@$(call E, LLnextgen: $<)\n-\t$(Q)$(CFG_LLNEXTGEN) --generate-lexer-wrapper=no $< >$@\n-\t$(Q)rm -f doc/rust.c doc/rust.h\n-endif\n-\n-\n-GENERATED += doc/keywords.md doc/version.md\n+######################################################################\n+# Naturaldocs (library reference related)\n+######################################################################\n \n-docsnap: doc/rust.pdf\n-\t@$(call E, snap: doc/rust-$(shell date +\"%Y-%m-%d\")-snap.pdf)\n-\t$(Q)mv $< doc/rust-$(shell date +\"%Y-%m-%d\")-snap.pdf\n+ifeq ($(CFG_NATURALDOCS),)\n+  $(info cfg: no naturaldocs found, omitting library doc build)\n+else\n \n define libdoc\n doc/$(1)/index.html: nd/$(1)/Languages.txt nd/$(1)/Topics.txt \\\n@@ -103,10 +130,27 @@ GENERATED += nd/$(1)/Languages.txt \\\n              nd/$(1)/Data\n \n DOCS += doc/$(1)/index.html nd/$(1)/lib.css\n-\n endef\n \n $(eval $(call libdoc,core,$(CORELIB_CRATE) $(CORELIB_INPUTS)))\n $(eval $(call libdoc,std,$(STDLIB_CRATE) $(STDLIB_INPUTS)))\n+endif\n+\n+\n+ifdef CFG_DISABLE_DOCS\n+  $(info cfg: disabling doc build (CFG_DISABLE_DOCS))\n+  DOCS :=\n+endif\n+\n+\n+doc/version.md: $(MKFILE_DEPS) rust.md\n+\t@$(call E, version-stamp: $@)\n+\t$(Q)echo \"$(CFG_VERSION)\" >>$@\n+\n+doc/keywords.md: $(MKFILE_DEPS) rust.md\n+\t@$(call E, grep -v: $$@)\n+\t$(Q)grep -v '^#' $< >$@\n+\n+GENERATED += doc/keywords.md doc/version.md\n \n docs: $(DOCS)"}]}