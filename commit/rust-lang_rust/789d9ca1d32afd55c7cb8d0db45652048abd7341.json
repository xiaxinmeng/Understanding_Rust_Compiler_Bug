{"sha": "789d9ca1d32afd55c7cb8d0db45652048abd7341", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4OWQ5Y2ExZDMyYWZkNTVjN2NiOGQwZGI0NTY1MjA0OGFiZDczNDE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-11-16T11:49:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-11-16T11:49:48Z"}, "message": "Merge #6563\n\n6563: Don't complete keywords in struct initializers r=matklad a=Veykril\n\nFixes #6562\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "3017eb7e6f8c18376bf0fa7daa36aa515b97a395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3017eb7e6f8c18376bf0fa7daa36aa515b97a395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/789d9ca1d32afd55c7cb8d0db45652048abd7341", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfsmdcCRBK7hj4Ov3rIwAAdHIIAKV8cQ1Wr9gwrKLg1YV+bqNZ\nk9pBiXQ1n/AjL0QyPVyr2BOCm7d9BNSCLP4oV1e3OarT+dfUsqQ0Z/Zq1qwP90Ml\nn+FXPoMTL8Hh7VQ3sGdTquHMcDzknm8ZQQzhxfw3BHp9z/1yYRT4LyQfROMx5Pre\n+3oo6noe0g/yiOPaN8RX+6qdhnd0NGIeZnaA6cITFsd5OoiwD7khLNYWOzndErDE\nwCqkBXa/I266kcVqy6kOT2d/ccyjydtsEhs3mu2G3N54P7qZfRIuTDLtLOuKYMme\no35IpuqGtT3UlUOcqVw/d69mjNl8eFE5W7YIzBicsWHhf56Lx1AU7Wg0tcoLX2g=\n=GrYL\n-----END PGP SIGNATURE-----\n", "payload": "tree 3017eb7e6f8c18376bf0fa7daa36aa515b97a395\nparent e17d6048886c3ff0ba5e065c2fec5eff145b0fdc\nparent fb71185692367f4d80e5a466d2a45ccc28492680\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1605527388 +0000\ncommitter GitHub <noreply@github.com> 1605527388 +0000\n\nMerge #6563\n\n6563: Don't complete keywords in struct initializers r=matklad a=Veykril\n\nFixes #6562\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/789d9ca1d32afd55c7cb8d0db45652048abd7341", "html_url": "https://github.com/rust-lang/rust/commit/789d9ca1d32afd55c7cb8d0db45652048abd7341", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/789d9ca1d32afd55c7cb8d0db45652048abd7341/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e17d6048886c3ff0ba5e065c2fec5eff145b0fdc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e17d6048886c3ff0ba5e065c2fec5eff145b0fdc", "html_url": "https://github.com/rust-lang/rust/commit/e17d6048886c3ff0ba5e065c2fec5eff145b0fdc"}, {"sha": "fb71185692367f4d80e5a466d2a45ccc28492680", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb71185692367f4d80e5a466d2a45ccc28492680", "html_url": "https://github.com/rust-lang/rust/commit/fb71185692367f4d80e5a466d2a45ccc28492680"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "720349b9ded6b70967e99992ee85d6d3d50fb741", "filename": "crates/completion/src/completions/keyword.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/789d9ca1d32afd55c7cb8d0db45652048abd7341/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/789d9ca1d32afd55c7cb8d0db45652048abd7341/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=789d9ca1d32afd55c7cb8d0db45652048abd7341", "patch": "@@ -44,6 +44,10 @@ pub(crate) fn complete_expr_keyword(acc: &mut Completions, ctx: &CompletionConte\n         mark::hit!(no_keyword_completion_in_comments);\n         return;\n     }\n+    if ctx.record_lit_syntax.is_some() {\n+        mark::hit!(no_keyword_completion_in_record_lit);\n+        return;\n+    }\n \n     let has_trait_or_impl_parent = ctx.has_impl_parent || ctx.has_trait_parent;\n     if ctx.trait_as_prev_sibling || ctx.impl_as_prev_sibling {\n@@ -563,4 +567,46 @@ struct Foo {\n             \"#]],\n         )\n     }\n+\n+    #[test]\n+    fn skip_struct_initializer() {\n+        mark::check!(no_keyword_completion_in_record_lit);\n+        check(\n+            r#\"\n+struct Foo {\n+    pub f: i32,\n+}\n+fn foo() {\n+    Foo {\n+        <|>\n+    }\n+}\n+\"#,\n+            expect![[r#\"\"#]],\n+        );\n+    }\n+\n+    #[test]\n+    fn struct_initializer_field_expr() {\n+        check(\n+            r#\"\n+struct Foo {\n+    pub f: i32,\n+}\n+fn foo() {\n+    Foo {\n+        f: <|>\n+    }\n+}\n+\"#,\n+            expect![[r#\"\n+                kw if\n+                kw if let\n+                kw loop\n+                kw match\n+                kw return\n+                kw while\n+            \"#]],\n+        );\n+    }\n }"}]}