{"sha": "8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b", "node_id": "C_kwDOAAsO6NoAKDhkOWE1ODgxZWExODU2OGYwMTRlYTA5ZWM5ZDJmMWQwY2RhY2ZmMWI", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-08-30T15:21:41Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-09-27T11:31:51Z"}, "message": "Flatten if-let and match into one.", "tree": {"sha": "651e2815dd82473a06eb287425b4a64530da6179", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/651e2815dd82473a06eb287425b4a64530da6179"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b", "html_url": "https://github.com/rust-lang/rust/commit/8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15754f5ea155600c62b8f4893fae78c5af1b08b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/15754f5ea155600c62b8f4893fae78c5af1b08b2", "html_url": "https://github.com/rust-lang/rust/commit/15754f5ea155600c62b8f4893fae78c5af1b08b2"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "1dd913ac6d2f0c539f854808ff98ddee426c4942", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=8d9a5881ea18568f014ea09ec9d2f1d0cdacff1b", "patch": "@@ -285,26 +285,21 @@ pub fn make_format_args(\n      -> FormatArgPosition {\n         let index = match arg {\n             Index(index) => {\n-                if let Some((_, arg_kind)) = args.get(index) {\n-                    match arg_kind {\n-                        FormatArgKind::Normal => {\n-                            used[index] = true;\n-                            Ok(index)\n-                        }\n-                        FormatArgKind::Named(_) => {\n-                            used[index] = true;\n-                            numeric_refences_to_named_arg.push((index, span, used_as));\n-                            Ok(index)\n-                        }\n-                        FormatArgKind::Captured(_) => {\n-                            // Doesn't exist as an explicit argument.\n-                            invalid_refs.push((index, span, used_as, kind));\n-                            Err(index)\n-                        }\n+                match args.get(index) {\n+                    Some((_, FormatArgKind::Normal)) => {\n+                        used[index] = true;\n+                        Ok(index)\n+                    }\n+                    Some((_, FormatArgKind::Named(_))) => {\n+                        used[index] = true;\n+                        numeric_refences_to_named_arg.push((index, span, used_as));\n+                        Ok(index)\n+                    }\n+                    Some((_, FormatArgKind::Captured(_))) | None => {\n+                        // Doesn't exist as an explicit argument.\n+                        invalid_refs.push((index, span, used_as, kind));\n+                        Err(index)\n                     }\n-                } else {\n-                    invalid_refs.push((index, span, used_as, kind));\n-                    Err(index)\n                 }\n             }\n             Name(name, span) => {"}]}