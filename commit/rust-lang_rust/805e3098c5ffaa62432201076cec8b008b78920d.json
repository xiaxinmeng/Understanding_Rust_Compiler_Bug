{"sha": "805e3098c5ffaa62432201076cec8b008b78920d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNWUzMDk4YzVmZmFhNjI0MzIyMDEwNzZjZWM4YjAwOGI3ODkyMGQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-27T22:40:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-27T22:45:11Z"}, "message": "Don't output bogus spans when reporting a message without one.\n\nEmacs gets confused by <input>:0:0:0:0:", "tree": {"sha": "404526c51854e02940e7d4c8f2f3b20487030231", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/404526c51854e02940e7d4c8f2f3b20487030231"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/805e3098c5ffaa62432201076cec8b008b78920d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/805e3098c5ffaa62432201076cec8b008b78920d", "html_url": "https://github.com/rust-lang/rust/commit/805e3098c5ffaa62432201076cec8b008b78920d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/805e3098c5ffaa62432201076cec8b008b78920d/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "609e38d8e7313e3e267e6481212420b05c38ff8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/609e38d8e7313e3e267e6481212420b05c38ff8f", "html_url": "https://github.com/rust-lang/rust/commit/609e38d8e7313e3e267e6481212420b05c38ff8f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e522becd3e034d460ee742265f8da0c4925cf086", "filename": "src/comp/syntax/codemap.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/805e3098c5ffaa62432201076cec8b008b78920d/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/805e3098c5ffaa62432201076cec8b008b78920d/src%2Fcomp%2Fsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fcodemap.rs?ref=805e3098c5ffaa62432201076cec8b008b78920d", "patch": "@@ -99,16 +99,16 @@ fn span_to_str(sp: &span, cm: &codemap) -> str {\n \n fn emit_diagnostic(sp: &option::t<span>, msg: &str, kind: &str, color: u8,\n                    cm: &codemap) {\n-    let ss = \"<input>:0:0:0:0\";\n+    let ss = \"\";\n     let maybe_lines: option::t<@file_lines> = none;\n     alt sp {\n       some(ssp) {\n-        ss = span_to_str(ssp, cm);\n+        ss = span_to_str(ssp, cm) + \" \";\n         maybe_lines = some(span_to_lines(ssp, cm));\n       }\n       none. { }\n     }\n-    io::stdout().write_str(ss + \" \");\n+    io::stdout().write_str(ss);\n     if term::color_supported() {\n         term::fg(io::stdout().get_buf_writer(), color);\n     }"}]}