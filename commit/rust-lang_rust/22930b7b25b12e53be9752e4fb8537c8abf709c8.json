{"sha": "22930b7b25b12e53be9752e4fb8537c8abf709c8", "node_id": "C_kwDOAAsO6NoAKDIyOTMwYjdiMjViMTJlNTNiZTk3NTJlNGZiODUzN2M4YWJmNzA5Yzg", "commit": {"author": {"name": "Kjetil Kjeka", "email": "kjetilkjeka@gmail.com", "date": "2022-08-09T11:29:06Z"}, "committer": {"name": "Kjetil Kjeka", "email": "kjetilkjeka@gmail.com", "date": "2022-08-09T11:29:18Z"}, "message": "Remove logic related to deprecated nvptx-nvidia-cuda (32-bit) target", "tree": {"sha": "4a430556fd639abe3232f9ce3c73bc2432b1923f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a430556fd639abe3232f9ce3c73bc2432b1923f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22930b7b25b12e53be9752e4fb8537c8abf709c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22930b7b25b12e53be9752e4fb8537c8abf709c8", "html_url": "https://github.com/rust-lang/rust/commit/22930b7b25b12e53be9752e4fb8537c8abf709c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22930b7b25b12e53be9752e4fb8537c8abf709c8/comments", "author": {"login": "kjetilkjeka", "id": 5366742, "node_id": "MDQ6VXNlcjUzNjY3NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5366742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjetilkjeka", "html_url": "https://github.com/kjetilkjeka", "followers_url": "https://api.github.com/users/kjetilkjeka/followers", "following_url": "https://api.github.com/users/kjetilkjeka/following{/other_user}", "gists_url": "https://api.github.com/users/kjetilkjeka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjetilkjeka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjetilkjeka/subscriptions", "organizations_url": "https://api.github.com/users/kjetilkjeka/orgs", "repos_url": "https://api.github.com/users/kjetilkjeka/repos", "events_url": "https://api.github.com/users/kjetilkjeka/events{/privacy}", "received_events_url": "https://api.github.com/users/kjetilkjeka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kjetilkjeka", "id": 5366742, "node_id": "MDQ6VXNlcjUzNjY3NDI=", "avatar_url": "https://avatars.githubusercontent.com/u/5366742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kjetilkjeka", "html_url": "https://github.com/kjetilkjeka", "followers_url": "https://api.github.com/users/kjetilkjeka/followers", "following_url": "https://api.github.com/users/kjetilkjeka/following{/other_user}", "gists_url": "https://api.github.com/users/kjetilkjeka/gists{/gist_id}", "starred_url": "https://api.github.com/users/kjetilkjeka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kjetilkjeka/subscriptions", "organizations_url": "https://api.github.com/users/kjetilkjeka/orgs", "repos_url": "https://api.github.com/users/kjetilkjeka/repos", "events_url": "https://api.github.com/users/kjetilkjeka/events{/privacy}", "received_events_url": "https://api.github.com/users/kjetilkjeka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5af97e8b0b9649ed14b0b4528a610ff841b6365e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5af97e8b0b9649ed14b0b4528a610ff841b6365e", "html_url": "https://github.com/rust-lang/rust/commit/5af97e8b0b9649ed14b0b4528a610ff841b6365e"}], "stats": {"total": 35, "additions": 0, "deletions": 35}, "files": [{"sha": "639ce64a9f557c3b404383ea1b78751bb735b8cd", "filename": "compiler/rustc_target/src/abi/call/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22930b7b25b12e53be9752e4fb8537c8abf709c8/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22930b7b25b12e53be9752e4fb8537c8abf709c8/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fmod.rs?ref=22930b7b25b12e53be9752e4fb8537c8abf709c8", "patch": "@@ -14,7 +14,6 @@ mod m68k;\n mod mips;\n mod mips64;\n mod msp430;\n-mod nvptx;\n mod nvptx64;\n mod powerpc;\n mod powerpc64;\n@@ -702,7 +701,6 @@ impl<'a, Ty> FnAbi<'a, Ty> {\n             \"msp430\" => msp430::compute_abi_info(self),\n             \"sparc\" => sparc::compute_abi_info(cx, self),\n             \"sparc64\" => sparc64::compute_abi_info(cx, self),\n-            \"nvptx\" => nvptx::compute_abi_info(self),\n             \"nvptx64\" => {\n                 if cx.target_spec().adjust_abi(abi) == spec::abi::Abi::PtxKernel {\n                     nvptx64::compute_ptx_kernel_abi_info(cx, self)"}, {"sha": "428dd95bbcd65be12d69d05b56ad90119e7e5126", "filename": "compiler/rustc_target/src/abi/call/nvptx.rs", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5af97e8b0b9649ed14b0b4528a610ff841b6365e/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fnvptx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5af97e8b0b9649ed14b0b4528a610ff841b6365e/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fnvptx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fabi%2Fcall%2Fnvptx.rs?ref=5af97e8b0b9649ed14b0b4528a610ff841b6365e", "patch": "@@ -1,33 +0,0 @@\n-// Reference: PTX Writer's Guide to Interoperability\n-// https://docs.nvidia.com/cuda/ptx-writers-guide-to-interoperability\n-\n-use crate::abi::call::{ArgAbi, FnAbi};\n-\n-fn classify_ret<Ty>(ret: &mut ArgAbi<'_, Ty>) {\n-    if ret.layout.is_aggregate() && ret.layout.size.bits() > 32 {\n-        ret.make_indirect();\n-    } else {\n-        ret.extend_integer_width_to(32);\n-    }\n-}\n-\n-fn classify_arg<Ty>(arg: &mut ArgAbi<'_, Ty>) {\n-    if arg.layout.is_aggregate() && arg.layout.size.bits() > 32 {\n-        arg.make_indirect();\n-    } else {\n-        arg.extend_integer_width_to(32);\n-    }\n-}\n-\n-pub fn compute_abi_info<Ty>(fn_abi: &mut FnAbi<'_, Ty>) {\n-    if !fn_abi.ret.is_ignore() {\n-        classify_ret(&mut fn_abi.ret);\n-    }\n-\n-    for arg in &mut fn_abi.args {\n-        if arg.is_ignore() {\n-            continue;\n-        }\n-        classify_arg(arg);\n-    }\n-}"}]}