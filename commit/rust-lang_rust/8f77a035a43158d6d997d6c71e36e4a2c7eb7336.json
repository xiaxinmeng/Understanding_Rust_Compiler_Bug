{"sha": "8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNzdhMDM1YTQzMTU4ZDZkOTk3ZDZjNzFlMzZlNGEyYzdlYjczMzY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-17T21:37:50Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-04-17T21:37:52Z"}, "message": "Do not mention missing `PartialOrd` impl when involving uncalled fns", "tree": {"sha": "62b5313f6424af16df0f1e200be088a00a014af6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/62b5313f6424af16df0f1e200be088a00a014af6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "html_url": "https://github.com/rust-lang/rust/commit/8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70f130954d6fd36fe3e77f4b5b33e5af50489288", "url": "https://api.github.com/repos/rust-lang/rust/commits/70f130954d6fd36fe3e77f4b5b33e5af50489288", "html_url": "https://github.com/rust-lang/rust/commit/70f130954d6fd36fe3e77f4b5b33e5af50489288"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "46c81d34d1b678e26445245fbe21fce7ae431335", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "patch": "@@ -332,16 +332,17 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                 op.node.as_str(),\n                                 lhs_ty);\n \n+                            let mut involves_fn = false;\n                             if !lhs_expr.span.eq(&rhs_expr.span) {\n-                                self.add_type_neq_err_label(\n+                                involves_fn |= self.add_type_neq_err_label(\n                                     &mut err,\n                                     lhs_expr.span,\n                                     lhs_ty,\n                                     rhs_ty,\n                                     op,\n                                     is_assign\n                                 );\n-                                self.add_type_neq_err_label(\n+                                involves_fn |= self.add_type_neq_err_label(\n                                     &mut err,\n                                     rhs_expr.span,\n                                     rhs_ty,\n@@ -410,7 +411,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                                         \"`{}` might need a bound for `{}`\",\n                                         lhs_ty, missing_trait\n                                     ));\n-                                } else if !suggested_deref {\n+                                } else if !suggested_deref && !involves_fn {\n                                     err.note(&format!(\n                                         \"an implementation of `{}` might \\\n                                          be missing for `{}`\",\n@@ -437,7 +438,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n         other_ty: Ty<'tcx>,\n         op: hir::BinOp,\n         is_assign: IsAssign,\n-    ) {\n+    ) -> bool {\n         err.span_label(span, ty.to_string());\n         if let FnDef(def_id, _) = ty.sty {\n             let source_map = self.tcx.sess.source_map();\n@@ -481,8 +482,10 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     variable_snippet,\n                     applicability,\n                 );\n+                return true;\n             }\n         }\n+        false\n     }\n \n     fn check_str_addition("}, {"sha": "c64070a2022d9d0dd13b9c123b9a87fdbbc5a1c0", "filename": "src/test/ui/fn/fn-compare-mismatch.stderr", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Ftest%2Fui%2Ffn%2Ffn-compare-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Ftest%2Fui%2Ffn%2Ffn-compare-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffn%2Ffn-compare-mismatch.stderr?ref=8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "patch": "@@ -5,8 +5,6 @@ LL |     let x = f == g;\n    |             - ^^ - fn() {main::g}\n    |             |\n    |             fn() {main::f}\n-   |\n-   = note: an implementation of `std::cmp::PartialEq` might be missing for `fn() {main::f}`\n help: you might have forgotten to call this function\n    |\n LL |     let x = f() == g;"}, {"sha": "d5fab0a6f9b267aeeb6e107524c5b7dc7cc556d8", "filename": "src/test/ui/issues/issue-59488.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Ftest%2Fui%2Fissues%2Fissue-59488.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Ftest%2Fui%2Fissues%2Fissue-59488.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59488.rs?ref=8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "patch": "@@ -10,17 +10,17 @@ fn bar(a: i64) -> i64 {\n \n fn main() {\n     foo > 12;\n-    //~^ ERROR 12:9: 12:10: binary operation `>` cannot be applied to type `fn() -> i32 {foo}` [E0369]\n-    //~| ERROR 12:11: 12:13: mismatched types [E0308]\n+    //~^ ERROR binary operation `>` cannot be applied to type `fn() -> i32 {foo}` [E0369]\n+    //~| ERROR mismatched types [E0308]\n \n     bar > 13;\n-    //~^ ERROR 16:9: 16:10: binary operation `>` cannot be applied to type `fn(i64) -> i64 {bar}` [E0369]\n-    //~| ERROR 16:11: 16:13: mismatched types [E0308]\n+    //~^ ERROR binary operation `>` cannot be applied to type `fn(i64) -> i64 {bar}` [E0369]\n+    //~| ERROR mismatched types [E0308]\n \n     foo > foo;\n-    //~^ ERROR 20:9: 20:10: binary operation `>` cannot be applied to type `fn() -> i32 {foo}` [E0369]\n+    //~^ ERROR binary operation `>` cannot be applied to type `fn() -> i32 {foo}` [E0369]\n \n     foo > bar;\n-    //~^ ERROR 23:9: 23:10: binary operation `>` cannot be applied to type `fn() -> i32 {foo}` [E0369]\n-    //~| ERROR 23:11: 23:14: mismatched types [E0308]\n+    //~^ ERROR binary operation `>` cannot be applied to type `fn() -> i32 {foo}` [E0369]\n+    //~| ERROR mismatched types [E0308]\n }"}, {"sha": "615adb36d330cebe5fa436802a54a4e2812be26e", "filename": "src/test/ui/issues/issue-59488.stderr", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8f77a035a43158d6d997d6c71e36e4a2c7eb7336/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-59488.stderr?ref=8f77a035a43158d6d997d6c71e36e4a2c7eb7336", "patch": "@@ -6,8 +6,6 @@ LL |     foo > 12;\n    |     |\n    |     fn() -> i32 {foo}\n    |     help: you might have forgotten to call this function: `foo()`\n-   |\n-   = note: an implementation of `std::cmp::PartialOrd` might be missing for `fn() -> i32 {foo}`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-59488.rs:12:11\n@@ -26,8 +24,6 @@ LL |     bar > 13;\n    |     |\n    |     fn(i64) -> i64 {bar}\n    |     help: you might have forgotten to call this function: `bar( /* arguments */ )`\n-   |\n-   = note: an implementation of `std::cmp::PartialOrd` might be missing for `fn(i64) -> i64 {bar}`\n \n error[E0308]: mismatched types\n   --> $DIR/issue-59488.rs:16:11\n@@ -45,8 +41,6 @@ LL |     foo > foo;\n    |     --- ^ --- fn() -> i32 {foo}\n    |     |\n    |     fn() -> i32 {foo}\n-   |\n-   = note: an implementation of `std::cmp::PartialOrd` might be missing for `fn() -> i32 {foo}`\n help: you might have forgotten to call this function\n    |\n LL |     foo() > foo;"}]}