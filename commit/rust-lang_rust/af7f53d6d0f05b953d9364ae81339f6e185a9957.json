{"sha": "af7f53d6d0f05b953d9364ae81339f6e185a9957", "node_id": "C_kwDOAAsO6NoAKGFmN2Y1M2Q2ZDBmMDViOTUzZDkzNjRhZTgxMzM5ZjZlMTg1YTk5NTc", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-05-17T04:51:20Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2022-05-19T06:15:00Z"}, "message": "Add mir-opt test for asm_unwind + panic=abort", "tree": {"sha": "8211693d043cb797c3f7dd79058e8317c775de6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8211693d043cb797c3f7dd79058e8317c775de6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af7f53d6d0f05b953d9364ae81339f6e185a9957", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af7f53d6d0f05b953d9364ae81339f6e185a9957", "html_url": "https://github.com/rust-lang/rust/commit/af7f53d6d0f05b953d9364ae81339f6e185a9957", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af7f53d6d0f05b953d9364ae81339f6e185a9957/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f45f8262078bde0435560a1e17fb749d0f46dc30", "url": "https://api.github.com/repos/rust-lang/rust/commits/f45f8262078bde0435560a1e17fb749d0f46dc30", "html_url": "https://github.com/rust-lang/rust/commit/f45f8262078bde0435560a1e17fb749d0f46dc30"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "44d722d6f9bffae1238a0e4932ceae8df8041f92", "filename": "src/test/mir-opt/asm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/af7f53d6d0f05b953d9364ae81339f6e185a9957/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/af7f53d6d0f05b953d9364ae81339f6e185a9957/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir?ref=af7f53d6d0f05b953d9364ae81339f6e185a9957", "patch": "@@ -0,0 +1,24 @@\n+// MIR for `main` after AbortUnwindingCalls\n+\n+fn main() -> () {\n+    let mut _0: ();                      // return place in scope 0 at $DIR/asm_unwind_panic_abort.rs:12:11: 12:11\n+    let _1: ();                          // in scope 0 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+    scope 1 {\n+    }\n+\n+    bb0: {\n+        StorageLive(_1);                 // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+        _1 = const ();                   // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+        asm!(\"\", options(MAY_UNWIND)) -> [return: bb1, unwind: bb2]; // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:9: 14:49\n+    }\n+\n+    bb1: {\n+        StorageDead(_1);                 // scope 1 at $DIR/asm_unwind_panic_abort.rs:14:48: 14:49\n+        _0 = const ();                   // scope 1 at $DIR/asm_unwind_panic_abort.rs:13:5: 15:6\n+        return;                          // scope 0 at $DIR/asm_unwind_panic_abort.rs:16:2: 16:2\n+    }\n+\n+    bb2 (cleanup): {\n+        abort;                           // scope 0 at $DIR/asm_unwind_panic_abort.rs:12:1: 16:2\n+    }\n+}"}, {"sha": "8201d54348a839fa4c09f6648350bb95fe9a581c", "filename": "src/test/mir-opt/asm_unwind_panic_abort.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af7f53d6d0f05b953d9364ae81339f6e185a9957/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af7f53d6d0f05b953d9364ae81339f6e185a9957/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fasm_unwind_panic_abort.rs?ref=af7f53d6d0f05b953d9364ae81339f6e185a9957", "patch": "@@ -0,0 +1,16 @@\n+//! Tests that unwinding from an asm block is caught and forced to abort\n+//! when `-C panic=abort`.\n+\n+// min-llvm-version: 13.0.0\n+// only-x86_64\n+// compile-flags: -C panic=abort\n+// no-prefer-dynamic\n+\n+#![feature(asm_unwind)]\n+\n+// EMIT_MIR asm_unwind_panic_abort.main.AbortUnwindingCalls.after.mir\n+fn main() {\n+    unsafe {\n+        std::arch::asm!(\"\", options(may_unwind));\n+    }\n+}"}]}