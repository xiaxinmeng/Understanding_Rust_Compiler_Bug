{"sha": "322b2045f2c0cf3675957c3e6d287abab0da2e05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMmIyMDQ1ZjJjMGNmMzY3NTk1N2MzZTZkMjg3YWJhYjBkYTJlMDU=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-17T19:26:32Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-04-22T19:12:33Z"}, "message": "Revert old span change", "tree": {"sha": "0bab147e8f412a812c7755542535004b7feed72f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0bab147e8f412a812c7755542535004b7feed72f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/322b2045f2c0cf3675957c3e6d287abab0da2e05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/322b2045f2c0cf3675957c3e6d287abab0da2e05", "html_url": "https://github.com/rust-lang/rust/commit/322b2045f2c0cf3675957c3e6d287abab0da2e05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/322b2045f2c0cf3675957c3e6d287abab0da2e05/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f43fc020935aaf0ca545c1fca2ec7c2ae923f9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f43fc020935aaf0ca545c1fca2ec7c2ae923f9f", "html_url": "https://github.com/rust-lang/rust/commit/1f43fc020935aaf0ca545c1fca2ec7c2ae923f9f"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "7c6abd8def690559b5d14553c93b793235244011", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -1017,18 +1017,8 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n \n         self.prohibit_generics(trait_ref.path.segments.split_last().unwrap().1);\n \n-        let path_span = if let [segment] = &trait_ref.path.segments[..] {\n-            // FIXME: `trait_ref.path.span` can point to a full path with multiple\n-            // segments, even though `trait_ref.path.segments` is of length `1`. Work\n-            // around that bug here, even though it should be fixed elsewhere.\n-            // This would otherwise cause an invalid suggestion. For an example, look at\n-            // `src/test/ui/issues/issue-28344.rs`.\n-            segment.ident.span\n-        } else {\n-            trait_ref.path.span\n-        };\n         let (substs, assoc_bindings, arg_count_correct) = self.create_substs_for_ast_trait_ref(\n-            path_span,\n+            trait_ref.path.span,\n             trait_def_id,\n             self_ty,\n             trait_ref.path.segments.last().unwrap(),"}, {"sha": "f5ff54cc916cb364748c68c77919e3dd39d5bfa0", "filename": "src/test/ui/suggestions/missing-lifetime-specifier.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmissing-lifetime-specifier.stderr?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -218,13 +218,13 @@ error[E0107]: wrong number of lifetime arguments: expected 2, found 1\n   --> $DIR/missing-lifetime-specifier.rs:54:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                             ^^^ expected 2 lifetime arguments\n+   |                                             ^^^^^^^^^^^^^^^^^ expected 2 lifetime arguments\n \n error[E0107]: wrong number of lifetime arguments: expected 2, found 1\n   --> $DIR/missing-lifetime-specifier.rs:54:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                             ^^^ expected 2 lifetime arguments\n+   |                                             ^^^^^^^^^^^^^^^^^ expected 2 lifetime arguments\n \n error[E0228]: the lifetime bound for this object type cannot be deduced from context; please supply an explicit bound\n   --> $DIR/missing-lifetime-specifier.rs:54:45\n@@ -236,7 +236,7 @@ error[E0107]: wrong number of lifetime arguments: expected 2, found 1\n   --> $DIR/missing-lifetime-specifier.rs:54:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                             ^^^ expected 2 lifetime arguments\n+   |                                             ^^^^^^^^^^^^^^^^^ expected 2 lifetime arguments\n \n error[E0228]: the lifetime bound for this object type cannot be deduced from context; please supply an explicit bound\n   --> $DIR/missing-lifetime-specifier.rs:54:45\n@@ -248,7 +248,7 @@ error[E0107]: wrong number of lifetime arguments: expected 2, found 1\n   --> $DIR/missing-lifetime-specifier.rs:54:45\n    |\n LL |     static f: RefCell<HashMap<i32, Vec<Vec<&Tar<'static, i32>>>>> = RefCell::new(HashMap::new());\n-   |                                             ^^^ expected 2 lifetime arguments\n+   |                                             ^^^^^^^^^^^^^^^^^ expected 2 lifetime arguments\n \n error: aborting due to 28 previous errors\n "}, {"sha": "b824d160d716006d2a969d4b40072f2f567a5e3f", "filename": "src/test/ui/unboxed-closures/unboxed-closure-feature-gate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-feature-gate.stderr?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -2,7 +2,7 @@ error[E0658]: parenthetical notation is only stable when used with `Fn`-family t\n   --> $DIR/unboxed-closure-feature-gate.rs:13:20\n    |\n LL |     let x: Box<dyn Foo(isize)>;\n-   |                    ^^^\n+   |                    ^^^^^^^^^^\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable"}, {"sha": "9da36906d55420cd9175e234a0652ecba91761ae", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-not-used-on-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-not-used-on-fn.stderr?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -2,7 +2,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/unboxed-closure-sugar-not-used-on-fn.rs:3:17\n    |\n LL | fn bar1(x: &dyn Fn<(), Output=()>) {\n-   |                 ^^ help: use parenthetical notation instead: `Fn() -> ()`\n+   |                 ^^^^^^^^^^^^^^^^^ help: use parenthetical notation instead: `Fn() -> ()`\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable\n@@ -11,7 +11,7 @@ error[E0658]: the precise format of `Fn`-family traits' type parameters is subje\n   --> $DIR/unboxed-closure-sugar-not-used-on-fn.rs:7:28\n    |\n LL | fn bar2<T>(x: &T) where T: Fn<()> {\n-   |                            ^^ help: use parenthetical notation instead: `Fn() -> ()`\n+   |                            ^^^^^^ help: use parenthetical notation instead: `Fn() -> ()`\n    |\n    = note: see issue #29625 <https://github.com/rust-lang/rust/issues/29625> for more information\n    = help: add `#![feature(unboxed_closures)]` to the crate attributes to enable"}, {"sha": "e9d51983a7a483f077daec9897419acad1e03a15", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-region.stderr?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -2,7 +2,7 @@ error[E0107]: wrong number of lifetime arguments: expected 1, found 0\n   --> $DIR/unboxed-closure-sugar-region.rs:30:51\n    |\n LL | fn test2(x: &dyn Foo<(isize,),Output=()>, y: &dyn Foo(isize)) {\n-   |                                                   ^^^ expected 1 lifetime argument\n+   |                                                   ^^^^^^^^^^ expected 1 lifetime argument\n \n error: aborting due to previous error\n "}, {"sha": "f42ac38d370d57e2b73ca6e66ed65746f5e501fe", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.stderr?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -2,7 +2,7 @@ error[E0107]: wrong number of type arguments: expected 3, found 1\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters-3.rs:5:16\n    |\n LL | fn foo(_: &dyn Three())\n-   |                ^^^^^ expected 3 type arguments\n+   |                ^^^^^^^ expected 3 type arguments\n \n error[E0220]: associated type `Output` not found for `Three<(), [type error], [type error]>`\n   --> $DIR/unboxed-closure-sugar-wrong-number-number-type-parameters-3.rs:5:16"}, {"sha": "9310b3d7ede004bacaf0e4b47768c5fd07a90a82", "filename": "src/test/ui/unspecified-self-in-trait-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funspecified-self-in-trait-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/322b2045f2c0cf3675957c3e6d287abab0da2e05/src%2Ftest%2Fui%2Funspecified-self-in-trait-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funspecified-self-in-trait-ref.stderr?ref=322b2045f2c0cf3675957c3e6d287abab0da2e05", "patch": "@@ -31,7 +31,7 @@ LL | | }\n    | |_- type parameter `A` must be specified for this\n ...\n LL |       let e = Bar::<usize>::lol();\n-   |               ^^^ missing reference to `A`\n+   |               ^^^^^^^^^^^^^^^^^ missing reference to `A`\n    |\n    = note: because of the default `Self` reference, type parameters must be specified on object types\n "}]}