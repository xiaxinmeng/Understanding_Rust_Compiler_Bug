{"sha": "a7838d8bd7e7e1e25a843de74340284832c5e3ac", "node_id": "C_kwDOAAsO6NoAKGE3ODM4ZDhiZDdlN2UxZTI1YTg0M2RlNzQzNDAyODQ4MzJjNWUzYWM", "commit": {"author": {"name": "mejrs", "email": "", "date": "2022-12-04T00:13:21Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-12-04T00:13:21Z"}, "message": "Always evaluate vecs of subdiagnostics eagerly", "tree": {"sha": "c77cd10f7855db1f564d68261c9d6a671cc31f57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c77cd10f7855db1f564d68261c9d6a671cc31f57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7838d8bd7e7e1e25a843de74340284832c5e3ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7838d8bd7e7e1e25a843de74340284832c5e3ac", "html_url": "https://github.com/rust-lang/rust/commit/a7838d8bd7e7e1e25a843de74340284832c5e3ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7838d8bd7e7e1e25a843de74340284832c5e3ac/comments", "author": {}, "committer": {}, "parents": [{"sha": "d6c4de0fb22fe8f3cc5a27e94b6b6d88fb504a91", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c4de0fb22fe8f3cc5a27e94b6b6d88fb504a91", "html_url": "https://github.com/rust-lang/rust/commit/d6c4de0fb22fe8f3cc5a27e94b6b6d88fb504a91"}], "stats": {"total": 105, "additions": 48, "deletions": 57}, "files": [{"sha": "c4f11472d55482e979acfdb41894115a7a6a4923", "filename": "compiler/rustc_infer/src/errors/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Ferrors%2Fmod.rs?ref=a7838d8bd7e7e1e25a843de74340284832c5e3ac", "patch": "@@ -517,6 +517,6 @@ pub struct MismatchedStaticLifetime<'a> {\n     pub expl: Option<note_and_explain::RegionExplanation<'a>>,\n     #[subdiagnostic]\n     pub does_not_outlive_static_from_impl: DoesNotOutliveStaticFromImpl,\n-    #[subdiagnostic(eager)]\n+    #[subdiagnostic]\n     pub implicit_static_lifetimes: Vec<ImplicitStaticLifetimeSubdiag>,\n }"}, {"sha": "90efe70896ddcef0fb7bfc9bba0a6f89e99c7b86", "filename": "compiler/rustc_macros/src/diagnostics/diagnostic_builder.rs", "status": "modified", "additions": 11, "deletions": 36, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Fdiagnostic_builder.rs?ref=a7838d8bd7e7e1e25a843de74340284832c5e3ac", "patch": "@@ -372,46 +372,21 @@ impl<'a> DiagnosticDeriveVariantBuilder<'a> {\n                 }\n             }\n             (Meta::Path(_), \"subdiagnostic\") => {\n-                return Ok(quote! { #diag.subdiagnostic(#binding); });\n+                if FieldInnerTy::from_type(&info.binding.ast().ty).will_iterate() {\n+                    let DiagnosticDeriveKind::Diagnostic { handler } = &self.parent.kind else {\n+                        // No eager translation for lints.\n+                        return Ok(quote! { #diag.subdiagnostic(#binding); });\n+                    };\n+                    return Ok(quote! { #diag.eager_subdiagnostic(#handler, #binding); });\n+                } else {\n+                    return Ok(quote! { #diag.subdiagnostic(#binding); });\n+                }\n             }\n-            (Meta::NameValue(_), \"subdiagnostic\") => {\n+            (Meta::List(_), \"subdiagnostic\") => {\n                 throw_invalid_attr!(attr, &meta, |diag| {\n-                    diag.help(\"`eager` is the only supported nested attribute for `subdiagnostic`\")\n+                    diag.help(\"`subdiagnostic` does not support nested attributes\")\n                 })\n             }\n-            (Meta::List(MetaList { ref nested, .. }), \"subdiagnostic\") => {\n-                if nested.len() != 1 {\n-                    throw_invalid_attr!(attr, &meta, |diag| {\n-                        diag.help(\n-                            \"`eager` is the only supported nested attribute for `subdiagnostic`\",\n-                        )\n-                    })\n-                }\n-\n-                let handler = match &self.parent.kind {\n-                    DiagnosticDeriveKind::Diagnostic { handler } => handler,\n-                    DiagnosticDeriveKind::LintDiagnostic => {\n-                        throw_invalid_attr!(attr, &meta, |diag| {\n-                            diag.help(\"eager subdiagnostics are not supported on lints\")\n-                        })\n-                    }\n-                };\n-\n-                let nested_attr = nested.first().expect(\"pop failed for single element list\");\n-                match nested_attr {\n-                    NestedMeta::Meta(meta @ Meta::Path(_))\n-                        if meta.path().segments.last().unwrap().ident.to_string().as_str()\n-                            == \"eager\" =>\n-                    {\n-                        return Ok(quote! { #diag.eager_subdiagnostic(#handler, #binding); });\n-                    }\n-                    _ => {\n-                        throw_invalid_nested_attr!(attr, nested_attr, |diag| {\n-                            diag.help(\"`eager` is the only supported nested attribute for `subdiagnostic`\")\n-                        })\n-                    }\n-                }\n-            }\n             _ => (),\n         }\n "}, {"sha": "cf2f04c7486b846c0609109998fc8daedc75b8db", "filename": "compiler/rustc_query_system/src/error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Ferror.rs?ref=a7838d8bd7e7e1e25a843de74340284832c5e3ac", "patch": "@@ -49,7 +49,7 @@ pub struct Cycle {\n     #[primary_span]\n     pub span: Span,\n     pub stack_bottom: String,\n-    #[subdiagnostic(eager)]\n+    #[subdiagnostic]\n     pub cycle_stack: Vec<CycleStack>,\n     #[subdiagnostic]\n     pub stack_count: StackCount,"}, {"sha": "91cc31cc126587f6c19f1d03bfdd03a8e9dbcb33", "filename": "compiler/rustc_session/src/errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7838d8bd7e7e1e25a843de74340284832c5e3ac/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=a7838d8bd7e7e1e25a843de74340284832c5e3ac", "patch": "@@ -176,7 +176,7 @@ impl ExprParenthesesNeeded {\n #[derive(Diagnostic)]\n #[diag(session_skipping_const_checks)]\n pub struct SkippingConstChecks {\n-    #[subdiagnostic(eager)]\n+    #[subdiagnostic]\n     pub unleashed_features: Vec<UnleashedFeatureHelp>,\n }\n "}, {"sha": "c19b639a8d5819d1f84a23f9330cbd7a4f02f03d", "filename": "src/test/ui-fulldeps/session-diagnostic/diagnostic-derive.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7838d8bd7e7e1e25a843de74340284832c5e3ac/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7838d8bd7e7e1e25a843de74340284832c5e3ac/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs?ref=a7838d8bd7e7e1e25a843de74340284832c5e3ac", "patch": "@@ -683,7 +683,7 @@ struct RawIdentDiagnosticArg {\n #[diag(compiletest_example)]\n struct SubdiagnosticBad {\n     #[subdiagnostic(bad)]\n-    //~^ ERROR `#[subdiagnostic(bad)]` is not a valid attribute\n+    //~^ ERROR `#[subdiagnostic(...)]` is not a valid attribute\n     note: Note,\n }\n \n@@ -707,7 +707,7 @@ struct SubdiagnosticBadTwice {\n #[diag(compiletest_example)]\n struct SubdiagnosticBadLitStr {\n     #[subdiagnostic(\"bad\")]\n-    //~^ ERROR `#[subdiagnostic(\"...\")]` is not a valid attribute\n+    //~^ ERROR `#[subdiagnostic(...)]` is not a valid attribute\n     note: Note,\n }\n \n@@ -723,6 +723,7 @@ struct SubdiagnosticEagerLint {\n #[diag(compiletest_example)]\n struct SubdiagnosticEagerCorrect {\n     #[subdiagnostic(eager)]\n+    //~^ ERROR `#[subdiagnostic(...)]` is not a valid attribute\n     note: Note,\n }\n \n@@ -743,6 +744,7 @@ pub(crate) struct SubdiagnosticWithSuggestion {\n #[diag(compiletest_example)]\n struct SubdiagnosticEagerSuggestion {\n     #[subdiagnostic(eager)]\n+    //~^ ERROR `#[subdiagnostic(...)]` is not a valid attribute\n     sub: SubdiagnosticWithSuggestion,\n }\n "}, {"sha": "d0be7be66b868b711ea537fe48b74b48fdeed39c", "filename": "src/test/ui-fulldeps/session-diagnostic/diagnostic-derive.stderr", "status": "modified", "additions": 30, "deletions": 16, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/a7838d8bd7e7e1e25a843de74340284832c5e3ac/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a7838d8bd7e7e1e25a843de74340284832c5e3ac/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr?ref=a7838d8bd7e7e1e25a843de74340284832c5e3ac", "patch": "@@ -533,60 +533,74 @@ LL | #[label]\n    |\n    = help: `#[label]` and `#[suggestion]` can only be applied to fields\n \n-error: `#[subdiagnostic(bad)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:685:21\n+error: `#[subdiagnostic(...)]` is not a valid attribute\n+  --> $DIR/diagnostic-derive.rs:685:5\n    |\n LL |     #[subdiagnostic(bad)]\n-   |                     ^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n+   = help: `subdiagnostic` does not support nested attributes\n \n error: `#[subdiagnostic = ...]` is not a valid attribute\n   --> $DIR/diagnostic-derive.rs:693:5\n    |\n LL |     #[subdiagnostic = \"bad\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n \n error: `#[subdiagnostic(...)]` is not a valid attribute\n   --> $DIR/diagnostic-derive.rs:701:5\n    |\n LL |     #[subdiagnostic(bad, bad)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n+   = help: `subdiagnostic` does not support nested attributes\n \n-error: `#[subdiagnostic(\"...\")]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:709:21\n+error: `#[subdiagnostic(...)]` is not a valid attribute\n+  --> $DIR/diagnostic-derive.rs:709:5\n    |\n LL |     #[subdiagnostic(\"bad\")]\n-   |                     ^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: `eager` is the only supported nested attribute for `subdiagnostic`\n+   = help: `subdiagnostic` does not support nested attributes\n \n error: `#[subdiagnostic(...)]` is not a valid attribute\n   --> $DIR/diagnostic-derive.rs:717:5\n    |\n LL |     #[subdiagnostic(eager)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-   = help: eager subdiagnostics are not supported on lints\n+   = help: `subdiagnostic` does not support nested attributes\n+\n+error: `#[subdiagnostic(...)]` is not a valid attribute\n+  --> $DIR/diagnostic-derive.rs:725:5\n+   |\n+LL |     #[subdiagnostic(eager)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: `subdiagnostic` does not support nested attributes\n+\n+error: `#[subdiagnostic(...)]` is not a valid attribute\n+  --> $DIR/diagnostic-derive.rs:746:5\n+   |\n+LL |     #[subdiagnostic(eager)]\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: `subdiagnostic` does not support nested attributes\n \n error: expected at least one string literal for `code(...)`\n-  --> $DIR/diagnostic-derive.rs:775:18\n+  --> $DIR/diagnostic-derive.rs:777:18\n    |\n LL |     #[suggestion(code())]\n    |                  ^^^^^^\n \n error: `code(...)` must contain only string literals\n-  --> $DIR/diagnostic-derive.rs:783:23\n+  --> $DIR/diagnostic-derive.rs:785:23\n    |\n LL |     #[suggestion(code(foo))]\n    |                       ^^^\n \n error: `code = \"...\"`/`code(...)` must contain only string literals\n-  --> $DIR/diagnostic-derive.rs:791:18\n+  --> $DIR/diagnostic-derive.rs:793:18\n    |\n LL |     #[suggestion(code = 3)]\n    |                  ^^^^^^^^\n@@ -665,7 +679,7 @@ LL |         arg: impl IntoDiagnosticArg,\n    |                   ^^^^^^^^^^^^^^^^^ required by this bound in `DiagnosticBuilder::<'a, G>::set_arg`\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 83 previous errors\n+error: aborting due to 85 previous errors\n \n Some errors have detailed explanations: E0277, E0425.\n For more information about an error, try `rustc --explain E0277`."}]}