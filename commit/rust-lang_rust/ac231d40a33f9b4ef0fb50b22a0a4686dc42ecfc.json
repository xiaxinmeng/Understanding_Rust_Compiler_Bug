{"sha": "ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjMjMxZDQwYTMzZjliNGVmMGZiNTBiMjJhMGE0Njg2ZGM0MmVjZmM=", "commit": {"author": {"name": "flip1995", "email": "hello@philkrones.com", "date": "2018-10-02T08:59:41Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-10-09T23:38:38Z"}, "message": "Remove feature-gate code", "tree": {"sha": "24b078da7e4a1e64e93a5e1e951347c5285f0640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24b078da7e4a1e64e93a5e1e951347c5285f0640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc", "html_url": "https://github.com/rust-lang/rust/commit/ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a249981a4390130e45fc2d6b30e4f2f8b1c49803", "url": "https://api.github.com/repos/rust-lang/rust/commits/a249981a4390130e45fc2d6b30e4f2f8b1c49803", "html_url": "https://github.com/rust-lang/rust/commit/a249981a4390130e45fc2d6b30e4f2f8b1c49803"}], "stats": {"total": 17, "additions": 1, "deletions": 16}, "files": [{"sha": "bcba5c97e3317054f80a02e9b89050cc3280f85f", "filename": "src/librustc/lint/levels.rs", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc/src%2Flibrustc%2Flint%2Flevels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc/src%2Flibrustc%2Flint%2Flevels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Flevels.rs?ref=ac231d40a33f9b4ef0fb50b22a0a4686dc42ecfc", "patch": "@@ -22,7 +22,6 @@ use session::{config::nightly_options, Session};\n use syntax::ast;\n use syntax::attr;\n use syntax::source_map::MultiSpan;\n-use syntax::feature_gate;\n use syntax::symbol::Symbol;\n use util::nodemap::FxHashMap;\n \n@@ -228,28 +227,14 @@ impl<'a> LintLevelsBuilder<'a> {\n                     }\n                 };\n                 let tool_name = if let Some(lint_tool) = word.is_scoped() {\n-                    let gate_feature = !self.sess.features_untracked().tool_lints;\n-                    let known_tool = attr::is_known_lint_tool(lint_tool);\n-                    if gate_feature {\n-                        feature_gate::emit_feature_err(\n-                            &sess.parse_sess,\n-                            \"tool_lints\",\n-                            word.span,\n-                            feature_gate::GateIssue::Language,\n-                            &format!(\"scoped lint `{}` is experimental\", word.ident),\n-                        );\n-                    }\n-                    if !known_tool {\n+                    if !attr::is_known_lint_tool(lint_tool) {\n                         span_err!(\n                             sess,\n                             lint_tool.span,\n                             E0710,\n                             \"an unknown tool name found in scoped lint: `{}`\",\n                             word.ident\n                         );\n-                    }\n-\n-                    if gate_feature || !known_tool {\n                         continue;\n                     }\n "}]}