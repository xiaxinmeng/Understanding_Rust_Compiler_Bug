{"sha": "4e24b25c669965cf6a68c4b8e775cc83615d978a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlMjRiMjVjNjY5OTY1Y2Y2YTY4YzRiOGU3NzVjYzgzNjE1ZDk3OGE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-15T16:35:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-15T16:35:23Z"}, "message": "Merge #2565\n\n2565: Fixed syntax highlighting not refreshing on windows. r=matklad a=omerbenamram\n\nI was encoutering the same probelm described in #1690.\r\n\r\nIt seems that events initiated by the frontend with `rust-analyzer/decorationsRequest` would go through.\r\nSo whenever a user switches tabs, highlighting will update.\r\n\r\nHowever, when decorations are initiated by a notification with `rust-analyzer/publishDecorations`, it would fail on this check here https://github.com/rust-analyzer/rust-analyzer/blob/6cbd8a4a4bbca8a7656df9f3ef849acebbf9ef9b/editors/code/src/notifications/publish_decorations.ts#L15 (`targetEditor` will always be `undefined`).\r\n\r\nThis is because it's trying to match the uri `rust-analyzer` sends (which uses an uppercase drive letter) to the uri provided at `editor.document.uri.toString()`, which is both escaped (uses `%3a` for `:`), and uses a lowercase letter drive.\r\n\r\nAparrently this was an issue for some other extensions aswell - https://github.com/Microsoft/vscode/issues/68325.\r\n\r\nBut this is the defined behavior - https://github.com/microsoft/vscode/blob/c110d84460b3e45842a8fe753562341003595e1d/src/vs/vscode.d.ts#L1304\r\n\r\nThis fix is only relevant for windows.\r\nI've opted for a server-side fix, since rust will always return uppercase letters for drives, there seems to be no other easy solution than manipulating the Url string before sending it to the frontend.\r\n\r\n\r\nCloses #1690.\n\nCo-authored-by: Omer Ben-Amram <omerbenamram@gmail.com>", "tree": {"sha": "7d44ca9749add5146d0672192d14df9de6c2e730", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d44ca9749add5146d0672192d14df9de6c2e730"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e24b25c669965cf6a68c4b8e775cc83615d978a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd9mDLCRBK7hj4Ov3rIwAAdHIIAIOhRleCGZdkEa/2c53Ppm2k\nBESRLp5V73n7QsTf9RkHwaO0GAiAIzNuXknu10XDKoPpedVLgGfq7skW8VZgY3ZK\n7NahpAt9XEPorwB1bzP4unZF7H7MOJOgjDnFxSegK8Es9mECVZDXXqoCrLKAEhiQ\naQZukxsLC5XADmSdl1oeRHwhL4sZdPGlPGicZcCis5xG+1xQpPsHumZM7tlNjpCq\nhBTPK6gLHgMIxTk6m8hPuR+VPw0Os/1sX3uW9aDX9XbFFgwEFw9m00pkoTgvVucJ\nBPEmaPoHnDsbwEEcRlKm1Jt/ZrEqiJIWNK1wE/+XxVR6sLBImdr1ndhqqShHXxM=\n=gdnR\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d44ca9749add5146d0672192d14df9de6c2e730\nparent 4c1b2b921866279d014e377b958112b9e53edc52\nparent 6fba427bf35bebdc7aa08a241ecbe83a2f725127\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1576427723 +0000\ncommitter GitHub <noreply@github.com> 1576427723 +0000\n\nMerge #2565\n\n2565: Fixed syntax highlighting not refreshing on windows. r=matklad a=omerbenamram\n\nI was encoutering the same probelm described in #1690.\r\n\r\nIt seems that events initiated by the frontend with `rust-analyzer/decorationsRequest` would go through.\r\nSo whenever a user switches tabs, highlighting will update.\r\n\r\nHowever, when decorations are initiated by a notification with `rust-analyzer/publishDecorations`, it would fail on this check here https://github.com/rust-analyzer/rust-analyzer/blob/6cbd8a4a4bbca8a7656df9f3ef849acebbf9ef9b/editors/code/src/notifications/publish_decorations.ts#L15 (`targetEditor` will always be `undefined`).\r\n\r\nThis is because it's trying to match the uri `rust-analyzer` sends (which uses an uppercase drive letter) to the uri provided at `editor.document.uri.toString()`, which is both escaped (uses `%3a` for `:`), and uses a lowercase letter drive.\r\n\r\nAparrently this was an issue for some other extensions aswell - https://github.com/Microsoft/vscode/issues/68325.\r\n\r\nBut this is the defined behavior - https://github.com/microsoft/vscode/blob/c110d84460b3e45842a8fe753562341003595e1d/src/vs/vscode.d.ts#L1304\r\n\r\nThis fix is only relevant for windows.\r\nI've opted for a server-side fix, since rust will always return uppercase letters for drives, there seems to be no other easy solution than manipulating the Url string before sending it to the frontend.\r\n\r\n\r\nCloses #1690.\n\nCo-authored-by: Omer Ben-Amram <omerbenamram@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e24b25c669965cf6a68c4b8e775cc83615d978a", "html_url": "https://github.com/rust-lang/rust/commit/4e24b25c669965cf6a68c4b8e775cc83615d978a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e24b25c669965cf6a68c4b8e775cc83615d978a/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c1b2b921866279d014e377b958112b9e53edc52", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c1b2b921866279d014e377b958112b9e53edc52", "html_url": "https://github.com/rust-lang/rust/commit/4c1b2b921866279d014e377b958112b9e53edc52"}, {"sha": "6fba427bf35bebdc7aa08a241ecbe83a2f725127", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fba427bf35bebdc7aa08a241ecbe83a2f725127", "html_url": "https://github.com/rust-lang/rust/commit/6fba427bf35bebdc7aa08a241ecbe83a2f725127"}], "stats": {"total": 79, "additions": 74, "deletions": 5}, "files": [{"sha": "16cc11e8cefa9923daae1d3623fd9ac2c454f877", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 66, "deletions": 2, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/4e24b25c669965cf6a68c4b8e775cc83615d978a/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e24b25c669965cf6a68c4b8e775cc83615d978a/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=4e24b25c669965cf6a68c4b8e775cc83615d978a", "patch": "@@ -17,11 +17,13 @@ use ra_project_model::{get_rustc_cfg_options, ProjectWorkspace};\n use ra_vfs::{LineEndings, RootEntry, Vfs, VfsChange, VfsFile, VfsRoot, VfsTask, Watch};\n use ra_vfs_glob::{Glob, RustPackageFilterBuilder};\n use relative_path::RelativePathBuf;\n+use std::path::{Component, Prefix};\n \n use crate::{\n     main_loop::pending_requests::{CompletedRequest, LatestRequests},\n     LspError, Result,\n };\n+use std::str::FromStr;\n \n #[derive(Debug, Clone)]\n pub struct Options {\n@@ -233,8 +235,8 @@ impl WorldSnapshot {\n \n     pub fn file_id_to_uri(&self, id: FileId) -> Result<Url> {\n         let path = self.vfs.read().file2path(VfsFile(id.0));\n-        let url = Url::from_file_path(&path)\n-            .map_err(|_| format!(\"can't convert path to url: {}\", path.display()))?;\n+        let url = url_from_path_with_drive_lowercasing(path)?;\n+\n         Ok(url)\n     }\n \n@@ -279,3 +281,65 @@ impl WorldSnapshot {\n         self.analysis.feature_flags()\n     }\n }\n+\n+/// Returns a `Url` object from a given path, will lowercase drive letters if present.\n+/// This will only happen when processing windows paths.\n+///\n+/// When processing non-windows path, this is essentially the same as `Url::from_file_path`.\n+fn url_from_path_with_drive_lowercasing(path: impl AsRef<Path>) -> Result<Url> {\n+    let component_has_windows_drive = path\n+        .as_ref()\n+        .components()\n+        .find(|comp| {\n+            if let Component::Prefix(c) = comp {\n+                match c.kind() {\n+                    Prefix::Disk(_) | Prefix::VerbatimDisk(_) => return true,\n+                    _ => return false,\n+                }\n+            }\n+            false\n+        })\n+        .is_some();\n+\n+    // VSCode expects drive letters to be lowercased, where rust will uppercase the drive letters.\n+    if component_has_windows_drive {\n+        let url_original = Url::from_file_path(&path)\n+            .map_err(|_| format!(\"can't convert path to url: {}\", path.as_ref().display()))?;\n+\n+        let drive_partition: Vec<&str> = url_original.as_str().rsplitn(2, ':').collect();\n+\n+        // There is a drive partition, but we never found a colon.\n+        // This should not happen, but in this case we just pass it through.\n+        if drive_partition.len() == 1 {\n+            return Ok(url_original);\n+        }\n+\n+        let joined = drive_partition[1].to_ascii_lowercase() + \":\" + drive_partition[0];\n+        let url = Url::from_str(&joined).expect(\"This came from a valid `Url`\");\n+\n+        Ok(url)\n+    } else {\n+        Ok(Url::from_file_path(&path)\n+            .map_err(|_| format!(\"can't convert path to url: {}\", path.as_ref().display()))?)\n+    }\n+}\n+\n+// `Url` is not able to parse windows paths on unix machines.\n+#[cfg(target_os = \"windows\")]\n+#[cfg(test)]\n+mod path_conversion_windows_tests {\n+    use super::url_from_path_with_drive_lowercasing;\n+    #[test]\n+    fn test_lowercase_drive_letter_with_drive() {\n+        let url = url_from_path_with_drive_lowercasing(\"C:\\\\Test\").unwrap();\n+\n+        assert_eq!(url.to_string(), \"file:///c:/Test\");\n+    }\n+\n+    #[test]\n+    fn test_drive_without_colon_passthrough() {\n+        let url = url_from_path_with_drive_lowercasing(r#\"\\\\localhost\\C$\\my_dir\"#).unwrap();\n+\n+        assert_eq!(url.to_string(), \"file://localhost/C$/my_dir\");\n+    }\n+}"}, {"sha": "f23e286ad5d9fe4d5082176f5a9d2b31f0cd2ab5", "filename": "editors/code/src/notifications/publish_decorations.ts", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4e24b25c669965cf6a68c4b8e775cc83615d978a/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4e24b25c669965cf6a68c4b8e775cc83615d978a/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fnotifications%2Fpublish_decorations.ts?ref=4e24b25c669965cf6a68c4b8e775cc83615d978a", "patch": "@@ -9,11 +9,16 @@ export interface PublishDecorationsParams {\n }\n \n export function handle(params: PublishDecorationsParams) {\n-    const targetEditor = vscode.window.visibleTextEditors.find(\n-        editor => editor.document.uri.toString() === params.uri,\n-    );\n+    const targetEditor = vscode.window.visibleTextEditors.find(editor => {\n+        const unescapedUri = unescape(editor.document.uri.toString());\n+        // Unescaped URI looks like:\n+        // file:///c:/Workspace/ra-test/src/main.rs\n+        return unescapedUri === params.uri;\n+    });\n+\n     if (!Server.config.highlightingOn || !targetEditor) {\n         return;\n     }\n+\n     Server.highlighter.setHighlights(targetEditor, params.decorations);\n }"}]}