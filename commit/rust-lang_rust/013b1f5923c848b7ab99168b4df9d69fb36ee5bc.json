{"sha": "013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxM2IxZjU5MjNjODQ4YjdhYjk5MTY4YjRkZjlkNjlmYjM2ZWU1YmM=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2017-09-16T07:13:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-16T07:13:13Z"}, "message": "Merge pull request #2056 from topecongiro/issue-1851\n\nAdd suggestion to needless_borrow", "tree": {"sha": "3990bc207eb5aafa22b1a1c10c9f38f9116fb715", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3990bc207eb5aafa22b1a1c10c9f38f9116fb715"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "html_url": "https://github.com/rust-lang/rust/commit/013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f64bae4ae385172fd27ce03e74e0c0f2bf738159", "url": "https://api.github.com/repos/rust-lang/rust/commits/f64bae4ae385172fd27ce03e74e0c0f2bf738159", "html_url": "https://github.com/rust-lang/rust/commit/f64bae4ae385172fd27ce03e74e0c0f2bf738159"}, {"sha": "d8afe2ccbcab2248be6eedf7cf5f2cc77a4e8230", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8afe2ccbcab2248be6eedf7cf5f2cc77a4e8230", "html_url": "https://github.com/rust-lang/rust/commit/d8afe2ccbcab2248be6eedf7cf5f2cc77a4e8230"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "d8f892d40735855c5f0dfc4aa5877abeeda93490", "filename": "clippy_lints/src/needless_borrow.rs", "status": "modified", "additions": 21, "deletions": 6, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/clippy_lints%2Fsrc%2Fneedless_borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_borrow.rs?ref=013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "patch": "@@ -6,7 +6,7 @@ use rustc::lint::*;\n use rustc::hir::{BindingAnnotation, Expr, ExprAddrOf, MutImmutable, Pat, PatKind};\n use rustc::ty;\n use rustc::ty::adjustment::{Adjust, Adjustment};\n-use utils::{in_macro, span_lint};\n+use utils::{in_macro, snippet_opt, span_lint_and_then};\n \n /// **What it does:** Checks for address of operations (`&`) that are going to\n /// be dereferenced immediately by the compiler.\n@@ -54,12 +54,17 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n                         ..\n                     }] = *adj3\n                     {\n-                        span_lint(\n+                        span_lint_and_then(\n                             cx,\n                             NEEDLESS_BORROW,\n                             e.span,\n-                            \"this expression borrows a reference that is immediately dereferenced by the \\\n-                             compiler\",\n+                            \"this expression borrows a reference that is immediately dereferenced \\\n+                             by the compiler\",\n+                            |db| {\n+                                if let Some(snippet) = snippet_opt(cx, inner.span) {\n+                                    db.span_suggestion(e.span, \"change this to\", snippet);\n+                                }\n+                            }\n                         );\n                     }\n                 }\n@@ -71,14 +76,24 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBorrow {\n             return;\n         }\n         if_let_chain! {[\n-            let PatKind::Binding(BindingAnnotation::Ref, _, _, _) = pat.node,\n+            let PatKind::Binding(BindingAnnotation::Ref, _, name, _) = pat.node,\n             let ty::TyRef(_, ref tam) = cx.tables.pat_ty(pat).sty,\n             tam.mutbl == MutImmutable,\n             let ty::TyRef(_, ref tam) = tam.ty.sty,\n             // only lint immutable refs, because borrowed `&mut T` cannot be moved out\n             tam.mutbl == MutImmutable,\n         ], {\n-            span_lint(cx, NEEDLESS_BORROW, pat.span, \"this pattern creates a reference to a reference\")\n+            span_lint_and_then(\n+                cx,\n+                NEEDLESS_BORROW,\n+                pat.span,\n+                \"this pattern creates a reference to a reference\",\n+                |db| {\n+                    if let Some(snippet) = snippet_opt(cx, name.span) {\n+                        db.span_suggestion(pat.span, \"change this to\", snippet);\n+                    }\n+                }\n+            )\n         }}\n     }\n }"}, {"sha": "5dca265c2a400c4bb2a3d01b9c5b479f80d4d5fc", "filename": "tests/ui/eta.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/tests%2Fui%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/tests%2Fui%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feta.stderr?ref=013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "patch": "@@ -22,7 +22,7 @@ error: this expression borrows a reference that is immediately dereferenced by t\n   --> $DIR/eta.rs:11:21\n    |\n 11 |     all(&[1, 2, 3], &&2, |x, y| below(x, y)); //is adjusted\n-   |                     ^^^\n+   |                     ^^^ help: change this to: `&2`\n    |\n    = note: `-D needless-borrow` implied by `-D warnings`\n "}, {"sha": "fde38508b32333eec5f9b47629805d4ca6617562", "filename": "tests/ui/needless_borrow.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/tests%2Fui%2Fneedless_borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/013b1f5923c848b7ab99168b4df9d69fb36ee5bc/tests%2Fui%2Fneedless_borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_borrow.stderr?ref=013b1f5923c848b7ab99168b4df9d69fb36ee5bc", "patch": "@@ -2,21 +2,21 @@ error: this expression borrows a reference that is immediately dereferenced by t\n   --> $DIR/needless_borrow.rs:13:15\n    |\n 13 |     let c = x(&&a);\n-   |               ^^^\n+   |               ^^^ help: change this to: `&a`\n    |\n    = note: `-D needless-borrow` implied by `-D warnings`\n \n error: this pattern creates a reference to a reference\n   --> $DIR/needless_borrow.rs:20:17\n    |\n 20 |     if let Some(ref cake) = Some(&5) {}\n-   |                 ^^^^^^^^\n+   |                 ^^^^^^^^ help: change this to: `cake`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> $DIR/needless_borrow.rs:27:15\n    |\n 27 |         46 => &&a,\n-   |               ^^^\n+   |               ^^^ help: change this to: `&a`\n \n error: this pattern takes a reference on something that is being de-referenced\n   --> $DIR/needless_borrow.rs:49:34\n@@ -36,7 +36,7 @@ error: this pattern creates a reference to a reference\n   --> $DIR/needless_borrow.rs:50:31\n    |\n 50 |     let _ = v.iter().filter(|&ref a| a.is_empty());\n-   |                               ^^^^^\n+   |                               ^^^^^ help: change this to: `a`\n \n error: aborting due to 6 previous errors\n "}]}