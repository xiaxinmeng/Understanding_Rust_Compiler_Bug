{"sha": "e61a790495f49580fc0ee831bb07e00b4750b04a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2MWE3OTA0OTVmNDk1ODBmYzBlZTgzMWJiMDdlMDBiNDc1MGIwNGE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-25T08:28:58Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-25T08:28:58Z"}, "message": "Fix type inference error (fixup #22739)", "tree": {"sha": "0633b57a7b1982243495483c02e55e5fcd34acdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0633b57a7b1982243495483c02e55e5fcd34acdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e61a790495f49580fc0ee831bb07e00b4750b04a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e61a790495f49580fc0ee831bb07e00b4750b04a", "html_url": "https://github.com/rust-lang/rust/commit/e61a790495f49580fc0ee831bb07e00b4750b04a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e61a790495f49580fc0ee831bb07e00b4750b04a/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028", "html_url": "https://github.com/rust-lang/rust/commit/9f8a1cb38d4d6dd16291aa0fd9f19e93e5263028"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5bb2a134533ed0217b7dd9135b51e070e56fd346", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e61a790495f49580fc0ee831bb07e00b4750b04a/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e61a790495f49580fc0ee831bb07e00b4750b04a/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=e61a790495f49580fc0ee831bb07e00b4750b04a", "patch": "@@ -198,7 +198,7 @@ pub fn set_nonblocking(fd: sock_t, nb: bool) {\n     if unsafe { c::ioctlsocket(fd, c::FIONBIO, &mut set) } != 0 {\n         // The above function should not return an error unless we passed it\n         // invalid parameters. Panic on errors.\n-        Err(last_error()).unwrap();\n+        panic!(\"set_nonblocking called with invalid parameters: {}\", last_error());\n     }\n }\n "}]}