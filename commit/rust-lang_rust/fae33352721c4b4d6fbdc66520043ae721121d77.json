{"sha": "fae33352721c4b4d6fbdc66520043ae721121d77", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZTMzMzUyNzIxYzRiNGQ2ZmJkYzY2NTIwMDQzYWU3MjExMjFkNzc=", "commit": {"author": {"name": "Alex Burka", "email": "durka42+github@gmail.com", "date": "2016-06-14T01:10:12Z"}, "committer": {"name": "Alex Burka", "email": "aburka@seas.upenn.edu", "date": "2016-07-27T17:58:51Z"}, "message": "extern fns require named parameters\n\nNot sure the example is going to stay, but I can try to pass Travis for the bragging rights.", "tree": {"sha": "e10733e972ad29d512b6b883f8cbd4f4ce578f49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e10733e972ad29d512b6b883f8cbd4f4ce578f49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fae33352721c4b4d6fbdc66520043ae721121d77", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fae33352721c4b4d6fbdc66520043ae721121d77", "html_url": "https://github.com/rust-lang/rust/commit/fae33352721c4b4d6fbdc66520043ae721121d77", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fae33352721c4b4d6fbdc66520043ae721121d77/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1cceca8dfdda4a8bf3daa6a8c23adf7f23acd81a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1cceca8dfdda4a8bf3daa6a8c23adf7f23acd81a", "html_url": "https://github.com/rust-lang/rust/commit/1cceca8dfdda4a8bf3daa6a8c23adf7f23acd81a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "74c99273fa262d017bc50716b59926c295c824c2", "filename": "src/doc/book/ffi.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fae33352721c4b4d6fbdc66520043ae721121d77/src%2Fdoc%2Fbook%2Fffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/fae33352721c4b4d6fbdc66520043ae721121d77/src%2Fdoc%2Fbook%2Fffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook%2Fffi.md?ref=fae33352721c4b4d6fbdc66520043ae721121d77", "patch": "@@ -600,7 +600,7 @@ use std::os::raw::c_int;\n \n extern \"C\" {\n     /// Register the callback.\n-    fn register(Option<extern \"C\" fn(Option<extern \"C\" fn(c_int) -> c_int>, c_int) -> c_int>);\n+    fn register(cb: Option<extern \"C\" fn(Option<extern \"C\" fn(c_int) -> c_int>, c_int) -> c_int>);\n }\n \n /// This fairly useless function receives a function pointer and an integer"}]}