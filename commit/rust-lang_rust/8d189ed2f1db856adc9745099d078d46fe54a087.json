{"sha": "8d189ed2f1db856adc9745099d078d46fe54a087", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMTg5ZWQyZjFkYjg1NmFkYzk3NDUwOTlkMDc4ZDQ2ZmU1NGEwODc=", "commit": {"author": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-11-30T17:59:51Z"}, "committer": {"name": "Janusz Marcinkiewicz", "email": "virrages@gmail.com", "date": "2019-12-23T10:57:08Z"}, "message": "Suggest calling method when first argument is `self`", "tree": {"sha": "6b321df808d53123376b3301bb13d95fdf4c7444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b321df808d53123376b3301bb13d95fdf4c7444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d189ed2f1db856adc9745099d078d46fe54a087", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d189ed2f1db856adc9745099d078d46fe54a087", "html_url": "https://github.com/rust-lang/rust/commit/8d189ed2f1db856adc9745099d078d46fe54a087", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d189ed2f1db856adc9745099d078d46fe54a087/comments", "author": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "committer": {"login": "VirrageS", "id": 3855799, "node_id": "MDQ6VXNlcjM4NTU3OTk=", "avatar_url": "https://avatars.githubusercontent.com/u/3855799?v=4", "gravatar_id": "", "url": "https://api.github.com/users/VirrageS", "html_url": "https://github.com/VirrageS", "followers_url": "https://api.github.com/users/VirrageS/followers", "following_url": "https://api.github.com/users/VirrageS/following{/other_user}", "gists_url": "https://api.github.com/users/VirrageS/gists{/gist_id}", "starred_url": "https://api.github.com/users/VirrageS/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/VirrageS/subscriptions", "organizations_url": "https://api.github.com/users/VirrageS/orgs", "repos_url": "https://api.github.com/users/VirrageS/repos", "events_url": "https://api.github.com/users/VirrageS/events{/privacy}", "received_events_url": "https://api.github.com/users/VirrageS/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a916ac22b9f7f1f0f7aba0a41a789b3ecd765018", "url": "https://api.github.com/repos/rust-lang/rust/commits/a916ac22b9f7f1f0f7aba0a41a789b3ecd765018", "html_url": "https://github.com/rust-lang/rust/commit/a916ac22b9f7f1f0f7aba0a41a789b3ecd765018"}], "stats": {"total": 95, "additions": 88, "deletions": 7}, "files": [{"sha": "934380b7cfceaaa4e1b9bb0de4a372f32725520b", "filename": "src/doc/rustc-guide", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frustc-guide?ref=8d189ed2f1db856adc9745099d078d46fe54a087", "patch": "@@ -1 +1 @@\n-Subproject commit 7c56708aab7986ca390221e8e8902f7de7f9b076\n+Subproject commit 934380b7cfceaaa4e1b9bb0de4a372f32725520b"}, {"sha": "c356a7e31b177fe86c8ad728c111b91f502b8880", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=8d189ed2f1db856adc9745099d078d46fe54a087", "patch": "@@ -759,8 +759,8 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n             // These items live in both the type and value namespaces.\n             ItemKind::Struct(ref vdata, _) => {\n                 // Define a name in the type namespace.\n-                let def_id = self.r.definitions.local_def_id(item.id);\n-                let res = Res::Def(DefKind::Struct, def_id);\n+                let item_def_id = self.r.definitions.local_def_id(item.id);\n+                let res = Res::Def(DefKind::Struct, item_def_id);\n                 self.r.define(parent, ident, TypeNS, (res, vis, sp, expansion));\n \n                 // Record field names for error reporting.\n@@ -798,12 +798,12 @@ impl<'a, 'b> BuildReducedGraphVisitor<'a, 'b> {\n             }\n \n             ItemKind::Union(ref vdata, _) => {\n-                let def_id = self.r.definitions.local_def_id(item.id);\n-                let res = Res::Def(DefKind::Union, def_id);\n+                let item_def_id = self.r.definitions.local_def_id(item.id);\n+                let res = Res::Def(DefKind::Union, item_def_id);\n                 self.r.define(parent, ident, TypeNS, (res, vis, sp, expansion));\n \n                 // Record field names for error reporting.\n-                self.insert_field_names_local(def_id, vdata);\n+                self.insert_field_names_local(item_def_id, vdata);\n             }\n \n             ItemKind::Trait(..) => {"}, {"sha": "dd1bef0c297a916bcd97ee290e7eed91e0402bee", "filename": "src/librustc_resolve/late.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Flibrustc_resolve%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Flibrustc_resolve%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate.rs?ref=8d189ed2f1db856adc9745099d078d46fe54a087", "patch": "@@ -345,7 +345,7 @@ struct DiagnosticMetadata {\n     /// The current self item if inside an ADT (used for better errors).\n     current_self_item: Option<NodeId>,\n \n-    /// The current enclosing funciton (used for better errors).\n+    /// The current enclosing function (used for better errors).\n     current_function: Option<Span>,\n \n     /// A list of labels as of yet unused. Labels will be removed from this map when"}, {"sha": "e40c6fa70888812e3543c80fe81974666689a6c1", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=8d189ed2f1db856adc9745099d078d46fe54a087", "patch": "@@ -259,6 +259,37 @@ impl<'a> LateResolutionVisitor<'a, '_> {\n                 }\n                 return (err, candidates);\n             }\n+\n+            // Check if the first argument is `self` and suggest calling a method.\n+            let mut has_self_arg = false;\n+            if let PathSource::Expr(parent) = source {\n+                match &parent.map(|p| &p.kind) {\n+                    Some(ExprKind::Call(_, args)) if args.len() > 0 => {\n+                        let mut expr_kind = &args.first().unwrap().kind;\n+                        loop {\n+                            match expr_kind {\n+                                ExprKind::Path(_, arg_name) if arg_name.segments.len() == 1 => {\n+                                    has_self_arg = arg_name.segments[0].ident.name == kw::SelfLower;\n+                                    break;\n+                                },\n+                                ExprKind::AddrOf(_, _, expr) => { expr_kind = &expr.kind; }\n+                                _ => break,\n+                            }\n+                        }\n+                    }\n+                    _ => (),\n+                }\n+            };\n+\n+            if has_self_arg {\n+                err.span_suggestion(\n+                    span,\n+                    &\"try calling method instead of passing `self` as parameter\",\n+                    format!(\"self.{}\", path_str),\n+                    Applicability::MachineApplicable,\n+                );\n+                return (err, candidates);\n+            }\n         }\n \n         // Try Levenshtein algorithm."}, {"sha": "1926ebe4b8317ecd234ef90d61d7ac21e88c94fb", "filename": "src/test/ui/self/suggest-self-2.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.rs?ref=8d189ed2f1db856adc9745099d078d46fe54a087", "patch": "@@ -0,0 +1,22 @@\n+struct Foo {}\n+\n+impl Foo {\n+    fn foo(&self) {\n+        bar(self);\n+        //~^ ERROR cannot find function `bar` in this scope\n+        //~| HELP try calling method instead of passing `self` as parameter\n+\n+\n+        bar(&self);\n+        //~^ ERROR cannot find function `bar` in this scope\n+        //~| HELP try calling method instead of passing `self` as parameter\n+\n+        bar();\n+        //~^ ERROR cannot find function `bar` in this scope\n+\n+        self.bar();\n+        //~^ ERROR no method named `bar` found for type\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "84dbaa96378982b11adf93d235edc3fef156e2fb", "filename": "src/test/ui/self/suggest-self-2.stderr", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8d189ed2f1db856adc9745099d078d46fe54a087/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fsuggest-self-2.stderr?ref=8d189ed2f1db856adc9745099d078d46fe54a087", "patch": "@@ -0,0 +1,28 @@\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:5:9\n+   |\n+LL |         bar(self);\n+   |         ^^^ help: try calling method instead of passing `self` as parameter: `self.bar`\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:10:9\n+   |\n+LL |         bar(&self);\n+   |         ^^^ help: try calling method instead of passing `self` as parameter: `self.bar`\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/suggest-self-2.rs:14:9\n+   |\n+LL |         bar();\n+   |         ^^^ not found in this scope\n+\n+error[E0599]: no method named `bar` found for type `&Foo` in the current scope\n+  --> $DIR/suggest-self-2.rs:17:14\n+   |\n+LL |         self.bar();\n+   |              ^^^ method not found in `&Foo`\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0425, E0599.\n+For more information about an error, try `rustc --explain E0425`."}]}