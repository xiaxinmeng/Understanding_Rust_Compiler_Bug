{"sha": "f677deeab397c8672c74fa134978df9aa10e0ff3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NzdkZWVhYjM5N2M4NjcyYzc0ZmExMzQ5NzhkZjlhYTEwZTBmZjM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2014-12-23T11:55:12Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2015-01-05T11:10:27Z"}, "message": "Implement Clone for PRNGs", "tree": {"sha": "93011b840c8162b9b9104c3f209c84ac2e42d54c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93011b840c8162b9b9104c3f209c84ac2e42d54c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f677deeab397c8672c74fa134978df9aa10e0ff3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f677deeab397c8672c74fa134978df9aa10e0ff3", "html_url": "https://github.com/rust-lang/rust/commit/f677deeab397c8672c74fa134978df9aa10e0ff3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f677deeab397c8672c74fa134978df9aa10e0ff3/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5773bdefff2e47cc007f5cc2af3f80b30303d45a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5773bdefff2e47cc007f5cc2af3f80b30303d45a", "html_url": "https://github.com/rust-lang/rust/commit/5773bdefff2e47cc007f5cc2af3f80b30303d45a"}], "stats": {"total": 35, "additions": 20, "deletions": 15}, "files": [{"sha": "79d836baece9542c10845921b13c700850559f51", "filename": "src/librand/chacha.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibrand%2Fchacha.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibrand%2Fchacha.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fchacha.rs?ref=f677deeab397c8672c74fa134978df9aa10e0ff3", "patch": "@@ -12,7 +12,6 @@\n \n use core::prelude::*;\n use core::num::Int;\n-\n use {Rng, SeedableRng, Rand};\n \n const KEY_WORDS    : uint =  8; // 8 words for the 256-bit key\n@@ -28,8 +27,7 @@ const CHACHA_ROUNDS: uint = 20; // Cryptographically secure from 8 upwards as of\n ///\n /// [1]: D. J. Bernstein, [*ChaCha, a variant of\n /// Salsa20*](http://cr.yp.to/chacha.html)\n-\n-#[derive(Copy)]\n+#[deriving(Copy, Clone)]\n pub struct ChaChaRng {\n     buffer:  [u32; STATE_WORDS], // Internal buffer of output\n     state:   [u32; STATE_WORDS], // Initial state"}, {"sha": "c8a8da0818db84da71bb91f27655edc4b0f043e5", "filename": "src/librand/isaac.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibrand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibrand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fisaac.rs?ref=f677deeab397c8672c74fa134978df9aa10e0ff3", "patch": "@@ -179,6 +179,13 @@ impl IsaacRng {\n     }\n }\n \n+// Cannot be derived because [u32; 256] does not implement Clone\n+impl Clone for IsaacRng {\n+    fn clone(&self) -> IsaacRng {\n+        *self\n+    }\n+}\n+\n impl Rng for IsaacRng {\n     #[inline]\n     fn next_u32(&mut self) -> u32 {\n@@ -415,6 +422,13 @@ impl Isaac64Rng {\n     }\n }\n \n+// Cannot be derived because [u32; 256] does not implement Clone\n+impl Clone for Isaac64Rng {\n+    fn clone(&self) -> Isaac64Rng {\n+        *self\n+    }\n+}\n+\n impl Rng for Isaac64Rng {\n     // FIXME #7771: having next_u32 like this should be unnecessary\n     #[inline]\n@@ -485,6 +499,7 @@ impl Rand for Isaac64Rng {\n     }\n }\n \n+\n #[cfg(test)]\n mod test {\n     use std::prelude::v1::*;"}, {"sha": "d459bb83e98b5565a1f765eef3eed2981eaf4275", "filename": "src/librand/lib.rs", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibrand%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibrand%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Flib.rs?ref=f677deeab397c8672c74fa134978df9aa10e0ff3", "patch": "@@ -385,24 +385,14 @@ pub trait SeedableRng<Seed>: Rng {\n /// RNGs\"](http://www.jstatsoft.org/v08/i14/paper). *Journal of\n /// Statistical Software*. Vol. 8 (Issue 14).\n #[allow(missing_copy_implementations)]\n+#[deriving(Clone)]\n pub struct XorShiftRng {\n     x: u32,\n     y: u32,\n     z: u32,\n     w: u32,\n }\n \n-impl Clone for XorShiftRng {\n-    fn clone(&self) -> XorShiftRng {\n-        XorShiftRng {\n-            x: self.x,\n-            y: self.y,\n-            z: self.z,\n-            w: self.w,\n-        }\n-    }\n-}\n-\n impl XorShiftRng {\n     /// Creates a new XorShiftRng instance which is not seeded.\n     ///\n@@ -507,6 +497,7 @@ pub struct Closed01<F>(pub F);\n #[cfg(not(test))]\n mod std {\n     pub use core::{option, fmt}; // panic!()\n+    pub use core::clone; // derive Clone\n     pub use core::kinds;\n }\n "}, {"sha": "cadaae5de5c206a4e0b60d0e7a0e23df70aa87ca", "filename": "src/libstd/rand/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibstd%2Frand%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f677deeab397c8672c74fa134978df9aa10e0ff3/src%2Flibstd%2Frand%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fmod.rs?ref=f677deeab397c8672c74fa134978df9aa10e0ff3", "patch": "@@ -245,7 +245,7 @@ pub mod reader;\n \n /// The standard RNG. This is designed to be efficient on the current\n /// platform.\n-#[derive(Copy)]\n+#[deriving(Copy, Clone)]\n pub struct StdRng {\n     rng: IsaacWordRng,\n }\n@@ -322,6 +322,7 @@ static THREAD_RNG_RESEED_THRESHOLD: uint = 32_768;\n type ThreadRngInner = reseeding::ReseedingRng<StdRng, ThreadRngReseeder>;\n \n /// The thread-local RNG.\n+#[deriving(Clone)]\n pub struct ThreadRng {\n     rng: Rc<RefCell<ThreadRngInner>>,\n }"}]}