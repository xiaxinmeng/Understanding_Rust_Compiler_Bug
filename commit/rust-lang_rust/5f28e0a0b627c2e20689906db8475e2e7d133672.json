{"sha": "5f28e0a0b627c2e20689906db8475e2e7d133672", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmMjhlMGEwYjYyN2MyZTIwNjg5OTA2ZGI4NDc1ZTJlN2QxMzM2NzI=", "commit": {"author": {"name": "Denis Merigoux", "email": "denis.merigoux@gmail.com", "date": "2018-08-30T15:50:28Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-11-16T12:11:59Z"}, "message": "Added definition of type trait", "tree": {"sha": "19941cf1df88637f27e0218ce08ffe691f026b4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19941cf1df88637f27e0218ce08ffe691f026b4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f28e0a0b627c2e20689906db8475e2e7d133672", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f28e0a0b627c2e20689906db8475e2e7d133672", "html_url": "https://github.com/rust-lang/rust/commit/5f28e0a0b627c2e20689906db8475e2e7d133672", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f28e0a0b627c2e20689906db8475e2e7d133672/comments", "author": {"login": "denismerigoux", "id": 1766128, "node_id": "MDQ6VXNlcjE3NjYxMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1766128?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denismerigoux", "html_url": "https://github.com/denismerigoux", "followers_url": "https://api.github.com/users/denismerigoux/followers", "following_url": "https://api.github.com/users/denismerigoux/following{/other_user}", "gists_url": "https://api.github.com/users/denismerigoux/gists{/gist_id}", "starred_url": "https://api.github.com/users/denismerigoux/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denismerigoux/subscriptions", "organizations_url": "https://api.github.com/users/denismerigoux/orgs", "repos_url": "https://api.github.com/users/denismerigoux/repos", "events_url": "https://api.github.com/users/denismerigoux/events{/privacy}", "received_events_url": "https://api.github.com/users/denismerigoux/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e77f2fc4f679792bc9579fb9716c3a72fd1397b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e77f2fc4f679792bc9579fb9716c3a72fd1397b", "html_url": "https://github.com/rust-lang/rust/commit/3e77f2fc4f679792bc9579fb9716c3a72fd1397b"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "99921ac7eb8356646c4397a1a30ac7cc577dab45", "filename": "src/librustc_codegen_llvm/back/write.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Fwrite.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -434,6 +434,7 @@ impl<'ll> Backend for CodegenContext<'ll> {\n     type BasicBlock = &'ll BasicBlock;\n     type Type = &'ll Type;\n     type Context = &'ll llvm::Context;\n+    type TypeKind = llvm::TypeKind;\n }\n \n impl CommonWriteMethods for CodegenContext<'ll> {"}, {"sha": "0c8ff0c9d929064ccd7fa32308dead00ca3c0b4a", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -60,6 +60,7 @@ impl Backend for Builder<'a, 'll, 'tcx>  {\n         type Value = &'ll Value;\n         type BasicBlock = &'ll BasicBlock;\n         type Type = &'ll type_::Type;\n+        type TypeKind = llvm::TypeKind;\n         type Context = &'ll llvm::Context;\n }\n "}, {"sha": "dc46d23dd97d52606bd1c0807284dcc584fafdfe", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -197,6 +197,7 @@ impl Backend for CodegenCx<'ll, 'tcx> {\n     type Value = &'ll Value;\n     type BasicBlock = &'ll BasicBlock;\n     type Type = &'ll Type;\n+    type TypeKind = llvm::TypeKind;\n     type Context = &'ll llvm::Context;\n }\n "}, {"sha": "a2c80ef82c782572d7164fb97ae7ba31a75ec7ca", "filename": "src/librustc_codegen_llvm/interfaces/backend.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fbackend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fbackend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fbackend.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -13,6 +13,7 @@ use std::fmt::Debug;\n pub trait Backend {\n     type Value: Debug + PartialEq;\n     type BasicBlock;\n-    type Type;\n+    type Type : Debug + PartialEq;\n+    type TypeKind;\n     type Context;\n }"}, {"sha": "3e9c7eb881d1822f75d4a4b0b6bb331c573f275d", "filename": "src/librustc_codegen_llvm/interfaces/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Finterfaces%2Fmod.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -11,7 +11,9 @@\n mod builder;\n mod backend;\n mod common;\n+mod type_;\n \n pub use self::builder::BuilderMethods;\n pub use self::backend::Backend;\n pub use self::common::{CommonMethods, CommonWriteMethods};\n+pub use self::type_::TypeMethods;"}, {"sha": "2afa85accf99c5a1ceb3cdd437274852cb20feb0", "filename": "src/librustc_codegen_llvm/interfaces/type_.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Finterfaces%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Finterfaces%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Finterfaces%2Ftype_.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use super::backend::Backend;\n+\n+pub trait TypeMethods : Backend {\n+    fn void(&self) -> Self::Type;\n+    fn metadata(&self) -> Self::Type;\n+    fn i1(&self) -> Self::Type;\n+    fn i8(&self) -> Self::Type;\n+    fn i16(&self) -> Self::Type;\n+    fn i32(&self) -> Self::Type;\n+    fn i64(&self) -> Self::Type;\n+    fn i128(&self) -> Self::Type;\n+    fn ix(&self, num_bites: u64) -> Self::Type;\n+    fn f32(&self) -> Self::Type;\n+    fn f64(&self) -> Self::Type;\n+    fn bool(&self) -> Self::Type;\n+    fn char(&self) -> Self::Type;\n+    fn i8p(&self) -> Self::Type;\n+\n+    fn func(&self, args: &[Self::Type], ret: Self::Type) -> Self::Type;\n+    fn variadic_func(&self, args: &[Self::Type]) -> Self::Type;\n+    fn struct_(&self, els: &[Self::Type], packed: bool) -> Self::Type;\n+    fn named_struct(&self, name: &str) -> Self::Type;\n+    fn array(&self, ty: Self::Type, len: u64) -> Self::Type;\n+    fn vector(&self, ty: Self::Type, len: u64) -> Self::Type;\n+    fn kind(&self, ty: Self::Type) -> Self::TypeKind;\n+    fn set_struct_body(&self, els: &[Self::Type], packed: bool);\n+    fn ptr_to(&self, ty: Self::Type) -> Self::Type;\n+    fn element_type(&self, ty: Self::Type) -> Self::Type;\n+    fn vector_length(&self, ty: Self::Type) -> usize;\n+    fn func_params(&self, ty: Self::Type) -> Vec<Self::Type>;\n+    fn float_width(&self, ty: Self::Type) -> usize;\n+    fn int_width(&self, ty: Self::Type) -> usize;\n+}"}, {"sha": "4e80fe0b343db9f62ba9266c9fd7cbfeebea95dc", "filename": "src/librustc_codegen_llvm/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f28e0a0b627c2e20689906db8475e2e7d133672/src%2Flibrustc_codegen_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Flib.rs?ref=5f28e0a0b627c2e20689906db8475e2e7d133672", "patch": "@@ -330,6 +330,7 @@ impl<'ll> Backend for ModuleLlvm<'ll> {\n     type Value = &'ll Value;\n     type BasicBlock = &'ll llvm::BasicBlock;\n     type Type = &'ll Type;\n+    type TypeKind = llvm::TypeKind;\n     type Context = &'ll llvm::Context;\n }\n "}]}