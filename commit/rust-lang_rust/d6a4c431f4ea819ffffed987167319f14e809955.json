{"sha": "d6a4c431f4ea819ffffed987167319f14e809955", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YTRjNDMxZjRlYTgxOWZmZmZlZDk4NzE2NzMxOWYxNGU4MDk5NTU=", "commit": {"author": {"name": "Robert Buonpastore", "email": "robert.buonpastore@gmail.com", "date": "2014-05-19T03:37:07Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T00:24:34Z"}, "message": "Stabilize version output for rustc and rustdoc", "tree": {"sha": "77267c2baa7a096cb03d9c132b26674c29812778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77267c2baa7a096cb03d9c132b26674c29812778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6a4c431f4ea819ffffed987167319f14e809955", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6a4c431f4ea819ffffed987167319f14e809955", "html_url": "https://github.com/rust-lang/rust/commit/d6a4c431f4ea819ffffed987167319f14e809955", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6a4c431f4ea819ffffed987167319f14e809955/comments", "author": null, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb296b80118a2c594986c09f2b6ec97829ba3d2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb296b80118a2c594986c09f2b6ec97829ba3d2d", "html_url": "https://github.com/rust-lang/rust/commit/fb296b80118a2c594986c09f2b6ec97829ba3d2d"}], "stats": {"total": 62, "additions": 47, "deletions": 15}, "files": [{"sha": "3f6103bafa52daee662391eb5a003ee03dce6626", "filename": "mk/main.mk", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d6a4c431f4ea819ffffed987167319f14e809955/mk%2Fmain.mk", "raw_url": "https://github.com/rust-lang/rust/raw/d6a4c431f4ea819ffffed987167319f14e809955/mk%2Fmain.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fmain.mk?ref=d6a4c431f4ea819ffffed987167319f14e809955", "patch": "@@ -42,9 +42,9 @@ SPACE :=\n SPACE +=\n ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT))),)\n ifneq ($(wildcard $(subst $(SPACE),\\$(SPACE),$(CFG_GIT_DIR))),)\n-    CFG_VERSION += $(shell git --git-dir='$(CFG_GIT_DIR)' log -1 \\\n-                     --pretty=format:'(%h %ci)')\n+    CFG_VER_DATE = $(shell git --git-dir='$(CFG_GIT_DIR)' log -1 --pretty=format:'%ci')\n     CFG_VER_HASH = $(shell git --git-dir='$(CFG_GIT_DIR)' rev-parse HEAD)\n+    CFG_VERSION += ($(CFG_VER_HASH) $(CFG_VER_DATE))\n endif\n endif\n \n@@ -272,6 +272,12 @@ $(foreach host,$(CFG_HOST), \\\n \n export CFG_SRC_DIR\n export CFG_BUILD_DIR\n+ifdef CFG_VER_DATE\n+export CFG_VER_DATE\n+endif\n+ifdef CFG_VER_HASH\n+export CFG_VER_HASH\n+endif\n export CFG_VERSION\n export CFG_VERSION_WIN\n export CFG_RELEASE"}, {"sha": "f14efb696c57d44f88ce149b87e485edc5901259", "filename": "src/librustc/driver/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d6a4c431f4ea819ffffed987167319f14e809955/src%2Flibrustc%2Fdriver%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a4c431f4ea819ffffed987167319f14e809955/src%2Flibrustc%2Fdriver%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fconfig.rs?ref=d6a4c431f4ea819ffffed987167319f14e809955", "patch": "@@ -544,7 +544,7 @@ pub fn optgroups() -> Vec<getopts::OptGroup> {\n         optmulti(\"F\", \"forbid\", \"Set lint forbidden\", \"OPT\"),\n         optmulti(\"C\", \"codegen\", \"Set a codegen option\", \"OPT[=VALUE]\"),\n         optmulti(\"Z\", \"\", \"Set internal debugging options\", \"FLAG\"),\n-        optflag(\"v\", \"version\", \"Print version info and exit\"),\n+        optflagopt(\"v\", \"version\", \"Print version info and exit\", \"verbose\"),\n         optopt(\"\", \"color\", \"Configure coloring of output:\n             auto   = colorize, if output goes to a tty (default);\n             always = always colorize output;"}, {"sha": "87c0a2708395756800683198baed2dc757eb57c1", "filename": "src/librustc/driver/mod.rs", "status": "modified", "additions": 22, "deletions": 9, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/d6a4c431f4ea819ffffed987167319f14e809955/src%2Flibrustc%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a4c431f4ea819ffffed987167319f14e809955/src%2Flibrustc%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fmod.rs?ref=d6a4c431f4ea819ffffed987167319f14e809955", "patch": "@@ -112,13 +112,24 @@ fn run_compiler(args: &[String]) {\n     driver::compile_input(sess, cfg, &input, &odir, &ofile);\n }\n \n-pub fn version(command: &str) {\n-    let vers = match option_env!(\"CFG_VERSION\") {\n-        Some(vers) => vers,\n-        None => \"unknown version\"\n+/// Prints version information and returns None on success or an error\n+/// message on failure.\n+pub fn version(binary: &str, matches: &getopts::Matches) -> Option<String> {\n+    let verbose = match matches.opt_str(\"version\").as_ref().map(|s| s.as_slice()) {\n+        None => false,\n+        Some(\"verbose\") => true,\n+        Some(s) => return Some(format!(\"Unrecognized argument: {}\", s))\n     };\n-    println!(\"{} {}\", command, vers);\n-    println!(\"host: {}\", driver::host_triple());\n+\n+    println!(\"{} {}\", binary, env!(\"CFG_VERSION\"));\n+    if verbose {\n+        println!(\"binary: {}\", binary);\n+        println!(\"commit-hash: {}\", option_env!(\"CFG_VER_HASH\").unwrap_or(\"unknown\"));\n+        println!(\"commit-date: {}\", option_env!(\"CFG_VER_DATE\").unwrap_or(\"unknown\"));\n+        println!(\"host: {}\", driver::host_triple());\n+        println!(\"release: {}\", env!(\"CFG_RELEASE\"));\n+    }\n+    None\n }\n \n fn usage() {\n@@ -268,9 +279,11 @@ pub fn handle_options(mut args: Vec<String>) -> Option<getopts::Matches> {\n         return None;\n     }\n \n-    if matches.opt_present(\"v\") || matches.opt_present(\"version\") {\n-        version(\"rustc\");\n-        return None;\n+    if matches.opt_present(\"version\") {\n+        match version(\"rustc\", &matches) {\n+            Some(err) => early_error(err.as_slice()),\n+            None => return None\n+        }\n     }\n \n     Some(matches)"}, {"sha": "00c5c2a218db2a9286ed14ee6234e4af3c148e9f", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d6a4c431f4ea819ffffed987167319f14e809955/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a4c431f4ea819ffffed987167319f14e809955/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=d6a4c431f4ea819ffffed987167319f14e809955", "patch": "@@ -95,7 +95,7 @@ pub fn opts() -> Vec<getopts::OptGroup> {\n     use getopts::*;\n     vec!(\n         optflag(\"h\", \"help\", \"show this help message\"),\n-        optflag(\"\", \"version\", \"print rustdoc's version\"),\n+        optflagopt(\"\", \"version\", \"print rustdoc's version\", \"verbose\"),\n         optopt(\"r\", \"input-format\", \"the input type of the specified file\",\n                \"[rust|json]\"),\n         optopt(\"w\", \"output-format\", \"the output type to write\",\n@@ -150,8 +150,13 @@ pub fn main_args(args: &[String]) -> int {\n         usage(args[0].as_slice());\n         return 0;\n     } else if matches.opt_present(\"version\") {\n-        rustc::driver::version(\"rustdoc\");\n-        return 0;\n+        match rustc::driver::version(\"rustdoc\", &matches) {\n+            Some(err) => {\n+                println!(\"{}\", err);\n+                return 1\n+            },\n+            None => return 0\n+        }\n     }\n \n     if matches.free.len() == 0 {"}, {"sha": "4950fe7572a3d694df8b75aec3b46b2e5935f616", "filename": "src/test/run-make/version/Makefile", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d6a4c431f4ea819ffffed987167319f14e809955/src%2Ftest%2Frun-make%2Fversion%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/d6a4c431f4ea819ffffed987167319f14e809955/src%2Ftest%2Frun-make%2Fversion%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fversion%2FMakefile?ref=d6a4c431f4ea819ffffed987167319f14e809955", "patch": "@@ -0,0 +1,8 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) -v\n+\t$(RUSTC) -v verbose\n+\t$(RUSTC) -v bad_arg && exit 1 || exit 0\n+\t$(RUSTC) --version verbose\n+\t$(RUSTC) --version bad_arg && exit 1 || exit 0"}]}