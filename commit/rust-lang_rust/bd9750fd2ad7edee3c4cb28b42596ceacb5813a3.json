{"sha": "bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "node_id": "C_kwDOAAsO6NoAKGJkOTc1MGZkMmFkN2VkZWUzYzRjYjI4YjQyNTk2Y2VhY2I1ODEzYTM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-03T22:20:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-03T22:20:39Z"}, "message": "Rollup merge of #100302 - compiler-errors:deref-path-methods, r=jackh726\n\nSuggest associated method on deref types when path syntax method fails\n\nFixes #100278", "tree": {"sha": "dd0e688052f26a188c5f08c20b1dfb181fc367bf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd0e688052f26a188c5f08c20b1dfb181fc367bf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjE9M3CRBK7hj4Ov3rIwAANjsIAJXa51zMqanBS75aUEUkIqgm\n1QnzCDqLdlsbWf1We90w3cQ0mw/0pAiqUOIUi+549o1DBwgV+haApMP1uOLKzJxH\nnEJPDT0lkHSHMytHNJwDC2KWgOCtWqpr9Lbm229dZEhFR/NIc1kfxQBQg7U9Mb8i\nxChz/lpaGxzkp59mr206Igw/kQoaVfc/0AbrXnPS4/326BZlTls2cOQEyQ0tBV3k\n13ABl8j+N9uyiOEiWMdBLNZfeHPqVZxX+/NZJQbn+Zu55MUU5IHD+N7hLQmxVphy\nQE0IEcV4LWrd/BOQ5jUj3bdjco8BcorWETjpwnUKQUWo83u+s3g+cL3aG89+frU=\n=tgY+\n-----END PGP SIGNATURE-----\n", "payload": "tree dd0e688052f26a188c5f08c20b1dfb181fc367bf\nparent 84f0c3f79a85329dd79a54694ff8a7f427c842e9\nparent 12a49523697f4a64609558b467c460b9a4b333c1\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662243639 +0200\ncommitter GitHub <noreply@github.com> 1662243639 +0200\n\nRollup merge of #100302 - compiler-errors:deref-path-methods, r=jackh726\n\nSuggest associated method on deref types when path syntax method fails\n\nFixes #100278\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "html_url": "https://github.com/rust-lang/rust/commit/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84f0c3f79a85329dd79a54694ff8a7f427c842e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/84f0c3f79a85329dd79a54694ff8a7f427c842e9", "html_url": "https://github.com/rust-lang/rust/commit/84f0c3f79a85329dd79a54694ff8a7f427c842e9"}, {"sha": "12a49523697f4a64609558b467c460b9a4b333c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/12a49523697f4a64609558b467c460b9a4b333c1", "html_url": "https://github.com/rust-lang/rust/commit/12a49523697f4a64609558b467c460b9a4b333c1"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "998405bcbe1cc702629dcefc8bc89b0742a49d84", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 60, "deletions": 2, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "patch": "@@ -16,8 +16,8 @@ use rustc_infer::infer::type_variable::{TypeVariableOrigin, TypeVariableOriginKi\n use rustc_middle::traits::util::supertraits;\n use rustc_middle::ty::fast_reject::{simplify_type, TreatParams};\n use rustc_middle::ty::print::with_crate_prefix;\n-use rustc_middle::ty::ToPolyTraitRef;\n use rustc_middle::ty::{self, DefIdTree, ToPredicate, Ty, TyCtxt, TypeVisitable};\n+use rustc_middle::ty::{IsSuggestable, ToPolyTraitRef};\n use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::Symbol;\n use rustc_span::{lev_distance, source_map, ExpnKind, FileName, MacroKind, Span};\n@@ -30,7 +30,7 @@ use rustc_trait_selection::traits::{\n use std::cmp::Ordering;\n use std::iter;\n \n-use super::probe::{Mode, ProbeScope};\n+use super::probe::{IsSuggestion, Mode, ProbeScope};\n use super::{CandidateSource, MethodError, NoMatchData};\n \n impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n@@ -1069,6 +1069,8 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     }\n                 }\n \n+                self.check_for_deref_method(&mut err, source, rcvr_ty, item_name);\n+\n                 return Some(err);\n             }\n \n@@ -1651,6 +1653,62 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    fn check_for_deref_method(\n+        &self,\n+        err: &mut Diagnostic,\n+        self_source: SelfSource<'tcx>,\n+        rcvr_ty: Ty<'tcx>,\n+        item_name: Ident,\n+    ) {\n+        let SelfSource::QPath(ty) = self_source else { return; };\n+        for (deref_ty, _) in self.autoderef(rustc_span::DUMMY_SP, rcvr_ty).skip(1) {\n+            if let Ok(pick) = self.probe_for_name(\n+                ty.span,\n+                Mode::Path,\n+                item_name,\n+                IsSuggestion(true),\n+                deref_ty,\n+                ty.hir_id,\n+                ProbeScope::TraitsInScope,\n+            ) {\n+                if deref_ty.is_suggestable(self.tcx, true)\n+                    // If this method receives `&self`, then the provided\n+                    // argument _should_ coerce, so it's valid to suggest\n+                    // just changing the path.\n+                    && pick.item.fn_has_self_parameter\n+                    && let Some(self_ty) =\n+                        self.tcx.fn_sig(pick.item.def_id).inputs().skip_binder().get(0)\n+                    && self_ty.is_ref()\n+                {\n+                    let suggested_path = match deref_ty.kind() {\n+                        ty::Bool\n+                        | ty::Char\n+                        | ty::Int(_)\n+                        | ty::Uint(_)\n+                        | ty::Float(_)\n+                        | ty::Adt(_, _)\n+                        | ty::Str\n+                        | ty::Projection(_)\n+                        | ty::Param(_) => format!(\"{deref_ty}\"),\n+                        _ => format!(\"<{deref_ty}>\"),\n+                    };\n+                    err.span_suggestion_verbose(\n+                        ty.span,\n+                        format!(\"the function `{item_name}` is implemented on `{deref_ty}`\"),\n+                        suggested_path,\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                } else {\n+                    err.span_note(\n+                        ty.span,\n+                        format!(\"the function `{item_name}` is implemented on `{deref_ty}`\"),\n+                    );\n+                }\n+                return;\n+            }\n+        }\n+    }\n+\n     /// Print out the type for use in value namespace.\n     fn ty_to_value_string(&self, ty: Ty<'tcx>) -> String {\n         match ty.kind() {"}, {"sha": "0281cdb6b37cfda0f2522fff50858379196c1d99", "filename": "src/test/ui/suggestions/deref-path-method.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/src%2Ftest%2Fui%2Fsuggestions%2Fderef-path-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/src%2Ftest%2Fui%2Fsuggestions%2Fderef-path-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fderef-path-method.rs?ref=bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    let vec = Vec::new();\n+    Vec::contains(&vec, &0);\n+    //~^ ERROR no function or associated item named `contains` found for struct `Vec<_, _>` in the current scope\n+    //~| HELP the function `contains` is implemented on `[_]`\n+}"}, {"sha": "1cc37d61151ca11addc35701d679ce0906243a9d", "filename": "src/test/ui/suggestions/deref-path-method.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/src%2Ftest%2Fui%2Fsuggestions%2Fderef-path-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd9750fd2ad7edee3c4cb28b42596ceacb5813a3/src%2Ftest%2Fui%2Fsuggestions%2Fderef-path-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fderef-path-method.stderr?ref=bd9750fd2ad7edee3c4cb28b42596ceacb5813a3", "patch": "@@ -0,0 +1,14 @@\n+error[E0599]: no function or associated item named `contains` found for struct `Vec<_, _>` in the current scope\n+  --> $DIR/deref-path-method.rs:3:10\n+   |\n+LL |     Vec::contains(&vec, &0);\n+   |          ^^^^^^^^ function or associated item not found in `Vec<_, _>`\n+   |\n+help: the function `contains` is implemented on `[_]`\n+   |\n+LL |     <[_]>::contains(&vec, &0);\n+   |     ~~~~~\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}