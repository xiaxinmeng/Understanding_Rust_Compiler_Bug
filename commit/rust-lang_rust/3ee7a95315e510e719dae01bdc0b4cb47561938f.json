{"sha": "3ee7a95315e510e719dae01bdc0b4cb47561938f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZTdhOTUzMTVlNTEwZTcxOWRhZTAxYmRjMGI0Y2I0NzU2MTkzOGY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-30T13:20:17Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-30T13:20:17Z"}, "message": "use completion context when creating completion", "tree": {"sha": "9b32aef6be29b8482f82c52a33eefa656a8cec2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b32aef6be29b8482f82c52a33eefa656a8cec2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ee7a95315e510e719dae01bdc0b4cb47561938f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee7a95315e510e719dae01bdc0b4cb47561938f", "html_url": "https://github.com/rust-lang/rust/commit/3ee7a95315e510e719dae01bdc0b4cb47561938f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ee7a95315e510e719dae01bdc0b4cb47561938f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e90e0436a5433c61f932c254d1cc7400022a940", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e90e0436a5433c61f932c254d1cc7400022a940", "html_url": "https://github.com/rust-lang/rust/commit/0e90e0436a5433c61f932c254d1cc7400022a940"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "99fe9aa947adc4dcc8ab22fce9c7151d9d2e362c", "filename": "crates/ra_analysis/src/completion/complete_path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ee7a95315e510e719dae01bdc0b4cb47561938f/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee7a95315e510e719dae01bdc0b4cb47561938f/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_path.rs?ref=3ee7a95315e510e719dae01bdc0b4cb47561938f", "patch": "@@ -17,7 +17,7 @@ pub(super) fn complete_path(acc: &mut Completions, ctx: &CompletionContext) -> C\n             let module_scope = module.scope(ctx.db)?;\n             module_scope.entries().for_each(|(name, res)| {\n                 CompletionItem::new(CompletionKind::Reference, name.to_string())\n-                    .from_resolution(ctx.db, res)\n+                    .from_resolution(ctx, res)\n                     .add_to(acc)\n             });\n         }"}, {"sha": "daf666505dced096ffad96c7e989558f993f061a", "filename": "crates/ra_analysis/src/completion/complete_scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ee7a95315e510e719dae01bdc0b4cb47561938f/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee7a95315e510e719dae01bdc0b4cb47561938f/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcomplete_scope.rs?ref=3ee7a95315e510e719dae01bdc0b4cb47561938f", "patch": "@@ -34,7 +34,7 @@ pub(super) fn complete_scope(acc: &mut Completions, ctx: &CompletionContext) ->\n         })\n         .for_each(|(name, res)| {\n             CompletionItem::new(CompletionKind::Reference, name.to_string())\n-                .from_resolution(ctx.db, res)\n+                .from_resolution(ctx, res)\n                 .add_to(acc)\n         });\n     Ok(())"}, {"sha": "a3d947e5b7036af0135f4047e5e073957a2f8397", "filename": "crates/ra_analysis/src/completion/completion_item.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3ee7a95315e510e719dae01bdc0b4cb47561938f/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ee7a95315e510e719dae01bdc0b4cb47561938f/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fcompletion%2Fcompletion_item.rs?ref=3ee7a95315e510e719dae01bdc0b4cb47561938f", "patch": "@@ -1,7 +1,7 @@\n-use crate::db;\n-\n use hir::PerNs;\n \n+use crate::completion::CompletionContext;\n+\n /// `CompletionItem` describes a single completion variant in the editor pop-up.\n /// It is basically a POD with various properties. To construct a\n /// `CompletionItem`, use `new` method and the `Builder` struct.\n@@ -118,12 +118,12 @@ impl Builder {\n         self.kind = Some(kind);\n         self\n     }\n-    pub(crate) fn from_resolution(\n+    pub(super) fn from_resolution(\n         mut self,\n-        db: &db::RootDatabase,\n+        ctx: &CompletionContext,\n         resolution: &hir::Resolution,\n     ) -> Builder {\n-        let resolved = resolution.def_id.and_then(|d| d.resolve(db).ok());\n+        let resolved = resolution.def_id.and_then(|d| d.resolve(ctx.db).ok());\n         let kind = match resolved {\n             PerNs {\n                 types: Some(hir::Def::Module(..)),\n@@ -141,7 +141,7 @@ impl Builder {\n                 values: Some(hir::Def::Function(function)),\n                 ..\n             } => {\n-                if let Some(sig_info) = function.signature_info(db) {\n+                if let Some(sig_info) = function.signature_info(ctx.db) {\n                     if sig_info.params.is_empty() {\n                         self.snippet = Some(format!(\"{}()$0\", self.label));\n                     } else {"}]}