{"sha": "40fc725298a7e2e5ffda169b5af25c5b739e389f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZmM3MjUyOThhN2UyZTVmZmRhMTY5YjVhZjI1YzViNzM5ZTM4OWY=", "commit": {"author": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-05-17T10:42:43Z"}, "committer": {"name": "Taiki Endo", "email": "te316e89@gmail.com", "date": "2019-05-18T05:22:16Z"}, "message": "useless_attribute: Add unreachable_pub to whitelists", "tree": {"sha": "fcb193cd32457cb77c4e9b233a1f3e268deddee4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fcb193cd32457cb77c4e9b233a1f3e268deddee4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40fc725298a7e2e5ffda169b5af25c5b739e389f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40fc725298a7e2e5ffda169b5af25c5b739e389f", "html_url": "https://github.com/rust-lang/rust/commit/40fc725298a7e2e5ffda169b5af25c5b739e389f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40fc725298a7e2e5ffda169b5af25c5b739e389f/comments", "author": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "committer": {"login": "taiki-e", "id": 43724913, "node_id": "MDQ6VXNlcjQzNzI0OTEz", "avatar_url": "https://avatars.githubusercontent.com/u/43724913?v=4", "gravatar_id": "", "url": "https://api.github.com/users/taiki-e", "html_url": "https://github.com/taiki-e", "followers_url": "https://api.github.com/users/taiki-e/followers", "following_url": "https://api.github.com/users/taiki-e/following{/other_user}", "gists_url": "https://api.github.com/users/taiki-e/gists{/gist_id}", "starred_url": "https://api.github.com/users/taiki-e/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/taiki-e/subscriptions", "organizations_url": "https://api.github.com/users/taiki-e/orgs", "repos_url": "https://api.github.com/users/taiki-e/repos", "events_url": "https://api.github.com/users/taiki-e/events{/privacy}", "received_events_url": "https://api.github.com/users/taiki-e/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60a609acaed3bf2b3ec6ab995bccf0f03bc26060", "url": "https://api.github.com/repos/rust-lang/rust/commits/60a609acaed3bf2b3ec6ab995bccf0f03bc26060", "html_url": "https://github.com/rust-lang/rust/commit/60a609acaed3bf2b3ec6ab995bccf0f03bc26060"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "38731c08084e6bb7b59d81ba0d826a35f95e0a30", "filename": "clippy_lints/src/attrs.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/40fc725298a7e2e5ffda169b5af25c5b739e389f/clippy_lints%2Fsrc%2Fattrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40fc725298a7e2e5ffda169b5af25c5b739e389f/clippy_lints%2Fsrc%2Fattrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fattrs.rs?ref=40fc725298a7e2e5ffda169b5af25c5b739e389f", "patch": "@@ -49,9 +49,9 @@ declare_clippy_lint! {\n     /// **What it does:** Checks for `extern crate` and `use` items annotated with\n     /// lint attributes.\n     ///\n-    /// This lint whitelists `#[allow(unused_imports)]` and `#[allow(deprecated)]` on\n-    /// `use` items and `#[allow(unused_imports)]` on `extern crate` items with a\n-    /// `#[macro_use]` attribute.\n+    /// This lint whitelists `#[allow(unused_imports)]`, `#[allow(deprecated)]` and\n+    /// `#[allow(unreachable_pub)]` on `use` items and `#[allow(unused_imports)]` on\n+    /// `extern crate` items with a `#[macro_use]` attribute.\n     ///\n     /// **Why is this bad?** Lint attributes have no effect on crate imports. Most\n     /// likely a `!` was forgotten.\n@@ -239,13 +239,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Attributes {\n                         if let Some(ident) = attr.ident() {\n                             match &*ident.as_str() {\n                                 \"allow\" | \"warn\" | \"deny\" | \"forbid\" => {\n-                                    // whitelist `unused_imports` and `deprecated` for `use` items\n+                                    // whitelist `unused_imports`, `deprecated` and `unreachable_pub` for `use` items\n                                     // and `unused_imports` for `extern crate` items with `macro_use`\n                                     for lint in lint_list {\n                                         match item.node {\n                                             ItemKind::Use(..) => {\n                                                 if is_word(lint, sym!(unused_imports))\n                                                     || is_word(lint, sym!(deprecated))\n+                                                    || is_word(lint, sym!(unreachable_pub))\n                                                 {\n                                                     return;\n                                                 }"}, {"sha": "dd84b1b2c1c381570d276a43aa052d45b7cb01db", "filename": "tests/ui/useless_attribute.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/40fc725298a7e2e5ffda169b5af25c5b739e389f/tests%2Fui%2Fuseless_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40fc725298a7e2e5ffda169b5af25c5b739e389f/tests%2Fui%2Fuseless_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.rs?ref=40fc725298a7e2e5ffda169b5af25c5b739e389f", "patch": "@@ -1,6 +1,7 @@\n // aux-build:proc_macro_derive.rs\n \n #![warn(clippy::useless_attribute)]\n+#![warn(unreachable_pub)]\n \n #[allow(dead_code)]\n #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n@@ -32,4 +33,16 @@ pub use foo::Bar;\n #[derive(DeriveSomething)]\n struct Baz;\n \n+// don't lint on unreachable_pub for `use` items\n+mod a {\n+    mod b {\n+        #[allow(dead_code)]\n+        #[allow(unreachable_pub)]\n+        pub struct C {}\n+    }\n+\n+    #[allow(unreachable_pub)]\n+    pub use self::b::C;\n+}\n+\n fn main() {}"}, {"sha": "bf7ea1698d354b42de59879ff204fc145cf5ad6d", "filename": "tests/ui/useless_attribute.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40fc725298a7e2e5ffda169b5af25c5b739e389f/tests%2Fui%2Fuseless_attribute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/40fc725298a7e2e5ffda169b5af25c5b739e389f/tests%2Fui%2Fuseless_attribute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fuseless_attribute.stderr?ref=40fc725298a7e2e5ffda169b5af25c5b739e389f", "patch": "@@ -1,13 +1,13 @@\n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:5:1\n+  --> $DIR/useless_attribute.rs:6:1\n    |\n LL | #[allow(dead_code)]\n    | ^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![allow(dead_code)]`\n    |\n    = note: `-D clippy::useless-attribute` implied by `-D warnings`\n \n error: useless lint attribute\n-  --> $DIR/useless_attribute.rs:6:1\n+  --> $DIR/useless_attribute.rs:7:1\n    |\n LL | #[cfg_attr(feature = \"cargo-clippy\", allow(dead_code))]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: if you just forgot a `!`, use: `#![cfg_attr(feature = \"cargo-clippy\", allow(dead_code)`"}]}