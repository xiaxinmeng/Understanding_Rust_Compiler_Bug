{"sha": "83f758cf0dfaefc2ebb3a26404e8a9e009847af7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZjc1OGNmMGRmYWVmYzJlYmIzYTI2NDA0ZThhOWUwMDk4NDdhZjc=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-03-13T07:26:11Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-14T23:41:46Z"}, "message": "Typecheck expr_send and expr_recv", "tree": {"sha": "913706fba43d70835e4b8d4b8325926aa6c5725a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/913706fba43d70835e4b8d4b8325926aa6c5725a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83f758cf0dfaefc2ebb3a26404e8a9e009847af7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83f758cf0dfaefc2ebb3a26404e8a9e009847af7", "html_url": "https://github.com/rust-lang/rust/commit/83f758cf0dfaefc2ebb3a26404e8a9e009847af7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83f758cf0dfaefc2ebb3a26404e8a9e009847af7/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a309f74a94f99127cf0667999d4080450bb62491", "url": "https://api.github.com/repos/rust-lang/rust/commits/a309f74a94f99127cf0667999d4080450bb62491", "html_url": "https://github.com/rust-lang/rust/commit/a309f74a94f99127cf0667999d4080450bb62491"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "a654a2fc3291a7681a0ea8732ecc3041684df4ba", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/83f758cf0dfaefc2ebb3a26404e8a9e009847af7/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f758cf0dfaefc2ebb3a26404e8a9e009847af7/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=83f758cf0dfaefc2ebb3a26404e8a9e009847af7", "patch": "@@ -1830,6 +1830,22 @@ fn check_expr(&@fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n             ret @fold.respan[ast.expr_](expr.span, newexpr);\n         }\n \n+        case (ast.expr_send(?lhs, ?rhs, _)) {\n+            auto checked = check_assignment_like(fcx, lhs, rhs);\n+            auto newexpr = ast.expr_send(checked._0,\n+                                         checked._1,\n+                                         checked._2);\n+            ret @fold.respan[ast.expr_](expr.span, newexpr);\n+        }\n+\n+        case (ast.expr_recv(?lhs, ?rhs, _)) {\n+            auto checked = check_assignment_like(fcx, lhs, rhs);\n+            auto newexpr = ast.expr_recv(checked._0,\n+                                         checked._1,\n+                                         checked._2);\n+            ret @fold.respan[ast.expr_](expr.span, newexpr);\n+        }\n+\n         case (ast.expr_if(?cond, ?thn, ?elifs, ?elsopt, _)) {\n             auto cond_0 = check_expr(fcx, cond);\n             auto cond_1 = demand_expr(fcx, plain_ty(ty.ty_bool), cond_0);"}]}