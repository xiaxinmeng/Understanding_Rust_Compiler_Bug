{"sha": "0480f7e105adf9568c632e1579882e3e40077307", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ODBmN2UxMDVhZGY5NTY4YzYzMmUxNTc5ODgyZTNlNDAwNzczMDc=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-06-01T23:36:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-06-01T23:36:16Z"}, "message": "Merge pull request #1620 from topecongiro/rfc-if\n\nUse correct line budget when using Rfc control style", "tree": {"sha": "9ce944c63224144b6f66f0008214228bc7e7bf8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ce944c63224144b6f66f0008214228bc7e7bf8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0480f7e105adf9568c632e1579882e3e40077307", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0480f7e105adf9568c632e1579882e3e40077307", "html_url": "https://github.com/rust-lang/rust/commit/0480f7e105adf9568c632e1579882e3e40077307", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0480f7e105adf9568c632e1579882e3e40077307/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "535a0160d6c2a72f7321edd2de84875c43b655af", "url": "https://api.github.com/repos/rust-lang/rust/commits/535a0160d6c2a72f7321edd2de84875c43b655af", "html_url": "https://github.com/rust-lang/rust/commit/535a0160d6c2a72f7321edd2de84875c43b655af"}, {"sha": "fbd4b87329324e3d53064601cccf7c8e4ced5b31", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbd4b87329324e3d53064601cccf7c8e4ced5b31", "html_url": "https://github.com/rust-lang/rust/commit/fbd4b87329324e3d53064601cccf7c8e4ced5b31"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "ed896231ba90784f019b939c3c2b2f1215688431", "filename": "src/expr.rs", "status": "modified", "additions": 17, "deletions": 11, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0480f7e105adf9568c632e1579882e3e40077307/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0480f7e105adf9568c632e1579882e3e40077307/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=0480f7e105adf9568c632e1579882e3e40077307", "patch": "@@ -326,23 +326,29 @@ pub fn rewrite_pair<LHS, RHS>(lhs: &LHS,\n \n     // Re-evaluate the rhs because we have more space now:\n     let infix = infix.trim_right();\n-    let lhs_budget = try_opt!(context\n-                                  .config\n-                                  .max_width()\n-                                  .checked_sub(shape.used_width() + prefix.len() + infix.len()));\n     let rhs_shape = match context.config.control_style() {\n         Style::Default => {\n             try_opt!(shape.sub_width(suffix.len() + prefix.len())).visual_indent(prefix.len())\n         }\n-        Style::Rfc => try_opt!(shape.block_left(context.config.tab_spaces())),\n+        Style::Rfc => {\n+            shape\n+                .block_indent(context.config.tab_spaces())\n+                .with_max_width(context.config)\n+        }\n     };\n \n     let rhs_result = try_opt!(rhs.rewrite(context, rhs_shape));\n-    let lhs_result = try_opt!(lhs.rewrite(context,\n-                                          Shape {\n-                                              width: lhs_budget,\n-                                              ..shape\n-                                          }));\n+    let lhs_shape = match context.config.control_style() {\n+        Style::Default => {\n+            let lhs_overhead = shape.used_width() + prefix.len() + infix.len();\n+            Shape {\n+                width: try_opt!(context.config.max_width().checked_sub(lhs_overhead)),\n+                ..shape\n+            }\n+        }\n+        Style::Rfc => try_opt!(shape.sub_width(prefix.len() + infix.len())),\n+    };\n+    let lhs_result = try_opt!(lhs.rewrite(context, lhs_shape));\n     Some(format!(\"{}{}{}\\n{}{}{}\",\n                  prefix,\n                  lhs_result,\n@@ -909,7 +915,7 @@ impl<'a> Rewrite for ControlFlow<'a> {\n             Some(cond) => {\n                 let mut cond_shape = match context.config.control_style() {\n                     Style::Default => try_opt!(constr_shape.shrink_left(add_offset)),\n-                    Style::Rfc => constr_shape,\n+                    Style::Rfc => try_opt!(constr_shape.sub_width(add_offset)),\n                 };\n                 if context.config.control_brace_style() != ControlBraceStyle::AlwaysNextLine {\n                     // 2 = \" {\".len()"}, {"sha": "a7213c34dfb770eab1d6bfe5295985fa1a86a657", "filename": "tests/target/configs-control_style-rfc.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0480f7e105adf9568c632e1579882e3e40077307/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0480f7e105adf9568c632e1579882e3e40077307/tests%2Ftarget%2Fconfigs-control_style-rfc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-control_style-rfc.rs?ref=0480f7e105adf9568c632e1579882e3e40077307", "patch": "@@ -0,0 +1,23 @@\n+// rustfmt-control_style: Rfc\n+\n+// #1618\n+fn main() {\n+    loop {\n+        if foo {\n+            if ((right_paddle_speed < 0.) &&\n+                 (right_paddle.position().y - paddle_size.y / 2. > 5.)) ||\n+                ((right_paddle_speed > 0.) &&\n+                     (right_paddle.position().y + paddle_size.y / 2. < game_height as f32 - 5.))\n+            {\n+                foo\n+            }\n+            if ai_timer.elapsed_time().as_microseconds() > ai_time.as_microseconds() {\n+                if ball.position().y + ball_radius >\n+                    right_paddle.position().y + paddle_size.y / 2.\n+                {\n+                    foo\n+                }\n+            }\n+        }\n+    }\n+}"}]}