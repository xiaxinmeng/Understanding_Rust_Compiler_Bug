{"sha": "54bf4ffd626970e831bb80c037f804a3b3450835", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YmY0ZmZkNjI2OTcwZTgzMWJiODBjMDM3ZjgwNGEzYjM0NTA4MzU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-04T10:27:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-04T10:27:44Z"}, "message": "Auto merge of #4613 - Lythenas:lint-assert_eq-unit_exprs, r=flip1995\n\nAdd check for assert_eq macros to unit_cmp lint\n\nchangelog: Add check for unit comparisons through `assert_eq!`, `debug_assert_eq!`, `assert_ne!` and `debug_assert_ne!` macros to unit_cmp lint.\n\nfixes #4481", "tree": {"sha": "e18df807a8fb2c73fad7b67fad6007e4f2a945e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e18df807a8fb2c73fad7b67fad6007e4f2a945e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54bf4ffd626970e831bb80c037f804a3b3450835", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54bf4ffd626970e831bb80c037f804a3b3450835", "html_url": "https://github.com/rust-lang/rust/commit/54bf4ffd626970e831bb80c037f804a3b3450835", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54bf4ffd626970e831bb80c037f804a3b3450835/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "933df2ab8ed64ec21b7878fb5fe7b319119a8cfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/933df2ab8ed64ec21b7878fb5fe7b319119a8cfa", "html_url": "https://github.com/rust-lang/rust/commit/933df2ab8ed64ec21b7878fb5fe7b319119a8cfa"}, {"sha": "5a0a2b383c71931bcb4a0431ead16e075c057b0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a0a2b383c71931bcb4a0431ead16e075c057b0a", "html_url": "https://github.com/rust-lang/rust/commit/5a0a2b383c71931bcb4a0431ead16e075c057b0a"}], "stats": {"total": 135, "additions": 131, "deletions": 4}, "files": [{"sha": "eabc5ca73059381f875a4828c14077951572af8e", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 36, "deletions": 1, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/54bf4ffd626970e831bb80c037f804a3b3450835/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54bf4ffd626970e831bb80c037f804a3b3450835/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=54bf4ffd626970e831bb80c037f804a3b3450835", "patch": "@@ -17,6 +17,8 @@ use rustc_target::spec::abi::Abi;\n use rustc_typeck::hir_ty_to_ty;\n use syntax::ast::{FloatTy, IntTy, LitIntType, LitKind, UintTy};\n use syntax::errors::DiagnosticBuilder;\n+use syntax::ext::base::MacroKind;\n+use syntax::ext::hygiene::ExpnKind;\n use syntax::source_map::Span;\n use syntax::symbol::{sym, Symbol};\n \n@@ -485,7 +487,8 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnitValue {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Checks for comparisons to unit.\n+    /// **What it does:** Checks for comparisons to unit. This includes all binary\n+    /// comparisons (like `==` and `<`) and asserts.\n     ///\n     /// **Why is this bad?** Unit is always equal to itself, and thus is just a\n     /// clumsily written constant. Mostly this happens when someone accidentally\n@@ -517,6 +520,14 @@ declare_clippy_lint! {\n     ///     baz();\n     /// }\n     /// ```\n+    ///\n+    /// For asserts:\n+    /// ```rust\n+    /// # fn foo() {};\n+    /// # fn bar() {};\n+    /// assert_eq!({ foo(); }, { bar(); });\n+    /// ```\n+    /// will always succeed\n     pub UNIT_CMP,\n     correctness,\n     \"comparing unit values\"\n@@ -527,6 +538,30 @@ declare_lint_pass!(UnitCmp => [UNIT_CMP]);\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnitCmp {\n     fn check_expr(&mut self, cx: &LateContext<'a, 'tcx>, expr: &'tcx Expr) {\n         if expr.span.from_expansion() {\n+            if let Some(callee) = expr.span.source_callee() {\n+                if let ExpnKind::Macro(MacroKind::Bang, symbol) = callee.kind {\n+                    if let ExprKind::Binary(ref cmp, ref left, _) = expr.kind {\n+                        let op = cmp.node;\n+                        if op.is_comparison() && is_unit(cx.tables.expr_ty(left)) {\n+                            let result = match &*symbol.as_str() {\n+                                \"assert_eq\" | \"debug_assert_eq\" => \"succeed\",\n+                                \"assert_ne\" | \"debug_assert_ne\" => \"fail\",\n+                                _ => return,\n+                            };\n+                            span_lint(\n+                                cx,\n+                                UNIT_CMP,\n+                                expr.span,\n+                                &format!(\n+                                    \"`{}` of unit values detected. This will always {}\",\n+                                    symbol.as_str(),\n+                                    result\n+                                ),\n+                            );\n+                        }\n+                    }\n+                }\n+            }\n             return;\n         }\n         if let ExprKind::Binary(ref cmp, ref left, _) = expr.kind {"}, {"sha": "8d3a4eed82e3e6a41bf220dad7e46f3d59a4f7f1", "filename": "tests/ui/unit_cmp.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funit_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funit_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_cmp.rs?ref=54bf4ffd626970e831bb80c037f804a3b3450835", "patch": "@@ -20,4 +20,38 @@ fn main() {\n     } > {\n         false;\n     } {}\n+\n+    assert_eq!(\n+        {\n+            true;\n+        },\n+        {\n+            false;\n+        }\n+    );\n+    debug_assert_eq!(\n+        {\n+            true;\n+        },\n+        {\n+            false;\n+        }\n+    );\n+\n+    assert_ne!(\n+        {\n+            true;\n+        },\n+        {\n+            false;\n+        }\n+    );\n+    debug_assert_ne!(\n+        {\n+            true;\n+        },\n+        {\n+            false;\n+        }\n+    );\n }"}, {"sha": "578a6218ee03db1760d6a416c8dbc923e087358f", "filename": "tests/ui/unit_cmp.stderr", "status": "modified", "additions": 57, "deletions": 1, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funit_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funit_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_cmp.stderr?ref=54bf4ffd626970e831bb80c037f804a3b3450835", "patch": "@@ -22,5 +22,61 @@ LL | |         false;\n LL | |     } {}\n    | |_____^\n \n-error: aborting due to 2 previous errors\n+error: `assert_eq` of unit values detected. This will always succeed\n+  --> $DIR/unit_cmp.rs:24:5\n+   |\n+LL | /     assert_eq!(\n+LL | |         {\n+LL | |             true;\n+LL | |         },\n+...  |\n+LL | |         }\n+LL | |     );\n+   | |______^\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: `debug_assert_eq` of unit values detected. This will always succeed\n+  --> $DIR/unit_cmp.rs:32:5\n+   |\n+LL | /     debug_assert_eq!(\n+LL | |         {\n+LL | |             true;\n+LL | |         },\n+...  |\n+LL | |         }\n+LL | |     );\n+   | |______^\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: `assert_ne` of unit values detected. This will always fail\n+  --> $DIR/unit_cmp.rs:41:5\n+   |\n+LL | /     assert_ne!(\n+LL | |         {\n+LL | |             true;\n+LL | |         },\n+...  |\n+LL | |         }\n+LL | |     );\n+   | |______^\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: `debug_assert_ne` of unit values detected. This will always fail\n+  --> $DIR/unit_cmp.rs:49:5\n+   |\n+LL | /     debug_assert_ne!(\n+LL | |         {\n+LL | |             true;\n+LL | |         },\n+...  |\n+LL | |         }\n+LL | |     );\n+   | |______^\n+   |\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to 6 previous errors\n "}, {"sha": "3f63624720f7553276aea8c6f721bed2c573066e", "filename": "tests/ui/unused_unit.fixed", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funused_unit.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funused_unit.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.fixed?ref=54bf4ffd626970e831bb80c037f804a3b3450835", "patch": "@@ -34,6 +34,7 @@ fn return_unit()  {  }\n \n #[allow(clippy::needless_return)]\n #[allow(clippy::never_loop)]\n+#[allow(clippy::unit_cmp)]\n fn main() {\n     let u = Unitter;\n     assert_eq!(u.get_unit(|| {}, return_unit), u.into());"}, {"sha": "8fc072ebd69f848ffc41dd09306febf07e459a96", "filename": "tests/ui/unused_unit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funused_unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funused_unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.rs?ref=54bf4ffd626970e831bb80c037f804a3b3450835", "patch": "@@ -35,6 +35,7 @@ fn return_unit() -> () { () }\n \n #[allow(clippy::needless_return)]\n #[allow(clippy::never_loop)]\n+#[allow(clippy::unit_cmp)]\n fn main() {\n     let u = Unitter;\n     assert_eq!(u.get_unit(|| {}, return_unit), u.into());"}, {"sha": "c489b13bf27b2438f5f12c0150d24c62a0346b4f", "filename": "tests/ui/unused_unit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funused_unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/54bf4ffd626970e831bb80c037f804a3b3450835/tests%2Fui%2Funused_unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_unit.stderr?ref=54bf4ffd626970e831bb80c037f804a3b3450835", "patch": "@@ -37,13 +37,13 @@ LL | fn return_unit() -> () { () }\n    |                          ^^ help: remove the final `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:43:14\n+  --> $DIR/unused_unit.rs:44:14\n    |\n LL |         break();\n    |              ^^ help: remove the `()`\n \n error: unneeded `()`\n-  --> $DIR/unused_unit.rs:45:11\n+  --> $DIR/unused_unit.rs:46:11\n    |\n LL |     return();\n    |           ^^ help: remove the `()`"}]}