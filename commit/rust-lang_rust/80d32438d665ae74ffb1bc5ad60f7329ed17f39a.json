{"sha": "80d32438d665ae74ffb1bc5ad60f7329ed17f39a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZDMyNDM4ZDY2NWFlNzRmZmIxYmM1YWQ2MGY3MzI5ZWQxN2YzOWE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-01T01:03:20Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-08-13T18:31:48Z"}, "message": "Fix compiletest to use Duration", "tree": {"sha": "8dd6339bc87a429115512f05e59ae03295224d2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dd6339bc87a429115512f05e59ae03295224d2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80d32438d665ae74ffb1bc5ad60f7329ed17f39a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80d32438d665ae74ffb1bc5ad60f7329ed17f39a", "html_url": "https://github.com/rust-lang/rust/commit/80d32438d665ae74ffb1bc5ad60f7329ed17f39a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80d32438d665ae74ffb1bc5ad60f7329ed17f39a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77cdaf018c98c1a89afcf8382c3f3e90907f49a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/77cdaf018c98c1a89afcf8382c3f3e90907f49a7", "html_url": "https://github.com/rust-lang/rust/commit/77cdaf018c98c1a89afcf8382c3f3e90907f49a7"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "318609f44fda6c03e23e4cdaea8494b370f7dbdf", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80d32438d665ae74ffb1bc5ad60f7329ed17f39a/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80d32438d665ae74ffb1bc5ad60f7329ed17f39a/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=80d32438d665ae74ffb1bc5ad60f7329ed17f39a", "patch": "@@ -30,6 +30,7 @@ use std::os;\n use std::str;\n use std::string::String;\n use std::task;\n+use std::time::Duration;\n use test::MetricMap;\n \n pub fn run(config: Config, testfile: String) {\n@@ -400,7 +401,7 @@ fn run_debuginfo_gdb_test(config: &Config, props: &TestProps, testfile: &Path) {\n                 .expect(format!(\"failed to exec `{}`\", config.adb_path).as_slice());\n             loop {\n                 //waiting 1 second for gdbserver start\n-                timer::sleep(1000);\n+                timer::sleep(Duration::milliseconds(1000));\n                 let result = task::try(proc() {\n                     tcp::TcpStream::connect(\"127.0.0.1\", 5039).unwrap();\n                 });"}]}