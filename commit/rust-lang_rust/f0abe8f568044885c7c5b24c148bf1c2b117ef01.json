{"sha": "f0abe8f568044885c7c5b24c148bf1c2b117ef01", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYWJlOGY1NjgwNDQ4ODVjN2M1YjI0YzE0OGJmMWMyYjExN2VmMDE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-26T00:40:24Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-26T00:40:24Z"}, "message": "Translate field expressions.", "tree": {"sha": "a872caf8b69275104ecbff28a9e5bd0eb4924165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a872caf8b69275104ecbff28a9e5bd0eb4924165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0abe8f568044885c7c5b24c148bf1c2b117ef01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0abe8f568044885c7c5b24c148bf1c2b117ef01", "html_url": "https://github.com/rust-lang/rust/commit/f0abe8f568044885c7c5b24c148bf1c2b117ef01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0abe8f568044885c7c5b24c148bf1c2b117ef01/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5678f5aa567ae0ddf316caa90124c895f9730c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/5678f5aa567ae0ddf316caa90124c895f9730c62", "html_url": "https://github.com/rust-lang/rust/commit/5678f5aa567ae0ddf316caa90124c895f9730c62"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "42f3a854e2182e8ad9a92a774606b21355bf7d55", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/f0abe8f568044885c7c5b24c148bf1c2b117ef01/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0abe8f568044885c7c5b24c148bf1c2b117ef01/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=f0abe8f568044885c7c5b24c148bf1c2b117ef01", "patch": "@@ -1159,6 +1159,22 @@ impure fn trans_tup(@block_ctxt cx, vec[tup(bool, @ast.expr)] args,\n }\n \n \n+impure fn trans_field(@block_ctxt cx, &ast.span sp, @ast.expr base,\n+                      &ast.ident field, &ast.ann ann) -> result {\n+    auto r = trans_expr(cx, *base);\n+    auto ty = typeck.expr_ty(base);\n+    alt (ty.struct) {\n+        case (typeck.ty_tup(?fields)) {\n+            let uint ix = typeck.field_num(cx.fcx.ccx.sess, sp, field);\n+            auto v = r.bcx.build.GEP(r.val, vec(C_int(ix as int)));\n+            ret res(r.bcx, v);\n+        }\n+    }\n+    cx.fcx.ccx.sess.unimpl(\"field variant in trans_field\");\n+    fail;\n+}\n+\n+\n impure fn trans_expr(@block_ctxt cx, &ast.expr e) -> result {\n     alt (e.node) {\n         case (ast.expr_lit(?lit, _)) {\n@@ -1225,6 +1241,11 @@ impure fn trans_expr(@block_ctxt cx, &ast.expr e) -> result {\n         case (ast.expr_tup(?args, ?ann)) {\n             ret trans_tup(cx, args, ann);\n         }\n+\n+        case (ast.expr_field(?base, ?ident, ?ann)) {\n+            ret trans_field(cx, e.span, base, ident, ann);\n+        }\n+\n     }\n     cx.fcx.ccx.sess.unimpl(\"expr variant in trans_expr\");\n     fail;"}]}