{"sha": "85e87a80fc5b51d395b08ba49adb4242bb751e35", "node_id": "C_kwDOAAsO6NoAKDg1ZTg3YTgwZmM1YjUxZDM5NWIwOGJhNDlhZGI0MjQyYmI3NTFlMzU", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-01-09T15:35:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-01-09T15:35:16Z"}, "message": "add dtors_in_dtors_in_dtors", "tree": {"sha": "905fea2b1229e5d9e5ccc18f8bb3597f1a97254d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/905fea2b1229e5d9e5ccc18f8bb3597f1a97254d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85e87a80fc5b51d395b08ba49adb4242bb751e35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85e87a80fc5b51d395b08ba49adb4242bb751e35", "html_url": "https://github.com/rust-lang/rust/commit/85e87a80fc5b51d395b08ba49adb4242bb751e35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85e87a80fc5b51d395b08ba49adb4242bb751e35/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d61d359d5ef5e3192611297805dbfbb52c55de8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d61d359d5ef5e3192611297805dbfbb52c55de8f", "html_url": "https://github.com/rust-lang/rust/commit/d61d359d5ef5e3192611297805dbfbb52c55de8f"}], "stats": {"total": 57, "additions": 57, "deletions": 0}, "files": [{"sha": "7ccafec60372d5fbd249d45e06a48abcc25e2d68", "filename": "src/tools/miri/tests/pass/concurrency/tls_lib_drop.rs", "status": "modified", "additions": 57, "deletions": 0, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/85e87a80fc5b51d395b08ba49adb4242bb751e35/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Ftls_lib_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85e87a80fc5b51d395b08ba49adb4242bb751e35/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Ftls_lib_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Ftls_lib_drop.rs?ref=85e87a80fc5b51d395b08ba49adb4242bb751e35", "patch": "@@ -186,8 +186,65 @@ fn join_orders_after_tls_destructors() {\n     }\n }\n \n+fn dtors_in_dtors_in_dtors() {\n+    use std::cell::UnsafeCell;\n+    use std::sync::{Arc, Condvar, Mutex};\n+\n+    #[derive(Clone, Default)]\n+    struct Signal(Arc<(Mutex<bool>, Condvar)>);\n+\n+    impl Signal {\n+        fn notify(&self) {\n+            let (set, cvar) = &*self.0;\n+            *set.lock().unwrap() = true;\n+            cvar.notify_one();\n+        }\n+\n+        fn wait(&self) {\n+            let (set, cvar) = &*self.0;\n+            let mut set = set.lock().unwrap();\n+            while !*set {\n+                set = cvar.wait(set).unwrap();\n+            }\n+        }\n+    }\n+\n+    struct NotifyOnDrop(Signal);\n+\n+    impl Drop for NotifyOnDrop {\n+        fn drop(&mut self) {\n+            let NotifyOnDrop(ref f) = *self;\n+            f.notify();\n+        }\n+    }\n+\n+    struct S1(Signal);\n+    thread_local!(static K1: UnsafeCell<Option<S1>> = UnsafeCell::new(None));\n+    thread_local!(static K2: UnsafeCell<Option<NotifyOnDrop>> = UnsafeCell::new(None));\n+\n+    impl Drop for S1 {\n+        fn drop(&mut self) {\n+            let S1(ref signal) = *self;\n+            unsafe {\n+                let _ = K2.try_with(|s| *s.get() = Some(NotifyOnDrop(signal.clone())));\n+            }\n+        }\n+    }\n+\n+    let signal = Signal::default();\n+    let signal2 = signal.clone();\n+    let _t = thread::spawn(move || unsafe {\n+        let mut signal = Some(signal2);\n+        K1.with(|s| *s.get() = Some(S1(signal.take().unwrap())));\n+    });\n+    // Note that this test will deadlock if TLS destructors aren't run (this\n+    // requires the destructor to be run to pass the test).\n+    signal.wait();\n+}\n+\n fn main() {\n     check_destructors();\n     check_blocking();\n     join_orders_after_tls_destructors();\n+    dtors_in_dtors_in_dtors();\n }"}]}