{"sha": "75503570c79d461ccb6e4ef0a9ad872a77ba60c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NTAzNTcwYzc5ZDQ2MWNjYjZlNGVmMGE5YWQ4NzJhNzdiYTYwYzQ=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-16T03:29:18Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-16T20:53:21Z"}, "message": "rt: Untabify rust_port_selector.cpp", "tree": {"sha": "d94dc2b66083071b3b9917447470d41d68b598b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d94dc2b66083071b3b9917447470d41d68b598b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75503570c79d461ccb6e4ef0a9ad872a77ba60c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75503570c79d461ccb6e4ef0a9ad872a77ba60c4", "html_url": "https://github.com/rust-lang/rust/commit/75503570c79d461ccb6e4ef0a9ad872a77ba60c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75503570c79d461ccb6e4ef0a9ad872a77ba60c4/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "96af6f05a1881ba669637d3982a0d3315722c0d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/96af6f05a1881ba669637d3982a0d3315722c0d2", "html_url": "https://github.com/rust-lang/rust/commit/96af6f05a1881ba669637d3982a0d3315722c0d2"}], "stats": {"total": 64, "additions": 32, "deletions": 32}, "files": [{"sha": "610db6ce9277fa56f93f385edd38fc7fa9152d8a", "filename": "src/rt/rust_port_selector.cpp", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/75503570c79d461ccb6e4ef0a9ad872a77ba60c4/src%2Frt%2Frust_port_selector.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/75503570c79d461ccb6e4ef0a9ad872a77ba60c4/src%2Frt%2Frust_port_selector.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_port_selector.cpp?ref=75503570c79d461ccb6e4ef0a9ad872a77ba60c4", "patch": "@@ -7,8 +7,8 @@ rust_port_selector::rust_port_selector()\n \n void\n rust_port_selector::select(rust_task *task, rust_port **dptr,\n-\t\t\t   rust_port **ports,\n-\t\t\t   size_t n_ports, uintptr_t *yield) {\n+                           rust_port **ports,\n+                           size_t n_ports, uintptr_t *yield) {\n \n     I(task->thread, this->ports == NULL);\n     I(task->thread, this->n_ports == 0);\n@@ -29,33 +29,33 @@ rust_port_selector::select(rust_task *task, rust_port **dptr,\n     // Start looking for ports from a different index each time.\n     size_t j = isaac_rand(&task->thread->rctx);\n     for (size_t i = 0; i < n_ports; i++) {\n-\tsize_t k = (i + j) % n_ports;\n-\trust_port *port = ports[k];\n-\tI(task->thread, port != NULL);\n+        size_t k = (i + j) % n_ports;\n+        rust_port *port = ports[k];\n+        I(task->thread, port != NULL);\n \n-\tport->lock.lock();\n-\tlocks_taken++;\n+        port->lock.lock();\n+        locks_taken++;\n \n-\tif (port->buffer.size() > 0) {\n-\t    *dptr = port;\n-\t    found_msg = true;\n-\t    break;\n-\t}\n+        if (port->buffer.size() > 0) {\n+            *dptr = port;\n+            found_msg = true;\n+            break;\n+        }\n     }\n \n     if (!found_msg) {\n-\tthis->ports = ports;\n-\tthis->n_ports = n_ports;\n-\tI(task->thread, task->rendezvous_ptr == NULL);\n-\ttask->rendezvous_ptr = (uintptr_t*)dptr;\n-\t*yield = true;\n-\ttask->block(this, \"waiting for select rendezvous\");\n+        this->ports = ports;\n+        this->n_ports = n_ports;\n+        I(task->thread, task->rendezvous_ptr == NULL);\n+        task->rendezvous_ptr = (uintptr_t*)dptr;\n+        *yield = true;\n+        task->block(this, \"waiting for select rendezvous\");\n     }\n \n     for (size_t i = 0; i < locks_taken; i++) {\n-\tsize_t k = (i + j) % n_ports;\n-\trust_port *port = ports[k];\n-\tport->lock.unlock();\n+        size_t k = (i + j) % n_ports;\n+        rust_port *port = ports[k];\n+        port->lock.unlock();\n     }\n }\n \n@@ -72,16 +72,16 @@ rust_port_selector::msg_sent_on(rust_port *port) {\n     scoped_lock with(rendezvous_lock);\n \n     if (task->blocked_on(this)) {\n-\tfor (size_t i = 0; i < n_ports; i++) {\n-\t    if (port == ports[i]) {\n-\t\t// This was one of the ports we were waiting on\n-\t\tports = NULL;\n-\t\tn_ports = 0;\n-\t\t*task->rendezvous_ptr = (uintptr_t) port;\n-\t\ttask->rendezvous_ptr = NULL;\n-\t\ttask->wakeup(this);\n-\t\treturn;\n-\t    }\n-\t}\n+        for (size_t i = 0; i < n_ports; i++) {\n+            if (port == ports[i]) {\n+                // This was one of the ports we were waiting on\n+                ports = NULL;\n+                n_ports = 0;\n+                *task->rendezvous_ptr = (uintptr_t) port;\n+                task->rendezvous_ptr = NULL;\n+                task->wakeup(this);\n+                return;\n+            }\n+        }\n     }\n }"}]}