{"sha": "c569d33be52a9be7b1070d1a7c9bc1255e004e87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM1NjlkMzNiZTUyYTliZTdiMTA3MGQxYTdjOWJjMTI1NWUwMDRlODc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-18T23:47:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-18T23:47:18Z"}, "message": "Auto merge of #7108 - rust-lang:fix-return-try-err, r=Manishearth\n\nun-double `return` on try_err\n\nThis fixes #7103 by looking at the parent expression and omitting the \"return \" in the suggestion when its already a `return` expression.\n\n---\n\nchangelog: none", "tree": {"sha": "e20b255ad7dc878d0095046678755c799cbf5eda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e20b255ad7dc878d0095046678755c799cbf5eda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c569d33be52a9be7b1070d1a7c9bc1255e004e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c569d33be52a9be7b1070d1a7c9bc1255e004e87", "html_url": "https://github.com/rust-lang/rust/commit/c569d33be52a9be7b1070d1a7c9bc1255e004e87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c569d33be52a9be7b1070d1a7c9bc1255e004e87/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e441b33ba00d897fff4479513210d41f988dfde3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e441b33ba00d897fff4479513210d41f988dfde3", "html_url": "https://github.com/rust-lang/rust/commit/e441b33ba00d897fff4479513210d41f988dfde3"}, {"sha": "243dc4625050d791eb8f91b6b4da2f8dc8449a8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/243dc4625050d791eb8f91b6b4da2f8dc8449a8d", "html_url": "https://github.com/rust-lang/rust/commit/243dc4625050d791eb8f91b6b4da2f8dc8449a8d"}], "stats": {"total": 35, "additions": 31, "deletions": 4}, "files": [{"sha": "ebb39ea4877dee0268807ccca366b5ae5e9c974d", "filename": "clippy_lints/src/try_err.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c569d33be52a9be7b1070d1a7c9bc1255e004e87/clippy_lints%2Fsrc%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c569d33be52a9be7b1070d1a7c9bc1255e004e87/clippy_lints%2Fsrc%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftry_err.rs?ref=c569d33be52a9be7b1070d1a7c9bc1255e004e87", "patch": "@@ -1,7 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_sugg;\n use clippy_utils::source::{snippet, snippet_with_macro_callsite};\n use clippy_utils::ty::is_type_diagnostic_item;\n-use clippy_utils::{differing_macro_contexts, in_macro, is_lang_ctor, match_def_path, paths};\n+use clippy_utils::{differing_macro_contexts, get_parent_expr, in_macro, is_lang_ctor, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_errors::Applicability;\n use rustc_hir::LangItem::ResultErr;\n@@ -102,10 +102,15 @@ impl<'tcx> LateLintPass<'tcx> for TryErr {\n                 } else {\n                     snippet(cx, err_arg.span, \"_\")\n                 };\n+                let ret_prefix = if get_parent_expr(cx, expr).map_or(false, |e| matches!(e.kind, ExprKind::Ret(_))) {\n+                    \"\" // already returns\n+                } else {\n+                    \"return \"\n+                };\n                 let suggestion = if err_ty == expr_err_ty {\n-                    format!(\"return {}{}{}\", prefix, origin_snippet, suffix)\n+                    format!(\"{}{}{}{}\", ret_prefix, prefix, origin_snippet, suffix)\n                 } else {\n-                    format!(\"return {}{}.into(){}\", prefix, origin_snippet, suffix)\n+                    format!(\"{}{}{}.into(){}\", ret_prefix, prefix, origin_snippet, suffix)\n                 };\n \n                 span_lint_and_sugg("}, {"sha": "264194419c7396680250c34fefb7ed935e0dc639", "filename": "tests/ui/try_err.fixed", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c569d33be52a9be7b1070d1a7c9bc1255e004e87/tests%2Fui%2Ftry_err.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/c569d33be52a9be7b1070d1a7c9bc1255e004e87/tests%2Fui%2Ftry_err.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.fixed?ref=c569d33be52a9be7b1070d1a7c9bc1255e004e87", "patch": "@@ -160,3 +160,11 @@ pub fn poll_next(ready: bool) -> Poll<Option<io::Result<()>>> {\n \n     Poll::Ready(None)\n }\n+\n+// Tests that `return` is not duplicated\n+pub fn try_return(x: bool) -> Result<i32, i32> {\n+    if x {\n+        return Err(42);\n+    }\n+    Ok(0)\n+}"}, {"sha": "bc6979bf457199e79271e9bd3bc0a12580d242ea", "filename": "tests/ui/try_err.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c569d33be52a9be7b1070d1a7c9bc1255e004e87/tests%2Fui%2Ftry_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c569d33be52a9be7b1070d1a7c9bc1255e004e87/tests%2Fui%2Ftry_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.rs?ref=c569d33be52a9be7b1070d1a7c9bc1255e004e87", "patch": "@@ -160,3 +160,11 @@ pub fn poll_next(ready: bool) -> Poll<Option<io::Result<()>>> {\n \n     Poll::Ready(None)\n }\n+\n+// Tests that `return` is not duplicated\n+pub fn try_return(x: bool) -> Result<i32, i32> {\n+    if x {\n+        return Err(42)?;\n+    }\n+    Ok(0)\n+}"}, {"sha": "8f332a9b6492caf32c24c28edf46fec5c03eaa1d", "filename": "tests/ui/try_err.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c569d33be52a9be7b1070d1a7c9bc1255e004e87/tests%2Fui%2Ftry_err.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c569d33be52a9be7b1070d1a7c9bc1255e004e87/tests%2Fui%2Ftry_err.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftry_err.stderr?ref=c569d33be52a9be7b1070d1a7c9bc1255e004e87", "patch": "@@ -74,5 +74,11 @@ error: returning an `Err(_)` with the `?` operator\n LL |         Err(io::ErrorKind::NotFound)?\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `return Poll::Ready(Some(Err(io::ErrorKind::NotFound.into())))`\n \n-error: aborting due to 10 previous errors\n+error: returning an `Err(_)` with the `?` operator\n+  --> $DIR/try_err.rs:167:16\n+   |\n+LL |         return Err(42)?;\n+   |                ^^^^^^^^ help: try this: `Err(42)`\n+\n+error: aborting due to 11 previous errors\n "}]}