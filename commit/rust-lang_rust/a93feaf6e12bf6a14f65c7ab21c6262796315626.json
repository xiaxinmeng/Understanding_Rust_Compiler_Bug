{"sha": "a93feaf6e12bf6a14f65c7ab21c6262796315626", "node_id": "C_kwDOAAsO6NoAKGE5M2ZlYWY2ZTEyYmY2YTE0ZjY1YzdhYjIxYzYyNjI3OTYzMTU2MjY", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2022-07-31T04:12:04Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2022-08-01T07:23:19Z"}, "message": "Make Rustdoc exit with correct error code when scrape examples from invalid files", "tree": {"sha": "a906b28a4f0066c29577b0d87b3210df1b12cac3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a906b28a4f0066c29577b0d87b3210df1b12cac3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a93feaf6e12bf6a14f65c7ab21c6262796315626", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a93feaf6e12bf6a14f65c7ab21c6262796315626", "html_url": "https://github.com/rust-lang/rust/commit/a93feaf6e12bf6a14f65c7ab21c6262796315626", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a93feaf6e12bf6a14f65c7ab21c6262796315626/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2318651d4d2c6280a5047544cbf4180119ba966", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2318651d4d2c6280a5047544cbf4180119ba966", "html_url": "https://github.com/rust-lang/rust/commit/a2318651d4d2c6280a5047544cbf4180119ba966"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "0d96840250332b5cb77c05c56334e2be8bdaa56a", "filename": "src/librustdoc/scrape_examples.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a93feaf6e12bf6a14f65c7ab21c6262796315626/src%2Flibrustdoc%2Fscrape_examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a93feaf6e12bf6a14f65c7ab21c6262796315626/src%2Flibrustdoc%2Fscrape_examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fscrape_examples.rs?ref=a93feaf6e12bf6a14f65c7ab21c6262796315626", "patch": "@@ -304,6 +304,12 @@ pub(crate) fn run(\n         let mut finder = FindCalls { calls: &mut calls, tcx, map: tcx.hir(), cx, target_crates };\n         tcx.hir().visit_all_item_likes_in_crate(&mut finder);\n \n+        // The visitor might have found a type error, which we need to\n+        // promote to a fatal error\n+        if tcx.sess.diagnostic().has_errors_or_lint_errors().is_some() {\n+            return Err(String::from(\"Compilation failed, aborting rustdoc\"));\n+        }\n+\n         // Sort call locations within a given file in document order\n         for fn_calls in calls.values_mut() {\n             for file_calls in fn_calls.values_mut() {"}, {"sha": "8f4fde96d7e4bb6cd937cbf9eb7b698f1bcb6bad", "filename": "src/test/rustdoc-ui/scrape-examples-fail-if-type-error.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a93feaf6e12bf6a14f65c7ab21c6262796315626/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a93feaf6e12bf6a14f65c7ab21c6262796315626/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.rs?ref=a93feaf6e12bf6a14f65c7ab21c6262796315626", "patch": "@@ -0,0 +1,7 @@\n+// check-fail\n+// compile-flags: -Z unstable-options --scrape-examples-output-path {{build-base}}/t.calls --scrape-examples-target-crate foobar\n+\n+pub fn foo() {\n+  INVALID_FUNC();\n+  //~^ ERROR could not resolve path\n+}"}, {"sha": "750aa32071944948222a402011636ebdcac07679", "filename": "src/test/rustdoc-ui/scrape-examples-fail-if-type-error.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a93feaf6e12bf6a14f65c7ab21c6262796315626/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a93feaf6e12bf6a14f65c7ab21c6262796315626/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fscrape-examples-fail-if-type-error.stderr?ref=a93feaf6e12bf6a14f65c7ab21c6262796315626", "patch": "@@ -0,0 +1,14 @@\n+error[E0433]: failed to resolve: could not resolve path `INVALID_FUNC`\n+  --> $DIR/scrape-examples-fail-if-type-error.rs:5:3\n+   |\n+LL |   INVALID_FUNC();\n+   |   ^^^^^^^^^^^^ could not resolve path `INVALID_FUNC`\n+   |\n+   = note: this error was originally ignored because you are running `rustdoc`\n+   = note: try running again with `rustc` or `cargo check` and you may get a more detailed error\n+\n+error: Compilation failed, aborting rustdoc\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0433`."}]}