{"sha": "4e888bf4035981c002dbf41b461297a90e428f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlODg4YmY0MDM1OTgxYzAwMmRiZjQxYjQ2MTI5N2E5MGU0MjhmMTg=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-02-14T15:54:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-14T15:54:49Z"}, "message": "Rollup merge of #81919 - ssomers:btree_cleanup_comments, r=Mark-Simulacrum\n\nBTreeMap: fix internal comments\n\nSalvaged from #81372\n\nr? `@Mark-Simulacrum`", "tree": {"sha": "858130888034c066b35ee5a2876d456852ab1f5f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/858130888034c066b35ee5a2876d456852ab1f5f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e888bf4035981c002dbf41b461297a90e428f18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgKUfJCRBK7hj4Ov3rIwAAdHIIAIFl7S9GNdwny1aaeTtokHJx\nM9CoWbw6y/TVK3gxJGypiD3BuEaW0uJGz7EZd+plKfKYFav8VrueCaMl+SAXQoww\nVGC/VVDO7eP97ztDiwaScn9KCQfV6xUMEaFQrXficTpmf5GMKLbVV0MYNdEi5uPj\neUYoOwoO1oa4id83Kb3+jU6v+4MlClsVUnOZLTB2B4FCBKdMkJXNp8R3akkMpdKq\n780v/aeTOMNReGE9dlOw6z8TJ8afv9rvs2V2vlPMPvX31PfzogH6zHm7SQXx5ISQ\n3+WBtiFG/IJZFyMb6T2KO45b2UuaNItmysrCv4m1K8SpOHGZBiLHacWUCbZ+Dp0=\n=lkCl\n-----END PGP SIGNATURE-----\n", "payload": "tree 858130888034c066b35ee5a2876d456852ab1f5f\nparent a6809d00aed27db9ac99841d2bd34060a77d2708\nparent f7edf5ce051e64c2d392e19819542e177867e714\nauthor Dylan DPC <dylan.dpc@gmail.com> 1613318089 +0100\ncommitter GitHub <noreply@github.com> 1613318089 +0100\n\nRollup merge of #81919 - ssomers:btree_cleanup_comments, r=Mark-Simulacrum\n\nBTreeMap: fix internal comments\n\nSalvaged from #81372\n\nr? `@Mark-Simulacrum`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e888bf4035981c002dbf41b461297a90e428f18", "html_url": "https://github.com/rust-lang/rust/commit/4e888bf4035981c002dbf41b461297a90e428f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e888bf4035981c002dbf41b461297a90e428f18/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6809d00aed27db9ac99841d2bd34060a77d2708", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6809d00aed27db9ac99841d2bd34060a77d2708", "html_url": "https://github.com/rust-lang/rust/commit/a6809d00aed27db9ac99841d2bd34060a77d2708"}, {"sha": "f7edf5ce051e64c2d392e19819542e177867e714", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7edf5ce051e64c2d392e19819542e177867e714", "html_url": "https://github.com/rust-lang/rust/commit/f7edf5ce051e64c2d392e19819542e177867e714"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "783c802448199918cebe654cf4e9dabd1fb538a4", "filename": "library/alloc/src/collections/btree/navigate.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4e888bf4035981c002dbf41b461297a90e428f18/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnavigate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e888bf4035981c002dbf41b461297a90e428f18/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnavigate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnavigate.rs?ref=4e888bf4035981c002dbf41b461297a90e428f18", "patch": "@@ -103,7 +103,8 @@ where\n     }\n }\n \n-/// Equivalent to `range_search(k, v, ..)` but without the `Ord` bound.\n+/// Equivalent to `range_search(root1, root2, ..)` but without the `Ord` bound.\n+/// Equivalent to `(root1.first_leaf_edge(), root2.last_leaf_edge())` but more efficient.\n fn full_range<BorrowType: marker::BorrowType, K, V>(\n     root1: NodeRef<BorrowType, K, V, marker::LeafOrInternal>,\n     root2: NodeRef<BorrowType, K, V, marker::LeafOrInternal>,\n@@ -130,7 +131,7 @@ fn full_range<BorrowType: marker::BorrowType, K, V>(\n }\n \n impl<'a, K: 'a, V: 'a> NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal> {\n-    /// Creates a pair of leaf edges delimiting a specified range in or underneath a node.\n+    /// Finds the pair of leaf edges delimiting a specific range in a tree.\n     ///\n     /// The result is meaningful only if the tree is ordered by key, like the tree\n     /// in a `BTreeMap` is.\n@@ -149,7 +150,7 @@ impl<'a, K: 'a, V: 'a> NodeRef<marker::Immut<'a>, K, V, marker::LeafOrInternal>\n         range_search(self, self, range)\n     }\n \n-    /// Returns (self.first_leaf_edge(), self.last_leaf_edge()), but more efficiently.\n+    /// Finds the pair of leaf edges delimiting an entire tree.\n     pub fn full_range(\n         self,\n     ) -> ("}, {"sha": "4fc32305f1e30a0066cf86f2f3e13dda45bd05e0", "filename": "library/alloc/src/collections/btree/node.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4e888bf4035981c002dbf41b461297a90e428f18/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e888bf4035981c002dbf41b461297a90e428f18/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fnode.rs?ref=4e888bf4035981c002dbf41b461297a90e428f18", "patch": "@@ -181,7 +181,7 @@ impl<K, V, Type> NodeRef<marker::Owned, K, V, Type> {\n         NodeRef { height: self.height, node: self.node, _marker: PhantomData }\n     }\n \n-    /// Irreversibly transistions to a reference that offers traversal,\n+    /// Irreversibly transitions to a reference that permits traversal and offers\n     /// destructive methods and little else.\n     pub fn into_dying(self) -> NodeRef<marker::Dying, K, V, Type> {\n         NodeRef { height: self.height, node: self.node, _marker: PhantomData }"}]}