{"sha": "b76d1125d4f1596e4c4481064fa6342990f1a985", "node_id": "C_kwDOAAsO6NoAKGI3NmQxMTI1ZDRmMTU5NmU0YzQ0ODEwNjRmYTYzNDI5OTBmMWE5ODU", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-05-25T18:08:27Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2022-06-03T09:31:11Z"}, "message": "Conservatively report \"not sure\" in cfg_accessible", "tree": {"sha": "511407df881b6878dc53fdf014c9f98c6f170274", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/511407df881b6878dc53fdf014c9f98c6f170274"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b76d1125d4f1596e4c4481064fa6342990f1a985", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b76d1125d4f1596e4c4481064fa6342990f1a985", "html_url": "https://github.com/rust-lang/rust/commit/b76d1125d4f1596e4c4481064fa6342990f1a985", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b76d1125d4f1596e4c4481064fa6342990f1a985/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4d03c6c94b7c46a2d53a9412c447932d69316a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4d03c6c94b7c46a2d53a9412c447932d69316a4", "html_url": "https://github.com/rust-lang/rust/commit/a4d03c6c94b7c46a2d53a9412c447932d69316a4"}], "stats": {"total": 92, "additions": 59, "deletions": 33}, "files": [{"sha": "2e2d3674560e8d380063b5d17acb8290ec53f9ba", "filename": "compiler/rustc_resolve/src/macros.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b76d1125d4f1596e4c4481064fa6342990f1a985/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b76d1125d4f1596e4c4481064fa6342990f1a985/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fmacros.rs?ref=b76d1125d4f1596e4c4481064fa6342990f1a985", "patch": "@@ -443,7 +443,9 @@ impl<'a> ResolverExpand for Resolver<'a> {\n                 PathResult::NonModule(partial_res) if partial_res.unresolved_segments() == 0 => {\n                     return Ok(true);\n                 }\n-                PathResult::NonModule(..) => {\n+                PathResult::NonModule(..) |\n+                // HACK(Urgau): This shouldn't be necessary\n+                PathResult::Failed { is_error_from_last_segment: false, .. } => {\n                     self.session\n                         .struct_span_err(span, \"not sure whether the path is accessible or not\")\n                         .note(\"the type may have associated items, but we are currently not checking them\")"}, {"sha": "ae18bc55c4f2d0f91a096f6b59563d75080fbd67", "filename": "src/test/ui/conditional-compilation/cfg_accessible-bugs.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-bugs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-bugs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-bugs.rs?ref=b76d1125d4f1596e4c4481064fa6342990f1a985", "patch": "@@ -5,20 +5,8 @@\n #![feature(cfg_accessible)]\n #![feature(trait_alias)]\n \n-enum Enum {\n-    Existing { existing: u8 },\n-}\n-\n trait TraitAlias = std::fmt::Debug + Send;\n \n-// FIXME: Currently returns `false` but should be \"not sure\"\n-#[cfg_accessible(Enum::Existing::existing)]\n-const A: bool = true;\n-\n-// FIXME: Currently returns `false` but should be \"not sure\"\n-#[cfg_accessible(Enum::Existing::unresolved)]\n-const B: bool = true;\n-\n // FIXME: Currently shows \"cannot determine\" but should be `false`\n #[cfg_accessible(unresolved)] //~ ERROR cannot determine\n const C: bool = true;"}, {"sha": "81f02387835d6b47b5d5e3125def4d0c8f8a5d00", "filename": "src/test/ui/conditional-compilation/cfg_accessible-bugs.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-bugs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-bugs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-bugs.stderr?ref=b76d1125d4f1596e4c4481064fa6342990f1a985", "patch": "@@ -1,13 +1,13 @@\n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-bugs.rs:28:18\n+  --> $DIR/cfg_accessible-bugs.rs:15:18\n    |\n LL | #[cfg_accessible(TraitAlias::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: cannot determine whether the path is accessible or not\n-  --> $DIR/cfg_accessible-bugs.rs:24:1\n+  --> $DIR/cfg_accessible-bugs.rs:11:1\n    |\n LL | #[cfg_accessible(unresolved)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "7d5dd58902753253e77be28eb77d399aa7168b58", "filename": "src/test/ui/conditional-compilation/cfg_accessible-not_sure.edition2015.stderr", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.edition2015.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.edition2015.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.edition2015.stderr?ref=b76d1125d4f1596e4c4481064fa6342990f1a985", "patch": "@@ -33,74 +33,90 @@ LL | #[cfg_accessible(Union::unresolved)]\n error: not sure whether the path is accessible or not\n   --> $DIR/cfg_accessible-not_sure.rs:36:18\n    |\n+LL | #[cfg_accessible(Enum::Existing::existing)]\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the type may have associated items, but we are currently not checking them\n+\n+error: not sure whether the path is accessible or not\n+  --> $DIR/cfg_accessible-not_sure.rs:38:18\n+   |\n+LL | #[cfg_accessible(Enum::Existing::unresolved)]\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the type may have associated items, but we are currently not checking them\n+\n+error: not sure whether the path is accessible or not\n+  --> $DIR/cfg_accessible-not_sure.rs:40:18\n+   |\n LL | #[cfg_accessible(Enum::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:46:18\n+  --> $DIR/cfg_accessible-not_sure.rs:50:18\n    |\n LL | #[cfg_accessible(Trait::existing)]\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:48:18\n+  --> $DIR/cfg_accessible-not_sure.rs:52:18\n    |\n LL | #[cfg_accessible(Trait::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:55:18\n+  --> $DIR/cfg_accessible-not_sure.rs:59:18\n    |\n LL | #[cfg_accessible(TypeAlias::existing)]\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:57:18\n+  --> $DIR/cfg_accessible-not_sure.rs:61:18\n    |\n LL | #[cfg_accessible(TypeAlias::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:66:18\n+  --> $DIR/cfg_accessible-not_sure.rs:70:18\n    |\n LL | #[cfg_accessible(ForeignType::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:75:18\n+  --> $DIR/cfg_accessible-not_sure.rs:79:18\n    |\n LL | #[cfg_accessible(AssocType::AssocType::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:80:18\n+  --> $DIR/cfg_accessible-not_sure.rs:84:18\n    |\n LL | #[cfg_accessible(u8::unresolved)]\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:82:18\n+  --> $DIR/cfg_accessible-not_sure.rs:86:18\n    |\n LL | #[cfg_accessible(u8::is_ascii)]\n    |                  ^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 15 previous errors\n "}, {"sha": "7d5dd58902753253e77be28eb77d399aa7168b58", "filename": "src/test/ui/conditional-compilation/cfg_accessible-not_sure.edition2021.stderr", "status": "modified", "additions": 25, "deletions": 9, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.edition2021.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.edition2021.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.edition2021.stderr?ref=b76d1125d4f1596e4c4481064fa6342990f1a985", "patch": "@@ -33,74 +33,90 @@ LL | #[cfg_accessible(Union::unresolved)]\n error: not sure whether the path is accessible or not\n   --> $DIR/cfg_accessible-not_sure.rs:36:18\n    |\n+LL | #[cfg_accessible(Enum::Existing::existing)]\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the type may have associated items, but we are currently not checking them\n+\n+error: not sure whether the path is accessible or not\n+  --> $DIR/cfg_accessible-not_sure.rs:38:18\n+   |\n+LL | #[cfg_accessible(Enum::Existing::unresolved)]\n+   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: the type may have associated items, but we are currently not checking them\n+\n+error: not sure whether the path is accessible or not\n+  --> $DIR/cfg_accessible-not_sure.rs:40:18\n+   |\n LL | #[cfg_accessible(Enum::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:46:18\n+  --> $DIR/cfg_accessible-not_sure.rs:50:18\n    |\n LL | #[cfg_accessible(Trait::existing)]\n    |                  ^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:48:18\n+  --> $DIR/cfg_accessible-not_sure.rs:52:18\n    |\n LL | #[cfg_accessible(Trait::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:55:18\n+  --> $DIR/cfg_accessible-not_sure.rs:59:18\n    |\n LL | #[cfg_accessible(TypeAlias::existing)]\n    |                  ^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:57:18\n+  --> $DIR/cfg_accessible-not_sure.rs:61:18\n    |\n LL | #[cfg_accessible(TypeAlias::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:66:18\n+  --> $DIR/cfg_accessible-not_sure.rs:70:18\n    |\n LL | #[cfg_accessible(ForeignType::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:75:18\n+  --> $DIR/cfg_accessible-not_sure.rs:79:18\n    |\n LL | #[cfg_accessible(AssocType::AssocType::unresolved)]\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:80:18\n+  --> $DIR/cfg_accessible-not_sure.rs:84:18\n    |\n LL | #[cfg_accessible(u8::unresolved)]\n    |                  ^^^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n error: not sure whether the path is accessible or not\n-  --> $DIR/cfg_accessible-not_sure.rs:82:18\n+  --> $DIR/cfg_accessible-not_sure.rs:86:18\n    |\n LL | #[cfg_accessible(u8::is_ascii)]\n    |                  ^^^^^^^^^^^^\n    |\n    = note: the type may have associated items, but we are currently not checking them\n \n-error: aborting due to 13 previous errors\n+error: aborting due to 15 previous errors\n "}, {"sha": "d68acd2451fba05bf88b2ff480371af504a196e7", "filename": "src/test/ui/conditional-compilation/cfg_accessible-not_sure.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b76d1125d4f1596e4c4481064fa6342990f1a985/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconditional-compilation%2Fcfg_accessible-not_sure.rs?ref=b76d1125d4f1596e4c4481064fa6342990f1a985", "patch": "@@ -33,6 +33,10 @@ enum Enum {\n     Existing { existing: u8 },\n }\n \n+#[cfg_accessible(Enum::Existing::existing)] //~ ERROR not sure\n+const A: bool = true;\n+#[cfg_accessible(Enum::Existing::unresolved)] //~ ERROR not sure\n+const B: bool = true;\n #[cfg_accessible(Enum::unresolved)] //~ ERROR not sure\n const C: bool = true;\n "}]}