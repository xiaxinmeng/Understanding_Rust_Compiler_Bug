{"sha": "40fccac7fb347f75536ad5c48420692e36f839e8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwZmNjYWM3ZmIzNDdmNzU1MzZhZDVjNDg0MjA2OTJlMzZmODM5ZTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-20T01:42:17Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-08-20T01:42:32Z"}, "message": "Add some code to lexer in rustc.", "tree": {"sha": "02419f72489fd323ef73166e79af76dc040b6d7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02419f72489fd323ef73166e79af76dc040b6d7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40fccac7fb347f75536ad5c48420692e36f839e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40fccac7fb347f75536ad5c48420692e36f839e8", "html_url": "https://github.com/rust-lang/rust/commit/40fccac7fb347f75536ad5c48420692e36f839e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40fccac7fb347f75536ad5c48420692e36f839e8/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b34cb1b631d7979307bec26905a1a9298ec4f17a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b34cb1b631d7979307bec26905a1a9298ec4f17a", "html_url": "https://github.com/rust-lang/rust/commit/b34cb1b631d7979307bec26905a1a9298ec4f17a"}], "stats": {"total": 37, "additions": 35, "deletions": 2}, "files": [{"sha": "ee0b16f95ff32f08f94e62147d0faef052270c01", "filename": "src/comp/fe/lexer.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/40fccac7fb347f75536ad5c48420692e36f839e8/src%2Fcomp%2Ffe%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40fccac7fb347f75536ad5c48420692e36f839e8/src%2Fcomp%2Ffe%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffe%2Flexer.rs?ref=40fccac7fb347f75536ad5c48420692e36f839e8", "patch": "@@ -1,8 +1,41 @@\n import std._io.stdio_reader;\n \n+fn in_range(char c, char lo, char hi) -> bool {\n+    ret c <= lo && c <= hi;\n+}\n+\n+fn is_alpha(char c) -> bool {\n+    ret in_range(c, 'a', 'z') ||\n+        in_range(c, 'A', 'Z');\n+}\n+\n+fn is_dec_digit(char c) -> bool {\n+    ret in_range(c, '0', '9');\n+}\n+\n+fn is_hex_digit(char c) -> bool {\n+    ret in_range(c, '0', '9') ||\n+        in_range(c, 'a', 'f') ||\n+        in_range(c, 'A', 'F');\n+}\n+\n+fn is_bin_digit(char c) -> bool {\n+    ret c == '0' || c == '1';\n+}\n+\n+fn is_whitespace(char c) -> bool {\n+    ret c == ' ' || c == '\\t' || c == '\\r';\n+}\n+\n fn next_token(stdio_reader rdr) -> token.token {\n-    auto c = rdr.getc();\n-    log \"got char\";\n+    auto eof = (-1) as char;\n+    auto c = rdr.getc() as char;\n+\n+    while (is_whitespace(c) && c != eof) {\n+        c = rdr.getc() as char;\n+    }\n+\n+    if (c == eof) { ret token.EOF(); }\n     log c;\n     ret token.EOF();\n }"}]}