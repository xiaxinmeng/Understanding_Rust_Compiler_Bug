{"sha": "5632a7c0758167014ddac5283720f235cb08f184", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2MzJhN2MwNzU4MTY3MDE0ZGRhYzUyODM3MjBmMjM1Y2IwOGYxODQ=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-05T08:14:30Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-05T08:14:57Z"}, "message": "Process blank lines if only they're within file lines range", "tree": {"sha": "a8ab9ea1e04b7583e2ccb5cd084ea3ebbd9e1663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8ab9ea1e04b7583e2ccb5cd084ea3ebbd9e1663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5632a7c0758167014ddac5283720f235cb08f184", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5632a7c0758167014ddac5283720f235cb08f184", "html_url": "https://github.com/rust-lang/rust/commit/5632a7c0758167014ddac5283720f235cb08f184", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5632a7c0758167014ddac5283720f235cb08f184/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53616f63b13935df6c761a449bfa940d3146ef47", "url": "https://api.github.com/repos/rust-lang/rust/commits/53616f63b13935df6c761a449bfa940d3146ef47", "html_url": "https://github.com/rust-lang/rust/commit/53616f63b13935df6c761a449bfa940d3146ef47"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "ba99bdd92c045f89cef045009ef1824d8be985c9", "filename": "src/missed_spans.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5632a7c0758167014ddac5283720f235cb08f184/src%2Fmissed_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5632a7c0758167014ddac5283720f235cb08f184/src%2Fmissed_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmissed_spans.rs?ref=5632a7c0758167014ddac5283720f235cb08f184", "patch": "@@ -13,6 +13,7 @@ use std::iter::repeat;\n \n use syntax::codemap::{BytePos, Pos, Span};\n \n+use codemap::LineRangeUtils;\n use comment::{rewrite_comment, CodeCharKind, CommentCodeSlices};\n use config::WriteMode;\n use shape::{Indent, Shape};\n@@ -76,7 +77,7 @@ impl<'a> FmtVisitor<'a> {\n         self.last_pos = end;\n         let span = mk_sp(start, end);\n         let snippet = self.snippet(span);\n-        if snippet.trim().is_empty() {\n+        if snippet.trim().is_empty() && !out_of_file_lines_range!(self, span) {\n             // Keep vertical spaces within range.\n             self.push_vertical_spaces(count_newlines(&snippet));\n             process_last_snippet(self, \"\", &snippet);"}]}