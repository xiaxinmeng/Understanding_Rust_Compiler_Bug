{"sha": "b92cc8a08d74fb412bc444a4361df51b0c95401c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5MmNjOGEwOGQ3NGZiNDEyYmM0NDRhNDM2MWRmNTFiMGM5NTQwMWM=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-05-29T20:46:05Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-05-29T20:52:24Z"}, "message": "add testcase that no longer ICEs\n\nFixes #3969", "tree": {"sha": "d95beec11b47a25e041ce5a9fb8ba4f02fa5920e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d95beec11b47a25e041ce5a9fb8ba4f02fa5920e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b92cc8a08d74fb412bc444a4361df51b0c95401c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b92cc8a08d74fb412bc444a4361df51b0c95401c", "html_url": "https://github.com/rust-lang/rust/commit/b92cc8a08d74fb412bc444a4361df51b0c95401c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b92cc8a08d74fb412bc444a4361df51b0c95401c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ea7cd165ad6705603852771bf82cc2fd6560db5", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ea7cd165ad6705603852771bf82cc2fd6560db5", "html_url": "https://github.com/rust-lang/rust/commit/7ea7cd165ad6705603852771bf82cc2fd6560db5"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "4feab7910b7445da53bf0c73ac25bea9ce160a66", "filename": "tests/ui/crashes/ice-3969.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/b92cc8a08d74fb412bc444a4361df51b0c95401c/tests%2Fui%2Fcrashes%2Fice-3969.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b92cc8a08d74fb412bc444a4361df51b0c95401c/tests%2Fui%2Fcrashes%2Fice-3969.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3969.rs?ref=b92cc8a08d74fb412bc444a4361df51b0c95401c", "patch": "@@ -0,0 +1,51 @@\n+// https://github.com/rust-lang/rust-clippy/issues/3969\n+// used to crash: error: internal compiler error:\n+// src/librustc_traits/normalize_erasing_regions.rs:43: could not fully normalize `<i32 as\n+// std::iter::Iterator>::Item test from rustc ./ui/trivial-bounds/trivial-bounds-inconsistent.rs\n+\n+// Check that tautalogically false bounds are accepted, and are used\n+// in type inference.\n+#![feature(trivial_bounds)]\n+#![allow(unused)]\n+\n+trait A {}\n+\n+impl A for i32 {}\n+\n+struct Dst<X: ?Sized> {\n+    x: X,\n+}\n+\n+struct TwoStrs(str, str)\n+where\n+    str: Sized;\n+\n+fn unsized_local()\n+where\n+    for<'a> Dst<A + 'a>: Sized,\n+{\n+    let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+}\n+\n+fn return_str() -> str\n+where\n+    str: Sized,\n+{\n+    *\"Sized\".to_string().into_boxed_str()\n+}\n+\n+fn use_op(s: String) -> String\n+where\n+    String: ::std::ops::Neg<Output = String>,\n+{\n+    -s\n+}\n+\n+fn use_for()\n+where\n+    i32: Iterator,\n+{\n+    for _ in 2i32 {}\n+}\n+\n+fn main() {}"}, {"sha": "923db0664a714f53804c76a9e08986e2f8e50327", "filename": "tests/ui/crashes/ice-3969.stderr", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/b92cc8a08d74fb412bc444a4361df51b0c95401c/tests%2Fui%2Fcrashes%2Fice-3969.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b92cc8a08d74fb412bc444a4361df51b0c95401c/tests%2Fui%2Fcrashes%2Fice-3969.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-3969.stderr?ref=b92cc8a08d74fb412bc444a4361df51b0c95401c", "patch": "@@ -0,0 +1,22 @@\n+error: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/ice-3969.rs:25:17\n+   |\n+LL |     for<'a> Dst<A + 'a>: Sized,\n+   |                 ^^^^^^ help: use `dyn`: `dyn A + 'a`\n+   |\n+   = note: `-D bare-trait-objects` implied by `-D warnings`\n+\n+error: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/ice-3969.rs:27:16\n+   |\n+LL |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+   |                ^ help: use `dyn`: `dyn A`\n+\n+error: trait objects without an explicit `dyn` are deprecated\n+  --> $DIR/ice-3969.rs:27:57\n+   |\n+LL |     let x: Dst<A> = *(Box::new(Dst { x: 1 }) as Box<Dst<A>>);\n+   |                                                         ^ help: use `dyn`: `dyn A`\n+\n+error: aborting due to 3 previous errors\n+"}]}