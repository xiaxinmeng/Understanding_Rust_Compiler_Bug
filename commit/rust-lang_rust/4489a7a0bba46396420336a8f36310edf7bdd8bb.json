{"sha": "4489a7a0bba46396420336a8f36310edf7bdd8bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ODlhN2EwYmJhNDYzOTY0MjAzMzZhOGYzNjMxMGVkZjdiZGQ4YmI=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2017-09-29T23:59:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-09-29T23:59:04Z"}, "message": "Rollup merge of #44900 - Havvy:normalize-lang-attribute-spacing, r=sfackler\n\nNormalize spaces in lang attributes.\n\nSo, like, I grepped for all `lang` attributes for *reasons* and I noticed that they all share the same spacing of `#[lang = \"item_name\"]` except these five instances. So I decided to fix that. So enjoy this PR of exactly ten spaces.", "tree": {"sha": "6219a9c430ec3d661ebd5f93614aca1831a18dd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6219a9c430ec3d661ebd5f93614aca1831a18dd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4489a7a0bba46396420336a8f36310edf7bdd8bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4489a7a0bba46396420336a8f36310edf7bdd8bb", "html_url": "https://github.com/rust-lang/rust/commit/4489a7a0bba46396420336a8f36310edf7bdd8bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4489a7a0bba46396420336a8f36310edf7bdd8bb/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37c74e1979729f2fb1e2f34c84d2b44e690c9ff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/37c74e1979729f2fb1e2f34c84d2b44e690c9ff7", "html_url": "https://github.com/rust-lang/rust/commit/37c74e1979729f2fb1e2f34c84d2b44e690c9ff7"}, {"sha": "20fc2153239ef0dd2eeb23a8ee30d0c9843000b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/20fc2153239ef0dd2eeb23a8ee30d0c9843000b3", "html_url": "https://github.com/rust-lang/rust/commit/20fc2153239ef0dd2eeb23a8ee30d0c9843000b3"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "f56a9a40332987c804e829fa35d362416c241a53", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=4489a7a0bba46396420336a8f36310edf7bdd8bb", "patch": "@@ -122,7 +122,7 @@ pub trait Sized {\n /// [RFC982]: https://github.com/rust-lang/rfcs/blob/master/text/0982-dst-coercion.md\n /// [nomicon-coerce]: ../../nomicon/coercions.html\n #[unstable(feature = \"unsize\", issue = \"27732\")]\n-#[lang=\"unsize\"]\n+#[lang = \"unsize\"]\n pub trait Unsize<T: ?Sized> {\n     // Empty.\n }"}, {"sha": "cd896859b16bc7eb703de393279305f37d8529b5", "filename": "src/libcore/ops/unsize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Flibcore%2Fops%2Funsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Flibcore%2Fops%2Funsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Funsize.rs?ref=4489a7a0bba46396420336a8f36310edf7bdd8bb", "patch": "@@ -42,7 +42,7 @@ use marker::Unsize;\n /// [unsize]: ../marker/trait.Unsize.html\n /// [nomicon-coerce]: ../../nomicon/coercions.html\n #[unstable(feature = \"coerce_unsized\", issue = \"27732\")]\n-#[lang=\"coerce_unsized\"]\n+#[lang = \"coerce_unsized\"]\n pub trait CoerceUnsized<T> {\n     // Empty.\n }"}, {"sha": "34d310446536d19c41317681feebfa99d87be15b", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=4489a7a0bba46396420336a8f36310edf7bdd8bb", "patch": "@@ -56,7 +56,7 @@ pub use intrinsics::write_bytes;\n /// This has all the same safety problems as `ptr::read` with respect to\n /// invalid pointers, types, and double drops.\n #[stable(feature = \"drop_in_place\", since = \"1.8.0\")]\n-#[lang=\"drop_in_place\"]\n+#[lang = \"drop_in_place\"]\n #[allow(unconditional_recursion)]\n pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {\n     // Code here does not matter - this is replaced by the"}, {"sha": "8733c7436d5bd9658280ab37bfa313d479759a5d", "filename": "src/rtstartup/rsbegin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Frtstartup%2Frsbegin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Frtstartup%2Frsbegin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frtstartup%2Frsbegin.rs?ref=4489a7a0bba46396420336a8f36310edf7bdd8bb", "patch": "@@ -38,7 +38,7 @@ trait Copy {}\n trait Freeze {}\n impl Freeze for .. {}\n \n-#[lang=\"drop_in_place\"]\n+#[lang = \"drop_in_place\"]\n #[inline]\n #[allow(unconditional_recursion)]\n pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {"}, {"sha": "a6aed3540ddbb8b9d092f137a23322d7a9b49201", "filename": "src/rtstartup/rsend.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Frtstartup%2Frsend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4489a7a0bba46396420336a8f36310edf7bdd8bb/src%2Frtstartup%2Frsend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frtstartup%2Frsend.rs?ref=4489a7a0bba46396420336a8f36310edf7bdd8bb", "patch": "@@ -25,7 +25,7 @@ trait Copy {}\n trait Freeze {}\n impl Freeze for .. {}\n \n-#[lang=\"drop_in_place\"]\n+#[lang = \"drop_in_place\"]\n #[inline]\n #[allow(unconditional_recursion)]\n pub unsafe fn drop_in_place<T: ?Sized>(to_drop: *mut T) {"}]}