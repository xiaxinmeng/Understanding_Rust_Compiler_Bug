{"sha": "1bd00e8cb4667afe5cec047f460e27e3e6664629", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiZDAwZThjYjQ2NjdhZmU1Y2VjMDQ3ZjQ2MGUyN2UzZTY2NjQ2Mjk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-14T09:52:45Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-14T09:52:45Z"}, "message": "run `start` and `main` language item if provided", "tree": {"sha": "3b0f4965a70686ddac40468a014f48bbe82ca412", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b0f4965a70686ddac40468a014f48bbe82ca412"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bd00e8cb4667afe5cec047f460e27e3e6664629", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXX9PtAAoJEFbW7qD8Z6xG7YkP/jxKY1acf+Klobdy2oZDLnWh\nP4V+eF3g+NsMY7eG0UwEb++ZFhkqgqKFQah9a1/4OiMAypKQBnHg2GD2mB1ITl3w\n8ktKumXct5wpO4zYwT0TNHmzTfierrWEhiAHOLV9BVDRi8P8flCe6YKd3nkyBFyR\nnXF/+q4xVFzWNSP295OO+bJRg9pv8M+1PZwGK7PJH2tZQEvY1cYsU+IyZPuWMDdP\n5HGxCTyskx7aMeAqSJyoYIHtKW7McOCuAc/Y2b33jH6hhlhdipHudaZ24FdYt+XN\nH2h2G+lU+oHxVUUQqWVvPOmQyxWWKAJHOrdPN81S+WlM4uyOf11UyKYgXe+txDMC\nGXltBxpA7neiHNxNOhmgut8P+iLyxRApMP+Se45lyC90SfZXUdaDbmVH1zNbY9n0\nvr0DErOo2BrjsYGeMQnhyxWgnKpn6jsaJ6Rb4eYdKhyU2Fwl+JW6Sxaxf9EKeSJn\n58MVgazRHYiikqn0jggvtLwSKiJSliT6OsSKdmQ2SreCbhEKjsThwWrXGc+GjPq7\nehj2mtPP4isJmSP8k/OK5ukJrnjPAtu0poIEPE14BVMHb8vdaUV9C67q2k20Vi5n\nsv9mtr4iPitE5qlnGFdqK1X2tPG6Fw9c2lajeJaBhKXAuYvIa0/GfluFmv/3aM4l\n22hkthPf7zIfWu4vOf7x\n=7PJl\n-----END PGP SIGNATURE-----", "payload": "tree 3b0f4965a70686ddac40468a014f48bbe82ca412\nparent 55fd060cd885023f918f4e5c5f910523fa7dfd52\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465897965 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465897965 +0200\n\nrun `start` and `main` language item if provided"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bd00e8cb4667afe5cec047f460e27e3e6664629", "html_url": "https://github.com/rust-lang/rust/commit/1bd00e8cb4667afe5cec047f460e27e3e6664629", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bd00e8cb4667afe5cec047f460e27e3e6664629/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55fd060cd885023f918f4e5c5f910523fa7dfd52", "url": "https://api.github.com/repos/rust-lang/rust/commits/55fd060cd885023f918f4e5c5f910523fa7dfd52", "html_url": "https://github.com/rust-lang/rust/commit/55fd060cd885023f918f4e5c5f910523fa7dfd52"}], "stats": {"total": 33, "additions": 15, "deletions": 18}, "files": [{"sha": "cdd6ee027d97fb3744a0f44ea1e7baeb7e9681f7", "filename": "src/bin/miri.rs", "status": "modified", "additions": 4, "deletions": 18, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1bd00e8cb4667afe5cec047f460e27e3e6664629/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bd00e8cb4667afe5cec047f460e27e3e6664629/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=1bd00e8cb4667afe5cec047f460e27e3e6664629", "patch": "@@ -19,11 +19,7 @@ use miri::{\n use rustc::session::Session;\n use rustc_driver::{driver, CompilerCalls};\n use rustc::ty::{TyCtxt, subst};\n-use rustc::mir::mir_map::MirMap;\n-use rustc::mir::repr::Mir;\n use rustc::hir::def_id::DefId;\n-use rustc::hir::{map, ItemFn, Item};\n-use syntax::codemap::Span;\n \n struct MiriCompilerCalls;\n \n@@ -40,9 +36,12 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n \n             let tcx = state.tcx.unwrap();\n             let mir_map = state.mir_map.unwrap();\n-            let (span, mir, def_id) = get_main(tcx, mir_map);\n+\n+            let (node_id, span) = state.session.entry_fn.borrow().expect(\"no main or start function found\");\n             println!(\"found `main` function at: {:?}\", span);\n \n+            let mir = mir_map.map.get(&node_id).expect(\"no mir for main function\");\n+            let def_id = tcx.map.local_def_id(node_id);\n             let mut ecx = EvalContext::new(tcx, mir_map);\n             let substs = tcx.mk_substs(subst::Substs::empty());\n             let return_ptr = ecx.alloc_ret_ptr(mir.return_ty, substs).expect(\"main function should not be diverging\");\n@@ -66,19 +65,6 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n     }\n }\n \n-fn get_main<'a, 'b, 'tcx: 'b>(tcx: TyCtxt<'a, 'tcx, 'tcx>, mir_map: &'b MirMap<'tcx>) -> (Span, &'b Mir<'tcx>, DefId) {\n-    for (&id, mir) in &mir_map.map {\n-        if let map::Node::NodeItem(&Item { name, span, ref node, .. }) = tcx.map.get(id) {\n-            if let ItemFn(..) = *node {\n-                if name.as_str() == \"main\" {\n-                    return (span, mir, tcx.map.local_def_id(id));\n-                }\n-            }\n-        }\n-    }\n-    panic!(\"no main function found\");\n-}\n-\n fn report(tcx: TyCtxt, ecx: &EvalContext, e: EvalError) {\n     let frame = ecx.stack().last().expect(\"stackframe was empty\");\n     let block = &frame.mir.basic_blocks()[frame.next_block];"}, {"sha": "91d183ee6af70f1362eb94e0a49d24d172c538db", "filename": "tests/run-pass/main_fn.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1bd00e8cb4667afe5cec047f460e27e3e6664629/tests%2Frun-pass%2Fmain_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bd00e8cb4667afe5cec047f460e27e3e6664629/tests%2Frun-pass%2Fmain_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmain_fn.rs?ref=1bd00e8cb4667afe5cec047f460e27e3e6664629", "patch": "@@ -0,0 +1,5 @@\n+#![feature(main)]\n+\n+#[main]\n+fn foo() {\n+}"}, {"sha": "600f6e49f68cb0107b60261707a2840590bdbde5", "filename": "tests/run-pass/start_fn.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1bd00e8cb4667afe5cec047f460e27e3e6664629/tests%2Frun-pass%2Fstart_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bd00e8cb4667afe5cec047f460e27e3e6664629/tests%2Frun-pass%2Fstart_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstart_fn.rs?ref=1bd00e8cb4667afe5cec047f460e27e3e6664629", "patch": "@@ -0,0 +1,6 @@\n+#![feature(start)]\n+\n+#[start]\n+fn foo(_nargs: isize, _args: *const *const u8) -> isize {\n+    return 0;\n+}"}]}