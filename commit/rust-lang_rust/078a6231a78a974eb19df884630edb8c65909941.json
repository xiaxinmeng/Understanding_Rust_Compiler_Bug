{"sha": "078a6231a78a974eb19df884630edb8c65909941", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3OGE2MjMxYTc4YTk3NGViMTlkZjg4NDYzMGVkYjhjNjU5MDk5NDE=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-01-20T16:59:32Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-01-20T17:00:34Z"}, "message": "std: Use the fallback impl for memrchr on non-linux\n\nThis code was never used(!). This brings the memrchr improvements to\nnon-linux platforms (LineWriter / buffered stdout benefits).", "tree": {"sha": "8ea37e57d0d2927829f23cb5de216422f6619c6d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8ea37e57d0d2927829f23cb5de216422f6619c6d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/078a6231a78a974eb19df884630edb8c65909941", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/078a6231a78a974eb19df884630edb8c65909941", "html_url": "https://github.com/rust-lang/rust/commit/078a6231a78a974eb19df884630edb8c65909941", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/078a6231a78a974eb19df884630edb8c65909941/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d21acaf9b41ea2529b15d5efd06266e924c0496", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d21acaf9b41ea2529b15d5efd06266e924c0496", "html_url": "https://github.com/rust-lang/rust/commit/9d21acaf9b41ea2529b15d5efd06266e924c0496"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "27702e2e59aefdac347ba4fe00f2f61094b6bebc", "filename": "src/libstd/memchr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/078a6231a78a974eb19df884630edb8c65909941/src%2Flibstd%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/078a6231a78a974eb19df884630edb8c65909941/src%2Flibstd%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmemchr.rs?ref=078a6231a78a974eb19df884630edb8c65909941", "patch": "@@ -98,7 +98,7 @@ pub fn memrchr(needle: u8, haystack: &[u8]) -> Option<usize> {\n \n     #[cfg(not(target_os = \"linux\"))]\n     fn memrchr_specific(needle: u8, haystack: &[u8]) -> Option<usize> {\n-        haystack.iter().rposition(|&b| b == needle)\n+        fallback::memrchr(needle, haystack)\n     }\n \n     memrchr_specific(needle, haystack)"}]}