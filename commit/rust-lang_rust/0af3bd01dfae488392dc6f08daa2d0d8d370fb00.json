{"sha": "0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZjNiZDAxZGZhZTQ4ODM5MmRjNmYwOGRhYTJkMGQ4ZDM3MGZiMDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-02T10:34:15Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-02T10:34:15Z"}, "message": "Read: adjust a FIXME reference", "tree": {"sha": "a01d6170230bb4dc9bcbb46377f8a1194109368c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a01d6170230bb4dc9bcbb46377f8a1194109368c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "html_url": "https://github.com/rust-lang/rust/commit/0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0af3bd01dfae488392dc6f08daa2d0d8d370fb00/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e88e908e66cd1e6e30d789b37bcd774951d01856", "url": "https://api.github.com/repos/rust-lang/rust/commits/e88e908e66cd1e6e30d789b37bcd774951d01856", "html_url": "https://github.com/rust-lang/rust/commit/e88e908e66cd1e6e30d789b37bcd774951d01856"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "44d2937ee1bf2a1f5bba58c5b60b4fd47563a760", "filename": "library/std/src/io/util.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0af3bd01dfae488392dc6f08daa2d0d8d370fb00/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0af3bd01dfae488392dc6f08daa2d0d8d370fb00/library%2Fstd%2Fsrc%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Futil.rs?ref=0af3bd01dfae488392dc6f08daa2d0d8d370fb00", "patch": "@@ -52,11 +52,14 @@ where\n     W: Write,\n {\n     let mut buf = MaybeUninit::<[u8; super::DEFAULT_BUF_SIZE]>::uninit();\n-    // FIXME(#76092): This is calling `get_mut` and `get_ref` on an uninitialized\n-    // `MaybeUninit`. Revisit this once we decided whether that is valid or not.\n-    // This is still technically undefined behavior due to creating a reference\n-    // to uninitialized data, but within libstd we can rely on more guarantees\n-    // than if this code were in an external lib.\n+    // FIXME: #42788\n+    //\n+    //   - This creates a (mut) reference to a slice of\n+    //     _uninitialized_ integers, which is **undefined behavior**\n+    //\n+    //   - Only the standard library gets to soundly \"ignore\" this,\n+    //     based on its privileged knowledge of unstable rustc\n+    //     internals;\n     unsafe {\n         reader.initializer().initialize(buf.assume_init_mut());\n     }"}]}