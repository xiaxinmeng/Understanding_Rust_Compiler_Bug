{"sha": "aafddd2a8ad94b1095b790d34d1f66539430d9f8", "node_id": "C_kwDOAAsO6NoAKGFhZmRkZDJhOGFkOTRiMTA5NWI3OTBkMzRkMWY2NjUzOTQzMGQ5Zjg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-06-23T21:39:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-23T21:39:15Z"}, "message": "Rollup merge of #98388 - rosehuds:master, r=davidtwco\n\nimplement `iter_projections` function on `PlaceRef`\n\nthis makes the api more flexible. the original function now calls the PlaceRef\nversion to avoid duplicating the code.", "tree": {"sha": "569760535f58de530875019379864fb0fb34bc98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/569760535f58de530875019379864fb0fb34bc98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aafddd2a8ad94b1095b790d34d1f66539430d9f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJitN2DCRBK7hj4Ov3rIwAAAosIAKXVhY1QP+SLdJaCds99COY9\n+8FPXZTNm3osHmnc9FXjOsLp7XpGBBNgDUTnaVnqErq6KaUASKtNwrq2R/ZWMqTL\n/QKK96PEzFpwuNTsuEQ4s0V0QfPWL2xp8THQ7celDra/Ev9KNaE/Yvs6swVTkzlI\nT9kx6a4BOwe3FD6nzVTXHbjc6uWBTFD2o6Ii044Mj6Ic5c5Z4nQf4EAUNGGBX1MX\n6R+vddKHQCEY/K01Cg8kwl+6v8xpxTiBy/i+CYvr7BDovTms0ynRvHLs1aSIGByJ\nDQ1SXNwO3bZVawqqOtGqfjNzykv3cVC/faEqTMksUp5oxGxeXTB9OcXj+6S5ucc=\n=6n1t\n-----END PGP SIGNATURE-----\n", "payload": "tree 569760535f58de530875019379864fb0fb34bc98\nparent 667a54623dde8c96255bf4817cd7210a0a9035f2\nparent 53481a5a8fde83ed1a5d7e8302be028a4c7d8da5\nauthor Michael Goulet <michael@errs.io> 1656020355 -0700\ncommitter GitHub <noreply@github.com> 1656020355 -0700\n\nRollup merge of #98388 - rosehuds:master, r=davidtwco\n\nimplement `iter_projections` function on `PlaceRef`\n\nthis makes the api more flexible. the original function now calls the PlaceRef\nversion to avoid duplicating the code.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aafddd2a8ad94b1095b790d34d1f66539430d9f8", "html_url": "https://github.com/rust-lang/rust/commit/aafddd2a8ad94b1095b790d34d1f66539430d9f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aafddd2a8ad94b1095b790d34d1f66539430d9f8/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "667a54623dde8c96255bf4817cd7210a0a9035f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/667a54623dde8c96255bf4817cd7210a0a9035f2", "html_url": "https://github.com/rust-lang/rust/commit/667a54623dde8c96255bf4817cd7210a0a9035f2"}, {"sha": "53481a5a8fde83ed1a5d7e8302be028a4c7d8da5", "url": "https://api.github.com/repos/rust-lang/rust/commits/53481a5a8fde83ed1a5d7e8302be028a4c7d8da5", "html_url": "https://github.com/rust-lang/rust/commit/53481a5a8fde83ed1a5d7e8302be028a4c7d8da5"}], "stats": {"total": 22, "additions": 18, "deletions": 4}, "files": [{"sha": "3f5b16d5ea5f7a9d7014d17075e4c109b29d3fce", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 18, "deletions": 4, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/aafddd2a8ad94b1095b790d34d1f66539430d9f8/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aafddd2a8ad94b1095b790d34d1f66539430d9f8/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=aafddd2a8ad94b1095b790d34d1f66539430d9f8", "patch": "@@ -2145,10 +2145,7 @@ impl<'tcx> Place<'tcx> {\n     pub fn iter_projections(\n         self,\n     ) -> impl Iterator<Item = (PlaceRef<'tcx>, PlaceElem<'tcx>)> + DoubleEndedIterator {\n-        self.projection.iter().enumerate().map(move |(i, proj)| {\n-            let base = PlaceRef { local: self.local, projection: &self.projection[..i] };\n-            (base, proj)\n-        })\n+        self.as_ref().iter_projections()\n     }\n \n     /// Generates a new place by appending `more_projections` to the existing ones\n@@ -2208,6 +2205,23 @@ impl<'tcx> PlaceRef<'tcx> {\n             None\n         }\n     }\n+\n+    /// Iterate over the projections in evaluation order, i.e., the first element is the base with\n+    /// its projection and then subsequently more projections are added.\n+    /// As a concrete example, given the place a.b.c, this would yield:\n+    /// - (a, .b)\n+    /// - (a.b, .c)\n+    ///\n+    /// Given a place without projections, the iterator is empty.\n+    #[inline]\n+    pub fn iter_projections(\n+        self,\n+    ) -> impl Iterator<Item = (PlaceRef<'tcx>, PlaceElem<'tcx>)> + DoubleEndedIterator {\n+        self.projection.iter().enumerate().map(move |(i, proj)| {\n+            let base = PlaceRef { local: self.local, projection: &self.projection[..i] };\n+            (base, *proj)\n+        })\n+    }\n }\n \n impl Debug for Place<'_> {"}]}