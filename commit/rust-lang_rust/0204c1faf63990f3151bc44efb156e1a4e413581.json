{"sha": "0204c1faf63990f3151bc44efb156e1a4e413581", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyMDRjMWZhZjYzOTkwZjMxNTFiYzQ0ZWZiMTU2ZTFhNGU0MTM1ODE=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-12-27T00:32:25Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-12-27T00:32:25Z"}, "message": "Remove some `ignore`s from the guide.", "tree": {"sha": "322f58027cb6babaa0690335612e97f55ad57b22", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/322f58027cb6babaa0690335612e97f55ad57b22"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0204c1faf63990f3151bc44efb156e1a4e413581", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0204c1faf63990f3151bc44efb156e1a4e413581", "html_url": "https://github.com/rust-lang/rust/commit/0204c1faf63990f3151bc44efb156e1a4e413581", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0204c1faf63990f3151bc44efb156e1a4e413581/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c43efee6def9a4a4e943feef0236d3e17b3f581d", "url": "https://api.github.com/repos/rust-lang/rust/commits/c43efee6def9a4a4e943feef0236d3e17b3f581d", "html_url": "https://github.com/rust-lang/rust/commit/c43efee6def9a4a4e943feef0236d3e17b3f581d"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "bb6fcea32acb982a1c88c406c0e022e54c963dcc", "filename": "src/doc/guide.md", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0204c1faf63990f3151bc44efb156e1a4e413581/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/0204c1faf63990f3151bc44efb156e1a4e413581/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=0204c1faf63990f3151bc44efb156e1a4e413581", "patch": "@@ -482,7 +482,7 @@ src/main.rs:2     let x;\n \n Giving it a type will compile, though:\n \n-```{ignore}\n+```{rust}\n let x: int;\n ```\n \n@@ -1044,7 +1044,9 @@ struct Point(int, int, int);\n \n These two will not be equal, even if they have the same values:\n \n-```{rust,ignore}\n+```{rust}\n+# struct Color(int, int, int);\n+# struct Point(int, int, int);\n let black  = Color(0, 0, 0);\n let origin = Point(0, 0, 0);\n ```\n@@ -4290,7 +4292,9 @@ let square = |x: int| { x * x };\n We've seen this before. We make a closure that takes an integer, and returns\n its square.\n \n-```{rust,ignore}\n+```{rust}\n+# fn twice(x: int, f: |int| -> int) -> int { f(x) + f(x) }\n+# let square = |x: int| { x * x };\n twice(5i, square); // evaluates to 50\n ```\n "}]}