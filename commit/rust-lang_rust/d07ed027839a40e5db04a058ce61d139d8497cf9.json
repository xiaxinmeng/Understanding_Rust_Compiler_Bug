{"sha": "d07ed027839a40e5db04a058ce61d139d8497cf9", "node_id": "C_kwDOAAsO6NoAKGQwN2VkMDI3ODM5YTQwZTVkYjA0YTA1OGNlNjFkMTM5ZDg0OTdjZjk", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T14:47:49Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-07-20T21:12:08Z"}, "message": "various nits from review", "tree": {"sha": "f78e216e9840a2d73b0b45f807d2abd2fc0a57d7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f78e216e9840a2d73b0b45f807d2abd2fc0a57d7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d07ed027839a40e5db04a058ce61d139d8497cf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d07ed027839a40e5db04a058ce61d139d8497cf9", "html_url": "https://github.com/rust-lang/rust/commit/d07ed027839a40e5db04a058ce61d139d8497cf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d07ed027839a40e5db04a058ce61d139d8497cf9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8feed7d2713c25a5ef216d185eaa73044cb9318", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8feed7d2713c25a5ef216d185eaa73044cb9318", "html_url": "https://github.com/rust-lang/rust/commit/f8feed7d2713c25a5ef216d185eaa73044cb9318"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "94a2fb2fbddc298da7efde1311b555785bcda11a", "filename": "src/constant.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d07ed027839a40e5db04a058ce61d139d8497cf9/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d07ed027839a40e5db04a058ce61d139d8497cf9/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=d07ed027839a40e5db04a058ce61d139d8497cf9", "patch": "@@ -369,7 +369,6 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut dyn Module, cx: &mut Constant\n     while let Some(todo_item) = cx.todo.pop() {\n         let (data_id, alloc, section_name) = match todo_item {\n             TodoItem::Alloc(alloc_id) => {\n-                //println!(\"alloc_id {}\", alloc_id);\n                 let alloc = match tcx.global_alloc(alloc_id) {\n                     GlobalAlloc::Memory(alloc) => alloc,\n                     GlobalAlloc::Function(_) | GlobalAlloc::Static(_) | GlobalAlloc::VTable(..) => {"}]}