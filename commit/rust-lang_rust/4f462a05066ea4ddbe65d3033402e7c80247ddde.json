{"sha": "4f462a05066ea4ddbe65d3033402e7c80247ddde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNDYyYTA1MDY2ZWE0ZGRiZTY1ZDMwMzM0MDJlN2M4MDI0N2RkZGU=", "commit": {"author": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2013-12-31T21:14:58Z"}, "committer": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2013-12-31T21:14:58Z"}, "message": "Added Freeze trait to CowArc", "tree": {"sha": "cb87ed330251d2dfcaa592b7d9e91becc911a37e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb87ed330251d2dfcaa592b7d9e91becc911a37e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f462a05066ea4ddbe65d3033402e7c80247ddde", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f462a05066ea4ddbe65d3033402e7c80247ddde", "html_url": "https://github.com/rust-lang/rust/commit/4f462a05066ea4ddbe65d3033402e7c80247ddde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f462a05066ea4ddbe65d3033402e7c80247ddde/comments", "author": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a8d59ded67dfaa589112ceb8a8e031bc575249", "url": "https://api.github.com/repos/rust-lang/rust/commits/06a8d59ded67dfaa589112ceb8a8e031bc575249", "html_url": "https://github.com/rust-lang/rust/commit/06a8d59ded67dfaa589112ceb8a8e031bc575249"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "9cb33d3c65a9456ab1161916c06ee6e9a48f84b2", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4f462a05066ea4ddbe65d3033402e7c80247ddde/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f462a05066ea4ddbe65d3033402e7c80247ddde/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=4f462a05066ea4ddbe65d3033402e7c80247ddde", "patch": "@@ -559,7 +559,7 @@ pub struct CowArc<T> { priv x: UnsafeArc<T> }\n /// mutation of the contents if there is only a single reference to\n /// the data. If there are multiple references the data is automatically\n /// cloned and the task modifies the cloned data in place of the shared data.\n-impl<T:Clone+Send> CowArc<T> {\n+impl<T:Clone+Send+Freeze> CowArc<T> {\n     /// Create a copy-on-write atomically reference counted wrapper\n     #[inline]\n     pub fn new(data: T) -> CowArc<T> {\n@@ -583,7 +583,7 @@ impl<T:Clone+Send> CowArc<T> {\n     }\n }\n \n-impl<T:Clone+Send> Clone for CowArc<T> {\n+impl<T:Clone+Send+Freeze> Clone for CowArc<T> {\n     /// Duplicate a Copy-on-write Arc. See arc::clone for more details.\n     #[inline]\n     fn clone(&self) -> CowArc<T> {"}]}