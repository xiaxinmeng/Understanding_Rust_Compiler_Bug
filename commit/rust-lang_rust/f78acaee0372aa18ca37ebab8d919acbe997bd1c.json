{"sha": "f78acaee0372aa18ca37ebab8d919acbe997bd1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3OGFjYWVlMDM3MmFhMThjYTM3ZWJhYjhkOTE5YWNiZTk5N2JkMWM=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-07-11T03:02:10Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2021-09-12T02:23:08Z"}, "message": "downgrade some logging", "tree": {"sha": "740593a26a4388818295cd0eadeb05be1227798d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/740593a26a4388818295cd0eadeb05be1227798d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f78acaee0372aa18ca37ebab8d919acbe997bd1c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f78acaee0372aa18ca37ebab8d919acbe997bd1c", "html_url": "https://github.com/rust-lang/rust/commit/f78acaee0372aa18ca37ebab8d919acbe997bd1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f78acaee0372aa18ca37ebab8d919acbe997bd1c/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69fe39e8a8e6a66d97836e3068a4b1f183c79ea6", "url": "https://api.github.com/repos/rust-lang/rust/commits/69fe39e8a8e6a66d97836e3068a4b1f183c79ea6", "html_url": "https://github.com/rust-lang/rust/commit/69fe39e8a8e6a66d97836e3068a4b1f183c79ea6"}], "stats": {"total": 21, "additions": 12, "deletions": 9}, "files": [{"sha": "15d4563ad7461b7d083439bb726cd3a8b0289129", "filename": "src/librustdoc/clean/blanket_impl.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fblanket_impl.rs?ref=f78acaee0372aa18ca37ebab8d919acbe997bd1c", "patch": "@@ -17,7 +17,7 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n         let param_env = self.cx.tcx.param_env(item_def_id);\n         let ty = self.cx.tcx.type_of(item_def_id);\n \n-        debug!(\"get_blanket_impls({:?})\", ty);\n+        trace!(\"get_blanket_impls({:?})\", ty);\n         let mut impls = Vec::new();\n         for &trait_def_id in self.cx.tcx.all_traits(()).iter() {\n             if !self.cx.cache.access_levels.is_public(trait_def_id)\n@@ -28,9 +28,10 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n             // NOTE: doesn't use `for_each_relevant_impl` to avoid looking at anything besides blanket impls\n             let trait_impls = self.cx.tcx.trait_impls_of(trait_def_id);\n             for &impl_def_id in trait_impls.blanket_impls() {\n-                debug!(\n+                trace!(\n                     \"get_blanket_impls: Considering impl for trait '{:?}' {:?}\",\n-                    trait_def_id, impl_def_id\n+                    trait_def_id,\n+                    impl_def_id\n                 );\n                 let trait_ref = self.cx.tcx.impl_trait_ref(impl_def_id).unwrap();\n                 let is_param = matches!(trait_ref.self_ty().kind(), ty::Param(_));\n@@ -50,9 +51,11 @@ impl<'a, 'tcx> BlanketImplFinder<'a, 'tcx> {\n                         // FIXME(eddyb) ignoring `obligations` might cause false positives.\n                         drop(obligations);\n \n-                        debug!(\n+                        trace!(\n                             \"invoking predicate_may_hold: param_env={:?}, trait_ref={:?}, ty={:?}\",\n-                            param_env, trait_ref, ty\n+                            param_env,\n+                            trait_ref,\n+                            ty\n                         );\n                         let predicates = self\n                             .cx"}, {"sha": "40b0175bb15959186c3572827291e8966873c9c3", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=f78acaee0372aa18ca37ebab8d919acbe997bd1c", "patch": "@@ -447,9 +447,9 @@ crate fn build_impl(\n     }\n \n     let (merged_attrs, cfg) = merge_attrs(cx, parent_module.into(), load_attrs(cx, did), attrs);\n-    debug!(\"merged_attrs={:?}\", merged_attrs);\n+    trace!(\"merged_attrs={:?}\", merged_attrs);\n \n-    debug!(\"build_impl: impl {:?} for {:?}\", trait_.def_id(), for_.def_id());\n+    trace!(\"build_impl: impl {:?} for {:?}\", trait_.def_id(), for_.def_id());\n     ret.push(clean::Item::from_def_id_and_attrs_and_parts(\n         did,\n         None,"}, {"sha": "6ffdf1df6014affbede6201a5b603a8eba7be42b", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f78acaee0372aa18ca37ebab8d919acbe997bd1c", "patch": "@@ -1406,7 +1406,7 @@ fn normalize(cx: &mut DocContext<'tcx>, ty: Ty<'_>) -> Option<Ty<'tcx>> {\n \n impl<'tcx> Clean<Type> for Ty<'tcx> {\n     fn clean(&self, cx: &mut DocContext<'_>) -> Type {\n-        debug!(\"cleaning type: {:?}\", self);\n+        trace!(\"cleaning type: {:?}\", self);\n         let ty = normalize(cx, self).unwrap_or(self);\n         match *ty.kind() {\n             ty::Never => Never,"}, {"sha": "cce0006f2be64aa29efcfc9376bb238a2cd00165", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f78acaee0372aa18ca37ebab8d919acbe997bd1c/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=f78acaee0372aa18ca37ebab8d919acbe997bd1c", "patch": "@@ -742,7 +742,7 @@ fn fmt_type<'cx>(\n     use_absolute: bool,\n     cx: &'cx Context<'_>,\n ) -> fmt::Result {\n-    debug!(\"fmt_type(t = {:?})\", t);\n+    trace!(\"fmt_type(t = {:?})\", t);\n \n     match *t {\n         clean::Generic(name) => write!(f, \"{}\", name),"}]}