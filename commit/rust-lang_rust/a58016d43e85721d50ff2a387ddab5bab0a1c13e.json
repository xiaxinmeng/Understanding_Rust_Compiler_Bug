{"sha": "a58016d43e85721d50ff2a387ddab5bab0a1c13e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ODAxNmQ0M2U4NTcyMWQ1MGZmMmEzODdkZGFiNWJhYjBhMWMxM2U=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-05T17:37:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-11-05T17:37:32Z"}, "message": "rustboot: Describe the cycle when reporting a cyclic import error", "tree": {"sha": "bc711f25159533885fb066db83faefdb477ecf26", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc711f25159533885fb066db83faefdb477ecf26"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a58016d43e85721d50ff2a387ddab5bab0a1c13e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a58016d43e85721d50ff2a387ddab5bab0a1c13e", "html_url": "https://github.com/rust-lang/rust/commit/a58016d43e85721d50ff2a387ddab5bab0a1c13e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a58016d43e85721d50ff2a387ddab5bab0a1c13e/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d214b4df3013a53e50d778fa921ed99bc498d02", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d214b4df3013a53e50d778fa921ed99bc498d02", "html_url": "https://github.com/rust-lang/rust/commit/1d214b4df3013a53e50d778fa921ed99bc498d02"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "12f973c1787aa6b92419930dad913026194cf75a", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a58016d43e85721d50ff2a387ddab5bab0a1c13e/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/a58016d43e85721d50ff2a387ddab5bab0a1c13e/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=a58016d43e85721d50ff2a387ddab5bab0a1c13e", "patch": "@@ -2001,7 +2001,16 @@ let rec project_ident_from_items\n \n   let lchk =\n     if List.mem (scope_id, ident) lchk\n-    then err (Some scope_id) \"cyclic import for ident %s\" ident\n+    then\n+      let string_of_loop_check (id, ident) =\n+        match Session.get_span cx.ctxt_sess id with\n+            Some span -> ident ^ \" @ \" ^ (Session.string_of_span span)\n+          | None -> ident\n+      in\n+      let lchk' = (scope_id, ident)::lchk in\n+      let lchk_strs = List.map string_of_loop_check (List.rev lchk') in\n+      err (Some scope_id) \"cyclic import for ident %s (%s)\" ident\n+        (String.concat \" -> \" lchk_strs)\n     else (scope_id, ident)::lchk\n   in\n "}]}