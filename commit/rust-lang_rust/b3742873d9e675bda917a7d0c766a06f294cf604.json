{"sha": "b3742873d9e675bda917a7d0c766a06f294cf604", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzNzQyODczZDllNjc1YmRhOTE3YTdkMGM3NjZhMDZmMjk0Y2Y2MDQ=", "commit": {"author": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-07T15:10:03Z"}, "committer": {"name": "Igor Matuszewski", "email": "Xanewok@gmail.com", "date": "2019-03-16T21:41:13Z"}, "message": "Simplify trait resolution fragment", "tree": {"sha": "a8f83109758a504ec0feaa03e31dd712bbacac66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8f83109758a504ec0feaa03e31dd712bbacac66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3742873d9e675bda917a7d0c766a06f294cf604", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3742873d9e675bda917a7d0c766a06f294cf604", "html_url": "https://github.com/rust-lang/rust/commit/b3742873d9e675bda917a7d0c766a06f294cf604", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3742873d9e675bda917a7d0c766a06f294cf604/comments", "author": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xanewok", "id": 3093213, "node_id": "MDQ6VXNlcjMwOTMyMTM=", "avatar_url": "https://avatars.githubusercontent.com/u/3093213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xanewok", "html_url": "https://github.com/Xanewok", "followers_url": "https://api.github.com/users/Xanewok/followers", "following_url": "https://api.github.com/users/Xanewok/following{/other_user}", "gists_url": "https://api.github.com/users/Xanewok/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xanewok/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xanewok/subscriptions", "organizations_url": "https://api.github.com/users/Xanewok/orgs", "repos_url": "https://api.github.com/users/Xanewok/repos", "events_url": "https://api.github.com/users/Xanewok/events{/privacy}", "received_events_url": "https://api.github.com/users/Xanewok/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e47c371fdea2bc898f4fed210782047937af208", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e47c371fdea2bc898f4fed210782047937af208", "html_url": "https://github.com/rust-lang/rust/commit/0e47c371fdea2bc898f4fed210782047937af208"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "e682ca0551b04a818688d513e17e3aedb69b14f7", "filename": "crates/ra_assists/src/add_missing_impl_members.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b3742873d9e675bda917a7d0c766a06f294cf604/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3742873d9e675bda917a7d0c766a06f294cf604/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fadd_missing_impl_members.rs?ref=b3742873d9e675bda917a7d0c766a06f294cf604", "patch": "@@ -49,13 +49,10 @@ pub(crate) fn add_missing_impl_members(mut ctx: AssistCtx<impl HirDatabase>) ->\n     }\n \n     let trait_def = {\n-        let db = ctx.db;\n-        // TODO: Can we get the position of cursor itself rather than supplied range?\n-        let range = ctx.frange;\n-        let position = FilePosition { file_id: range.file_id, offset: range.range.start() };\n-        let resolver = hir::source_binder::resolver_for_position(db, position);\n+        let position = FilePosition { file_id: ctx.frange.file_id, offset: node.range().end() };\n+        let resolver = hir::source_binder::resolver_for_position(ctx.db, position);\n \n-        resolve_target_trait_def(db, &resolver, impl_node)?\n+        resolve_target_trait_def(ctx.db, &resolver, impl_node)?\n     };\n \n     let fn_def_opt = |kind| if let ImplItemKind::FnDef(def) = kind { Some(def) } else { None };"}]}