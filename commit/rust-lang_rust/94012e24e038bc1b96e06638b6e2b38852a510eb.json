{"sha": "94012e24e038bc1b96e06638b6e2b38852a510eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MDEyZTI0ZTAzOGJjMWI5NmUwNjYzOGI2ZTJiMzg4NTJhNTEwZWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-05T20:00:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-05T20:00:04Z"}, "message": "Merge #7884\n\n7884: Simplify TokenStream FromStr r=edwin0cheng a=edwin0cheng\n\nMake sure `FromStr` ignore all `TokenMap` in all cases.\r\n\r\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "41a38fc808f26ecc9fa7b62c2466869d258e4fd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41a38fc808f26ecc9fa7b62c2466869d258e4fd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94012e24e038bc1b96e06638b6e2b38852a510eb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQo3ECRBK7hj4Ov3rIwAAdHIIAFbyfYKwiuoK/859KXCScW8i\nFOToqbUlE9M++lgABo/f22VFU+grftROpNFdcjck6yGAChg9+Cz/b1/BI/rPziSO\n3yEbDt+sPM5Mjm8oospk+NYQsyhOegc71KKxCgz49OFQWDseUuK+tTPZJuVq4GHk\nG/TEzXo3KSuX5X0dvv4FDXsxWXw4/vLonaSVkM+/cEAv2liiTMFUAfVDjLvpQfJu\nq/X4EfJXBrVYd6G6afeVdvRs/9su/2tiWTLThv+CjpdvLVuvpncXuokc/13HHm0j\nBG1p1u6HjpVlEy7AGkrecrP4+vMv67KDvkHc2DrzINlksomYT7Nj8z9cVoTCh2k=\n=/uQ/\n-----END PGP SIGNATURE-----\n", "payload": "tree 41a38fc808f26ecc9fa7b62c2466869d258e4fd1\nparent 7199d5b56d47378bb09aab1be718c29ae0284369\nparent 83230b270455c82636147ee631c425fefdce26ff\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614974404 +0000\ncommitter GitHub <noreply@github.com> 1614974404 +0000\n\nMerge #7884\n\n7884: Simplify TokenStream FromStr r=edwin0cheng a=edwin0cheng\n\nMake sure `FromStr` ignore all `TokenMap` in all cases.\r\n\r\nbors r+\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94012e24e038bc1b96e06638b6e2b38852a510eb", "html_url": "https://github.com/rust-lang/rust/commit/94012e24e038bc1b96e06638b6e2b38852a510eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94012e24e038bc1b96e06638b6e2b38852a510eb/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7199d5b56d47378bb09aab1be718c29ae0284369", "url": "https://api.github.com/repos/rust-lang/rust/commits/7199d5b56d47378bb09aab1be718c29ae0284369", "html_url": "https://github.com/rust-lang/rust/commit/7199d5b56d47378bb09aab1be718c29ae0284369"}, {"sha": "83230b270455c82636147ee631c425fefdce26ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/83230b270455c82636147ee631c425fefdce26ff", "html_url": "https://github.com/rust-lang/rust/commit/83230b270455c82636147ee631c425fefdce26ff"}], "stats": {"total": 82, "additions": 43, "deletions": 39}, "files": [{"sha": "14c853c7752af973223f79851a936a9dea9a151e", "filename": "crates/proc_macro_srv/src/rustc_server.rs", "status": "modified", "additions": 42, "deletions": 38, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/94012e24e038bc1b96e06638b6e2b38852a510eb/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94012e24e038bc1b96e06638b6e2b38852a510eb/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Frustc_server.rs?ref=94012e24e038bc1b96e06638b6e2b38852a510eb", "patch": "@@ -184,6 +184,7 @@ pub mod token_stream {\n             let (subtree, _token_map) =\n                 mbe::parse_to_token_tree(src).ok_or(\"Failed to parse from mbe\")?;\n \n+            let subtree = subtree_replace_token_ids_with_unspecified(subtree);\n             Ok(TokenStream { subtree })\n         }\n     }\n@@ -226,6 +227,44 @@ pub mod token_stream {\n             }\n         }\n     }\n+\n+    fn subtree_replace_token_ids_with_unspecified(subtree: tt::Subtree) -> tt::Subtree {\n+        tt::Subtree {\n+            delimiter: subtree\n+                .delimiter\n+                .map(|d| tt::Delimiter { id: tt::TokenId::unspecified(), ..d }),\n+            token_trees: subtree\n+                .token_trees\n+                .into_iter()\n+                .map(|t| token_tree_replace_token_ids_with_unspecified(t))\n+                .collect(),\n+        }\n+    }\n+\n+    fn token_tree_replace_token_ids_with_unspecified(tt: tt::TokenTree) -> tt::TokenTree {\n+        match tt {\n+            tt::TokenTree::Leaf(leaf) => {\n+                tt::TokenTree::Leaf(leaf_replace_token_ids_with_unspecified(leaf))\n+            }\n+            tt::TokenTree::Subtree(subtree) => {\n+                tt::TokenTree::Subtree(subtree_replace_token_ids_with_unspecified(subtree))\n+            }\n+        }\n+    }\n+\n+    fn leaf_replace_token_ids_with_unspecified(leaf: tt::Leaf) -> tt::Leaf {\n+        match leaf {\n+            tt::Leaf::Literal(lit) => {\n+                tt::Leaf::Literal(tt::Literal { id: tt::TokenId::unspecified(), ..lit })\n+            }\n+            tt::Leaf::Punct(punct) => {\n+                tt::Leaf::Punct(tt::Punct { id: tt::TokenId::unspecified(), ..punct })\n+            }\n+            tt::Leaf::Ident(ident) => {\n+                tt::Leaf::Ident(tt::Ident { id: tt::TokenId::unspecified(), ..ident })\n+            }\n+        }\n+    }\n }\n \n impl TokenStreamBuilder {\n@@ -277,42 +316,6 @@ impl server::FreeFunctions for Rustc {\n     }\n }\n \n-fn subtree_replace_token_ids_with_unspecified(subtree: tt::Subtree) -> tt::Subtree {\n-    tt::Subtree {\n-        delimiter: subtree.delimiter.map(|d| tt::Delimiter { id: tt::TokenId::unspecified(), ..d }),\n-        token_trees: subtree\n-            .token_trees\n-            .into_iter()\n-            .map(|t| token_tree_replace_token_ids_with_unspecified(t))\n-            .collect(),\n-    }\n-}\n-\n-fn token_tree_replace_token_ids_with_unspecified(tt: tt::TokenTree) -> tt::TokenTree {\n-    match tt {\n-        tt::TokenTree::Leaf(leaf) => {\n-            tt::TokenTree::Leaf(leaf_replace_token_ids_with_unspecified(leaf))\n-        }\n-        tt::TokenTree::Subtree(subtree) => {\n-            tt::TokenTree::Subtree(subtree_replace_token_ids_with_unspecified(subtree))\n-        }\n-    }\n-}\n-\n-fn leaf_replace_token_ids_with_unspecified(leaf: tt::Leaf) -> tt::Leaf {\n-    match leaf {\n-        tt::Leaf::Literal(lit) => {\n-            tt::Leaf::Literal(tt::Literal { id: tt::TokenId::unspecified(), ..lit })\n-        }\n-        tt::Leaf::Punct(punct) => {\n-            tt::Leaf::Punct(tt::Punct { id: tt::TokenId::unspecified(), ..punct })\n-        }\n-        tt::Leaf::Ident(ident) => {\n-            tt::Leaf::Ident(tt::Ident { id: tt::TokenId::unspecified(), ..ident })\n-        }\n-    }\n-}\n-\n impl server::TokenStream for Rustc {\n     fn new(&mut self) -> Self::TokenStream {\n         Self::TokenStream::new()\n@@ -322,8 +325,9 @@ impl server::TokenStream for Rustc {\n         stream.is_empty()\n     }\n     fn from_str(&mut self, src: &str) -> Self::TokenStream {\n-        let (subtree, _) = mbe::parse_to_token_tree(src).expect(\"cannot parse string\");\n-        TokenStream::with_subtree(subtree_replace_token_ids_with_unspecified(subtree))\n+        use std::str::FromStr;\n+\n+        Self::TokenStream::from_str(src).expect(\"cannot parse string\")\n     }\n     fn to_string(&mut self, stream: &Self::TokenStream) -> String {\n         stream.to_string()"}, {"sha": "fa581f110202ab0b40fe1f0f892aae509ec06f46", "filename": "crates/proc_macro_srv/src/tests/fixtures/test_serialize_proc_macro.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/94012e24e038bc1b96e06638b6e2b38852a510eb/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Ffixtures%2Ftest_serialize_proc_macro.txt", "raw_url": "https://github.com/rust-lang/rust/raw/94012e24e038bc1b96e06638b6e2b38852a510eb/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Ffixtures%2Ftest_serialize_proc_macro.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_srv%2Fsrc%2Ftests%2Ffixtures%2Ftest_serialize_proc_macro.txt?ref=94012e24e038bc1b96e06638b6e2b38852a510eb", "patch": "@@ -101,7 +101,7 @@ SUBTREE $\n     PUNCH   : [alone] 4294967295\n     IDENT   Serialize 4294967295\n     IDENT   for 4294967295\n-    IDENT   Foo 1\n+    IDENT   Foo 4294967295\n     SUBTREE {} 4294967295\n       IDENT   fn 4294967295\n       IDENT   serialize 4294967295"}]}