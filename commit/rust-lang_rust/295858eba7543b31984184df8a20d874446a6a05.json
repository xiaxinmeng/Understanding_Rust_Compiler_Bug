{"sha": "295858eba7543b31984184df8a20d874446a6a05", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NTg1OGViYTc1NDNiMzE5ODQxODRkZjhhMjBkODc0NDQ2YTZhMDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-10T01:07:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-10T01:07:23Z"}, "message": "Auto merge of #52100 - nielx:fix/rust_driver-stacklimit, r=cramertj\n\nHaiku: work around the lack of setrlimit\n\nThe default Unix codepath fails, because Haiku does not implement\nsetrlimit for stack size. Thus we create an additional path.\n\nBy default, Haiku has the desired 16 MB stack, therefore in general\nwe do not have to spawn a new thread. The code has been written in\nsuch a way that any changes in Haiku or in Rust will be adapted to.", "tree": {"sha": "745ded72f1c97641e6658e7fbe6ec52cc122013a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/745ded72f1c97641e6658e7fbe6ec52cc122013a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/295858eba7543b31984184df8a20d874446a6a05", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/295858eba7543b31984184df8a20d874446a6a05", "html_url": "https://github.com/rust-lang/rust/commit/295858eba7543b31984184df8a20d874446a6a05", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/295858eba7543b31984184df8a20d874446a6a05/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b525916ee511a54d4e79dff8d854fc63ac8fff7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b525916ee511a54d4e79dff8d854fc63ac8fff7", "html_url": "https://github.com/rust-lang/rust/commit/5b525916ee511a54d4e79dff8d854fc63ac8fff7"}, {"sha": "90e32e2ac67a3bfa5388c49def90712385f504cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/90e32e2ac67a3bfa5388c49def90712385f504cb", "html_url": "https://github.com/rust-lang/rust/commit/90e32e2ac67a3bfa5388c49def90712385f504cb"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "1078dadce25f596d1d1b6efc26c359d8cad0d8de", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/295858eba7543b31984184df8a20d874446a6a05/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/295858eba7543b31984184df8a20d874446a6a05/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=295858eba7543b31984184df8a20d874446a6a05", "patch": "@@ -1493,7 +1493,7 @@ pub fn in_rustc_thread<F, R>(f: F) -> Result<R, Box<Any + Send>>\n     // Temporarily have stack size set to 16MB to deal with nom-using crates failing\n     const STACK_SIZE: usize = 16 * 1024 * 1024; // 16MB\n \n-    #[cfg(unix)]\n+    #[cfg(all(unix,not(target_os = \"haiku\")))]\n     let spawn_thread = unsafe {\n         // Fetch the current resource limits\n         let mut rlim = libc::rlimit {\n@@ -1525,6 +1525,26 @@ pub fn in_rustc_thread<F, R>(f: F) -> Result<R, Box<Any + Send>>\n     #[cfg(windows)]\n     let spawn_thread = false;\n \n+    #[cfg(target_os = \"haiku\")]\n+    let spawn_thread = unsafe {\n+        // Haiku does not have setrlimit implemented for the stack size.\n+        // By default it does have the 16 MB stack limit, but we check this in\n+        // case the minimum STACK_SIZE changes or Haiku's defaults change.\n+        let mut rlim = libc::rlimit {\n+            rlim_cur: 0,\n+            rlim_max: 0,\n+        };\n+        if libc::getrlimit(libc::RLIMIT_STACK, &mut rlim) != 0 {\n+            let err = io::Error::last_os_error();\n+            error!(\"in_rustc_thread: error calling getrlimit: {}\", err);\n+            true\n+        } else if rlim.rlim_cur >= STACK_SIZE {\n+            false\n+        } else {\n+            true\n+        }\n+    };\n+\n     #[cfg(not(any(windows,unix)))]\n     let spawn_thread = true;\n "}]}