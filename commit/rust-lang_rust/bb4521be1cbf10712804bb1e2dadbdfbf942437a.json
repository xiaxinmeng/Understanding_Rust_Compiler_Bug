{"sha": "bb4521be1cbf10712804bb1e2dadbdfbf942437a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiNDUyMWJlMWNiZjEwNzEyODA0YmIxZTJkYWRiZGZiZjk0MjQzN2E=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-27T15:22:53Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-27T15:51:59Z"}, "message": "Allow goto-definition to work for named fields in struct initializer\n\nNow goto definition should work when done on a named field in a struct\ninitializer.", "tree": {"sha": "9c1ab5b302d6d95c772b827d5a491fa0e331df92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c1ab5b302d6d95c772b827d5a491fa0e331df92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb4521be1cbf10712804bb1e2dadbdfbf942437a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4521be1cbf10712804bb1e2dadbdfbf942437a", "html_url": "https://github.com/rust-lang/rust/commit/bb4521be1cbf10712804bb1e2dadbdfbf942437a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb4521be1cbf10712804bb1e2dadbdfbf942437a/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2e2a6dd2fbeb4da16e602fa1902ab6bbd850b442", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e2a6dd2fbeb4da16e602fa1902ab6bbd850b442", "html_url": "https://github.com/rust-lang/rust/commit/2e2a6dd2fbeb4da16e602fa1902ab6bbd850b442"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "6fa430754780f0f89b10b4d269f62f669034d04b", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/bb4521be1cbf10712804bb1e2dadbdfbf942437a/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb4521be1cbf10712804bb1e2dadbdfbf942437a/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=bb4521be1cbf10712804bb1e2dadbdfbf942437a", "patch": "@@ -74,6 +74,30 @@ pub(crate) fn reference_definition(\n                 return Exact(NavigationTarget::from_field(db, field));\n             };\n         }\n+\n+        // It could also be a named field\n+        if let Some(field_expr) = name_ref.syntax().parent().and_then(ast::NamedField::cast) {\n+            tested_by!(goto_definition_works_for_named_fields);\n+\n+            let infer_result = function.infer(db);\n+            let syntax_mapping = function.body_syntax_mapping(db);\n+\n+            let struct_lit = field_expr.syntax().ancestors().find_map(ast::StructLit::cast);\n+\n+            if let Some(expr) = struct_lit.and_then(|lit| syntax_mapping.node_expr(lit.into())) {\n+                let ty = infer_result[expr].clone();\n+                if let hir::Ty::Adt { def_id, .. } = ty {\n+                    if let hir::AdtDef::Struct(s) = def_id {\n+                        let hir_path = hir::Path::from_name_ref(name_ref);\n+                        let hir_name = hir_path.as_ident().unwrap();\n+\n+                        if let Some(field) = s.field(db, hir_name) {\n+                            return Exact(NavigationTarget::from_field(db, field));\n+                        }\n+                    }\n+                }\n+            }\n+        }\n     }\n     // Try name resolution\n     let resolver = hir::source_binder::resolver_for_node(db, file_id, name_ref.syntax());\n@@ -255,6 +279,26 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn goto_definition_works_for_named_fields() {\n+        covers!(goto_definition_works_for_named_fields);\n+        check_goto(\n+            \"\n+            //- /lib.rs\n+            struct Foo {\n+                spam: u32,\n+            }\n+\n+            fn bar() -> Foo {\n+                Foo {\n+                    spam<|>: 0,\n+                }\n+            }\n+            \",\n+            \"spam NAMED_FIELD_DEF FileId(1) [17; 26) [17; 21)\",\n+        );\n+    }\n+\n     #[test]\n     fn goto_definition_works_when_used_on_definition_name_itself() {\n         check_goto("}, {"sha": "bcbe0d21b58a177fa0813cba70ed026eca148913", "filename": "crates/ra_ide_api/src/marks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bb4521be1cbf10712804bb1e2dadbdfbf942437a/crates%2Fra_ide_api%2Fsrc%2Fmarks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb4521be1cbf10712804bb1e2dadbdfbf942437a/crates%2Fra_ide_api%2Fsrc%2Fmarks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fmarks.rs?ref=bb4521be1cbf10712804bb1e2dadbdfbf942437a", "patch": "@@ -2,6 +2,7 @@ test_utils::marks!(\n     inserts_parens_for_function_calls\n     goto_definition_works_for_methods\n     goto_definition_works_for_fields\n+    goto_definition_works_for_named_fields\n     call_info_bad_offset\n     dont_complete_current_use\n );"}]}