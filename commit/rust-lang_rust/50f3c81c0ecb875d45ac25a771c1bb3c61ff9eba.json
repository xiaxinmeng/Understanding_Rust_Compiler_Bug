{"sha": "50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwZjNjODFjMGVjYjg3NWQ0NWFjMjVhNzcxYzFiYjNjNjFmZjllYmE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-15T16:55:56Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-16T06:11:47Z"}, "message": "Rollup merge of #58438 - cuviper:posix_spawn_file_actions_addchdir_np, r=alexcrichton\n\nUse posix_spawn_file_actions_addchdir_np when possible\n\nThis is a non-POSIX extension implemented in Solaris and in glibc 2.29.\nWith this we can still use `posix_spawn()` when `Command::current_dir()`\nhas been set, otherwise we fallback to `fork(); chdir(); exec()`.", "tree": {"sha": "8559a9a55a2fc5d09bcc1a005815e2c5454cdc08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8559a9a55a2fc5d09bcc1a005815e2c5454cdc08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlxnqaMACgkQ/vbIBR0O\nATxP5BAAkcpXfuwptBKxZWVVQihXWftjTU5AkXOPmjjoz1sxkWJkRAEMHk0i38KJ\n625VDpnQ7ZjzLyxxji/mAerFAecaYnbFSQPZ1YFdJkgfyVBaeC8D6snwMe2Rhywr\ndaOlfhT+FkDt7tbWrHmMyGsgYKajGFPJbfUA5Qv24UFOpXtBPjghlpEPiJ8StJKo\nwjGSUSELDTjn/RtRUyky0UUWXXUuSZFRhXJsexJVdmyMgUiVOxxRHmBvEgOwCnsG\nvdnXdNTMeX2lpKgx4YATKvsLXSkde/HdHNJMB1RR1B13o636GdrImzfxVLPMRVMV\n99/hZZKlxUD+HZqIIPTo8WgQMffM0KViMNC+lkSGa2fdGCgu7qFYp533s0KmIwDH\n7UnY1ywuRQk/tUtlMiOAgCzepg1q09nd/B+D5hZKg3uN8sJdXEKOgpQ0ZXZbqPeE\nRKZ7Z9U7aBMAs70ASS2jby2Mrae/ZtdYf63VLEBbDj59qPmFNExxV2tqSfvMOeyi\n4LhAxm6CmWSLYhK1FPpmNRBiWZOdfSe6n2uaneMZAjG9iZwwiLl60WU5usXKC2Wl\nh71Bv5aBANOGKM8FHK9j+Xx+X6wcMwMzw5QlBvtS87RoGxAuQOUL2/Xw/PLrPnzE\nP3YEpbvn4zyqwUEJN7txgJNLicrNV3oCUCofwrr87xLeaS/ynp0=\n=qV/+\n-----END PGP SIGNATURE-----", "payload": "tree 8559a9a55a2fc5d09bcc1a005815e2c5454cdc08\nparent 0fecb6d97d0b548a2b3d23f30f384b13d4a9251e\nparent a301655c8aed20e5cea9a062663820fc29c5e80c\nauthor kennytm <kennytm@gmail.com> 1550249756 +0800\ncommitter kennytm <kennytm@gmail.com> 1550297507 +0800\n\nRollup merge of #58438 - cuviper:posix_spawn_file_actions_addchdir_np, r=alexcrichton\n\nUse posix_spawn_file_actions_addchdir_np when possible\n\nThis is a non-POSIX extension implemented in Solaris and in glibc 2.29.\nWith this we can still use `posix_spawn()` when `Command::current_dir()`\nhas been set, otherwise we fallback to `fork(); chdir(); exec()`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba", "html_url": "https://github.com/rust-lang/rust/commit/50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fecb6d97d0b548a2b3d23f30f384b13d4a9251e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fecb6d97d0b548a2b3d23f30f384b13d4a9251e", "html_url": "https://github.com/rust-lang/rust/commit/0fecb6d97d0b548a2b3d23f30f384b13d4a9251e"}, {"sha": "a301655c8aed20e5cea9a062663820fc29c5e80c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a301655c8aed20e5cea9a062663820fc29c5e80c", "html_url": "https://github.com/rust-lang/rust/commit/a301655c8aed20e5cea9a062663820fc29c5e80c"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "6fbbbb349b171a9a86e30ca8118abc18bc425391", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=50f3c81c0ecb875d45ac25a771c1bb3c61ff9eba", "patch": "@@ -281,8 +281,7 @@ impl Command {\n         use mem;\n         use sys;\n \n-        if self.get_cwd().is_some() ||\n-            self.get_gid().is_some() ||\n+        if self.get_gid().is_some() ||\n             self.get_uid().is_some() ||\n             self.env_saw_path() ||\n             self.get_closures().len() != 0 {\n@@ -301,6 +300,24 @@ impl Command {\n             }\n         }\n \n+        // Solaris and glibc 2.29+ can set a new working directory, and maybe\n+        // others will gain this non-POSIX function too. We'll check for this\n+        // weak symbol as soon as it's needed, so we can return early otherwise\n+        // to do a manual chdir before exec.\n+        weak! {\n+            fn posix_spawn_file_actions_addchdir_np(\n+                *mut libc::posix_spawn_file_actions_t,\n+                *const libc::c_char\n+            ) -> libc::c_int\n+        }\n+        let addchdir = match self.get_cwd() {\n+            Some(cwd) => match posix_spawn_file_actions_addchdir_np.get() {\n+                Some(f) => Some((f, cwd)),\n+                None => return Ok(None),\n+            },\n+            None => None,\n+        };\n+\n         let mut p = Process { pid: 0, status: None };\n \n         struct PosixSpawnFileActions(libc::posix_spawn_file_actions_t);\n@@ -345,6 +362,9 @@ impl Command {\n                                                            fd,\n                                                            libc::STDERR_FILENO))?;\n             }\n+            if let Some((f, cwd)) = addchdir {\n+                cvt(f(&mut file_actions.0, cwd.as_ptr()))?;\n+            }\n \n             let mut set: libc::sigset_t = mem::uninitialized();\n             cvt(libc::sigemptyset(&mut set))?;"}]}