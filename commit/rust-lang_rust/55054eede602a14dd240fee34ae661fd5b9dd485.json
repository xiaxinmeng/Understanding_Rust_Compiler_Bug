{"sha": "55054eede602a14dd240fee34ae661fd5b9dd485", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MDU0ZWVkZTYwMmExNGRkMjQwZmVlMzRhZTY2MWZkNWI5ZGQ0ODU=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-19T15:39:43Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-04-19T16:11:14Z"}, "message": "Fix Iter exhaustion in prove_predicates when debug is on\n\nht @tamird", "tree": {"sha": "efe2f08628799c7138dffae83337002e1dcae14d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efe2f08628799c7138dffae83337002e1dcae14d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55054eede602a14dd240fee34ae661fd5b9dd485", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlrYv6QACgkQiMlBzaHU\nZDLmww//bfyNGrMlGY1zQf8unBGACLhz7eoB7urCKQ/YQC0XQhnAJjOPO4JRcxYp\nFc2bq//FTv/V6QFh1AFG1dlq81alDbYb9asHdOSu9b7QO15rg+teVXWjoD7/BLT6\nR16qCce9m7trIBe0A8Jw62PYQlA6XJw+AHsfojaUnzHrhWqHUinUEDyrZKycO8B5\nCOnpaB+drkYl60Q+e/St8fG4dTJXCJdysnz41IzjKgw5vCZyyp/FNnEF2svMnns0\nD+cbW6FzxaGWYYZrHeSRL3HdFjaBNM+GlwRjbs6gyB6xVG+QohO13WtHXuqEhj4u\nJBQjtKI2R37+T3lGukQQqWGN5j9Sg1tcXsd+Cg2jeEekMwk1vQ9k4khQCFPVD1jU\n7kEJARDQ2rH4/tw8KiEginTPURXX2gdgJw0E5konkfzbjmd1JcZzSThWK7hsQ8Yy\nMFWWAERzHnnoYK4cJAHXsVvmxPPUcHIi+7VWQEma12VrhQSKYr8PfgMqPqiIhla9\nEd8NvkKgucOXF6tH0rNa36xEyw3L22rjj1Lm3aJziZK/sQxEd5ldxjqMXNq7X0+0\nt1VZe2rZm4Otjeh8k2dAWP8kkVxM1abiTEE8CLuwaul6rlPDWRb+JLcS4KCGxsYa\n0esONLvSHnznxLrgSklyISSOyJRcFq5rZhYjJTnxMwwmzGW0Y04=\n=weB6\n-----END PGP SIGNATURE-----", "payload": "tree efe2f08628799c7138dffae83337002e1dcae14d\nparent 5fe6b58dfc5ef9bb5dbfba9cf74aa9293a33e7b2\nauthor Santiago Pastorino <spastorino@gmail.com> 1524152383 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1524154274 -0300\n\nFix Iter exhaustion in prove_predicates when debug is on\n\nht @tamird\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55054eede602a14dd240fee34ae661fd5b9dd485", "html_url": "https://github.com/rust-lang/rust/commit/55054eede602a14dd240fee34ae661fd5b9dd485", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55054eede602a14dd240fee34ae661fd5b9dd485/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe6b58dfc5ef9bb5dbfba9cf74aa9293a33e7b2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe6b58dfc5ef9bb5dbfba9cf74aa9293a33e7b2", "html_url": "https://github.com/rust-lang/rust/commit/5fe6b58dfc5ef9bb5dbfba9cf74aa9293a33e7b2"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "ec7ee466008a514684ee158e89b78f684f9e6888", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/55054eede602a14dd240fee34ae661fd5b9dd485/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55054eede602a14dd240fee34ae661fd5b9dd485/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=55054eede602a14dd240fee34ae661fd5b9dd485", "patch": "@@ -275,7 +275,7 @@ impl<'a, 'b, 'gcx, 'tcx> TypeVerifier<'a, 'b, 'gcx, 'tcx> {\n                         tcx.predicates_of(def_id).instantiate(tcx, substs);\n                     let predicates =\n                         type_checker.normalize(&instantiated_predicates.predicates, location);\n-                    type_checker.prove_predicates(predicates.iter().cloned(), location);\n+                    type_checker.prove_predicates(predicates, location);\n                 }\n \n                 value.ty\n@@ -1516,34 +1516,34 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n \n         let predicates = self.normalize(&instantiated_predicates.predicates, location);\n         debug!(\"prove_aggregate_predicates: predicates={:?}\", predicates);\n-        self.prove_predicates(predicates.iter().cloned(), location);\n+        self.prove_predicates(predicates, location);\n     }\n \n     fn prove_trait_ref(&mut self, trait_ref: ty::TraitRef<'tcx>, location: Location) {\n         self.prove_predicates(\n-            [ty::Predicate::Trait(\n+            Some(ty::Predicate::Trait(\n                 trait_ref.to_poly_trait_ref().to_poly_trait_predicate(),\n-            )].iter()\n-                .cloned(),\n+            )),\n             location,\n         );\n     }\n \n-    fn prove_predicates(\n-        &mut self,\n-        predicates: impl IntoIterator<Item = ty::Predicate<'tcx>>,\n-        location: Location,\n-    ) {\n-        let mut predicates_iter = predicates.into_iter();\n+    fn prove_predicates<T>(&mut self, predicates: T, location: Location)\n+    where\n+        T: IntoIterator<Item = ty::Predicate<'tcx>>,\n+        T::IntoIter: Clone,\n+    {\n+        let predicates = predicates.into_iter();\n \n         debug!(\n             \"prove_predicates(predicates={:?}, location={:?})\",\n-            predicates_iter.by_ref().collect::<Vec<_>>(),\n-            location\n+            predicates.clone().collect::<Vec<_>>(),\n+            location,\n         );\n         self.fully_perform_op(location.at_self(), |this| {\n             let cause = this.misc(this.last_span);\n-            let obligations = predicates_iter\n+            let obligations = predicates\n+                .into_iter()\n                 .map(|p| traits::Obligation::new(cause.clone(), this.param_env, p))\n                 .collect();\n             Ok(InferOk {"}]}