{"sha": "684b6fa1b8cd41b03ba485084690f78991820645", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4NGI2ZmExYjhjZDQxYjAzYmE0ODUwODQ2OTBmNzg5OTE4MjA2NDU=", "commit": {"author": {"name": "Clemens Wasser", "email": "clemens.wasser@gmail.com", "date": "2020-06-09T19:47:54Z"}, "committer": {"name": "Clemens Wasser", "email": "clemens.wasser@gmail.com", "date": "2020-06-09T19:47:54Z"}, "message": "flycheck now uses the configured features", "tree": {"sha": "a8a71059e1ee2bd444b53d1aa01fce97ff4686f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8a71059e1ee2bd444b53d1aa01fce97ff4686f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/684b6fa1b8cd41b03ba485084690f78991820645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/684b6fa1b8cd41b03ba485084690f78991820645", "html_url": "https://github.com/rust-lang/rust/commit/684b6fa1b8cd41b03ba485084690f78991820645", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/684b6fa1b8cd41b03ba485084690f78991820645/comments", "author": {"login": "clemenswasser", "id": 26170289, "node_id": "MDQ6VXNlcjI2MTcwMjg5", "avatar_url": "https://avatars.githubusercontent.com/u/26170289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clemenswasser", "html_url": "https://github.com/clemenswasser", "followers_url": "https://api.github.com/users/clemenswasser/followers", "following_url": "https://api.github.com/users/clemenswasser/following{/other_user}", "gists_url": "https://api.github.com/users/clemenswasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/clemenswasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clemenswasser/subscriptions", "organizations_url": "https://api.github.com/users/clemenswasser/orgs", "repos_url": "https://api.github.com/users/clemenswasser/repos", "events_url": "https://api.github.com/users/clemenswasser/events{/privacy}", "received_events_url": "https://api.github.com/users/clemenswasser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clemenswasser", "id": 26170289, "node_id": "MDQ6VXNlcjI2MTcwMjg5", "avatar_url": "https://avatars.githubusercontent.com/u/26170289?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clemenswasser", "html_url": "https://github.com/clemenswasser", "followers_url": "https://api.github.com/users/clemenswasser/followers", "following_url": "https://api.github.com/users/clemenswasser/following{/other_user}", "gists_url": "https://api.github.com/users/clemenswasser/gists{/gist_id}", "starred_url": "https://api.github.com/users/clemenswasser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clemenswasser/subscriptions", "organizations_url": "https://api.github.com/users/clemenswasser/orgs", "repos_url": "https://api.github.com/users/clemenswasser/repos", "events_url": "https://api.github.com/users/clemenswasser/events{/privacy}", "received_events_url": "https://api.github.com/users/clemenswasser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba821afa248153a58eede29048d2b21d30a2ea55", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba821afa248153a58eede29048d2b21d30a2ea55", "html_url": "https://github.com/rust-lang/rust/commit/ba821afa248153a58eede29048d2b21d30a2ea55"}], "stats": {"total": 28, "additions": 24, "deletions": 4}, "files": [{"sha": "6c41705298bd11f5f6cd9ea392207dabeb2f6765", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/684b6fa1b8cd41b03ba485084690f78991820645/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/684b6fa1b8cd41b03ba485084690f78991820645/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=684b6fa1b8cd41b03ba485084690f78991820645", "patch": "@@ -18,8 +18,17 @@ pub use cargo_metadata::diagnostic::{\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub enum FlycheckConfig {\n-    CargoCommand { command: String, all_targets: bool, all_features: bool, extra_args: Vec<String> },\n-    CustomCommand { command: String, args: Vec<String> },\n+    CargoCommand {\n+        command: String,\n+        all_targets: bool,\n+        all_features: bool,\n+        features: Vec<String>,\n+        extra_args: Vec<String>,\n+    },\n+    CustomCommand {\n+        command: String,\n+        args: Vec<String>,\n+    },\n }\n \n /// Flycheck wraps the shared state and communication machinery used for\n@@ -188,7 +197,13 @@ impl FlycheckThread {\n         self.check_process = None;\n \n         let mut cmd = match &self.config {\n-            FlycheckConfig::CargoCommand { command, all_targets, all_features, extra_args } => {\n+            FlycheckConfig::CargoCommand {\n+                command,\n+                all_targets,\n+                all_features,\n+                extra_args,\n+                features,\n+            } => {\n                 let mut cmd = Command::new(ra_toolchain::cargo());\n                 cmd.arg(command);\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"])\n@@ -198,6 +213,9 @@ impl FlycheckThread {\n                 }\n                 if *all_features {\n                     cmd.arg(\"--all-features\");\n+                } else if !features.is_empty() {\n+                    cmd.arg(\"--features\");\n+                    cmd.arg(features.join(\" \"));\n                 }\n                 cmd.args(extra_args);\n                 cmd"}, {"sha": "5d5f7d66a798a89bb3331e3963eed289e16a549e", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/684b6fa1b8cd41b03ba485084690f78991820645/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/684b6fa1b8cd41b03ba485084690f78991820645/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=684b6fa1b8cd41b03ba485084690f78991820645", "patch": "@@ -147,6 +147,7 @@ impl Default for Config {\n                 all_targets: true,\n                 all_features: false,\n                 extra_args: Vec::new(),\n+                features: Vec::new(),\n             }),\n \n             inlay_hints: InlayHintsConfig {\n@@ -234,13 +235,14 @@ impl Config {\n                 }\n                 // otherwise configure command customizations\n                 _ => {\n-                    if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets, all_features })\n+                    if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets, all_features, features })\n                         = &mut self.check\n                     {\n                         set(value, \"/checkOnSave/extraArgs\", extra_args);\n                         set(value, \"/checkOnSave/command\", command);\n                         set(value, \"/checkOnSave/allTargets\", all_targets);\n                         set(value, \"/checkOnSave/allFeatures\", all_features);\n+                        *features = self.cargo.features.clone();\n                     }\n                 }\n             };"}]}