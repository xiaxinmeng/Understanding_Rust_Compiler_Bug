{"sha": "0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NzdmMWJiYWZiZjhlZGMxZDA5ZmE1MjM5ZGM0ZGRkYjJkZTMxZGQ=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-25T16:51:51Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-05-25T16:51:51Z"}, "message": "Use `match` instead of `.map_or(StackPopUnwind::Skip, StackPopUnwind::Cleanup)`", "tree": {"sha": "db44ae86bb3124a2fd0aef9340f2139d956141c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db44ae86bb3124a2fd0aef9340f2139d956141c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYK0rJxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLgEpgEAl+nr5c/Y6hsnXCRN98IZTnLPSSnr\nkSGqvjullbbbE4wBAMUqDwpY9KTSgLgTc4YNfAIxaJX26PvwA0hc6jOipV4M\n=f3oq\n-----END PGP SIGNATURE-----", "payload": "tree db44ae86bb3124a2fd0aef9340f2139d956141c5\nparent 38472e0d5c70596fef584a0e45c4bfadfface4b9\nauthor hyd-dev <yd-huang@outlook.com> 1621961511 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1621961511 +0800\n\nUse `match` instead of `.map_or(StackPopUnwind::Skip, StackPopUnwind::Cleanup)`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd", "html_url": "https://github.com/rust-lang/rust/commit/0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd/comments", "author": null, "committer": null, "parents": [{"sha": "38472e0d5c70596fef584a0e45c4bfadfface4b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/38472e0d5c70596fef584a0e45c4bfadfface4b9", "html_url": "https://github.com/rust-lang/rust/commit/38472e0d5c70596fef584a0e45c4bfadfface4b9"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a5bdeb55e781402d0685a382acea085a3af67776", "filename": "compiler/rustc_mir/src/interpret/terminator.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs?ref=0777f1bbafbf8edc1d09fa5239dc4dddb2de31dd", "patch": "@@ -110,10 +110,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     abi,\n                     &args[..],\n                     ret,\n-                    if caller_can_unwind {\n-                        cleanup.map_or(StackPopUnwind::Skip, StackPopUnwind::Cleanup)\n-                    } else {\n-                        StackPopUnwind::NotAllowed\n+                    match (cleanup, caller_can_unwind) {\n+                        (Some(cleanup), true) => StackPopUnwind::Cleanup(*cleanup),\n+                        (None, true) => StackPopUnwind::Skip,\n+                        (_, false) => StackPopUnwind::NotAllowed,\n                     },\n                 )?;\n                 // Sanity-check that `eval_fn_call` either pushed a new frame or\n@@ -511,7 +511,10 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             Abi::Rust,\n             &[arg.into()],\n             Some((&dest.into(), target)),\n-            unwind.map_or(StackPopUnwind::Skip, StackPopUnwind::Cleanup),\n+            match unwind {\n+                Some(cleanup) => StackPopUnwind::Cleanup(cleanup),\n+                None => StackPopUnwind::Skip,\n+            },\n         )\n     }\n }"}]}