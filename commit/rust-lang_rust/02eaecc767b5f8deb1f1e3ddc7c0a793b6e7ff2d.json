{"sha": "02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d", "node_id": "C_kwDOAAsO6NoAKDAyZWFlY2M3NjdiNWY4ZGViMWYxZTNkZGM3YzBhNzkzYjZlN2ZmMmQ", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-11-30T04:31:35Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-11-30T04:31:35Z"}, "message": "avoid an unnecessary `&str` to `String` conversion", "tree": {"sha": "24877a3e28afcc378d51945cac3f1b45249438b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/24877a3e28afcc378d51945cac3f1b45249438b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d", "html_url": "https://github.com/rust-lang/rust/commit/02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97f0c58b37ba7e1bd32ddf1c4558884302f68194", "url": "https://api.github.com/repos/rust-lang/rust/commits/97f0c58b37ba7e1bd32ddf1c4558884302f68194", "html_url": "https://github.com/rust-lang/rust/commit/97f0c58b37ba7e1bd32ddf1c4558884302f68194"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "9aa8a06c6d36e3d39c5b51f0d2afee2712a300cc", "filename": "compiler/rustc_session/src/errors.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d/compiler%2Frustc_session%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Ferrors.rs?ref=02eaecc767b5f8deb1f1e3ddc7c0a793b6e7ff2d", "patch": "@@ -197,12 +197,12 @@ pub enum UnleashedFeatureHelp {\n \n #[derive(Diagnostic)]\n #[diag(session_invalid_literal_suffix)]\n-pub(crate) struct InvalidLiteralSuffix {\n+pub(crate) struct InvalidLiteralSuffix<'a> {\n     #[primary_span]\n     #[label]\n     pub span: Span,\n     // FIXME(#100717)\n-    pub kind: String,\n+    pub kind: &'a str,\n     pub suffix: Symbol,\n }\n \n@@ -311,11 +311,7 @@ pub fn report_lit_error(sess: &ParseSess, err: LitError, lit: token::Lit, span:\n         LitError::LexerError => {}\n         LitError::InvalidSuffix => {\n             if let Some(suffix) = suffix {\n-                sess.emit_err(InvalidLiteralSuffix {\n-                    span,\n-                    kind: format!(\"{}\", kind.descr()),\n-                    suffix,\n-                });\n+                sess.emit_err(InvalidLiteralSuffix { span, kind: kind.descr(), suffix });\n             }\n         }\n         LitError::InvalidIntSuffix => {"}]}