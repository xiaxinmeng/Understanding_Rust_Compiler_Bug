{"sha": "42fb9b2c5f0c791e2c369b2ec0562c968aed00de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyZmI5YjJjNWYwYzc5MWUyYzM2OWIyZWMwNTYyYzk2OGFlZDAwZGU=", "commit": {"author": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-16T09:08:24Z"}, "committer": {"name": "Haitao Li", "email": "lihaitao@gmail.com", "date": "2011-12-16T09:17:24Z"}, "message": "cargo: Fix long lines", "tree": {"sha": "459f5b107f5b9c0d5aa9dc4616f2d5096c748e1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/459f5b107f5b9c0d5aa9dc4616f2d5096c748e1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/42fb9b2c5f0c791e2c369b2ec0562c968aed00de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/42fb9b2c5f0c791e2c369b2ec0562c968aed00de", "html_url": "https://github.com/rust-lang/rust/commit/42fb9b2c5f0c791e2c369b2ec0562c968aed00de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/42fb9b2c5f0c791e2c369b2ec0562c968aed00de/comments", "author": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lht", "id": 19508, "node_id": "MDQ6VXNlcjE5NTA4", "avatar_url": "https://avatars.githubusercontent.com/u/19508?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lht", "html_url": "https://github.com/lht", "followers_url": "https://api.github.com/users/lht/followers", "following_url": "https://api.github.com/users/lht/following{/other_user}", "gists_url": "https://api.github.com/users/lht/gists{/gist_id}", "starred_url": "https://api.github.com/users/lht/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lht/subscriptions", "organizations_url": "https://api.github.com/users/lht/orgs", "repos_url": "https://api.github.com/users/lht/repos", "events_url": "https://api.github.com/users/lht/events{/privacy}", "received_events_url": "https://api.github.com/users/lht/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55cc110822d4852e125d32321b966470def6979e", "url": "https://api.github.com/repos/rust-lang/rust/commits/55cc110822d4852e125d32321b966470def6979e", "html_url": "https://github.com/rust-lang/rust/commit/55cc110822d4852e125d32321b966470def6979e"}], "stats": {"total": 17, "additions": 11, "deletions": 6}, "files": [{"sha": "b4aca34da89037e2bcab442cbcd8ff1b8e060705", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/42fb9b2c5f0c791e2c369b2ec0562c968aed00de/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/42fb9b2c5f0c791e2c369b2ec0562c968aed00de/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=42fb9b2c5f0c791e2c369b2ec0562c968aed00de", "patch": "@@ -155,13 +155,17 @@ fn install_one_crate(c: cargo, _path: str, cf: str, _p: pkg) {\n         name = str::slice(name, 0u, ri as uint);\n     }\n     log #fmt[\"Installing: %s\", name];\n-    let old = vec::map({|x| str::slice(x, 2u, str::byte_len(x))}, fs::list_dir(\".\"));\n+    let old = vec::map({|x| str::slice(x, 2u, str::byte_len(x))},\n+                       fs::list_dir(\".\"));\n     run::run_program(\"rustc\", [name + \".rc\"]);\n-    let new = vec::map({|x| str::slice(x, 2u, str::byte_len(x))}, fs::list_dir(\".\"));\n-    let created = vec::filter::<str>({ |n| !vec::member::<str>(n, old) }, new);\n+    let new = vec::map({|x| str::slice(x, 2u, str::byte_len(x))},\n+                       fs::list_dir(\".\"));\n+    let created =\n+        vec::filter::<str>({ |n| !vec::member::<str>(n, old) }, new);\n+    let exec_suffix = os::exec_suffix();\n     for ct: str in created {\n-        if (os::exec_suffix() != \"\" && str::ends_with(ct, os::exec_suffix())) ||\n-           (os::exec_suffix() == \"\" && !str::starts_with(ct, \"lib\")) {\n+        if (exec_suffix != \"\" && str::ends_with(ct, exec_suffix)) ||\n+            (exec_suffix == \"\" && !str::starts_with(ct, \"lib\")) {\n             log #fmt[\"  bin: %s\", ct];\n             // FIXME: need libstd fs::copy or something\n             run::run_program(\"cp\", [ct, c.bindir]);\n@@ -179,7 +183,8 @@ fn install_source(c: cargo, path: str) {\n \n     log #fmt[\"contents: %s\", str::connect(contents, \", \")];\n \n-    let cratefiles = vec::filter::<str>({ |n| str::ends_with(n, \".rc\") }, contents);\n+    let cratefiles =\n+        vec::filter::<str>({ |n| str::ends_with(n, \".rc\") }, contents);\n \n     if vec::is_empty(cratefiles) {\n         fail \"This doesn't look like a rust package (no .rc files).\";"}]}