{"sha": "350f9a2be56c2527647300287599464cdd508340", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1MGY5YTJiZTU2YzI1Mjc2NDczMDAyODc1OTk0NjRjZGQ1MDgzNDA=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-15T20:43:59Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-10-17T07:31:37Z"}, "message": "resolve: Do not skip extern prelude during speculative resolution", "tree": {"sha": "9f7a5f0aee05956af1fa9dfbdbfc1b16fc51ddd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f7a5f0aee05956af1fa9dfbdbfc1b16fc51ddd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/350f9a2be56c2527647300287599464cdd508340", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/350f9a2be56c2527647300287599464cdd508340", "html_url": "https://github.com/rust-lang/rust/commit/350f9a2be56c2527647300287599464cdd508340", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/350f9a2be56c2527647300287599464cdd508340/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "37ba1071c626c43a5b85752b4ffcf6a87e2b745e", "url": "https://api.github.com/repos/rust-lang/rust/commits/37ba1071c626c43a5b85752b4ffcf6a87e2b745e", "html_url": "https://github.com/rust-lang/rust/commit/37ba1071c626c43a5b85752b4ffcf6a87e2b745e"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "ac0616e50b0913938a088bbc4c3bcb8f2eb2a53c", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/350f9a2be56c2527647300287599464cdd508340/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350f9a2be56c2527647300287599464cdd508340/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=350f9a2be56c2527647300287599464cdd508340", "patch": "@@ -1980,9 +1980,15 @@ impl<'a, 'crateloader: 'a> Resolver<'a, 'crateloader> {\n         }\n \n         if !module.no_implicit_prelude {\n-            // `record_used` means that we don't try to load crates during speculative resolution\n-            if record_used && ns == TypeNS && self.extern_prelude.contains(&ident.name) {\n-                let crate_id = self.crate_loader.process_path_extern(ident.name, ident.span);\n+            if ns == TypeNS && self.extern_prelude.contains(&ident.name) {\n+                let crate_id = if record_used {\n+                    self.crate_loader.process_path_extern(ident.name, ident.span)\n+                } else if let Some(crate_id) =\n+                        self.crate_loader.maybe_process_path_extern(ident.name, ident.span) {\n+                    crate_id\n+                } else {\n+                    return None;\n+                };\n                 let crate_root = self.get_module(DefId { krate: crate_id, index: CRATE_DEF_INDEX });\n                 self.populate_module_if_necessary(&crate_root);\n "}, {"sha": "372f34454de927508e770c45ecf39b37bec9a5bb", "filename": "src/test/run-pass/extern/extern-prelude-no-speculative.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-no-speculative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-no-speculative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern%2Fextern-prelude-no-speculative.rs?ref=350f9a2be56c2527647300287599464cdd508340", "patch": "@@ -10,7 +10,7 @@\n \n // run-pass\n #![allow(unused_variables)]\n-// compile-flags: --extern LooksLikeExternCrate=/path/to/nowhere\n+// compile-flags: --extern LooksLikeExternCrate\n \n mod m {\n     pub struct LooksLikeExternCrate;"}, {"sha": "8eaeafa5207df828c4d354116c319ef11dd2ef6b", "filename": "src/test/ui/impl-trait/auxiliary/extra-item.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Fui%2Fimpl-trait%2Fauxiliary%2Fextra-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Fui%2Fimpl-trait%2Fauxiliary%2Fextra-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fauxiliary%2Fextra-item.rs?ref=350f9a2be56c2527647300287599464cdd508340", "patch": "@@ -0,0 +1 @@\n+pub trait MyTrait {}"}, {"sha": "d82237ccecc7ddd14dad8eaa3298a6e265f9c10c", "filename": "src/test/ui/impl-trait/extra-item.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Fui%2Fimpl-trait%2Fextra-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Fui%2Fimpl-trait%2Fextra-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fextra-item.rs?ref=350f9a2be56c2527647300287599464cdd508340", "patch": "@@ -0,0 +1,10 @@\n+// aux-build:extra-item.rs\n+// compile-flags:--extern extra_item\n+\n+struct S;\n+\n+impl extra_item::MyTrait for S {\n+    fn extra() {} //~ ERROR method `extra` is not a member of trait `extra_item::MyTrait`\n+}\n+\n+fn main() {}"}, {"sha": "de3c7ba5d3118151465488085ec0f6d86a1a25d2", "filename": "src/test/ui/impl-trait/extra-item.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Fui%2Fimpl-trait%2Fextra-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/350f9a2be56c2527647300287599464cdd508340/src%2Ftest%2Fui%2Fimpl-trait%2Fextra-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fextra-item.stderr?ref=350f9a2be56c2527647300287599464cdd508340", "patch": "@@ -0,0 +1,9 @@\n+error[E0407]: method `extra` is not a member of trait `extra_item::MyTrait`\n+  --> $DIR/extra-item.rs:7:5\n+   |\n+LL |     fn extra() {} //~ ERROR method `extra` is not a member of trait `extra_item::MyTrait`\n+   |     ^^^^^^^^^^^^^ not a member of trait `extra_item::MyTrait`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0407`."}]}