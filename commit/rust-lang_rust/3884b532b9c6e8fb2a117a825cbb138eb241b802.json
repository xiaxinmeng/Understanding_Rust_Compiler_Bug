{"sha": "3884b532b9c6e8fb2a117a825cbb138eb241b802", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ODRiNTMyYjljNmU4ZmIyYTExN2E4MjVjYmIxMzhlYjI0MWI4MDI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T07:28:55Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-07-26T07:28:55Z"}, "message": "Avoid unnecessary line breaks in condition expression", "tree": {"sha": "f9492d3f416af02d99eab5880d92aa796aecd0e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9492d3f416af02d99eab5880d92aa796aecd0e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3884b532b9c6e8fb2a117a825cbb138eb241b802", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3884b532b9c6e8fb2a117a825cbb138eb241b802", "html_url": "https://github.com/rust-lang/rust/commit/3884b532b9c6e8fb2a117a825cbb138eb241b802", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3884b532b9c6e8fb2a117a825cbb138eb241b802/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b5831b5016bf9565f55e1975602c80b5151bd50", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b5831b5016bf9565f55e1975602c80b5151bd50", "html_url": "https://github.com/rust-lang/rust/commit/8b5831b5016bf9565f55e1975602c80b5151bd50"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "67214a96c60b0b80d5f1cf50bdf20d43b00a0ad3", "filename": "src/expr.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3884b532b9c6e8fb2a117a825cbb138eb241b802/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3884b532b9c6e8fb2a117a825cbb138eb241b802/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=3884b532b9c6e8fb2a117a825cbb138eb241b802", "patch": "@@ -1211,15 +1211,10 @@ impl<'a> ControlFlow<'a> {\n \n         let pat_expr_string = match self.cond {\n             Some(cond) => {\n-                let mut cond_shape = match context.config.control_style() {\n+                let cond_shape = match context.config.control_style() {\n                     Style::Legacy => try_opt!(constr_shape.shrink_left(offset)),\n                     Style::Rfc => try_opt!(constr_shape.offset_left(offset)),\n                 };\n-                if context.config.control_brace_style() != ControlBraceStyle::AlwaysNextLine {\n-                    // 2 = \" {\".len()\n-                    cond_shape = try_opt!(cond_shape.sub_width(2));\n-                }\n-\n                 try_opt!(rewrite_pat_expr(\n                     context,\n                     self.pat,\n@@ -1233,8 +1228,20 @@ impl<'a> ControlFlow<'a> {\n             None => String::new(),\n         };\n \n+        let brace_overhead =\n+            if context.config.control_brace_style() != ControlBraceStyle::AlwaysNextLine {\n+                // 2 = ` {`\n+                2\n+            } else {\n+                0\n+            };\n+        let one_line_budget = context\n+            .config\n+            .max_width()\n+            .checked_sub(constr_shape.used_width() + offset + brace_overhead)\n+            .unwrap_or(0);\n         let force_newline_brace = context.config.control_style() == Style::Rfc &&\n-            pat_expr_string.contains('\\n') &&\n+            (pat_expr_string.contains('\\n') || pat_expr_string.len() > one_line_budget) &&\n             !last_line_extendable(&pat_expr_string);\n \n         // Try to format if-else on single line."}]}