{"sha": "5f03ae35074f498e29eda330b0c6c0419272b5e9", "node_id": "C_kwDOAAsO6NoAKDVmMDNhZTM1MDc0ZjQ5OGUyOWVkYTMzMGIwYzZjMDQxOTI3MmI1ZTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-01-05T14:05:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-01-05T14:05:49Z"}, "message": "Rollup merge of #92575 - petrochenkov:cratenodeid, r=Aaron1011\n\nast: Always keep a `NodeId` in `ast::Crate`\n\nThis makes it more uniform with other expanded nodes.\nIt makes generic code in https://github.com/rust-lang/rust/pull/92573 simpler in particular.\n\nThis is another follow-up to https://github.com/rust-lang/rust/pull/91313.\nr? `@Aaron1011`", "tree": {"sha": "45b9d91b3bb157bf56321106405300557954655d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45b9d91b3bb157bf56321106405300557954655d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5f03ae35074f498e29eda330b0c6c0419272b5e9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJh1aW9CRBK7hj4Ov3rIwAAEooIAEZF3lh+uJe4STs8erv0TIA1\nIuji6BS0rghQiLMQf0wmfT72GN6LWy1LJCWn+WEEhp+AKBPIuSWYKjxqH3ajGxaT\n88ITvRNbKJ0nQ+MmNKtgGyJYPEE2ZIMvJql48gywwb3zVFCbSCOdAkBFqLqaAVFq\nxm67JN7/LOj9Ye7lnVFQzCOy7JsAEpy4pVQcuPPR+ciDjZM3e0NHLSkFW9B715hb\nVrxyEFw6v3e7R0Pkbr3Ut7+ttCozbjw4iYOnzFbx3JcwNm7FcyAf1mfmajRHc/Tv\nkinf13QH6QYse5hiFycyW+/rNUctVNqDiN5ZlH5yZl1NrWyM5ja93j7PIoIXF3E=\n=0X+1\n-----END PGP SIGNATURE-----\n", "payload": "tree 45b9d91b3bb157bf56321106405300557954655d\nparent c570fcb0c4652172745ee63dfc73c785fda91108\nparent 55595c561651bab394d549e86766e05db6667af7\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1641391549 +0100\ncommitter GitHub <noreply@github.com> 1641391549 +0100\n\nRollup merge of #92575 - petrochenkov:cratenodeid, r=Aaron1011\n\nast: Always keep a `NodeId` in `ast::Crate`\n\nThis makes it more uniform with other expanded nodes.\nIt makes generic code in https://github.com/rust-lang/rust/pull/92573 simpler in particular.\n\nThis is another follow-up to https://github.com/rust-lang/rust/pull/91313.\nr? `@Aaron1011`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5f03ae35074f498e29eda330b0c6c0419272b5e9", "html_url": "https://github.com/rust-lang/rust/commit/5f03ae35074f498e29eda330b0c6c0419272b5e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5f03ae35074f498e29eda330b0c6c0419272b5e9/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c570fcb0c4652172745ee63dfc73c785fda91108", "url": "https://api.github.com/repos/rust-lang/rust/commits/c570fcb0c4652172745ee63dfc73c785fda91108", "html_url": "https://github.com/rust-lang/rust/commit/c570fcb0c4652172745ee63dfc73c785fda91108"}, {"sha": "55595c561651bab394d549e86766e05db6667af7", "url": "https://api.github.com/repos/rust-lang/rust/commits/55595c561651bab394d549e86766e05db6667af7", "html_url": "https://github.com/rust-lang/rust/commit/55595c561651bab394d549e86766e05db6667af7"}], "stats": {"total": 48, "additions": 27, "deletions": 21}, "files": [{"sha": "a2d32cdc00fb001b2c03077f9d99ccdf78bd4935", "filename": "compiler/rustc_ast/src/ast.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_ast%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fast.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -510,8 +510,10 @@ pub struct Crate {\n     pub attrs: Vec<Attribute>,\n     pub items: Vec<P<Item>>,\n     pub span: Span,\n-    // Placeholder ID if the crate node is a macro placeholder.\n-    pub is_placeholder: Option<NodeId>,\n+    /// Must be equal to `CRATE_NODE_ID` after the crate root is expanded, but may hold\n+    /// expansion placeholders or an unassigned value (`DUMMY_NODE_ID`) before that.\n+    pub id: NodeId,\n+    pub is_placeholder: bool,\n }\n \n /// Possible values inside of compile-time attribute lists."}, {"sha": "9ef78aaf6673aaec316d006fa25ac37cf552fbc6", "filename": "compiler/rustc_ast/src/mut_visit.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Fmut_visit.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -1109,7 +1109,8 @@ pub fn noop_visit_fn_header<T: MutVisitor>(header: &mut FnHeader, vis: &mut T) {\n }\n \n pub fn noop_visit_crate<T: MutVisitor>(krate: &mut Crate, vis: &mut T) {\n-    let Crate { attrs, items, span, is_placeholder: _ } = krate;\n+    let Crate { attrs, items, span, id, is_placeholder: _ } = krate;\n+    vis.visit_id(id);\n     visit_attrs(attrs, vis);\n     items.flat_map_in_place(|item| vis.flat_map_item(item));\n     vis.visit_span(span);\n@@ -1554,6 +1555,7 @@ impl DummyAstNode for Crate {\n             attrs: Default::default(),\n             items: Default::default(),\n             span: Default::default(),\n+            id: DUMMY_NODE_ID,\n             is_placeholder: Default::default(),\n         }\n     }"}, {"sha": "7f49f80a8439bd5dc8ea38a1bc84736689c19e29", "filename": "compiler/rustc_expand/src/expand.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fexpand.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -377,6 +377,7 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n             dir_path,\n         });\n         let krate = self.fully_expand_fragment(AstFragment::Crate(krate)).make_crate();\n+        assert_eq!(krate.id, ast::CRATE_NODE_ID);\n         self.cx.trace_macros_diag();\n         krate\n     }\n@@ -1169,7 +1170,8 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                         attrs: Vec::new(),\n                         items: Vec::new(),\n                         span,\n-                        is_placeholder: None,\n+                        id: self.cx.resolver.next_node_id(),\n+                        is_placeholder: false,\n                     };\n                 }\n             };\n@@ -1180,7 +1182,7 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                     .make_crate();\n             }\n \n-            noop_visit_crate(&mut krate, self);\n+            assign_id!(self, &mut krate.id, || noop_visit_crate(&mut krate, self));\n             krate\n         })\n     }"}, {"sha": "825af9a7b2bd921b6d53a23b66717a845369d1f6", "filename": "compiler/rustc_expand/src/placeholders.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fplaceholders.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -50,7 +50,8 @@ pub fn placeholder(\n             attrs: Default::default(),\n             items: Default::default(),\n             span,\n-            is_placeholder: Some(id),\n+            id,\n+            is_placeholder: true,\n         }),\n         AstFragmentKind::Expr => AstFragment::Expr(expr_placeholder()),\n         AstFragmentKind::OptExpr => AstFragment::OptExpr(Some(expr_placeholder())),\n@@ -362,8 +363,8 @@ impl MutVisitor for PlaceholderExpander {\n     }\n \n     fn visit_crate(&mut self, krate: &mut ast::Crate) {\n-        if let Some(id) = krate.is_placeholder {\n-            *krate = self.remove(id).make_crate();\n+        if krate.is_placeholder {\n+            *krate = self.remove(krate.id).make_crate();\n         } else {\n             noop_visit_crate(krate, self)\n         }"}, {"sha": "33bf670f570f897631d6320468bf1a4eebb61d79", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -3,7 +3,7 @@ use crate::proc_macro_decls;\n use crate::util;\n \n use rustc_ast::mut_visit::MutVisitor;\n-use rustc_ast::{self as ast, visit};\n+use rustc_ast::{self as ast, visit, DUMMY_NODE_ID};\n use rustc_borrowck as mir_borrowck;\n use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_ssa::traits::CodegenBackend;\n@@ -323,7 +323,7 @@ pub fn configure_and_expand(\n \n         let crate_attrs = krate.attrs.clone();\n         let extern_mod_loaded = |ident: Ident, attrs, items, span| {\n-            let krate = ast::Crate { attrs, items, span, is_placeholder: None };\n+            let krate = ast::Crate { attrs, items, span, id: DUMMY_NODE_ID, is_placeholder: false };\n             pre_expansion_lint(sess, lint_store, &krate, &crate_attrs, ident.name.as_str());\n             (krate.attrs, krate.items)\n         };"}, {"sha": "ade441b0e7d5c856fd8095e0f83261cb1030b30e", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -27,7 +27,7 @@ impl<'a> Parser<'a> {\n     /// Parses a source module as a crate. This is the main entry point for the parser.\n     pub fn parse_crate_mod(&mut self) -> PResult<'a, ast::Crate> {\n         let (attrs, items, span) = self.parse_mod(&token::Eof)?;\n-        Ok(ast::Crate { attrs, items, span, is_placeholder: None })\n+        Ok(ast::Crate { attrs, items, span, id: DUMMY_NODE_ID, is_placeholder: false })\n     }\n \n     /// Parses a `mod <foo> { ... }` or `mod <foo>;` item."}, {"sha": "39074f811a50beaf7186aed2ecf91887a2e8402f", "filename": "compiler/rustc_resolve/src/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fbuild_reduced_graph.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -1512,8 +1512,8 @@ impl<'a, 'b> Visitor<'b> for BuildReducedGraphVisitor<'a, 'b> {\n     }\n \n     fn visit_crate(&mut self, krate: &'b ast::Crate) {\n-        if let Some(id) = krate.is_placeholder {\n-            self.visit_invoc_in_module(id);\n+        if krate.is_placeholder {\n+            self.visit_invoc_in_module(krate.id);\n         } else {\n             visit::walk_crate(self, krate);\n             self.contains_macro_use(&krate.attrs);"}, {"sha": "8ea5dca6f108a64ae7a5cabe661fc66059c1a2f6", "filename": "compiler/rustc_resolve/src/def_collector.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdef_collector.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -344,8 +344,8 @@ impl<'a, 'b> visit::Visitor<'a> for DefCollector<'a, 'b> {\n     }\n \n     fn visit_crate(&mut self, krate: &'a Crate) {\n-        if let Some(id) = krate.is_placeholder {\n-            self.visit_macro_invoc(id)\n+        if krate.is_placeholder {\n+            self.visit_macro_invoc(krate.id)\n         } else {\n             visit::walk_crate(self, krate)\n         }"}, {"sha": "2008570d6f0efecf198b10b6f840266dee3dfba8", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -68,7 +68,7 @@ use smallvec::{smallvec, SmallVec};\n use std::cell::{Cell, RefCell};\n use std::collections::{BTreeMap, BTreeSet};\n use std::ops::ControlFlow;\n-use std::{cmp, fmt, iter, ptr};\n+use std::{cmp, fmt, iter, mem, ptr};\n use tracing::debug;\n \n use diagnostics::{extend_span_to_previous_binding, find_span_of_binding_until_next_binding};\n@@ -1394,7 +1394,7 @@ impl<'a> Resolver<'a> {\n                 .chain(features.declared_lang_features.iter().map(|(feat, ..)| *feat))\n                 .collect(),\n             lint_buffer: LintBuffer::default(),\n-            next_node_id: NodeId::from_u32(1),\n+            next_node_id: CRATE_NODE_ID,\n             node_id_to_def_id,\n             def_id_to_node_id,\n             placeholder_field_indices: Default::default(),\n@@ -1430,8 +1430,7 @@ impl<'a> Resolver<'a> {\n     pub fn next_node_id(&mut self) -> NodeId {\n         let next =\n             self.next_node_id.as_u32().checked_add(1).expect(\"input too large; ran out of NodeIds\");\n-        self.next_node_id = ast::NodeId::from_u32(next);\n-        self.next_node_id\n+        mem::replace(&mut self.next_node_id, ast::NodeId::from_u32(next))\n     }\n \n     pub fn lint_buffer(&mut self) -> &mut LintBuffer {"}, {"sha": "ab70c5b91c65c73ea98911ac6569e712d82498a0", "filename": "src/test/ui/ast-json/ast-json-noexpand-output.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-noexpand-output.stdout?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -1 +1 @@\n-{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"span\":{\"lo\":0,\"hi\":0},\"is_placeholder\":null}\n+{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"span\":{\"lo\":0,\"hi\":0},\"id\":0,\"is_placeholder\":false}"}, {"sha": "f3663d9953b8aeea7995f579a303ef22a1dedca8", "filename": "src/test/ui/ast-json/ast-json-output.stdout", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5f03ae35074f498e29eda330b0c6c0419272b5e9/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/5f03ae35074f498e29eda330b0c6c0419272b5e9/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fast-json%2Fast-json-output.stdout?ref=5f03ae35074f498e29eda330b0c6c0419272b5e9", "patch": "@@ -1 +1 @@\n-{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"prelude_import\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"Use\",\"fields\":[{\"prefix\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"{{root}}\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"prelude\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"rust_2015\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"kind\":\"Glob\",\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"macro_use\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null},{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"span\":{\"lo\":0,\"hi\":0},\"is_placeholder\":null}\n+{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"crate_type\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":{\"variant\":\"Eq\",\"fields\":[{\"lo\":0,\"hi\":0},{\"kind\":{\"variant\":\"Interpolated\",\"fields\":[{\"variant\":\"NtExpr\",\"fields\":[{\"id\":0,\"kind\":{\"variant\":\"Lit\",\"fields\":[{\"token\":{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null},\"kind\":{\"variant\":\"Str\",\"fields\":[\"lib\",\"Cooked\"]},\"span\":{\"lo\":0,\"hi\":0}}]},\"span\":{\"lo\":0,\"hi\":0},\"attrs\":{\"0\":null},\"tokens\":{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}}]}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Pound\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Joint\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Not\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Delimited\",\"fields\":[{\"open\":{\"lo\":0,\"hi\":0},\"close\":{\"lo\":0,\"hi\":0}},\"Bracket\",{\"0\":[[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Ident\",\"fields\":[\"crate_type\",false]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":\"Eq\",\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"],[{\"variant\":\"Token\",\"fields\":[{\"kind\":{\"variant\":\"Literal\",\"fields\":[{\"kind\":\"Str\",\"symbol\":\"lib\",\"suffix\":null}]},\"span\":{\"lo\":0,\"hi\":0}}]},\"Alone\"]]}]},\"Alone\"]]}]},\"id\":null,\"style\":\"Inner\",\"span\":{\"lo\":0,\"hi\":0}}],\"items\":[{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"prelude_import\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"Use\",\"fields\":[{\"prefix\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"{{root}}\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"prelude\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null},{\"ident\":{\"name\":\"rust_2015\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"kind\":\"Glob\",\"span\":{\"lo\":0,\"hi\":0}}]},\"tokens\":null},{\"attrs\":[{\"kind\":{\"variant\":\"Normal\",\"fields\":[{\"path\":{\"span\":{\"lo\":0,\"hi\":0},\"segments\":[{\"ident\":{\"name\":\"macro_use\",\"span\":{\"lo\":0,\"hi\":0}},\"id\":0,\"args\":null}],\"tokens\":null},\"args\":\"Empty\",\"tokens\":null},null]},\"id\":null,\"style\":\"Outer\",\"span\":{\"lo\":0,\"hi\":0}}],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"std\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null},{\"attrs\":[],\"id\":0,\"span\":{\"lo\":0,\"hi\":0},\"vis\":{\"kind\":\"Inherited\",\"span\":{\"lo\":0,\"hi\":0},\"tokens\":null},\"ident\":{\"name\":\"core\",\"span\":{\"lo\":0,\"hi\":0}},\"kind\":{\"variant\":\"ExternCrate\",\"fields\":[null]},\"tokens\":null}],\"span\":{\"lo\":0,\"hi\":0},\"id\":0,\"is_placeholder\":false}"}]}