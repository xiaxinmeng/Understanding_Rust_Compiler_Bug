{"sha": "45cad0456f6d8624e8c9d66709444106748a1f03", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1Y2FkMDQ1NmY2ZDg2MjRlOGM5ZDY2NzA5NDQ0MTA2NzQ4YTFmMDM=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-01-10T07:05:30Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2018-01-10T07:05:30Z"}, "message": "rustdoc: Populate external_traits with traits only seen in impls\n\nThis means default methods can always be found and \"Important traits\" will include all spotlight traits.", "tree": {"sha": "73fbba1b4aa4b530735c564848982c44deb9a8e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73fbba1b4aa4b530735c564848982c44deb9a8e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45cad0456f6d8624e8c9d66709444106748a1f03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45cad0456f6d8624e8c9d66709444106748a1f03", "html_url": "https://github.com/rust-lang/rust/commit/45cad0456f6d8624e8c9d66709444106748a1f03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45cad0456f6d8624e8c9d66709444106748a1f03/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee220daca345302c3277befee2732b6b2a5a711c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee220daca345302c3277befee2732b6b2a5a711c", "html_url": "https://github.com/rust-lang/rust/commit/ee220daca345302c3277befee2732b6b2a5a711c"}], "stats": {"total": 57, "additions": 52, "deletions": 5}, "files": [{"sha": "26919239bb9a80e0a6339c1dea78851265be222e", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=45cad0456f6d8624e8c9d66709444106748a1f03", "patch": "@@ -349,6 +349,9 @@ pub fn build_impl(cx: &DocContext, did: DefId, ret: &mut Vec<clean::Item>) {\n     if trait_.def_id() == tcx.lang_items().deref_trait() {\n         super::build_deref_target_impls(cx, &trait_items, ret);\n     }\n+    if let Some(trait_did) = trait_.def_id() {\n+        record_extern_trait(cx, trait_did);\n+    }\n \n     let provided = trait_.def_id().map(|did| {\n         tcx.provided_trait_methods(did)\n@@ -504,3 +507,9 @@ fn separate_supertrait_bounds(mut g: clean::Generics)\n     });\n     (g, ty_bounds)\n }\n+\n+pub fn record_extern_trait(cx: &DocContext, did: DefId) {\n+    cx.external_traits.borrow_mut().entry(did).or_insert_with(|| {\n+        build_external_trait(cx, did)\n+    });\n+}"}, {"sha": "48b1c46ec01aa012bc191e5578ef39ab25dc1abb", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=45cad0456f6d8624e8c9d66709444106748a1f03", "patch": "@@ -3189,8 +3189,7 @@ fn register_def(cx: &DocContext, def: Def) -> DefId {\n     if did.is_local() { return did }\n     inline::record_extern_fqn(cx, did, kind);\n     if let TypeKind::Trait = kind {\n-        let t = inline::build_external_trait(cx, did);\n-        cx.external_traits.borrow_mut().insert(did, t);\n+        inline::record_extern_trait(cx, did);\n     }\n     did\n }"}, {"sha": "5aa03227d1d335d3218e1b625576c87630c80a17", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=45cad0456f6d8624e8c9d66709444106748a1f03", "patch": "@@ -3291,8 +3291,7 @@ fn spotlight_decl(decl: &clean::FnDecl) -> Result<String, fmt::Error> {\n         if let Some(impls) = c.impls.get(&did) {\n             for i in impls {\n                 let impl_ = i.inner_impl();\n-                if impl_.trait_.def_id().and_then(|d| c.traits.get(&d))\n-                                        .map_or(false, |t| t.is_spotlight) {\n+                if impl_.trait_.def_id().map_or(false, |d| c.traits[&d].is_spotlight) {\n                     if out.is_empty() {\n                         out.push_str(\n                             &format!(\"<h3 class=\\\"important\\\">Important traits for {}</h3>\\\n@@ -3458,7 +3457,7 @@ fn render_impl(w: &mut fmt::Formatter, cx: &Context, i: &Impl, link: AssocItemLi\n     }\n \n     let traits = &cache().traits;\n-    let trait_ = i.trait_did().and_then(|did| traits.get(&did));\n+    let trait_ = i.trait_did().map(|did| &traits[&did]);\n \n     if !show_def_docs {\n         write!(w, \"<span class='docblock autohide'>\")?;"}, {"sha": "5d4adb28cd83a83a3587ee6d6282afb26332548e", "filename": "src/test/rustdoc/inline_cross/auxiliary/impl-inline-without-trait.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fimpl-inline-without-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fimpl-inline-without-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fauxiliary%2Fimpl-inline-without-trait.rs?ref=45cad0456f6d8624e8c9d66709444106748a1f03", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub trait MyTrait {\n+    /// docs for my_trait_method\n+    fn my_trait_method() {}\n+}\n+\n+pub struct MyStruct;\n+\n+impl MyTrait for MyStruct {}"}, {"sha": "ea97d9d6ac2c2577bae046e2cae55d4095371199", "filename": "src/test/rustdoc/inline_cross/impl-inline-without-trait.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl-inline-without-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45cad0456f6d8624e8c9d66709444106748a1f03/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl-inline-without-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Finline_cross%2Fimpl-inline-without-trait.rs?ref=45cad0456f6d8624e8c9d66709444106748a1f03", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:impl-inline-without-trait.rs\n+// build-aux-docs\n+// ignore-cross-compile\n+\n+#![crate_name = \"foo\"]\n+\n+extern crate impl_inline_without_trait;\n+\n+// @has 'foo/struct.MyStruct.html'\n+// @has - '//*[@id=\"method.my_trait_method\"]' 'fn my_trait_method()'\n+// @has - '//*[@class=\"docblock\"]' 'docs for my_trait_method'\n+pub use impl_inline_without_trait::MyStruct;"}]}