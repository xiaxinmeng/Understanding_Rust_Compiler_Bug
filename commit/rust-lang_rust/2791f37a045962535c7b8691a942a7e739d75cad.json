{"sha": "2791f37a045962535c7b8691a942a7e739d75cad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3OTFmMzdhMDQ1OTYyNTM1YzdiODY5MWE5NDJhN2U3MzlkNzVjYWQ=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-06-24T08:50:14Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2020-06-24T09:30:41Z"}, "message": "Fix ts lints", "tree": {"sha": "d5bf7e9b39de44f1c872756b5e577281f91ff78c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5bf7e9b39de44f1c872756b5e577281f91ff78c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2791f37a045962535c7b8691a942a7e739d75cad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2791f37a045962535c7b8691a942a7e739d75cad", "html_url": "https://github.com/rust-lang/rust/commit/2791f37a045962535c7b8691a942a7e739d75cad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2791f37a045962535c7b8691a942a7e739d75cad/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "647b126da52b3dec1268df13b08c8a14744feb06", "url": "https://api.github.com/repos/rust-lang/rust/commits/647b126da52b3dec1268df13b08c8a14744feb06", "html_url": "https://github.com/rust-lang/rust/commit/647b126da52b3dec1268df13b08c8a14744feb06"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "14abbd5b794a0de462dc612a5d31c74a7be2459c", "filename": "editors/code/src/tasks.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2791f37a045962535c7b8691a942a7e739d75cad/editors%2Fcode%2Fsrc%2Ftasks.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2791f37a045962535c7b8691a942a7e739d75cad/editors%2Fcode%2Fsrc%2Ftasks.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Ftasks.ts?ref=2791f37a045962535c7b8691a942a7e739d75cad", "patch": "@@ -83,7 +83,7 @@ export async function buildCargoTask(\n             const customExec = await vscode.commands.executeCommand(runnerCommand, runnerArgs);\n             if (customExec) {\n                 if (customExec instanceof vscode.ShellExecution) {\n-                    exec = customExec as vscode.ShellExecution;\n+                    exec = customExec;\n                 } else {\n                     log.debug(\"Invalid cargo ShellExecution\", customExec);\n                     throw \"Invalid cargo ShellExecution.\";\n@@ -98,7 +98,7 @@ export async function buildCargoTask(\n     }\n \n     if (!exec) {\n-        exec = new vscode.ShellExecution(toolchain.cargoPath(), args, definition)\n+        exec = new vscode.ShellExecution(toolchain.cargoPath(), args, definition);\n     }\n \n     return new vscode.Task("}]}