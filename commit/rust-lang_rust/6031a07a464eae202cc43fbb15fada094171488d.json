{"sha": "6031a07a464eae202cc43fbb15fada094171488d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMzFhMDdhNDY0ZWFlMjAyY2M0M2ZiYjE1ZmFkYTA5NDE3MTQ4OGQ=", "commit": {"author": {"name": "Aleksa Sarai", "email": "cyphar@cyphar.com", "date": "2019-07-05T14:51:19Z"}, "committer": {"name": "Aleksa Sarai", "email": "cyphar@cyphar.com", "date": "2019-07-10T13:59:46Z"}, "message": "filedesc: don't use ioctl(FIOCLEX) on Linux\n\nAll ioctl(2)s will fail on O_PATH file descriptors on Linux (because\nthey use &empty_fops as a security measure against O_PATH descriptors\naffecting the backing file).\n\nAs a result, File::try_clone() and various other methods would always\nfail with -EBADF on O_PATH file descriptors. The solution is to simply\nuse F_SETFD (as is used on other unices) which works on O_PATH\ndescriptors because it operates through the fnctl(2) layer and not\nthrough ioctl(2)s.\n\nSince this code is usually only used in strange error paths (a broken or\nancient kernel), the extra overhead of one syscall shouldn't cause any\ndramas. Most other systems programming languages also use the fnctl(2)\nso this brings us in line with them.\n\nFixes: rust-lang/rust#62314\nSigned-off-by: Aleksa Sarai <cyphar@cyphar.com>", "tree": {"sha": "d7cab21a0799626ec0ddac28a5a1e4dd2c51e568", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7cab21a0799626ec0ddac28a5a1e4dd2c51e568"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6031a07a464eae202cc43fbb15fada094171488d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIgEABYIADAWIQSxZm6dtfE8gxLLfYqdlLljIbnQEgUCXSXvpRIcY3lwaGFyQGN5\ncGhhci5jb20ACgkQnZS5YyG50BJZ/QD5ATpB6z1zC5TdAJIixN7EXN3Rm+VXSOB1\nRWSzG54FMMIA/AlaIWmPnsLGFgrFutqCkbMbCGcfBzYuqUJa42qa3s0D\n=qt0a\n-----END PGP SIGNATURE-----", "payload": "tree d7cab21a0799626ec0ddac28a5a1e4dd2c51e568\nparent 481068a707679257e2a738b40987246e0420e787\nauthor Aleksa Sarai <cyphar@cyphar.com> 1562338279 +1000\ncommitter Aleksa Sarai <cyphar@cyphar.com> 1562767186 +1000\n\nfiledesc: don't use ioctl(FIOCLEX) on Linux\n\nAll ioctl(2)s will fail on O_PATH file descriptors on Linux (because\nthey use &empty_fops as a security measure against O_PATH descriptors\naffecting the backing file).\n\nAs a result, File::try_clone() and various other methods would always\nfail with -EBADF on O_PATH file descriptors. The solution is to simply\nuse F_SETFD (as is used on other unices) which works on O_PATH\ndescriptors because it operates through the fnctl(2) layer and not\nthrough ioctl(2)s.\n\nSince this code is usually only used in strange error paths (a broken or\nancient kernel), the extra overhead of one syscall shouldn't cause any\ndramas. Most other systems programming languages also use the fnctl(2)\nso this brings us in line with them.\n\nFixes: rust-lang/rust#62314\nSigned-off-by: Aleksa Sarai <cyphar@cyphar.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6031a07a464eae202cc43fbb15fada094171488d", "html_url": "https://github.com/rust-lang/rust/commit/6031a07a464eae202cc43fbb15fada094171488d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6031a07a464eae202cc43fbb15fada094171488d/comments", "author": {"login": "cyphar", "id": 2888411, "node_id": "MDQ6VXNlcjI4ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2888411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyphar", "html_url": "https://github.com/cyphar", "followers_url": "https://api.github.com/users/cyphar/followers", "following_url": "https://api.github.com/users/cyphar/following{/other_user}", "gists_url": "https://api.github.com/users/cyphar/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyphar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyphar/subscriptions", "organizations_url": "https://api.github.com/users/cyphar/orgs", "repos_url": "https://api.github.com/users/cyphar/repos", "events_url": "https://api.github.com/users/cyphar/events{/privacy}", "received_events_url": "https://api.github.com/users/cyphar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cyphar", "id": 2888411, "node_id": "MDQ6VXNlcjI4ODg0MTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2888411?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cyphar", "html_url": "https://github.com/cyphar", "followers_url": "https://api.github.com/users/cyphar/followers", "following_url": "https://api.github.com/users/cyphar/following{/other_user}", "gists_url": "https://api.github.com/users/cyphar/gists{/gist_id}", "starred_url": "https://api.github.com/users/cyphar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cyphar/subscriptions", "organizations_url": "https://api.github.com/users/cyphar/orgs", "repos_url": "https://api.github.com/users/cyphar/repos", "events_url": "https://api.github.com/users/cyphar/events{/privacy}", "received_events_url": "https://api.github.com/users/cyphar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "481068a707679257e2a738b40987246e0420e787", "url": "https://api.github.com/repos/rust-lang/rust/commits/481068a707679257e2a738b40987246e0420e787", "html_url": "https://github.com/rust-lang/rust/commit/481068a707679257e2a738b40987246e0420e787"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "0cecdd7ffa0b78624b20e486758876121edf0f15", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6031a07a464eae202cc43fbb15fada094171488d/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6031a07a464eae202cc43fbb15fada094171488d/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=6031a07a464eae202cc43fbb15fada094171488d", "patch": "@@ -175,6 +175,7 @@ impl FileDesc {\n                   target_os = \"emscripten\",\n                   target_os = \"fuchsia\",\n                   target_os = \"l4re\",\n+                  target_os = \"linux\",\n                   target_os = \"haiku\")))]\n     pub fn set_cloexec(&self) -> io::Result<()> {\n         unsafe {\n@@ -187,6 +188,7 @@ impl FileDesc {\n               target_os = \"emscripten\",\n               target_os = \"fuchsia\",\n               target_os = \"l4re\",\n+              target_os = \"linux\",\n               target_os = \"haiku\"))]\n     pub fn set_cloexec(&self) -> io::Result<()> {\n         unsafe {"}]}