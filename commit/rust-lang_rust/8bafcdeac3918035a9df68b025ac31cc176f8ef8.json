{"sha": "8bafcdeac3918035a9df68b025ac31cc176f8ef8", "node_id": "C_kwDOAAsO6NoAKDhiYWZjZGVhYzM5MTgwMzVhOWRmNjhiMDI1YWMzMWNjMTc2ZjhlZjg", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-06T22:42:38Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-05-07T11:41:37Z"}, "message": "Add `#[inline]` to functions that are never called", "tree": {"sha": "2703ba28be12fa61549c5c561fdcd06c4cb23c99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2703ba28be12fa61549c5c561fdcd06c4cb23c99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bafcdeac3918035a9df68b025ac31cc176f8ef8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bafcdeac3918035a9df68b025ac31cc176f8ef8", "html_url": "https://github.com/rust-lang/rust/commit/8bafcdeac3918035a9df68b025ac31cc176f8ef8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bafcdeac3918035a9df68b025ac31cc176f8ef8/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8660707bb22b2fa0ef6e2d37c60da20d9cf3d7b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8660707bb22b2fa0ef6e2d37c60da20d9cf3d7b9", "html_url": "https://github.com/rust-lang/rust/commit/8660707bb22b2fa0ef6e2d37c60da20d9cf3d7b9"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "faf48ae570fdd9ddd180f68216f5b39f14ef778a", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=8bafcdeac3918035a9df68b025ac31cc176f8ef8", "patch": "@@ -1412,6 +1412,7 @@ mod impls {\n \n     #[unstable(feature = \"never_type\", issue = \"35121\")]\n     impl PartialEq for ! {\n+        #[inline]\n         fn eq(&self, _: &!) -> bool {\n             *self\n         }\n@@ -1422,13 +1423,15 @@ mod impls {\n \n     #[unstable(feature = \"never_type\", issue = \"35121\")]\n     impl PartialOrd for ! {\n+        #[inline]\n         fn partial_cmp(&self, _: &!) -> Option<Ordering> {\n             *self\n         }\n     }\n \n     #[unstable(feature = \"never_type\", issue = \"35121\")]\n     impl Ord for ! {\n+        #[inline]\n         fn cmp(&self, _: &!) -> Ordering {\n             *self\n         }"}, {"sha": "38a6d1ccdb552d9bc7546fb6777670e16fb7ec91", "filename": "library/core/src/convert/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fconvert%2Fmod.rs?ref=8bafcdeac3918035a9df68b025ac31cc176f8ef8", "patch": "@@ -915,6 +915,7 @@ impl Ord for Infallible {\n \n #[stable(feature = \"convert_infallible\", since = \"1.34.0\")]\n impl From<!> for Infallible {\n+    #[inline]\n     fn from(x: !) -> Self {\n         x\n     }"}, {"sha": "7db9f40dd9860cfcd91a2a54d2860a50d4328594", "filename": "library/core/src/fmt/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffmt%2Fmod.rs?ref=8bafcdeac3918035a9df68b025ac31cc176f8ef8", "patch": "@@ -2269,13 +2269,15 @@ fmt_refs! { Debug, Display, Octal, Binary, LowerHex, UpperHex, LowerExp, UpperEx\n \n #[unstable(feature = \"never_type\", issue = \"35121\")]\n impl Debug for ! {\n+    #[inline]\n     fn fmt(&self, _: &mut Formatter<'_>) -> Result {\n         *self\n     }\n }\n \n #[unstable(feature = \"never_type\", issue = \"35121\")]\n impl Display for ! {\n+    #[inline]\n     fn fmt(&self, _: &mut Formatter<'_>) -> Result {\n         *self\n     }"}, {"sha": "3f2b1595d62b227beb495df359263d8c0f8c42f0", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=8bafcdeac3918035a9df68b025ac31cc176f8ef8", "patch": "@@ -2523,6 +2523,7 @@ macro_rules! assert_unsafe_precondition {\n                 }\n             }\n             #[allow(non_snake_case)]\n+            #[inline]\n             const fn comptime$(<$($tt)*>)?($(_:$ty),*) {}\n \n             ::core::intrinsics::const_eval_select(($($i,)*), comptime, runtime);"}, {"sha": "b95c01b0af7bba4d7e937f984a7d0d65de7588ad", "filename": "library/core/src/intrinsics/mir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs?ref=8bafcdeac3918035a9df68b025ac31cc176f8ef8", "patch": "@@ -265,6 +265,7 @@ pub struct BasicBlock;\n macro_rules! define {\n     ($name:literal, $( #[ $meta:meta ] )* fn $($sig:tt)*) => {\n         #[rustc_diagnostic_item = $name]\n+        #[inline]\n         $( #[ $meta ] )*\n         pub fn $($sig)* { panic!() }\n     }"}, {"sha": "14e99578a7c7d1b2e5557e6543c27a9315f7c0e6", "filename": "library/core/src/num/error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bafcdeac3918035a9df68b025ac31cc176f8ef8/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Ferror.rs?ref=8bafcdeac3918035a9df68b025ac31cc176f8ef8", "patch": "@@ -34,6 +34,7 @@ impl From<Infallible> for TryFromIntError {\n \n #[unstable(feature = \"never_type\", issue = \"35121\")]\n impl From<!> for TryFromIntError {\n+    #[inline]\n     fn from(never: !) -> TryFromIntError {\n         // Match rather than coerce to make sure that code like\n         // `From<Infallible> for TryFromIntError` above will keep working"}]}