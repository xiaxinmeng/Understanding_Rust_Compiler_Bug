{"sha": "7429c688a5988d1f7f836f870b8689c44fa3c9de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MjljNjg4YTU5ODhkMWY3ZjgzNmY4NzBiODY4OWM0NGZhM2M5ZGU=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-03-14T23:03:16Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-03-15T00:22:13Z"}, "message": "Don't encode file information for span with a dummy location\n\nFixes #83112\n\nThe location information for a dummy span isn't real, so don't encode\nit. This brings the incr comp cache code into line with the Span\n`StableHash` impl, which doesn't hash the location information for dummy\nspans.\n\nPreviously, we would attempt to load the 'original' file from a dummy\nspan - if the file id changed (e.g. due to being moved on disk), we would get an\nICE, since the Span was still valid due to its hash being unchanged.", "tree": {"sha": "360f3ca4256e037a2e46f635c0820ab3db613caf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/360f3ca4256e037a2e46f635c0820ab3db613caf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7429c688a5988d1f7f836f870b8689c44fa3c9de", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmBOqLYACgkQtAh+UQ6Y\nsWS9XA/8DNKTEguMld34eYLTFBQxRNOTmnbU0YUJxDTstpJsNMj0nlGbo8BpXMbP\nYm9srYK5qv4/Riz4naiZ8Nx91SP+LOoH9g9H8OkMzgFGZXCPWBjShH0xXzZULGxJ\nBO/hLFNoCC1QgwskM8qrrAoUn0j9vzk85mJbJcd+KhBlcaL/zRhYhU2JEgVgDe4z\ntYDN+BYupQWwQJFLqgnTPCzM+qCuWyM2oGir1VtEixSGtMvcYdumOOa1l9d85CYt\nHjV32tu7O1V7LH5lrtTrYg1Zor0sj+7+ZsimNSxxog/n65REJgFQjyFw05KFDqxD\nJlE8Ig4RJv1SookKUxnuKSGpep1ebMrev3lcNYWEIaazfHQ5NcBtpbCUwhlMBcfL\nuVyWUCBQ4jfb9ECVmU8eI9VoUXjBfBZZXbBe9bTcGPSp6mA7DL+qlnn3oI+eaepf\nKirHDr3kaJ3s8GeELV2Rq6ZLutCNqj6jM1TTurOBLJN8vV6INFINMv5ImxfN7D2Q\nT63d0MLSCgS2jctZq++Hce3O9wryhyaXXEAX6u3kek/KI/JjbRRMtpwidEI6oHfF\n8/QSYvZmZVDPnBm8ONs/SenmGERbLnN7s9P8nfBJDYJJIUJmckP0wPex71pYMafR\nKf+b5KJk7BNzyd++M4B8oRKDo4A3UyKZo5MUIe7ctb5zNMANey0=\n=jIg6\n-----END PGP SIGNATURE-----", "payload": "tree 360f3ca4256e037a2e46f635c0820ab3db613caf\nparent bb4cdf8ec034dca5c056ec9295f38062e5b7e871\nauthor Aaron Hill <aa1ronham@gmail.com> 1615762996 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1615767733 -0400\n\nDon't encode file information for span with a dummy location\n\nFixes #83112\n\nThe location information for a dummy span isn't real, so don't encode\nit. This brings the incr comp cache code into line with the Span\n`StableHash` impl, which doesn't hash the location information for dummy\nspans.\n\nPreviously, we would attempt to load the 'original' file from a dummy\nspan - if the file id changed (e.g. due to being moved on disk), we would get an\nICE, since the Span was still valid due to its hash being unchanged.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7429c688a5988d1f7f836f870b8689c44fa3c9de", "html_url": "https://github.com/rust-lang/rust/commit/7429c688a5988d1f7f836f870b8689c44fa3c9de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7429c688a5988d1f7f836f870b8689c44fa3c9de/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb4cdf8ec034dca5c056ec9295f38062e5b7e871", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb4cdf8ec034dca5c056ec9295f38062e5b7e871", "html_url": "https://github.com/rust-lang/rust/commit/bb4cdf8ec034dca5c056ec9295f38062e5b7e871"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "78193acc74acdfc729a3a2b03ac5de354692f82d", "filename": "compiler/rustc_middle/src/ty/query/on_disk_cache.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7429c688a5988d1f7f836f870b8689c44fa3c9de/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7429c688a5988d1f7f836f870b8689c44fa3c9de/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fquery%2Fon_disk_cache.rs?ref=7429c688a5988d1f7f836f870b8689c44fa3c9de", "patch": "@@ -1045,12 +1045,12 @@ where\n     E: 'a + OpaqueEncoder,\n {\n     fn encode(&self, s: &mut CacheEncoder<'a, 'tcx, E>) -> Result<(), E::Error> {\n-        if *self == DUMMY_SP {\n+        let span_data = self.data();\n+        if self.is_dummy() {\n             TAG_PARTIAL_SPAN.encode(s)?;\n-            return SyntaxContext::root().encode(s);\n+            return span_data.ctxt.encode(s);\n         }\n \n-        let span_data = self.data();\n         let pos = s.source_map.byte_pos_to_line_and_col(span_data.lo);\n         let partial_span = match &pos {\n             Some((file_lo, _, _)) => !file_lo.contains(span_data.hi),"}, {"sha": "76ecaba0f6a0bbdf96a044280006c2a4255701ff", "filename": "src/test/run-make/issue-83112-incr-test-moved-file/Makefile", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/7429c688a5988d1f7f836f870b8689c44fa3c9de/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/7429c688a5988d1f7f836f870b8689c44fa3c9de/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2FMakefile?ref=7429c688a5988d1f7f836f870b8689c44fa3c9de", "patch": "@@ -0,0 +1,25 @@\n+include ../../run-make-fulldeps/tools.mk\n+\n+# FIXME https://github.com/rust-lang/rust/issues/78911\n+# ignore-32bit wrong/no cross compiler and sometimes we pass wrong gcc args (-m64)\n+\n+# Regression test for issue #83112\n+# The generated test harness code contains spans with a dummy location,\n+# but a non-dummy SyntaxContext. Previously, the incremental cache was encoding\n+# these spans as a full span (with a source file index), instead of skipping\n+# the encoding of the location information. If the file gest moved, the hash\n+# of the span will be unchanged (since it has a dummy location), so the incr\n+# cache would end up try to load a non-existent file using the previously\n+# enccoded source file id.\n+\n+SRC=$(TMPDIR)/src\n+INCR=$(TMPDIR)/incr\n+\n+all:\n+\tmkdir $(SRC)\n+\tmkdir $(SRC)/mydir\n+\tmkdir $(INCR)\n+\tcp main.rs $(SRC)/main.rs\n+\t$(RUSTC) --test -C incremental=$(INCR) $(SRC)/main.rs\n+\tmv $(SRC)/main.rs $(SRC)/mydir/main.rs\n+\t$(RUSTC) --test -C incremental=$(INCR) $(SRC)/mydir/main.rs"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "src/test/run-make/issue-83112-incr-test-moved-file/main.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7429c688a5988d1f7f836f870b8689c44fa3c9de/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7429c688a5988d1f7f836f870b8689c44fa3c9de/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-83112-incr-test-moved-file%2Fmain.rs?ref=7429c688a5988d1f7f836f870b8689c44fa3c9de", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}]}