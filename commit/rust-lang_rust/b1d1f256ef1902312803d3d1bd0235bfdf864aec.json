{"sha": "b1d1f256ef1902312803d3d1bd0235bfdf864aec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZDFmMjU2ZWYxOTAyMzEyODAzZDNkMWJkMDIzNWJmZGY4NjRhZWM=", "commit": {"author": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-05-21T17:43:01Z"}, "committer": {"name": "CAD97", "email": "cad97@cad97.com", "date": "2020-05-21T17:56:49Z"}, "message": "Add a test for char ranges", "tree": {"sha": "ff3c12b95627f10f283ff456ce3d3d64295fd215", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff3c12b95627f10f283ff456ce3d3d64295fd215"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1d1f256ef1902312803d3d1bd0235bfdf864aec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d1f256ef1902312803d3d1bd0235bfdf864aec", "html_url": "https://github.com/rust-lang/rust/commit/b1d1f256ef1902312803d3d1bd0235bfdf864aec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1d1f256ef1902312803d3d1bd0235bfdf864aec/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27d1cd857e8998c423f329efce7c995a26dcdb6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d1cd857e8998c423f329efce7c995a26dcdb6c", "html_url": "https://github.com/rust-lang/rust/commit/27d1cd857e8998c423f329efce7c995a26dcdb6c"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "6605249f1800466e71d14557133c4f546dcddc05", "filename": "src/libcore/tests/iter.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b1d1f256ef1902312803d3d1bd0235bfdf864aec/src%2Flibcore%2Ftests%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1d1f256ef1902312803d3d1bd0235bfdf864aec/src%2Flibcore%2Ftests%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fiter.rs?ref=b1d1f256ef1902312803d3d1bd0235bfdf864aec", "patch": "@@ -1932,6 +1932,16 @@ fn test_range() {\n     );\n }\n \n+#[test]\n+fn test_char_range() {\n+    use std::char;\n+    assert!(('\\0'..=char::MAX).eq((0..=char::MAX as u32).filter_map(char::from_u32)));\n+    assert!(('\\0'..=char::MAX).rev().eq((0..=char::MAX as u32).filter_map(char::from_u32).rev()));\n+\n+    assert_eq!(('\\u{D7FF}'..='\\u{E000}').count(), 2);\n+    assert_eq!(('\\u{D7FF}'..'\\u{E000}').count(), 1);\n+}\n+\n #[test]\n fn test_range_exhaustion() {\n     let mut r = 10..10;"}]}