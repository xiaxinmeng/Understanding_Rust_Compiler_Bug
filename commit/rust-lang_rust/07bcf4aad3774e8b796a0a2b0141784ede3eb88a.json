{"sha": "07bcf4aad3774e8b796a0a2b0141784ede3eb88a", "node_id": "C_kwDOAAsO6NoAKDA3YmNmNGFhZDM3NzRlOGI3OTZhMGEyYjAxNDE3ODRlZGUzZWI4OGE", "commit": {"author": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2021-12-09T19:12:01Z"}, "committer": {"name": "Daniel Henry-Mantilla", "email": "daniel.henry.mantilla@gmail.com", "date": "2021-12-09T20:05:34Z"}, "message": "Bring back the colon separators for the macro munching.\n\nCo-Authored-By: Ibraheem Ahmed <ibrah1440@gmail.com>", "tree": {"sha": "827820ed5c0c5fd2eade6abad40ca4fb7440949e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/827820ed5c0c5fd2eade6abad40ca4fb7440949e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07bcf4aad3774e8b796a0a2b0141784ede3eb88a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07bcf4aad3774e8b796a0a2b0141784ede3eb88a", "html_url": "https://github.com/rust-lang/rust/commit/07bcf4aad3774e8b796a0a2b0141784ede3eb88a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07bcf4aad3774e8b796a0a2b0141784ede3eb88a/comments", "author": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "committer": {"login": "danielhenrymantilla", "id": 9920355, "node_id": "MDQ6VXNlcjk5MjAzNTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9920355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/danielhenrymantilla", "html_url": "https://github.com/danielhenrymantilla", "followers_url": "https://api.github.com/users/danielhenrymantilla/followers", "following_url": "https://api.github.com/users/danielhenrymantilla/following{/other_user}", "gists_url": "https://api.github.com/users/danielhenrymantilla/gists{/gist_id}", "starred_url": "https://api.github.com/users/danielhenrymantilla/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/danielhenrymantilla/subscriptions", "organizations_url": "https://api.github.com/users/danielhenrymantilla/orgs", "repos_url": "https://api.github.com/users/danielhenrymantilla/repos", "events_url": "https://api.github.com/users/danielhenrymantilla/events{/privacy}", "received_events_url": "https://api.github.com/users/danielhenrymantilla/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "846cb9c583712928e66658486a6066b60b6197a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/846cb9c583712928e66658486a6066b60b6197a4", "html_url": "https://github.com/rust-lang/rust/commit/846cb9c583712928e66658486a6066b60b6197a4"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "2d27b8edfd8004c6761a9399796611918ce35bb1", "filename": "library/core/src/future/join.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/07bcf4aad3774e8b796a0a2b0141784ede3eb88a/library%2Fcore%2Fsrc%2Ffuture%2Fjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07bcf4aad3774e8b796a0a2b0141784ede3eb88a/library%2Fcore%2Fsrc%2Ffuture%2Fjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ffuture%2Fjoin.rs?ref=07bcf4aad3774e8b796a0a2b0141784ede3eb88a", "patch": "@@ -48,9 +48,9 @@ use crate::task::{Context, Poll};\n pub macro join( $($fut:expr),+ $(,)? ) {\n     // Funnel through an internal macro not to leak implementation details.\n     join_internal! {\n-        current_position[]\n-        futures_and_positions[]\n-        munching[ $($fut)+ ]\n+        current_position: []\n+        futures_and_positions: []\n+        munching: [ $($fut)+ ]\n     }\n }\n \n@@ -64,44 +64,44 @@ macro join_internal {\n     // Recursion step: map each future with its \"position\" (underscore count).\n     (\n         // Accumulate a token for each future that has been expanded: \"_ _ _\".\n-        current_position[\n+        current_position: [\n             $($underscores:tt)*\n         ]\n         // Accumulate Futures and their positions in the tuple: `_0th ()   _1st ( _ ) \u2026`.\n-        futures_and_positions[\n+        futures_and_positions: [\n             $($acc:tt)*\n         ]\n         // Munch one future.\n-        munching[\n+        munching: [\n             $current:tt\n             $($rest:tt)*\n         ]\n     ) => (\n         join_internal! {\n-            current_position[\n+            current_position: [\n                 $($underscores)*\n                 _\n             ]\n-            futures_and_positions[\n+            futures_and_positions: [\n                 $($acc)*\n                 $current ( $($underscores)* )\n             ]\n-            munching[\n+            munching: [\n                 $($rest)*\n             ]\n         }\n     ),\n \n     // End of recursion: generate the output future.\n     (\n-        current_position $_:tt\n-        futures_and_positions[\n+        current_position: $_:tt\n+        futures_and_positions: [\n             $(\n                 $fut_expr:tt ( $($pos:tt)* )\n             )*\n         ]\n         // Nothing left to munch.\n-        munching[]\n+        munching: []\n     ) => (\n         match ( $( MaybeDone::Future($fut_expr), )* ) { futures => async {\n             let mut futures = futures;"}]}