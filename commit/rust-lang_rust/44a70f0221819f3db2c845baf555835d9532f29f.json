{"sha": "44a70f0221819f3db2c845baf555835d9532f29f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YTcwZjAyMjE4MTlmM2RiMmM4NDViYWY1NTU4MzVkOTUzMmYyOWY=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-12-11T15:47:51Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2017-01-03T07:48:29Z"}, "message": "Fix inhabitedness bug", "tree": {"sha": "b26e6a16cd2cfd99971f8e3e14fb036871756f62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b26e6a16cd2cfd99971f8e3e14fb036871756f62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44a70f0221819f3db2c845baf555835d9532f29f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44a70f0221819f3db2c845baf555835d9532f29f", "html_url": "https://github.com/rust-lang/rust/commit/44a70f0221819f3db2c845baf555835d9532f29f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44a70f0221819f3db2c845baf555835d9532f29f/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7946597f7556dc8e1ad05e02d7e82b4ff800a5ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/7946597f7556dc8e1ad05e02d7e82b4ff800a5ac", "html_url": "https://github.com/rust-lang/rust/commit/7946597f7556dc8e1ad05e02d7e82b4ff800a5ac"}], "stats": {"total": 25, "additions": 13, "deletions": 12}, "files": [{"sha": "5acffca26790c7671522a7eacc4abed7336dda04", "filename": "src/librustc/ty/inhabitedness.rs", "status": "modified", "additions": 13, "deletions": 12, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/44a70f0221819f3db2c845baf555835d9532f29f/src%2Flibrustc%2Fty%2Finhabitedness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44a70f0221819f3db2c845baf555835d9532f29f/src%2Flibrustc%2Fty%2Finhabitedness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finhabitedness.rs?ref=44a70f0221819f3db2c845baf555835d9532f29f", "patch": "@@ -186,18 +186,19 @@ impl<'a, 'gcx, 'tcx> FieldDef {\n                 substs: &'tcx Substs<'tcx>,\n                 is_enum: bool) -> NodeForrest\n     {\n-        if let Visibility::PrivateExternal = self.vis {\n-            return NodeForrest::empty();\n-        }\n-\n-        let data_inhabitedness = self.ty(tcx, substs).uninhabited_from(visited, tcx);\n-        match self.vis {\n-            Visibility::Restricted(from) if !is_enum => {\n-                let node_set = NodeForrest::from_node(from);\n-                let iter = Some(node_set).into_iter().chain(Some(data_inhabitedness));\n-                NodeForrest::intersection(tcx, iter)\n-            },\n-            _ => data_inhabitedness,\n+        let mut data_uninhabitedness = move || self.ty(tcx, substs).uninhabited_from(visited, tcx);\n+        if is_enum {\n+            data_uninhabitedness()\n+        } else {\n+            match self.vis {\n+                Visibility::PrivateExternal => NodeForrest::empty(),\n+                Visibility::Restricted(from) => {\n+                    let node_set = NodeForrest::from_node(from);\n+                    let iter = Some(node_set).into_iter().chain(Some(data_uninhabitedness()));\n+                    NodeForrest::intersection(tcx, iter)\n+                },\n+                Visibility::Public => data_uninhabitedness(),\n+            }\n         }\n     }\n }"}]}