{"sha": "381bd2a836f96c9dede1f5ee740e70194d6fb149", "node_id": "C_kwDOAAsO6NoAKDM4MWJkMmE4MzZmOTZjOWRlZGUxZjVlZTc0MGU3MDE5NGQ2ZmIxNDk", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-20T18:03:40Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-09-22T17:34:01Z"}, "message": "Revert \"Auto merge of #101862 - cjgillot:lint-regression, r=oli-obk\"\n\nThis reverts commit bc7b17cfe3bf08b618d1c7b64838053faeb1f590, reversing\nchanges made to 5253b0a0a1f366fad0ebed57597fcf2703b9e893.", "tree": {"sha": "e5d51dee778edcc1c9ca2158bd24470a0b9a8b90", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5d51dee778edcc1c9ca2158bd24470a0b9a8b90"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/381bd2a836f96c9dede1f5ee740e70194d6fb149", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/381bd2a836f96c9dede1f5ee740e70194d6fb149", "html_url": "https://github.com/rust-lang/rust/commit/381bd2a836f96c9dede1f5ee740e70194d6fb149", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/381bd2a836f96c9dede1f5ee740e70194d6fb149/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ab71ab59fd17a1c51d23b68eced935b92431b70", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ab71ab59fd17a1c51d23b68eced935b92431b70", "html_url": "https://github.com/rust-lang/rust/commit/8ab71ab59fd17a1c51d23b68eced935b92431b70"}], "stats": {"total": 22, "additions": 9, "deletions": 13}, "files": [{"sha": "30a23c342b3560c35307a4fbd4054aa5207fbd93", "filename": "compiler/rustc_middle/src/hir/map/mod.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/381bd2a836f96c9dede1f5ee740e70194d6fb149/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381bd2a836f96c9dede1f5ee740e70194d6fb149/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fhir%2Fmap%2Fmod.rs?ref=381bd2a836f96c9dede1f5ee740e70194d6fb149", "patch": "@@ -61,7 +61,7 @@ pub struct ParentHirIterator<'hir> {\n }\n \n impl<'hir> Iterator for ParentHirIterator<'hir> {\n-    type Item = HirId;\n+    type Item = (HirId, Node<'hir>);\n \n     fn next(&mut self) -> Option<Self::Item> {\n         if self.current_id == CRATE_HIR_ID {\n@@ -77,7 +77,10 @@ impl<'hir> Iterator for ParentHirIterator<'hir> {\n             }\n \n             self.current_id = parent_id;\n-            return Some(parent_id);\n+            if let Some(node) = self.map.find(parent_id) {\n+                return Some((parent_id, node));\n+            }\n+            // If this `HirId` doesn't have an entry, skip it and look for its `parent_id`.\n         }\n     }\n }\n@@ -390,8 +393,8 @@ impl<'hir> Map<'hir> {\n     }\n \n     pub fn enclosing_body_owner(self, hir_id: HirId) -> LocalDefId {\n-        for (_, node) in self.parent_iter(hir_id) {\n-            if let Some(body) = associated_body(node) {\n+        for (parent, _) in self.parent_iter(hir_id) {\n+            if let Some(body) = self.find(parent).map(associated_body).flatten() {\n                 return self.body_owner_def_id(body);\n             }\n         }\n@@ -632,17 +635,10 @@ impl<'hir> Map<'hir> {\n     /// Returns an iterator for the nodes in the ancestor tree of the `current_id`\n     /// until the crate root is reached. Prefer this over your own loop using `get_parent_node`.\n     #[inline]\n-    pub fn parent_id_iter(self, current_id: HirId) -> impl Iterator<Item = HirId> + 'hir {\n+    pub fn parent_iter(self, current_id: HirId) -> ParentHirIterator<'hir> {\n         ParentHirIterator { current_id, map: self }\n     }\n \n-    /// Returns an iterator for the nodes in the ancestor tree of the `current_id`\n-    /// until the crate root is reached. Prefer this over your own loop using `get_parent_node`.\n-    #[inline]\n-    pub fn parent_iter(self, current_id: HirId) -> impl Iterator<Item = (HirId, Node<'hir>)> {\n-        self.parent_id_iter(current_id).filter_map(move |id| Some((id, self.find(id)?)))\n-    }\n-\n     /// Returns an iterator for the nodes in the ancestor tree of the `current_id`\n     /// until the crate root is reached. Prefer this over your own loop using `get_parent_node`.\n     #[inline]"}, {"sha": "4cb5ef791777490b760ce4da5ab7170362ef5f19", "filename": "compiler/rustc_middle/src/lint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/381bd2a836f96c9dede1f5ee740e70194d6fb149/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/381bd2a836f96c9dede1f5ee740e70194d6fb149/compiler%2Frustc_middle%2Fsrc%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flint.rs?ref=381bd2a836f96c9dede1f5ee740e70194d6fb149", "patch": "@@ -126,7 +126,7 @@ impl ShallowLintLevelMap {\n             return (Some(level), src);\n         }\n \n-        for parent in tcx.hir().parent_id_iter(start) {\n+        for (parent, _) in tcx.hir().parent_iter(start) {\n             let specs = tcx.shallow_lint_levels_on(parent);\n             if let Some(&(level, src)) = specs.specs.get(&id) {\n                 return (Some(level), src);"}]}