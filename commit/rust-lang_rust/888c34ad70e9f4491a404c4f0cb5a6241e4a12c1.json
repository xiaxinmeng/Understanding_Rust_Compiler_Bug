{"sha": "888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4OGMzNGFkNzBlOWY0NDkxYTQwNGM0ZjBjYjVhNjI0MWU0YTEyYzE=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-08-30T15:26:57Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-08-31T16:22:36Z"}, "message": "Remove all `union` stuffs\n\nThe rustc's PR wasn't merged. Hopefully this commit can simply be reverted when it's time.", "tree": {"sha": "964649f0e93c16e91c8b8d44fdfdf536bbd0bfcd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/964649f0e93c16e91c8b8d44fdfdf536bbd0bfcd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJXxwRMAAoJEF5CfHlMukXowi8P/R4xntSuwtLwdvpvqFuRjzZw\nke6G0kDO/ldH0HvUSvXRiWhLSx30qiKtkQN9C4xwwjXS31SvZr0pjus1W2tIpt5h\ngQlaGuFaoAyH3MxNIOaE/aM/Ko/TWzHLK+tHPUhg7/+mCPoA7zynFHfn1MelRFzU\nS1EyuTyJHCw8sw+RN77oePsU3KJT160Iurm2vMpfzLuE52Cpfr3Fi9e4SMvNXk6n\ndocTBklCuhfzs8XjV05Sf5VOJkP2RLDAzEtyq0SUOHc8BmoK5PTprV5lr0WWbRjx\nbTGoaUTeuzcLCZ8vqFjBi7BG1B+uaMdHwz5rY7Eyld57CNHFO/ZcZAX1F5Gjmo4w\nf79y1gUWyy6HnfgtrL8zVM/h6m5AB1dJ337NUWDvyv/Ys7q/fqLH+To6oMq5CIMY\nZN8em+b1i4hqKG2hOqXtAYtbi0MQCt4knJbUhUOlNDfeTWuKbYZ9jJRQ9HjgBSNP\ndYagtpvHSCcCAUJB6fs7keHqttzEnQDu1wsrZuhtS3KZmYFdHQto107RSwPJzInA\nBDR67DYUilopqSrKQJB1w+4T/ibGfWH53ZZISk0zwq38wiAxZw64M8Ki6jv7NQgp\ngEBelYI4NNDQaj0DtCxrjKnXYFj2RmitUDK9KCM3VmIA0mfr18TaIstj2mrB1v7G\nAOi/SKJXygppH8Z0mZyD\n=MRss\n-----END PGP SIGNATURE-----", "payload": "tree 964649f0e93c16e91c8b8d44fdfdf536bbd0bfcd\nparent 01424f5622cff4f823a7b797f679bee349e54d8e\nauthor mcarton <cartonmartin+git@gmail.com> 1472570817 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1472660556 +0200\n\nRemove all `union` stuffs\n\nThe rustc's PR wasn't merged. Hopefully this commit can simply be reverted when it's time.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "html_url": "https://github.com/rust-lang/rust/commit/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01424f5622cff4f823a7b797f679bee349e54d8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/01424f5622cff4f823a7b797f679bee349e54d8e", "html_url": "https://github.com/rust-lang/rust/commit/01424f5622cff4f823a7b797f679bee349e54d8e"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "2311df424562023e2b467f235f7622af1f633d60", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "patch": "@@ -141,7 +141,7 @@ fn check_copy_clone<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, item: &Item, trait_ref\n         }\n \n         match ty.sty {\n-            TypeVariants::TyUnion(..) => return,\n+            //FIXME:unions: TypeVariants::TyUnion(..) => return,\n \n             // Some types are not Clone by default but could be cloned \u201cby hand\u201d if necessary\n             TypeVariants::TyEnum(def, substs) |"}, {"sha": "9b18eed93ee9163024582a2114172f5c5d081473", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "patch": "@@ -209,8 +209,8 @@ fn has_is_empty(cx: &LateContext, expr: &Expr) -> bool {\n         }\n         ty::TyProjection(_) => ty.ty_to_def_id().map_or(false, |id| has_is_empty_impl(cx, &id)),\n         ty::TyEnum(id, _) |\n-        ty::TyStruct(id, _) |\n-        ty::TyUnion(id, _) => has_is_empty_impl(cx, &id.did),\n+        ty::TyStruct(id, _) /*FIXME:unions: |\n+        ty::TyUnion(id, _)*/ => has_is_empty_impl(cx, &id.did),\n         ty::TyArray(..) | ty::TyStr => true,\n         _ => false,\n     }"}, {"sha": "bd6354ad93235a37e8d14b44a20ed2cdcd7fdedb", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "patch": "@@ -123,7 +123,7 @@ impl LateLintPass for MissingDoc {\n             hir::ItemStruct(..) => \"a struct\",\n             hir::ItemTrait(..) => \"a trait\",\n             hir::ItemTy(..) => \"a type alias\",\n-            hir::ItemUnion(..) => \"a union\",\n+            //FIXME:unions: hir::ItemUnion(..) => \"a union\",\n             hir::ItemDefaultImpl(..) |\n             hir::ItemExternCrate(..) |\n             hir::ItemForeignMod(..) |"}, {"sha": "39d9dde288195fd93fbe87acd974abbb33ae1201", "filename": "tests/compile-fail/derive.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/tests%2Fcompile-fail%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/tests%2Fcompile-fail%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fderive.rs?ref=888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "patch": "@@ -1,7 +1,7 @@\n #![feature(plugin)]\n #![plugin(clippy)]\n \n-#![feature(untagged_unions)]\n+//FIXME:unions: #![feature(untagged_unions)]\n \n #![deny(warnings)]\n #![allow(dead_code)]\n@@ -47,6 +47,7 @@ impl Clone for Qux {\n     fn clone(&self) -> Self { Qux }\n }\n \n+/* FIXME:unions\n // looks like unions don't support deriving Clone for now\n #[derive(Copy)]\n union Union {\n@@ -60,6 +61,7 @@ impl Clone for Union {\n         }\n     }\n }\n+*/\n \n // See #666\n #[derive(Copy)]"}, {"sha": "39b59a599073e45230e53a8afcc3ef90e4ec8133", "filename": "tests/compile-fail/no_effect.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/tests%2Fcompile-fail%2Fno_effect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/888c34ad70e9f4491a404c4f0cb5a6241e4a12c1/tests%2Fcompile-fail%2Fno_effect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fno_effect.rs?ref=888c34ad70e9f4491a404c4f0cb5a6241e4a12c1", "patch": "@@ -4,7 +4,7 @@\n #![deny(no_effect, unnecessary_operation)]\n #![allow(dead_code)]\n #![allow(path_statements)]\n-#![feature(untagged_unions)]\n+//FIXME:unions #![feature(untagged_unions)]\n \n struct Unit;\n struct Tuple(i32);\n@@ -16,10 +16,12 @@ enum Enum {\n     Struct { field: i32 },\n }\n \n+/*FIXME:unions:\n union Union {\n     a: u8,\n     b: f64,\n }\n+*/\n \n fn get_number() -> i32 { 0 }\n fn get_struct() -> Struct { Struct { field: 0 } }\n@@ -36,7 +38,7 @@ fn main() {\n     Tuple(0); //~ERROR statement with no effect\n     Struct { field: 0 }; //~ERROR statement with no effect\n     Struct { ..s }; //~ERROR statement with no effect\n-    Union { a: 0 }; //~ERROR statement with no effect\n+    //FIXME:unions: Union { a: 0 }; // /**FIXME*~***/ ERROR statement with no effect\n     Enum::Tuple(0); //~ERROR statement with no effect\n     Enum::Struct { field: 0 }; //~ERROR statement with no effect\n     5 + 6; //~ERROR statement with no effect"}]}