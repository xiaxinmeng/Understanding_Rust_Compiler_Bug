{"sha": "3250e655007a2140898d46c04df0f48c2f149dd2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNTBlNjU1MDA3YTIxNDA4OThkNDZjMDRkZjBmNDhjMmYxNDlkZDI=", "commit": {"author": {"name": "Carl-Anton Ingmarsson", "email": "mail@carlanton.se", "date": "2014-01-02T18:48:30Z"}, "committer": {"name": "Carl-Anton Ingmarsson", "email": "mail@carlanton.se", "date": "2014-01-02T22:22:47Z"}, "message": "libextra: Add benchmarks for ebml::reader::vuint_at()", "tree": {"sha": "75331804ad966fffbe66cf12f0b00c3bc60ce99e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/75331804ad966fffbe66cf12f0b00c3bc60ce99e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3250e655007a2140898d46c04df0f48c2f149dd2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3250e655007a2140898d46c04df0f48c2f149dd2", "html_url": "https://github.com/rust-lang/rust/commit/3250e655007a2140898d46c04df0f48c2f149dd2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3250e655007a2140898d46c04df0f48c2f149dd2/comments", "author": {"login": "c-a", "id": 804040, "node_id": "MDQ6VXNlcjgwNDA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/804040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-a", "html_url": "https://github.com/c-a", "followers_url": "https://api.github.com/users/c-a/followers", "following_url": "https://api.github.com/users/c-a/following{/other_user}", "gists_url": "https://api.github.com/users/c-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-a/subscriptions", "organizations_url": "https://api.github.com/users/c-a/orgs", "repos_url": "https://api.github.com/users/c-a/repos", "events_url": "https://api.github.com/users/c-a/events{/privacy}", "received_events_url": "https://api.github.com/users/c-a/received_events", "type": "User", "site_admin": false}, "committer": {"login": "c-a", "id": 804040, "node_id": "MDQ6VXNlcjgwNDA0MA==", "avatar_url": "https://avatars.githubusercontent.com/u/804040?v=4", "gravatar_id": "", "url": "https://api.github.com/users/c-a", "html_url": "https://github.com/c-a", "followers_url": "https://api.github.com/users/c-a/followers", "following_url": "https://api.github.com/users/c-a/following{/other_user}", "gists_url": "https://api.github.com/users/c-a/gists{/gist_id}", "starred_url": "https://api.github.com/users/c-a/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/c-a/subscriptions", "organizations_url": "https://api.github.com/users/c-a/orgs", "repos_url": "https://api.github.com/users/c-a/repos", "events_url": "https://api.github.com/users/c-a/events{/privacy}", "received_events_url": "https://api.github.com/users/c-a/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0df9b850ac1ed3abd0ff5abfbb716af83501dd5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0df9b850ac1ed3abd0ff5abfbb716af83501dd5a", "html_url": "https://github.com/rust-lang/rust/commit/0df9b850ac1ed3abd0ff5abfbb716af83501dd5a"}], "stats": {"total": 84, "additions": 84, "deletions": 0}, "files": [{"sha": "4a47af46afe0e055a98fca40baabd9f2d58a97d8", "filename": "src/libextra/ebml.rs", "status": "modified", "additions": 84, "deletions": 0, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/3250e655007a2140898d46c04df0f48c2f149dd2/src%2Flibextra%2Febml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3250e655007a2140898d46c04df0f48c2f149dd2/src%2Flibextra%2Febml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Febml.rs?ref=3250e655007a2140898d46c04df0f48c2f149dd2", "patch": "@@ -960,3 +960,87 @@ mod tests {\n         test_v(Some(3));\n     }\n }\n+\n+#[cfg(test)]\n+mod bench {\n+    use ebml::reader;\n+    use test::BenchHarness;\n+\n+    #[bench]\n+    pub fn vuint_at_A_aligned(bh: &mut BenchHarness) {\n+        use std::vec;\n+        let data = vec::from_fn(4*100, |i| {\n+            match (i % 2) {\n+              0 => 0x80u8,\n+              _ => i as u8,\n+            }\n+        });\n+        let mut sum = 0u;\n+        bh.iter(|| {\n+            let mut i = 0;\n+            while (i < data.len()) {\n+                sum += reader::vuint_at(data, i).val;\n+                i += 4;\n+            }\n+        });\n+    }\n+\n+    #[bench]\n+    pub fn vuint_at_A_unaligned(bh: &mut BenchHarness) {\n+        use std::vec;\n+        let data = vec::from_fn(4*100+1, |i| {\n+            match (i % 2) {\n+              1 => 0x80u8,\n+              _ => i as u8\n+            }\n+        });\n+        let mut sum = 0u;\n+        bh.iter(|| {\n+            let mut i = 1;\n+            while (i < data.len()) {\n+                sum += reader::vuint_at(data, i).val;\n+                i += 4;\n+            }\n+        });\n+    }\n+\n+    #[bench]\n+    pub fn vuint_at_D_aligned(bh: &mut BenchHarness) {\n+        use std::vec;\n+        let data = vec::from_fn(4*100, |i| {\n+            match (i % 4) {\n+              0 => 0x10u8,\n+              3 => i as u8,\n+              _ => 0u8\n+            }\n+        });\n+        let mut sum = 0u;\n+        bh.iter(|| {\n+            let mut i = 0;\n+            while (i < data.len()) {\n+                sum += reader::vuint_at(data, i).val;\n+                i += 4;\n+            }\n+        });\n+    }\n+\n+    #[bench]\n+    pub fn vuint_at_D_unaligned(bh: &mut BenchHarness) {\n+        use std::vec;\n+        let data = vec::from_fn(4*100+1, |i| {\n+            match (i % 4) {\n+              1 => 0x10u8,\n+              0 => i as u8,\n+              _ => 0u8\n+            }\n+        });\n+        let mut sum = 0u;\n+        bh.iter(|| {\n+            let mut i = 1;\n+            while (i < data.len()) {\n+                sum += reader::vuint_at(data, i).val;\n+                i += 4;\n+            }\n+        });\n+    }\n+}"}]}