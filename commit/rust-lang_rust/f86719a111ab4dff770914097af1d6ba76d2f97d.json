{"sha": "f86719a111ab4dff770914097af1d6ba76d2f97d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4NjcxOWExMTFhYjRkZmY3NzA5MTQwOTdhZjFkNmJhNzZkMmY5N2Q=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-22T00:43:46Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-09T02:16:34Z"}, "message": "Some more cleanup in libsyntax::ext::tt::quoted", "tree": {"sha": "d59482dbd12c41ab62117ce764605f4a92428186", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d59482dbd12c41ab62117ce764605f4a92428186"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f86719a111ab4dff770914097af1d6ba76d2f97d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f86719a111ab4dff770914097af1d6ba76d2f97d", "html_url": "https://github.com/rust-lang/rust/commit/f86719a111ab4dff770914097af1d6ba76d2f97d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f86719a111ab4dff770914097af1d6ba76d2f97d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab7d75d89bbca8968c1edd5a69d921b306ca0cba", "html_url": "https://github.com/rust-lang/rust/commit/ab7d75d89bbca8968c1edd5a69d921b306ca0cba"}], "stats": {"total": 19, "additions": 8, "deletions": 11}, "files": [{"sha": "4920ddfbfe564c33a0ac898ac3f9d551c0ba6565", "filename": "src/libsyntax/ext/tt/quoted.rs", "status": "modified", "additions": 8, "deletions": 11, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f86719a111ab4dff770914097af1d6ba76d2f97d/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f86719a111ab4dff770914097af1d6ba76d2f97d/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fquoted.rs?ref=f86719a111ab4dff770914097af1d6ba76d2f97d", "patch": "@@ -249,19 +249,16 @@ pub fn parse(\n /// - `sess`: the parsing session. Any errors will be emitted to this session.\n /// - `features`, `attrs`: language feature flags and attributes so that we know whether to use\n ///   unstable features or not.\n-fn parse_tree<I>(\n+fn parse_tree(\n     tree: tokenstream::TokenTree,\n-    trees: &mut Peekable<I>,\n+    trees: &mut Peekable<impl Iterator<Item = tokenstream::TokenTree>>,\n     expect_matchers: bool,\n     sess: &ParseSess,\n     features: &Features,\n     attrs: &[ast::Attribute],\n     edition: Edition,\n     macro_node_id: NodeId,\n-) -> TokenTree\n-where\n-    I: Iterator<Item = tokenstream::TokenTree>,\n-{\n+) -> TokenTree {\n     // Depending on what `tree` is, we could be parsing different parts of a macro\n     match tree {\n         // `tree` is a `$` token. Look at the next token in `trees`\n@@ -365,10 +362,10 @@ fn kleene_op(token: &Token) -> Option<KleeneOp> {\n /// - Ok(Ok((op, span))) if the next token tree is a KleeneOp\n /// - Ok(Err(tok, span)) if the next token tree is a token but not a KleeneOp\n /// - Err(span) if the next token tree is not a token\n-fn parse_kleene_op<I>(input: &mut I, span: Span) -> Result<Result<(KleeneOp, Span), Token>, Span>\n-where\n-    I: Iterator<Item = tokenstream::TokenTree>,\n-{\n+fn parse_kleene_op(\n+    input: &mut impl Iterator<Item = tokenstream::TokenTree>,\n+    span: Span,\n+) -> Result<Result<(KleeneOp, Span), Token>, Span> {\n     match input.next() {\n         Some(tokenstream::TokenTree::Token(token)) => match kleene_op(&token) {\n             Some(op) => Ok(Ok((op, token.span))),\n@@ -378,7 +375,7 @@ where\n             .as_ref()\n             .map(tokenstream::TokenTree::span)\n             .unwrap_or(span)),\n-    }\n+    }   \n }\n \n /// Attempt to parse a single Kleene star, possibly with a separator."}]}