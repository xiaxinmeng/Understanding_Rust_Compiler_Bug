{"sha": "5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjZjBjNjU4ZjNjMjZhNmRmNzMwZWMzZWIwYjQ0NzIzNGQyMTBjOWQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-10-17T18:07:01Z"}, "committer": {"name": "Tim Chevalier", "email": "catamorphism@gmail.com", "date": "2012-10-17T18:07:01Z"}, "message": "Merge pull request #3764 from lucab/lucab/to-upstream/pull-3\n\nUse gpgv for signature verification in cargo", "tree": {"sha": "11d35758892f887a1c9998474753d877f696907d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11d35758892f887a1c9998474753d877f696907d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "html_url": "https://github.com/rust-lang/rust/commit/5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5cf0c658f3c26a6df730ec3eb0b447234d210c9d/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5e71f523a84ea59321060a21a178e3e755aacd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e71f523a84ea59321060a21a178e3e755aacd6", "html_url": "https://github.com/rust-lang/rust/commit/f5e71f523a84ea59321060a21a178e3e755aacd6"}, {"sha": "01aaeef619cc249a6c4555b3c865bb081e5b80c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/01aaeef619cc249a6c4555b3c865bb081e5b80c5", "html_url": "https://github.com/rust-lang/rust/commit/01aaeef619cc249a6c4555b3c865bb081e5b80c5"}], "stats": {"total": 60, "additions": 29, "deletions": 31}, "files": [{"sha": "322d78004208903b463fe47a64f53a4b6fe8aaa6", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 18, "deletions": 19, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5cf0c658f3c26a6df730ec3eb0b447234d210c9d/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf0c658f3c26a6df730ec3eb0b447234d210c9d/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "patch": "@@ -1162,20 +1162,20 @@ fn sync_one_file(c: &Cargo, dir: &Path, src: @Source) -> bool {\n     }\n     match (src.key, src.keyfp) {\n         (Some(_), Some(f)) => {\n-            let r = pgp::verify(&c.root, &pkgfile, &sigfile, f);\n+            let r = pgp::verify(&c.root, &pkgfile, &sigfile);\n \n             if !r {\n-                error(fmt!(\"signature verification failed for source %s\",\n-                          name));\n+                error(fmt!(\"signature verification failed for source %s with key %s\",\n+                          name, f));\n                 return false;\n             }\n \n             if has_src_file {\n-                let e = pgp::verify(&c.root, &srcfile, &srcsigfile, f);\n+                let e = pgp::verify(&c.root, &srcfile, &srcsigfile);\n \n                 if !e {\n-                    error(fmt!(\"signature verification failed for source %s\",\n-                              name));\n+                    error(fmt!(\"signature verification failed for source %s with key %s\",\n+                              name, f));\n                     return false;\n                 }\n             }\n@@ -1273,21 +1273,21 @@ fn sync_one_git(c: &Cargo, dir: &Path, src: @Source) -> bool {\n     }\n     match (src.key, src.keyfp) {\n         (Some(_), Some(f)) => {\n-            let r = pgp::verify(&c.root, &pkgfile, &sigfile, f);\n+            let r = pgp::verify(&c.root, &pkgfile, &sigfile);\n \n             if !r {\n-                error(fmt!(\"signature verification failed for source %s\",\n-                          name));\n+                error(fmt!(\"signature verification failed for source %s with key %s\",\n+                          name, f));\n                 rollback(name, dir, false);\n                 return false;\n             }\n \n             if has_src_file {\n-                let e = pgp::verify(&c.root, &srcfile, &srcsigfile, f);\n+                let e = pgp::verify(&c.root, &srcfile, &srcsigfile);\n \n                 if !e {\n-                    error(fmt!(\"signature verification failed for source %s\",\n-                              name));\n+                    error(fmt!(\"signature verification failed for source %s with key %s\",\n+                              name, f));\n                     rollback(name, dir, false);\n                     return false;\n                 }\n@@ -1370,11 +1370,11 @@ fn sync_one_curl(c: &Cargo, dir: &Path, src: @Source) -> bool {\n                 return false;\n             }\n \n-            let r = pgp::verify(&c.root, &pkgfile, &sigfile, f);\n+            let r = pgp::verify(&c.root, &pkgfile, &sigfile);\n \n             if !r {\n-                error(fmt!(\"signature verification failed for source %s\",\n-                          name));\n+                error(fmt!(\"signature verification failed for source %s with key %s\",\n+                          name, f));\n                 return false;\n             }\n \n@@ -1390,11 +1390,11 @@ fn sync_one_curl(c: &Cargo, dir: &Path, src: @Source) -> bool {\n                     return false;\n                 }\n \n-                let e = pgp::verify(&c.root, &srcfile, &srcsigfile, f);\n+                let e = pgp::verify(&c.root, &srcfile, &srcsigfile);\n \n                 if !e {\n                     error(~\"signature verification failed for \" +\n-                          ~\"source \" + name);\n+                          ~\"source \" + name + ~\" with key \" + f);\n                     return false;\n                 }\n             }\n@@ -1463,8 +1463,7 @@ fn cmd_init(c: &Cargo) {\n         return;\n     }\n \n-    let r = pgp::verify(&c.root, &srcfile, &sigfile,\n-                        pgp::signing_key_fp());\n+    let r = pgp::verify(&c.root, &srcfile, &sigfile);\n     if !r {\n         error(fmt!(\"signature verification failed for '%s'\",\n                    srcfile.to_str()));"}, {"sha": "5fbfa55838c8efb529d47d7b343fd9992ac92be0", "filename": "src/cargo/pgp.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5cf0c658f3c26a6df730ec3eb0b447234d210c9d/src%2Fcargo%2Fpgp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5cf0c658f3c26a6df730ec3eb0b447234d210c9d/src%2Fcargo%2Fpgp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fpgp.rs?ref=5cf0c658f3c26a6df730ec3eb0b447234d210c9d", "patch": "@@ -1,5 +1,5 @@\n-fn gpg(args: ~[~str]) -> { status: int, out: ~str, err: ~str } {\n-    return run::program_output(~\"gpg\", args);\n+fn gpgv(args: ~[~str]) -> { status: int, out: ~str, err: ~str } {\n+    return run::program_output(~\"gpgv\", args);\n }\n \n fn signing_key() -> ~str {\n@@ -59,7 +59,7 @@ fn signing_key_fp() -> ~str {\n }\n \n fn supported() -> bool {\n-    let r = gpg(~[~\"--version\"]);\n+    let r = gpgv(~[~\"--version\"]);\n     r.status == 0\n }\n \n@@ -88,15 +88,14 @@ fn add(root: &Path, key: &Path) {\n     }\n }\n \n-fn verify(root: &Path, data: &Path, sig: &Path, keyfp: ~str) -> bool {\n+fn verify(root: &Path, data: &Path, sig: &Path) -> bool {\n     let path = root.push(\"gpg\");\n-    let p = gpg(~[~\"--homedir\", path.to_str(),\n-                  ~\"--with-fingerprint\",\n-                  ~\"--verify\", sig.to_str(),\n-                 data.to_str()]);\n-    let res = ~\"Primary key fingerprint: \" + keyfp;\n-    for str::split_char_each(p.err, '\\n') |line| {\n-        if line == res { return true; }\n+    let res = gpgv(~[~\"--homedir\", path.to_str(),\n+                  ~\"--keyring\", ~\"pubring.gpg\",\n+                  ~\"--verbose\",\n+                 sig.to_str(), data.to_str()]);\n+    if res.status != 0 {\n+        return false;\n     }\n-    return false;\n+    return true;\n }"}]}