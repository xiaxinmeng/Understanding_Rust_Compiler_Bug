{"sha": "e051ae8f195c70e558a1fe6ca4d8b551735165b2", "node_id": "C_kwDOAAsO6NoAKGUwNTFhZThmMTk1YzcwZTU1OGExZmU2Y2E0ZDhiNTUxNzM1MTY1YjI", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-17T10:39:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-17T10:39:19Z"}, "message": "Merge #10786\n\n10786: minor: remove duplicate calls r=Veykril a=XFFXFF\n\n`scopes.set_scope(*expr, scope)` is duplicate, because we always call it in `compute_expr_scopes`  https://github.com/rust-analyzer/rust-analyzer/blob/add6cccd4c923fbb5c83cc27b06aa84b2cbc9557/crates/hir_def/src/body/scope.rs#L175-L180\n\nCo-authored-by: zhoufan <1247714429@qq.com>", "tree": {"sha": "317e8a682aad75cfaa30dea30161bb14884f472e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/317e8a682aad75cfaa30dea30161bb14884f472e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e051ae8f195c70e558a1fe6ca4d8b551735165b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhlNvXCRBK7hj4Ov3rIwAAw8MIAFpi3B9yobUJjEi1msYCdJ1g\nFSkEKFDCS6kwGSPyC4FrWE9SdJsz6NxFZcUPFjtIWykSRBG/MDQLT3jkwHzzoNI7\nx28KJJcCy66KcYqAd69J06TACaZL2Bb0nqkZhUHVi6VzCQ6ORWBGwi1Ip87zrGWs\noSZYA+3EjCPUXOpQ9HkXBEGP7JIjYkaK+dm+96XdDinSZiBFVCPzsE8zGB8zlKgf\nV8bbm0lMdtaXgohv84KDcx+x1OYqpyCjMcsqXBSJL4ib3L/g+pEJB8s4+CwUgx44\nEXom7tT9eaATSw/vjyYGQL5mogk0Cb4WfLcG57XrnK+0OdKDwhHAIADXc3Iq06E=\n=t8hT\n-----END PGP SIGNATURE-----\n", "payload": "tree 317e8a682aad75cfaa30dea30161bb14884f472e\nparent add6cccd4c923fbb5c83cc27b06aa84b2cbc9557\nparent 1f1682ee1ec7c90879113022ca970b5086b6a44b\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637145559 +0000\ncommitter GitHub <noreply@github.com> 1637145559 +0000\n\nMerge #10786\n\n10786: minor: remove duplicate calls r=Veykril a=XFFXFF\n\n`scopes.set_scope(*expr, scope)` is duplicate, because we always call it in `compute_expr_scopes`  https://github.com/rust-analyzer/rust-analyzer/blob/add6cccd4c923fbb5c83cc27b06aa84b2cbc9557/crates/hir_def/src/body/scope.rs#L175-L180\n\nCo-authored-by: zhoufan <1247714429@qq.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e051ae8f195c70e558a1fe6ca4d8b551735165b2", "html_url": "https://github.com/rust-lang/rust/commit/e051ae8f195c70e558a1fe6ca4d8b551735165b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e051ae8f195c70e558a1fe6ca4d8b551735165b2/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "add6cccd4c923fbb5c83cc27b06aa84b2cbc9557", "url": "https://api.github.com/repos/rust-lang/rust/commits/add6cccd4c923fbb5c83cc27b06aa84b2cbc9557", "html_url": "https://github.com/rust-lang/rust/commit/add6cccd4c923fbb5c83cc27b06aa84b2cbc9557"}, {"sha": "1f1682ee1ec7c90879113022ca970b5086b6a44b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f1682ee1ec7c90879113022ca970b5086b6a44b", "html_url": "https://github.com/rust-lang/rust/commit/1f1682ee1ec7c90879113022ca970b5086b6a44b"}], "stats": {"total": 3, "additions": 0, "deletions": 3}, "files": [{"sha": "147d641235710c6a9b0e335becf27d7360e3df19", "filename": "crates/hir_def/src/body/scope.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e051ae8f195c70e558a1fe6ca4d8b551735165b2/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e051ae8f195c70e558a1fe6ca4d8b551735165b2/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Fscope.rs?ref=e051ae8f195c70e558a1fe6ca4d8b551735165b2", "patch": "@@ -151,18 +151,15 @@ fn compute_block_scopes(\n         match stmt {\n             Statement::Let { pat, initializer, else_branch, .. } => {\n                 if let Some(expr) = initializer {\n-                    scopes.set_scope(*expr, scope);\n                     compute_expr_scopes(*expr, body, scopes, scope);\n                 }\n                 if let Some(expr) = else_branch {\n-                    scopes.set_scope(*expr, scope);\n                     compute_expr_scopes(*expr, body, scopes, scope);\n                 }\n                 scope = scopes.new_scope(scope);\n                 scopes.add_bindings(body, scope, *pat);\n             }\n             Statement::Expr { expr, .. } => {\n-                scopes.set_scope(*expr, scope);\n                 compute_expr_scopes(*expr, body, scopes, scope);\n             }\n         }"}]}