{"sha": "8a14c115369f163e7f96544df48b26376a06a3fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMTRjMTE1MzY5ZjE2M2U3Zjk2NTQ0ZGY0OGIyNjM3NmEwNmEzZmI=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-08-16T18:50:30Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-08-16T18:50:30Z"}, "message": "Cleanup, explain return value", "tree": {"sha": "362ce327efb1b8589017c906b6b845f87c7e3c61", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/362ce327efb1b8589017c906b6b845f87c7e3c61"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a14c115369f163e7f96544df48b26376a06a3fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a14c115369f163e7f96544df48b26376a06a3fb", "html_url": "https://github.com/rust-lang/rust/commit/8a14c115369f163e7f96544df48b26376a06a3fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a14c115369f163e7f96544df48b26376a06a3fb/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d71b418ac511ee604af9320e401a7ff3fd115482", "url": "https://api.github.com/repos/rust-lang/rust/commits/d71b418ac511ee604af9320e401a7ff3fd115482", "html_url": "https://github.com/rust-lang/rust/commit/d71b418ac511ee604af9320e401a7ff3fd115482"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "c2b2cb980121e3f4ee9c24aab1d98f0607f85118", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8a14c115369f163e7f96544df48b26376a06a3fb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a14c115369f163e7f96544df48b26376a06a3fb/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=8a14c115369f163e7f96544df48b26376a06a3fb", "patch": "@@ -2711,6 +2711,7 @@ fn lint_map_flatten<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx hir::Expr<'_>, map\n }\n \n /// lint use of `map().unwrap_or_else()` for `Option`s and `Result`s\n+/// Return true if lint triggered\n fn lint_map_unwrap_or_else<'tcx>(\n     cx: &LateContext<'tcx>,\n     expr: &'tcx hir::Expr<'_>,\n@@ -2761,16 +2762,14 @@ fn lint_map_unwrap_or_else<'tcx>(\n                     map_snippet, unwrap_snippet,\n                 ),\n             );\n-            true\n+            return true;\n         } else if same_span && multiline {\n             span_lint(cx, MAP_UNWRAP_OR, expr.span, msg);\n-            true\n-        } else {\n-            false\n+            return true;\n         }\n-    } else {\n-        false\n     }\n+\n+    false\n }\n \n /// lint use of `_.map_or(None, _)` for `Option`s and `Result`s"}]}