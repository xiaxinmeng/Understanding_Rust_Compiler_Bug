{"sha": "31c97ce0f067ddf5c01217cf172ef1ff260ca564", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxYzk3Y2UwZjA2N2RkZjVjMDEyMTdjZjE3MmVmMWZmMjYwY2E1NjQ=", "commit": {"author": {"name": "asrar", "email": "aszenz@gmail.com", "date": "2020-06-23T23:42:40Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-08-18T02:55:26Z"}, "message": "Adds query param for version no (#4270)\n\n* Adds query param for version no\r\n\r\nThis adds support for using a query parameter for selecting the version no\r\n\r\n* Adds error handling to configuration request\r\n\r\nCatch request exception in case fetching the configuration from the url fails, this can happen either if non existent version number is passed in or because of server issues.\r\n\r\n* Makes version selection better\r\n\r\nCovers a few common cases in which the version number can be specified.", "tree": {"sha": "d7ce585acebb59d529f34e14ffc07f8f615006a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7ce585acebb59d529f34e14ffc07f8f615006a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31c97ce0f067ddf5c01217cf172ef1ff260ca564", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31c97ce0f067ddf5c01217cf172ef1ff260ca564", "html_url": "https://github.com/rust-lang/rust/commit/31c97ce0f067ddf5c01217cf172ef1ff260ca564", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31c97ce0f067ddf5c01217cf172ef1ff260ca564/comments", "author": {"login": "aszenz", "id": 25319264, "node_id": "MDQ6VXNlcjI1MzE5MjY0", "avatar_url": "https://avatars.githubusercontent.com/u/25319264?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aszenz", "html_url": "https://github.com/aszenz", "followers_url": "https://api.github.com/users/aszenz/followers", "following_url": "https://api.github.com/users/aszenz/following{/other_user}", "gists_url": "https://api.github.com/users/aszenz/gists{/gist_id}", "starred_url": "https://api.github.com/users/aszenz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aszenz/subscriptions", "organizations_url": "https://api.github.com/users/aszenz/orgs", "repos_url": "https://api.github.com/users/aszenz/repos", "events_url": "https://api.github.com/users/aszenz/events{/privacy}", "received_events_url": "https://api.github.com/users/aszenz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5f1d9698e83fbbf59c97aa229804274daf4cc8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5f1d9698e83fbbf59c97aa229804274daf4cc8c", "html_url": "https://github.com/rust-lang/rust/commit/c5f1d9698e83fbbf59c97aa229804274daf4cc8c"}], "stats": {"total": 33, "additions": 22, "deletions": 11}, "files": [{"sha": "c221c6db71f7131abc7c93a9a4cd9af078d41f60", "filename": "docs/index.html", "status": "modified", "additions": 22, "deletions": 11, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/31c97ce0f067ddf5c01217cf172ef1ff260ca564/docs%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/31c97ce0f067ddf5c01217cf172ef1ff260ca564/docs%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Findex.html?ref=31c97ce0f067ddf5c01217cf172ef1ff260ca564", "patch": "@@ -82,6 +82,13 @@\n             const queryParams = new URLSearchParams(window.location.search);\n             const searchParam = queryParams.get('search');\n             const searchTerm = null !== searchParam ? searchParam : '';\n+            const versionParam = queryParams.get('version');\n+            const parseVersionParam = (version) => {\n+              if (version === 'master') return 'master';\n+              if (version.startsWith('v')) return version;\n+              return `v${version}`;\n+            };\n+            const versionNumber = null !== versionParam ? parseVersionParam(versionParam) : 'master';\n             new Vue({\n               el: '#app',\n               data: {\n@@ -90,7 +97,7 @@\n                 configurationDescriptions: [],\n                 searchCondition: searchTerm,\n                 shouldStable: false,\n-                version: 'master',\n+                version: versionNumber,\n                 oldVersion: undefined,\n                 versionOptions: ['master']\n               },\n@@ -99,16 +106,20 @@\n                   if (this.version !== this.oldVersion) {\n                     const ConfigurationMdUrl =\n                       `https://raw.githubusercontent.com/rust-lang/rustfmt/${this.version}/Configurations.md`;\n-                    const res = await axios.get(ConfigurationMdUrl);\n-                    const {\n-                      about,\n-                      configurationAbout,\n-                      configurationDescriptions\n-                    } = parseMarkdownAst(res.data);\n-                    this.aboutHtml = marked.parser(about);\n-                    this.configurationAboutHtml = marked.parser(configurationAbout);\n-                    this.configurationDescriptions = configurationDescriptions;\n-                    this.oldVersion = this.version;\n+                    try {\n+                      const res = await axios.get(ConfigurationMdUrl);\n+                      const {\n+                        about,\n+                        configurationAbout,\n+                        configurationDescriptions\n+                      } = parseMarkdownAst(res.data);\n+                      this.aboutHtml = marked.parser(about);\n+                      this.configurationAboutHtml = marked.parser(configurationAbout);\n+                      this.configurationDescriptions = configurationDescriptions;\n+                      this.oldVersion = this.version;\n+                    } catch(error) {\n+                        this.aboutHtml = \"<p>Failed to get configuration options for this version, please select the version from the dropdown above.</p>\";\n+                    }\n                   }\n \n                   const ast = this.configurationDescriptions"}]}