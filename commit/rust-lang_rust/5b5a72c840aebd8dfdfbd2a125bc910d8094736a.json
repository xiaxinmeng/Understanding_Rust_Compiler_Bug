{"sha": "5b5a72c840aebd8dfdfbd2a125bc910d8094736a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNWE3MmM4NDBhZWJkOGRmZGZiZDJhMTI1YmM5MTBkODA5NDczNmE=", "commit": {"author": {"name": "Roman Stoliar", "email": "rizakrko@rambler.ru", "date": "2018-04-20T14:31:31Z"}, "committer": {"name": "Roman Stoliar", "email": "rizakrko@rambler.ru", "date": "2018-04-20T14:31:31Z"}, "message": "keep auto trait", "tree": {"sha": "64b30e7e3f29d9df0c8e57efefdbb3397c9595e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64b30e7e3f29d9df0c8e57efefdbb3397c9595e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b5a72c840aebd8dfdfbd2a125bc910d8094736a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b5a72c840aebd8dfdfbd2a125bc910d8094736a", "html_url": "https://github.com/rust-lang/rust/commit/5b5a72c840aebd8dfdfbd2a125bc910d8094736a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b5a72c840aebd8dfdfbd2a125bc910d8094736a/comments", "author": {"login": "rizakrko", "id": 18172179, "node_id": "MDQ6VXNlcjE4MTcyMTc5", "avatar_url": "https://avatars.githubusercontent.com/u/18172179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rizakrko", "html_url": "https://github.com/rizakrko", "followers_url": "https://api.github.com/users/rizakrko/followers", "following_url": "https://api.github.com/users/rizakrko/following{/other_user}", "gists_url": "https://api.github.com/users/rizakrko/gists{/gist_id}", "starred_url": "https://api.github.com/users/rizakrko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rizakrko/subscriptions", "organizations_url": "https://api.github.com/users/rizakrko/orgs", "repos_url": "https://api.github.com/users/rizakrko/repos", "events_url": "https://api.github.com/users/rizakrko/events{/privacy}", "received_events_url": "https://api.github.com/users/rizakrko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rizakrko", "id": 18172179, "node_id": "MDQ6VXNlcjE4MTcyMTc5", "avatar_url": "https://avatars.githubusercontent.com/u/18172179?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rizakrko", "html_url": "https://github.com/rizakrko", "followers_url": "https://api.github.com/users/rizakrko/followers", "following_url": "https://api.github.com/users/rizakrko/following{/other_user}", "gists_url": "https://api.github.com/users/rizakrko/gists{/gist_id}", "starred_url": "https://api.github.com/users/rizakrko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rizakrko/subscriptions", "organizations_url": "https://api.github.com/users/rizakrko/orgs", "repos_url": "https://api.github.com/users/rizakrko/repos", "events_url": "https://api.github.com/users/rizakrko/events{/privacy}", "received_events_url": "https://api.github.com/users/rizakrko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "866900449aee9281c88076076b8bc558a8aa5140", "url": "https://api.github.com/repos/rust-lang/rust/commits/866900449aee9281c88076076b8bc558a8aa5140", "html_url": "https://github.com/rust-lang/rust/commit/866900449aee9281c88076076b8bc558a8aa5140"}], "stats": {"total": 27, "additions": 20, "deletions": 7}, "files": [{"sha": "91db82cd9ede39af34de3adc032548a075f7e1b5", "filename": "src/items.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5b5a72c840aebd8dfdfbd2a125bc910d8094736a/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5a72c840aebd8dfdfbd2a125bc910d8094736a/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=5b5a72c840aebd8dfdfbd2a125bc910d8094736a", "patch": "@@ -32,9 +32,9 @@ use rewrite::{Rewrite, RewriteContext};\n use shape::{Indent, Shape};\n use spanned::Spanned;\n use types::TraitTyParamBounds;\n-use utils::{colon_spaces, contains_skip, first_line_width, format_abi, format_constness,\n-            format_defaultness, format_mutability, format_unsafety, format_visibility,\n-            is_attributes_extendable, last_line_contains_single_line_comment,\n+use utils::{colon_spaces, contains_skip, first_line_width, format_abi, format_auto,\n+            format_constness, format_defaultness, format_mutability, format_unsafety,\n+            format_visibility, is_attributes_extendable, last_line_contains_single_line_comment,\n             last_line_used_width, last_line_width, mk_sp, semicolon_for_expr, starts_with_newline,\n             stmt_expr, trimmed_last_line_width};\n use vertical::rewrite_with_alignment;\n@@ -936,16 +936,21 @@ fn format_struct(\n }\n \n pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent) -> Option<String> {\n-    if let ast::ItemKind::Trait(_, unsafety, ref generics, ref type_param_bounds, ref trait_items) =\n-        item.node\n+    if let ast::ItemKind::Trait(\n+        is_auto,\n+        unsafety,\n+        ref generics,\n+        ref type_param_bounds,\n+        ref trait_items,\n+    ) = item.node\n     {\n         let mut result = String::with_capacity(128);\n         let header = format!(\n-            \"{}{}trait \",\n+            \"{}{}{}trait \",\n+            format_auto(is_auto),\n             format_visibility(&item.vis),\n             format_unsafety(unsafety),\n         );\n-\n         result.push_str(&header);\n \n         let body_lo = context.snippet_provider.span_after(item.span, \"{\");"}, {"sha": "2493c9a5c7439f61536e5aa74a6ec94d4c49313e", "filename": "src/utils.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5b5a72c840aebd8dfdfbd2a125bc910d8094736a/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b5a72c840aebd8dfdfbd2a125bc910d8094736a/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=5b5a72c840aebd8dfdfbd2a125bc910d8094736a", "patch": "@@ -81,6 +81,14 @@ pub fn format_unsafety(unsafety: ast::Unsafety) -> &'static str {\n     }\n }\n \n+#[inline]\n+pub fn format_auto(is_auto: ast::IsAuto) -> &'static str {\n+    match is_auto {\n+        ast::IsAuto::Yes => \"auto \",\n+        ast::IsAuto::No => \"\",\n+    }\n+}\n+\n #[inline]\n pub fn format_mutability(mutability: ast::Mutability) -> &'static str {\n     match mutability {"}]}