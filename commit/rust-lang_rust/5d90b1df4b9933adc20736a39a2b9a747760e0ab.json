{"sha": "5d90b1df4b9933adc20736a39a2b9a747760e0ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkOTBiMWRmNGI5OTMzYWRjMjA3MzZhMzlhMmI5YTc0Nzc2MGUwYWI=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-18T23:29:45Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-18T23:29:45Z"}, "message": "stdlib: Add ivec::grow() and ivec::grow_fn()", "tree": {"sha": "f27f0ac912917319aa427369e928af7f8dad6f54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f27f0ac912917319aa427369e928af7f8dad6f54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5d90b1df4b9933adc20736a39a2b9a747760e0ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5d90b1df4b9933adc20736a39a2b9a747760e0ab", "html_url": "https://github.com/rust-lang/rust/commit/5d90b1df4b9933adc20736a39a2b9a747760e0ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5d90b1df4b9933adc20736a39a2b9a747760e0ab/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef65542b1d9b80272e1f8c49db47b45622c10ef8", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef65542b1d9b80272e1f8c49db47b45622c10ef8", "html_url": "https://github.com/rust-lang/rust/commit/ef65542b1d9b80272e1f8c49db47b45622c10ef8"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "93c6896d9b719a548987b36259771f27d524d403", "filename": "src/lib/ivec.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5d90b1df4b9933adc20736a39a2b9a747760e0ab/src%2Flib%2Fivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d90b1df4b9933adc20736a39a2b9a747760e0ab/src%2Flib%2Fivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fivec.rs?ref=5d90b1df4b9933adc20736a39a2b9a747760e0ab", "patch": "@@ -106,6 +106,28 @@ fn slice_mut[T](&T[mutable?] v, uint start, uint end) -> T[mutable] {\n // TODO\n \n \n+// Appending\n+\n+/// Expands the given vector in-place by appending `n` copies of `initval`.\n+fn grow[T](&mutable T[] v, uint n, &T initval) {\n+    let uint i = 0u;\n+    while (i < n) {\n+        v += ~[initval];\n+        i += 1u;\n+    }\n+}\n+\n+/// Calls `f` `n` times and appends the results of these calls to the given\n+/// vector.\n+fn grow_fn[T](&mutable T[] v, uint n, fn(uint)->T init_fn) {\n+    let uint i = 0u;\n+    while (i < n) {\n+        v += ~[init_fn(i)];\n+        i += 1u;\n+    }\n+}\n+\n+\n mod unsafe {\n     fn copy_from_buf[T](&mutable T[] v, *T ptr, uint count) {\n         ret rustrt::ivec_copy_from_buf(v, ptr, count);"}, {"sha": "15f9642d229a45dd3e1f56257d7b6f99a24075a4", "filename": "src/test/run-pass/lib-ivec.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5d90b1df4b9933adc20736a39a2b9a747760e0ab/src%2Ftest%2Frun-pass%2Flib-ivec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5d90b1df4b9933adc20736a39a2b9a747760e0ab/src%2Ftest%2Frun-pass%2Flib-ivec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-ivec.rs?ref=5d90b1df4b9933adc20736a39a2b9a747760e0ab", "patch": "@@ -5,6 +5,8 @@ import std::ivec;\n import std::option::none;\n import std::option::some;\n \n+fn square(uint n) -> uint { ret n * n; }\n+\n fn test_reserve_and_on_heap() {\n     let int[] v = ~[ 1, 2 ];\n     assert (!ivec::on_heap(v));\n@@ -37,8 +39,6 @@ fn test_unsafe_ptrs() {\n }\n \n fn test_init_fn() {\n-    fn square(uint n) -> uint { ret n * n; }\n-\n     // Test on-stack init_fn.\n     auto v = ivec::init_fn(square, 3u);\n     assert (ivec::len(v) == 3u);\n@@ -106,12 +106,45 @@ fn test_slice() {\n     assert (v.(4) == 6);\n }\n \n+fn test_grow() {\n+    // Test on-stack grow().\n+    auto v = ~[];\n+    ivec::grow(v, 2u, 1);\n+    assert (ivec::len(v) == 2u);\n+    assert (v.(0) == 1);\n+    assert (v.(1) == 1);\n+\n+    // Test on-heap grow().\n+    ivec::grow(v, 3u, 2);\n+    assert (ivec::len(v) == 5u);\n+    assert (v.(0) == 1);\n+    assert (v.(1) == 1);\n+    assert (v.(2) == 2);\n+    assert (v.(3) == 2);\n+    assert (v.(4) == 2);\n+}\n+\n+fn test_grow_fn() {\n+    auto v = ~[];\n+    ivec::grow_fn(v, 3u, square);\n+    assert (ivec::len(v) == 3u);\n+    assert (v.(0) == 0u);\n+    assert (v.(1) == 1u);\n+    assert (v.(2) == 4u);\n+}\n+\n fn main() {\n     test_reserve_and_on_heap();\n     test_unsafe_ptrs();\n+\n+    // Accessors\n     test_init_fn();\n     test_init_elt();\n     test_last();\n     test_slice();\n+\n+    // Appending\n+    test_grow();\n+    test_grow_fn();\n }\n "}]}