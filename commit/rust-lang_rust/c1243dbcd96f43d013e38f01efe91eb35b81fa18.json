{"sha": "c1243dbcd96f43d013e38f01efe91eb35b81fa18", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxMjQzZGJjZDk2ZjQzZDAxM2UzOGYwMWVmZTkxZWIzNWI4MWZhMTg=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-11T16:17:00Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-11T16:17:00Z"}, "message": "Make a note about is_dir vs is_file in Path too", "tree": {"sha": "ac6522aac418e3a9ac376a3978eca0813070bb09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac6522aac418e3a9ac376a3978eca0813070bb09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1243dbcd96f43d013e38f01efe91eb35b81fa18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1243dbcd96f43d013e38f01efe91eb35b81fa18", "html_url": "https://github.com/rust-lang/rust/commit/c1243dbcd96f43d013e38f01efe91eb35b81fa18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1243dbcd96f43d013e38f01efe91eb35b81fa18/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec63f9d99b4faec04db0f924c24be9529f4febed", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec63f9d99b4faec04db0f924c24be9529f4febed", "html_url": "https://github.com/rust-lang/rust/commit/ec63f9d99b4faec04db0f924c24be9529f4febed"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "35f6b5838a92a6d83d7a990ad06253d0b6a286a2", "filename": "src/libstd/path.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c1243dbcd96f43d013e38f01efe91eb35b81fa18/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1243dbcd96f43d013e38f01efe91eb35b81fa18/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=c1243dbcd96f43d013e38f01efe91eb35b81fa18", "patch": "@@ -2503,11 +2503,15 @@ impl Path {\n     /// # See Also\n     ///\n     /// This is a convenience function that coerces errors to false. If you want to\n-    /// check errors, call [fs::metadata] and handle its Result. Then call\n-    /// [fs::Metadata::is_file] if it was Ok.\n+    /// check errors, call [`fs::metadata`] and handle its Result. Then call\n+    /// [`fs::Metadata::is_file`] if it was Ok.\n     ///\n-    /// [fs::metadata]: ../../std/fs/fn.metadata.html\n-    /// [fs::Metadata::is_file]: ../../std/fs/struct.Metadata.html#method.is_file\n+    /// Note that the explanation about using `!is_dir` instead of `is_file`\n+    /// that is present in the [`fs::Metadata`] documentation also applies here.\n+    ///\n+    /// [`fs::metadata`]: ../../std/fs/fn.metadata.html\n+    /// [`fs::Metadata`]: ../../std/fs/struct.Metadata.html\n+    /// [`fs::Metadata::is_file`]: ../../std/fs/struct.Metadata.html#method.is_file\n     #[stable(feature = \"path_ext\", since = \"1.5.0\")]\n     pub fn is_file(&self) -> bool {\n         fs::metadata(self).map(|m| m.is_file()).unwrap_or(false)"}]}