{"sha": "8a950dfb406a927085602af016855cfe1988aee1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhOTUwZGZiNDA2YTkyNzA4NTYwMmFmMDE2ODU1Y2ZlMTk4OGFlZTE=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-07T18:41:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-07T18:41:07Z"}, "message": "Merge #6751\n\n6751: Use the right `def_crate` for builtin macros r=jonas-schievink a=jonas-schievink\n\nFixes the incorrect macro resolution in https://github.com/rust-analyzer/rust-analyzer/issues/6716\r\n\r\nNo test, because diagnostics do not get remapped correctly for some reason. I've checked manually that this fixes the resolution errors.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "fe5b3a2b6d3bd65f0b34e871dacde546a70b5395", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe5b3a2b6d3bd65f0b34e871dacde546a70b5395"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a950dfb406a927085602af016855cfe1988aee1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfzndDCRBK7hj4Ov3rIwAAdHIIAHTlivV5RGh3PG0vAFAYkvuy\nFjif2e54CvQfCqR1Ze8afaz8DiAxJXkRCPmH2tanePrbgGl6vcvtqXDfTZ+lhZtE\nrlXmis20bjjlxPE7W3QuLMChKyJOJjlNfjz2IDpHrUh7SY+cV0g1r2oICvZrZToq\nCtEDj2pF3lpcK4F1PbfSFzROIsBM0cc4Am4ackbZ7rRxbOvsYk/SRs1f/wrgIG8f\n6hT0ldCpiuKR0JMwNGcFUbi0dzGdFz6aNTwhztnGd/Ngx34gKSeZZ8T/x/m1fgzH\n2qH9QJ4gdW8vD15MNW1a6m9l2gd5hbW0oxLS49w784VDag5GXzSB+h52rkufwBA=\n=UwFn\n-----END PGP SIGNATURE-----\n", "payload": "tree fe5b3a2b6d3bd65f0b34e871dacde546a70b5395\nparent bb1002b8b122ec4aaf8fcd9325e5441e4e3e36e6\nparent 881c7a680b689adf54f0ab82f91e4b315ef7b3d8\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607366467 +0000\ncommitter GitHub <noreply@github.com> 1607366467 +0000\n\nMerge #6751\n\n6751: Use the right `def_crate` for builtin macros r=jonas-schievink a=jonas-schievink\n\nFixes the incorrect macro resolution in https://github.com/rust-analyzer/rust-analyzer/issues/6716\r\n\r\nNo test, because diagnostics do not get remapped correctly for some reason. I've checked manually that this fixes the resolution errors.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a950dfb406a927085602af016855cfe1988aee1", "html_url": "https://github.com/rust-lang/rust/commit/8a950dfb406a927085602af016855cfe1988aee1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a950dfb406a927085602af016855cfe1988aee1/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb1002b8b122ec4aaf8fcd9325e5441e4e3e36e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb1002b8b122ec4aaf8fcd9325e5441e4e3e36e6", "html_url": "https://github.com/rust-lang/rust/commit/bb1002b8b122ec4aaf8fcd9325e5441e4e3e36e6"}, {"sha": "881c7a680b689adf54f0ab82f91e4b315ef7b3d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/881c7a680b689adf54f0ab82f91e4b315ef7b3d8", "html_url": "https://github.com/rust-lang/rust/commit/881c7a680b689adf54f0ab82f91e4b315ef7b3d8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "5d3fa0518f413dc6293a41761f5461811fd5bd53", "filename": "crates/hir_expand/src/hygiene.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a950dfb406a927085602af016855cfe1988aee1/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a950dfb406a927085602af016855cfe1988aee1/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_expand%2Fsrc%2Fhygiene.rs?ref=8a950dfb406a927085602af016855cfe1988aee1", "patch": "@@ -30,7 +30,7 @@ impl Hygiene {\n                     let loc = db.lookup_intern_macro(id);\n                     match loc.def.kind {\n                         MacroDefKind::Declarative => (loc.def.krate, loc.def.local_inner),\n-                        MacroDefKind::BuiltIn(_) => (None, false),\n+                        MacroDefKind::BuiltIn(_) => (loc.def.krate, false),\n                         MacroDefKind::BuiltInDerive(_) => (None, false),\n                         MacroDefKind::BuiltInEager(_) => (None, false),\n                         MacroDefKind::ProcMacro(_) => (None, false),"}]}