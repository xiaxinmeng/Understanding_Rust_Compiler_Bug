{"sha": "4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "node_id": "C_kwDOAAsO6NoAKDRhNGU5YzBhZTBhOWNhMWZjOWE2NzdkMDc0OWRkMGRiOGViY2U5NzM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-10T12:36:46Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-10T12:36:46Z"}, "message": "Auto merge of #12203 - Veykril:completions, r=Veykril\n\ninternal: Simplify", "tree": {"sha": "6d92d0599de8d51b32f633b4b8b9dfb4c1d8cf96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d92d0599de8d51b32f633b4b8b9dfb4c1d8cf96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "html_url": "https://github.com/rust-lang/rust/commit/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc695363e401e2f8d2da9d2a7282c1bb809d9d57", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc695363e401e2f8d2da9d2a7282c1bb809d9d57", "html_url": "https://github.com/rust-lang/rust/commit/cc695363e401e2f8d2da9d2a7282c1bb809d9d57"}, {"sha": "40bb8006cda3629160ab727d31ca9c13662bf848", "url": "https://api.github.com/repos/rust-lang/rust/commits/40bb8006cda3629160ab727d31ca9c13662bf848", "html_url": "https://github.com/rust-lang/rust/commit/40bb8006cda3629160ab727d31ca9c13662bf848"}], "stats": {"total": 39, "additions": 22, "deletions": 17}, "files": [{"sha": "78d0ef7122a6e6fafced390443a5e454f73d9062", "filename": "crates/ide-completion/src/completions/mod_.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fmod_.rs?ref=4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "patch": "@@ -17,13 +17,12 @@ use crate::{\n /// Complete mod declaration, i.e. `mod $0;`\n pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Option<()> {\n     let mod_under_caret = match ctx.name_ctx() {\n-        Some(NameContext { kind: NameKind::Module(mod_under_caret), .. })\n-            if mod_under_caret.item_list().is_none() =>\n-        {\n-            mod_under_caret\n-        }\n+        Some(NameContext { kind: NameKind::Module(mod_under_caret), .. }) => mod_under_caret,\n         _ => return None,\n     };\n+    if mod_under_caret.item_list().is_some() {\n+        return None;\n+    }\n \n     let _p = profile::span(\"completion::complete_mod\");\n \n@@ -32,8 +31,8 @@ pub(crate) fn complete_mod(acc: &mut Completions, ctx: &CompletionContext) -> Op\n     // interested in its parent.\n     if ctx.original_token.kind() == SyntaxKind::IDENT {\n         if let Some(module) = ctx.original_token.ancestors().nth(1).and_then(ast::Module::cast) {\n-            match current_module.definition_source(ctx.db).value {\n-                ModuleSource::Module(src) if src == module => {\n+            match ctx.sema.to_def(&module) {\n+                Some(module) if module == current_module => {\n                     if let Some(parent) = current_module.parent(ctx.db) {\n                         current_module = parent;\n                     }"}, {"sha": "f6b8962df631c65e23ef8f0ef8dd0500ecd2a10a", "filename": "crates/ide-completion/src/context.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcontext.rs?ref=4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "patch": "@@ -326,6 +326,7 @@ impl<'a> CompletionContext<'a> {\n         matches!(self.completion_location, Some(ImmediateLocation::ItemList))\n     }\n \n+    // FIXME: This shouldn't exist\n     pub(crate) fn expects_generic_arg(&self) -> bool {\n         matches!(self.completion_location, Some(ImmediateLocation::GenericArgList(_)))\n     }\n@@ -395,10 +396,6 @@ impl<'a> CompletionContext<'a> {\n         matches!(self.path_context(), Some(PathCompletionCtx { kind: PathKind::Type, .. }))\n     }\n \n-    pub(crate) fn path_is_call(&self) -> bool {\n-        self.path_context().map_or(false, |it| it.has_call_parens)\n-    }\n-\n     pub(crate) fn is_non_trivial_path(&self) -> bool {\n         matches!(\n             self.path_context(),\n@@ -417,10 +414,6 @@ impl<'a> CompletionContext<'a> {\n         self.path_context().map(|it| it.kind)\n     }\n \n-    pub(crate) fn is_immediately_after_macro_bang(&self) -> bool {\n-        self.token.kind() == BANG && self.token.parent().map_or(false, |it| it.kind() == MACRO_CALL)\n-    }\n-\n     /// Checks if an item is visible and not `doc(hidden)` at the completion site.\n     pub(crate) fn is_visible<I>(&self, item: &I) -> Visible\n     where"}, {"sha": "88b6435c95bcd0bd61cdb4fe49800cb7b5cbe7ec", "filename": "crates/ide-completion/src/render.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender.rs?ref=4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "patch": "@@ -65,6 +65,19 @@ impl<'a> RenderContext<'a> {\n         }\n     }\n \n+    fn is_immediately_after_macro_bang(&self) -> bool {\n+        self.completion.token.kind() == SyntaxKind::BANG\n+            && self\n+                .completion\n+                .token\n+                .parent()\n+                .map_or(false, |it| it.kind() == SyntaxKind::MACRO_CALL)\n+    }\n+\n+    pub(crate) fn path_is_call(&self) -> bool {\n+        self.completion.path_context().map_or(false, |it| it.has_call_parens)\n+    }\n+\n     fn is_deprecated(&self, def: impl HasAttrs) -> bool {\n         let attrs = def.attrs(self.db());\n         attrs.by_key(\"deprecated\").exists()"}, {"sha": "5c862f013a75e99656a410ce9e6ca6bbfb3bc91c", "filename": "crates/ide-completion/src/render/macro_.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Frender%2Fmacro_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973/crates%2Fide-completion%2Fsrc%2Frender%2Fmacro_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fmacro_.rs?ref=4a4e9c0ae0a9ca1fc9a677d0749dd0db8ebce973", "patch": "@@ -20,7 +20,7 @@ fn render(\n     name: hir::Name,\n     macro_: hir::Macro,\n ) -> Builder {\n-    let source_range = if completion.is_immediately_after_macro_bang() {\n+    let source_range = if ctx.is_immediately_after_macro_bang() {\n         cov_mark::hit!(completes_macro_call_if_cursor_at_bang_token);\n         completion.token.parent().map_or_else(|| ctx.source_range(), |it| it.text_range())\n     } else {\n@@ -52,7 +52,7 @@ fn render(\n \n     let name = &*name;\n     match ctx.snippet_cap() {\n-        Some(cap) if needs_bang && !completion.path_is_call() => {\n+        Some(cap) if needs_bang && !ctx.path_is_call() => {\n             let snippet = format!(\"{}!{}$0{}\", name, bra, ket);\n             let lookup = banged_name(name);\n             item.insert_snippet(cap, snippet).lookup_by(lookup);"}]}