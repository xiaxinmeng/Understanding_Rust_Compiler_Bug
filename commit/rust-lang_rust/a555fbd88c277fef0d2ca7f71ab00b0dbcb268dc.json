{"sha": "a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NTVmYmQ4OGMyNzdmZWYwZDJjYTdmNzFhYjAwYjBkYmNiMjY4ZGM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-17T00:55:34Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2015-02-17T00:55:34Z"}, "message": "Rollup merge of #22416 - GuillaumeGomez:copy, r=eddyb", "tree": {"sha": "f3afa990a022a8acef35ecf6cea93ad940124c1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3afa990a022a8acef35ecf6cea93ad940124c1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc", "html_url": "https://github.com/rust-lang/rust/commit/a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c639d3c6e55530c4a8e05a819e96f3788797063", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c639d3c6e55530c4a8e05a819e96f3788797063", "html_url": "https://github.com/rust-lang/rust/commit/8c639d3c6e55530c4a8e05a819e96f3788797063"}, {"sha": "318f262d68c3464ab0fdb83983d0c8c0bf6256b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/318f262d68c3464ab0fdb83983d0c8c0bf6256b5", "html_url": "https://github.com/rust-lang/rust/commit/318f262d68c3464ab0fdb83983d0c8c0bf6256b5"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "213e356536246bb60631baafed5a218c5dbc61b1", "filename": "src/librustc_llvm/lib.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc/src%2Flibrustc_llvm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc/src%2Flibrustc_llvm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Flib.rs?ref=a555fbd88c277fef0d2ca7f71ab00b0dbcb268dc", "patch": "@@ -436,50 +436,73 @@ pub enum DiagnosticKind {\n }\n \n // Opaque pointer types\n+#[allow(missing_copy_implementations)]\n pub enum Module_opaque {}\n pub type ModuleRef = *mut Module_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Context_opaque {}\n pub type ContextRef = *mut Context_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Type_opaque {}\n pub type TypeRef = *mut Type_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Value_opaque {}\n pub type ValueRef = *mut Value_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Metadata_opaque {}\n pub type MetadataRef = *mut Metadata_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum BasicBlock_opaque {}\n pub type BasicBlockRef = *mut BasicBlock_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Builder_opaque {}\n pub type BuilderRef = *mut Builder_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum ExecutionEngine_opaque {}\n pub type ExecutionEngineRef = *mut ExecutionEngine_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum RustJITMemoryManager_opaque {}\n pub type RustJITMemoryManagerRef = *mut RustJITMemoryManager_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum MemoryBuffer_opaque {}\n pub type MemoryBufferRef = *mut MemoryBuffer_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum PassManager_opaque {}\n pub type PassManagerRef = *mut PassManager_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum PassManagerBuilder_opaque {}\n pub type PassManagerBuilderRef = *mut PassManagerBuilder_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Use_opaque {}\n pub type UseRef = *mut Use_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum TargetData_opaque {}\n pub type TargetDataRef = *mut TargetData_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum ObjectFile_opaque {}\n pub type ObjectFileRef = *mut ObjectFile_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum SectionIterator_opaque {}\n pub type SectionIteratorRef = *mut SectionIterator_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Pass_opaque {}\n pub type PassRef = *mut Pass_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum TargetMachine_opaque {}\n pub type TargetMachineRef = *mut TargetMachine_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Archive_opaque {}\n pub type ArchiveRef = *mut Archive_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum Twine_opaque {}\n pub type TwineRef = *mut Twine_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum DiagnosticInfo_opaque {}\n pub type DiagnosticInfoRef = *mut DiagnosticInfo_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum DebugLoc_opaque {}\n pub type DebugLocRef = *mut DebugLoc_opaque;\n+#[allow(missing_copy_implementations)]\n pub enum SMDiagnostic_opaque {}\n pub type SMDiagnosticRef = *mut SMDiagnostic_opaque;\n \n@@ -490,6 +513,7 @@ pub mod debuginfo {\n     pub use self::DIDescriptorFlags::*;\n     use super::{MetadataRef};\n \n+    #[allow(missing_copy_implementations)]\n     pub enum DIBuilder_opaque {}\n     pub type DIBuilderRef = *mut DIBuilder_opaque;\n \n@@ -2192,6 +2216,7 @@ pub fn get_param(llfn: ValueRef, index: c_uint) -> ValueRef {\n     }\n }\n \n+#[allow(missing_copy_implementations)]\n pub enum RustString_opaque {}\n pub type RustStringRef = *mut RustString_opaque;\n type RustStringRepr = *mut RefCell<Vec<u8>>;"}]}