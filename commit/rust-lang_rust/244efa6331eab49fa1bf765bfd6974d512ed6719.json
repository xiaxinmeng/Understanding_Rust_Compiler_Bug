{"sha": "244efa6331eab49fa1bf765bfd6974d512ed6719", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NGVmYTYzMzFlYWI0OWZhMWJmNzY1YmZkNjk3NGQ1MTJlZDY3MTk=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-05T22:27:23Z"}, "committer": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-08-05T22:27:23Z"}, "message": "Merge branch 'master' of github.com:graydon/rust", "tree": {"sha": "880c3f8d01ec2d6652b78f2d65a60ce55d032cd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/880c3f8d01ec2d6652b78f2d65a60ce55d032cd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/244efa6331eab49fa1bf765bfd6974d512ed6719", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/244efa6331eab49fa1bf765bfd6974d512ed6719", "html_url": "https://github.com/rust-lang/rust/commit/244efa6331eab49fa1bf765bfd6974d512ed6719", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/244efa6331eab49fa1bf765bfd6974d512ed6719/comments", "author": null, "committer": null, "parents": [{"sha": "d65aaa933a205a694e5387d40fbea4c10cb168a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/d65aaa933a205a694e5387d40fbea4c10cb168a8", "html_url": "https://github.com/rust-lang/rust/commit/d65aaa933a205a694e5387d40fbea4c10cb168a8"}, {"sha": "1c786bcc82424b9218f1ca52fa99a12ce353e590", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c786bcc82424b9218f1ca52fa99a12ce353e590", "html_url": "https://github.com/rust-lang/rust/commit/1c786bcc82424b9218f1ca52fa99a12ce353e590"}], "stats": {"total": 50, "additions": 41, "deletions": 9}, "files": [{"sha": "a055187e28676425dcb5a0dd89fbfc8df2934468", "filename": "src/comp/middle/tstate/bitvectors.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fbitvectors.rs?ref=244efa6331eab49fa1bf765bfd6974d512ed6719", "patch": "@@ -183,6 +183,11 @@ fn kill_prestate(fcx: &fn_ctxt, id: node_id, c: &tsconstr) -> bool {\n                           node_id_to_ts_ann(fcx.ccx, id).states);\n }\n \n+fn kill_all_prestate(fcx: &fn_ctxt, id: node_id) {\n+    tritv::tritv_kill(node_id_to_ts_ann(fcx.ccx, id).states.prestate);\n+}\n+\n+\n fn kill_poststate(fcx: &fn_ctxt, id: node_id, c: &tsconstr) -> bool {\n     log \"kill_poststate\";\n     ret clear_in_poststate(bit_num(fcx, c),"}, {"sha": "0f7d920e6ce905337523aa8a1366941305cafcf5", "filename": "src/comp/middle/tstate/states.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fstates.rs?ref=244efa6331eab49fa1bf765bfd6974d512ed6719", "patch": "@@ -594,6 +594,7 @@ fn find_pre_post_state_stmt(fcx: &fn_ctxt, pres: &prestate, s: @stmt)\n     -> bool {\n     let stmt_ann = stmt_to_ann(fcx.ccx, *s);\n /*\n+    log_err (\"[\" + fcx.name + \"]\");\n     log_err \"*At beginning: stmt = \";\n     log_stmt_err(*s);\n     log_err \"*prestate = \";\n@@ -617,7 +618,8 @@ fn find_pre_post_state_stmt(fcx: &fn_ctxt, pres: &prestate, s: @stmt)\n \n             let changed = (set_poststate(stmt_ann, c_and_p.post)\n                            | c_and_p.changed);\n-            /*\n+\n+/*\n                 log_err \"Summary: stmt = \";\n                 log_stmt_err(*s);\n                 log_err \"prestate = \";\n@@ -638,11 +640,12 @@ fn find_pre_post_state_stmt(fcx: &fn_ctxt, pres: &prestate, s: @stmt)\n         }\n       }\n       stmt_expr(ex, _) {\n-        ret find_pre_post_state_expr(fcx, pres, ex) |\n+        let changed = find_pre_post_state_expr(fcx, pres, ex) |\n                 set_prestate(stmt_ann, expr_prestate(fcx.ccx, ex)) |\n                 set_poststate(stmt_ann, expr_poststate(fcx.ccx, ex));\n-        /*\n-        log_err \"Finally:\";\n+\n+/*\n+       log_err \"Finally:\";\n           log_stmt_err(*s);\n           log_err(\"prestate = \");\n           //              log_err(bitv::to_str(stmt_ann.states.prestate));\n@@ -651,8 +654,9 @@ fn find_pre_post_state_stmt(fcx: &fn_ctxt, pres: &prestate, s: @stmt)\n           //   log_err(bitv::to_str(stmt_ann.states.poststate));\n           log_tritv_err(fcx, stmt_ann.states.poststate);\n           log_err(\"changed =\");\n-          log_err(changed);\n-        */\n+*/\n+\n+          ret changed;\n       }\n       _ { ret false; }\n     }\n@@ -707,9 +711,9 @@ fn find_pre_post_state_block(fcx: &fn_ctxt, pres0: &prestate, b: &blk) ->\n fn find_pre_post_state_fn(fcx: &fn_ctxt, f: &_fn) -> bool {\n \n     let num_constrs = num_constraints(fcx.enclosing);\n-    // make sure the return and diverge bits start out False\n-    kill_prestate(fcx, f.body.node.id, fcx.enclosing.i_return);\n-    kill_prestate(fcx, f.body.node.id, fcx.enclosing.i_diverge);\n+    // All constraints are considered false until proven otherwise.\n+    // This ensures that intersect works correctly.\n+    kill_all_prestate(fcx, f.body.node.id);\n \n     // Instantiate any constraints on the arguments so we can use them\n     let block_pre = block_prestate(fcx.ccx, f.body);"}, {"sha": "1d33292c9a9f988ee4c9c418ac6afdb20ee3fc24", "filename": "src/comp/middle/tstate/tritv.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Fcomp%2Fmiddle%2Ftstate%2Ftritv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Fcomp%2Fmiddle%2Ftstate%2Ftritv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Ftritv.rs?ref=244efa6331eab49fa1bf765bfd6974d512ed6719", "patch": "@@ -16,6 +16,7 @@ export tritv_union;\n export tritv_intersect;\n export tritv_copy;\n export tritv_clear;\n+export tritv_kill;\n export tritv_doesntcare;\n export to_str;\n \n@@ -218,6 +219,11 @@ fn tritv_clear(v: &t) {\n     while i < v.nbits { tritv_set(i, v, dont_care); i += 1u; }\n }\n \n+fn tritv_kill(v: &t) {\n+    let i: uint = 0u;\n+    while i < v.nbits { tritv_set(i, v, tfalse); i += 1u; }\n+}\n+\n fn tritv_clone(v: &t) -> t {\n     ret {uncertain: bitv::clone(v.uncertain),\n          val: bitv::clone(v.val),"}, {"sha": "bbd4ac5c73aa072cd13b61d15f87782cf9890693", "filename": "src/test/compile-fail/alt-join.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Ftest%2Fcompile-fail%2Falt-join.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244efa6331eab49fa1bf765bfd6974d512ed6719/src%2Ftest%2Fcompile-fail%2Falt-join.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Falt-join.rs?ref=244efa6331eab49fa1bf765bfd6974d512ed6719", "patch": "@@ -0,0 +1,17 @@\n+// error-pattern:Unsatisfied precondition constraint\n+// a good test that we merge paths correctly in the presence of a\n+// variable that's used before it's declared\n+// should be rejected by typestate because we use x without initializing it\n+\n+fn my_fail() -> ! { fail; }\n+\n+fn main() {\n+\n+    alt (true) {\n+      false { my_fail(); }\n+      true {}\n+    }\n+\n+    log x;\n+    let x:int;\n+}\n\\ No newline at end of file"}]}