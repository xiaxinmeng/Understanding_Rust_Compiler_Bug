{"sha": "b7908febca68700b4c14be5b55e4121e9f9ddb06", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3OTA4ZmViY2E2ODcwMGI0YzE0YmU1YjU1ZTQxMjFlOWY5ZGRiMDY=", "commit": {"author": {"name": "Gleb Kozyrev", "email": "gleb@gkoz.com", "date": "2014-11-17T00:07:23Z"}, "committer": {"name": "Gleb Kozyrev", "email": "gleb@gkoz.com", "date": "2014-11-17T17:18:26Z"}, "message": "Remove duplicate code by using util::copy()", "tree": {"sha": "512b96ba903d8c3de17984386b7cba62f9118735", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/512b96ba903d8c3de17984386b7cba62f9118735"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7908febca68700b4c14be5b55e4121e9f9ddb06", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7908febca68700b4c14be5b55e4121e9f9ddb06", "html_url": "https://github.com/rust-lang/rust/commit/b7908febca68700b4c14be5b55e4121e9f9ddb06", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7908febca68700b4c14be5b55e4121e9f9ddb06/comments", "author": {"login": "gkoz", "id": 4260361, "node_id": "MDQ6VXNlcjQyNjAzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4260361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoz", "html_url": "https://github.com/gkoz", "followers_url": "https://api.github.com/users/gkoz/followers", "following_url": "https://api.github.com/users/gkoz/following{/other_user}", "gists_url": "https://api.github.com/users/gkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoz/subscriptions", "organizations_url": "https://api.github.com/users/gkoz/orgs", "repos_url": "https://api.github.com/users/gkoz/repos", "events_url": "https://api.github.com/users/gkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gkoz", "id": 4260361, "node_id": "MDQ6VXNlcjQyNjAzNjE=", "avatar_url": "https://avatars.githubusercontent.com/u/4260361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gkoz", "html_url": "https://github.com/gkoz", "followers_url": "https://api.github.com/users/gkoz/followers", "following_url": "https://api.github.com/users/gkoz/following{/other_user}", "gists_url": "https://api.github.com/users/gkoz/gists{/gist_id}", "starred_url": "https://api.github.com/users/gkoz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gkoz/subscriptions", "organizations_url": "https://api.github.com/users/gkoz/orgs", "repos_url": "https://api.github.com/users/gkoz/repos", "events_url": "https://api.github.com/users/gkoz/events{/privacy}", "received_events_url": "https://api.github.com/users/gkoz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "88c743def3cf42ee943ca09dda1e6dccf4894db9", "url": "https://api.github.com/repos/rust-lang/rust/commits/88c743def3cf42ee943ca09dda1e6dccf4894db9", "html_url": "https://github.com/rust-lang/rust/commit/88c743def3cf42ee943ca09dda1e6dccf4894db9"}], "stats": {"total": 10, "additions": 1, "deletions": 9}, "files": [{"sha": "f4e795721cf54caa82ad3c16948e26cc884b9ccc", "filename": "src/libstd/io/fs.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b7908febca68700b4c14be5b55e4121e9f9ddb06/src%2Flibstd%2Fio%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7908febca68700b4c14be5b55e4121e9f9ddb06/src%2Flibstd%2Fio%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Ffs.rs?ref=b7908febca68700b4c14be5b55e4121e9f9ddb06", "patch": "@@ -381,16 +381,8 @@ pub fn copy(from: &Path, to: &Path) -> IoResult<()> {\n \n     let mut reader = try!(File::open(from));\n     let mut writer = try!(File::create(to));\n-    let mut buf = [0, ..io::DEFAULT_BUF_SIZE];\n \n-    loop {\n-        let amt = match reader.read(&mut buf) {\n-            Ok(n) => n,\n-            Err(ref e) if e.kind == io::EndOfFile => { break }\n-            Err(e) => return update_err(Err(e), from, to)\n-        };\n-        try!(writer.write(buf[..amt]));\n-    }\n+    try!(super::util::copy(&mut reader, &mut writer));\n \n     chmod(to, try!(update_err(from.stat(), from, to)).perm)\n }"}]}