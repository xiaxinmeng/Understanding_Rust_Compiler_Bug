{"sha": "b98a589e23a5471caa6698d953c6eec66304863d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5OGE1ODllMjNhNTQ3MWNhYTY2OThkOTUzYzZlZWM2NjMwNDg2M2Q=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-05T06:32:59Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-05T09:00:10Z"}, "message": "Remove use of globs feature gate from tests.", "tree": {"sha": "87334b06a2dc67b43a02abb647ccabeaaedd6c8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87334b06a2dc67b43a02abb647ccabeaaedd6c8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b98a589e23a5471caa6698d953c6eec66304863d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b98a589e23a5471caa6698d953c6eec66304863d", "html_url": "https://github.com/rust-lang/rust/commit/b98a589e23a5471caa6698d953c6eec66304863d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b98a589e23a5471caa6698d953c6eec66304863d/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4016c729f18ce5aa8976fc16617b9368437c28db", "url": "https://api.github.com/repos/rust-lang/rust/commits/4016c729f18ce5aa8976fc16617b9368437c28db", "html_url": "https://github.com/rust-lang/rust/commit/4016c729f18ce5aa8976fc16617b9368437c28db"}], "stats": {"total": 84, "additions": 8, "deletions": 76}, "files": [{"sha": "8a212f6e5a9c5050b055fa29cd6fd0cd9e87f992", "filename": "src/test/auxiliary/issue_2316_b.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue_2316_b.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n #![allow(unused_imports)]\n-#![feature(globs)]\n \n extern crate issue_2316_a;\n "}, {"sha": "39c4e83c4b9dae3f2ac57aa24a419872a67c342a", "filename": "src/test/auxiliary/macro_crate_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,7 +10,7 @@\n \n // force-host\n \n-#![feature(globs, plugin_registrar, macro_rules, quote)]\n+#![feature(plugin_registrar, macro_rules, quote)]\n \n extern crate syntax;\n extern crate rustc;"}, {"sha": "7412c17fd45b28cf3b32854f39f94866ff241bcd", "filename": "src/test/auxiliary/namespaced_enum_emulate_flat.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fnamespaced_enum_emulate_flat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fnamespaced_enum_emulate_flat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fnamespaced_enum_emulate_flat.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs)]\n \n pub use Foo::*;\n \n@@ -34,5 +33,3 @@ pub mod nest {\n         pub fn foo() {}\n     }\n }\n-\n-"}, {"sha": "5ad1d244c926d378875b8a1b2e27bc38bcffd8ea", "filename": "src/test/auxiliary/syntax-extension-with-dll-deps-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsyntax-extension-with-dll-deps-2.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,7 @@\n // force-host\n \n #![crate_type = \"dylib\"]\n-#![feature(plugin_registrar, quote, globs)]\n+#![feature(plugin_registrar, quote)]\n \n extern crate \"syntax-extension-with-dll-deps-1\" as other;\n extern crate syntax;"}, {"sha": "d8258a72ce35ba801eb82dac21370484110081c5", "filename": "src/test/compile-fail/glob-resolve1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fglob-resolve1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fglob-resolve1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fglob-resolve1.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,8 +10,6 @@\n \n // Make sure that globs only bring in public things.\n \n-#![feature(globs)]\n-\n use bar::*;\n \n mod bar {"}, {"sha": "21aa811ea718869f6350e1686e6565936f66c318", "filename": "src/test/compile-fail/import-glob-0.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-0.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,8 +10,6 @@\n \n // error-pattern: unresolved name\n \n-#![feature(globs)]\n-\n use module_of_many_things::*;\n \n mod module_of_many_things {"}, {"sha": "fda7b190d72b4ff8b1c0eb91438917ff1800f6ff", "filename": "src/test/compile-fail/import-glob-circular.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-glob-circular.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-glob-circular.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-glob-circular.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,8 +10,6 @@\n \n // error-pattern: unresolved\n \n-#![feature(globs)]\n-\n mod circ1 {\n     pub use circ2::f2;\n     pub fn f1() { println!(\"f1\"); }"}, {"sha": "eac5a98140f8903b11e146153794e9adff603cbc", "filename": "src/test/compile-fail/import-shadow-1.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-1.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use foo::*;\n use bar::*; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "8b0809fd55a8a0e3188805a51f2b69f270ed6652", "filename": "src/test/compile-fail/import-shadow-2.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-2.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use foo::*;\n use foo::*; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "cef481af6ba5f319310996e01056878c4753c5f2", "filename": "src/test/compile-fail/import-shadow-3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-3.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use foo::Baz;\n use bar::*; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "919eea0e04601f9e3be3f6d9b5ff7227b21061a2", "filename": "src/test/compile-fail/import-shadow-4.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-4.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use foo::*;\n use bar::Baz; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "df17b7f0a2057b69fe259b752c5dff3d68fe1ea6", "filename": "src/test/compile-fail/import-shadow-5.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-5.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use foo::Baz;\n use bar::Baz; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "94269043b02052b75a5e9e3bfa3fab87edd35ac5", "filename": "src/test/compile-fail/import-shadow-6.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-6.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use qux::*;\n use foo::*; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "b3bac380710cda4ebed6656fd5490692cabbbc2f", "filename": "src/test/compile-fail/import-shadow-7.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fimport-shadow-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport-shadow-7.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Test that import shadowing using globs causes errors\n \n #![no_implicit_prelude]\n-#![feature(globs)]\n \n use foo::*;\n use qux::*; //~ERROR a type named `Baz` has already been imported in this module"}, {"sha": "f2d858391cea2ae5b10f0d298ec7318e5ef92ba1", "filename": "src/test/compile-fail/issue-1697.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-1697.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,8 +10,6 @@\n \n // Testing that we don't fail abnormally after hitting the errors\n \n-#![feature(globs)]\n-\n use unresolved::*; //~ ERROR unresolved import `unresolved::*`. Maybe a missing `extern crate unres\n \n fn main() {}"}, {"sha": "289e9855525ac14873a090a2a25a7ac4b3333ecf", "filename": "src/test/compile-fail/issue-4366-2.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-4366-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-4366-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4366-2.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n-\n // ensures that 'use foo:*' doesn't import non-public item\n \n use m1::*;\n@@ -36,4 +34,3 @@ mod m1 {\n fn main() {\n     foo(); //~ ERROR: unresolved name\n }\n-"}, {"sha": "289aa21e1cba54000cc5ec17cc9606d1187a7b9d", "filename": "src/test/compile-fail/issue-4366.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-4366.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-4366.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-4366.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -13,8 +13,6 @@\n // ensures that 'use foo:*' doesn't import non-public 'use' statements in the\n // module 'foo'\n \n-#![feature(globs)]\n-\n use m1::*;\n \n mod foo {"}, {"sha": "7e3f1171e252f5ba77908738ee02269cef1c017b", "filename": "src/test/compile-fail/issue-8208.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-8208.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fissue-8208.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8208.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,10 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n-\n use self::*; //~ ERROR: unresolved import\n \n fn main() {\n }\n-"}, {"sha": "e50f636050c536b8fe5231f764187d42a781b2cc", "filename": "src/test/compile-fail/lint-missing-doc.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,7 +10,6 @@\n \n // When denying at the crate level, be sure to not get random warnings from the\n // injected intrinsics by the compiler.\n-#![feature(globs)]\n #![deny(missing_docs)]\n #![allow(dead_code)]\n #![allow(missing_copy_implementations)]"}, {"sha": "6d59f2c650184013e3b1076fbd618abdb4b6db65", "filename": "src/test/compile-fail/lint-stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-stability.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -13,7 +13,7 @@\n // aux-build:stability_cfg1.rs\n // aux-build:stability_cfg2.rs\n \n-#![feature(globs, phase)]\n+#![feature(phase)]\n #![deny(unstable)]\n #![deny(deprecated)]\n #![deny(experimental)]"}, {"sha": "a77de551f5d2cf6418c0b15ddc80d848bb680d5b", "filename": "src/test/compile-fail/lint-unused-extern-crate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-unused-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-unused-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-extern-crate.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:lint-unused-extern-crate.rs\n \n-#![feature(globs)]\n #![deny(unused_extern_crates)]\n #![allow(unused_variables)]\n "}, {"sha": "b5c0dce6e531ee8800b8cf37a60622d56cb16330", "filename": "src/test/compile-fail/lint-unused-imports.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unused-imports.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n #![deny(unused_imports)]\n #![allow(dead_code)]\n "}, {"sha": "2f0588b261e54c08eaded6acb19e6f527b442d83", "filename": "src/test/compile-fail/name-clash-nullary.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fname-clash-nullary.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n-\n // error-pattern:declaration of `None` shadows\n use std::option::*;\n "}, {"sha": "4fcb31d36865aa55793ad1d2bdf537a2fff63111", "filename": "src/test/compile-fail/namespaced-enum-glob-import-no-impls-xcrate.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fnamespaced-enum-glob-import-no-impls-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fnamespaced-enum-glob-import-no-impls-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnamespaced-enum-glob-import-no-impls-xcrate.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n // aux-build:namespaced_enums.rs\n-#![feature(globs)]\n-\n extern crate namespaced_enums;\n \n mod m {\n@@ -25,4 +23,3 @@ pub fn main() {\n     bar(); //~ ERROR unresolved name `bar`\n     m::bar(); //~ ERROR unresolved name `m::bar`\n }\n-"}, {"sha": "602ec9ba762802aff39a439c2845bce82171d603", "filename": "src/test/compile-fail/namespaced-enum-glob-import-no-impls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fnamespaced-enum-glob-import-no-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fnamespaced-enum-glob-import-no-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnamespaced-enum-glob-import-no-impls.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs)]\n \n mod m2 {\n     pub enum Foo {"}, {"sha": "5952f05b7bc4c7b36426147ec6f8db3f7b695953", "filename": "src/test/compile-fail/privacy-ns1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy-ns1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy-ns1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy-ns1.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Check we do the correct privacy checks when we import a name and there is an\n // item with that name in both the value and type namespaces.\n \n-#![feature(globs)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n \n@@ -64,4 +63,3 @@ fn test_glob3() {\n \n fn main() {\n }\n-"}, {"sha": "7fe0574ab7d9a663902dd9433fcc6a01145f3b4c", "filename": "src/test/compile-fail/privacy-ns2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy-ns2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy-ns2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy-ns2.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,7 +11,6 @@\n // Check we do the correct privacy checks when we import a name and there is an\n // item with that name in both the value and type namespaces.\n \n-#![feature(globs)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n \n@@ -88,4 +87,3 @@ fn test_list3() {\n \n fn main() {\n }\n-"}, {"sha": "ffee00642acf6f800b01ce594e68182e1058f379", "filename": "src/test/compile-fail/privacy1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy1.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, lang_items)]\n+#![feature(lang_items)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n #[lang=\"sized\"]"}, {"sha": "b38d7aedf841ccb5f3b3bdbd8405dfbbf00cbd82", "filename": "src/test/compile-fail/privacy2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy2.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n // Test to make sure that globs don't leak in regular `use` statements.\n@@ -34,4 +33,3 @@ fn test2() {\n }\n \n #[start] fn main(_: int, _: *const *const u8) -> int { 3 }\n-"}, {"sha": "5ec10d5a4caa94458364e3c251d3d99817240231", "filename": "src/test/compile-fail/privacy3.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy3.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n // Test to make sure that private items imported through globs remain private"}, {"sha": "7bfeb8886453044a382d1059f3f76a4bae8304e1", "filename": "src/test/compile-fail/privacy4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy4.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, lang_items)]\n+#![feature(lang_items)]\n #![no_std] // makes debugging this test *a lot* easier (during resolve)\n \n #[lang = \"sized\"] pub trait Sized for Sized? {}"}, {"sha": "5ebabc2e3548c1032eb007b08db97dc2e9b09d48", "filename": "src/test/compile-fail/std-uncopyable-atomics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fstd-uncopyable-atomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Fcompile-fail%2Fstd-uncopyable-atomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstd-uncopyable-atomics.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,7 +10,6 @@\n \n // Issue #8380\n \n-#![feature(globs)]\n \n use std::sync::atomic::*;\n use std::ptr;"}, {"sha": "6712b3b0659088e731147e0e4fd54bcc4287d6d3", "filename": "src/test/run-fail/glob-use-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fglob-use-std.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -15,7 +15,6 @@\n // Expanded pretty printing causes resolve conflicts.\n \n // error-pattern:panic works\n-#![feature(globs)]\n \n use std::*;\n "}, {"sha": "da0a3e9e107e6cad55d8a7f935b0fa73e50d5aeb", "filename": "src/test/run-pass/export-glob-imports-target.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -14,8 +13,6 @@\n \n // Modified to not use export since it's going away. --pcw\n \n-#![feature(globs)]\n-\n mod foo {\n     use foo::bar::*;\n     pub mod bar {"}, {"sha": "a57b8de629eb54d14a46e014ec35795d789495e3", "filename": "src/test/run-pass/import-glob-0.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-0.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -9,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n-\n use module_of_many_things::*;\n use dug::too::greedily::and::too::deep::*;\n "}, {"sha": "24d90741bbca4c5a45319d1b10197363bf8468a6", "filename": "src/test/run-pass/import-glob-crate.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-glob-crate.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -9,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n #![allow(dead_assignment)]\n \n use std::mem::*;"}, {"sha": "3c28354dedcada0355805aa7bb053f4cc3fdb97e", "filename": "src/test/run-pass/import-in-block.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fimport-in-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fimport-in-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimport-in-block.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n-\n pub fn main() {\n     use std::mem::replace;\n     let mut x = 5i;"}, {"sha": "2b0f7cc7d7d3214dad905b149475b645f79303ac", "filename": "src/test/run-pass/intrinsics-integer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-integer.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, intrinsics)]\n+#![feature(intrinsics)]\n \n mod rusti {\n     extern \"rust-intrinsic\" {"}, {"sha": "523e7ab02d4a3481228a1d663a428d250118b660", "filename": "src/test/run-pass/intrinsics-math.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -9,7 +9,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, macro_rules, intrinsics)]\n+#![feature(macro_rules, intrinsics)]\n \n macro_rules! assert_approx_eq(\n     ($a:expr, $b:expr) => ({"}, {"sha": "72e948e613b2e2b70f2cd2b1362bc06003186cd4", "filename": "src/test/run-pass/issue-16597.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16597.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -11,8 +11,6 @@\n // compile-flags:--test\n // ignore-pretty turns out the pretty-printer doesn't handle gensym'd things...\n \n-#![feature(globs)]\n-\n mod test {\n     use super::*;\n "}, {"sha": "18c59dc9adc8e828b05dd79d570aa3a57042b0b8", "filename": "src/test/run-pass/issue-2526-a.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2526-a.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -10,7 +10,6 @@\n \n // aux-build:issue-2526.rs\n \n-#![feature(globs)]\n #![allow(unused_imports)]\n \n extern crate issue_2526;"}, {"sha": "0ff265e483efe226a29873ce9a495c3ad9822ddf", "filename": "src/test/run-pass/issue-7663.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fissue-7663.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fissue-7663.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7663.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n #![allow(unused_imports, dead_code)]\n \n mod test1 {"}, {"sha": "e4a8ec19eb8e84ce231739a702cff4bf956f3e92", "filename": "src/test/run-pass/namespaced-enum-emulate-flat.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fnamespaced-enum-emulate-flat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fnamespaced-enum-emulate-flat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnamespaced-enum-emulate-flat.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs)]\n \n pub use Foo::*;\n use nest::{Bar, D, E, F};"}, {"sha": "e5317c2f57302ae63ee84e3ff237f5a18ee783b1", "filename": "src/test/run-pass/namespaced-enum-glob-import-xcrate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fnamespaced-enum-glob-import-xcrate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fnamespaced-enum-glob-import-xcrate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnamespaced-enum-glob-import-xcrate.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n // aux-build:namespaced_enums.rs\n-#![feature(globs)]\n \n extern crate namespaced_enums;\n "}, {"sha": "c48be3af248f0982577fa3671a5ee3712b8dd168", "filename": "src/test/run-pass/namespaced-enum-glob-import.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fnamespaced-enum-glob-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fnamespaced-enum-glob-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnamespaced-enum-glob-import.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs)]\n \n mod m2 {\n     pub enum Foo {"}, {"sha": "f3380352f5fa946c96a52c215461adffebb508eb", "filename": "src/test/run-pass/privacy-ns.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fprivacy-ns.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -12,7 +12,6 @@\n // Check we do the correct privacy checks when we import a name and there is an\n // item with that name in both the value and type namespaces.\n \n-#![feature(globs)]\n #![allow(dead_code)]\n #![allow(unused_imports)]\n \n@@ -115,4 +114,3 @@ fn test_glob3() {\n \n fn main() {\n }\n-"}, {"sha": "22ca737d421987ac99cfe78fcc3b5c17083b3543", "filename": "src/test/run-pass/reexport-star.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Freexport-star.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Freexport-star.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freexport-star.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -9,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n \n mod a {\n     pub fn f() {}"}, {"sha": "2eff97d31b25d4875a39ce06c9127b2f9b8a51c8", "filename": "src/test/run-pass/tag-exports.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Ftag-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftag-exports.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -1,4 +1,3 @@\n-\n // Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n@@ -9,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs)]\n \n use alder::*;\n "}, {"sha": "2598679f92107c52cc7009dc98bd0a368490b01e", "filename": "src/test/run-pass/tcp-connect-timeouts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Ftcp-connect-timeouts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b98a589e23a5471caa6698d953c6eec66304863d/src%2Ftest%2Frun-pass%2Ftcp-connect-timeouts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-connect-timeouts.rs?ref=b98a589e23a5471caa6698d953c6eec66304863d", "patch": "@@ -16,7 +16,7 @@\n // one test task to ensure that errors are timeouts, not file descriptor\n // exhaustion.\n \n-#![feature(macro_rules, globs)]\n+#![feature(macro_rules)]\n #![allow(experimental)]\n #![reexport_test_harness_main = \"test_main\"]\n "}]}