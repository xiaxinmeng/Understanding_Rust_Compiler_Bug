{"sha": "430e047a6f2364f9c6d7d950816eef09f3db0428", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMGUwNDdhNmYyMzY0ZjljNmQ3ZDk1MDgxNmVlZjA5ZjNkYjA0Mjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-29T20:04:56Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-11-01T07:58:03Z"}, "message": "start collecting some things ALLOWED by stacked borrows in a run-pass test", "tree": {"sha": "a6cd66f16b5610434f741e2d973132d1e8c113e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6cd66f16b5610434f741e2d973132d1e8c113e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/430e047a6f2364f9c6d7d950816eef09f3db0428", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/430e047a6f2364f9c6d7d950816eef09f3db0428", "html_url": "https://github.com/rust-lang/rust/commit/430e047a6f2364f9c6d7d950816eef09f3db0428", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/430e047a6f2364f9c6d7d950816eef09f3db0428/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85f821d7e9c1f920e6584821ffa0dbccded8f657", "url": "https://api.github.com/repos/rust-lang/rust/commits/85f821d7e9c1f920e6584821ffa0dbccded8f657", "html_url": "https://github.com/rust-lang/rust/commit/85f821d7e9c1f920e6584821ffa0dbccded8f657"}], "stats": {"total": 36, "additions": 27, "deletions": 9}, "files": [{"sha": "8639a289363bad4560d30cf8b2c5910bfc5304f3", "filename": "tests/run-pass/deref_partially_dangling_raw.rs", "status": "removed", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/85f821d7e9c1f920e6584821ffa0dbccded8f657/tests%2Frun-pass%2Fderef_partially_dangling_raw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f821d7e9c1f920e6584821ffa0dbccded8f657/tests%2Frun-pass%2Fderef_partially_dangling_raw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fderef_partially_dangling_raw.rs?ref=85f821d7e9c1f920e6584821ffa0dbccded8f657", "patch": "@@ -1,9 +0,0 @@\n-// Deref a raw ptr to access a field of a large struct, where the field\n-// is allocated but not the entire struct is.\n-// For now, we want to allow this.\n-\n-fn main() {\n-    let x = (1, 1);\n-    let xptr = &x as *const _ as *const (i32, i32, i32);\n-    let _val = unsafe { (*xptr).1 };\n-}"}, {"sha": "cde6968a26415857edf04613638338e94b2a3493", "filename": "tests/run-pass/stacked-borrows.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/430e047a6f2364f9c6d7d950816eef09f3db0428/tests%2Frun-pass%2Fstacked-borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/430e047a6f2364f9c6d7d950816eef09f3db0428/tests%2Frun-pass%2Fstacked-borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fstacked-borrows.rs?ref=430e047a6f2364f9c6d7d950816eef09f3db0428", "patch": "@@ -0,0 +1,27 @@\n+// Test various stacked-borrows-related things.\n+fn main() {\n+    deref_partially_dangling_raw();\n+    read_does_not_invalidate();\n+}\n+\n+// Deref a raw ptr to access a field of a large struct, where the field\n+// is allocated but not the entire struct is.\n+// For now, we want to allow this.\n+fn deref_partially_dangling_raw() {\n+    let x = (1, 1);\n+    let xptr = &x as *const _ as *const (i32, i32, i32);\n+    let _val = unsafe { (*xptr).1 };\n+}\n+\n+// Make sure that reading from an `&mut` does, like reborrowing to `&`,\n+// NOT invalidate other reborrows.\n+fn read_does_not_invalidate() {\n+    fn foo(x: &mut (i32, i32)) -> &i32 {\n+        let xraw = x as *mut (i32, i32);\n+        let ret = unsafe { &(*xraw).1 };\n+        let _val = x.1; // we just read, this does NOT invalidate the reborrows.\n+        ret\n+    }\n+\n+    foo(&mut (1, 2));\n+}"}]}