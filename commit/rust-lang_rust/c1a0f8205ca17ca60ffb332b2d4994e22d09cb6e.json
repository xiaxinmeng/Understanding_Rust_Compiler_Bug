{"sha": "c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "node_id": "C_kwDOAAsO6NoAKGMxYTBmODIwNWNhMTdjYTYwZmZiMzMyYjJkNDk5NGUyMmQwOWNiNmU", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-12T15:31:34Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Rename checked_binop_checks_overflow.", "tree": {"sha": "d078344ad497734fa5d098900f4000d5fdd7c7e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d078344ad497734fa5d098900f4000d5fdd7c7e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "html_url": "https://github.com/rust-lang/rust/commit/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5769193d1661238b4792c26daef350da1df5cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5769193d1661238b4792c26daef350da1df5cf6", "html_url": "https://github.com/rust-lang/rust/commit/a5769193d1661238b4792c26daef350da1df5cf6"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "450488315ef01d19b50963ca68fa79fd07614ed0", "filename": "compiler/rustc_const_eval/src/interpret/machine.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fmachine.rs?ref=c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "patch": "@@ -147,8 +147,9 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         true\n     }\n \n-    /// Whether CheckedBinOp MIR statements should actually check for overflow.\n-    fn checked_binop_checks_overflow(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n+    /// Whether Assert(OverflowNeg) and Assert(Overflow) MIR terminators should actually\n+    /// check for overflow.\n+    fn ignore_checkable_overflow_assertions(_ecx: &InterpCx<'mir, 'tcx, Self>) -> bool;\n \n     /// Entry point for obtaining the MIR of anything that should get evaluated.\n     /// So not just functions and shims, but also const/static initializers, anonymous\n@@ -466,8 +467,8 @@ pub macro compile_time_machine(<$mir: lifetime, $tcx: lifetime>) {\n     }\n \n     #[inline(always)]\n-    fn checked_binop_checks_overflow(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n-        true\n+    fn ignore_checkable_overflow_assertions(_ecx: &InterpCx<$mir, $tcx, Self>) -> bool {\n+        false\n     }\n \n     #[inline(always)]"}, {"sha": "294bd35c13ee1529ba09c9a07dfaeb42b1b750dd", "filename": "compiler/rustc_const_eval/src/interpret/terminator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fterminator.rs?ref=c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "patch": "@@ -137,7 +137,7 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n \n             Assert { ref cond, expected, ref msg, target, cleanup } => {\n-                let ignored = !M::checked_binop_checks_overflow(self)\n+                let ignored = M::ignore_checkable_overflow_assertions(self)\n                     && match msg {\n                         mir::AssertKind::OverflowNeg(..) => true,\n                         mir::AssertKind::Overflow(op, ..) => op.is_checkable(),"}, {"sha": "8bd1e802f8a52e4e64106675dde340d302d7cdd0", "filename": "src/tools/miri/src/machine.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Fsrc%2Fmachine.rs?ref=c1a0f8205ca17ca60ffb332b2d4994e22d09cb6e", "patch": "@@ -815,8 +815,8 @@ impl<'mir, 'tcx> Machine<'mir, 'tcx> for MiriMachine<'mir, 'tcx> {\n     }\n \n     #[inline(always)]\n-    fn checked_binop_checks_overflow(ecx: &MiriInterpCx<'mir, 'tcx>) -> bool {\n-        ecx.tcx.sess.overflow_checks()\n+    fn ignore_checkable_overflow_assertions(ecx: &MiriInterpCx<'mir, 'tcx>) -> bool {\n+        !ecx.tcx.sess.overflow_checks()\n     }\n \n     #[inline(always)]"}]}