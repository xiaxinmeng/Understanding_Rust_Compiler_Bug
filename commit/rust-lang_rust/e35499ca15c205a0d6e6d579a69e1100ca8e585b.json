{"sha": "e35499ca15c205a0d6e6d579a69e1100ca8e585b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNTQ5OWNhMTVjMjA1YTBkNmU2ZDU3OWE2OWUxMTAwY2E4ZTU4NWI=", "commit": {"author": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-04-14T07:48:27Z"}, "committer": {"name": "Mike Hommey", "email": "mh@glandium.org", "date": "2018-04-14T07:48:27Z"}, "message": "Replace remaining uses of deprecated Heap with Global", "tree": {"sha": "baa5a668a78d6ca41898db73aad0baf412a07eed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/baa5a668a78d6ca41898db73aad0baf412a07eed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e35499ca15c205a0d6e6d579a69e1100ca8e585b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e35499ca15c205a0d6e6d579a69e1100ca8e585b", "html_url": "https://github.com/rust-lang/rust/commit/e35499ca15c205a0d6e6d579a69e1100ca8e585b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e35499ca15c205a0d6e6d579a69e1100ca8e585b/comments", "author": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "committer": {"login": "glandium", "id": 1038527, "node_id": "MDQ6VXNlcjEwMzg1Mjc=", "avatar_url": "https://avatars.githubusercontent.com/u/1038527?v=4", "gravatar_id": "", "url": "https://api.github.com/users/glandium", "html_url": "https://github.com/glandium", "followers_url": "https://api.github.com/users/glandium/followers", "following_url": "https://api.github.com/users/glandium/following{/other_user}", "gists_url": "https://api.github.com/users/glandium/gists{/gist_id}", "starred_url": "https://api.github.com/users/glandium/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/glandium/subscriptions", "organizations_url": "https://api.github.com/users/glandium/orgs", "repos_url": "https://api.github.com/users/glandium/repos", "events_url": "https://api.github.com/users/glandium/events{/privacy}", "received_events_url": "https://api.github.com/users/glandium/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c8e9b975139d7f312ba55ef7753fd800ac3b761", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c8e9b975139d7f312ba55ef7753fd800ac3b761", "html_url": "https://github.com/rust-lang/rust/commit/4c8e9b975139d7f312ba55ef7753fd800ac3b761"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "d4fcdcf743bc676d6f20fa25a9acbea5fda8daed", "filename": "src/test/run-pass/allocator-alloc-one.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e35499ca15c205a0d6e6d579a69e1100ca8e585b/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e35499ca15c205a0d6e6d579a69e1100ca8e585b/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs?ref=e35499ca15c205a0d6e6d579a69e1100ca8e585b", "patch": "@@ -10,15 +10,15 @@\n \n #![feature(allocator_api, nonnull)]\n \n-use std::alloc::{Heap, Alloc};\n+use std::alloc::{Alloc, Global};\n \n fn main() {\n     unsafe {\n-        let ptr = Heap.alloc_one::<i32>().unwrap_or_else(|_| {\n-            Heap.oom()\n+        let ptr = Global.alloc_one::<i32>().unwrap_or_else(|_| {\n+            Global.oom()\n         });\n         *ptr.as_ptr() = 4;\n         assert_eq!(*ptr.as_ptr(), 4);\n-        Heap.dealloc_one(ptr);\n+        Global.dealloc_one(ptr);\n     }\n }"}, {"sha": "44be59f5c5b1a9ea39d3d4bedb21179021e05c4c", "filename": "src/test/run-pass/regions-mock-trans.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e35499ca15c205a0d6e6d579a69e1100ca8e585b/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e35499ca15c205a0d6e6d579a69e1100ca8e585b/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-trans.rs?ref=e35499ca15c205a0d6e6d579a69e1100ca8e585b", "patch": "@@ -12,7 +12,7 @@\n \n #![feature(allocator_api)]\n \n-use std::alloc::{Alloc, Heap, Layout};\n+use std::alloc::{Alloc, Global, Layout};\n use std::ptr::NonNull;\n \n struct arena(());\n@@ -32,8 +32,8 @@ struct Ccx {\n \n fn alloc<'a>(_bcx : &'a arena) -> &'a Bcx<'a> {\n     unsafe {\n-        let ptr = Heap.alloc(Layout::new::<Bcx>())\n-            .unwrap_or_else(|_| Heap.oom());\n+        let ptr = Global.alloc(Layout::new::<Bcx>())\n+            .unwrap_or_else(|_| Global.oom());\n         &*(ptr.as_ptr() as *const _)\n     }\n }\n@@ -46,7 +46,7 @@ fn g(fcx : &Fcx) {\n     let bcx = Bcx { fcx: fcx };\n     let bcx2 = h(&bcx);\n     unsafe {\n-        Heap.dealloc(NonNull::new_unchecked(bcx2 as *const _ as *mut _), Layout::new::<Bcx>());\n+        Global.dealloc(NonNull::new_unchecked(bcx2 as *const _ as *mut _), Layout::new::<Bcx>());\n     }\n }\n "}]}