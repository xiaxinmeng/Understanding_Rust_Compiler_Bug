{"sha": "ea7b81fef990e281b4b958cff7357544076d4b15", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhN2I4MWZlZjk5MGUyODFiNGI5NThjZmY3MzU3NTQ0MDc2ZDRiMTU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-01T11:40:03Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-12-01T11:40:03Z"}, "message": "Emit unresolved proc macro errors", "tree": {"sha": "248fe495ac74a7b0e759c0890da17d6851fe3e6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/248fe495ac74a7b0e759c0890da17d6851fe3e6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea7b81fef990e281b4b958cff7357544076d4b15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea7b81fef990e281b4b958cff7357544076d4b15", "html_url": "https://github.com/rust-lang/rust/commit/ea7b81fef990e281b4b958cff7357544076d4b15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea7b81fef990e281b4b958cff7357544076d4b15/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be50908a5031fee45fcbba97bc0c96187324ea54", "url": "https://api.github.com/repos/rust-lang/rust/commits/be50908a5031fee45fcbba97bc0c96187324ea54", "html_url": "https://github.com/rust-lang/rust/commit/be50908a5031fee45fcbba97bc0c96187324ea54"}], "stats": {"total": 37, "additions": 28, "deletions": 9}, "files": [{"sha": "1de7d30e200e87c12edf2046ed2e7ccdaef25023", "filename": "crates/hir_def/src/body/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b81fef990e281b4b958cff7357544076d4b15/crates%2Fhir_def%2Fsrc%2Fbody%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b81fef990e281b4b958cff7357544076d4b15/crates%2Fhir_def%2Fsrc%2Fbody%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Fdiagnostics.rs?ref=ea7b81fef990e281b4b958cff7357544076d4b15", "patch": "@@ -2,12 +2,13 @@\n \n use hir_expand::diagnostics::DiagnosticSink;\n \n-use crate::diagnostics::{InactiveCode, MacroError};\n+use crate::diagnostics::{InactiveCode, MacroError, UnresolvedProcMacro};\n \n #[derive(Debug, Eq, PartialEq)]\n pub(crate) enum BodyDiagnostic {\n     InactiveCode(InactiveCode),\n     MacroError(MacroError),\n+    UnresolvedProcMacro(UnresolvedProcMacro),\n }\n \n impl BodyDiagnostic {\n@@ -19,6 +20,9 @@ impl BodyDiagnostic {\n             BodyDiagnostic::MacroError(diag) => {\n                 sink.push(diag.clone());\n             }\n+            BodyDiagnostic::UnresolvedProcMacro(diag) => {\n+                sink.push(diag.clone());\n+            }\n         }\n     }\n }"}, {"sha": "2c41c000599e21e04c85708cdd5fb4974a1c497b", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 23, "deletions": 8, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/ea7b81fef990e281b4b958cff7357544076d4b15/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea7b81fef990e281b4b958cff7357544076d4b15/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=ea7b81fef990e281b4b958cff7357544076d4b15", "patch": "@@ -8,7 +8,7 @@ use either::Either;\n use hir_expand::{\n     hygiene::Hygiene,\n     name::{name, AsName, Name},\n-    HirFileId, MacroDefId, MacroDefKind,\n+    ExpandError, HirFileId, MacroDefId, MacroDefKind,\n };\n use rustc_hash::FxHashMap;\n use syntax::{\n@@ -25,7 +25,7 @@ use crate::{\n     body::{Body, BodySourceMap, Expander, PatPtr, SyntheticSyntax},\n     builtin_type::{BuiltinFloat, BuiltinInt},\n     db::DefDatabase,\n-    diagnostics::{InactiveCode, MacroError},\n+    diagnostics::{InactiveCode, MacroError, UnresolvedProcMacro},\n     expr::{\n         dummy_expr_id, ArithOp, Array, BinaryOp, BindingAnnotation, CmpOp, Expr, ExprId, Literal,\n         LogicOp, MatchArm, Ordering, Pat, PatId, RecordFieldPat, RecordLitField, Statement,\n@@ -563,12 +563,27 @@ impl ExprCollector<'_> {\n                     let macro_call = self.expander.to_source(AstPtr::new(&e));\n                     let res = self.expander.enter_expand(self.db, Some(&self.body.item_scope), e);\n \n-                    if let Some(err) = res.err {\n-                        self.source_map.diagnostics.push(BodyDiagnostic::MacroError(MacroError {\n-                            file: self.expander.current_file_id,\n-                            node: syntax_ptr.clone().into(),\n-                            message: err.to_string(),\n-                        }));\n+                    match res.err {\n+                        Some(ExpandError::UnresolvedProcMacro) => {\n+                            self.source_map.diagnostics.push(BodyDiagnostic::UnresolvedProcMacro(\n+                                UnresolvedProcMacro {\n+                                    file: self.expander.current_file_id,\n+                                    node: syntax_ptr.clone().into(),\n+                                    precise_location: None,\n+                                    macro_name: None,\n+                                },\n+                            ));\n+                        }\n+                        Some(err) => {\n+                            self.source_map.diagnostics.push(BodyDiagnostic::MacroError(\n+                                MacroError {\n+                                    file: self.expander.current_file_id,\n+                                    node: syntax_ptr.clone().into(),\n+                                    message: err.to_string(),\n+                                },\n+                            ));\n+                        }\n+                        None => {}\n                     }\n \n                     match res.value {"}]}