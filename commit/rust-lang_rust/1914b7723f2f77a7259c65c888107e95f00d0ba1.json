{"sha": "1914b7723f2f77a7259c65c888107e95f00d0ba1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5MTRiNzcyM2YyZjc3YTcyNTljNjVjODg4MTA3ZTk1ZjAwZDBiYTE=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-03T20:58:48Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-03-03T20:58:48Z"}, "message": "Don't complete `super` unless its valid in paths", "tree": {"sha": "203572db4c48694c2bdd00987edb9a4b412a0384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/203572db4c48694c2bdd00987edb9a4b412a0384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1914b7723f2f77a7259c65c888107e95f00d0ba1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1914b7723f2f77a7259c65c888107e95f00d0ba1", "html_url": "https://github.com/rust-lang/rust/commit/1914b7723f2f77a7259c65c888107e95f00d0ba1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1914b7723f2f77a7259c65c888107e95f00d0ba1/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0fa7abc5044471b951149aa35244620db847ff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0fa7abc5044471b951149aa35244620db847ff9", "html_url": "https://github.com/rust-lang/rust/commit/d0fa7abc5044471b951149aa35244620db847ff9"}], "stats": {"total": 57, "additions": 34, "deletions": 23}, "files": [{"sha": "cb05e85fce22dd738b24de769cf7b66de86ba3a1", "filename": "crates/ide_completion/src/completions/attribute.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1914b7723f2f77a7259c65c888107e95f00d0ba1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1914b7723f2f77a7259c65c888107e95f00d0ba1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute.rs?ref=1914b7723f2f77a7259c65c888107e95f00d0ba1", "patch": "@@ -39,7 +39,8 @@ pub(crate) fn complete_attribute(acc: &mut Completions, ctx: &CompletionContext)\n }\n \n fn complete_attribute_start(acc: &mut Completions, ctx: &CompletionContext, attribute: &ast::Attr) {\n-    for attr_completion in ATTRIBUTES {\n+    let is_inner = attribute.kind() == ast::AttrKind::Inner;\n+    for attr_completion in ATTRIBUTES.iter().filter(|compl| is_inner || !compl.prefer_inner) {\n         let mut item = CompletionItem::new(\n             CompletionKind::Attribute,\n             ctx.source_range(),"}, {"sha": "1bcc8727fdd51e55794a5076375a9ce4d5f65ea8", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 12, "deletions": 15, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1914b7723f2f77a7259c65c888107e95f00d0ba1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1914b7723f2f77a7259c65c888107e95f00d0ba1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=1914b7723f2f77a7259c65c888107e95f00d0ba1", "patch": "@@ -25,9 +25,12 @@ pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n             return;\n         }\n         func.param_list().into_iter().flat_map(|it| it.params()).for_each(|param| {\n-            let text = param.syntax().text().to_string();\n-            params.entry(text).or_insert(param);\n-        })\n+            if let Some(pat) = param.pat() {\n+                let text = param.syntax().text().to_string();\n+                let lookup = pat.syntax().text().to_string();\n+                params.entry(text).or_insert(lookup);\n+            }\n+        });\n     };\n \n     for node in ctx.token.parent().ancestors() {\n@@ -50,18 +53,12 @@ pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n         };\n     }\n \n-    params\n-        .into_iter()\n-        .filter_map(|(label, param)| {\n-            let lookup = param.pat()?.syntax().text().to_string();\n-            Some((label, lookup))\n-        })\n-        .for_each(|(label, lookup)| {\n-            CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label)\n-                .kind(CompletionItemKind::Binding)\n-                .lookup_by(lookup)\n-                .add_to(acc)\n-        });\n+    params.into_iter().for_each(|(label, lookup)| {\n+        CompletionItem::new(CompletionKind::Magic, ctx.source_range(), label)\n+            .kind(CompletionItemKind::Binding)\n+            .lookup_by(lookup)\n+            .add_to(acc)\n+    });\n }\n \n #[cfg(test)]"}, {"sha": "17bd19522fb2571c07e99cf44c35f6c526115581", "filename": "crates/ide_completion/src/completions/keyword.rs", "status": "modified", "additions": 20, "deletions": 7, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/1914b7723f2f77a7259c65c888107e95f00d0ba1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1914b7723f2f77a7259c65c888107e95f00d0ba1/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fkeyword.rs?ref=1914b7723f2f77a7259c65c888107e95f00d0ba1", "patch": "@@ -1,5 +1,7 @@\n //! Completes keywords.\n \n+use std::iter;\n+\n use syntax::SyntaxKind;\n use test_utils::mark;\n \n@@ -19,10 +21,14 @@ pub(crate) fn complete_use_tree_keyword(acc: &mut Completions, ctx: &CompletionC\n         CompletionItem::new(CompletionKind::Keyword, source_range, \"self\")\n             .kind(CompletionItemKind::Keyword)\n             .add_to(acc);\n-        CompletionItem::new(CompletionKind::Keyword, source_range, \"super::\")\n-            .kind(CompletionItemKind::Keyword)\n-            .insert_text(\"super::\")\n-            .add_to(acc);\n+        if iter::successors(ctx.path_qual.clone(), |p| p.qualifier())\n+            .all(|p| p.segment().and_then(|s| s.super_token()).is_some())\n+        {\n+            CompletionItem::new(CompletionKind::Keyword, source_range, \"super::\")\n+                .kind(CompletionItemKind::Keyword)\n+                .insert_text(\"super::\")\n+                .add_to(acc);\n+        }\n     }\n \n     // Suggest .await syntax for types that implement Future trait\n@@ -204,8 +210,16 @@ mod tests {\n             \"#]],\n         );\n \n+        // FIXME: `self` shouldn't be shown here and the check below\n         check(\n             r\"use a::$0\",\n+            expect![[r#\"\n+            kw self\n+        \"#]],\n+        );\n+\n+        check(\n+            r\"use super::$0\",\n             expect![[r#\"\n                 kw self\n                 kw super::\n@@ -215,9 +229,8 @@ mod tests {\n         check(\n             r\"use a::{b, $0}\",\n             expect![[r#\"\n-                kw self\n-                kw super::\n-            \"#]],\n+            kw self\n+        \"#]],\n         );\n     }\n "}]}