{"sha": "1692f07393dba4f5c122df1a609d5b18751bf406", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2OTJmMDczOTNkYmE0ZjVjMTIyZGYxYTYwOWQ1YjE4NzUxYmY0MDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-07T17:48:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-07T18:44:43Z"}, "message": "ToNav for GenericParam", "tree": {"sha": "8df8763aabe4ac55f93edbb3d8eed609826a6243", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8df8763aabe4ac55f93edbb3d8eed609826a6243"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1692f07393dba4f5c122df1a609d5b18751bf406", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1692f07393dba4f5c122df1a609d5b18751bf406", "html_url": "https://github.com/rust-lang/rust/commit/1692f07393dba4f5c122df1a609d5b18751bf406", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1692f07393dba4f5c122df1a609d5b18751bf406/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dda9587e75f4fd1740d16531038023ff582ef43f", "url": "https://api.github.com/repos/rust-lang/rust/commits/dda9587e75f4fd1740d16531038023ff582ef43f", "html_url": "https://github.com/rust-lang/rust/commit/dda9587e75f4fd1740d16531038023ff582ef43f"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "8833750c8468c3343ac32ed01cc9a6c66adefd7d", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1692f07393dba4f5c122df1a609d5b18751bf406/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1692f07393dba4f5c122df1a609d5b18751bf406/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=1692f07393dba4f5c122df1a609d5b18751bf406", "patch": "@@ -860,6 +860,13 @@ pub struct GenericParam {\n     pub(crate) id: GenericParamId,\n }\n \n+impl GenericParam {\n+    pub fn name(self, db: &impl HirDatabase) -> Name {\n+        let params = db.generic_params(self.id.parent);\n+        params.params[self.id.local_id].name.clone()\n+    }\n+}\n+\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct ImplBlock {\n     pub(crate) id: ImplId,"}, {"sha": "e8c3d980fb6be24524409bcaf68ab39f1e655c7e", "filename": "crates/ra_ide/src/display/navigation_target.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1692f07393dba4f5c122df1a609d5b18751bf406/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1692f07393dba4f5c122df1a609d5b18751bf406/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=1692f07393dba4f5c122df1a609d5b18751bf406", "patch": "@@ -6,7 +6,7 @@ use ra_db::{FileId, SourceDatabase};\n use ra_syntax::{\n     ast::{self, DocCommentsOwner, NameOwner},\n     match_ast, AstNode, SmolStr,\n-    SyntaxKind::{self, BIND_PAT},\n+    SyntaxKind::{self, BIND_PAT, TYPE_PARAM},\n     TextRange,\n };\n \n@@ -351,6 +351,26 @@ impl ToNav for hir::Local {\n     }\n }\n \n+impl ToNav for hir::GenericParam {\n+    fn to_nav(&self, db: &RootDatabase) -> NavigationTarget {\n+        let src = self.source(db);\n+        let range = match src.value {\n+            Either::Left(it) => it.syntax().text_range(),\n+            Either::Right(it) => it.syntax().text_range(),\n+        };\n+        NavigationTarget {\n+            file_id: src.file_id.original_file(db),\n+            name: self.name(db).to_string().into(),\n+            kind: TYPE_PARAM,\n+            full_range: range,\n+            focus_range: None,\n+            container_name: None,\n+            description: None,\n+            docs: None,\n+        }\n+    }\n+}\n+\n pub(crate) fn docs_from_symbol(db: &RootDatabase, symbol: &FileSymbol) -> Option<String> {\n     let parse = db.parse(symbol.file_id);\n     let node = symbol.ptr.to_node(parse.tree().syntax());"}]}