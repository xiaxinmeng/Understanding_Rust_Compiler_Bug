{"sha": "0982060a69e7a3faaa705d0e64bf651872b2f640", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5ODIwNjBhNjllN2EzZmFhYTcwNWQwZTY0YmY2NTE4NzJiMmY2NDA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-27T15:46:55Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-27T15:46:55Z"}, "message": "Rollup merge of #65834 - Mark-Simulacrum:driver-clean, r=nikomatsakis\n\nRemove lint callback from driver\n\nThis is leftover from a restructuring of lint registration for drivers; it should now happen via the register_lints field on Config rather than this function.\n\nThis is not used by anyone to my knowledge (including the compiler itself); it was introduced in an abandoned refactor in #65193.", "tree": {"sha": "1cae0a5f5a448cb0f1546fac95ca4c518b311224", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cae0a5f5a448cb0f1546fac95ca4c518b311224"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0982060a69e7a3faaa705d0e64bf651872b2f640", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdtbvvCRBK7hj4Ov3rIwAAdHIIACH3Gghd2AodpwJRm6XlVVPy\n1lPowD2FZMlpBNpZyQqRK21xtzO1+BuvbeOr651AiDgIklJMcyLr8n7TEm5ElmcG\nn5OBByiIkoE9f1YbLSMehtlzKnSjR5bqSvKvvbJ3R7HZEZIPef9dWu3BvD6X4Ynd\nTcRnnYybFxmkyS7mCaoFQrwCRKN/XwTgiLKrsHO6IKSLCXJ7zgm80ZROHKu2olBS\n2ocZeYwTR+aE2Swg2u9+E8hdA+OXEUllgSUCY9DwkoogABetAQK0pYv3pAU8mJAU\nJmLbRgAisqGbIkpUjP1f1WRGYLWR4s+K2ZCCzSmvncyADh+LxI+g41iIHRN3CIM=\n=Q3O3\n-----END PGP SIGNATURE-----\n", "payload": "tree 1cae0a5f5a448cb0f1546fac95ca4c518b311224\nparent 5406f7ad49a08095724db5f3f3c4a92a760ce01b\nparent 402a8af1d59a573ebd40cd953a779013969ec313\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1572191215 +0100\ncommitter GitHub <noreply@github.com> 1572191215 +0100\n\nRollup merge of #65834 - Mark-Simulacrum:driver-clean, r=nikomatsakis\n\nRemove lint callback from driver\n\nThis is leftover from a restructuring of lint registration for drivers; it should now happen via the register_lints field on Config rather than this function.\n\nThis is not used by anyone to my knowledge (including the compiler itself); it was introduced in an abandoned refactor in #65193.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0982060a69e7a3faaa705d0e64bf651872b2f640", "html_url": "https://github.com/rust-lang/rust/commit/0982060a69e7a3faaa705d0e64bf651872b2f640", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0982060a69e7a3faaa705d0e64bf651872b2f640/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5406f7ad49a08095724db5f3f3c4a92a760ce01b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5406f7ad49a08095724db5f3f3c4a92a760ce01b", "html_url": "https://github.com/rust-lang/rust/commit/5406f7ad49a08095724db5f3f3c4a92a760ce01b"}, {"sha": "402a8af1d59a573ebd40cd953a779013969ec313", "url": "https://api.github.com/repos/rust-lang/rust/commits/402a8af1d59a573ebd40cd953a779013969ec313", "html_url": "https://github.com/rust-lang/rust/commit/402a8af1d59a573ebd40cd953a779013969ec313"}], "stats": {"total": 2, "additions": 0, "deletions": 2}, "files": [{"sha": "6e8bc11162f66b351571e30fb08f606dd3c9aa4a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0982060a69e7a3faaa705d0e64bf651872b2f640/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0982060a69e7a3faaa705d0e64bf651872b2f640/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=0982060a69e7a3faaa705d0e64bf651872b2f640", "patch": "@@ -106,8 +106,6 @@ pub fn abort_on_err<T>(result: Result<T, ErrorReported>, sess: &Session) -> T {\n pub trait Callbacks {\n     /// Called before creating the compiler instance\n     fn config(&mut self, _config: &mut interface::Config) {}\n-    /// Called early during compilation to allow other drivers to easily register lints.\n-    fn extra_lints(&mut self, _ls: &mut lint::LintStore) {}\n     /// Called after parsing. Return value instructs the compiler whether to\n     /// continue the compilation afterwards (defaults to `Compilation::Continue`)\n     fn after_parsing(&mut self, _compiler: &interface::Compiler) -> Compilation {"}]}