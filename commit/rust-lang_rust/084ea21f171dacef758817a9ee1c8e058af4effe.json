{"sha": "084ea21f171dacef758817a9ee1c8e058af4effe", "node_id": "C_kwDOAAsO6NoAKDA4NGVhMjFmMTcxZGFjZWY3NTg4MTdhOWVlMWM4ZTA1OGFmNGVmZmU", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2021-12-15T08:48:26Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2021-12-15T08:48:26Z"}, "message": "Track caller of slice split and swap", "tree": {"sha": "52ea892f5ffdbb990962fbf8b48bd9f58c4799de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/52ea892f5ffdbb990962fbf8b48bd9f58c4799de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/084ea21f171dacef758817a9ee1c8e058af4effe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/084ea21f171dacef758817a9ee1c8e058af4effe", "html_url": "https://github.com/rust-lang/rust/commit/084ea21f171dacef758817a9ee1c8e058af4effe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/084ea21f171dacef758817a9ee1c8e058af4effe/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "195e931b02b69bbce1bcf4632f4e2d5603ef006b", "url": "https://api.github.com/repos/rust-lang/rust/commits/195e931b02b69bbce1bcf4632f4e2d5603ef006b", "html_url": "https://github.com/rust-lang/rust/commit/195e931b02b69bbce1bcf4632f4e2d5603ef006b"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "2f14de08dd2934d6376e6ee7345aa0f6db5a15fe", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/084ea21f171dacef758817a9ee1c8e058af4effe/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/084ea21f171dacef758817a9ee1c8e058af4effe/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=084ea21f171dacef758817a9ee1c8e058af4effe", "patch": "@@ -583,6 +583,7 @@ impl<T> [T] {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[rustc_const_unstable(feature = \"const_swap\", issue = \"83163\")]\n     #[inline]\n+    #[track_caller]\n     pub const fn swap(&mut self, a: usize, b: usize) {\n         let _ = &self[a];\n         let _ = &self[b];\n@@ -1499,6 +1500,7 @@ impl<T> [T] {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n+    #[track_caller]\n     pub fn split_at(&self, mid: usize) -> (&[T], &[T]) {\n         assert!(mid <= self.len());\n         // SAFETY: `[ptr; mid]` and `[mid; len]` are inside `self`, which\n@@ -1529,6 +1531,7 @@ impl<T> [T] {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n+    #[track_caller]\n     pub fn split_at_mut(&mut self, mid: usize) -> (&mut [T], &mut [T]) {\n         assert!(mid <= self.len());\n         // SAFETY: `[ptr; mid]` and `[mid; len]` are inside `self`, which\n@@ -1668,6 +1671,7 @@ impl<T> [T] {\n     /// ```\n     #[unstable(feature = \"split_array\", reason = \"new API\", issue = \"90091\")]\n     #[inline]\n+    #[track_caller]\n     pub fn split_array_ref<const N: usize>(&self) -> (&[T; N], &[T]) {\n         let (a, b) = self.split_at(N);\n         // SAFETY: a points to [T; N]? Yes it's [T] of length N (checked by split_at)\n@@ -1699,6 +1703,7 @@ impl<T> [T] {\n     /// ```\n     #[unstable(feature = \"split_array\", reason = \"new API\", issue = \"90091\")]\n     #[inline]\n+    #[track_caller]\n     pub fn split_array_mut<const N: usize>(&mut self) -> (&mut [T; N], &mut [T]) {\n         let (a, b) = self.split_at_mut(N);\n         // SAFETY: a points to [T; N]? Yes it's [T] of length N (checked by split_at_mut)"}]}