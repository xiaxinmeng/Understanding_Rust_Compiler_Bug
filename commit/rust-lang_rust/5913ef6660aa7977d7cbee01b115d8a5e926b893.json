{"sha": "5913ef6660aa7977d7cbee01b115d8a5e926b893", "node_id": "C_kwDOAAsO6NoAKDU5MTNlZjY2NjBhYTc5NzdkN2NiZWUwMWIxMTVkOGE1ZTkyNmI4OTM", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-10-27T11:00:42Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2021-10-27T15:00:36Z"}, "message": "replace `|` with `||` in {unsigned_int}::carrying_add\n\nUsing short-circuiting operators makes it easier to perform some kinds\nof source code analysis, like MC/DC code coverage (a requirement in\nsafety-critical environments). The optimized x86_64 assembly is the same\nbetween the old and new versions:\n\n```\nmov eax, edi\nadd dl, -1\nadc eax, esi\nsetb dl\nret\n```", "tree": {"sha": "fb60eecbf75f513a5591638684398882e96a2169", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb60eecbf75f513a5591638684398882e96a2169"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5913ef6660aa7977d7cbee01b115d8a5e926b893", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmF5aZwACgkQzXazX3c0\ndp5e1RAAm/amnfkY7MopebIosUChyJ6GELgItriEvhXWuwwceouN/wi2tnXyZpfX\ngP+Cxydww7WRSWodWvSASHJkbs0QdPZrt9/t/sRYGjnvK/9s+4AXWmvXZ7jggzxT\nXAN0Vy0aPQ0djxJIQr2mLoywRkFcwOmOfXVwRlPPMjONoEzrrLXPN+FugyqYe7x5\nV2zRBdCaY98jLhwjGZ5ovFXqpIuiodHuhDpMBMHPuIAZI56yTvmIj0JbkCFzW8qe\nDdzouiMafRhHpo6bI13y+4ZjYF7BcX0lTaUkvrbVn5y4WG48Zr5pilXArIJ6XWiW\nFyXQWC/o4y2BtPhjiLsZyVwqntOaqZdMhMqcYaY9FfgYkAYUHgNeW9bHC/jH81Ga\naWLaWOjJ/NlGbf+if4T0UCbcD+nqgEQzx7FW375kUCsWivRpxNJLNrRI+SaX2WXM\ndki0+nXjlhoPgMFpHrpo8GKUucnZShIoL4mtknGq+q5MOOMPNKeNsTSp/D7PTgvD\nFQiFDs0gStZ6u2j5KDQ5P3tcj8VvbsvJ4aPZGoRoU74iMLUxJqNN0M4KYWElufB4\n1zZVBcSK5WDv4v+uUNtNTiLwrB9SM9Jez5FUDp544zl5KRr2eKWvXgSKoEA4DnlM\nSr4LwKNNHr3l08/I7GY2C6FSi8SmiCTusgSZtSh+cp28JHLiWu8=\n=VneW\n-----END PGP SIGNATURE-----", "payload": "tree fb60eecbf75f513a5591638684398882e96a2169\nparent 47aeac648ed56095688c1c20972c9b72bd0da7ce\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1635332442 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1635346836 +0200\n\nreplace `|` with `||` in {unsigned_int}::carrying_add\n\nUsing short-circuiting operators makes it easier to perform some kinds\nof source code analysis, like MC/DC code coverage (a requirement in\nsafety-critical environments). The optimized x86_64 assembly is the same\nbetween the old and new versions:\n\n```\nmov eax, edi\nadd dl, -1\nadc eax, esi\nsetb dl\nret\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5913ef6660aa7977d7cbee01b115d8a5e926b893", "html_url": "https://github.com/rust-lang/rust/commit/5913ef6660aa7977d7cbee01b115d8a5e926b893", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5913ef6660aa7977d7cbee01b115d8a5e926b893/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47aeac648ed56095688c1c20972c9b72bd0da7ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/47aeac648ed56095688c1c20972c9b72bd0da7ce", "html_url": "https://github.com/rust-lang/rust/commit/47aeac648ed56095688c1c20972c9b72bd0da7ce"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "18c1353e7c62db0b4f29cc08d002f22501a3f610", "filename": "library/core/src/num/uint_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5913ef6660aa7977d7cbee01b115d8a5e926b893/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5913ef6660aa7977d7cbee01b115d8a5e926b893/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fuint_macros.rs?ref=5913ef6660aa7977d7cbee01b115d8a5e926b893", "patch": "@@ -1525,7 +1525,7 @@ macro_rules! uint_impl {\n             //   to generate optimal code for now, and LLVM doesn't have an equivalent intrinsic\n             let (a, b) = self.overflowing_add(rhs);\n             let (c, d) = a.overflowing_add(carry as $SelfT);\n-            (c, b | d)\n+            (c, b || d)\n         }\n \n         /// Calculates `self` + `rhs` with a signed `rhs`"}]}