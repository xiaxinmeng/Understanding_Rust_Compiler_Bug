{"sha": "6c433f22a152f6825f3610382176aaa191ebf7cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNDMzZjIyYTE1MmY2ODI1ZjM2MTAzODIxNzZhYWExOTFlYmY3Y2I=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2012-12-15T17:14:07Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-12-17T03:27:06Z"}, "message": "priority_queue: clean up naming", "tree": {"sha": "9d84ef1f17758d4df13faaf3b019bbdde09d49fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d84ef1f17758d4df13faaf3b019bbdde09d49fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c433f22a152f6825f3610382176aaa191ebf7cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c433f22a152f6825f3610382176aaa191ebf7cb", "html_url": "https://github.com/rust-lang/rust/commit/6c433f22a152f6825f3610382176aaa191ebf7cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c433f22a152f6825f3610382176aaa191ebf7cb/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab75d3937de68447cbaeac6546b1ae2b463b8231", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab75d3937de68447cbaeac6546b1ae2b463b8231", "html_url": "https://github.com/rust-lang/rust/commit/ab75d3937de68447cbaeac6546b1ae2b463b8231"}], "stats": {"total": 48, "additions": 23, "deletions": 25}, "files": [{"sha": "4f29c1ea97034e321980bf8d8153a89da4f92ef5", "filename": "src/libstd/priority_queue.rs", "status": "modified", "additions": 23, "deletions": 25, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/6c433f22a152f6825f3610382176aaa191ebf7cb/src%2Flibstd%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c433f22a152f6825f3610382176aaa191ebf7cb/src%2Flibstd%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpriority_queue.rs?ref=6c433f22a152f6825f3610382176aaa191ebf7cb", "patch": "@@ -97,41 +97,39 @@ impl <T: Copy Ord> PriorityQueue<T> {\n         q\n     }\n \n-    priv fn siftup(&mut self, startpos: uint, pos: uint) {\n+    priv fn siftup(&mut self, start: uint, pos: uint) {\n         let mut pos = pos;\n-        let newitem = self.data[pos];\n-\n-        while pos > startpos {\n-            let parentpos = (pos - 1) >> 1;\n-            let parent = self.data[parentpos];\n-            if newitem > parent {\n-                self.data[pos] = parent;\n-                pos = parentpos;\n+        let new = self.data[pos];\n+\n+        while pos > start {\n+            let parent = (pos - 1) >> 1;\n+            if new > self.data[parent] {\n+                self.data[pos] = self.data[parent];\n+                pos = parent;\n                 loop\n             }\n             break\n         }\n-        self.data[pos] = newitem;\n+        self.data[pos] = new;\n     }\n \n-    priv fn siftdown_range(&mut self, pos: uint, endpos: uint) {\n+    priv fn siftdown_range(&mut self, pos: uint, end: uint) {\n         let mut pos = pos;\n-        let startpos = pos;\n-        let newitem = self.data[pos];\n-\n-        let mut childpos = 2 * pos + 1;\n-        while childpos < endpos {\n-            let rightpos = childpos + 1;\n-            if rightpos < endpos &&\n-                   !(self.data[childpos] > self.data[rightpos]) {\n-                childpos = rightpos;\n+        let start = pos;\n+        let new = self.data[pos];\n+\n+        let mut child = 2 * pos + 1;\n+        while child < end {\n+            let right = child + 1;\n+            if right < end && !(self.data[child] > self.data[right]) {\n+                child = right;\n             }\n-            self.data[pos] = self.data[childpos];\n-            pos = childpos;\n-            childpos = 2 * pos + 1;\n+            self.data[pos] = self.data[child];\n+            pos = child;\n+            child = 2 * pos + 1;\n         }\n-        self.data[pos] = newitem;\n-        self.siftup(startpos, pos);\n+        self.data[pos] = new;\n+        self.siftup(start, pos);\n     }\n \n     priv fn siftdown(&mut self, pos: uint) {"}]}