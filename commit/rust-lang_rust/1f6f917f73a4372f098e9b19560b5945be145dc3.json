{"sha": "1f6f917f73a4372f098e9b19560b5945be145dc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNmY5MTdmNzNhNDM3MmYwOThlOWIxOTU2MGI1OTQ1YmUxNDVkYzM=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-10-29T10:48:56Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2020-10-29T11:25:02Z"}, "message": "Added test for issue #78498", "tree": {"sha": "874b16b36fdb0070111b4a63f87203a60b23d4e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/874b16b36fdb0070111b4a63f87203a60b23d4e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f6f917f73a4372f098e9b19560b5945be145dc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f6f917f73a4372f098e9b19560b5945be145dc3", "html_url": "https://github.com/rust-lang/rust/commit/1f6f917f73a4372f098e9b19560b5945be145dc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f6f917f73a4372f098e9b19560b5945be145dc3/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e83666f45e3d93439775daefda7800b2ab193d30", "url": "https://api.github.com/repos/rust-lang/rust/commits/e83666f45e3d93439775daefda7800b2ab193d30", "html_url": "https://github.com/rust-lang/rust/commit/e83666f45e3d93439775daefda7800b2ab193d30"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "b28694186b65ee611d3b486f8e6152ce5c7c3d1a", "filename": "library/alloc/tests/string.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1f6f917f73a4372f098e9b19560b5945be145dc3/library%2Falloc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f6f917f73a4372f098e9b19560b5945be145dc3/library%2Falloc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fstring.rs?ref=1f6f917f73a4372f098e9b19560b5945be145dc3", "patch": "@@ -1,6 +1,7 @@\n use std::borrow::Cow;\n use std::collections::TryReserveError::*;\n use std::ops::Bound::*;\n+use std::panic;\n \n pub trait IntoCow<'a, B: ?Sized>\n where\n@@ -378,6 +379,20 @@ fn test_retain() {\n \n     s.retain(|_| false);\n     assert_eq!(s, \"\");\n+\n+    let mut s = String::from(\"0\u00e80\");\n+    let _ = panic::catch_unwind(panic::AssertUnwindSafe(|| {\n+        let mut count = 0;\n+        s.retain(|_| {\n+            count += 1;\n+            match count {\n+                1 => false,\n+                2 => true,\n+                _ => panic!(),\n+            }\n+        });\n+    }));\n+    assert!(std::str::from_utf8(s.as_bytes()).is_ok());\n }\n \n #[test]"}]}