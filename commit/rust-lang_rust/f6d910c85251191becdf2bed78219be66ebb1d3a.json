{"sha": "f6d910c85251191becdf2bed78219be66ebb1d3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ZDkxMGM4NTI1MTE5MWJlY2RmMmJlZDc4MjE5YmU2NmViYjFkM2E=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-30T02:36:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-30T02:36:48Z"}, "message": "Auto merge of #76093 - jyn514:prim-assoc-items, r=Manishearth\n\nFix intra-doc links for associated constants\n\nPreviously, only associated functions would be resolved. Fixes the issues in https://github.com/rust-lang/rust/pull/75969#discussion_r477898003.\n\nI'm a little uncomfortable hard-coding the string constants, but it looks like that's how it's done elsewhere. I might make a follow-up PR at some point putting it in one place.\n\nNot sure how to test associated types, since AFAIK there aren't any on primitives.\n\nr? @Manishearth", "tree": {"sha": "08733741a83482d60f23b8cedc0afcd0c40e7acf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08733741a83482d60f23b8cedc0afcd0c40e7acf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6d910c85251191becdf2bed78219be66ebb1d3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6d910c85251191becdf2bed78219be66ebb1d3a", "html_url": "https://github.com/rust-lang/rust/commit/f6d910c85251191becdf2bed78219be66ebb1d3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6d910c85251191becdf2bed78219be66ebb1d3a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62850d882b1f546783d064ca3b51d1f85b92eeb7", "url": "https://api.github.com/repos/rust-lang/rust/commits/62850d882b1f546783d064ca3b51d1f85b92eeb7", "html_url": "https://github.com/rust-lang/rust/commit/62850d882b1f546783d064ca3b51d1f85b92eeb7"}, {"sha": "14047849920fa42361286eeef5f0f09436195643", "url": "https://api.github.com/repos/rust-lang/rust/commits/14047849920fa42361286eeef5f0f09436195643", "html_url": "https://github.com/rust-lang/rust/commit/14047849920fa42361286eeef5f0f09436195643"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "412ab30a603b7fcfd9383f0a02dc6e9254ce64eb", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f6d910c85251191becdf2bed78219be66ebb1d3a/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d910c85251191becdf2bed78219be66ebb1d3a/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=f6d910c85251191becdf2bed78219be66ebb1d3a", "patch": "@@ -261,9 +261,10 @@ impl<'a, 'tcx> LinkCollector<'a, 'tcx> {\n                             ns,\n                             impl_,\n                         )\n-                        .and_then(|item| match item.kind {\n-                            ty::AssocKind::Fn => Some(\"method\"),\n-                            _ => None,\n+                        .map(|item| match item.kind {\n+                            ty::AssocKind::Fn => \"method\",\n+                            ty::AssocKind::Const => \"associatedconstant\",\n+                            ty::AssocKind::Type => \"associatedtype\",\n                         })\n                         .map(|out| (prim, Some(format!(\"{}#{}.{}\", path, out, item_name))));\n                     if let Some(link) = link {"}, {"sha": "c0066885e19910dea807da1e54295e3bf374b30f", "filename": "src/test/rustdoc/intra-link-prim-assoc.rs", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f6d910c85251191becdf2bed78219be66ebb1d3a/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6d910c85251191becdf2bed78219be66ebb1d3a/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fintra-link-prim-assoc.rs?ref=f6d910c85251191becdf2bed78219be66ebb1d3a", "patch": "@@ -0,0 +1,5 @@\n+// ignore-tidy-linelength\n+#![deny(broken_intra_doc_links)]\n+\n+//! [i32::MAX]\n+// @has intra_link_prim_assoc/index.html '//a[@href=\"https://doc.rust-lang.org/nightly/std/primitive.i32.html#associatedconstant.MAX\"]' \"i32::MAX\""}]}