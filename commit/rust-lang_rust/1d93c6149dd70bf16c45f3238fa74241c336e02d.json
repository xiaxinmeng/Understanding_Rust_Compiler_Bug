{"sha": "1d93c6149dd70bf16c45f3238fa74241c336e02d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkOTNjNjE0OWRkNzBiZjE2YzQ1ZjMyMzhmYTc0MjQxYzMzNmUwMmQ=", "commit": {"author": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-12-14T06:27:49Z"}, "committer": {"name": "Michael Hewson", "email": "michael@michaelhewson.ca", "date": "2018-12-20T06:14:01Z"}, "message": "add a doc comment on `receiver_is_valid`", "tree": {"sha": "4105b40d56f75710a44a0bc71e1f7b4a96c64319", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4105b40d56f75710a44a0bc71e1f7b4a96c64319"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d93c6149dd70bf16c45f3238fa74241c336e02d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d93c6149dd70bf16c45f3238fa74241c336e02d", "html_url": "https://github.com/rust-lang/rust/commit/1d93c6149dd70bf16c45f3238fa74241c336e02d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d93c6149dd70bf16c45f3238fa74241c336e02d/comments", "author": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mikeyhew", "id": 6751033, "node_id": "MDQ6VXNlcjY3NTEwMzM=", "avatar_url": "https://avatars.githubusercontent.com/u/6751033?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mikeyhew", "html_url": "https://github.com/mikeyhew", "followers_url": "https://api.github.com/users/mikeyhew/followers", "following_url": "https://api.github.com/users/mikeyhew/following{/other_user}", "gists_url": "https://api.github.com/users/mikeyhew/gists{/gist_id}", "starred_url": "https://api.github.com/users/mikeyhew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mikeyhew/subscriptions", "organizations_url": "https://api.github.com/users/mikeyhew/orgs", "repos_url": "https://api.github.com/users/mikeyhew/repos", "events_url": "https://api.github.com/users/mikeyhew/events{/privacy}", "received_events_url": "https://api.github.com/users/mikeyhew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "153f5a7892274764256862692fa7e2c51474e5d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/153f5a7892274764256862692fa7e2c51474e5d0", "html_url": "https://github.com/rust-lang/rust/commit/153f5a7892274764256862692fa7e2c51474e5d0"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "d35a4dfe0b91d5402bbc42e547b8056eb6e67d43", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1d93c6149dd70bf16c45f3238fa74241c336e02d/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d93c6149dd70bf16c45f3238fa74241c336e02d/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=1d93c6149dd70bf16c45f3238fa74241c336e02d", "patch": "@@ -795,6 +795,14 @@ fn check_method_receiver<'fcx, 'gcx, 'tcx>(fcx: &FnCtxt<'fcx, 'gcx, 'tcx>,\n     }\n }\n \n+/// returns true if `receiver_ty` would be considered a valid receiver type for `self_ty`. If\n+/// `arbitrary_self_types` is enabled, `receiver_ty` must transitively deref to `self_ty`, possibly\n+/// through a `*const/mut T` raw pointer. If the feature is not enabled, the requirements are more\n+/// strict: `receiver_ty` must implement `Receiver` and directly implement `Deref<Target=self_ty>`.\n+///\n+/// NB: there are cases this function returns `true` but then causes an error to be raised later,\n+/// particularly when `receiver_ty` derefs to a type that is the same as `self_ty` but has the\n+/// wrong lifetime.\n fn receiver_is_valid<'fcx, 'tcx, 'gcx>(\n     fcx: &FnCtxt<'fcx, 'gcx, 'tcx>,\n     span: Span,"}]}