{"sha": "47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YmIxMTg1ZjJhZTE3ZTZhOGIyNGRhNTMzYzRkMmY1NDhlMWU4MDg=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-22T06:17:28Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-05-22T06:22:08Z"}, "message": "rustc: Move walk_pat to ast_util\n\nThis will allow ast_map to move to the syntax crate", "tree": {"sha": "f2b9024f26c6a41b1e65ef6d76f965acf8d28cd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2b9024f26c6a41b1e65ef6d76f965acf8d28cd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "html_url": "https://github.com/rust-lang/rust/commit/47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df532e7f1b56d9b2a52a0edb9a84c9b9246dd8df", "url": "https://api.github.com/repos/rust-lang/rust/commits/df532e7f1b56d9b2a52a0edb9a84c9b9246dd8df", "html_url": "https://github.com/rust-lang/rust/commit/df532e7f1b56d9b2a52a0edb9a84c9b9246dd8df"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "211414ac7d43dcdc4911076e58ca4daa224ace48", "filename": "src/librustsyntax/ast_util.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Flibrustsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Flibrustsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustsyntax%2Fast_util.rs?ref=47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "patch": "@@ -530,6 +530,18 @@ pure fn is_item_impl(item: @ast::item) -> bool {\n     }\n }\n \n+fn walk_pat(pat: @pat, it: fn(@pat)) {\n+    it(pat);\n+    alt pat.node {\n+      pat_ident(pth, some(p)) { walk_pat(p, it); }\n+      pat_rec(fields, _) { for fields.each {|f| walk_pat(f.pat, it); } }\n+      pat_enum(_, some(s)) | pat_tup(s) { for s.each {|p| walk_pat(p, it); } }\n+      pat_box(s) | pat_uniq(s) { walk_pat(s, it); }\n+      pat_wild | pat_lit(_) | pat_range(_, _) | pat_ident(_, _)\n+        | pat_enum(_, _) {}\n+    }\n+}\n+\n // Local Variables:\n // mode: rust\n // fill-column: 78;"}, {"sha": "8ba0ed909c56caf2dbc420254fd795a5c2bb79b9", "filename": "src/rustc/middle/ast_map.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Frustc%2Fmiddle%2Fast_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Frustc%2Fmiddle%2Fast_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fast_map.rs?ref=47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "patch": "@@ -154,7 +154,7 @@ fn map_block(b: blk, cx: ctx, v: vt) {\n }\n \n fn number_pat(cx: ctx, pat: @pat) {\n-    pat_util::walk_pat(pat) {|p|\n+    ast_util::walk_pat(pat) {|p|\n         alt p.node {\n           pat_ident(_, _) {\n             cx.map.insert(p.id, node_local(cx.local_id));"}, {"sha": "29cacf370928e52bac0d516fd8a9a92b11b39662", "filename": "src/rustc/middle/pat_util.rs", "status": "modified", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Frustc%2Fmiddle%2Fpat_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Frustc%2Fmiddle%2Fpat_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fpat_util.rs?ref=47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "patch": "@@ -1,13 +1,11 @@\n import syntax::ast::*;\n import syntax::ast_util;\n-import syntax::ast_util::path_to_ident;\n-import syntax::ast_util::respan;\n+import syntax::ast_util::{path_to_ident, respan, walk_pat};\n import syntax::fold;\n import syntax::fold::*;\n import syntax::codemap::span;\n import std::map::hashmap;\n \n-export walk_pat;\n export pat_binding_ids, pat_bindings, pat_id_map;\n export pat_is_variant;\n \n@@ -51,18 +49,6 @@ fn pat_bindings(dm: resolve::def_map, pat: @pat,\n     }\n }\n \n-fn walk_pat(pat: @pat, it: fn(@pat)) {\n-    it(pat);\n-    alt pat.node {\n-      pat_ident(pth, some(p)) { walk_pat(p, it); }\n-      pat_rec(fields, _) { for fields.each {|f| walk_pat(f.pat, it); } }\n-      pat_enum(_, some(s)) | pat_tup(s) { for s.each {|p| walk_pat(p, it); } }\n-      pat_box(s) | pat_uniq(s) { walk_pat(s, it); }\n-      pat_wild | pat_lit(_) | pat_range(_, _) | pat_ident(_, _)\n-        | pat_enum(_, _) {}\n-    }\n-}\n-\n fn pat_binding_ids(dm: resolve::def_map, pat: @pat) -> [node_id] {\n     let mut found = [];\n     pat_bindings(dm, pat) {|b_id, _sp, _pt| found += [b_id]; };"}, {"sha": "868bf9d06c402f549912dc5229580ab7f4688c37", "filename": "src/rustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Frustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47bb1185f2ae17e6a8b24da533c4d2f548e1e808/src%2Frustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fresolve.rs?ref=47bb1185f2ae17e6a8b24da533c4d2f548e1e808", "patch": "@@ -688,7 +688,7 @@ fn visit_local_with_scope(e: @env, loc: @local, &&sc: scopes, v:vt<scopes>) {\n     // scope. We disallow this, in order to make alt patterns consisting of a\n     // single identifier unambiguous (does the pattern \"foo\" refer to enum\n     // foo, or is it binding a new name foo?)\n-    pat_util::walk_pat(loc.node.pat) { |p|\n+    ast_util::walk_pat(loc.node.pat) { |p|\n         alt p.node {\n           pat_ident(path, _) {\n             alt lookup_in_scope(*e, sc, loc.span, path_to_ident(path),"}]}