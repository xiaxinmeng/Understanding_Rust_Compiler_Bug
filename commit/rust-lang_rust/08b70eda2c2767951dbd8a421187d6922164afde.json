{"sha": "08b70eda2c2767951dbd8a421187d6922164afde", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YjcwZWRhMmMyNzY3OTUxZGJkOGE0MjExODdkNjkyMjE2NGFmZGU=", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2020-12-10T22:05:22Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2020-12-10T22:05:22Z"}, "message": "Fix fd test case", "tree": {"sha": "9af0cc1cc702b573143144a1caef27d72323e36d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9af0cc1cc702b573143144a1caef27d72323e36d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08b70eda2c2767951dbd8a421187d6922164afde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08b70eda2c2767951dbd8a421187d6922164afde", "html_url": "https://github.com/rust-lang/rust/commit/08b70eda2c2767951dbd8a421187d6922164afde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08b70eda2c2767951dbd8a421187d6922164afde/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a50811a214b50d4a835ba1ad8eac546f9c7af9fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a50811a214b50d4a835ba1ad8eac546f9c7af9fa", "html_url": "https://github.com/rust-lang/rust/commit/a50811a214b50d4a835ba1ad8eac546f9c7af9fa"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c9520485c3c7cc0e7f896bd900bc95f7facff185", "filename": "library/std/src/sys/unix/fd/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/08b70eda2c2767951dbd8a421187d6922164afde/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffd%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b70eda2c2767951dbd8a421187d6922164afde/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffd%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffd%2Ftests.rs?ref=08b70eda2c2767951dbd8a421187d6922164afde", "patch": "@@ -3,7 +3,7 @@ use core::mem::ManuallyDrop;\n \n #[test]\n fn limit_vector_count() {\n-    let stdout = ManuallyDrop::new(FileDesc { fd: 1 });\n+    let stdout = ManuallyDrop::new(unsafe { FileDesc { fd: 1 } });\n     let bufs = (0..1500).map(|_| IoSlice::new(&[])).collect::<Vec<_>>();\n     assert!(stdout.write_vectored(&bufs).is_ok());\n }"}]}