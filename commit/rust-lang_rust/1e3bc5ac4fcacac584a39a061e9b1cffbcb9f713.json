{"sha": "1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlM2JjNWFjNGZjYWNhYzU4NGEzOWEwNjFlOWIxY2ZmYmNiOWY3MTM=", "commit": {"author": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-03-29T20:01:34Z"}, "committer": {"name": "Simonas Kazlauskas", "email": "git@kazlauskas.me", "date": "2017-03-29T20:01:34Z"}, "message": "Allow using Vec::<T>::place_back for T: !Clone\n\nThe place_back was likely put into block with `T: Clone` bound by mistake.", "tree": {"sha": "e41fb3851f8e8394ee55839ef21f48b9b8dc0687", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e41fb3851f8e8394ee55839ef21f48b9b8dc0687"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713", "html_url": "https://github.com/rust-lang/rust/commit/1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713/comments", "author": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nagisa", "id": 679122, "node_id": "MDQ6VXNlcjY3OTEyMg==", "avatar_url": "https://avatars.githubusercontent.com/u/679122?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nagisa", "html_url": "https://github.com/nagisa", "followers_url": "https://api.github.com/users/nagisa/followers", "following_url": "https://api.github.com/users/nagisa/following{/other_user}", "gists_url": "https://api.github.com/users/nagisa/gists{/gist_id}", "starred_url": "https://api.github.com/users/nagisa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nagisa/subscriptions", "organizations_url": "https://api.github.com/users/nagisa/orgs", "repos_url": "https://api.github.com/users/nagisa/repos", "events_url": "https://api.github.com/users/nagisa/events{/privacy}", "received_events_url": "https://api.github.com/users/nagisa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1cec5d4bf626f151a779323e16d62fe60117086", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1cec5d4bf626f151a779323e16d62fe60117086", "html_url": "https://github.com/rust-lang/rust/commit/e1cec5d4bf626f151a779323e16d62fe60117086"}], "stats": {"total": 46, "additions": 23, "deletions": 23}, "files": [{"sha": "59186a2d501850cf36e860fd5041f01d361bc0b1", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=1e3bc5ac4fcacac584a39a061e9b1cffbcb9f713", "patch": "@@ -972,6 +972,29 @@ impl<T> Vec<T> {\n         }\n     }\n \n+    /// Returns a place for insertion at the back of the `Vec`.\n+    ///\n+    /// Using this method with placement syntax is equivalent to [`push`](#method.push),\n+    /// but may be more efficient.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(collection_placement)]\n+    /// #![feature(placement_in_syntax)]\n+    ///\n+    /// let mut vec = vec![1, 2];\n+    /// vec.place_back() <- 3;\n+    /// vec.place_back() <- 4;\n+    /// assert_eq!(&vec, &[1, 2, 3, 4]);\n+    /// ```\n+    #[unstable(feature = \"collection_placement\",\n+               reason = \"placement protocol is subject to change\",\n+               issue = \"30172\")]\n+    pub fn place_back(&mut self) -> PlaceBack<T> {\n+        PlaceBack { vec: self }\n+    }\n+\n     /// Removes the last element from a vector and returns it, or [`None`] if it\n     /// is empty.\n     ///\n@@ -1266,29 +1289,6 @@ impl<T: Clone> Vec<T> {\n     pub fn extend_from_slice(&mut self, other: &[T]) {\n         self.spec_extend(other.iter())\n     }\n-\n-    /// Returns a place for insertion at the back of the `Vec`.\n-    ///\n-    /// Using this method with placement syntax is equivalent to [`push`](#method.push),\n-    /// but may be more efficient.\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// #![feature(collection_placement)]\n-    /// #![feature(placement_in_syntax)]\n-    ///\n-    /// let mut vec = vec![1, 2];\n-    /// vec.place_back() <- 3;\n-    /// vec.place_back() <- 4;\n-    /// assert_eq!(&vec, &[1, 2, 3, 4]);\n-    /// ```\n-    #[unstable(feature = \"collection_placement\",\n-               reason = \"placement protocol is subject to change\",\n-               issue = \"30172\")]\n-    pub fn place_back(&mut self) -> PlaceBack<T> {\n-        PlaceBack { vec: self }\n-    }\n }\n \n // Set the length of the vec when the `SetLenOnDrop` value goes out of scope."}]}