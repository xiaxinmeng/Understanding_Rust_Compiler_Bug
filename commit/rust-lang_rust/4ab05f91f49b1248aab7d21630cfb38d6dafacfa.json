{"sha": "4ab05f91f49b1248aab7d21630cfb38d6dafacfa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYjA1ZjkxZjQ5YjEyNDhhYWI3ZDIxNjMwY2ZiMzhkNmRhZmFjZmE=", "commit": {"author": {"name": "blake2-ppc", "email": "blake2-ppc", "date": "2013-08-06T15:27:39Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-08-08T02:41:14Z"}, "message": "extra: Simplify Eq/Ord in treemap\n\nWrite the Eq and Ord impls for TreeMap in a more straightforward way\nusing iterator::Zip", "tree": {"sha": "ad125a6f111646e96af9f97307e5be61a1083c4a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad125a6f111646e96af9f97307e5be61a1083c4a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ab05f91f49b1248aab7d21630cfb38d6dafacfa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ab05f91f49b1248aab7d21630cfb38d6dafacfa", "html_url": "https://github.com/rust-lang/rust/commit/4ab05f91f49b1248aab7d21630cfb38d6dafacfa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ab05f91f49b1248aab7d21630cfb38d6dafacfa/comments", "author": null, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "240f8f03c9da7e574fd0fce0eb72e6ade97628ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/240f8f03c9da7e574fd0fce0eb72e6ade97628ff", "html_url": "https://github.com/rust-lang/rust/commit/240f8f03c9da7e574fd0fce0eb72e6ade97628ff"}], "stats": {"total": 26, "additions": 5, "deletions": 21}, "files": [{"sha": "2e20752754a25e42c82680eabe029608a05e00df", "filename": "src/libextra/treemap.rs", "status": "modified", "additions": 5, "deletions": 21, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/4ab05f91f49b1248aab7d21630cfb38d6dafacfa/src%2Flibextra%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4ab05f91f49b1248aab7d21630cfb38d6dafacfa/src%2Flibextra%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftreemap.rs?ref=4ab05f91f49b1248aab7d21630cfb38d6dafacfa", "patch": "@@ -42,39 +42,23 @@ pub struct TreeMap<K, V> {\n \n impl<K: Eq + TotalOrd, V: Eq> Eq for TreeMap<K, V> {\n     fn eq(&self, other: &TreeMap<K, V>) -> bool {\n-        if self.len() != other.len() {\n-            false\n-        } else {\n-            let mut x = self.iter();\n-            let mut y = other.iter();\n-            for _ in range(0u, self.len()) {\n-                if x.next().unwrap() != y.next().unwrap() {\n-                    return false\n-                }\n-            }\n-            true\n-        }\n+        self.len() == other.len() &&\n+            self.iter().zip(other.iter()).all(|(a, b)| a == b)\n     }\n-    fn ne(&self, other: &TreeMap<K, V>) -> bool { !self.eq(other) }\n }\n \n // Lexicographical comparison\n fn lt<K: Ord + TotalOrd, V: Ord>(a: &TreeMap<K, V>,\n                                  b: &TreeMap<K, V>) -> bool {\n-    let mut x = a.iter();\n-    let mut y = b.iter();\n-\n-    let (a_len, b_len) = (a.len(), b.len());\n-    for _ in range(0u, num::min(a_len, b_len)) {\n-        let (key_a, value_a) = x.next().unwrap();\n-        let (key_b, value_b) = y.next().unwrap();\n+    // the Zip iterator is as long as the shortest of a and b.\n+    for ((key_a, value_a), (key_b, value_b)) in a.iter().zip(b.iter()) {\n         if *key_a < *key_b { return true; }\n         if *key_a > *key_b { return false; }\n         if *value_a < *value_b { return true; }\n         if *value_a > *value_b { return false; }\n     }\n \n-    a_len < b_len\n+    a.len() < b.len()\n }\n \n impl<K: Ord + TotalOrd, V: Ord> Ord for TreeMap<K, V> {"}]}