{"sha": "858d6a071199b30ea95c744895f61f93ad188ffb", "node_id": "C_kwDOAAsO6NoAKDg1OGQ2YTA3MTE5OWIzMGVhOTVjNzQ0ODk1ZjYxZjkzYWQxODhmZmI", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-30T06:16:35Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-01-30T19:53:12Z"}, "message": "Mac calls", "tree": {"sha": "e2bcacf96d5cff9b61a708fc14c8a1c16953db72", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2bcacf96d5cff9b61a708fc14c8a1c16953db72"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/858d6a071199b30ea95c744895f61f93ad188ffb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmH27KgACgkQ+boUO5X/\nbYJHKhAAhIpzgE9bUcQXvyESKcC005q4A6lmHxHFuXdcwVlrXzrd4E2ix1JYF8xm\nLmn4K81LUkLGIJK8dgohwkte5Ht0+ta1v7lsAgJ6+mbEhsXiKf4SirBmVcgLGcAJ\nf1NQa4rUFGl+1EI/gyx7LT5K4BbbKMVcKFf/j3GqR2Ai2wcUbH+vinT7yLd529W9\nfCF0ii3MAL6qsUobjMTyk7/5NGZFwuqw47vJgUErsPBu/zyTzfGO6xCmzRn6VICx\nLhEGVL5LsE3cDfDdLFXAV0SST0nQ7LUdMQ2kiwIs8ZOot1Ukit6OymNZqCaI3mvP\nU/oBFNPZ7zL30m6H3ETAzCbp/7SH5UplSP6ody4bx8NpdZt5Cv4avJ3STldhWGvg\nU273Jcobp3Q2Ta0/dxpJMJZgtMixsVX9e5gfcjRagwxOE+NmbjwYJeBm8F5oLB8u\nPfx3GCWNOdy0OJvrolbiYYlSJtY+z3JYeWSK4SJgXkseWkGuBrIXRbHNGNWgPq4V\nqbzrvpTHLBJ5gC1ILah/dDeuzxUT0CJhseRRFbepSQcwm1OaQWkL4Kac2kk5wumR\nda8dnnNs1UtSH9Hxiflk2a7helhROyoGPopr+sxk/ZKwBa/MqB9YjButthS6ggUe\n6Mc3jjT5M5jhEAax2od3/NmPf9cEUjQKR0+HIX2/D8v8h/tYeBY=\n=6bpt\n-----END PGP SIGNATURE-----", "payload": "tree e2bcacf96d5cff9b61a708fc14c8a1c16953db72\nparent 47f92a58a412fed5555eb120f963bcf6a35a9da8\nauthor David Tolnay <dtolnay@gmail.com> 1643523395 -0800\ncommitter David Tolnay <dtolnay@gmail.com> 1643572392 -0800\n\nMac calls\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/858d6a071199b30ea95c744895f61f93ad188ffb", "html_url": "https://github.com/rust-lang/rust/commit/858d6a071199b30ea95c744895f61f93ad188ffb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/858d6a071199b30ea95c744895f61f93ad188ffb/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47f92a58a412fed5555eb120f963bcf6a35a9da8", "url": "https://api.github.com/repos/rust-lang/rust/commits/47f92a58a412fed5555eb120f963bcf6a35a9da8", "html_url": "https://github.com/rust-lang/rust/commit/47f92a58a412fed5555eb120f963bcf6a35a9da8"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "f08aa8f95ff4c99e07857f7bebfe5f5c81ceb7eb", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/858d6a071199b30ea95c744895f61f93ad188ffb/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858d6a071199b30ea95c744895f61f93ad188ffb/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=858d6a071199b30ea95c744895f61f93ad188ffb", "patch": "@@ -1237,15 +1237,17 @@ fn may_contain_yield_point(e: &ast::Expr) -> bool {\n \n     impl Visitor<'_> for MayContainYieldPoint {\n         fn visit_expr(&mut self, e: &ast::Expr) {\n-            if let ast::ExprKind::Await(_) | ast::ExprKind::Yield(_) | ast::ExprKind::MacCall(_) =\n-                e.kind\n-            {\n+            if let ast::ExprKind::Await(_) | ast::ExprKind::Yield(_) = e.kind {\n                 self.0 = true;\n             } else {\n                 visit::walk_expr(self, e);\n             }\n         }\n \n+        fn visit_mac_call(&mut self, _: &ast::MacCall) {\n+            self.0 = true;\n+        }\n+\n         fn visit_attribute(&mut self, _: &ast::Attribute) {\n             // Conservatively assume this may be a proc macro attribute in\n             // expression position."}, {"sha": "e484074cc9a557492ab1463d06daaf7c0cb1a89d", "filename": "src/test/ui/fmt/format-with-yield-point.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/858d6a071199b30ea95c744895f61f93ad188ffb/src%2Ftest%2Fui%2Ffmt%2Fformat-with-yield-point.rs", "raw_url": "https://github.com/rust-lang/rust/raw/858d6a071199b30ea95c744895f61f93ad188ffb/src%2Ftest%2Fui%2Ffmt%2Fformat-with-yield-point.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-with-yield-point.rs?ref=858d6a071199b30ea95c744895f61f93ad188ffb", "patch": "@@ -11,13 +11,23 @@ async fn with_await() {\n     println!(\"{} {:?}\", \"\", async {}.await);\n }\n \n-async fn with_macro_call() {\n+async fn with_macro_call_expr() {\n     println!(\"{} {:?}\", \"\", m!());\n }\n \n+async fn with_macro_call_stmt_semi() {\n+    println!(\"{} {:?}\", \"\", { m!(); });\n+}\n+\n+async fn with_macro_call_stmt_braced() {\n+    println!(\"{} {:?}\", \"\", { m!{} });\n+}\n+\n fn assert_send(_: impl Send) {}\n \n fn main() {\n     assert_send(with_await());\n-    assert_send(with_macro_call());\n+    assert_send(with_macro_call_expr());\n+    assert_send(with_macro_call_stmt_semi());\n+    assert_send(with_macro_call_stmt_braced());\n }"}]}