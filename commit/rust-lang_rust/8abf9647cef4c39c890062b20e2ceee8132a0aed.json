{"sha": "8abf9647cef4c39c890062b20e2ceee8132a0aed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYmY5NjQ3Y2VmNGMzOWM4OTAwNjJiMjBlMmNlZWU4MTMyYTBhZWQ=", "commit": {"author": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-12-27T16:06:40Z"}, "committer": {"name": "Clar Charr", "email": "clar@charr.xyz", "date": "2017-12-27T16:06:40Z"}, "message": "Rearrange README.md.\n\nThis suggests `cargo clippy` first, which is probably the best method at this point. It also describes how to enable clippy only when testing.", "tree": {"sha": "2f6ba790c0e1e21ab1785e0e1ed773fe23487742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f6ba790c0e1e21ab1785e0e1ed773fe23487742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8abf9647cef4c39c890062b20e2ceee8132a0aed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8abf9647cef4c39c890062b20e2ceee8132a0aed", "html_url": "https://github.com/rust-lang/rust/commit/8abf9647cef4c39c890062b20e2ceee8132a0aed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8abf9647cef4c39c890062b20e2ceee8132a0aed/comments", "author": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clarfonthey", "id": 15850505, "node_id": "MDQ6VXNlcjE1ODUwNTA1", "avatar_url": "https://avatars.githubusercontent.com/u/15850505?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clarfonthey", "html_url": "https://github.com/clarfonthey", "followers_url": "https://api.github.com/users/clarfonthey/followers", "following_url": "https://api.github.com/users/clarfonthey/following{/other_user}", "gists_url": "https://api.github.com/users/clarfonthey/gists{/gist_id}", "starred_url": "https://api.github.com/users/clarfonthey/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clarfonthey/subscriptions", "organizations_url": "https://api.github.com/users/clarfonthey/orgs", "repos_url": "https://api.github.com/users/clarfonthey/repos", "events_url": "https://api.github.com/users/clarfonthey/events{/privacy}", "received_events_url": "https://api.github.com/users/clarfonthey/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0d0fc69de8ead855a98f5a5254c801dcce4d872", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0d0fc69de8ead855a98f5a5254c801dcce4d872", "html_url": "https://github.com/rust-lang/rust/commit/f0d0fc69de8ead855a98f5a5254c801dcce4d872"}], "stats": {"total": 54, "additions": 32, "deletions": 22}, "files": [{"sha": "4be313c392ea938704769782cd5f6c2e9f15e9a8", "filename": "README.md", "status": "modified", "additions": 32, "deletions": 22, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/8abf9647cef4c39c890062b20e2ceee8132a0aed/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/8abf9647cef4c39c890062b20e2ceee8132a0aed/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=8abf9647cef4c39c890062b20e2ceee8132a0aed", "patch": "@@ -26,18 +26,35 @@ as an included feature during build. All of these options are detailed below.\n \n As a general rule clippy will only work with the *latest* Rust nightly for now.\n \n-### Optional dependency\n+### As a cargo subcommand (`cargo clippy`)\n+\n+One way to use clippy is by installing clippy through cargo as a cargo\n+subcommand.\n+\n+```terminal\n+cargo install clippy\n+```\n+\n+Now you can run clippy by invoking `cargo clippy`, or\n+`cargo +nightly clippy` directly from a directory that is usually\n+compiled with stable.\n+\n+In case you are not using rustup, you need to set the environment flag\n+`SYSROOT` during installation so clippy knows where to find `librustc` and\n+similar crates.\n+\n+```terminal\n+SYSROOT=/path/to/rustc/sysroot cargo install clippy\n+```\n \n-If you want to make clippy an optional dependency, you can do the following:\n+### Optional dependency\n \n-In your `Cargo.toml`:\n+In some cases you might want to include clippy in your project directly, as an\n+optional dependency. To do this, just modify `Cargo.toml`:\n \n ```toml\n [dependencies]\n-clippy = {version = \"*\", optional = true}\n-\n-[features]\n-default = []\n+clippy = { version = \"*\", optional = true }\n ```\n \n And, in your `main.rs` or `lib.rs`, add these lines:\n@@ -54,25 +71,18 @@ Instead of adding the `cfg_attr` attributes you can also run clippy on demand:\n (the `-Z no trans`, while not necessary, will stop the compilation process after\n typechecking (and lints) have completed, which can significantly reduce the runtime).\n \n-### As a cargo subcommand (`cargo clippy`)\n+Alternatively, to only run clippy when testing:\n \n-An alternate way to use clippy is by installing clippy through cargo as a cargo\n-subcommand.\n-\n-```terminal\n-cargo install clippy\n+```toml\n+[dev-dependencies]`\n+clippy = { version = \"*\" }\n ```\n \n-Now you can run clippy by invoking `cargo clippy`, or\n-`rustup run nightly cargo clippy` directly from a directory that is usually\n-compiled with stable.\n+and add to `main.rs` or  `lib.rs`:\n \n-In case you are not using rustup, you need to set the environment flag\n-`SYSROOT` during installation so clippy knows where to find `librustc` and\n-similar crates.\n-\n-```terminal\n-SYSROOT=/path/to/rustc/sysroot cargo install clippy\n+```\n+#![cfg_attr(test, feature(plugin))]\n+#![cfg_attr(test, plugin(clippy))]\n ```\n \n ### Running clippy from the command line without installing"}]}