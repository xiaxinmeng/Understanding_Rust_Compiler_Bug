{"sha": "8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNGJmYjgzM2JiZmY3YTZjNGM1ZTkyMDVlNDNmZjcwOTA4ZjdlOWY=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-10T23:21:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-10T23:21:15Z"}, "message": "Rollup merge of #55799 - pnkfelix:remove-useless-revisions-marker-from-lint-unused-mut-variables, r=davidtwco\n\nRemoved unneeded instance of `// revisions` from a lint test\n\nRemoved an unneeded instance of `// revisions`; the compare-mode=nll shows the output is identical now.\n\ncc #54528", "tree": {"sha": "9ce78c919a77ed806706ef83c731845b2eff1e8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ce78c919a77ed806706ef83c731845b2eff1e8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb52frCRBK7hj4Ov3rIwAAdHIIAB45alKiQd6VYSGqZwAiVifw\nacAcRJr7v2NY6oIPHZVW9SbszSsVguYl8fBVqDc2Trg+sM+XT+ld6iOKNTfHcb36\nDDHgDa/HEUVIHah2lPBMTWn3oh8WEEUbzyeIMhpEEkQA5Fq9plWccWJLPgT8nJFQ\n8zIqvkO2go6MIx4BV/J4UoO4WS9MDXGoG9MJYR3FBTd5e304EPCqWPABw1yCi/ha\nsQapyleHj5IWHJ0MJGhNEUP5srEyba3x/rIk2GA0/IzBsWha+PseDbhH7fumGalh\nUO4ettdwBWJwo0zPf7xyEDQi0801AE29IPRyuvObLUJazHH+XEPLoKQTz47zufY=\n=2X/k\n-----END PGP SIGNATURE-----\n", "payload": "tree 9ce78c919a77ed806706ef83c731845b2eff1e8a\nparent e121305abd45ff7dc88bad8089424abaa926aff0\nparent 918f70f628e9c225eb42c92b9acf2a999b34f6ee\nauthor Pietro Albini <pietro@pietroalbini.org> 1541892075 +0100\ncommitter GitHub <noreply@github.com> 1541892075 +0100\n\nRollup merge of #55799 - pnkfelix:remove-useless-revisions-marker-from-lint-unused-mut-variables, r=davidtwco\n\nRemoved unneeded instance of `// revisions` from a lint test\n\nRemoved an unneeded instance of `// revisions`; the compare-mode=nll shows the output is identical now.\n\ncc #54528\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f", "html_url": "https://github.com/rust-lang/rust/commit/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e121305abd45ff7dc88bad8089424abaa926aff0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e121305abd45ff7dc88bad8089424abaa926aff0", "html_url": "https://github.com/rust-lang/rust/commit/e121305abd45ff7dc88bad8089424abaa926aff0"}, {"sha": "918f70f628e9c225eb42c92b9acf2a999b34f6ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/918f70f628e9c225eb42c92b9acf2a999b34f6ee", "html_url": "https://github.com/rust-lang/rust/commit/918f70f628e9c225eb42c92b9acf2a999b34f6ee"}], "stats": {"total": 254, "additions": 52, "deletions": 202}, "files": [{"sha": "40f68c6782781f0b01163c4c1db385d167e5a7e6", "filename": "src/test/ui/lint/lint-unused-mut-variables.nll.stderr", "status": "removed", "additions": 0, "deletions": 150, "changes": 150, "blob_url": "https://github.com/rust-lang/rust/blob/e121305abd45ff7dc88bad8089424abaa926aff0/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e121305abd45ff7dc88bad8089424abaa926aff0/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.nll.stderr?ref=e121305abd45ff7dc88bad8089424abaa926aff0", "patch": "@@ -1,150 +0,0 @@\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:59:14\n-   |\n-LL |     let x = |mut y: isize| 10; //[lexical]~ ERROR: variable does not need to be mutable\n-   |              ----^\n-   |              |\n-   |              help: remove this `mut`\n-   |\n-note: lint level defined here\n-  --> $DIR/lint-unused-mut-variables.rs:19:9\n-   |\n-LL | #![deny(unused_mut)]\n-   |         ^^^^^^^^^^\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:24:9\n-   |\n-LL |     let mut a = 3; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:26:9\n-   |\n-LL |     let mut a = 2; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:28:9\n-   |\n-LL |     let mut b = 3; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:30:9\n-   |\n-LL |     let mut a = vec![3]; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:32:10\n-   |\n-LL |     let (mut a, b) = (1, 2); //[lexical]~ ERROR: variable does not need to be mutable\n-   |          ----^\n-   |          |\n-   |          help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:34:9\n-   |\n-LL |     let mut a; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:38:9\n-   |\n-LL |     let mut b; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:47:9\n-   |\n-LL |         mut x => {} //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:51:8\n-   |\n-LL |       (mut x, 1) | //[lexical]~ ERROR: variable does not need to be mutable\n-   |        ----^\n-   |        |\n-   |        help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:64:9\n-   |\n-LL |     let mut a = &mut 5; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:69:9\n-   |\n-LL |     let mut b = (&mut a,); //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:72:9\n-   |\n-LL |     let mut x = &mut 1; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:84:9\n-   |\n-LL |     let mut v : &mut Vec<()> = &mut vec![]; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:61:13\n-   |\n-LL |     fn what(mut foo: isize) {} //[lexical]~ ERROR: variable does not need to be mutable\n-   |             ----^^^\n-   |             |\n-   |             help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:79:20\n-   |\n-LL |     fn mut_ref_arg(mut arg : &mut [u8]) -> &mut [u8] {\n-   |                    ----^^^\n-   |                    |\n-   |                    help: remove this `mut`\n-\n-error: variable does not need to be mutable\n-  --> $DIR/lint-unused-mut-variables.rs:143:9\n-   |\n-LL |     let mut b = vec![2]; //[lexical]~ ERROR: variable does not need to be mutable\n-   |         ----^\n-   |         |\n-   |         help: remove this `mut`\n-   |\n-note: lint level defined here\n-  --> $DIR/lint-unused-mut-variables.rs:139:8\n-   |\n-LL | #[deny(unused_mut)]\n-   |        ^^^^^^^^^^\n-\n-error: aborting due to 17 previous errors\n-"}, {"sha": "a2005ba9f72e02db8b82d3d3736c3d6756d9d9a2", "filename": "src/test/ui/lint/lint-unused-mut-variables.rs", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.rs?ref=8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// revisions: lexical nll\n-#![cfg_attr(nll, feature(nll))]\n+\n+\n \n // Exercise the unused_mut attribute in some positive and negative cases\n \n@@ -21,68 +21,68 @@\n \n fn main() {\n     // negative cases\n-    let mut a = 3; //[lexical]~ ERROR: variable does not need to be mutable\n-                   //[nll]~^ ERROR: variable does not need to be mutable\n-    let mut a = 2; //[lexical]~ ERROR: variable does not need to be mutable\n-                   //[nll]~^ ERROR: variable does not need to be mutable\n-    let mut b = 3; //[lexical]~ ERROR: variable does not need to be mutable\n-                   //[nll]~^ ERROR: variable does not need to be mutable\n-    let mut a = vec![3]; //[lexical]~ ERROR: variable does not need to be mutable\n-                         //[nll]~^ ERROR: variable does not need to be mutable\n-    let (mut a, b) = (1, 2); //[lexical]~ ERROR: variable does not need to be mutable\n-                             //[nll]~^ ERROR: variable does not need to be mutable\n-    let mut a; //[lexical]~ ERROR: variable does not need to be mutable\n-               //[nll]~^ ERROR: variable does not need to be mutable\n+    let mut a = 3; //~ ERROR: variable does not need to be mutable\n+\n+    let mut a = 2; //~ ERROR: variable does not need to be mutable\n+\n+    let mut b = 3; //~ ERROR: variable does not need to be mutable\n+\n+    let mut a = vec![3]; //~ ERROR: variable does not need to be mutable\n+\n+    let (mut a, b) = (1, 2); //~ ERROR: variable does not need to be mutable\n+\n+    let mut a; //~ ERROR: variable does not need to be mutable\n+\n     a = 3;\n \n-    let mut b; //[lexical]~ ERROR: variable does not need to be mutable\n-               //[nll]~^ ERROR: variable does not need to be mutable\n+    let mut b; //~ ERROR: variable does not need to be mutable\n+\n     if true {\n         b = 3;\n     } else {\n         b = 4;\n     }\n \n     match 30 {\n-        mut x => {} //[lexical]~ ERROR: variable does not need to be mutable\n-                    //[nll]~^ ERROR: variable does not need to be mutable\n+        mut x => {} //~ ERROR: variable does not need to be mutable\n+\n     }\n     match (30, 2) {\n-      (mut x, 1) | //[lexical]~ ERROR: variable does not need to be mutable\n-                   //[nll]~^ ERROR: variable does not need to be mutable\n+      (mut x, 1) | //~ ERROR: variable does not need to be mutable\n+\n       (mut x, 2) |\n       (mut x, 3) => {\n       }\n       _ => {}\n     }\n \n-    let x = |mut y: isize| 10; //[lexical]~ ERROR: variable does not need to be mutable\n-                               //[nll]~^ ERROR: variable does not need to be mutable\n-    fn what(mut foo: isize) {} //[lexical]~ ERROR: variable does not need to be mutable\n-                               //[nll]~^ ERROR: variable does not need to be mutable\n+    let x = |mut y: isize| 10; //~ ERROR: variable does not need to be mutable\n+\n+    fn what(mut foo: isize) {} //~ ERROR: variable does not need to be mutable\n+\n+\n+    let mut a = &mut 5; //~ ERROR: variable does not need to be mutable\n \n-    let mut a = &mut 5; //[lexical]~ ERROR: variable does not need to be mutable\n-                        //[nll]~^ ERROR: variable does not need to be mutable\n     *a = 4;\n \n     let mut a = 5;\n-    let mut b = (&mut a,); //[lexical]~ ERROR: variable does not need to be mutable\n-    *b.0 = 4;              //[nll]~^ ERROR: variable does not need to be mutable\n+    let mut b = (&mut a,); //~ ERROR: variable does not need to be mutable\n+    *b.0 = 4;\n+\n+    let mut x = &mut 1; //~ ERROR: variable does not need to be mutable\n \n-    let mut x = &mut 1; //[lexical]~ ERROR: variable does not need to be mutable\n-                        //[nll]~^ ERROR: variable does not need to be mutable\n     let mut f = || {\n       *x += 1;\n     };\n     f();\n \n     fn mut_ref_arg(mut arg : &mut [u8]) -> &mut [u8] {\n-        &mut arg[..] //[lexical]~^ ERROR: variable does not need to be mutable\n-                     //[nll]~^^ ERROR: variable does not need to be mutable\n+        &mut arg[..] //~^ ERROR: variable does not need to be mutable\n+\n     }\n \n-    let mut v : &mut Vec<()> = &mut vec![]; //[lexical]~ ERROR: variable does not need to be mutable\n-                                            //[nll]~^ ERROR: variable does not need to be mutable\n+    let mut v : &mut Vec<()> = &mut vec![]; //~ ERROR: variable does not need to be mutable\n+\n     v.push(());\n \n     // positive cases\n@@ -140,6 +140,6 @@ fn foo(mut a: isize) {\n fn bar() {\n     #[allow(unused_mut)]\n     let mut a = 3;\n-    let mut b = vec![2]; //[lexical]~ ERROR: variable does not need to be mutable\n-                         //[nll]~^ ERROR: variable does not need to be mutable\n+    let mut b = vec![2]; //~ ERROR: variable does not need to be mutable\n+\n }"}, {"sha": "60e8400c42870980a52cefe5a4f0bd430270661f", "filename": "src/test/ui/lint/lint-unused-mut-variables.stderr", "status": "renamed", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unused-mut-variables.stderr?ref=8c4bfb833bbff7a6c4c5e9205e43ff70908f7e9f", "patch": "@@ -1,7 +1,7 @@\n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:59:14\n    |\n-LL |     let x = |mut y: isize| 10; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let x = |mut y: isize| 10; //~ ERROR: variable does not need to be mutable\n    |              ----^\n    |              |\n    |              help: remove this `mut`\n@@ -15,111 +15,111 @@ LL | #![deny(unused_mut)]\n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:24:9\n    |\n-LL |     let mut a = 3; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut a = 3; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:26:9\n    |\n-LL |     let mut a = 2; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut a = 2; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:28:9\n    |\n-LL |     let mut b = 3; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut b = 3; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:30:9\n    |\n-LL |     let mut a = vec![3]; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut a = vec![3]; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:32:10\n    |\n-LL |     let (mut a, b) = (1, 2); //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let (mut a, b) = (1, 2); //~ ERROR: variable does not need to be mutable\n    |          ----^\n    |          |\n    |          help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:34:9\n    |\n-LL |     let mut a; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut a; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:38:9\n    |\n-LL |     let mut b; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut b; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:47:9\n    |\n-LL |         mut x => {} //[lexical]~ ERROR: variable does not need to be mutable\n+LL |         mut x => {} //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:51:8\n    |\n-LL |       (mut x, 1) | //[lexical]~ ERROR: variable does not need to be mutable\n+LL |       (mut x, 1) | //~ ERROR: variable does not need to be mutable\n    |        ----^\n    |        |\n    |        help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:64:9\n    |\n-LL |     let mut a = &mut 5; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut a = &mut 5; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:69:9\n    |\n-LL |     let mut b = (&mut a,); //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut b = (&mut a,); //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:72:9\n    |\n-LL |     let mut x = &mut 1; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut x = &mut 1; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:84:9\n    |\n-LL |     let mut v : &mut Vec<()> = &mut vec![]; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut v : &mut Vec<()> = &mut vec![]; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`\n \n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:61:13\n    |\n-LL |     fn what(mut foo: isize) {} //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     fn what(mut foo: isize) {} //~ ERROR: variable does not need to be mutable\n    |             ----^^^\n    |             |\n    |             help: remove this `mut`\n@@ -135,7 +135,7 @@ LL |     fn mut_ref_arg(mut arg : &mut [u8]) -> &mut [u8] {\n error: variable does not need to be mutable\n   --> $DIR/lint-unused-mut-variables.rs:143:9\n    |\n-LL |     let mut b = vec![2]; //[lexical]~ ERROR: variable does not need to be mutable\n+LL |     let mut b = vec![2]; //~ ERROR: variable does not need to be mutable\n    |         ----^\n    |         |\n    |         help: remove this `mut`", "previous_filename": "src/test/ui/lint/lint-unused-mut-variables.lexical.stderr"}]}