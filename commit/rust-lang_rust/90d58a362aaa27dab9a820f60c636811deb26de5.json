{"sha": "90d58a362aaa27dab9a820f60c636811deb26de5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwZDU4YTM2MmFhYTI3ZGFiOWE4MjBmNjBjNjM2ODExZGViMjZkZTU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-11T17:20:55Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-10-11T17:20:55Z"}, "message": "rustbuild: Make openssl download more reliable.\n\n1. Add -f flag to curl, so when the server returns 403 or 500 it will fail\n   immediately.\n2. Moved the checksum part into the retry loop, assuming checksum failure\n   is due to broken download that can be fixed by downloading again.", "tree": {"sha": "be53ed199185c8629f7958ba2dc7b3605b007047", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be53ed199185c8629f7958ba2dc7b3605b007047"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/90d58a362aaa27dab9a820f60c636811deb26de5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlneUvcACgkQ/vbIBR0O\nATxbpRAAuI1hbOHDgG/rfZOOnzFIDKsSjpAnoy/xxqDtnuvynoz4Ho+/FMwVokD9\nHbPEKGeoJuzRWQVKYbncpI4DN383AmGHTUsfA2etA2+TIWx2NLX/7KJ+v4AdAHGk\nnJhrnHcNx5XDrE9+nIATNHf5y/vjOud9ZTgBsIw7bhxiz8e4wUOX197oYMoHoPrR\n9xzD4vHwtVOV97r++7dUufZmyeOSVewqjjLw+sfXT99eZWWI36mVVJAng7hxiBuc\n4uswXFbRCIUgvkUGt5rk97pzrsFzOgi5r+zXSolnhzkXjRPO4BBRKJk6uHoVWReM\n0bjJnQ/Ut11UWOp6Gh8ZhGS8gKP/SZfe1nZmKEaSvOUo/zDoezPcDKKfxs1+1mTU\nEqe/Jj5jXj1jvHsJW0wsw25bHNwnt4gMF4d15yszJneN1fmY64Yl8Rfm5Y3N2Ft9\nD4wuFqPnLsOudd0YpYkARPvQGYdmIES63ulKnQdig36Sh96zqK6jJoPZVxxxoTgB\nIzLjbXPeDsr+e4lCQuSMS+60dlr1JiAzZ5bFY0AMQVaC9L536+ELWIQp086h3fc6\nWZ5dsVwOodByljkjTGJtpCv6LfwOSdVG1rb4ATdPZJZfb6ifW5GrCt/SVMPQBYXw\n8LBxKw5k2UozAxF7oIeeSdf+fnKHx0coZtdb+hhbJjKsVTZx9bw=\n=Kg/I\n-----END PGP SIGNATURE-----", "payload": "tree be53ed199185c8629f7958ba2dc7b3605b007047\nparent c0d40a1908723a7bbf0d2f745570162de250f188\nauthor kennytm <kennytm@gmail.com> 1507742455 +0800\ncommitter kennytm <kennytm@gmail.com> 1507742455 +0800\n\nrustbuild: Make openssl download more reliable.\n\n1. Add -f flag to curl, so when the server returns 403 or 500 it will fail\n   immediately.\n2. Moved the checksum part into the retry loop, assuming checksum failure\n   is due to broken download that can be fixed by downloading again.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/90d58a362aaa27dab9a820f60c636811deb26de5", "html_url": "https://github.com/rust-lang/rust/commit/90d58a362aaa27dab9a820f60c636811deb26de5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/90d58a362aaa27dab9a820f60c636811deb26de5/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0d40a1908723a7bbf0d2f745570162de250f188", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d40a1908723a7bbf0d2f745570162de250f188", "html_url": "https://github.com/rust-lang/rust/commit/c0d40a1908723a7bbf0d2f745570162de250f188"}], "stats": {"total": 57, "additions": 37, "deletions": 20}, "files": [{"sha": "2c8e5004041da3480cdd8ae0e32bb0e60dda45a7", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 37, "deletions": 20, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/90d58a362aaa27dab9a820f60c636811deb26de5/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/90d58a362aaa27dab9a820f60c636811deb26de5/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=90d58a362aaa27dab9a820f60c636811deb26de5", "patch": "@@ -352,34 +352,51 @@ impl Step for Openssl {\n             // originally from https://www.openssl.org/source/...\n             let url = format!(\"https://s3-us-west-1.amazonaws.com/rust-lang-ci2/rust-ci-mirror/{}\",\n                               name);\n-            let mut ok = false;\n+            let mut last_error = None;\n             for _ in 0..3 {\n                 let status = Command::new(\"curl\")\n                                 .arg(\"-o\").arg(&tmp)\n+                                .arg(\"-f\")  // make curl fail if the URL does not return HTTP 200\n                                 .arg(&url)\n                                 .status()\n                                 .expect(\"failed to spawn curl\");\n-                if status.success() {\n-                    ok = true;\n-                    break\n+\n+                // Retry if download failed.\n+                if !status.success() {\n+                    last_error = Some(status.to_string());\n+                    continue;\n                 }\n+\n+                // Ensure the hash is correct.\n+                let mut shasum = if target.contains(\"apple\") || build.build.contains(\"netbsd\") {\n+                    let mut cmd = Command::new(\"shasum\");\n+                    cmd.arg(\"-a\").arg(\"256\");\n+                    cmd\n+                } else {\n+                    Command::new(\"sha256sum\")\n+                };\n+                let output = output(&mut shasum.arg(&tmp));\n+                let found = output.split_whitespace().next().unwrap();\n+\n+                // If the hash is wrong, probably the download is incomplete or S3 served an error\n+                // page. In any case, retry.\n+                if found != OPENSSL_SHA256 {\n+                    last_error = Some(format!(\n+                        \"downloaded openssl sha256 different\\n\\\n+                         expected: {}\\n\\\n+                         found:    {}\\n\",\n+                        OPENSSL_SHA256,\n+                        found\n+                    ));\n+                    continue;\n+                }\n+\n+                // Everything is fine, so exit the retry loop.\n+                last_error = None;\n+                break;\n             }\n-            if !ok {\n-                panic!(\"failed to download openssl source\")\n-            }\n-            let mut shasum = if target.contains(\"apple\") || build.build.contains(\"netbsd\") {\n-                let mut cmd = Command::new(\"shasum\");\n-                cmd.arg(\"-a\").arg(\"256\");\n-                cmd\n-            } else {\n-                Command::new(\"sha256sum\")\n-            };\n-            let output = output(&mut shasum.arg(&tmp));\n-            let found = output.split_whitespace().next().unwrap();\n-            if found != OPENSSL_SHA256 {\n-                panic!(\"downloaded openssl sha256 different\\n\\\n-                        expected: {}\\n\\\n-                        found:    {}\\n\", OPENSSL_SHA256, found);\n+            if let Some(error) = last_error {\n+                panic!(\"failed to download openssl source: {}\", error);\n             }\n             t!(fs::rename(&tmp, &tarball));\n         }"}]}