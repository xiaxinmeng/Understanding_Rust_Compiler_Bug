{"sha": "1c906093f93ca55994bded24fa0f9c99b8d1a681", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjOTA2MDkzZjkzY2E1NTk5NGJkZWQyNGZhMGY5Yzk5YjhkMWE2ODE=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-07-22T02:34:45Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-19T23:30:53Z"}, "message": "Add `try` to syntax_pos as an edition-2018-only keyword", "tree": {"sha": "8f5261a207ed1b964dafe1c6bf99dd71bd558ee4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f5261a207ed1b964dafe1c6bf99dd71bd558ee4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c906093f93ca55994bded24fa0f9c99b8d1a681", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c906093f93ca55994bded24fa0f9c99b8d1a681", "html_url": "https://github.com/rust-lang/rust/commit/1c906093f93ca55994bded24fa0f9c99b8d1a681", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c906093f93ca55994bded24fa0f9c99b8d1a681/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2445fb5075fa35d9b387d40bf6053007e63361e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2445fb5075fa35d9b387d40bf6053007e63361e", "html_url": "https://github.com/rust-lang/rust/commit/f2445fb5075fa35d9b387d40bf6053007e63361e"}], "stats": {"total": 62, "additions": 52, "deletions": 10}, "files": [{"sha": "dc92ce56c791e6b0a46936b63a66584133adc527", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 19, "deletions": 10, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1c906093f93ca55994bded24fa0f9c99b8d1a681/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c906093f93ca55994bded24fa0f9c99b8d1a681/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=1c906093f93ca55994bded24fa0f9c99b8d1a681", "patch": "@@ -413,23 +413,30 @@ declare_keywords! {\n     (49, Virtual,            \"virtual\")\n     (50, Yield,              \"yield\")\n \n+    // Edition-specific keywords currently in use.\n+    (51, Try,                \"try\") // >= 2018 Edition Only\n+\n     // Edition-specific keywords reserved for future use.\n-    (51, Async,              \"async\") // >= 2018 Edition Only\n+    (52, Async,              \"async\") // >= 2018 Edition Only\n \n     // Special lifetime names\n-    (52, UnderscoreLifetime, \"'_\")\n-    (53, StaticLifetime,     \"'static\")\n+    (53, UnderscoreLifetime, \"'_\")\n+    (54, StaticLifetime,     \"'static\")\n \n     // Weak keywords, have special meaning only in specific contexts.\n-    (54, Auto,               \"auto\")\n-    (55, Catch,              \"catch\")\n-    (56, Default,            \"default\")\n-    (57, Dyn,                \"dyn\")\n-    (58, Union,              \"union\")\n-    (59, Existential,        \"existential\")\n+    (55, Auto,               \"auto\")\n+    (56, Catch,              \"catch\")\n+    (57, Default,            \"default\")\n+    (58, Dyn,                \"dyn\")\n+    (59, Union,              \"union\")\n+    (60, Existential,        \"existential\")\n }\n \n impl Symbol {\n+    fn is_used_keyword_2018(self) -> bool {\n+        self == keywords::Try.name()\n+    }\n+\n     fn is_unused_keyword_2018(self) -> bool {\n         self == keywords::Async.name()\n     }\n@@ -444,7 +451,9 @@ impl Ident {\n \n     /// Returns `true` if the token is a keyword used in the language.\n     pub fn is_used_keyword(self) -> bool {\n-        self.name >= keywords::As.name() && self.name <= keywords::While.name()\n+        // Note: `span.edition()` is relatively expensive, don't call it unless necessary.\n+        self.name >= keywords::As.name() && self.name <= keywords::While.name() ||\n+        self.name.is_used_keyword_2018() && self.span.edition() == Edition::Edition2018\n     }\n \n     /// Returns `true` if the token is a keyword reserved for possible future use."}, {"sha": "1fe67313a35553731ea10e2b7796481528cf69eb", "filename": "src/test/parse-fail/keyword-try-as-identifier-edition2018.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1c906093f93ca55994bded24fa0f9c99b8d1a681/src%2Ftest%2Fparse-fail%2Fkeyword-try-as-identifier-edition2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c906093f93ca55994bded24fa0f9c99b8d1a681/src%2Ftest%2Fparse-fail%2Fkeyword-try-as-identifier-edition2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fkeyword-try-as-identifier-edition2018.rs?ref=1c906093f93ca55994bded24fa0f9c99b8d1a681", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Z parse-only --edition 2018\n+\n+fn main() {\n+    let try = \"foo\"; //~ error: expected pattern, found keyword `try`\n+}"}, {"sha": "aafb52e4c491fd73683435eaed533f62e71c03ff", "filename": "src/test/run-pass/try-is-identifier-edition2015.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1c906093f93ca55994bded24fa0f9c99b8d1a681/src%2Ftest%2Frun-pass%2Ftry-is-identifier-edition2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c906093f93ca55994bded24fa0f9c99b8d1a681/src%2Ftest%2Frun-pass%2Ftry-is-identifier-edition2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftry-is-identifier-edition2015.rs?ref=1c906093f93ca55994bded24fa0f9c99b8d1a681", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --edition 2015\n+\n+fn main() {\n+    let try = 2;\n+    struct try { try: u32 };\n+    let try: try = try { try };\n+    assert_eq!(try.try, 2);\n+}"}]}