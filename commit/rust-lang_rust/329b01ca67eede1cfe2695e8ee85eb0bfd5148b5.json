{"sha": "329b01ca67eede1cfe2695e8ee85eb0bfd5148b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyOWIwMWNhNjdlZWRlMWNmZTI2OTVlOGVlODVlYjBiZmQ1MTQ4YjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T19:26:39Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-17T19:26:39Z"}, "message": "minor: simplify", "tree": {"sha": "b028c8c1a2933076fc98cdab8dbe93a50e039463", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b028c8c1a2933076fc98cdab8dbe93a50e039463"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5", "html_url": "https://github.com/rust-lang/rust/commit/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77e8421d0f125f7aac785d2525b3146dfbc40d95", "url": "https://api.github.com/repos/rust-lang/rust/commits/77e8421d0f125f7aac785d2525b3146dfbc40d95", "html_url": "https://github.com/rust-lang/rust/commit/77e8421d0f125f7aac785d2525b3146dfbc40d95"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e0b740a8152591875995ea55be2374ce3f3cb51e", "filename": "crates/parser/src/grammar/items.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/329b01ca67eede1cfe2695e8ee85eb0bfd5148b5/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fitems.rs?ref=329b01ca67eede1cfe2695e8ee85eb0bfd5148b5", "patch": "@@ -415,16 +415,16 @@ fn macro_def(p: &mut Parser, m: Marker) {\n         // test macro_def_curly\n         // macro m { ($i:ident) => {} }\n         token_tree(p);\n-    } else if !p.at(T!['(']) {\n-        p.error(\"unmatched `(`\");\n-    } else {\n+    } else if p.at(T!['(']) {\n         let m = p.start();\n         token_tree(p);\n         match p.current() {\n             T!['{'] | T!['['] | T!['('] => token_tree(p),\n             _ => p.error(\"expected `{`, `[`, `(`\"),\n         }\n         m.complete(p, TOKEN_TREE);\n+    } else {\n+        p.error(\"unmatched `(`\");\n     }\n \n     m.complete(p, MACRO_DEF);"}]}