{"sha": "62bec714462129adcc622575d69db558b3750a6e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyYmVjNzE0NDYyMTI5YWRjYzYyMjU3NWQ2OWRiNTU4YjM3NTBhNmU=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-06-15T09:08:20Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-06-25T21:41:22Z"}, "message": "Fix incorrect double assignment in MIR for while loops", "tree": {"sha": "894c4681e1138db08d1efa9b04e027f8fc346e3a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/894c4681e1138db08d1efa9b04e027f8fc346e3a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62bec714462129adcc622575d69db558b3750a6e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62bec714462129adcc622575d69db558b3750a6e", "html_url": "https://github.com/rust-lang/rust/commit/62bec714462129adcc622575d69db558b3750a6e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62bec714462129adcc622575d69db558b3750a6e/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f9c0448dde167128d668da4555879f64e56af1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f9c0448dde167128d668da4555879f64e56af1d", "html_url": "https://github.com/rust-lang/rust/commit/5f9c0448dde167128d668da4555879f64e56af1d"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "dc74466e6330983d511ac9e7e821c557c360887f", "filename": "src/librustc_mir/build/expr/into.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/62bec714462129adcc622575d69db558b3750a6e/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62bec714462129adcc622575d69db558b3750a6e/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fexpr%2Finto.rs?ref=62bec714462129adcc622575d69db558b3750a6e", "patch": "@@ -184,15 +184,23 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                                 loop_block_end = this.as_local_operand(loop_block, cond_expr)\n                             );\n                             body_block = this.cfg.start_new_block();\n-                            let term =\n-                                TerminatorKind::if_(this.hir.tcx(), cond, body_block, exit_block);\n+                            let false_block = this.cfg.start_new_block();\n+                            let term = TerminatorKind::if_(\n+                                this.hir.tcx(),\n+                                cond,\n+                                body_block,\n+                                false_block,\n+                            );\n                             this.cfg.terminate(loop_block_end, source_info, term);\n \n                             // if the test is false, there's no `break` to assign `destination`, so\n-                            // we have to do it; this overwrites any `break`-assigned value but it's\n-                            // always `()` anyway\n-                            this.cfg\n-                                .push_assign_unit(exit_block, source_info, destination);\n+                            // we have to do it\n+                            this.cfg.push_assign_unit(false_block, source_info, destination);\n+                            this.cfg.terminate(\n+                                false_block,\n+                                source_info,\n+                                TerminatorKind::Goto { target: exit_block },\n+                            );\n                         } else {\n                             body_block = this.cfg.start_new_block();\n                             let diverge_cleanup = this.diverge_cleanup();"}, {"sha": "c803321b5087a5b00b726f77c8429b46c5044536", "filename": "src/test/ui/nll/assign-while-to-immutable.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/62bec714462129adcc622575d69db558b3750a6e/src%2Ftest%2Fui%2Fnll%2Fassign-while-to-immutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62bec714462129adcc622575d69db558b3750a6e/src%2Ftest%2Fui%2Fnll%2Fassign-while-to-immutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fassign-while-to-immutable.rs?ref=62bec714462129adcc622575d69db558b3750a6e", "patch": "@@ -0,0 +1,11 @@\n+// We used to incorrectly assign to `x` twice when generating MIR for this\n+// function, preventing this from compiling.\n+\n+// check-pass\n+\n+fn main() {\n+    let x = while false {\n+        break;\n+    };\n+    let y = 'l: while break 'l {};\n+}"}]}