{"sha": "ccbf28eae8b345db3ede51112cc32c756a084bd9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYmYyOGVhZThiMzQ1ZGIzZWRlNTExMTJjYzMyYzc1NmEwODRiZDk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-01-02T21:23:45Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2019-01-03T21:52:36Z"}, "message": "rustc: Fix regression where jemalloc isn't used\n\nIn #56986 the linkage of jemalloc to the compiler was switched from the\ndriver library to the rustc binary to ensure that only rustc itself uses\njemalloc. In doing so, however, it turns out jemalloc wasn't actually\nlinked in at all! None of the symbols were referenced so the static\nlibrary wasn't used. This means that jemalloc wasn't pulled in at all.\n\nThis commit performs a bit of a dance to reference jemalloc symbols,\nattempting to pull it in despite LLVM's optimizations.\n\nCloses #57115", "tree": {"sha": "5f48795503b2ea4984b18347bfd9af701f9f3671", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f48795503b2ea4984b18347bfd9af701f9f3671"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccbf28eae8b345db3ede51112cc32c756a084bd9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccbf28eae8b345db3ede51112cc32c756a084bd9", "html_url": "https://github.com/rust-lang/rust/commit/ccbf28eae8b345db3ede51112cc32c756a084bd9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccbf28eae8b345db3ede51112cc32c756a084bd9/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a36b960df626cbb8bea74f01243318b73f0bd201", "url": "https://api.github.com/repos/rust-lang/rust/commits/a36b960df626cbb8bea74f01243318b73f0bd201", "html_url": "https://github.com/rust-lang/rust/commit/a36b960df626cbb8bea74f01243318b73f0bd201"}], "stats": {"total": 42, "additions": 32, "deletions": 10}, "files": [{"sha": "e601a1f82377f7b7362df49f174752a750b0926f", "filename": "src/rustc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ccbf28eae8b345db3ede51112cc32c756a084bd9/src%2Frustc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ccbf28eae8b345db3ede51112cc32c756a084bd9/src%2Frustc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2FCargo.toml?ref=ccbf28eae8b345db3ede51112cc32c756a084bd9", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"rustc-main\"\n version = \"0.0.0\"\n+edition = '2018'\n \n [[bin]]\n name = \"rustc_binary\""}, {"sha": "fef6b830040b9e1c23269b3fb2a1dd6bfc6b229e", "filename": "src/rustc/rustc.rs", "status": "modified", "additions": 31, "deletions": 10, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/ccbf28eae8b345db3ede51112cc32c756a084bd9/src%2Frustc%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccbf28eae8b345db3ede51112cc32c756a084bd9/src%2Frustc%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Frustc.rs?ref=ccbf28eae8b345db3ede51112cc32c756a084bd9", "patch": "@@ -1,4 +1,3 @@\n-#![feature(rustc_private)]\n #![feature(link_args)]\n \n // Set the stack size at link time on Windows. See rustc_driver::in_rustc_thread\n@@ -11,17 +10,39 @@\n // Also, don't forget to set this for rustdoc.\n extern {}\n \n-extern crate rustc_driver;\n+fn main() {\n+    // Pull in jemalloc when enabled.\n+    //\n+    // Note that we're pulling in a static copy of jemalloc which means that to\n+    // pull it in we need to actually reference its symbols for it to get\n+    // linked. The two crates we link to here, std and rustc_driver, are both\n+    // dynamic libraries. That means to pull in jemalloc we need to actually\n+    // reference allocation symbols one way or another (as this file is the only\n+    // object code in the rustc executable).\n+    #[cfg(feature = \"jemalloc-sys\")]\n+    {\n+        use std::os::raw::{c_void, c_int};\n \n-// Note that the linkage here should be all that we need, on Linux we're not\n-// prefixing the symbols here so this should naturally override our default\n-// allocator. On OSX it should override via the zone allocator. We shouldn't\n-// enable this by default on other platforms, so other platforms aren't handled\n-// here yet.\n-#[cfg(feature = \"jemalloc-sys\")]\n-extern crate jemalloc_sys;\n+        #[used]\n+        static _F1: unsafe extern fn(usize, usize) -> *mut c_void =\n+            jemalloc_sys::calloc;\n+        #[used]\n+        static _F2: unsafe extern fn(*mut *mut c_void, usize, usize) -> c_int =\n+            jemalloc_sys::posix_memalign;\n+        #[used]\n+        static _F3: unsafe extern fn(usize, usize) -> *mut c_void =\n+            jemalloc_sys::aligned_alloc;\n+        #[used]\n+        static _F4: unsafe extern fn(usize) -> *mut c_void =\n+            jemalloc_sys::malloc;\n+        #[used]\n+        static _F5: unsafe extern fn(*mut c_void, usize) -> *mut c_void =\n+            jemalloc_sys::realloc;\n+        #[used]\n+        static _F6: unsafe extern fn(*mut c_void) =\n+            jemalloc_sys::free;\n+    }\n \n-fn main() {\n     rustc_driver::set_sigpipe_handler();\n     rustc_driver::main()\n }"}]}