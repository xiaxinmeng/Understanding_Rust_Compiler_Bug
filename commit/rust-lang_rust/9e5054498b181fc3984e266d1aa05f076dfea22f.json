{"sha": "9e5054498b181fc3984e266d1aa05f076dfea22f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNTA1NDQ5OGIxODFmYzM5ODRlMjY2ZDFhYTA1ZjA3NmRmZWEyMmY=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-02-04T10:04:29Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2021-02-04T15:33:58Z"}, "message": "Add unit test to ensure that both parts of a DefPathHash depend on the defining crate's ID.", "tree": {"sha": "7914141ecdc8ee6b647b6f5be441c1f1b8c10008", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7914141ecdc8ee6b647b6f5be441c1f1b8c10008"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e5054498b181fc3984e266d1aa05f076dfea22f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e5054498b181fc3984e266d1aa05f076dfea22f", "html_url": "https://github.com/rust-lang/rust/commit/9e5054498b181fc3984e266d1aa05f076dfea22f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e5054498b181fc3984e266d1aa05f076dfea22f/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97380e3b06555c0dd3a8fd1e3d2ca7c4bfeeb21f", "url": "https://api.github.com/repos/rust-lang/rust/commits/97380e3b06555c0dd3a8fd1e3d2ca7c4bfeeb21f", "html_url": "https://github.com/rust-lang/rust/commit/97380e3b06555c0dd3a8fd1e3d2ca7c4bfeeb21f"}], "stats": {"total": 57, "additions": 54, "deletions": 3}, "files": [{"sha": "ac6a359ee577d7e436d17920d2362e0f7577dd75", "filename": "compiler/rustc_hir/src/definitions.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fdefinitions.rs?ref=9e5054498b181fc3984e266d1aa05f076dfea22f", "patch": "@@ -58,8 +58,11 @@ impl DefPathTable {\n             // being used.\n             //\n             // See the documentation for DefPathHash for more information.\n-            panic!(\"found DefPathHash collsion between {:?} and {:?}. \\\n-                    Compilation cannot continue.\", def_path1, def_path2);\n+            panic!(\n+                \"found DefPathHash collsion between {:?} and {:?}. \\\n+                    Compilation cannot continue.\",\n+                def_path1, def_path2\n+            );\n         }\n \n         // Assert that all DefPathHashes correctly contain the local crate's\n@@ -138,7 +141,7 @@ pub struct DefKey {\n }\n \n impl DefKey {\n-    fn compute_stable_hash(&self, parent: DefPathHash) -> DefPathHash {\n+    pub(crate) fn compute_stable_hash(&self, parent: DefPathHash) -> DefPathHash {\n         let mut hasher = StableHasher::new();\n \n         parent.hash(&mut hasher);"}, {"sha": "c65151cd1305da156761f1e5021dcf8e7621ec6e", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=9e5054498b181fc3984e266d1aa05f076dfea22f", "patch": "@@ -31,6 +31,9 @@ mod stable_hash_impls;\n mod target;\n pub mod weak_lang_items;\n \n+#[cfg(test)]\n+mod tests;\n+\n pub use hir::*;\n pub use hir_id::*;\n pub use lang_items::{LangItem, LanguageItems};"}, {"sha": "2aafc6afa236d8fd5d2b6c7e0361768d1aace5e5", "filename": "compiler/rustc_hir/src/tests.rs", "status": "added", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_hir%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_hir%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Ftests.rs?ref=9e5054498b181fc3984e266d1aa05f076dfea22f", "patch": "@@ -0,0 +1,39 @@\n+use crate::definitions::{DefKey, DefPathData, DisambiguatedDefPathData};\n+use rustc_data_structures::fingerprint::Fingerprint;\n+use rustc_span::crate_disambiguator::CrateDisambiguator;\n+use rustc_span::def_id::{DefPathHash, StableCrateId};\n+\n+#[test]\n+fn def_path_hash_depends_on_crate_id() {\n+    // This test makes sure that *both* halves of a DefPathHash depend on\n+    // the crate-id of the defining crate. This is a desirable property\n+    // because the crate-id can be more easily changed than the DefPath\n+    // of an item, so, in the case of a crate-local DefPathHash collision,\n+    // the user can simply \"role the dice again\" for all DefPathHashes in\n+    // the crate by changing the crate disambiguator (e.g. via bumping the\n+    // crate's version number).\n+\n+    let d0 = CrateDisambiguator::from(Fingerprint::new(12, 34));\n+    let d1 = CrateDisambiguator::from(Fingerprint::new(56, 78));\n+\n+    let h0 = mk_test_hash(\"foo\", d0);\n+    let h1 = mk_test_hash(\"foo\", d1);\n+\n+    assert_ne!(h0.stable_crate_id(), h1.stable_crate_id());\n+    assert_ne!(h0.local_hash(), h1.local_hash());\n+\n+    fn mk_test_hash(crate_name: &str, crate_disambiguator: CrateDisambiguator) -> DefPathHash {\n+        let stable_crate_id = StableCrateId::new(crate_name, crate_disambiguator);\n+        let parent_hash = DefPathHash::new(stable_crate_id, 0);\n+\n+        let key = DefKey {\n+            parent: None,\n+            disambiguated_data: DisambiguatedDefPathData {\n+                data: DefPathData::CrateRoot,\n+                disambiguator: 0,\n+            },\n+        };\n+\n+        key.compute_stable_hash(parent_hash)\n+    }\n+}"}, {"sha": "bd8c95fd6617106515d7d36c6bb028a00057f83d", "filename": "compiler/rustc_span/src/def_id.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e5054498b181fc3984e266d1aa05f076dfea22f/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fdef_id.rs?ref=9e5054498b181fc3984e266d1aa05f076dfea22f", "patch": "@@ -159,6 +159,12 @@ impl DefPathHash {\n         StableCrateId(self.0.as_value().0)\n     }\n \n+    /// Returns the crate-local part of the [DefPathHash].\n+    #[inline]\n+    pub fn local_hash(&self) -> u64 {\n+        self.0.as_value().1\n+    }\n+\n     /// Builds a new [DefPathHash] with the given [StableCrateId] and\n     /// `local_hash`, where `local_hash` must be unique within its crate.\n     pub fn new(stable_crate_id: StableCrateId, local_hash: u64) -> DefPathHash {"}]}