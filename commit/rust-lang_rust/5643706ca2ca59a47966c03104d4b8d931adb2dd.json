{"sha": "5643706ca2ca59a47966c03104d4b8d931adb2dd", "node_id": "C_kwDOAAsO6NoAKDU2NDM3MDZjYTJjYTU5YTQ3OTY2YzAzMTA0ZDRiOGQ5MzFhZGIyZGQ", "commit": {"author": {"name": "lionelllohcd", "email": "lionellloh@gmail.com", "date": "2023-02-20T07:51:17Z"}, "committer": {"name": "lionelllohcd", "email": "lionellloh@gmail.com", "date": "2023-02-20T07:51:17Z"}, "message": "Removed trailing spaces to satisfy lint", "tree": {"sha": "23c8d2eea3d9712615a10a9b8280f4a1eef977a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23c8d2eea3d9712615a10a9b8280f4a1eef977a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5643706ca2ca59a47966c03104d4b8d931adb2dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5643706ca2ca59a47966c03104d4b8d931adb2dd", "html_url": "https://github.com/rust-lang/rust/commit/5643706ca2ca59a47966c03104d4b8d931adb2dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5643706ca2ca59a47966c03104d4b8d931adb2dd/comments", "author": {"login": "lionellloh", "id": 29104062, "node_id": "MDQ6VXNlcjI5MTA0MDYy", "avatar_url": "https://avatars.githubusercontent.com/u/29104062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lionellloh", "html_url": "https://github.com/lionellloh", "followers_url": "https://api.github.com/users/lionellloh/followers", "following_url": "https://api.github.com/users/lionellloh/following{/other_user}", "gists_url": "https://api.github.com/users/lionellloh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lionellloh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lionellloh/subscriptions", "organizations_url": "https://api.github.com/users/lionellloh/orgs", "repos_url": "https://api.github.com/users/lionellloh/repos", "events_url": "https://api.github.com/users/lionellloh/events{/privacy}", "received_events_url": "https://api.github.com/users/lionellloh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lionellloh", "id": 29104062, "node_id": "MDQ6VXNlcjI5MTA0MDYy", "avatar_url": "https://avatars.githubusercontent.com/u/29104062?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lionellloh", "html_url": "https://github.com/lionellloh", "followers_url": "https://api.github.com/users/lionellloh/followers", "following_url": "https://api.github.com/users/lionellloh/following{/other_user}", "gists_url": "https://api.github.com/users/lionellloh/gists{/gist_id}", "starred_url": "https://api.github.com/users/lionellloh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lionellloh/subscriptions", "organizations_url": "https://api.github.com/users/lionellloh/orgs", "repos_url": "https://api.github.com/users/lionellloh/repos", "events_url": "https://api.github.com/users/lionellloh/events{/privacy}", "received_events_url": "https://api.github.com/users/lionellloh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "960ac2e07f2edc7ac23f006d0c07467ac0967833", "url": "https://api.github.com/repos/rust-lang/rust/commits/960ac2e07f2edc7ac23f006d0c07467ac0967833", "html_url": "https://github.com/rust-lang/rust/commit/960ac2e07f2edc7ac23f006d0c07467ac0967833"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "04e798e3949d9a5a9316e0e55aa3bee743121e4c", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 10, "deletions": 11, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5643706ca2ca59a47966c03104d4b8d931adb2dd/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/5643706ca2ca59a47966c03104d4b8d931adb2dd/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=5643706ca2ca59a47966c03104d4b8d931adb2dd", "patch": "@@ -382,8 +382,8 @@ def set(key, value):\n top_level_keys = []\n \n for line in open(rust_dir + '/config.toml.example').read().split(\"\\n\"):\n-    if cur_section == None: \n-        if line.count('=') == 1: \n+    if cur_section == None:\n+        if line.count('=') == 1:\n             top_level_key = line.split('=')[0]\n             top_level_key = top_level_key.strip(' #')\n             top_level_keys.append(top_level_key)\n@@ -465,20 +465,19 @@ def configure_section(lines, config):\n                 raise RuntimeError(\"failed to find config line for {}\".format(key))\n \n \n-def configure_top_level_key(lines, top_level_key, value): \n-    for i, line in enumerate(lines): \n-        if line.startswith('#' + top_level_key + ' = ') or line.startswith(top_level_key + ' = '): \n+def configure_top_level_key(lines, top_level_key, value):\n+    for i, line in enumerate(lines):\n+        if line.startswith('#' + top_level_key + ' = ') or line.startswith(top_level_key + ' = '):\n             lines[i] = \"{} = {}\".format(top_level_key, value)\n-            return \n-        \n+            return\n+\n     raise RuntimeError(\"failed to find config line for {}\".format(top_level_key))\n \n-      \n+\n for section_key, section_config in config.items():\n-    if section_key not in sections and section_key not in top_level_keys: \n+    if section_key not in sections and section_key not in top_level_keys:\n         raise RuntimeError(\"config key {} not in sections or top_level_keys\".format(section_key))\n-    \n-    if section_key in top_level_keys: \n+    if section_key in top_level_keys:\n         configure_top_level_key(sections[None], section_key, section_config)\n \n     elif  section_key == 'target':"}]}