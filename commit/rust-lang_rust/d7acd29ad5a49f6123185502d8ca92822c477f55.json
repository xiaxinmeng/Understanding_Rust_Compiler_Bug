{"sha": "d7acd29ad5a49f6123185502d8ca92822c477f55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3YWNkMjlhZDVhNDlmNjEyMzE4NTUwMmQ4Y2E5MjgyMmM0NzdmNTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-09T08:49:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-09T08:49:38Z"}, "message": "Auto merge of #45064 - alexcrichton:reduce-codegen-units, r=michaelwoerister\n\nrustc: Reduce default CGUs to 16\n\nRationale explained in the included comment as well as #44941", "tree": {"sha": "94083ffdad06c52822100b481bf80049d2afe89f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94083ffdad06c52822100b481bf80049d2afe89f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7acd29ad5a49f6123185502d8ca92822c477f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7acd29ad5a49f6123185502d8ca92822c477f55", "html_url": "https://github.com/rust-lang/rust/commit/d7acd29ad5a49f6123185502d8ca92822c477f55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7acd29ad5a49f6123185502d8ca92822c477f55/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2f67c8d5676d13d83523316ac95a7056dbd19c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2f67c8d5676d13d83523316ac95a7056dbd19c6", "html_url": "https://github.com/rust-lang/rust/commit/b2f67c8d5676d13d83523316ac95a7056dbd19c6"}, {"sha": "19884470076efdeaa03af634b27f306fffc92289", "url": "https://api.github.com/repos/rust-lang/rust/commits/19884470076efdeaa03af634b27f306fffc92289", "html_url": "https://github.com/rust-lang/rust/commit/19884470076efdeaa03af634b27f306fffc92289"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "8b35b064eb3efed29bd2cedfcb64f2aff54a4ec6", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d7acd29ad5a49f6123185502d8ca92822c477f55/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7acd29ad5a49f6123185502d8ca92822c477f55/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=d7acd29ad5a49f6123185502d8ca92822c477f55", "patch": "@@ -1711,7 +1711,7 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n \n     let codegen_units = codegen_units.unwrap_or_else(|| {\n         match opt_level {\n-            // If we're compiling at `-O0` then default to 32 codegen units.\n+            // If we're compiling at `-O0` then default to 16 codegen units.\n             // The number here shouldn't matter too too much as debug mode\n             // builds don't rely on performance at all, meaning that lost\n             // opportunities for inlining through multiple codegen units is\n@@ -1729,7 +1729,21 @@ pub fn build_session_options_and_crate_config(matches: &getopts::Matches)\n             // unit takes *too* long to build we'll be guaranteed that all\n             // cpus will finish pretty closely to one another and we should\n             // make relatively optimal use of system resources\n-            OptLevel::No => 32,\n+            //\n+            // Another note worth mentioning here, however, is that this number\n+            // isn't *too* high. When codegen units are increased that means we\n+            // currently have to codegen `#[inline]` functions into each codegen\n+            // unit, which means the more codegen units we're using the more we\n+            // may be generating. In other words, increasing codegen units may\n+            // increase the overall work the compiler does. If we don't have\n+            // enough cores to make up for this loss then increasing the number\n+            // of codegen units could become an overall loss!\n+            //\n+            // As a result we choose a hopefully conservative value 16, which\n+            // should be more than the number of cpus of most hardware compiling\n+            // Rust but also not too much for 2-4 core machines to have too much\n+            // loss of compile time.\n+            OptLevel::No => 16,\n \n             // All other optimization levels default use one codegen unit,\n             // the historical default in Rust for a Long Time."}]}