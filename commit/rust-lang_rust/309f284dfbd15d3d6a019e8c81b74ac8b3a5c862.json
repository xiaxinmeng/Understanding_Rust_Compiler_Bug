{"sha": "309f284dfbd15d3d6a019e8c81b74ac8b3a5c862", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwOWYyODRkZmJkMTVkM2Q2YTAxOWU4YzgxYjc0YWM4YjNhNWM4NjI=", "commit": {"author": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2015-12-31T05:33:07Z"}, "committer": {"name": "Mark Story", "email": "mark@mark-story.com", "date": "2016-01-14T02:01:27Z"}, "message": "Fix formatting errors.", "tree": {"sha": "a1cb7661de82d7247084fc0a036a3356029aec2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1cb7661de82d7247084fc0a036a3356029aec2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/309f284dfbd15d3d6a019e8c81b74ac8b3a5c862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/309f284dfbd15d3d6a019e8c81b74ac8b3a5c862", "html_url": "https://github.com/rust-lang/rust/commit/309f284dfbd15d3d6a019e8c81b74ac8b3a5c862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/309f284dfbd15d3d6a019e8c81b74ac8b3a5c862/comments", "author": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "markstory", "id": 24086, "node_id": "MDQ6VXNlcjI0MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/24086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/markstory", "html_url": "https://github.com/markstory", "followers_url": "https://api.github.com/users/markstory/followers", "following_url": "https://api.github.com/users/markstory/following{/other_user}", "gists_url": "https://api.github.com/users/markstory/gists{/gist_id}", "starred_url": "https://api.github.com/users/markstory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/markstory/subscriptions", "organizations_url": "https://api.github.com/users/markstory/orgs", "repos_url": "https://api.github.com/users/markstory/repos", "events_url": "https://api.github.com/users/markstory/events{/privacy}", "received_events_url": "https://api.github.com/users/markstory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d188854e133ab704b4c122d43c4c3621cf12caf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d188854e133ab704b4c122d43c4c3621cf12caf5", "html_url": "https://github.com/rust-lang/rust/commit/d188854e133ab704b4c122d43c4c3621cf12caf5"}], "stats": {"total": 23, "additions": 11, "deletions": 12}, "files": [{"sha": "56e40e73c785e25cb0de99831cdb9f297a83cb2c", "filename": "src/filemap.rs", "status": "modified", "additions": 11, "deletions": 12, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/309f284dfbd15d3d6a019e8c81b74ac8b3a5c862/src%2Ffilemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/309f284dfbd15d3d6a019e8c81b74ac8b3a5c862/src%2Ffilemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffilemap.rs?ref=309f284dfbd15d3d6a019e8c81b74ac8b3a5c862", "patch": "@@ -43,8 +43,7 @@ pub fn write_all_files(file_map: &FileMap,\n     Ok(())\n }\n \n-pub fn output_heading(file_map: &FileMap,\n-                      mode: WriteMode) -> Result<(), io::Error> {\n+pub fn output_heading(file_map: &FileMap, mode: WriteMode) -> Result<(), io::Error> {\n     let stdout = stdout();\n     let mut stdout = stdout.lock();\n     match mode {\n@@ -56,14 +55,11 @@ pub fn output_heading(file_map: &FileMap,\n             try!(write!(stdout, \"{}\", xml_heading));\n             Ok(())\n         }\n-        _ => {\n-            Ok(())\n-        }\n+        _ => Ok(()),\n     }\n }\n \n-pub fn output_trailing(file_map: &FileMap,\n-                       mode: WriteMode) -> Result<(), io::Error> {\n+pub fn output_trailing(file_map: &FileMap, mode: WriteMode) -> Result<(), io::Error> {\n     let stdout = stdout();\n     let mut stdout = stdout.lock();\n     match mode {\n@@ -73,23 +69,26 @@ pub fn output_trailing(file_map: &FileMap,\n             try!(write!(stdout, \"{}\", xml_tail));\n             Ok(())\n         }\n-        _ => {\n-            Ok(())\n-        }\n+        _ => Ok(()),\n     }\n }\n \n pub fn output_checkstyle_file<T>(mut writer: T,\n                                  filename: &str,\n-                                 diff: Vec<Mismatch>) -> Result<(), io::Error>\n+                                 diff: Vec<Mismatch>)\n+                                 -> Result<(), io::Error>\n     where T: Write\n {\n     try!(write!(writer, \"<file name=\\\"{}\\\">\", filename));\n     for mismatch in diff {\n         for line in mismatch.lines {\n             match line {\n                 DiffLine::Expected(ref str) => {\n-                    try!(write!(writer, \"<error line=\\\"{}\\\" severity=\\\"error\\\" message=\\\"Should be `{}`\\\" />\", mismatch.line_number, str));\n+                    try!(write!(writer,\n+                                \"<error line=\\\"{}\\\" severity=\\\"error\\\" message=\\\"Should be \\\n+                                 `{}`\\\" />\",\n+                                mismatch.line_number,\n+                                str));\n                 }\n                 _ => {\n                     // Do nothing with context and expected."}]}