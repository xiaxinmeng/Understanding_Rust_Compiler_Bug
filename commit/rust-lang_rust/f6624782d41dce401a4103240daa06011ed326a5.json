{"sha": "f6624782d41dce401a4103240daa06011ed326a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NjI0NzgyZDQxZGNlNDAxYTQxMDMyNDBkYWEwNjAxMWVkMzI2YTU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-07-29T20:47:55Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-08-12T21:08:14Z"}, "message": "Parse numeric fields in struct expressions and patterns", "tree": {"sha": "c49cfbbaccd0f0d9398cb90d57a096c2c47c3973", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c49cfbbaccd0f0d9398cb90d57a096c2c47c3973"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6624782d41dce401a4103240daa06011ed326a5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6624782d41dce401a4103240daa06011ed326a5", "html_url": "https://github.com/rust-lang/rust/commit/f6624782d41dce401a4103240daa06011ed326a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6624782d41dce401a4103240daa06011ed326a5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59be332a1b3b190ec5dfdb6768e80f9d312a0c6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/59be332a1b3b190ec5dfdb6768e80f9d312a0c6b", "html_url": "https://github.com/rust-lang/rust/commit/59be332a1b3b190ec5dfdb6768e80f9d312a0c6b"}], "stats": {"total": 56, "additions": 54, "deletions": 2}, "files": [{"sha": "4c279b2fe48327dfda1f94e746d1ec445bba6e28", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f6624782d41dce401a4103240daa06011ed326a5/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6624782d41dce401a4103240daa06011ed326a5/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f6624782d41dce401a4103240daa06011ed326a5", "patch": "@@ -2009,10 +2009,19 @@ impl<'a> Parser<'a> {\n         }\n     }\n \n+    pub fn parse_field_name(&mut self) -> PResult<'a, Ident> {\n+        if let token::Literal(token::Integer(name), None) = self.token {\n+            self.bump();\n+            Ok(Ident::with_empty_ctxt(name))\n+        } else {\n+            self.parse_ident()\n+        }\n+    }\n+\n     /// Parse ident COLON expr\n     pub fn parse_field(&mut self) -> PResult<'a, Field> {\n         let lo = self.span.lo;\n-        let i = self.parse_ident()?;\n+        let i = self.parse_field_name()?;\n         let hi = self.last_span.hi;\n         self.expect(&token::Colon)?;\n         let e = self.parse_expr()?;\n@@ -3508,7 +3517,7 @@ impl<'a> Parser<'a> {\n             // Check if a colon exists one ahead. This means we're parsing a fieldname.\n             let (subpat, fieldname, is_shorthand) = if self.look_ahead(1, |t| t == &token::Colon) {\n                 // Parsing a pattern of the form \"fieldname: pat\"\n-                let fieldname = self.parse_ident()?;\n+                let fieldname = self.parse_field_name()?;\n                 self.bump();\n                 let pat = self.parse_pat()?;\n                 hi = pat.span.hi;"}, {"sha": "480d2dcddddd45879cbd60da493605b93d63e5f2", "filename": "src/test/compile-fail/numeric-fields.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f6624782d41dce401a4103240daa06011ed326a5/src%2Ftest%2Fcompile-fail%2Fnumeric-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6624782d41dce401a4103240daa06011ed326a5/src%2Ftest%2Fcompile-fail%2Fnumeric-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnumeric-fields.rs?ref=f6624782d41dce401a4103240daa06011ed326a5", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(relaxed_adts)]\n+\n+struct S(u8, u16);\n+\n+fn main() {\n+    let s = S{0b1: 10, 0: 11}; //~ ERROR structure `S` has no field named `0b1`\n+    match s {\n+        S{0: a, 0x1: b, ..} => {} //~ ERROR does not have a field named `0x1`\n+    }\n+}"}, {"sha": "25e5a2a0fd5baeef69214cfce9b28f40a805cdc0", "filename": "src/test/run-pass/numeric-fields.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/f6624782d41dce401a4103240daa06011ed326a5/src%2Ftest%2Frun-pass%2Fnumeric-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6624782d41dce401a4103240daa06011ed326a5/src%2Ftest%2Frun-pass%2Fnumeric-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnumeric-fields.rs?ref=f6624782d41dce401a4103240daa06011ed326a5", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(relaxed_adts)]\n+\n+struct S(u8, u16);\n+\n+fn main() {\n+    let s = S{1: 10, 0: 11};\n+    match s {\n+        S{0: a, 1: b, ..} => {\n+            assert_eq!(a, 11);\n+            assert_eq!(b, 10);\n+        }\n+    }\n+}"}]}