{"sha": "6ce3ae4b73b678c8c50fc9844ede20aaa214ad10", "node_id": "C_kwDOAAsO6NoAKDZjZTNhZTRiNzNiNjc4YzhjNTBmYzk4NDRlZGUyMGFhYTIxNGFkMTA", "commit": {"author": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-10-26T02:56:18Z"}, "committer": {"name": "Jakob Degen", "email": "jakob@degen.com", "date": "2021-10-27T02:17:01Z"}, "message": "Make `ui/suggestions/suggest-tryinto-edition-change.rs` no_std to avoid getting inconsistent output between local and CI.", "tree": {"sha": "bbd0e90a7ddff0fff605963320efb6618490d4dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbd0e90a7ddff0fff605963320efb6618490d4dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10", "html_url": "https://github.com/rust-lang/rust/commit/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10/comments", "author": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JakobDegen", "id": 51179609, "node_id": "MDQ6VXNlcjUxMTc5NjA5", "avatar_url": "https://avatars.githubusercontent.com/u/51179609?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JakobDegen", "html_url": "https://github.com/JakobDegen", "followers_url": "https://api.github.com/users/JakobDegen/followers", "following_url": "https://api.github.com/users/JakobDegen/following{/other_user}", "gists_url": "https://api.github.com/users/JakobDegen/gists{/gist_id}", "starred_url": "https://api.github.com/users/JakobDegen/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JakobDegen/subscriptions", "organizations_url": "https://api.github.com/users/JakobDegen/orgs", "repos_url": "https://api.github.com/users/JakobDegen/repos", "events_url": "https://api.github.com/users/JakobDegen/events{/privacy}", "received_events_url": "https://api.github.com/users/JakobDegen/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "958e64594672ccd11fba5ec6925e33ef223301ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/958e64594672ccd11fba5ec6925e33ef223301ee", "html_url": "https://github.com/rust-lang/rust/commit/958e64594672ccd11fba5ec6925e33ef223301ee"}], "stats": {"total": 71, "additions": 30, "deletions": 41}, "files": [{"sha": "e62990144c4c3dd90120daaefc4425306c4f8c33", "filename": "src/test/ui/suggestions/suggest-tryinto-edition-change.rs", "status": "modified", "additions": 11, "deletions": 13, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.rs?ref=6ce3ae4b73b678c8c50fc9844ede20aaa214ad10", "patch": "@@ -2,30 +2,28 @@\n // Edition 2021 change\n // edition:2018\n \n-fn test() {\n-    let _i: i16 = 0_i32.try_into().unwrap();\n+// We mark this no_std to avoid emitting suggestions for both `std` and `core` traits. These were\n+// inconsistently ordered between CI and at least one local build, causing test failures.\n+#![no_std]\n+#![crate_type = \"lib\"]\n+\n+pub fn test() {\n+    let _i: Result<i16, _> = 0_i32.try_into();\n     //~^ ERROR no method named `try_into` found for type `i32` in the current scope\n     //~| NOTE method not found in `i32`\n-    //~| NOTE 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n+    //~| NOTE 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n \n-    let _i: i16 = TryFrom::try_from(0_i32).unwrap();\n+    let _i: Result<i16, _> = TryFrom::try_from(0_i32);\n     //~^ ERROR failed to resolve: use of undeclared type\n     //~| NOTE not found in this scope\n-    //~| NOTE 'std::convert::TryFrom' is included in the prelude starting in Edition 2021\n     //~| NOTE 'core::convert::TryFrom' is included in the prelude starting in Edition 2021\n \n-    let _i: i16 = TryInto::try_into(0_i32).unwrap();\n+    let _i: Result<i16, _> = TryInto::try_into(0_i32);\n     //~^ ERROR failed to resolve: use of undeclared type\n     //~| NOTE not found in this scope\n-    //~| NOTE 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n     //~| NOTE 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n \n-    let _v: Vec<_> = FromIterator::from_iter(&[1]);\n+    let _i: () = FromIterator::from_iter(core::iter::empty());\n     //~^ ERROR failed to resolve: use of undeclared type\n-    //~| NOTE 'std::iter::FromIterator' is included in the prelude starting in Edition 2021\n     //~| NOTE 'core::iter::FromIterator' is included in the prelude starting in Edition 2021\n }\n-\n-fn main() {\n-    test();\n-}"}, {"sha": "e7013063d45243d11702da28a32523c603c82f52", "filename": "src/test/ui/suggestions/suggest-tryinto-edition-change.stderr", "status": "modified", "additions": 19, "deletions": 28, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6ce3ae4b73b678c8c50fc9844ede20aaa214ad10/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-tryinto-edition-change.stderr?ref=6ce3ae4b73b678c8c50fc9844ede20aaa214ad10", "patch": "@@ -1,73 +1,64 @@\n error[E0433]: failed to resolve: use of undeclared type `TryFrom`\n-  --> $DIR/suggest-tryinto-edition-change.rs:11:19\n+  --> $DIR/suggest-tryinto-edition-change.rs:14:30\n    |\n-LL |     let _i: i16 = TryFrom::try_from(0_i32).unwrap();\n-   |                   ^^^^^^^ not found in this scope\n+LL |     let _i: Result<i16, _> = TryFrom::try_from(0_i32);\n+   |                              ^^^^^^^ not found in this scope\n    |\n-   = note: 'std::convert::TryFrom' is included in the prelude starting in Edition 2021\n    = note: 'core::convert::TryFrom' is included in the prelude starting in Edition 2021\n-help: consider importing one of these items\n-   |\n-LL | use std::convert::TryFrom;\n+help: consider importing this trait\n    |\n LL | use core::convert::TryFrom;\n    |\n \n error[E0433]: failed to resolve: use of undeclared type `TryInto`\n-  --> $DIR/suggest-tryinto-edition-change.rs:17:19\n+  --> $DIR/suggest-tryinto-edition-change.rs:19:30\n    |\n-LL |     let _i: i16 = TryInto::try_into(0_i32).unwrap();\n-   |                   ^^^^^^^ not found in this scope\n+LL |     let _i: Result<i16, _> = TryInto::try_into(0_i32);\n+   |                              ^^^^^^^ not found in this scope\n    |\n-   = note: 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n    = note: 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n-help: consider importing one of these items\n-   |\n-LL | use std::convert::TryInto;\n+help: consider importing this trait\n    |\n LL | use core::convert::TryInto;\n    |\n \n error[E0433]: failed to resolve: use of undeclared type `FromIterator`\n-  --> $DIR/suggest-tryinto-edition-change.rs:23:22\n+  --> $DIR/suggest-tryinto-edition-change.rs:24:18\n    |\n-LL |     let _v: Vec<_> = FromIterator::from_iter(&[1]);\n-   |                      ^^^^^^^^^^^^\n+LL |     let _i: () = FromIterator::from_iter(core::iter::empty());\n+   |                  ^^^^^^^^^^^^\n    |\n   ::: $SRC_DIR/core/src/iter/traits/collect.rs:LL:COL\n    |\n LL | pub trait IntoIterator {\n    | ---------------------- similarly named trait `IntoIterator` defined here\n    |\n-   = note: 'std::iter::FromIterator' is included in the prelude starting in Edition 2021\n    = note: 'core::iter::FromIterator' is included in the prelude starting in Edition 2021\n help: a trait with a similar name exists\n    |\n-LL |     let _v: Vec<_> = IntoIterator::from_iter(&[1]);\n-   |                      ~~~~~~~~~~~~\n-help: consider importing one of these items\n-   |\n-LL | use std::iter::FromIterator;\n+LL |     let _i: () = IntoIterator::from_iter(core::iter::empty());\n+   |                  ~~~~~~~~~~~~\n+help: consider importing this trait\n    |\n LL | use core::iter::FromIterator;\n    |\n \n error[E0599]: no method named `try_into` found for type `i32` in the current scope\n-  --> $DIR/suggest-tryinto-edition-change.rs:6:25\n+  --> $DIR/suggest-tryinto-edition-change.rs:9:36\n    |\n-LL |     let _i: i16 = 0_i32.try_into().unwrap();\n-   |                         ^^^^^^^^ method not found in `i32`\n+LL |     let _i: Result<i16, _> = 0_i32.try_into();\n+   |                                    ^^^^^^^^ method not found in `i32`\n    |\n   ::: $SRC_DIR/core/src/convert/mod.rs:LL:COL\n    |\n LL |     fn try_into(self) -> Result<T, Self::Error>;\n    |        -------- the method is available for `i32` here\n    |\n    = help: items from traits can only be used if the trait is in scope\n-   = note: 'std::convert::TryInto' is included in the prelude starting in Edition 2021\n+   = note: 'core::convert::TryInto' is included in the prelude starting in Edition 2021\n help: the following trait is implemented but not in scope; perhaps add a `use` for it:\n    |\n-LL | use std::convert::TryInto;\n+LL | use core::convert::TryInto;\n    |\n \n error: aborting due to 4 previous errors"}]}