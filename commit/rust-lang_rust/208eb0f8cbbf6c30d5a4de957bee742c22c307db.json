{"sha": "208eb0f8cbbf6c30d5a4de957bee742c22c307db", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwOGViMGY4Y2JiZjZjMzBkNWE0ZGU5NTdiZWU3NDJjMjJjMzA3ZGI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-06-30T05:19:32Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-06-30T05:21:37Z"}, "message": "Implement `map_mut` on the Option type\n\nCloses #7394", "tree": {"sha": "e9bc0b5c94eead9a6494fe31579d239e10f69821", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9bc0b5c94eead9a6494fe31579d239e10f69821"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/208eb0f8cbbf6c30d5a4de957bee742c22c307db", "comment_count": 8, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/208eb0f8cbbf6c30d5a4de957bee742c22c307db", "html_url": "https://github.com/rust-lang/rust/commit/208eb0f8cbbf6c30d5a4de957bee742c22c307db", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/208eb0f8cbbf6c30d5a4de957bee742c22c307db/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "439b13f071a4a884ea8645670df83162ffcf129f", "url": "https://api.github.com/repos/rust-lang/rust/commits/439b13f071a4a884ea8645670df83162ffcf129f", "html_url": "https://github.com/rust-lang/rust/commit/439b13f071a4a884ea8645670df83162ffcf129f"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "fb9962f8a44ec7a5f6d4bb4a5c23226abae3d408", "filename": "src/libstd/option.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/208eb0f8cbbf6c30d5a4de957bee742c22c307db/src%2Flibstd%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/208eb0f8cbbf6c30d5a4de957bee742c22c307db/src%2Flibstd%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foption.rs?ref=208eb0f8cbbf6c30d5a4de957bee742c22c307db", "patch": "@@ -161,7 +161,7 @@ impl<T> Option<T> {\n \n     /// Filters an optional value using given function.\n     #[inline(always)]\n-    pub fn filtered<'a>(self, f: &fn(t: &'a T) -> bool) -> Option<T> {\n+    pub fn filtered(self, f: &fn(t: &T) -> bool) -> Option<T> {\n         match self {\n             Some(x) => if(f(&x)) {Some(x)} else {None},\n             None => None\n@@ -170,10 +170,16 @@ impl<T> Option<T> {\n \n     /// Maps a `some` value from one type to another by reference\n     #[inline]\n-    pub fn map<'a, U>(&self, f: &fn(&'a T) -> U) -> Option<U> {\n+    pub fn map<'a, U>(&'a self, f: &fn(&'a T) -> U) -> Option<U> {\n         match *self { Some(ref x) => Some(f(x)), None => None }\n     }\n \n+    /// Maps a `some` value from one type to another by a mutable reference\n+    #[inline]\n+    pub fn map_mut<'a, U>(&'a mut self, f: &fn(&'a mut T) -> U) -> Option<U> {\n+        match *self { Some(ref mut x) => Some(f(x)), None => None }\n+    }\n+\n     /// As `map`, but consumes the option and gives `f` ownership to avoid\n     /// copying.\n     #[inline]"}]}