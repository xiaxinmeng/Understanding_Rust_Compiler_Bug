{"sha": "eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMzY4ZDFiMzQ2YTBjZDZhOWRiM2ZjMzNjZTNiNTYzZjY4YTVkODQ=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-08-18T22:49:58Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-08-18T22:49:58Z"}, "message": "Remove rc_base. Closes #603.", "tree": {"sha": "b46e9ec78ebfe42a798b91d800909d275fabf01b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b46e9ec78ebfe42a798b91d800909d275fabf01b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "html_url": "https://github.com/rust-lang/rust/commit/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28fbc591fdfa65494412c37829c063dfcc98d648", "url": "https://api.github.com/repos/rust-lang/rust/commits/28fbc591fdfa65494412c37829c063dfcc98d648", "html_url": "https://github.com/rust-lang/rust/commit/28fbc591fdfa65494412c37829c063dfcc98d648"}], "stats": {"total": 36, "additions": 10, "deletions": 26}, "files": [{"sha": "486e985f61475f26e65e3b63bfffce0a656f34dc", "filename": "src/rt/rust_internal.h", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_internal.h", "raw_url": "https://github.com/rust-lang/rust/raw/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_internal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_internal.h?ref=eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "patch": "@@ -106,9 +106,8 @@ static intptr_t const CONST_REFCOUNT = 0x7badface;\n \n static size_t const BUF_BYTES = 2048;\n \n-// Every reference counted object should derive from this base class.\n-// Or use this macro. The macro is preferred as the base class will be\n-// disappearing.\n+// Every reference counted object should use this macro and initialize\n+// ref_count.\n \n #define RUST_REFCOUNTED(T) \\\n   RUST_REFCOUNTED_WITH_DTOR(T, delete (T*)this)\n@@ -127,13 +126,6 @@ public:                                                                 \\\n  }                                                                      \\\n  void deref() { if(0 == sync::decrement(ref_count)) { delete this; } }\n \n-template <typename T> struct rc_base {\n-    RUST_REFCOUNTED(T)\n-\n-    rc_base();\n-    ~rc_base();\n-};\n-\n template <typename T> struct task_owned {\n     inline void *operator new(size_t size, rust_task *task, const char *tag);\n "}, {"sha": "5595ca51a55cc160291b6b1c48a83ca9cae51230", "filename": "src/rt/rust_scheduler.cpp", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_scheduler.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_scheduler.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.cpp?ref=eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "patch": "@@ -6,6 +6,7 @@\n rust_scheduler::rust_scheduler(rust_kernel *kernel,\n                                rust_srv *srv,\n                                int id) :\n+    ref_count(1),\n     interrupt_flag(0),\n     _log(srv, this),\n     log_lvl(log_note),"}, {"sha": "6969034f725e2b30bc10adf3b66cb641f4a49056", "filename": "src/rt/rust_scheduler.h", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_scheduler.h", "raw_url": "https://github.com/rust-lang/rust/raw/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_scheduler.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_scheduler.h?ref=eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "patch": "@@ -27,9 +27,10 @@ rust_crate_cache\n };\n \n struct rust_scheduler : public kernel_owned<rust_scheduler>,\n-                        rc_base<rust_scheduler>,\n                         rust_thread\n {\n+    RUST_REFCOUNTED(rust_scheduler)\n+\n     // Fields known to the compiler:\n     uintptr_t interrupt_flag;\n "}, {"sha": "aab3e15e4641e167e7817b49857949afdceb79a9", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 5, "deletions": 15, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=eb368d1b346a0cd6a9db3fc33ce3b563f68a5d84", "patch": "@@ -4,19 +4,6 @@\n #include \"rust_task.h\"\n #include <limits.h>\n \n-// Reference counted objects\n-\n-template <typename T>\n-rc_base<T>::rc_base() :\n-    ref_count(1)\n-{\n-}\n-\n-template <typename T>\n-rc_base<T>::~rc_base()\n-{\n-}\n-\n // Utility type: pointer-vector.\n \n template <typename T>\n@@ -181,15 +168,18 @@ isaac_init(sched_or_kernel *sched, randctx *rctx)\n // Vectors (rust-user-code level).\n \n struct\n-rust_evec : public rc_base<rust_evec>\n+rust_evec\n {\n+    RUST_REFCOUNTED(rust_evec)\n+\n     size_t alloc;\n     size_t fill;\n     size_t pad; // Pad to align data[0] to 16 bytes.\n     uint8_t data[];\n     rust_evec(size_t alloc, size_t fill,\n              uint8_t const *d)\n-        : alloc(alloc),\n+        : ref_count(1),\n+          alloc(alloc),\n           fill(fill)\n     {\n         if (d)"}]}