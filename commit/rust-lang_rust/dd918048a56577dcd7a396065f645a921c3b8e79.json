{"sha": "dd918048a56577dcd7a396065f645a921c3b8e79", "node_id": "C_kwDOAAsO6NoAKGRkOTE4MDQ4YTU2NTc3ZGNkN2EzOTYwNjVmNjQ1YTkyMWMzYjhlNzk", "commit": {"author": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-09-24T16:26:24Z"}, "committer": {"name": "Wesley Wiser", "email": "wesleywiser@microsoft.com", "date": "2021-09-24T16:27:42Z"}, "message": "Update and add more tests", "tree": {"sha": "175a6cd5485b72141040b5e06ade5dfe958e55c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/175a6cd5485b72141040b5e06ade5dfe958e55c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd918048a56577dcd7a396065f645a921c3b8e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd918048a56577dcd7a396065f645a921c3b8e79", "html_url": "https://github.com/rust-lang/rust/commit/dd918048a56577dcd7a396065f645a921c3b8e79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd918048a56577dcd7a396065f645a921c3b8e79/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "389365631d3e6d2f533f896635e7768f26359575", "url": "https://api.github.com/repos/rust-lang/rust/commits/389365631d3e6d2f533f896635e7768f26359575", "html_url": "https://github.com/rust-lang/rust/commit/389365631d3e6d2f533f896635e7768f26359575"}], "stats": {"total": 183, "additions": 118, "deletions": 65}, "files": [{"sha": "2f8cddc06bab1caaed63d326b00ec5ccfa0cf0a4", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.rs", "status": "modified", "additions": 33, "deletions": 30, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.rs?ref=dd918048a56577dcd7a396065f645a921c3b8e79", "patch": "@@ -3,6 +3,9 @@\n // Tests that in cases where we individually capture all the fields of a type,\n // we still drop them in the order they would have been dropped in the 2018 edition.\n \n+// NOTE: It is *critical* that the order of the min capture NOTES in the stderr output\n+//       does *not* change!\n+\n #![feature(rustc_attrs)]\n \n #[derive(Debug)]\n@@ -21,21 +24,21 @@ fn test_one() {\n     //~^ ERROR: attributes on expressions are experimental\n     //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n-        //~^ ERROR: First Pass analysis includes:\n-        //~| ERROR: Min Capture analysis includes:\n+        //~^ ERROR: Min Capture analysis includes:\n+        //~| ERROR\n         println!(\"{:?}\", a.0);\n-        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        //~| NOTE\n         println!(\"{:?}\", a.1);\n-        //~^ NOTE: Capturing a[(1, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        //~| NOTE\n \n         println!(\"{:?}\", b.0);\n-        //~^ NOTE: Capturing b[(0, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        //~| NOTE\n         println!(\"{:?}\", b.1);\n-        //~^ NOTE: Capturing b[(1, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        //~| NOTE\n     };\n }\n \n@@ -47,21 +50,21 @@ fn test_two() {\n     //~^ ERROR: attributes on expressions are experimental\n     //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n-        //~^ ERROR: First Pass analysis includes:\n-        //~| ERROR: Min Capture analysis includes:\n+        //~^ ERROR: Min Capture analysis includes:\n+        //~| ERROR\n         println!(\"{:?}\", a.1);\n-        //~^ NOTE: Capturing a[(1, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        //~| NOTE\n         println!(\"{:?}\", a.0);\n-        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        //~| NOTE\n \n         println!(\"{:?}\", b.1);\n-        //~^ NOTE: Capturing b[(1, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        //~| NOTE\n         println!(\"{:?}\", b.0);\n-        //~^ NOTE: Capturing b[(0, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        //~| NOTE\n     };\n }\n \n@@ -73,21 +76,21 @@ fn test_three() {\n     //~^ ERROR: attributes on expressions are experimental\n     //~| NOTE: see issue #15701 <https://github.com/rust-lang/rust/issues/15701>\n     || {\n-        //~^ ERROR: First Pass analysis includes:\n-        //~| ERROR: Min Capture analysis includes:\n+        //~^ ERROR: Min Capture analysis includes:\n+        //~| ERROR\n         println!(\"{:?}\", b.1);\n-        //~^ NOTE: Capturing b[(1, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture b[(1, 0)] -> ImmBorrow\n+        //~| NOTE\n         println!(\"{:?}\", a.1);\n-        //~^ NOTE: Capturing a[(1, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture a[(1, 0)] -> ImmBorrow\n+        //~| NOTE\n         println!(\"{:?}\", a.0);\n-        //~^ NOTE: Capturing a[(0, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture a[(0, 0)] -> ImmBorrow\n+        //~| NOTE\n \n         println!(\"{:?}\", b.0);\n-        //~^ NOTE: Capturing b[(0, 0)] -> ImmBorrow\n-        //~| NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        //~^ NOTE: Min Capture b[(0, 0)] -> ImmBorrow\n+        //~| NOTE\n     };\n }\n "}, {"sha": "2d1dc8727c255fdd40007451281f15494120f380", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order.stderr", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order.stderr?ref=dd918048a56577dcd7a396065f645a921c3b8e79", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: attributes on expressions are experimental\n-  --> $DIR/preserve_field_drop_order.rs:20:13\n+  --> $DIR/preserve_field_drop_order.rs:23:13\n    |\n LL |     let c = #[rustc_capture_analysis]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL |     let c = #[rustc_capture_analysis]\n    = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n-  --> $DIR/preserve_field_drop_order.rs:46:13\n+  --> $DIR/preserve_field_drop_order.rs:49:13\n    |\n LL |     let c = #[rustc_capture_analysis]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -17,7 +17,7 @@ LL |     let c = #[rustc_capture_analysis]\n    = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error[E0658]: attributes on expressions are experimental\n-  --> $DIR/preserve_field_drop_order.rs:72:13\n+  --> $DIR/preserve_field_drop_order.rs:75:13\n    |\n LL |     let c = #[rustc_capture_analysis]\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL |     let c = #[rustc_capture_analysis]\n    = help: add `#![feature(stmt_expr_attributes)]` to the crate attributes to enable\n \n error: First Pass analysis includes:\n-  --> $DIR/preserve_field_drop_order.rs:23:5\n+  --> $DIR/preserve_field_drop_order.rs:26:5\n    |\n LL | /     || {\n LL | |\n@@ -38,28 +38,28 @@ LL | |     };\n    | |_____^\n    |\n note: Capturing a[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:26:26\n+  --> $DIR/preserve_field_drop_order.rs:29:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n note: Capturing a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:29:26\n+  --> $DIR/preserve_field_drop_order.rs:32:26\n    |\n LL |         println!(\"{:?}\", a.1);\n    |                          ^^^\n note: Capturing b[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:33:26\n+  --> $DIR/preserve_field_drop_order.rs:36:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n note: Capturing b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:36:26\n+  --> $DIR/preserve_field_drop_order.rs:39:26\n    |\n LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n \n error: Min Capture analysis includes:\n-  --> $DIR/preserve_field_drop_order.rs:23:5\n+  --> $DIR/preserve_field_drop_order.rs:26:5\n    |\n LL | /     || {\n LL | |\n@@ -71,28 +71,28 @@ LL | |     };\n    | |_____^\n    |\n note: Min Capture a[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:26:26\n+  --> $DIR/preserve_field_drop_order.rs:29:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n note: Min Capture a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:29:26\n+  --> $DIR/preserve_field_drop_order.rs:32:26\n    |\n LL |         println!(\"{:?}\", a.1);\n    |                          ^^^\n note: Min Capture b[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:33:26\n+  --> $DIR/preserve_field_drop_order.rs:36:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n note: Min Capture b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:36:26\n+  --> $DIR/preserve_field_drop_order.rs:39:26\n    |\n LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n \n error: First Pass analysis includes:\n-  --> $DIR/preserve_field_drop_order.rs:49:5\n+  --> $DIR/preserve_field_drop_order.rs:52:5\n    |\n LL | /     || {\n LL | |\n@@ -104,28 +104,28 @@ LL | |     };\n    | |_____^\n    |\n note: Capturing a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:52:26\n+  --> $DIR/preserve_field_drop_order.rs:55:26\n    |\n LL |         println!(\"{:?}\", a.1);\n    |                          ^^^\n note: Capturing a[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:55:26\n+  --> $DIR/preserve_field_drop_order.rs:58:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n note: Capturing b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:59:26\n+  --> $DIR/preserve_field_drop_order.rs:62:26\n    |\n LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n note: Capturing b[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:62:26\n+  --> $DIR/preserve_field_drop_order.rs:65:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n \n error: Min Capture analysis includes:\n-  --> $DIR/preserve_field_drop_order.rs:49:5\n+  --> $DIR/preserve_field_drop_order.rs:52:5\n    |\n LL | /     || {\n LL | |\n@@ -137,28 +137,28 @@ LL | |     };\n    | |_____^\n    |\n note: Min Capture a[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:55:26\n+  --> $DIR/preserve_field_drop_order.rs:58:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n note: Min Capture a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:52:26\n+  --> $DIR/preserve_field_drop_order.rs:55:26\n    |\n LL |         println!(\"{:?}\", a.1);\n    |                          ^^^\n note: Min Capture b[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:62:26\n+  --> $DIR/preserve_field_drop_order.rs:65:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n note: Min Capture b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:59:26\n+  --> $DIR/preserve_field_drop_order.rs:62:26\n    |\n LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n \n error: First Pass analysis includes:\n-  --> $DIR/preserve_field_drop_order.rs:75:5\n+  --> $DIR/preserve_field_drop_order.rs:78:5\n    |\n LL | /     || {\n LL | |\n@@ -170,28 +170,28 @@ LL | |     };\n    | |_____^\n    |\n note: Capturing b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:78:26\n+  --> $DIR/preserve_field_drop_order.rs:81:26\n    |\n LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n note: Capturing a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:81:26\n+  --> $DIR/preserve_field_drop_order.rs:84:26\n    |\n LL |         println!(\"{:?}\", a.1);\n    |                          ^^^\n note: Capturing a[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:84:26\n+  --> $DIR/preserve_field_drop_order.rs:87:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n note: Capturing b[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:88:26\n+  --> $DIR/preserve_field_drop_order.rs:91:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n \n error: Min Capture analysis includes:\n-  --> $DIR/preserve_field_drop_order.rs:75:5\n+  --> $DIR/preserve_field_drop_order.rs:78:5\n    |\n LL | /     || {\n LL | |\n@@ -203,22 +203,22 @@ LL | |     };\n    | |_____^\n    |\n note: Min Capture b[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:88:26\n+  --> $DIR/preserve_field_drop_order.rs:91:26\n    |\n LL |         println!(\"{:?}\", b.0);\n    |                          ^^^\n note: Min Capture b[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:78:26\n+  --> $DIR/preserve_field_drop_order.rs:81:26\n    |\n LL |         println!(\"{:?}\", b.1);\n    |                          ^^^\n note: Min Capture a[(0, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:84:26\n+  --> $DIR/preserve_field_drop_order.rs:87:26\n    |\n LL |         println!(\"{:?}\", a.0);\n    |                          ^^^\n note: Min Capture a[(1, 0)] -> ImmBorrow\n-  --> $DIR/preserve_field_drop_order.rs:81:26\n+  --> $DIR/preserve_field_drop_order.rs:84:26\n    |\n LL |         println!(\"{:?}\", a.1);\n    |                          ^^^"}, {"sha": "1cae776dd68bc0dab3b0ac28567394552e05af59", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.rs", "status": "modified", "additions": 32, "deletions": 2, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.rs?ref=dd918048a56577dcd7a396065f645a921c3b8e79", "patch": "@@ -5,7 +5,7 @@\n // [twenty_twentyone]compile-flags: --edition 2021\n \n #[derive(Debug)]\n-struct Dropable(String);\n+struct Dropable(&'static str);\n \n impl Drop for Dropable {\n     fn drop(&mut self) {\n@@ -19,10 +19,40 @@ struct A {\n     y: Dropable,\n }\n \n+#[derive(Debug)]\n+struct B {\n+    c: A,\n+    d: A,\n+}\n+\n+#[derive(Debug)]\n+struct R<'a> {\n+    c: &'a A,\n+    d: &'a A,\n+}\n+\n fn main() {\n-    let a = A { x: Dropable(format!(\"x\")), y: Dropable(format!(\"y\")) };\n+    let a = A { x: Dropable(\"x\"), y: Dropable(\"y\") };\n \n     let c = move || println!(\"{:?} {:?}\", a.y, a.x);\n \n     c();\n+\n+    let b = B {\n+        c: A { x: Dropable(\"b.c.x\"), y: Dropable(\"b.c.y\") },\n+        d: A { x: Dropable(\"b.d.x\"), y: Dropable(\"b.d.y\") },\n+    };\n+\n+    let d = move || println!(\"{:?} {:?} {:?} {:?}\", b.d.y, b.d.x, b.c.y, b.c.x);\n+\n+    d();\n+\n+        let r = R {\n+        c: &A { x: Dropable(\"r.c.x\"), y: Dropable(\"r.c.y\") },\n+        d: &A { x: Dropable(\"r.d.x\"), y: Dropable(\"r.d.y\") },\n+    };\n+\n+    let e = move || println!(\"{:?} {:?} {:?} {:?}\", r.d.y, r.d.x, r.c.y, r.c.x);\n+\n+    e();\n }"}, {"sha": "557d047c1d52431109af4bb2240c127cc083ceae", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.twenty_eighteen.run.stdout", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_eighteen.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_eighteen.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_eighteen.run.stdout?ref=dd918048a56577dcd7a396065f645a921c3b8e79", "patch": "@@ -1,3 +1,13 @@\n Dropable(\"y\") Dropable(\"x\")\n+Dropable(\"b.d.y\") Dropable(\"b.d.x\") Dropable(\"b.c.y\") Dropable(\"b.c.x\")\n+Dropable(\"r.d.y\") Dropable(\"r.d.x\") Dropable(\"r.c.y\") Dropable(\"r.c.x\")\n+Dropping r.d.x\n+Dropping r.d.y\n+Dropping r.c.x\n+Dropping r.c.y\n+Dropping b.c.x\n+Dropping b.c.y\n+Dropping b.d.x\n+Dropping b.d.y\n Dropping x\n Dropping y"}, {"sha": "557d047c1d52431109af4bb2240c127cc083ceae", "filename": "src/test/ui/closures/2229_closure_analysis/preserve_field_drop_order2.twenty_twentyone.run.stdout", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/dd918048a56577dcd7a396065f645a921c3b8e79/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2F2229_closure_analysis%2Fpreserve_field_drop_order2.twenty_twentyone.run.stdout?ref=dd918048a56577dcd7a396065f645a921c3b8e79", "patch": "@@ -1,3 +1,13 @@\n Dropable(\"y\") Dropable(\"x\")\n+Dropable(\"b.d.y\") Dropable(\"b.d.x\") Dropable(\"b.c.y\") Dropable(\"b.c.x\")\n+Dropable(\"r.d.y\") Dropable(\"r.d.x\") Dropable(\"r.c.y\") Dropable(\"r.c.x\")\n+Dropping r.d.x\n+Dropping r.d.y\n+Dropping r.c.x\n+Dropping r.c.y\n+Dropping b.c.x\n+Dropping b.c.y\n+Dropping b.d.x\n+Dropping b.d.y\n Dropping x\n Dropping y"}]}