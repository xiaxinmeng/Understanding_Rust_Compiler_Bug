{"sha": "ea5a1843833a4c7720d3becfe79853a32f8de60b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVhNWExODQzODMzYTRjNzcyMGQzYmVjZmU3OTg1M2EzMmY4ZGU2MGI=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-18T20:48:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-18T20:48:25Z"}, "message": "Rollup merge of #65496 - tspiteri:euc-div-panic, r=KodrAus\n\nproperly document panics in div_euclid and rem_euclid\n\nFor signed numbers, document that `div_euclid` and `rem_euclid` panic not just when `rhs` is 0, but also when the division overflows.\n\nFor unsigned numbers, document that `div_euclid` and `rem_euclid` panic when `rhs` is 0.", "tree": {"sha": "a2ff18503fd9d58c776144da6c49225a6406466c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a2ff18503fd9d58c776144da6c49225a6406466c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ea5a1843833a4c7720d3becfe79853a32f8de60b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdqiUZCRBK7hj4Ov3rIwAAdHIIADjEWvjH7QXPm0uEcJ0/dZRX\nkhwwxAI+LYKl6oSUZNL4g1I+rnfUKTqNQRGu9CP6znvGhI74FlgVFx2CEW5m/HfZ\nkFbrz6JcKF6trXvG0pbrwO4BdOR5ulOVa/7suyRAzQR0VlvdWHdg8rU5SuXo9AzG\nLKxvkyf+rxV15clnxP99D8KQOftuB7RHh1x6TLLCrEpONz96PCv3DuRDhISBnvqI\neYNcbOQM6FjgnDp9YG7xJGsnKAToq2HktdiVknMYqlFPTZ8Xu8FedZUSoLZCTCSM\n0W+Atp9xWhXc6N46PDy0RZblia0E4K34FwwFo1hWEMHVtImI7OlVjDfUaK3nibM=\n=lrqu\n-----END PGP SIGNATURE-----\n", "payload": "tree a2ff18503fd9d58c776144da6c49225a6406466c\nparent e27e39b7b20c4e4962a5ba0ab94dc68c6a3ed30c\nparent 83e97c6ac1b722c1b55fdf9d6378f87d9e0cdbdd\nauthor Tyler Mandry <tmandry@gmail.com> 1571431705 -0700\ncommitter GitHub <noreply@github.com> 1571431705 -0700\n\nRollup merge of #65496 - tspiteri:euc-div-panic, r=KodrAus\n\nproperly document panics in div_euclid and rem_euclid\n\nFor signed numbers, document that `div_euclid` and `rem_euclid` panic not just when `rhs` is 0, but also when the division overflows.\n\nFor unsigned numbers, document that `div_euclid` and `rem_euclid` panic when `rhs` is 0.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5a1843833a4c7720d3becfe79853a32f8de60b", "html_url": "https://github.com/rust-lang/rust/commit/ea5a1843833a4c7720d3becfe79853a32f8de60b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ea5a1843833a4c7720d3becfe79853a32f8de60b/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e27e39b7b20c4e4962a5ba0ab94dc68c6a3ed30c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e27e39b7b20c4e4962a5ba0ab94dc68c6a3ed30c", "html_url": "https://github.com/rust-lang/rust/commit/e27e39b7b20c4e4962a5ba0ab94dc68c6a3ed30c"}, {"sha": "83e97c6ac1b722c1b55fdf9d6378f87d9e0cdbdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/83e97c6ac1b722c1b55fdf9d6378f87d9e0cdbdd", "html_url": "https://github.com/rust-lang/rust/commit/83e97c6ac1b722c1b55fdf9d6378f87d9e0cdbdd"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "8f4ade377e312c013b384f2134c3876e50560501", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ea5a1843833a4c7720d3becfe79853a32f8de60b/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ea5a1843833a4c7720d3becfe79853a32f8de60b/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=ea5a1843833a4c7720d3becfe79853a32f8de60b", "patch": "@@ -1864,7 +1864,7 @@ if `self < 0`, this is equal to round towards +/- infinity.\n \n # Panics\n \n-This function will panic if `rhs` is 0.\n+This function will panic if `rhs` is 0 or the division results in overflow.\n \n # Examples\n \n@@ -1903,7 +1903,7 @@ This is done as if by the Euclidean division algorithm -- given\n \n # Panics\n \n-This function will panic if `rhs` is 0.\n+This function will panic if `rhs` is 0 or the division results in overflow.\n \n # Examples\n \n@@ -3694,6 +3694,10 @@ Since, for the positive integers, all common\n definitions of division are equal, this\n is exactly equal to `self / rhs`.\n \n+# Panics\n+\n+This function will panic if `rhs` is 0.\n+\n # Examples\n \n Basic usage:\n@@ -3719,6 +3723,10 @@ Since, for the positive integers, all common\n definitions of division are equal, this\n is exactly equal to `self % rhs`.\n \n+# Panics\n+\n+This function will panic if `rhs` is 0.\n+\n # Examples\n \n Basic usage:"}]}