{"sha": "7bf66d97b63d90debd914d1aab1b71940edcfb0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZjY2ZDk3YjYzZDkwZGViZDkxNGQxYWFiMWI3MTk0MGVkY2ZiMGU=", "commit": {"author": {"name": "Peter", "email": "peter.wilkins@polecat.com", "date": "2019-11-10T17:28:45Z"}, "committer": {"name": "Peter", "email": "peter.wilkins@polecat.com", "date": "2019-11-10T17:28:45Z"}, "message": "From<NonZero*> impls for wider NonZero types\n\nissue: https://github.com/rust-lang/rust/issues/66196", "tree": {"sha": "94dca5e5bbbd6a62e423401f5a8750ae373aaae3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/94dca5e5bbbd6a62e423401f5a8750ae373aaae3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bf66d97b63d90debd914d1aab1b71940edcfb0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf66d97b63d90debd914d1aab1b71940edcfb0e", "html_url": "https://github.com/rust-lang/rust/commit/7bf66d97b63d90debd914d1aab1b71940edcfb0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bf66d97b63d90debd914d1aab1b71940edcfb0e/comments", "author": null, "committer": null, "parents": [{"sha": "86c28325ff813e5cf4d0cab320a7c9f6fb0766b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/86c28325ff813e5cf4d0cab320a7c9f6fb0766b8", "html_url": "https://github.com/rust-lang/rust/commit/86c28325ff813e5cf4d0cab320a7c9f6fb0766b8"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "1a8c066173b4df9786168928bb2953eb52cbb2ac", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/7bf66d97b63d90debd914d1aab1b71940edcfb0e/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf66d97b63d90debd914d1aab1b71940edcfb0e/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=7bf66d97b63d90debd914d1aab1b71940edcfb0e", "patch": "@@ -5250,3 +5250,73 @@ impl_from! { u32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\"\n \n // Float -> Float\n impl_from! { f32, f64, #[stable(feature = \"lossless_float_conv\", since = \"1.6.0\")] }\n+\n+// Conversion traits for non-zero integer types\n+macro_rules! nzint_impl_from {\n+    ($Small: ty, $Large: ty, #[$attr:meta], $doc: expr) => {\n+        #[$attr]\n+        #[doc = $doc]\n+        impl From<$Small> for $Large {\n+            /// Widens a non-zero integer without checking the value is zero.\n+            ///\n+            /// # Safety\n+            ///\n+            /// The value is assumed to be non-zero.\n+            #[inline]\n+            fn from(small: $Small) -> $Large {\n+                unsafe {\n+                    <$Large>::new_unchecked(small.get().into())\n+                }\n+            }\n+        }\n+    };\n+    ($Small: ty, $Large: ty, #[$attr:meta]) => {\n+        nzint_impl_from!($Small,\n+                   $Large,\n+                   #[$attr],\n+                   concat!(\"Converts `\",\n+                           stringify!($Small),\n+                           \"` to `\",\n+                           stringify!($Large),\n+                           \"` losslessly.\"));\n+    }\n+}\n+\n+// Non-zero Unsigned -> Non-zero Unsigned\n+nzint_impl_from! { NonZeroU8, NonZeroU16, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroU32, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroU64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroU128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroUsize, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU16, NonZeroU32, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU16, NonZeroU64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU16, NonZeroU128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU32, NonZeroU64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU32, NonZeroU128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU64, NonZeroU128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+\n+// Non-zero Signed -> Non-zero Signed\n+nzint_impl_from! { NonZeroI8, NonZeroI16, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI8, NonZeroI32, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI8, NonZeroI64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI8, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI8, NonZeroIsize, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI16, NonZeroI32, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI16, NonZeroI64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI16, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI32, NonZeroI64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI32, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroI64, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+\n+// NonZero UnSigned -> Non-zero Signed\n+nzint_impl_from! { NonZeroU8, NonZeroI16, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroI32, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroI64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU8, NonZeroIsize, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU16, NonZeroI32, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU16, NonZeroI64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU16, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU32, NonZeroI64, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU32, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }\n+nzint_impl_from! { NonZeroU64, NonZeroI128, #[unstable(feature = \"lossless_non_zero_int_conv\", issue = \"66196\")] }"}]}