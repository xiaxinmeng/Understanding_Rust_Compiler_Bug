{"sha": "f63a7f598a0796b979ec3b626673168e5faa7f3f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2M2E3ZjU5OGEwNzk2Yjk3OWVjM2I2MjY2NzMxNjhlNWZhYTdmM2Y=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-16T13:51:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-16T13:51:44Z"}, "message": "auto merge of #11596 : derekchiang/rust/fix-libnative-docs, r=alexcrichton", "tree": {"sha": "5affe489b73d30ccbc8f39ab957411d9a26a916d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5affe489b73d30ccbc8f39ab957411d9a26a916d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f63a7f598a0796b979ec3b626673168e5faa7f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f63a7f598a0796b979ec3b626673168e5faa7f3f", "html_url": "https://github.com/rust-lang/rust/commit/f63a7f598a0796b979ec3b626673168e5faa7f3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f63a7f598a0796b979ec3b626673168e5faa7f3f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6a27424adba041d64d29c4339edc5015536f285", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a27424adba041d64d29c4339edc5015536f285", "html_url": "https://github.com/rust-lang/rust/commit/e6a27424adba041d64d29c4339edc5015536f285"}, {"sha": "f98f76e3a75b4d75d809601ce1d6fa62d3eca428", "url": "https://api.github.com/repos/rust-lang/rust/commits/f98f76e3a75b4d75d809601ce1d6fa62d3eca428", "html_url": "https://github.com/rust-lang/rust/commit/f98f76e3a75b4d75d809601ce1d6fa62d3eca428"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "6c5f555f40194289c372def16cf37da7b4e7ed0a", "filename": "src/libnative/bookkeeping.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f63a7f598a0796b979ec3b626673168e5faa7f3f/src%2Flibnative%2Fbookkeeping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63a7f598a0796b979ec3b626673168e5faa7f3f/src%2Flibnative%2Fbookkeeping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fbookkeeping.rs?ref=f63a7f598a0796b979ec3b626673168e5faa7f3f", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -8,13 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-//! 1:1 Task bookeeping\n+//! 1:1 Task bookkeeping\n //!\n //! This module keeps track of the number of running 1:1 tasks so that entry\n //! points with libnative know when it's possible to exit the program (once all\n //! tasks have exited).\n //!\n-//! The green counterpart for this is bookeeping on sched pools.\n+//! The green counterpart for this is bookkeeping on sched pools.\n \n use std::sync::atomics;\n use std::unstable::mutex::{Mutex, MUTEX_INIT};", "previous_filename": "src/libnative/bookeeping.rs"}, {"sha": "f69ad8fc1aa7ff111883d61379d3277541bcd4c3", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f63a7f598a0796b979ec3b626673168e5faa7f3f/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63a7f598a0796b979ec3b626673168e5faa7f3f/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=f63a7f598a0796b979ec3b626673168e5faa7f3f", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -29,7 +29,7 @@\n use std::os;\n use std::rt;\n \n-mod bookeeping;\n+mod bookkeeping;\n pub mod io;\n pub mod task;\n \n@@ -75,6 +75,6 @@ pub fn start(argc: int, argv: **u8, main: proc()) -> int {\n /// number of arguments.\n pub fn run(main: proc()) -> int {\n     main();\n-    bookeeping::wait_for_other_tasks();\n+    bookkeeping::wait_for_other_tasks();\n     os::get_exit_status()\n }"}, {"sha": "d2f68c4ef681dd0b56ad9690921b6494135b7029", "filename": "src/libnative/task.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f63a7f598a0796b979ec3b626673168e5faa7f3f/src%2Flibnative%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f63a7f598a0796b979ec3b626673168e5faa7f3f/src%2Flibnative%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Ftask.rs?ref=f63a7f598a0796b979ec3b626673168e5faa7f3f", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2013-2014 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -27,7 +27,7 @@ use std::unstable::stack;\n \n use io;\n use task;\n-use bookeeping;\n+use bookkeeping;\n \n /// Creates a new Task which is ready to execute as a 1:1 task.\n pub fn new(stack_bounds: (uint, uint)) -> ~Task {\n@@ -82,7 +82,7 @@ pub fn spawn_opts(opts: TaskOpts, f: proc()) {\n     // Note that this increment must happen *before* the spawn in order to\n     // guarantee that if this task exits it will always end up waiting for the\n     // spawned task to exit.\n-    bookeeping::increment();\n+    bookkeeping::increment();\n \n     // Spawning a new OS thread guarantees that __morestack will never get\n     // triggered, but we must manually set up the actual stack bounds once this\n@@ -104,7 +104,7 @@ pub fn spawn_opts(opts: TaskOpts, f: proc()) {\n         let mut task = task;\n         task.put_runtime(ops as ~rt::Runtime);\n         task.run(|| { f.take_unwrap()() });\n-        bookeeping::decrement();\n+        bookkeeping::decrement();\n     })\n }\n "}]}