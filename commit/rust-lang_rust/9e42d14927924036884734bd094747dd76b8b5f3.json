{"sha": "9e42d14927924036884734bd094747dd76b8b5f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllNDJkMTQ5Mjc5MjQwMzY4ODQ3MzRiZDA5NDc0N2RkNzZiOGI1ZjM=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-12-03T02:56:13Z"}, "committer": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2021-01-20T15:41:55Z"}, "message": "Add Vec visualization to understand capacity\n\nVisualize vector while differentiating between stack and heap.\n\nInspired by cheats.rs, as this is probably the first place beginner go,\nthey could understand stack and heap, length and capacity with this. Not\nsure if adding this means we should add to other places too.\n\nSuperseeds #76066", "tree": {"sha": "b940986224f680bba0441c750b9b57d39abe4443", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b940986224f680bba0441c750b9b57d39abe4443"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e42d14927924036884734bd094747dd76b8b5f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e42d14927924036884734bd094747dd76b8b5f3", "html_url": "https://github.com/rust-lang/rust/commit/9e42d14927924036884734bd094747dd76b8b5f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e42d14927924036884734bd094747dd76b8b5f3/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a4cbb44ae2c80545db957763b502dc7f6ea22085", "url": "https://api.github.com/repos/rust-lang/rust/commits/a4cbb44ae2c80545db957763b502dc7f6ea22085", "html_url": "https://github.com/rust-lang/rust/commit/a4cbb44ae2c80545db957763b502dc7f6ea22085"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "88cdf588e3566cb569b0777afd90954f12f151d3", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/9e42d14927924036884734bd094747dd76b8b5f3/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e42d14927924036884734bd094747dd76b8b5f3/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=9e42d14927924036884734bd094747dd76b8b5f3", "patch": "@@ -253,6 +253,26 @@ mod spec_extend;\n /// can be slow. For this reason, it is recommended to use [`Vec::with_capacity`]\n /// whenever possible to specify how big the vector is expected to get.\n ///\n+/// A vector containing the elements `'a'` and `'b'` with capacity 4 can be\n+/// visualized as:\n+///\n+/// ```text\n+/// Stack       ptr      len  capacity\n+/// /Heap  +--------+--------+--------+\n+///        | 0x0123 |      2 |      4 |\n+///        +--------+--------+--------+\n+///             |\n+///             v\n+/// Heap   +--------+--------+--------+--------+\n+///        |    'a' |    'b' | uninit | uninit |\n+///        +--------+--------+--------+--------+\n+/// ```\n+///\n+/// - **uninit** represents memory that is not initialized, see [`MaybeUninit`].\n+/// - Note: the ABI is not stable and `Vec` makes no guarantees about its memory \n+///   layout (including the order of fields). See [the section about \n+///   guarantees](#guarantees).\n+///\n /// # Guarantees\n ///\n /// Due to its incredibly fundamental nature, `Vec` makes a lot of guarantees\n@@ -345,6 +365,7 @@ mod spec_extend;\n /// [`push`]: Vec::push\n /// [`insert`]: Vec::insert\n /// [`reserve`]: Vec::reserve\n+/// [`MaybeUninit`]: core::mem::MaybeUninit\n /// [owned slice]: Box\n /// [slice]: ../../std/primitive.slice.html\n /// [`&`]: ../../std/primitive.reference.html"}]}