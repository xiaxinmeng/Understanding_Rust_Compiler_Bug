{"sha": "9406f8101dd32b4458b8c042a1bfb1bb150a2276", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MDZmODEwMWRkMzJiNDQ1OGI4YzA0MmExYmZiMWJiMTUwYTIyNzY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-13T05:15:13Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-10-13T05:15:13Z"}, "message": "Avoid repeating 'try adding a move' hint", "tree": {"sha": "d201ee282a26ba61d30f0ddbe5e81b69e3bb14ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d201ee282a26ba61d30f0ddbe5e81b69e3bb14ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9406f8101dd32b4458b8c042a1bfb1bb150a2276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9406f8101dd32b4458b8c042a1bfb1bb150a2276", "html_url": "https://github.com/rust-lang/rust/commit/9406f8101dd32b4458b8c042a1bfb1bb150a2276", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9406f8101dd32b4458b8c042a1bfb1bb150a2276/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f1e5b36ab25a6a6c64dac21868cb8f9550c87901", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1e5b36ab25a6a6c64dac21868cb8f9550c87901", "html_url": "https://github.com/rust-lang/rust/commit/f1e5b36ab25a6a6c64dac21868cb8f9550c87901"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "36a05d6650615419e962a6a967b09a1e93a7b7c3", "filename": "src/rustc/middle/kind.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9406f8101dd32b4458b8c042a1bfb1bb150a2276/src%2Frustc%2Fmiddle%2Fkind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9406f8101dd32b4458b8c042a1bfb1bb150a2276/src%2Frustc%2Fmiddle%2Fkind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fkind.rs?ref=9406f8101dd32b4458b8c042a1bfb1bb150a2276", "patch": "@@ -38,6 +38,8 @@ use lint::{non_implicitly_copyable_typarams,implicit_copies};\n // primitives in the stdlib are explicitly annotated to only take sendable\n // types.\n \n+const try_adding: &str = \"Try adding a move\";\n+\n fn kind_to_str(k: kind) -> ~str {\n     let mut kinds = ~[];\n \n@@ -217,7 +219,7 @@ fn check_block(b: blk, cx: ctx, v: visit::vt<ctx>) {\n     match b.node.expr {\n       Some(ex) => maybe_copy(cx, ex,\n          Some((\"Tail expressions in blocks must be copyable\",\n-                                   \"Try adding a move\"))),\n+                                  try_adding))),\n       _ => ()\n     }\n     visit::visit_block(b, cx, v);\n@@ -279,11 +281,11 @@ fn check_expr(e: @expr, cx: ctx, v: visit::vt<ctx>) {\n       expr_unary(box(_), ex) | expr_unary(uniq(_), ex) |\n       expr_ret(Some(ex)) => {\n         maybe_copy(cx, ex, Some((\"Returned values must be copyable\",\n-                                 \"Try adding a move\")));\n+                                 try_adding)));\n       }\n       expr_cast(source, _) => {\n         maybe_copy(cx, source, Some((\"Casted values must be copyable\",\n-                                     \"Try adding a move\")));\n+                                     try_adding)));\n         check_cast_for_escaping_regions(cx, source, e);\n       }\n       expr_copy(expr) => check_copy_ex(cx, expr, false,"}]}