{"sha": "05ea200213fe30967fff38ebac887c52803aabd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZWEyMDAyMTNmZTMwOTY3ZmZmMzhlYmFjODg3YzUyODAzYWFiZDU=", "commit": {"author": {"name": "Ryan Lopopolo", "email": "rjl@hyperbo.la", "date": "2021-03-03T19:52:14Z"}, "committer": {"name": "Ryan Lopopolo", "email": "rjl@hyperbo.la", "date": "2021-03-03T19:52:14Z"}, "message": "Add impls for iterators of Cow<OsStr>", "tree": {"sha": "7cff92e046095b61ae4e78044215224402723eab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7cff92e046095b61ae4e78044215224402723eab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05ea200213fe30967fff38ebac887c52803aabd5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEv9mpkW5ah6mzVQwRcXzdbchOfUUFAmA/6QcACgkQcXzdbchO\nfUVr/hAAkue5C16i5ktQ2Zx389DXreYhKdNnbyceLHG9nZwlGGP4ByyWOOdH+En4\ngof9J953SkpSRaUVLqDLnZvDKq0NL6zeVcoV+vGTDo3gb1KQmpWt+fmdCPad5BQz\ntYRh8HbTKo+2qejWqunyxBXg0gNQe9Ez/kNH5BpXI/DcbfoRqeDicTHqWfo2cO/k\nLSnyeHvKR7p/UELfZfQdgAN4aso+3H7jd3Cljt+UoD4AWOvi+vNGBaDXZ7XU7mN7\nO/hkRCihK5MQzn83FS2TgCnxyQmvEbvEf1KX7PpoaES4siBpmfnhKcSZWcwHNzpK\nLUHRsV9p59dnZ0PlqvO9ule+ZDi5lFspluN+4MLm2L9Y7Z0OH3xkEXRFfxW4rbwP\nMxUQCmdASxIoqT4ZFSM/BXtMmInVwSoqWB4U3/M+LHkMHqscNerff2g8Gazfuy4K\napHW2PDVBhgfrlem0IJPgLSjrZAREhCcEptF/j/9EvoiXjXcV4wa4pt78IHoNAYm\ncWyK6VKG553p0ZLnIfuXswrrc1kif+ClBcAhDyu3EElcdpugwHi1ie2erTBvFlMO\np2V/aHeAZp8otBPibIGDYzf3OkayyHq++btfiA0t8g5YRHtGF1BR5HmUHVKb8cxl\nAgClQ74KFiZ954Mo6HzhI+9UqsePrHrUhzKLeLeUM2WlyGicSVQ=\n=TJFy\n-----END PGP SIGNATURE-----", "payload": "tree 7cff92e046095b61ae4e78044215224402723eab\nparent 2fcb8b5c201d22060f1ba46cc2291cacca593e02\nauthor Ryan Lopopolo <rjl@hyperbo.la> 1614801134 -0800\ncommitter Ryan Lopopolo <rjl@hyperbo.la> 1614801134 -0800\n\nAdd impls for iterators of Cow<OsStr>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05ea200213fe30967fff38ebac887c52803aabd5", "html_url": "https://github.com/rust-lang/rust/commit/05ea200213fe30967fff38ebac887c52803aabd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05ea200213fe30967fff38ebac887c52803aabd5/comments", "author": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lopopolo", "id": 860434, "node_id": "MDQ6VXNlcjg2MDQzNA==", "avatar_url": "https://avatars.githubusercontent.com/u/860434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lopopolo", "html_url": "https://github.com/lopopolo", "followers_url": "https://api.github.com/users/lopopolo/followers", "following_url": "https://api.github.com/users/lopopolo/following{/other_user}", "gists_url": "https://api.github.com/users/lopopolo/gists{/gist_id}", "starred_url": "https://api.github.com/users/lopopolo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lopopolo/subscriptions", "organizations_url": "https://api.github.com/users/lopopolo/orgs", "repos_url": "https://api.github.com/users/lopopolo/repos", "events_url": "https://api.github.com/users/lopopolo/events{/privacy}", "received_events_url": "https://api.github.com/users/lopopolo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fcb8b5c201d22060f1ba46cc2291cacca593e02", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fcb8b5c201d22060f1ba46cc2291cacca593e02", "html_url": "https://github.com/rust-lang/rust/commit/2fcb8b5c201d22060f1ba46cc2291cacca593e02"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "8bdd9a88473f9825142e7e271c145c974e91972e", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/05ea200213fe30967fff38ebac887c52803aabd5/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05ea200213fe30967fff38ebac887c52803aabd5/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=05ea200213fe30967fff38ebac887c52803aabd5", "patch": "@@ -1204,6 +1204,16 @@ impl<'a> Extend<&'a OsStr> for OsString {\n     }\n }\n \n+#[stable(feature = \"osstring_extend\", since = \"1.52.0\")]\n+impl<'a> Extend<Cow<'a, OsStr>> for OsString {\n+    #[inline]\n+    fn extend<T: IntoIterator<Item = Cow<'a, OsStr>>>(&mut self, iter: T) {\n+        for s in iter {\n+            self.push(&s);\n+        }\n+    }\n+}\n+\n #[stable(feature = \"osstring_extend\", since = \"1.52.0\")]\n impl FromIterator<OsString> for OsString {\n     #[inline]\n@@ -1234,3 +1244,27 @@ impl<'a> FromIterator<&'a OsStr> for OsString {\n         buf\n     }\n }\n+\n+#[stable(feature = \"osstring_extend\", since = \"1.52.0\")]\n+impl<'a> FromIterator<Cow<'a, OsStr>> for OsString {\n+    #[inline]\n+    fn from_iter<I: IntoIterator<Item = Cow<'a, OsStr>>>(iter: I) -> Self {\n+        let mut iterator = iter.into_iter();\n+\n+        // Because we're iterating over `OsString`s, we can avoid at least\n+        // one allocation by getting the first owned string from the iterator\n+        // and appending to it all the subsequent strings.\n+        match iterator.next() {\n+            None => OsString::new(),\n+            Some(Cow::Owned(mut buf)) => {\n+                buf.extend(iterator);\n+                buf\n+            }\n+            Some(Cow::Borrowed(buf)) => {\n+                let mut buf = OsString::from(buf);\n+                buf.extend(iterator);\n+                buf\n+            }\n+        }\n+    }\n+}"}]}