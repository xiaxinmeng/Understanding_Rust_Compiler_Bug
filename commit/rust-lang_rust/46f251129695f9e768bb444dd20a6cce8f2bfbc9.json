{"sha": "46f251129695f9e768bb444dd20a6cce8f2bfbc9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2ZjI1MTEyOTY5NWY5ZTc2OGJiNDQ0ZGQyMGE2Y2NlOGYyYmZiYzk=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-12-01T15:30:42Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2019-05-23T16:51:50Z"}, "message": "Update wasm_import_module_map and target_features_whitelist", "tree": {"sha": "6484330a21ef6c7a10a799c7af206368dbd0adbe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6484330a21ef6c7a10a799c7af206368dbd0adbe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46f251129695f9e768bb444dd20a6cce8f2bfbc9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46f251129695f9e768bb444dd20a6cce8f2bfbc9", "html_url": "https://github.com/rust-lang/rust/commit/46f251129695f9e768bb444dd20a6cce8f2bfbc9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46f251129695f9e768bb444dd20a6cce8f2bfbc9/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b648f7088cc6336a70ce65d86af10930212253c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b648f7088cc6336a70ce65d86af10930212253c", "html_url": "https://github.com/rust-lang/rust/commit/9b648f7088cc6336a70ce65d86af10930212253c"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "a24ef9523d41736244ba94ce19fe7638609dc04a", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=46f251129695f9e768bb444dd20a6cce8f2bfbc9", "patch": "@@ -83,6 +83,14 @@ macro_rules! arena_types {\n             [few] features: syntax::feature_gate::Features,\n             [few] all_traits: Vec<rustc::hir::def_id::DefId>,\n             [few] privacy_access_levels: rustc::middle::privacy::AccessLevels,\n+            [few] target_features_whitelist: rustc_data_structures::fx::FxHashMap<\n+                String,\n+                Option<syntax::symbol::Symbol>\n+            >,\n+            [few] wasm_import_module_map: rustc_data_structures::fx::FxHashMap<\n+                rustc::hir::def_id::DefId,\n+                String\n+            >,\n         ], $tcx);\n     )\n }"}, {"sha": "ae4e22e6e4905c8458d5d6c0ff6df5054a065e0e", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=46f251129695f9e768bb444dd20a6cce8f2bfbc9", "patch": "@@ -155,7 +155,7 @@ rustc_queries! {\n     }\n \n     Linking {\n-        query wasm_import_module_map(_: CrateNum) -> Lrc<FxHashMap<DefId, String>> {\n+        query wasm_import_module_map(_: CrateNum) -> &'tcx FxHashMap<DefId, String> {\n             desc { \"wasm import module map\" }\n         }\n     }\n@@ -1050,7 +1050,7 @@ rustc_queries! {\n     }\n \n     Other {\n-        query target_features_whitelist(_: CrateNum) -> Lrc<FxHashMap<String, Option<Symbol>>> {\n+        query target_features_whitelist(_: CrateNum) -> &'tcx FxHashMap<String, Option<Symbol>> {\n             eval_always\n             desc { \"looking up the whitelist of target features\" }\n         }"}, {"sha": "9d0e7dde34d131eb590afb5d7fc3a065944498e5", "filename": "src/librustc_codegen_llvm/attributes.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Flibrustc_codegen_llvm%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fattributes.rs?ref=46f251129695f9e768bb444dd20a6cce8f2bfbc9", "patch": "@@ -10,7 +10,6 @@ use rustc::ty::{self, TyCtxt, PolyFnSig};\n use rustc::ty::layout::HasTyCtxt;\n use rustc::ty::query::Providers;\n use rustc_data_structures::small_c_str::SmallCStr;\n-use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::fx::FxHashMap;\n use rustc_target::spec::PanicStrategy;\n use rustc_codegen_ssa::traits::*;\n@@ -320,11 +319,11 @@ pub fn provide(providers: &mut Providers<'_>) {\n         if tcx.sess.opts.actually_rustdoc {\n             // rustdoc needs to be able to document functions that use all the features, so\n             // whitelist them all\n-            Lrc::new(llvm_util::all_known_features()\n+            tcx.arena.alloc(llvm_util::all_known_features()\n                 .map(|(a, b)| (a.to_string(), b))\n                 .collect())\n         } else {\n-            Lrc::new(llvm_util::target_feature_whitelist(tcx.sess)\n+            tcx.arena.alloc(llvm_util::target_feature_whitelist(tcx.sess)\n                 .iter()\n                 .map(|&(a, b)| (a.to_string(), b))\n                 .collect())\n@@ -364,7 +363,7 @@ pub fn provide_extern(providers: &mut Providers<'_>) {\n             }));\n         }\n \n-        Lrc::new(ret)\n+        tcx.arena.alloc(ret)\n     };\n }\n "}, {"sha": "1bab3f01aba04707ecd058eefcd21ba57037afbe", "filename": "src/test/run-make-fulldeps/hotplug_codegen_backend/the_backend.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46f251129695f9e768bb444dd20a6cce8f2bfbc9/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fhotplug_codegen_backend%2Fthe_backend.rs?ref=46f251129695f9e768bb444dd20a6cce8f2bfbc9", "patch": "@@ -47,8 +47,8 @@ impl CodegenBackend for TheBackend {\n     fn provide(&self, providers: &mut Providers) {\n         rustc_codegen_utils::symbol_names::provide(providers);\n \n-        providers.target_features_whitelist = |_tcx, _cnum| {\n-            Default::default() // Just a dummy\n+        providers.target_features_whitelist = |tcx, _cnum| {\n+            tcx.arena.alloc(Default::default()) // Just a dummy\n         };\n         providers.is_reachable_non_generic = |_tcx, _defid| true;\n         providers.exported_symbols = |_tcx, _crate| Arc::new(Vec::new());"}]}