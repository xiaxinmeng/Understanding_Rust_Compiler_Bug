{"sha": "d896a0c271536dfa1168a2deddfd4ed1aa5b99d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4OTZhMGMyNzE1MzZkZmExMTY4YTJkZWRkZmQ0ZWQxYWE1Yjk5ZDg=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-01-21T22:35:15Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-01-22T13:49:24Z"}, "message": "Add more references between lowercase/uppercase operations.", "tree": {"sha": "00d840e7cf787d1a4a18d717be12f2b87924d51a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00d840e7cf787d1a4a18d717be12f2b87924d51a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d896a0c271536dfa1168a2deddfd4ed1aa5b99d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d896a0c271536dfa1168a2deddfd4ed1aa5b99d8", "html_url": "https://github.com/rust-lang/rust/commit/d896a0c271536dfa1168a2deddfd4ed1aa5b99d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d896a0c271536dfa1168a2deddfd4ed1aa5b99d8/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5d1128a455f50bad162b5aeb2b88441b29f2893", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5d1128a455f50bad162b5aeb2b88441b29f2893", "html_url": "https://github.com/rust-lang/rust/commit/f5d1128a455f50bad162b5aeb2b88441b29f2893"}], "stats": {"total": 32, "additions": 30, "deletions": 2}, "files": [{"sha": "b220504d2b4f5c6eb246303009a99aaec9292d3f", "filename": "src/libstd/ascii.rs", "status": "modified", "additions": 30, "deletions": 2, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d896a0c271536dfa1168a2deddfd4ed1aa5b99d8/src%2Flibstd%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d896a0c271536dfa1168a2deddfd4ed1aa5b99d8/src%2Flibstd%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fascii.rs?ref=d896a0c271536dfa1168a2deddfd4ed1aa5b99d8", "patch": "@@ -66,6 +66,11 @@ pub trait AsciiExt {\n     /// ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\n     /// but non-ASCII letters are unchanged.\n     ///\n+    /// To uppercase the string in-place, use [`make_ascii_uppercase`].\n+    ///\n+    /// To uppercase ASCII characters in addition to non-ASCII characters, use\n+    /// [`str::to_uppercase`].\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -77,6 +82,9 @@ pub trait AsciiExt {\n     /// assert_eq!('A', ascii.to_ascii_uppercase());\n     /// assert_eq!('\u2764', utf8.to_ascii_uppercase());\n     /// ```\n+    ///\n+    /// [`make_ascii_uppercase`]: #tymethod.make_ascii_uppercase\n+    /// [`str::to_uppercase`]: ../primitive.str.html#method.to_uppercase\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn to_ascii_uppercase(&self) -> Self::Owned;\n \n@@ -85,6 +93,11 @@ pub trait AsciiExt {\n     /// ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\n     /// but non-ASCII letters are unchanged.\n     ///\n+    /// To lowercase the string in-place, use [`make_ascii_lowercase`].\n+    ///\n+    /// To lowercase ASCII characters in addition to non-ASCII characters, use\n+    /// [`str::to_lowercase`].\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -96,6 +109,9 @@ pub trait AsciiExt {\n     /// assert_eq!('a', ascii.to_ascii_lowercase());\n     /// assert_eq!('\u2764', utf8.to_ascii_lowercase());\n     /// ```\n+    ///\n+    /// [`make_ascii_lowercase`]: #tymethod.make_ascii_lowercase\n+    /// [`str::to_lowercase`]: ../primitive.str.html#method.to_lowercase\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     fn to_ascii_lowercase(&self) -> Self::Owned;\n \n@@ -123,7 +139,11 @@ pub trait AsciiExt {\n \n     /// Converts this type to its ASCII upper case equivalent in-place.\n     ///\n-    /// See `to_ascii_uppercase` for more information.\n+    /// ASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\n+    /// but non-ASCII letters are unchanged.\n+    ///\n+    /// To return a new uppercased string without modifying the existing one, use\n+    /// [`to_ascii_uppercase`].\n     ///\n     /// # Examples\n     ///\n@@ -136,12 +156,18 @@ pub trait AsciiExt {\n     ///\n     /// assert_eq!('A', ascii);\n     /// ```\n+    ///\n+    /// [`to_ascii_uppercase`]: #tymethod.to_ascii_uppercase\n     #[stable(feature = \"ascii\", since = \"1.9.0\")]\n     fn make_ascii_uppercase(&mut self);\n \n     /// Converts this type to its ASCII lower case equivalent in-place.\n     ///\n-    /// See `to_ascii_lowercase` for more information.\n+    /// ASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\n+    /// but non-ASCII letters are unchanged.\n+    ///\n+    /// To return a new lowercased string without modifying the existing one, use\n+    /// [`to_ascii_lowercase`].\n     ///\n     /// # Examples\n     ///\n@@ -154,6 +180,8 @@ pub trait AsciiExt {\n     ///\n     /// assert_eq!('a', ascii);\n     /// ```\n+    ///\n+    /// [`to_ascii_lowercase`]: #tymethod.to_ascii_lowercase\n     #[stable(feature = \"ascii\", since = \"1.9.0\")]\n     fn make_ascii_lowercase(&mut self);\n }"}]}