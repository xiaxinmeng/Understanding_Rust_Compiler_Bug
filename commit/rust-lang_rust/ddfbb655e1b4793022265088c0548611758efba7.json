{"sha": "ddfbb655e1b4793022265088c0548611758efba7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZmJiNjU1ZTFiNDc5MzAyMjI2NTA4OGMwNTQ4NjExNzU4ZWZiYTc=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-05-10T02:03:13Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-05-10T02:03:13Z"}, "message": "Handle statics.", "tree": {"sha": "74b90cdd5eeef1249219b0853aeba07cc51a5471", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74b90cdd5eeef1249219b0853aeba07cc51a5471"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddfbb655e1b4793022265088c0548611758efba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddfbb655e1b4793022265088c0548611758efba7", "html_url": "https://github.com/rust-lang/rust/commit/ddfbb655e1b4793022265088c0548611758efba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddfbb655e1b4793022265088c0548611758efba7/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b85944456224ee7a824486415cb093ae518dd0cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b85944456224ee7a824486415cb093ae518dd0cb", "html_url": "https://github.com/rust-lang/rust/commit/b85944456224ee7a824486415cb093ae518dd0cb"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "8fc302637f81e074df42df248fae03656ce364cd", "filename": "src/interpreter.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ddfbb655e1b4793022265088c0548611758efba7/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddfbb655e1b4793022265088c0548611758efba7/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=ddfbb655e1b4793022265088c0548611758efba7", "patch": "@@ -846,6 +846,8 @@ impl<'a, 'b, 'mir, 'tcx> FnEvalContext<'a, 'b, 'mir, 'tcx> {\n                     Value { ref value } => Ok(self.const_to_ptr(value)?),\n                     Item { .. } => unimplemented!(),\n                     Promoted { index } => {\n+                        // TODO(tsion): Mark constants and statics as read-only and cache their\n+                        // values.\n                         let current_mir = self.mir();\n                         let mir = &current_mir.promoted[index];\n                         self.call_nested(mir).map(Option::unwrap)\n@@ -864,7 +866,11 @@ impl<'a, 'b, 'mir, 'tcx> FnEvalContext<'a, 'b, 'mir, 'tcx> {\n             Var(i) => self.frame().locals[self.frame().var_offset + i as usize],\n             Temp(i) => self.frame().locals[self.frame().temp_offset + i as usize],\n \n-            Static(_def_id) => unimplemented!(),\n+            Static(def_id) => {\n+                // TODO(tsion): Mark constants and statics as read-only and cache their values.\n+                let mir = self.load_mir(def_id);\n+                self.call_nested(&mir)?.unwrap()\n+            }\n \n             Projection(ref proj) => {\n                 let base = self.eval_lvalue(&proj.base)?;"}]}