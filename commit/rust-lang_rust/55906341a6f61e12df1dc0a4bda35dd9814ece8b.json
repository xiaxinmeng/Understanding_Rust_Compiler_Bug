{"sha": "55906341a6f61e12df1dc0a4bda35dd9814ece8b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1OTA2MzQxYTZmNjFlMTJkZjFkYzBhNGJkYTM1ZGQ5ODE0ZWNlOGI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-25T18:18:45Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-01-25T18:18:45Z"}, "message": "Merge #649\n\n649: remove dead code r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "a94b037fb6bcabebc8f19283b8e721489d0d7fc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a94b037fb6bcabebc8f19283b8e721489d0d7fc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55906341a6f61e12df1dc0a4bda35dd9814ece8b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55906341a6f61e12df1dc0a4bda35dd9814ece8b", "html_url": "https://github.com/rust-lang/rust/commit/55906341a6f61e12df1dc0a4bda35dd9814ece8b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55906341a6f61e12df1dc0a4bda35dd9814ece8b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "aae69bc897f3ede3e2fecf3c9e7e24d9e254497c", "url": "https://api.github.com/repos/rust-lang/rust/commits/aae69bc897f3ede3e2fecf3c9e7e24d9e254497c", "html_url": "https://github.com/rust-lang/rust/commit/aae69bc897f3ede3e2fecf3c9e7e24d9e254497c"}, {"sha": "f0c6a040bd5f739de8462a1bec523181bad63d56", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0c6a040bd5f739de8462a1bec523181bad63d56", "html_url": "https://github.com/rust-lang/rust/commit/f0c6a040bd5f739de8462a1bec523181bad63d56"}], "stats": {"total": 45, "additions": 10, "deletions": 35}, "files": [{"sha": "d5ad9decbf3610f916ba5dd0a9b136e3a1113d25", "filename": "crates/ra_hir/src/module_tree.rs", "status": "modified", "additions": 5, "deletions": 20, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55906341a6f61e12df1dc0a4bda35dd9814ece8b/crates%2Fra_hir%2Fsrc%2Fmodule_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55906341a6f61e12df1dc0a4bda35dd9814ece8b/crates%2Fra_hir%2Fsrc%2Fmodule_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule_tree.rs?ref=55906341a6f61e12df1dc0a4bda35dd9814ece8b", "patch": "@@ -1,6 +1,5 @@\n use std::sync::Arc;\n \n-use rustc_hash::{FxHashMap, FxHashSet};\n use arrayvec::ArrayVec;\n use relative_path::RelativePathBuf;\n use ra_db::{FileId, SourceRoot, CrateId};\n@@ -147,28 +146,21 @@ impl ModuleTree {\n         let file_id = crate_graph.crate_root(crate_id);\n         let source_root_id = db.file_source_root(file_id);\n \n-        let mut roots = FxHashMap::default();\n-        let mut visited = FxHashSet::default();\n-\n         let source_root = db.source_root(source_root_id);\n         let source = SourceItemId {\n             file_id: file_id.into(),\n             item_id: None,\n         };\n-        let module_id = self.init_subtree(db, &source_root, &mut visited, &mut roots, None, source);\n-        roots.insert(file_id, module_id);\n+        self.init_subtree(db, &source_root, None, source);\n     }\n \n     fn init_subtree(\n         &mut self,\n         db: &impl HirDatabase,\n         source_root: &SourceRoot,\n-        visited: &mut FxHashSet<SourceItemId>,\n-        roots: &mut FxHashMap<FileId, ModuleId>,\n         parent: Option<LinkId>,\n         source: SourceItemId,\n     ) -> ModuleId {\n-        visited.insert(source);\n         let id = self.alloc_mod(ModuleData {\n             source,\n             parent,\n@@ -187,28 +179,21 @@ impl ModuleTree {\n                 let (points_to, problem) = resolve_submodule(db, source.file_id, &sub.name);\n                 let points_to = points_to\n                     .into_iter()\n-                    .map(|file_id| match roots.remove(&file_id) {\n-                        Some(module_id) => {\n-                            self.mods[module_id].parent = Some(link);\n-                            module_id\n-                        }\n-                        None => self.init_subtree(\n+                    .map(|file_id| {\n+                        self.init_subtree(\n                             db,\n                             source_root,\n-                            visited,\n-                            roots,\n                             Some(link),\n                             SourceItemId {\n                                 file_id: file_id.into(),\n                                 item_id: None,\n                             },\n-                        ),\n+                        )\n                     })\n                     .collect::<Vec<_>>();\n                 (points_to, problem)\n             } else {\n-                let points_to =\n-                    self.init_subtree(db, source_root, visited, roots, Some(link), sub.source);\n+                let points_to = self.init_subtree(db, source_root, Some(link), sub.source);\n                 (vec![points_to], None)\n             };\n "}, {"sha": "59159df9866bc4ada5486fed239804df6f1b2b6b", "filename": "crates/ra_ide_api/src/status.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55906341a6f61e12df1dc0a4bda35dd9814ece8b/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55906341a6f61e12df1dc0a4bda35dd9814ece8b/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fstatus.rs?ref=55906341a6f61e12df1dc0a4bda35dd9814ece8b", "patch": "@@ -94,17 +94,12 @@ impl FromIterator<TableEntry<FileId, TreeArc<SourceFile>>> for SyntaxTreeStats {\n #[derive(Default)]\n struct LibrarySymbolsStats {\n     total: usize,\n-    fst_size: Bytes,\n-    symbols_size: Bytes,\n+    size: Bytes,\n }\n \n impl fmt::Display for LibrarySymbolsStats {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n-        write!(\n-            fmt,\n-            \"{} ({} + {}) symbols\",\n-            self.total, self.fst_size, self.symbols_size\n-        )\n+        write!(fmt, \"{} ({}) symbols\", self.total, self.size,)\n     }\n }\n \n@@ -117,8 +112,7 @@ impl FromIterator<TableEntry<SourceRootId, Arc<SymbolIndex>>> for LibrarySymbols\n         for entry in iter {\n             let value = entry.value.unwrap();\n             res.total += value.len();\n-            res.fst_size += value.fst_size();\n-            res.symbols_size += value.symbols_size();\n+            res.size += value.memory_size();\n         }\n         res\n     }"}, {"sha": "6baeabde68b4ad63f86d9897511d692fabcd4977", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55906341a6f61e12df1dc0a4bda35dd9814ece8b/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55906341a6f61e12df1dc0a4bda35dd9814ece8b/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=55906341a6f61e12df1dc0a4bda35dd9814ece8b", "patch": "@@ -137,12 +137,8 @@ impl SymbolIndex {\n         self.symbols.len()\n     }\n \n-    pub(crate) fn fst_size(&self) -> usize {\n-        self.map.as_fst().size()\n-    }\n-\n-    pub(crate) fn symbols_size(&self) -> usize {\n-        self.symbols.len() * mem::size_of::<FileSymbol>()\n+    pub(crate) fn memory_size(&self) -> usize {\n+        self.map.as_fst().size() * self.symbols.len() * mem::size_of::<FileSymbol>()\n     }\n \n     pub(crate) fn for_files("}]}