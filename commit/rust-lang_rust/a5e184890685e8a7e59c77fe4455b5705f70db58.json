{"sha": "a5e184890685e8a7e59c77fe4455b5705f70db58", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1ZTE4NDg5MDY4NWU4YTdlNTljNzdmZTQ0NTViNTcwNWY3MGRiNTg=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-01-20T01:11:05Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-01-20T01:11:05Z"}, "message": "Remove old ref.foo noise.", "tree": {"sha": "5b4d913fb7b2ab394f14e28a6a54bd9d2e2284f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b4d913fb7b2ab394f14e28a6a54bd9d2e2284f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a5e184890685e8a7e59c77fe4455b5705f70db58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a5e184890685e8a7e59c77fe4455b5705f70db58", "html_url": "https://github.com/rust-lang/rust/commit/a5e184890685e8a7e59c77fe4455b5705f70db58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a5e184890685e8a7e59c77fe4455b5705f70db58/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5589ab16e087791b67c89ebefc543fd018a0cc4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5589ab16e087791b67c89ebefc543fd018a0cc4d", "html_url": "https://github.com/rust-lang/rust/commit/5589ab16e087791b67c89ebefc543fd018a0cc4d"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "7d3a75d276b2e27016adab7456ae8a230c9a2306", "filename": "doc/rust.md", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a5e184890685e8a7e59c77fe4455b5705f70db58/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/a5e184890685e8a7e59c77fe4455b5705f70db58/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=a5e184890685e8a7e59c77fe4455b5705f70db58", "patch": "@@ -1778,7 +1778,7 @@ returns, then the expression completes.\n \n A call expression statically requires that the precondition declared in the\n callee's signature is satisfied by the expression prestate. In this way,\n-typestates propagate through function boundaries. See [Ref.Typestate](#ref.typestate).\n+typestates propagate through function boundaries.\n \n An example of a call expression:\n \n@@ -2569,8 +2569,7 @@ Unsafe pointers (`*`)\n \n The function type-constructor `fn` forms new function types. A function type\n consists of a sequence of input slots, an optional set of [input\n-constraints](#input-constraints) and an output slot. See\n-[Ref.Item.Fn](#ref.item.fn).\n+constraints](#input-constraints) and an output slot.\n \n An example of a `fn` type:\n "}]}