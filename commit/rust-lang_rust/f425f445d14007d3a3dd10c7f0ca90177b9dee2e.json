{"sha": "f425f445d14007d3a3dd10c7f0ca90177b9dee2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0MjVmNDQ1ZDE0MDA3ZDNhM2RkMTBjN2YwY2E5MDE3N2I5ZGVlMmU=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-13T19:48:07Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-10-14T12:24:52Z"}, "message": "Check that fs errors have the proper kind", "tree": {"sha": "1fff01821b1961b91b20ee88777818c147135a09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fff01821b1961b91b20ee88777818c147135a09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f425f445d14007d3a3dd10c7f0ca90177b9dee2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f425f445d14007d3a3dd10c7f0ca90177b9dee2e", "html_url": "https://github.com/rust-lang/rust/commit/f425f445d14007d3a3dd10c7f0ca90177b9dee2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f425f445d14007d3a3dd10c7f0ca90177b9dee2e/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c77f0ab707be1246d6bef1e691b9a99d0bd7cc5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c77f0ab707be1246d6bef1e691b9a99d0bd7cc5b", "html_url": "https://github.com/rust-lang/rust/commit/c77f0ab707be1246d6bef1e691b9a99d0bd7cc5b"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "7765e5b368e80a8efe94652c7225f8e9f3e5bc9b", "filename": "tests/run-pass/fs.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f425f445d14007d3a3dd10c7f0ca90177b9dee2e/tests%2Frun-pass%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f425f445d14007d3a3dd10c7f0ca90177b9dee2e/tests%2Frun-pass%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffs.rs?ref=f425f445d14007d3a3dd10c7f0ca90177b9dee2e", "patch": "@@ -2,7 +2,7 @@\n // compile-flags: -Zmiri-disable-isolation\n \n use std::fs::{File, remove_file};\n-use std::io::{Read, Write};\n+use std::io::{Read, Write, ErrorKind};\n \n fn main() {\n     let path = std::env::temp_dir().join(\"miri_test_fs.txt\");\n@@ -23,8 +23,10 @@ fn main() {\n     assert_eq!(bytes, contents.as_slice());\n     // Removing file should succeed\n     remove_file(&path).unwrap();\n-    // Opening non-existing file should fail\n-    assert!(File::open(&path).is_err());\n-    // Removing non-existing file should fail\n-    assert!(remove_file(&path).is_err());\n+\n+    // The two following tests also check that the `__errno_location()` shim is working properly.\n+    // Opening a non-existing file should fail with a \"not found\" error.\n+    assert_eq!(ErrorKind::NotFound, File::open(&path).unwrap_err().kind());\n+    // Removing a non-existing file should fail with a \"not found\" error.\n+    assert_eq!(ErrorKind::NotFound, remove_file(&path).unwrap_err().kind());\n }"}]}