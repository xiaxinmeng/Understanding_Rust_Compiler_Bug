{"sha": "edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkZDhiYjBhYTE5MWFiY2I1ZjhhM2Q2YTZiMDM3NDA5MDdjNmM1NGU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-28T20:20:08Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-28T20:20:08Z"}, "message": "rustc: Pass -dead_strip on OSX\n\nThis flag to the linker asks it to strip away all dead code during linking, as\nwell as dead data. This reduces the size of hello world from 1.7MB to 458K on my\nsystem (70% reduction).\n\nI have not seen this impact link times negatively, and I have seen this pass\n'make check' successfully. I am slightly wary of adding this option, but the\nbenefits are so huge tha I think we should work hard to work around any issues\nrather than avoid using the flag entirely.", "tree": {"sha": "2e871ab25b5c06f3d100fd0508c82220c8d80348", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e871ab25b5c06f3d100fd0508c82220c8d80348"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e", "html_url": "https://github.com/rust-lang/rust/commit/edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ff25d62165cbd74e98c569aa74feedbb3ca181e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ff25d62165cbd74e98c569aa74feedbb3ca181e3", "html_url": "https://github.com/rust-lang/rust/commit/ff25d62165cbd74e98c569aa74feedbb3ca181e3"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "9ad4a8795e27cd1ae744cc80803882bdae18fb3b", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=edd8bb0aa191abcb5f8a3d6a6b03740907c6c54e", "patch": "@@ -1150,6 +1150,18 @@ fn link_args(sess: &Session,\n            sess.opts.optimize == session::Aggressive {\n             args.push(\"-Wl,-O1\".to_owned());\n         }\n+    } else if sess.targ_cfg.os == abi::OsMacos {\n+        // The dead_strip option to the linker specifies that functions and data\n+        // unreachable by the entry point will be removed. This is quite useful\n+        // with Rust's compilation model of compiling libraries at a time into\n+        // one object file. For example, this brings hello world from 1.7MB to\n+        // 458K.\n+        //\n+        // Note that this is done for both executables and dynamic libraries. We\n+        // won't get much benefit from dylibs because LLVM will have already\n+        // stripped away as much as it could. This has not been seen to impact\n+        // link times negatively.\n+        args.push(\"-Wl,-dead_strip\".to_owned());\n     }\n \n     if sess.targ_cfg.os == abi::OsWin32 {"}]}