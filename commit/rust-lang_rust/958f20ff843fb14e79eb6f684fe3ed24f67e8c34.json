{"sha": "958f20ff843fb14e79eb6f684fe3ed24f67e8c34", "node_id": "C_kwDOAAsO6NoAKDk1OGYyMGZmODQzZmIxNGU3OWViNmY2ODRmZTNlZDI0ZjY3ZThjMzQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-12T17:41:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-12-18T11:55:20Z"}, "message": "minor: dead code", "tree": {"sha": "88dc021017a57bf23c4e6273778bc9f5a3f32da8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88dc021017a57bf23c4e6273778bc9f5a3f32da8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/958f20ff843fb14e79eb6f684fe3ed24f67e8c34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/958f20ff843fb14e79eb6f684fe3ed24f67e8c34", "html_url": "https://github.com/rust-lang/rust/commit/958f20ff843fb14e79eb6f684fe3ed24f67e8c34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/958f20ff843fb14e79eb6f684fe3ed24f67e8c34/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f28b49759de5629a39536be0f14a55423da3e43", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f28b49759de5629a39536be0f14a55423da3e43", "html_url": "https://github.com/rust-lang/rust/commit/7f28b49759de5629a39536be0f14a55423da3e43"}], "stats": {"total": 14, "additions": 1, "deletions": 13}, "files": [{"sha": "07817bfc0dafe5356921faea701883a25d962ca3", "filename": "crates/syntax/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/958f20ff843fb14e79eb6f684fe3ed24f67e8c34/crates%2Fsyntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958f20ff843fb14e79eb6f684fe3ed24f67e8c34/crates%2Fsyntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Flib.rs?ref=958f20ff843fb14e79eb6f684fe3ed24f67e8c34", "patch": "@@ -48,7 +48,7 @@ use text_edit::Indel;\n \n pub use crate::{\n     ast::{AstNode, AstToken},\n-    parsing::lexer::{lex_single_syntax_kind, lex_single_valid_syntax_kind, tokenize, Token},\n+    parsing::lexer::{lex_single_syntax_kind, tokenize, Token},\n     ptr::{AstPtr, SyntaxNodePtr},\n     syntax_error::SyntaxError,\n     syntax_node::{"}, {"sha": "d94f5f067de058a4cbe650057cd2f4021c3c85a4", "filename": "crates/syntax/src/parsing/lexer.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/958f20ff843fb14e79eb6f684fe3ed24f67e8c34/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/958f20ff843fb14e79eb6f684fe3ed24f67e8c34/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fparsing%2Flexer.rs?ref=958f20ff843fb14e79eb6f684fe3ed24f67e8c34", "patch": "@@ -75,18 +75,6 @@ pub fn lex_single_syntax_kind(text: &str) -> Option<(SyntaxKind, Option<SyntaxEr\n     Some((first_token.kind, err))\n }\n \n-/// The same as `lex_single_syntax_kind()` but returns only `SyntaxKind` and\n-/// returns `None` if any tokenization error occurred.\n-///\n-/// Beware that unescape errors are not checked at tokenization time.\n-pub fn lex_single_valid_syntax_kind(text: &str) -> Option<SyntaxKind> {\n-    let (single_token, err) = lex_single_syntax_kind(text)?;\n-    if err.is_some() {\n-        return None;\n-    }\n-    Some(single_token)\n-}\n-\n /// Returns `SyntaxKind` and `Option<SyntaxError>` of the first token\n /// encountered at the beginning of the string.\n ///"}]}