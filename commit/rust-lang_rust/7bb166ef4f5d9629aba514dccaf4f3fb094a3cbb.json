{"sha": "7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYjE2NmVmNGY1ZDk2MjlhYmE1MTRkY2NhZjRmM2ZiMDk0YTNjYmI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-30T08:26:21Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-30T08:30:28Z"}, "message": "Don't run cleanups twice in \"if true\" blocks\n\nTurns out `with_scope` already translates destructors, so by manually\ntranslating destructors we end up running them all twice (bad).\n\nCloses #10734", "tree": {"sha": "57ebd745f07e96a69a23793daafc0467b59e6982", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57ebd745f07e96a69a23793daafc0467b59e6982"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb", "html_url": "https://github.com/rust-lang/rust/commit/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80991bb578329ca921fdc910d9b6b064e8f521d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/80991bb578329ca921fdc910d9b6b064e8f521d2", "html_url": "https://github.com/rust-lang/rust/commit/80991bb578329ca921fdc910d9b6b064e8f521d2"}], "stats": {"total": 38, "additions": 31, "deletions": 7}, "files": [{"sha": "c62757e1353895a275608451508bcfdecb7b514e", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb", "patch": "@@ -77,7 +77,7 @@ pub fn trans_if(bcx: @mut Block,\n             return with_scope(bcx, thn.info(), \"if_true_then\", |bcx| {\n                 let bcx_out = trans_block(bcx, thn, dest);\n                 debuginfo::clear_source_location(bcx.fcx);\n-                trans_block_cleanups(bcx_out, block_cleanups(bcx))\n+                bcx_out\n             })\n         } else {\n             let mut trans = TransItemVisitor { ccx: bcx.fcx.ccx } ;\n@@ -90,9 +90,9 @@ pub fn trans_if(bcx: @mut Block,\n                                       elexpr.info(),\n                                       \"if_false_then\",\n                                       |bcx| {\n-                        let bcx_out = trans_if_else(bcx, elexpr, dest);\n+                        let bcx_out = trans_if_else(bcx, elexpr, dest, false);\n                         debuginfo::clear_source_location(bcx.fcx);\n-                        trans_block_cleanups(bcx_out, block_cleanups(bcx))\n+                        bcx_out\n                     })\n                 }\n                 // if false { .. }\n@@ -116,7 +116,7 @@ pub fn trans_if(bcx: @mut Block,\n     let (else_bcx_in, next_bcx) = match els {\n       Some(elexpr) => {\n           let else_bcx_in = scope_block(bcx, elexpr.info(), \"else\");\n-          let else_bcx_out = trans_if_else(else_bcx_in, elexpr, dest);\n+          let else_bcx_out = trans_if_else(else_bcx_in, elexpr, dest, true);\n           (else_bcx_in, join_blocks(bcx, [then_bcx_out, else_bcx_out]))\n       }\n       _ => {\n@@ -138,7 +138,7 @@ pub fn trans_if(bcx: @mut Block,\n \n     // trans `else [ if { .. } ... | { .. } ]`\n     fn trans_if_else(else_bcx_in: @mut Block, elexpr: @ast::Expr,\n-                     dest: expr::Dest) -> @mut Block {\n+                     dest: expr::Dest, cleanup: bool) -> @mut Block {\n         let else_bcx_out = match elexpr.node {\n             ast::ExprIf(_, _, _) => {\n                 let elseif_blk = ast_util::block_from_expr(elexpr);\n@@ -150,8 +150,12 @@ pub fn trans_if(bcx: @mut Block,\n             // would be nice to have a constraint on ifs\n             _ => else_bcx_in.tcx().sess.bug(\"strange alternative in if\")\n         };\n-        debuginfo::clear_source_location(else_bcx_in.fcx);\n-        trans_block_cleanups(else_bcx_out, block_cleanups(else_bcx_in))\n+        if cleanup {\n+            debuginfo::clear_source_location(else_bcx_in.fcx);\n+            trans_block_cleanups(else_bcx_out, block_cleanups(else_bcx_in))\n+        } else {\n+            else_bcx_out\n+        }\n     }\n }\n "}, {"sha": "5123b214b8d435a38f66971a9817b17000a726ea", "filename": "src/test/run-pass/issue-10734.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb/src%2Ftest%2Frun-pass%2Fissue-10734.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb/src%2Ftest%2Frun-pass%2Fissue-10734.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-10734.rs?ref=7bb166ef4f5d9629aba514dccaf4f3fb094a3cbb", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+pub fn main() {\n+    if true {\n+        let _a = ~3;\n+    }\n+    if false {\n+        fail!()\n+    } else {\n+        let _a = ~3;\n+    }\n+}"}]}