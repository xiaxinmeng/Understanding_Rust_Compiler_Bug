{"sha": "fe26182281f3f43e2dd237e9c0335da9059c9959", "node_id": "C_kwDOAAsO6NoAKGZlMjYxODIyODFmM2Y0M2UyZGQyMzdlOWMwMzM1ZGE5MDU5Yzk5NTk", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-02-08T06:13:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-02-08T06:13:29Z"}, "message": "Rollup merge of #107779 - compiler-errors:issue-107775, r=jackh726\n\nRemove astconv usage in diagnostic\n\nFixes #107775\n\nLocation of the test sucks, I know, but I needed to put it somewhere :sweat:\nThe issue here is that the root cause of the issue has nothing to do with what's being tested, so I couldn't really give it a better name. Oh well.", "tree": {"sha": "e017a4589900b73b71064ad5a2afdecbac707348", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e017a4589900b73b71064ad5a2afdecbac707348"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe26182281f3f43e2dd237e9c0335da9059c9959", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj4z2JCRBK7hj4Ov3rIwAA++kIAKGG6zYnX5B6lobQyPlRan2j\nxq7d+LLPjB7ChwdV4W0y6OQsOekiLGxlYkPgdYj9ElmanTX27K967bDvUmQRhdFI\ny7taZSWZx/O1UObKeJ2hyx0ytyyw3XCJHsglNe4118ryDVZSbqkCQuBpoOMb7jr9\nEfV0LFvtJ/CS/T6vVjfucMYjOf8nQNAC/4KKu8ZTVIQ5J0Bc2QuRFQ4rF+0ryN2J\n5sebIYcTwQ3jij9d/kJmXaOe+cWGc1WTc1RU4VeuMexrYCp2WVKch1vjs2UJOvHD\nADHUYetXVZ9IcsMbWM658ULtBWgQBoQie4dnO3puT2AShXp9WGB89fpwi7G9dNQ=\n=sBEi\n-----END PGP SIGNATURE-----\n", "payload": "tree e017a4589900b73b71064ad5a2afdecbac707348\nparent 5e467f5dfab45487437bb0455d4f61e6b8d3a5ef\nparent 6fdfdea8b11bd1c6b66d03869e7ec0bee0b94b4d\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1675836809 +0100\ncommitter GitHub <noreply@github.com> 1675836809 +0100\n\nRollup merge of #107779 - compiler-errors:issue-107775, r=jackh726\n\nRemove astconv usage in diagnostic\n\nFixes #107775\n\nLocation of the test sucks, I know, but I needed to put it somewhere :sweat:\nThe issue here is that the root cause of the issue has nothing to do with what's being tested, so I couldn't really give it a better name. Oh well.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe26182281f3f43e2dd237e9c0335da9059c9959", "html_url": "https://github.com/rust-lang/rust/commit/fe26182281f3f43e2dd237e9c0335da9059c9959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe26182281f3f43e2dd237e9c0335da9059c9959/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e467f5dfab45487437bb0455d4f61e6b8d3a5ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e467f5dfab45487437bb0455d4f61e6b8d3a5ef", "html_url": "https://github.com/rust-lang/rust/commit/5e467f5dfab45487437bb0455d4f61e6b8d3a5ef"}, {"sha": "6fdfdea8b11bd1c6b66d03869e7ec0bee0b94b4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fdfdea8b11bd1c6b66d03869e7ec0bee0b94b4d", "html_url": "https://github.com/rust-lang/rust/commit/6fdfdea8b11bd1c6b66d03869e7ec0bee0b94b4d"}], "stats": {"total": 77, "additions": 67, "deletions": 10}, "files": [{"sha": "eaad57d8c2e9f1088ab839e4e266d62b302ea743", "filename": "compiler/rustc_hir_typeck/src/fn_ctxt/suggestions.rs", "status": "modified", "additions": 11, "deletions": 10, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/fe26182281f3f43e2dd237e9c0335da9059c9959/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe26182281f3f43e2dd237e9c0335da9059c9959/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Ffn_ctxt%2Fsuggestions.rs?ref=fe26182281f3f43e2dd237e9c0335da9059c9959", "patch": "@@ -1336,16 +1336,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 hir::Path { segments: [segment], .. },\n             ))\n             | hir::ExprKind::Path(QPath::TypeRelative(ty, segment)) => {\n-                let self_ty = self.astconv().ast_ty_to_ty(ty);\n-                if let Ok(pick) = self.probe_for_name(\n-                    Mode::Path,\n-                    Ident::new(capitalized_name, segment.ident.span),\n-                    Some(expected_ty),\n-                    IsSuggestion(true),\n-                    self_ty,\n-                    expr.hir_id,\n-                    ProbeScope::TraitsInScope,\n-                ) {\n+                if let Some(self_ty) = self.typeck_results.borrow().node_type_opt(ty.hir_id)\n+                    && let Ok(pick) = self.probe_for_name(\n+                        Mode::Path,\n+                        Ident::new(capitalized_name, segment.ident.span),\n+                        Some(expected_ty),\n+                        IsSuggestion(true),\n+                        self_ty,\n+                        expr.hir_id,\n+                        ProbeScope::TraitsInScope,\n+                    )\n+                {\n                     (pick.item, segment)\n                 } else {\n                     return false;"}, {"sha": "6fbac2ee9758e26eada49c860323cbf4c8a58519", "filename": "tests/ui/typeck/issue-107775.rs", "status": "added", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/fe26182281f3f43e2dd237e9c0335da9059c9959/tests%2Fui%2Ftypeck%2Fissue-107775.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe26182281f3f43e2dd237e9c0335da9059c9959/tests%2Fui%2Ftypeck%2Fissue-107775.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-107775.rs?ref=fe26182281f3f43e2dd237e9c0335da9059c9959", "patch": "@@ -0,0 +1,40 @@\n+// edition: 2021\n+\n+use std::collections::HashMap;\n+use std::future::Future;\n+use std::pin::Pin;\n+\n+pub trait Trait {\n+    fn do_something<'async_trait>(byte: u8)\n+    ->\n+        Pin<Box<dyn Future<Output = ()> +\n+        Send + 'async_trait>>;\n+}\n+\n+pub struct Struct;\n+\n+impl Trait for Struct {\n+    fn do_something<'async_trait>(byte: u8)\n+        ->\n+            Pin<Box<dyn Future<Output = ()> +\n+            Send + 'async_trait>> {\n+        Box::pin(\n+\n+            async move { let byte = byte; let _: () = {}; })\n+    }\n+}\n+\n+pub struct Map {\n+    map: HashMap<u16, fn(u8) -> Pin<Box<dyn Future<Output = ()> + Send>>>,\n+}\n+\n+impl Map {\n+    pub fn new() -> Self {\n+        let mut map = HashMap::new();\n+        map.insert(1, Struct::do_something);\n+        Self { map }\n+        //~^ ERROR mismatched types\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "9ee9c022c6e8cc978514a33e27493d09481b514b", "filename": "tests/ui/typeck/issue-107775.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fe26182281f3f43e2dd237e9c0335da9059c9959/tests%2Fui%2Ftypeck%2Fissue-107775.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fe26182281f3f43e2dd237e9c0335da9059c9959/tests%2Fui%2Ftypeck%2Fissue-107775.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftypeck%2Fissue-107775.stderr?ref=fe26182281f3f43e2dd237e9c0335da9059c9959", "patch": "@@ -0,0 +1,16 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-107775.rs:35:16\n+   |\n+LL |         map.insert(1, Struct::do_something);\n+   |                    -  -------------------- this is of type `fn(u8) -> Pin<Box<dyn Future<Output = ()> + Send>> {<Struct as Trait>::do_something::<'_>}`, which causes `map` to be inferred as `HashMap<{integer}, fn(u8) -> Pin<Box<dyn Future<Output = ()> + Send>> {<Struct as Trait>::do_something::<'_>}>`\n+   |                    |\n+   |                    this is of type `{integer}`, which causes `map` to be inferred as `HashMap<{integer}, fn(u8) -> Pin<Box<dyn Future<Output = ()> + Send>> {<Struct as Trait>::do_something::<'_>}>`\n+LL |         Self { map }\n+   |                ^^^ expected `HashMap<u16, fn(u8) -> Pin<...>>`, found `HashMap<{integer}, ...>`\n+   |\n+   = note: expected struct `HashMap<u16, fn(_) -> Pin<Box<(dyn Future<Output = ()> + Send + 'static)>>>`\n+              found struct `HashMap<{integer}, fn(_) -> Pin<Box<dyn Future<Output = ()> + Send>> {<Struct as Trait>::do_something::<'_>}>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}