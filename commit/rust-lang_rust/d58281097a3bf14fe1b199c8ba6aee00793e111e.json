{"sha": "d58281097a3bf14fe1b199c8ba6aee00793e111e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1ODI4MTA5N2EzYmYxNGZlMWIxOTljOGJhNmFlZTAwNzkzZTExMWU=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-09-07T06:47:13Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2017-09-07T08:26:27Z"}, "message": "Fix mispositioned error indicators\n\nFixes #38384\n\nMost of the Rust community uses 4 spaces for indentation,\nbut there are also tab users of Rust (including myself!).\n\nThis patch fixes a bug in error printing which mispositions\nerror indicators when near code with tabs.\n\nThe code attempted to fix the issue by replacing spaces\nwith tabs, but it sadly wasn't enough, as sometimes\nyou may not print spaces but _ or ^ instead.\n\nThis patch employs the reverse strategy: it replaces each\ntab with a space, so that the number of _ and ^ and spaces\nin error indicators below the code snippet line up\nperfectly.\n\nIn a study [1] preceeding this patch, we could see that\nthis strategy is also chosen by gcc version 6.3.0.\n\nIts not perfect, as the output is not beautiful, but its\nthe easiest to implement. If anyone wants to improve on\nthis, be my guest! This patch is meant as improvement of\nthe status quo, not as perfect end status. It fixes the\nactual issue of mispositioning error indicators.\n\n[1]: https://github.com/rust-lang/rust/issues/38384#issuecomment-326813710", "tree": {"sha": "71d6084a9f3e870110a6d5da0359c46927767b52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d6084a9f3e870110a6d5da0359c46927767b52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d58281097a3bf14fe1b199c8ba6aee00793e111e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d58281097a3bf14fe1b199c8ba6aee00793e111e", "html_url": "https://github.com/rust-lang/rust/commit/d58281097a3bf14fe1b199c8ba6aee00793e111e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d58281097a3bf14fe1b199c8ba6aee00793e111e/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05e3c96d36b5281e969b5e79b92d671c7872bf83", "url": "https://api.github.com/repos/rust-lang/rust/commits/05e3c96d36b5281e969b5e79b92d671c7872bf83", "html_url": "https://github.com/rust-lang/rust/commit/05e3c96d36b5281e969b5e79b92d671c7872bf83"}], "stats": {"total": 95, "additions": 82, "deletions": 13}, "files": [{"sha": "ceb94f27dc3cea3ef9ff340f32f09c1d09311551", "filename": "src/librustc_errors/styled_buffer.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Flibrustc_errors%2Fstyled_buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Flibrustc_errors%2Fstyled_buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Fstyled_buffer.rs?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -26,14 +26,11 @@ impl StyledBuffer {\n         }\n     }\n \n-    pub fn copy_tabs(&mut self, row: usize) {\n-        if row < self.text.len() {\n-            for i in row + 1..self.text.len() {\n-                for j in 0..self.text[i].len() {\n-                    if self.text[row].len() > j && self.text[row][j] == '\\t' &&\n-                       self.text[i][j] == ' ' {\n-                        self.text[i][j] = '\\t';\n-                    }\n+    fn replace_tabs(&mut self) {\n+        for line in self.text.iter_mut() {\n+            for c in line.iter_mut() {\n+                if *c == '\\t' {\n+                    *c = ' ';\n                 }\n             }\n         }\n@@ -43,8 +40,8 @@ impl StyledBuffer {\n         let mut output: Vec<Vec<StyledString>> = vec![];\n         let mut styled_vec: Vec<StyledString> = vec![];\n \n-        // before we render, do a little patch-up work to support tabs\n-        self.copy_tabs(3);\n+        // before we render, replace tabs with spaces\n+        self.replace_tabs();\n \n         for (row, row_style) in self.text.iter().zip(&self.styles) {\n             let mut current_style = Style::NoStyle;"}, {"sha": "146ad2283c2fc31e36bb2e0db7a14db3addc2d15", "filename": "src/test/ui/codemap_tests/tab.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.rs?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -13,3 +13,7 @@\n fn main() {\n \tbar;\n }\n+\n+fn foo() {\n+\t\"bar\t\t\tboo\"\n+}"}, {"sha": "b3fa9b128c5eb5d9f5398974a9bd4b68be519160", "filename": "src/test/ui/codemap_tests/tab.stderr", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -1,8 +1,19 @@\n error[E0425]: cannot find value `bar` in this scope\n   --> $DIR/tab.rs:14:2\n    |\n-14 | \\tbar;\n-   | \\t^^^ not found in this scope\n+14 |  bar;\n+   |  ^^^ not found in this scope\n \n-error: aborting due to previous error\n+error[E0308]: mismatched types\n+  --> $DIR/tab.rs:18:2\n+   |\n+17 | fn foo() {\n+   |          - help: try adding a return type: `-> &'static str `\n+18 |  \"bar   boo\"\n+   |  ^^^^^^^^^^^ expected (), found reference\n+   |\n+   = note: expected type `()`\n+              found type `&'static str`\n+\n+error: aborting due to 2 previous errors\n "}, {"sha": "d26d7974d85adb5e3bd9cc04192cde23f1dc7e9b", "filename": "src/test/ui/codemap_tests/tab_2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_2.rs?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-tab\n+\n+fn main() {\n+\t\t\t\t\"\"\";\n+}"}, {"sha": "a2b3ca7e4d4fdf25574d277f1f5bd5911e9b3e0d", "filename": "src/test/ui/codemap_tests/tab_2.stderr", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_2.stderr?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -0,0 +1,10 @@\n+error: unterminated double quote string\n+  --> $DIR/tab_2.rs:14:7\n+   |\n+14 |       \"\"\";\n+   |  _______^\n+15 | | }\n+   | |__^\n+\n+error: aborting due to previous error\n+"}, {"sha": "9b3513d5116f28bc7687e1fabdb90305de69d925", "filename": "src/test/ui/codemap_tests/tab_3.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.rs?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-tab\n+\n+fn main() {\n+\tlet some_vec = vec![\"hi\"];\n+\tsome_vec.into_iter();\n+\t{\n+\t\tprintln!(\"{:?}\", some_vec);\n+\t}\n+}"}, {"sha": "f19f5f20d23ec8c534e6d115a7c4b78a14307b54", "filename": "src/test/ui/codemap_tests/tab_3.stderr", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d58281097a3bf14fe1b199c8ba6aee00793e111e/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab_3.stderr?ref=d58281097a3bf14fe1b199c8ba6aee00793e111e", "patch": "@@ -0,0 +1,13 @@\n+error[E0382]: use of moved value: `some_vec`\n+  --> $DIR/tab_3.rs:17:20\n+   |\n+15 |  some_vec.into_iter();\n+   |  -------- value moved here\n+16 |  {\n+17 |   println!(\"{:?}\", some_vec);\n+   |                    ^^^^^^^^ value used here after move\n+   |\n+   = note: move occurs because `some_vec` has type `std::vec::Vec<&str>`, which does not implement the `Copy` trait\n+\n+error: aborting due to previous error\n+"}]}