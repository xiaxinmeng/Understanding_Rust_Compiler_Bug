{"sha": "55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "node_id": "C_kwDOAAsO6NoAKDU1ZmRkMWU3OGM3M2I2N2FkY2U1ODFmYmYwOWFhMGExYjZmMDdjNjE", "commit": {"author": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-12-13T02:50:49Z"}, "committer": {"name": "naosense", "email": "pingao777@gmail.com", "date": "2022-12-13T08:52:55Z"}, "message": "replace reference with value", "tree": {"sha": "bd5098cdd377756780d593dea80d908278929765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bd5098cdd377756780d593dea80d908278929765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "html_url": "https://github.com/rust-lang/rust/commit/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/comments", "author": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "committer": {"login": "naosense", "id": 2225426, "node_id": "MDQ6VXNlcjIyMjU0MjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2225426?v=4", "gravatar_id": "", "url": "https://api.github.com/users/naosense", "html_url": "https://github.com/naosense", "followers_url": "https://api.github.com/users/naosense/followers", "following_url": "https://api.github.com/users/naosense/following{/other_user}", "gists_url": "https://api.github.com/users/naosense/gists{/gist_id}", "starred_url": "https://api.github.com/users/naosense/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/naosense/subscriptions", "organizations_url": "https://api.github.com/users/naosense/orgs", "repos_url": "https://api.github.com/users/naosense/repos", "events_url": "https://api.github.com/users/naosense/events{/privacy}", "received_events_url": "https://api.github.com/users/naosense/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de92da297466f974b63fb8157419c0616cbfd558", "url": "https://api.github.com/repos/rust-lang/rust/commits/de92da297466f974b63fb8157419c0616cbfd558", "html_url": "https://github.com/rust-lang/rust/commit/de92da297466f974b63fb8157419c0616cbfd558"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "b1578627b50bc0f1ca2afe17044a39aedeb82586", "filename": "clippy_lints/src/manual_is_ascii_check.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmanual_is_ascii_check.rs?ref=55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "patch": "@@ -3,7 +3,7 @@ use clippy_utils::{diagnostics::span_lint_and_sugg, higher, in_constant, macros:\n use rustc_ast::ast::RangeLimits;\n use rustc_ast::LitKind::{Byte, Char};\n use rustc_errors::Applicability;\n-use rustc_hir::{Expr, ExprKind, PatKind, RangeEnd};\n+use rustc_hir::{BorrowKind, Expr, ExprKind, PatKind, RangeEnd};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::{def_id::DefId, sym, Span};\n@@ -86,8 +86,12 @@ impl<'tcx> LateLintPass<'tcx> for ManualIsAsciiCheck {\n             && path.ident.name == sym!(contains)\n             && let Some(higher::Range { start: Some(start), end: Some(end), limits: RangeLimits::Closed })\n             = higher::Range::hir(receiver) {\n-                let range = check_range(start, end);\n+            let range = check_range(start, end);\n+            if let ExprKind::AddrOf(BorrowKind::Ref, _, e) = arg.kind {\n+                check_is_ascii(cx, expr.span, e, &range);\n+            } else {\n                 check_is_ascii(cx, expr.span, arg, &range);\n+            }\n         }\n     }\n "}, {"sha": "b5e8b9c19cbe0df56a86dc075a3507ac253533a9", "filename": "tests/ui/manual_is_ascii_check.fixed", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/tests%2Fui%2Fmanual_is_ascii_check.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/tests%2Fui%2Fmanual_is_ascii_check.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.fixed?ref=55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "patch": "@@ -16,13 +16,13 @@ fn main() {\n \n     assert!(matches!('x', 'A'..='Z' | 'a'..='z' | '_'));\n \n-    assert!(&b'0'.is_ascii_digit());\n-    assert!(&b'a'.is_ascii_lowercase());\n-    assert!(&b'A'.is_ascii_uppercase());\n+    assert!(b'0'.is_ascii_digit());\n+    assert!(b'a'.is_ascii_lowercase());\n+    assert!(b'A'.is_ascii_uppercase());\n \n-    assert!(&'0'.is_ascii_digit());\n-    assert!(&'a'.is_ascii_lowercase());\n-    assert!(&'A'.is_ascii_uppercase());\n+    assert!('0'.is_ascii_digit());\n+    assert!('a'.is_ascii_lowercase());\n+    assert!('A'.is_ascii_uppercase());\n }\n \n #[clippy::msrv = \"1.23\"]"}, {"sha": "ae747d33b585050fcdaf8155b48a0eec5ee06fd9", "filename": "tests/ui/manual_is_ascii_check.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/tests%2Fui%2Fmanual_is_ascii_check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/55fdd1e78c73b67adce581fbf09aa0a1b6f07c61/tests%2Fui%2Fmanual_is_ascii_check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_is_ascii_check.stderr?ref=55fdd1e78c73b67adce581fbf09aa0a1b6f07c61", "patch": "@@ -46,37 +46,37 @@ error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:19:13\n    |\n LL |     assert!((b'0'..=b'9').contains(&b'0'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&b'0'.is_ascii_digit()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'0'.is_ascii_digit()`\n \n error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:20:13\n    |\n LL |     assert!((b'a'..=b'z').contains(&b'a'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&b'a'.is_ascii_lowercase()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'a'.is_ascii_lowercase()`\n \n error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:21:13\n    |\n LL |     assert!((b'A'..=b'Z').contains(&b'A'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&b'A'.is_ascii_uppercase()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b'A'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:23:13\n    |\n LL |     assert!(('0'..='9').contains(&'0'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'0'.is_ascii_digit()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'0'.is_ascii_digit()`\n \n error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:24:13\n    |\n LL |     assert!(('a'..='z').contains(&'a'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'a'.is_ascii_lowercase()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'a'.is_ascii_lowercase()`\n \n error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:25:13\n    |\n LL |     assert!(('A'..='Z').contains(&'A'));\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&'A'.is_ascii_uppercase()`\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `'A'.is_ascii_uppercase()`\n \n error: manual check for common ascii range\n   --> $DIR/manual_is_ascii_check.rs:37:13"}]}