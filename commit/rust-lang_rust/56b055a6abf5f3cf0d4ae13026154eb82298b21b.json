{"sha": "56b055a6abf5f3cf0d4ae13026154eb82298b21b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YjA1NWE2YWJmNWYzY2YwZDRhZTEzMDI2MTU0ZWI4MjI5OGIyMWI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-16T01:32:44Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-16T13:46:35Z"}, "message": "or-patterns: HAIR: `Arm.patterns: Vec<Pattern<'_>>` -> `.pattern: Pattern<'_>`.", "tree": {"sha": "89d141a65d4862a4222f5148f3a9382b4f061dc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89d141a65d4862a4222f5148f3a9382b4f061dc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56b055a6abf5f3cf0d4ae13026154eb82298b21b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56b055a6abf5f3cf0d4ae13026154eb82298b21b", "html_url": "https://github.com/rust-lang/rust/commit/56b055a6abf5f3cf0d4ae13026154eb82298b21b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56b055a6abf5f3cf0d4ae13026154eb82298b21b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "549756bef89fa7f9e39cf5e3d04553076ca952ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/549756bef89fa7f9e39cf5e3d04553076ca952ae", "html_url": "https://github.com/rust-lang/rust/commit/549756bef89fa7f9e39cf5e3d04553076ca952ae"}], "stats": {"total": 23, "additions": 17, "deletions": 6}, "files": [{"sha": "f23abf86bcfc8fed5ed24cbcaf73fb33a1bd8abb", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56b055a6abf5f3cf0d4ae13026154eb82298b21b/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56b055a6abf5f3cf0d4ae13026154eb82298b21b/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=56b055a6abf5f3cf0d4ae13026154eb82298b21b", "patch": "@@ -142,7 +142,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         // Step 2. Create the otherwise and prebinding blocks.\n \n         // create binding start block for link them by false edges\n-        let candidate_count = arms.iter().map(|c| c.patterns.len()).sum::<usize>();\n+        let candidate_count = arms.iter().map(|c| c.top_pats_hack().len()).sum::<usize>();\n         let pre_binding_blocks: Vec<_> = (0..candidate_count)\n             .map(|_| self.cfg.start_new_block())\n             .collect();\n@@ -159,7 +159,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             .map(|arm| {\n                 let arm_has_guard = arm.guard.is_some();\n                 match_has_guard |= arm_has_guard;\n-                let arm_candidates: Vec<_> = arm.patterns\n+                let arm_candidates: Vec<_> = arm.top_pats_hack()\n                     .iter()\n                     .zip(candidate_pre_binding_blocks.by_ref())\n                     .map(\n@@ -238,7 +238,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                 let scope = this.declare_bindings(\n                     None,\n                     arm.span,\n-                    &arm.patterns[0],\n+                    &arm.top_pats_hack()[0],\n                     ArmHasGuard(arm.guard.is_some()),\n                     Some((Some(&scrutinee_place), scrutinee_span)),\n                 );"}, {"sha": "bdfcacd0f462921b033f8817fbab7da2933767a4", "filename": "src/librustc_mir/hair/cx/expr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56b055a6abf5f3cf0d4ae13026154eb82298b21b/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56b055a6abf5f3cf0d4ae13026154eb82298b21b/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fcx%2Fexpr.rs?ref=56b055a6abf5f3cf0d4ae13026154eb82298b21b", "patch": "@@ -860,9 +860,9 @@ impl ToBorrowKind for hir::Mutability {\n     }\n }\n \n-fn convert_arm<'a, 'tcx>(cx: &mut Cx<'a, 'tcx>, arm: &'tcx hir::Arm) -> Arm<'tcx> {\n+fn convert_arm<'tcx>(cx: &mut Cx<'_, 'tcx>, arm: &'tcx hir::Arm) -> Arm<'tcx> {\n     Arm {\n-        patterns: arm.top_pats_hack().iter().map(|p| cx.pattern_from_hir(p)).collect(),\n+        pattern: cx.pattern_from_hir(&arm.pat),\n         guard: match arm.guard {\n                 Some(hir::Guard::If(ref e)) => Some(Guard::If(e.to_ref())),\n                 _ => None,"}, {"sha": "63a9a83154b4f6c5fb029f096ab24b790f9312f6", "filename": "src/librustc_mir/hair/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/56b055a6abf5f3cf0d4ae13026154eb82298b21b/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56b055a6abf5f3cf0d4ae13026154eb82298b21b/src%2Flibrustc_mir%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fmod.rs?ref=56b055a6abf5f3cf0d4ae13026154eb82298b21b", "patch": "@@ -293,14 +293,25 @@ pub struct FruInfo<'tcx> {\n \n #[derive(Clone, Debug)]\n pub struct Arm<'tcx> {\n-    pub patterns: Vec<Pattern<'tcx>>,\n+    pub pattern: Pattern<'tcx>,\n     pub guard: Option<Guard<'tcx>>,\n     pub body: ExprRef<'tcx>,\n     pub lint_level: LintLevel,\n     pub scope: region::Scope,\n     pub span: Span,\n }\n \n+impl Arm<'tcx> {\n+    // HACK(or_patterns; Centril | dlrobertson): Remove this and\n+    // correctly handle each case in which this method is used.\n+    pub fn top_pats_hack(&self) -> &[Pattern<'tcx>] {\n+        match &*self.pattern.kind {\n+            PatternKind::Or { pats } => pats,\n+            _ => std::slice::from_ref(&self.pattern),\n+        }\n+    }\n+}\n+\n #[derive(Clone, Debug)]\n pub enum Guard<'tcx> {\n     If(ExprRef<'tcx>),"}]}