{"sha": "f5560754591532d7cde4c9f5dd51dfbd7670e98f", "node_id": "C_kwDOAAsO6NoAKGY1NTYwNzU0NTkxNTMyZDdjZGU0YzlmNWRkNTFkZmJkNzY3MGU5OGY", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-11-02T17:20:21Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2021-11-02T17:22:12Z"}, "message": "Apply adjustments for field expression even if inaccessible\n\nThe adjustments are used later by ExprUseVisitor to build Place projections\nand without adjustments it can produce invalid result.", "tree": {"sha": "0ab2dcd3dcb4d3e96ae29aa7e595d54aefe35354", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab2dcd3dcb4d3e96ae29aa7e595d54aefe35354"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5560754591532d7cde4c9f5dd51dfbd7670e98f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5560754591532d7cde4c9f5dd51dfbd7670e98f", "html_url": "https://github.com/rust-lang/rust/commit/f5560754591532d7cde4c9f5dd51dfbd7670e98f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5560754591532d7cde4c9f5dd51dfbd7670e98f/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db062de72b0a064f45b6f86894cbdc7c0ec68844", "url": "https://api.github.com/repos/rust-lang/rust/commits/db062de72b0a064f45b6f86894cbdc7c0ec68844", "html_url": "https://github.com/rust-lang/rust/commit/db062de72b0a064f45b6f86894cbdc7c0ec68844"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "2d0a4068fbbe31ef00f16ef6ddf01effb2e23b25", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f5560754591532d7cde4c9f5dd51dfbd7670e98f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5560754591532d7cde4c9f5dd51dfbd7670e98f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=f5560754591532d7cde4c9f5dd51dfbd7670e98f", "patch": "@@ -1698,15 +1698,15 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         // Save the index of all fields regardless of their visibility in case\n                         // of error recovery.\n                         self.write_field_index(expr.hir_id, index);\n+                        let adjustments = self.adjust_steps(&autoderef);\n                         if field.vis.is_accessible_from(def_scope, self.tcx) {\n-                            let adjustments = self.adjust_steps(&autoderef);\n                             self.apply_adjustments(base, adjustments);\n                             self.register_predicates(autoderef.into_obligations());\n \n                             self.tcx.check_stability(field.did, Some(expr.hir_id), expr.span, None);\n                             return field_ty;\n                         }\n-                        private_candidate = Some((base_def.did, field_ty));\n+                        private_candidate = Some((adjustments, base_def.did, field_ty));\n                     }\n                 }\n                 ty::Tuple(tys) => {\n@@ -1729,7 +1729,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n         self.structurally_resolved_type(autoderef.span(), autoderef.final_ty(false));\n \n-        if let Some((did, field_ty)) = private_candidate {\n+        if let Some((adjustments, did, field_ty)) = private_candidate {\n+            // (#90483) apply adjustments to avoid ExprUseVisitor from\n+            // creating erroneous projection.\n+            self.apply_adjustments(base, adjustments);\n             self.ban_private_field_access(expr, expr_t, field, did);\n             return field_ty;\n         }"}, {"sha": "74e50d46e8dcfa26d7e883f14ff582e0edf8c79c", "filename": "src/test/ui/typeck/issue-90483-inaccessible-field-adjustment.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5560754591532d7cde4c9f5dd51dfbd7670e98f/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5560754591532d7cde4c9f5dd51dfbd7670e98f/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.rs?ref=f5560754591532d7cde4c9f5dd51dfbd7670e98f", "patch": "@@ -0,0 +1,14 @@\n+// edition:2021\n+\n+mod m {\n+  pub struct S { foo: i32 }\n+  impl S {\n+    pub fn foo(&self) -> i32 { 42 }\n+  }\n+}\n+\n+fn bar(s: &m::S) {\n+  || s.foo() + s.foo; //~ ERROR E0616\n+}\n+\n+fn main() {}"}, {"sha": "02cdc102c15baed86626b785b6f88304d0ec9166", "filename": "src/test/ui/typeck/issue-90483-inaccessible-field-adjustment.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f5560754591532d7cde4c9f5dd51dfbd7670e98f/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5560754591532d7cde4c9f5dd51dfbd7670e98f/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftypeck%2Fissue-90483-inaccessible-field-adjustment.stderr?ref=f5560754591532d7cde4c9f5dd51dfbd7670e98f", "patch": "@@ -0,0 +1,14 @@\n+error[E0616]: field `foo` of struct `S` is private\n+  --> $DIR/issue-90483-inaccessible-field-adjustment.rs:11:18\n+   |\n+LL |   || s.foo() + s.foo;\n+   |                  ^^^ private field\n+   |\n+help: a method `foo` also exists, call it with parentheses\n+   |\n+LL |   || s.foo() + s.foo();\n+   |                     ++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0616`."}]}