{"sha": "f8138110bca50f8eb9196e098d20df5f496b7051", "node_id": "C_kwDOAAsO6NoAKGY4MTM4MTEwYmNhNTBmOGViOTE5NmUwOThkMjBkZjVmNDk2YjcwNTE", "commit": {"author": {"name": "Jules Bertholet", "email": "julesbertholet@quoi.xyz", "date": "2022-11-07T18:10:36Z"}, "committer": {"name": "Jules Bertholet", "email": "julesbertholet@quoi.xyz", "date": "2022-12-11T06:20:18Z"}, "message": "Use rint instead of roundeven\n\nUse rint intrinsic instead of roundeven to impement `round_ties_even`. They do the same thing when rounding mode is default, which Rust assumes.\nAnd `rint` has better platform support.\n\nKeeps `roundeven` around in `core::intrinsics`, it's doing no harm there.", "tree": {"sha": "f2bfbad05c4f55121c41413829efbb3baff6ac53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2bfbad05c4f55121c41413829efbb3baff6ac53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8138110bca50f8eb9196e098d20df5f496b7051", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEMF9QrRtpLpRzqgMeMgNNr8OMG/wFAmOVdqIACgkQMgNNr8OM\nG/wZSg//dX8aCM0jZ4a4EvTWFQ6P2nWu495lXn+bviY+czU0HhvxJtvFJJfB58Mu\nysSXferQeCI/CdjpjmMr7inxMTD4Rx+gusqFB8FW3hNc9PySpG4WsqRxSUv5x3Qq\nXqflMyA8+/QUPK1FE2q6Ld0qU+cvZ8YNZiR2eKdsau5MIxIKWOAtPU+S2aCsNsRD\n8px4Ryoh7eG9WFpB6v8AXp9F4PxV5Yl/e896pYK/Vaj3IB5QaK2kA0U/CIhhBXa4\nNeaiQyNOhJLamyCCvPC6wmmf2og1UDbLFeOUpkbAqqk2PAyVulnMIThCdP8mReAm\nKV6me58Rlnxm8hxpTWfHsY4qPaWz098TVCySTXkFxx6Z0SG6C3+V2ddXxsM2FvY+\nMz351mbmQK9MgijevlA3eiEzBTg1vM2Vp78+Q4g3otk1K2MUk17QZcibxzvkxjED\nZq7kwhwMLr4nMrR1uxiv/UYuGKJe7p6yev7soyIRrXrSn8p3I96jyDCo5mevsFzC\nro3HXqR34I9HUr6oVGE+S5Mv3HWH1lZFFI8eirbySVsuhybpCgDme3VsxlzlP35K\nL1kihQ9A2uvDeF+gx0fRCZrchnvWkvJFTh5YCpexp7jKK/pPF24IbAEymIdQ+EQX\nb6CvgBlqKatmQwXMkD8Pd6IpG+dxSG1ZIdAcE9ocCUbWlWlpN1o=\n=gjTh\n-----END PGP SIGNATURE-----", "payload": "tree f2bfbad05c4f55121c41413829efbb3baff6ac53\nparent 03c166d3893aba971beecaf65d0722f44a786ecf\nauthor Jules Bertholet <julesbertholet@quoi.xyz> 1667844636 -0500\ncommitter Jules Bertholet <julesbertholet@quoi.xyz> 1670739618 -0500\n\nUse rint instead of roundeven\n\nUse rint intrinsic instead of roundeven to impement `round_ties_even`. They do the same thing when rounding mode is default, which Rust assumes.\nAnd `rint` has better platform support.\n\nKeeps `roundeven` around in `core::intrinsics`, it's doing no harm there.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8138110bca50f8eb9196e098d20df5f496b7051", "html_url": "https://github.com/rust-lang/rust/commit/f8138110bca50f8eb9196e098d20df5f496b7051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8138110bca50f8eb9196e098d20df5f496b7051/comments", "author": {"login": "Jules-Bertholet", "id": 79955405, "node_id": "MDQ6VXNlcjc5OTU1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/79955405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jules-Bertholet", "html_url": "https://github.com/Jules-Bertholet", "followers_url": "https://api.github.com/users/Jules-Bertholet/followers", "following_url": "https://api.github.com/users/Jules-Bertholet/following{/other_user}", "gists_url": "https://api.github.com/users/Jules-Bertholet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jules-Bertholet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jules-Bertholet/subscriptions", "organizations_url": "https://api.github.com/users/Jules-Bertholet/orgs", "repos_url": "https://api.github.com/users/Jules-Bertholet/repos", "events_url": "https://api.github.com/users/Jules-Bertholet/events{/privacy}", "received_events_url": "https://api.github.com/users/Jules-Bertholet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jules-Bertholet", "id": 79955405, "node_id": "MDQ6VXNlcjc5OTU1NDA1", "avatar_url": "https://avatars.githubusercontent.com/u/79955405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jules-Bertholet", "html_url": "https://github.com/Jules-Bertholet", "followers_url": "https://api.github.com/users/Jules-Bertholet/followers", "following_url": "https://api.github.com/users/Jules-Bertholet/following{/other_user}", "gists_url": "https://api.github.com/users/Jules-Bertholet/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jules-Bertholet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jules-Bertholet/subscriptions", "organizations_url": "https://api.github.com/users/Jules-Bertholet/orgs", "repos_url": "https://api.github.com/users/Jules-Bertholet/repos", "events_url": "https://api.github.com/users/Jules-Bertholet/events{/privacy}", "received_events_url": "https://api.github.com/users/Jules-Bertholet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03c166d3893aba971beecaf65d0722f44a786ecf", "url": "https://api.github.com/repos/rust-lang/rust/commits/03c166d3893aba971beecaf65d0722f44a786ecf", "html_url": "https://github.com/rust-lang/rust/commit/03c166d3893aba971beecaf65d0722f44a786ecf"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "ff9447a7484605f49341818cc063941e23272d0d", "filename": "compiler/rustc_codegen_cranelift/src/intrinsics/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8138110bca50f8eb9196e098d20df5f496b7051/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8138110bca50f8eb9196e098d20df5f496b7051/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fintrinsics%2Fmod.rs?ref=f8138110bca50f8eb9196e098d20df5f496b7051", "patch": "@@ -295,6 +295,8 @@ fn codegen_float_intrinsic_call<'tcx>(\n         sym::ceilf64 => (\"ceil\", 1, fx.tcx.types.f64),\n         sym::truncf32 => (\"truncf\", 1, fx.tcx.types.f32),\n         sym::truncf64 => (\"trunc\", 1, fx.tcx.types.f64),\n+        sym::rintf32 => (\"rintf\", 1, fx.tcx.types.f32),\n+        sym::rintf64 => (\"rint\", 1, fx.tcx.types.f64),\n         sym::roundf32 => (\"roundf\", 1, fx.tcx.types.f32),\n         sym::roundf64 => (\"round\", 1, fx.tcx.types.f64),\n         sym::roundevenf32 => (\"roundevenf\", 1, fx.tcx.types.f32),"}, {"sha": "dd84e546a8409cf2a9194a9c080562d9dbd11bb9", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f8138110bca50f8eb9196e098d20df5f496b7051/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8138110bca50f8eb9196e098d20df5f496b7051/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=f8138110bca50f8eb9196e098d20df5f496b7051", "patch": "@@ -1588,9 +1588,15 @@ extern \"rust-intrinsic\" {\n \n     /// Returns the nearest integer to an `f32`. May raise an inexact floating-point exception\n     /// if the argument is not an integer.\n+    ///\n+    /// The stabilized version of this intrinsic is\n+    /// [`f32::round_ties_even`](../../std/primitive.f32.html#method.round_ties_even)\n     pub fn rintf32(x: f32) -> f32;\n     /// Returns the nearest integer to an `f64`. May raise an inexact floating-point exception\n     /// if the argument is not an integer.\n+    ///\n+    /// The stabilized version of this intrinsic is\n+    /// [`f64::round_ties_even`](../../std/primitive.f64.html#method.round_ties_even)\n     pub fn rintf64(x: f64) -> f64;\n \n     /// Returns the nearest integer to an `f32`.\n@@ -1616,16 +1622,13 @@ extern \"rust-intrinsic\" {\n     /// Returns the nearest integer to an `f32`. Rounds half-way cases to the number\n     /// with an even least significant digit.\n     ///\n-    /// The stabilized version of this intrinsic is\n-    /// [`f32::round_ties_even`](../../std/primitive.f32.html#method.round_ties_even)\n+    /// This intrinsic does not have a stable counterpart.\n     #[cfg(not(bootstrap))]\n     pub fn roundevenf32(x: f32) -> f32;\n-\n     /// Returns the nearest integer to an `f64`. Rounds half-way cases to the number\n     /// with an even least significant digit.\n     ///\n-    /// The stabilized version of this intrinsic is\n-    /// [`f64::round_ties_even`](../../std/primitive.f64.html#method.round_ties_even)\n+    /// This intrinsic does not have a stable counterpart.\n     #[cfg(not(bootstrap))]\n     pub fn roundevenf64(x: f64) -> f64;\n "}, {"sha": "221ad469de9ba6d0d9f693cfa0eaffb0e7943af4", "filename": "library/std/src/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8138110bca50f8eb9196e098d20df5f496b7051/library%2Fstd%2Fsrc%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8138110bca50f8eb9196e098d20df5f496b7051/library%2Fstd%2Fsrc%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff32.rs?ref=f8138110bca50f8eb9196e098d20df5f496b7051", "patch": "@@ -119,7 +119,7 @@ impl f32 {\n     #[unstable(feature = \"round_ties_even\", issue = \"96710\")]\n     #[inline]\n     pub fn round_ties_even(self) -> f32 {\n-        unsafe { intrinsics::roundevenf32(self) }\n+        unsafe { intrinsics::rintf32(self) }\n     }\n \n     /// Returns the integer part of `self`."}, {"sha": "4663e00f9ed70ec2266a98ea5eb8233eb4f37703", "filename": "library/std/src/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f8138110bca50f8eb9196e098d20df5f496b7051/library%2Fstd%2Fsrc%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8138110bca50f8eb9196e098d20df5f496b7051/library%2Fstd%2Fsrc%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ff64.rs?ref=f8138110bca50f8eb9196e098d20df5f496b7051", "patch": "@@ -119,7 +119,7 @@ impl f64 {\n     #[unstable(feature = \"round_ties_even\", issue = \"96710\")]\n     #[inline]\n     pub fn round_ties_even(self) -> f64 {\n-        unsafe { intrinsics::roundevenf64(self) }\n+        unsafe { intrinsics::rintf64(self) }\n     }\n \n     /// Returns the integer part of `self`."}]}