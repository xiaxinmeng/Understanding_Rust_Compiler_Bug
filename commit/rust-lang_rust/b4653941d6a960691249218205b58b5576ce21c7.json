{"sha": "b4653941d6a960691249218205b58b5576ce21c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NjUzOTQxZDZhOTYwNjkxMjQ5MjE4MjA1YjU4YjU1NzZjZTIxYzc=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-01T14:37:12Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-04-02T15:17:23Z"}, "message": "middle: trans: type_: remove dead code", "tree": {"sha": "9f80900f66de8a450bd4161f80cf563bc06a502f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f80900f66de8a450bd4161f80cf563bc06a502f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4653941d6a960691249218205b58b5576ce21c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4653941d6a960691249218205b58b5576ce21c7", "html_url": "https://github.com/rust-lang/rust/commit/b4653941d6a960691249218205b58b5576ce21c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4653941d6a960691249218205b58b5576ce21c7/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53b70a83c6931d2d22c99e2aecbc2ac89076123b", "url": "https://api.github.com/repos/rust-lang/rust/commits/53b70a83c6931d2d22c99e2aecbc2ac89076123b", "html_url": "https://github.com/rust-lang/rust/commit/53b70a83c6931d2d22c99e2aecbc2ac89076123b"}], "stats": {"total": 20, "additions": 0, "deletions": 20}, "files": [{"sha": "55ffa951cf2d7f62b45d81d50db571c9e2a914b4", "filename": "src/librustc/middle/trans/type_.rs", "status": "modified", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/b4653941d6a960691249218205b58b5576ce21c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4653941d6a960691249218205b58b5576ce21c7/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Ftype_.rs?ref=b4653941d6a960691249218205b58b5576ce21c7", "patch": "@@ -20,7 +20,6 @@ use syntax::abi::{X86, X86_64, Arm, Mips};\n \n use std::c_str::ToCStr;\n use std::cast;\n-use std::slice;\n \n use std::libc::{c_uint};\n \n@@ -135,10 +134,6 @@ impl Type {\n         }\n     }\n \n-    pub fn size_t(ccx: &CrateContext) -> Type {\n-        Type::int(ccx)\n-    }\n-\n     pub fn func(args: &[Type], ret: &Type) -> Type {\n         let vec : &[TypeRef] = unsafe { cast::transmute(args) };\n         ty!(llvm::LLVMFunctionType(ret.to_ref(), vec.as_ptr(),\n@@ -151,10 +146,6 @@ impl Type {\n                                    args.len() as c_uint, True))\n     }\n \n-    pub fn ptr(ty: Type) -> Type {\n-        ty!(llvm::LLVMPointerType(ty.to_ref(), 0 as c_uint))\n-    }\n-\n     pub fn struct_(ccx: &CrateContext, els: &[Type], packed: bool) -> Type {\n         let els : &[TypeRef] = unsafe { cast::transmute(els) };\n         ty!(llvm::LLVMStructTypeInContext(ccx.llcx, els.as_ptr(),\n@@ -259,17 +250,6 @@ impl Type {\n         ty!(llvm::LLVMPointerType(self.to_ref(), 0))\n     }\n \n-    pub fn get_field(&self, idx: uint) -> Type {\n-        unsafe {\n-            let num_fields = llvm::LLVMCountStructElementTypes(self.to_ref()) as uint;\n-            let mut elems = slice::from_elem(num_fields, 0 as TypeRef);\n-\n-            llvm::LLVMGetStructElementTypes(self.to_ref(), elems.as_mut_ptr());\n-\n-            Type::from_ref(elems[idx])\n-        }\n-    }\n-\n     pub fn is_packed(&self) -> bool {\n         unsafe {\n             llvm::LLVMIsPackedStruct(self.to_ref()) == True"}]}