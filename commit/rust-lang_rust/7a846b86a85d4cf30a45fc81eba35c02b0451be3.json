{"sha": "7a846b86a85d4cf30a45fc81eba35c02b0451be3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhODQ2Yjg2YTg1ZDRjZjMwYTQ1ZmM4MWViYTM1YzAyYjA0NTFiZTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-16T00:10:08Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-11-18T17:32:38Z"}, "message": "Update tests for `()` notation to use traits not structs", "tree": {"sha": "f3050344c304f294f4c9ef62dbc83e3c175f4d7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3050344c304f294f4c9ef62dbc83e3c175f4d7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a846b86a85d4cf30a45fc81eba35c02b0451be3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a846b86a85d4cf30a45fc81eba35c02b0451be3", "html_url": "https://github.com/rust-lang/rust/commit/7a846b86a85d4cf30a45fc81eba35c02b0451be3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a846b86a85d4cf30a45fc81eba35c02b0451be3/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a28d178afcecfb6d2231bb461c5a66864c50f0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a28d178afcecfb6d2231bb461c5a66864c50f0d", "html_url": "https://github.com/rust-lang/rust/commit/5a28d178afcecfb6d2231bb461c5a66864c50f0d"}], "stats": {"total": 44, "additions": 23, "deletions": 21}, "files": [{"sha": "06a934063927a8b06620e294d7f1fad034088d0a", "filename": "src/test/compile-fail/unboxed-closure-sugar-default.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-default.rs?ref=7a846b86a85d4cf30a45fc81eba35c02b0451be3", "patch": "@@ -14,13 +14,13 @@\n #![feature(default_type_params, unboxed_closures)]\n #![allow(dead_code)]\n \n-struct Foo<T,U,V=T> {\n-    t: T, u: U\n+trait Foo<T,U,V=T> {\n+    fn dummy(&self, t: T, u: U, v: V);\n }\n \n-trait Eq<X> { }\n-impl<X> Eq<X> for X { }\n-fn eq<A,B:Eq<A>>() { }\n+trait Eq<Sized? X> for Sized? { }\n+impl<Sized? X> Eq<X> for X { }\n+fn eq<Sized? A,Sized? B>() where A : Eq<B> { }\n \n fn test<'a,'b>() {\n     // Parens are equivalent to omitting default in angle."}, {"sha": "a938f126c16077f6925c4a65a7fda0825d8029ed", "filename": "src/test/compile-fail/unboxed-closure-sugar-region.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-region.rs?ref=7a846b86a85d4cf30a45fc81eba35c02b0451be3", "patch": "@@ -17,15 +17,14 @@\n \n use std::kinds::marker;\n \n-struct Foo<'a,T,U> {\n-    t: T,\n-    u: U,\n-    m: marker::InvariantLifetime<'a>\n+trait Foo<'a,T,U> {\n+    fn dummy(&'a self) -> &'a (T,U);\n }\n \n-trait Eq<X> { }\n-impl<X> Eq<X> for X { }\n-fn eq<A,B:Eq<A>>() { }\n+trait Eq<Sized? X> for Sized? { }\n+impl<Sized? X> Eq<X> for X { }\n+fn eq<Sized? A,Sized? B:Eq<A>>() { }\n+\n fn same_type<A,B:Eq<A>>(a: A, b: B) { }\n \n fn test<'a,'b>() {\n@@ -34,10 +33,10 @@ fn test<'a,'b>() {\n \n     // Here we specify 'static explicitly in angle-bracket version.\n     // Parenthesized winds up getting inferred.\n-    eq::< Foo<'static, (int,),()>,               Foo(int)                      >();\n+    eq::< Foo<'static, (int,),()>,      Foo(int)                      >();\n }\n \n-fn test2(x: Foo<(int,),()>, y: Foo(int)) {\n+fn test2(x: &Foo<(int,),()>, y: &Foo(int)) {\n     // Here, the omitted lifetimes are expanded to distinct things.\n     same_type(x, y) //~ ERROR cannot infer\n }"}, {"sha": "d9efab974d83f83e625e031a0f7c90bfbe22944f", "filename": "src/test/compile-fail/unboxed-closure-sugar-wrong-number-number-type-parameters-1.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters-1.rs?ref=7a846b86a85d4cf30a45fc81eba35c02b0451be3", "patch": "@@ -8,10 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct One<A>;\n #![feature(unboxed_closures)]\n \n-fn foo(_: One()) //~ ERROR wrong number of type arguments\n+trait One<A> { fn foo(&self) -> A; }\n+\n+fn foo(_: &One()) //~ ERROR wrong number of type arguments\n {}\n \n fn main() { }"}, {"sha": "dcfcb7d47728c7e5dd2534b20b0da1fbf2736608", "filename": "src/test/compile-fail/unboxed-closure-sugar-wrong-number-number-type-parameters-3.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters-3.rs?ref=7a846b86a85d4cf30a45fc81eba35c02b0451be3", "patch": "@@ -8,10 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct Three<A,B,C>;\n #![feature(unboxed_closures)]\n \n-fn foo(_: Three()) //~ ERROR wrong number of type arguments\n+trait Three<A,B,C> { fn dummy(&self) -> (A,B,C); }\n+\n+fn foo(_: &Three()) //~ ERROR wrong number of type arguments\n {}\n \n fn main() { }"}, {"sha": "a8ac62444aafc047d4cd4c1df2838507cbd99d59", "filename": "src/test/compile-fail/unboxed-closure-sugar-wrong-number-number-type-parameters.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funboxed-closure-sugar-wrong-number-number-type-parameters.rs?ref=7a846b86a85d4cf30a45fc81eba35c02b0451be3", "patch": "@@ -8,9 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct Zero;\n #![feature(unboxed_closures)]\n \n+trait Zero { fn dummy(&self); }\n+\n fn foo(_: Zero()) //~ ERROR wrong number of type arguments\n {}\n "}, {"sha": "edcb85006ca578259aebe4e94117247db5650f0c", "filename": "src/test/run-pass/unboxed-closures-sugar-1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Frun-pass%2Funboxed-closures-sugar-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7a846b86a85d4cf30a45fc81eba35c02b0451be3/src%2Ftest%2Frun-pass%2Funboxed-closures-sugar-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funboxed-closures-sugar-1.rs?ref=7a846b86a85d4cf30a45fc81eba35c02b0451be3", "patch": "@@ -15,8 +15,8 @@\n \n #![allow(dead_code)]\n \n-struct Foo<T,U> {\n-    t: T, u: U\n+trait Foo<T,U> {\n+    fn dummy(&self) -> (T,U);\n }\n \n trait Eq<X> { }"}]}