{"sha": "e06fbe159ca008992df2849831aa17feb12d5442", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNmZiZTE1OWNhMDA4OTkyZGYyODQ5ODMxYWExN2ZlYjEyZDU0NDI=", "commit": {"author": {"name": "Mathieu De Coster", "email": "mth.decoster@gmail.com", "date": "2016-06-12T08:32:55Z"}, "committer": {"name": "Mathieu De Coster", "email": "mth.decoster@gmail.com", "date": "2016-06-12T08:32:55Z"}, "message": "Add explanation for E0503", "tree": {"sha": "93d08974e809830cf76a1c7166d4714846ff3fab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/93d08974e809830cf76a1c7166d4714846ff3fab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e06fbe159ca008992df2849831aa17feb12d5442", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e06fbe159ca008992df2849831aa17feb12d5442", "html_url": "https://github.com/rust-lang/rust/commit/e06fbe159ca008992df2849831aa17feb12d5442", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e06fbe159ca008992df2849831aa17feb12d5442/comments", "author": {"login": "m-decoster", "id": 4245468, "node_id": "MDQ6VXNlcjQyNDU0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/4245468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-decoster", "html_url": "https://github.com/m-decoster", "followers_url": "https://api.github.com/users/m-decoster/followers", "following_url": "https://api.github.com/users/m-decoster/following{/other_user}", "gists_url": "https://api.github.com/users/m-decoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-decoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-decoster/subscriptions", "organizations_url": "https://api.github.com/users/m-decoster/orgs", "repos_url": "https://api.github.com/users/m-decoster/repos", "events_url": "https://api.github.com/users/m-decoster/events{/privacy}", "received_events_url": "https://api.github.com/users/m-decoster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-decoster", "id": 4245468, "node_id": "MDQ6VXNlcjQyNDU0Njg=", "avatar_url": "https://avatars.githubusercontent.com/u/4245468?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-decoster", "html_url": "https://github.com/m-decoster", "followers_url": "https://api.github.com/users/m-decoster/followers", "following_url": "https://api.github.com/users/m-decoster/following{/other_user}", "gists_url": "https://api.github.com/users/m-decoster/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-decoster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-decoster/subscriptions", "organizations_url": "https://api.github.com/users/m-decoster/orgs", "repos_url": "https://api.github.com/users/m-decoster/repos", "events_url": "https://api.github.com/users/m-decoster/events{/privacy}", "received_events_url": "https://api.github.com/users/m-decoster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81cd7522643f258ce5e5ad3294b52a24f2d62225", "url": "https://api.github.com/repos/rust-lang/rust/commits/81cd7522643f258ce5e5ad3294b52a24f2d62225", "html_url": "https://github.com/rust-lang/rust/commit/81cd7522643f258ce5e5ad3294b52a24f2d62225"}], "stats": {"total": 57, "additions": 56, "deletions": 1}, "files": [{"sha": "c3f02d0c20b6186399813028f0bd77f03eea7737", "filename": "src/librustc_borrowck/diagnostics.rs", "status": "modified", "additions": 56, "deletions": 1, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/e06fbe159ca008992df2849831aa17feb12d5442/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e06fbe159ca008992df2849831aa17feb12d5442/src%2Flibrustc_borrowck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fdiagnostics.rs?ref=e06fbe159ca008992df2849831aa17feb12d5442", "patch": "@@ -529,6 +529,62 @@ For more information on the rust ownership system, take a look at\n https://doc.rust-lang.org/stable/book/references-and-borrowing.html.\n \"##,\n \n+E0503: r##\"\n+A value was used after it was mutably borrowed.\n+\n+Example of erroneous code:\n+\n+```compile_fail\n+fn main() {\n+    let mut value = 3;\n+    // Create a mutable borrow of `value`. This borrow\n+    // lives until the end of this function.\n+    let _borrow = &mut value;\n+    let _sum = value + 1; // error: cannot use `value` because\n+                          //        it was mutably borrowed\n+}\n+```\n+\n+In this example, `value` is mutably borrowed by `borrow` and cannot be\n+used to calculate `sum`. This is not possible because this would violate\n+Rust's mutability rules.\n+\n+You can fix this error by limiting the scope of the borrow:\n+\n+```\n+fn main() {\n+    let mut value = 3;\n+    // By creating a new block, you can limit the scope\n+    // of the reference.\n+    {\n+        let _borrow = &mut value; // Use `_borrow` inside this block.\n+    }\n+    // The block has ended and with it the borrow.\n+    // You can now use `value` again.\n+    let _sum = value + 1;\n+}\n+```\n+\n+Or by cloning `value` before borrowing it:\n+\n+```\n+fn main() {\n+    let mut value = 3;\n+    // We clone `value`, creating a copy.\n+    let value_cloned = value.clone();\n+    // The mutable borrow is a reference to `value` and\n+    // not to `value_cloned`...\n+    let _borrow = &mut value;\n+    // ... which means we can still use `value_cloned`,\n+    let _sum = value_cloned + 1;\n+    // even though the borrow only ends here.\n+}\n+```\n+\n+You can find more information about borrowing in the rust-book:\n+http://doc.rust-lang.org/stable/book/references-and-borrowing.html\n+\"##,\n+\n E0504: r##\"\n This error occurs when an attempt is made to move a borrowed variable into a\n closure.\n@@ -1055,6 +1111,5 @@ fn main() {\n register_diagnostics! {\n     E0385, // {} in an aliasable location\n     E0388, // {} in a static location\n-    E0503, // cannot use `..` because it was mutably borrowed\n     E0524, // two closures require unique access to `..` at the same time\n }"}]}