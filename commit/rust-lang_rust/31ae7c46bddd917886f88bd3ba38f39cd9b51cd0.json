{"sha": "31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "node_id": "C_kwDOAAsO6NoAKDMxYWU3YzQ2YmRkZDkxNzg4NmY4OGJkM2JhMzhmMzljZDliNTFjZDA", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-04-25T07:36:58Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2023-05-12T10:24:17Z"}, "message": "Invert `IgnoreRegions` to `CheckRegions`", "tree": {"sha": "e82ac5714b32326e3f66a18c9b5cf9af518959a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e82ac5714b32326e3f66a18c9b5cf9af518959a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "html_url": "https://github.com/rust-lang/rust/commit/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f08b51759763e44fc59b56584b640c2d2ccff0a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f08b51759763e44fc59b56584b640c2d2ccff0a0", "html_url": "https://github.com/rust-lang/rust/commit/f08b51759763e44fc59b56584b640c2d2ccff0a0"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "e0ba255cc069cc2e04d166f588a33478f9951af6", "filename": "compiler/rustc_hir_analysis/src/check/dropck.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fdropck.rs?ref=31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::{struct_span_err, ErrorGuaranteed};\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n use rustc_infer::infer::{RegionResolutionError, TyCtxtInferExt};\n use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::util::IgnoreRegions;\n+use rustc_middle::ty::util::CheckRegions;\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_trait_selection::traits::{self, ObligationCtxt};\n \n@@ -81,7 +81,7 @@ fn ensure_drop_params_and_item_params_correspond<'tcx>(\n     self_type_did: DefId,\n     adt_to_impl_substs: SubstsRef<'tcx>,\n ) -> Result<(), ErrorGuaranteed> {\n-    let Err(arg) = tcx.uses_unique_generic_params(adt_to_impl_substs, IgnoreRegions::No) else {\n+    let Err(arg) = tcx.uses_unique_generic_params(adt_to_impl_substs, CheckRegions::OnlyEarlyBound) else {\n         return Ok(())\n     };\n "}, {"sha": "23beacd2a8c2cd506af8188577aca2aeee93dc98", "filename": "compiler/rustc_hir_analysis/src/coherence/orphan.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcoherence%2Forphan.rs?ref=31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "patch": "@@ -6,7 +6,7 @@ use rustc_errors::{struct_span_err, DelayDm};\n use rustc_errors::{Diagnostic, ErrorGuaranteed};\n use rustc_hir as hir;\n use rustc_middle::ty::subst::InternalSubsts;\n-use rustc_middle::ty::util::IgnoreRegions;\n+use rustc_middle::ty::util::CheckRegions;\n use rustc_middle::ty::{\n     self, AliasKind, ImplPolarity, Ty, TyCtxt, TypeSuperVisitable, TypeVisitable, TypeVisitableExt,\n     TypeVisitor,\n@@ -507,7 +507,7 @@ fn lint_auto_trait_impl<'tcx>(\n     // Impls which completely cover a given root type are fine as they\n     // disable auto impls entirely. So only lint if the substs\n     // are not a permutation of the identity substs.\n-    let Err(arg) = tcx.uses_unique_generic_params(substs, IgnoreRegions::Yes) else {\n+    let Err(arg) = tcx.uses_unique_generic_params(substs, CheckRegions::No) else {\n         // ok\n         return;\n     };"}, {"sha": "c2affa244462ad912e89fd6ec6fbc5ebf6e75f43", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31ae7c46bddd917886f88bd3ba38f39cd9b51cd0/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=31ae7c46bddd917886f88bd3ba38f39cd9b51cd0", "patch": "@@ -34,9 +34,9 @@ pub struct Discr<'tcx> {\n \n /// Used as an input to [`TyCtxt::uses_unique_generic_params`].\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n-pub enum IgnoreRegions {\n-    Yes,\n+pub enum CheckRegions {\n     No,\n+    OnlyEarlyBound,\n }\n \n #[derive(Copy, Clone, Debug)]\n@@ -468,13 +468,13 @@ impl<'tcx> TyCtxt<'tcx> {\n     pub fn uses_unique_generic_params(\n         self,\n         substs: SubstsRef<'tcx>,\n-        ignore_regions: IgnoreRegions,\n+        ignore_regions: CheckRegions,\n     ) -> Result<(), NotUniqueParam<'tcx>> {\n         let mut seen = GrowableBitSet::default();\n         for arg in substs {\n             match arg.unpack() {\n                 GenericArgKind::Lifetime(lt) => {\n-                    if ignore_regions == IgnoreRegions::No {\n+                    if ignore_regions == CheckRegions::OnlyEarlyBound {\n                         let ty::ReEarlyBound(p) = lt.kind() else {\n                             return Err(NotUniqueParam::NotParam(lt.into()))\n                         };"}]}