{"sha": "9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMGMwYWYxYjIyNWJjMjZjMGI3MzQzNDIyMWVmZTZmZmJiMzczYzM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-19T00:45:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-19T00:45:47Z"}, "message": "rustc: Fix inference for auto slots (forgot to stage changes before)", "tree": {"sha": "0cf4afe8ee25e955a39e4f3a0586b1bbaeb2c0f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cf4afe8ee25e955a39e4f3a0586b1bbaeb2c0f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "html_url": "https://github.com/rust-lang/rust/commit/9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c0c0af1b225bc26c0b73434221efe6ffbb373c3/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a599d80e98bcae932832d20591bc1b14d3de8c20", "url": "https://api.github.com/repos/rust-lang/rust/commits/a599d80e98bcae932832d20591bc1b14d3de8c20", "html_url": "https://github.com/rust-lang/rust/commit/a599d80e98bcae932832d20591bc1b14d3de8c20"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "a060cbde4d1f56654850f649e4ba20394892d192", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9c0c0af1b225bc26c0b73434221efe6ffbb373c3/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c0c0af1b225bc26c0b73434221efe6ffbb373c3/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=9c0c0af1b225bc26c0b73434221efe6ffbb373c3", "patch": "@@ -924,7 +924,9 @@ fn collect_item_types(session.session sess, @ast.crate crate)\n fn unify(&@fn_ctxt fcx, @ty.t expected, @ty.t actual) -> ty.unify_result {\n     obj unify_handler(@fn_ctxt fcx) {\n         fn resolve_local(ast.def_id id) -> @ty.t {\n-            check (fcx.locals.contains_key(id));\n+            if (!fcx.locals.contains_key(id)) {\n+                ret next_ty_var(fcx.ccx);\n+            }\n             ret fcx.locals.get(id);\n         }\n         fn record_local(ast.def_id id, @ty.t t) {\n@@ -2377,20 +2379,17 @@ fn check_decl_local(&@fn_ctxt fcx, &@ast.decl decl) -> @ast.decl {\n     alt (decl.node) {\n         case (ast.decl_local(?local)) {\n \n-            auto local_ty;\n             alt (local.ty) {\n                 case (none[@ast.ty]) {\n-                    // Auto slot. Assign a ty_var.\n-                    local_ty = next_ty_var(fcx.ccx);\n+                    // Auto slot. Do nothing for now.\n                 }\n \n                 case (some[@ast.ty](?ast_ty)) {\n-                    local_ty = ast_ty_to_ty_crate(fcx.ccx, ast_ty);\n+                    auto local_ty = ast_ty_to_ty_crate(fcx.ccx, ast_ty);\n+                    fcx.locals.insert(local.id, local_ty);\n                 }\n             }\n-            fcx.locals.insert(local.id, local_ty);\n \n-            auto rhs_ty = local_ty;\n             auto init = local.init;\n             alt (local.init) {\n                 case (some[@ast.expr](?expr)) {"}]}