{"sha": "ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNGQxMWYzN2VhM2YxYmZmODEwM2MwZTZiMzY5YTk3MmY0YjFiZjI=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T12:18:23Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T16:19:16Z"}, "message": "Use match instead of intermediate variable", "tree": {"sha": "709b8aad6576474f80a871e9e0be17e5f44aebbc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/709b8aad6576474f80a871e9e0be17e5f44aebbc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2", "html_url": "https://github.com/rust-lang/rust/commit/ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce1e211eeb607fdc131cedc764ccb7d824b28b70", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce1e211eeb607fdc131cedc764ccb7d824b28b70", "html_url": "https://github.com/rust-lang/rust/commit/ce1e211eeb607fdc131cedc764ccb7d824b28b70"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "d5187c55730f1fe80e076609dff24f5f58d74032", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=ee4d11f37ea3f1bff8103c0e6b369a972f4b1bf2", "patch": "@@ -22,26 +22,28 @@ pub trait CopyableTuple<T, U> {\n }\n \n impl<T:Copy,U:Copy> CopyableTuple<T, U> for (T, U) {\n-\n     /// Return the first element of self\n     #[inline(always)]\n     fn first(&self) -> T {\n-        let (t, _) = *self;\n-        return t;\n+        match *self {\n+            (t, _) => t,\n+        }\n     }\n \n     /// Return the second element of self\n     #[inline(always)]\n     fn second(&self) -> U {\n-        let (_, u) = *self;\n-        return u;\n+        match *self {\n+            (_, u) => u,\n+        }\n     }\n \n     /// Return the results of swapping the two elements of self\n     #[inline(always)]\n     fn swap(&self) -> (U, T) {\n-        let (t, u) = *self;\n-        return (u, t);\n+        match *self {\n+            (t, u) => (u, t),\n+        }\n     }\n }\n "}]}