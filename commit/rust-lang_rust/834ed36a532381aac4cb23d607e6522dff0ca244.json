{"sha": "834ed36a532381aac4cb23d607e6522dff0ca244", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNGVkMzZhNTMyMzgxYWFjNGNiMjNkNjA3ZTY1MjJkZmYwY2EyNDQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-21T21:56:18Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-21T21:56:18Z"}, "message": "Rollup merge of #70003 - eddyb:symbol-mangling-reify-shims, r=nikomatsakis\n\nsymbol_names: treat ReifyShim like VtableShim.\n\nWithout this, the `#[track_caller]` tests don't pass with `-Zsymbol-mangling-version=v0`, because there is a symbol name collision between the `ReifyShim` and the original definition.\n\ncc @anp", "tree": {"sha": "81bbcf55769ede26231b090b38da2c6a7566a094", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81bbcf55769ede26231b090b38da2c6a7566a094"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/834ed36a532381aac4cb23d607e6522dff0ca244", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedo2CCRBK7hj4Ov3rIwAAdHIIAHGJwKJOzxitUzGoGK1kbYbj\n35C8D4Qkfgy88QYwoPnZSDMUsNPlC51fp0LnXGIBLXMuMvA1zFaF4E9JHFkPy+3k\nXqlZ2FPVNO23Exk3fkqFegcpHyaIH2UZOTor3ahwSjeKJc0rT0BMfkDKdkgJW3CF\ngHh5c2qwdcZcas5k0D4H7WzdNGFFTUKX9hhH3WZ3wLVWHq5b78HjgM8YdJiP9G0C\nTsP+nQndQkqivIEuGIqN1+pquMKoQcVoiZic6eK/WNThDVKrcmk0GWAn2MNyazXp\nOXa/rznTzy+qodl1lf/apMl3NlSE1VLguTEmPMa/V0nC6CCRU6+SGSJn61BIgp8=\n=pMrO\n-----END PGP SIGNATURE-----\n", "payload": "tree 81bbcf55769ede26231b090b38da2c6a7566a094\nparent 38114ff16e7856f98b2b4be7ab4cd29b38bed59a\nparent 14e0aad9909d35195c5725962a4c97697235759d\nauthor Dylan DPC <dylan.dpc@gmail.com> 1584827778 +0100\ncommitter GitHub <noreply@github.com> 1584827778 +0100\n\nRollup merge of #70003 - eddyb:symbol-mangling-reify-shims, r=nikomatsakis\n\nsymbol_names: treat ReifyShim like VtableShim.\n\nWithout this, the `#[track_caller]` tests don't pass with `-Zsymbol-mangling-version=v0`, because there is a symbol name collision between the `ReifyShim` and the original definition.\n\ncc @anp\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/834ed36a532381aac4cb23d607e6522dff0ca244", "html_url": "https://github.com/rust-lang/rust/commit/834ed36a532381aac4cb23d607e6522dff0ca244", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/834ed36a532381aac4cb23d607e6522dff0ca244/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38114ff16e7856f98b2b4be7ab4cd29b38bed59a", "url": "https://api.github.com/repos/rust-lang/rust/commits/38114ff16e7856f98b2b4be7ab4cd29b38bed59a", "html_url": "https://github.com/rust-lang/rust/commit/38114ff16e7856f98b2b4be7ab4cd29b38bed59a"}, {"sha": "14e0aad9909d35195c5725962a4c97697235759d", "url": "https://api.github.com/repos/rust-lang/rust/commits/14e0aad9909d35195c5725962a4c97697235759d", "html_url": "https://github.com/rust-lang/rust/commit/14e0aad9909d35195c5725962a4c97697235759d"}], "stats": {"total": 26, "additions": 18, "deletions": 8}, "files": [{"sha": "46372701a92544eec022aed942edc5b584df7d54", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/834ed36a532381aac4cb23d607e6522dff0ca244/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834ed36a532381aac4cb23d607e6522dff0ca244/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=834ed36a532381aac4cb23d607e6522dff0ca244", "patch": "@@ -406,10 +406,6 @@ impl<'tcx> Instance<'tcx> {\n             | InstanceDef::VtableShim(..) => Some(self.substs),\n         }\n     }\n-\n-    pub fn is_vtable_shim(&self) -> bool {\n-        if let InstanceDef::VtableShim(..) = self.def { true } else { false }\n-    }\n }\n \n fn needs_fn_once_adapter_shim("}, {"sha": "7b082309f34b549343cd01a36a19bc1926381720", "filename": "src/librustc_symbol_mangling/legacy.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/834ed36a532381aac4cb23d607e6522dff0ca244/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834ed36a532381aac4cb23d607e6522dff0ca244/src%2Flibrustc_symbol_mangling%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Flegacy.rs?ref=834ed36a532381aac4cb23d607e6522dff0ca244", "patch": "@@ -59,10 +59,14 @@ pub(super) fn mangle(\n         .print_def_path(def_id, &[])\n         .unwrap();\n \n-    if instance.is_vtable_shim() {\n+    if let ty::InstanceDef::VtableShim(..) = instance.def {\n         let _ = printer.write_str(\"{{vtable-shim}}\");\n     }\n \n+    if let ty::InstanceDef::ReifyShim(..) = instance.def {\n+        let _ = printer.write_str(\"{{reify-shim}}\");\n+    }\n+\n     printer.path.finish(hash)\n }\n \n@@ -123,7 +127,8 @@ fn get_symbol_hash<'tcx>(\n         }\n \n         // We want to avoid accidental collision between different types of instances.\n-        // Especially, VtableShim may overlap with its original instance without this.\n+        // Especially, `VtableShim`s and `ReifyShim`s may overlap with their original\n+        // instances without this.\n         discriminant(&instance.def).hash_stable(&mut hcx, &mut hasher);\n     });\n "}, {"sha": "e22a49061bb19efb1dc556ef4e8baf89f5bf9306", "filename": "src/librustc_symbol_mangling/v0.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/834ed36a532381aac4cb23d607e6522dff0ca244/src%2Flibrustc_symbol_mangling%2Fv0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/834ed36a532381aac4cb23d607e6522dff0ca244/src%2Flibrustc_symbol_mangling%2Fv0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_symbol_mangling%2Fv0.rs?ref=834ed36a532381aac4cb23d607e6522dff0ca244", "patch": "@@ -34,8 +34,17 @@ pub(super) fn mangle(\n         binders: vec![],\n         out: String::from(prefix),\n     };\n-    cx = if instance.is_vtable_shim() {\n-        cx.path_append_ns(|cx| cx.print_def_path(def_id, substs), 'S', 0, \"\").unwrap()\n+\n+    // Append `::{shim:...#0}` to shims that can coexist with a non-shim instance.\n+    let shim_kind = match instance.def {\n+        ty::InstanceDef::VtableShim(_) => Some(\"vtable\"),\n+        ty::InstanceDef::ReifyShim(_) => Some(\"reify\"),\n+\n+        _ => None,\n+    };\n+\n+    cx = if let Some(shim_kind) = shim_kind {\n+        cx.path_append_ns(|cx| cx.print_def_path(def_id, substs), 'S', 0, shim_kind).unwrap()\n     } else {\n         cx.print_def_path(def_id, substs).unwrap()\n     };"}]}