{"sha": "281ca139161fd6a208f2d531f683a706e8286826", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MWNhMTM5MTYxZmQ2YTIwOGYyZDUzMWY2ODNhNzA2ZTgyODY4MjY=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-15T14:42:18Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-07-15T15:10:46Z"}, "message": "Use the default providers in rustc_interface instead of adding our own\n\nThis avoids duplicating the same struct twice.", "tree": {"sha": "28c31cfba91db3828735a1037243142ab0971d30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28c31cfba91db3828735a1037243142ab0971d30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/281ca139161fd6a208f2d531f683a706e8286826", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/281ca139161fd6a208f2d531f683a706e8286826", "html_url": "https://github.com/rust-lang/rust/commit/281ca139161fd6a208f2d531f683a706e8286826", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/281ca139161fd6a208f2d531f683a706e8286826/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e117b47f759e93679192256043db67f8f8a68675", "url": "https://api.github.com/repos/rust-lang/rust/commits/e117b47f759e93679192256043db67f8f8a68675", "html_url": "https://github.com/rust-lang/rust/commit/e117b47f759e93679192256043db67f8f8a68675"}], "stats": {"total": 10, "additions": 2, "deletions": 8}, "files": [{"sha": "00315675fafe3e61137cbf69523680f168d6fbd5", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/281ca139161fd6a208f2d531f683a706e8286826/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/281ca139161fd6a208f2d531f683a706e8286826/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=281ca139161fd6a208f2d531f683a706e8286826", "patch": "@@ -16,7 +16,7 @@ use rustc_interface::interface;\n use rustc_middle::hir::map::Map;\n use rustc_middle::middle::cstore::CrateStore;\n use rustc_middle::middle::privacy::AccessLevels;\n-use rustc_middle::ty::{self, Ty, TyCtxt};\n+use rustc_middle::ty::{Ty, TyCtxt};\n use rustc_resolve as resolve;\n use rustc_session::config::{self, CrateType, ErrorOutputType};\n use rustc_session::lint;\n@@ -391,12 +391,6 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n             };\n             // In case typeck does end up being called, don't ICE in case there were name resolution errors\n             providers.typeck_tables_of = move |tcx, def_id| {\n-                thread_local!(static DEFAULT_TYPECK: for<'tcx> fn(TyCtxt<'tcx>, LocalDefId) -> &'tcx ty::TypeckTables<'tcx> = {\n-                    let mut providers = ty::query::Providers::default();\n-                    rustc_typeck::provide(&mut providers);\n-                    providers.typeck_tables_of\n-                });\n-\n                 // Closures' tables come from their outermost function,\n                 // as they are part of the same \"inference environment\".\n                 // This avoids emitting errors for the parent twice (see similar code in `typeck_tables_of_with_fallback`)\n@@ -409,7 +403,7 @@ pub fn run_core(options: RustdocOptions) -> (clean::Crate, RenderInfo, RenderOpt\n                 let body = hir.body(hir.body_owned_by(hir.as_local_hir_id(def_id)));\n                 debug!(\"visiting body for {:?}\", def_id);\n                 EmitIgnoredResolutionErrors::new(tcx).visit_body(body);\n-                DEFAULT_TYPECK.with(|typeck| typeck(tcx, def_id))\n+                (rustc_interface::DEFAULT_QUERY_PROVIDERS.typeck_tables_of)(tcx, def_id)\n             };\n         }),\n         registry: rustc_driver::diagnostics_registry(),"}]}