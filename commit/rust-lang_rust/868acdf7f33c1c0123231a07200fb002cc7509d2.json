{"sha": "868acdf7f33c1c0123231a07200fb002cc7509d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2OGFjZGY3ZjMzYzFjMDEyMzIzMWEwNzIwMGZiMDAyY2M3NTA5ZDI=", "commit": {"author": {"name": "Chase Southwood", "email": "chase.southwood@gmail.com", "date": "2014-12-22T20:53:17Z"}, "committer": {"name": "Chase Southwood", "email": "chase.southwood@gmail.com", "date": "2014-12-22T22:48:10Z"}, "message": "Implement `reserve_len` and `reserve_len_exact` for VecMap", "tree": {"sha": "987229d413e16d21cc40fed2ca5af0b908c60b95", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/987229d413e16d21cc40fed2ca5af0b908c60b95"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/868acdf7f33c1c0123231a07200fb002cc7509d2", "comment_count": 12, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/868acdf7f33c1c0123231a07200fb002cc7509d2", "html_url": "https://github.com/rust-lang/rust/commit/868acdf7f33c1c0123231a07200fb002cc7509d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/868acdf7f33c1c0123231a07200fb002cc7509d2/comments", "author": {"login": "csouth3", "id": 6758080, "node_id": "MDQ6VXNlcjY3NTgwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6758080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csouth3", "html_url": "https://github.com/csouth3", "followers_url": "https://api.github.com/users/csouth3/followers", "following_url": "https://api.github.com/users/csouth3/following{/other_user}", "gists_url": "https://api.github.com/users/csouth3/gists{/gist_id}", "starred_url": "https://api.github.com/users/csouth3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csouth3/subscriptions", "organizations_url": "https://api.github.com/users/csouth3/orgs", "repos_url": "https://api.github.com/users/csouth3/repos", "events_url": "https://api.github.com/users/csouth3/events{/privacy}", "received_events_url": "https://api.github.com/users/csouth3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csouth3", "id": 6758080, "node_id": "MDQ6VXNlcjY3NTgwODA=", "avatar_url": "https://avatars.githubusercontent.com/u/6758080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csouth3", "html_url": "https://github.com/csouth3", "followers_url": "https://api.github.com/users/csouth3/followers", "following_url": "https://api.github.com/users/csouth3/following{/other_user}", "gists_url": "https://api.github.com/users/csouth3/gists{/gist_id}", "starred_url": "https://api.github.com/users/csouth3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csouth3/subscriptions", "organizations_url": "https://api.github.com/users/csouth3/orgs", "repos_url": "https://api.github.com/users/csouth3/repos", "events_url": "https://api.github.com/users/csouth3/events{/privacy}", "received_events_url": "https://api.github.com/users/csouth3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34d680009205de2302b902d8f9f5f7ae7a042f1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/34d680009205de2302b902d8f9f5f7ae7a042f1a", "html_url": "https://github.com/rust-lang/rust/commit/34d680009205de2302b902d8f9f5f7ae7a042f1a"}], "stats": {"total": 46, "additions": 46, "deletions": 0}, "files": [{"sha": "6c774179c88c05154e426a3f5ee021b89f2ca876", "filename": "src/libcollections/vec_map.rs", "status": "modified", "additions": 46, "deletions": 0, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/868acdf7f33c1c0123231a07200fb002cc7509d2/src%2Flibcollections%2Fvec_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/868acdf7f33c1c0123231a07200fb002cc7509d2/src%2Flibcollections%2Fvec_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_map.rs?ref=868acdf7f33c1c0123231a07200fb002cc7509d2", "patch": "@@ -139,6 +139,52 @@ impl<V> VecMap<V> {\n         self.v.capacity()\n     }\n \n+    /// Reserves capacity for the given `VecMap` to contain `len` distinct keys.\n+    /// In the case of `VecMap` this means reallocations will not occur as long\n+    /// as all inserted keys are less than `len`.\n+    ///\n+    /// The collection may reserve more space to avoid frequent reallocations.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::VecMap;\n+    /// let mut map: VecMap<&str> = VecMap::new();\n+    /// map.reserve_len(10);\n+    /// assert!(map.capacity() >= 10);\n+    /// ```\n+    #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n+    pub fn reserve_len(&mut self, len: uint) {\n+        let cur_len = self.v.len();\n+        if len >= cur_len {\n+            self.v.reserve(len - cur_len);\n+        }\n+    }\n+\n+    /// Reserves the minimum capacity for the given `VecMap` to contain `len` distinct keys.\n+    /// In the case of `VecMap` this means reallocations will not occur as long as all inserted\n+    /// keys are less than `len`.\n+    ///\n+    /// Note that the allocator may give the collection more space than it requests.\n+    /// Therefore capacity cannot be relied upon to be precisely minimal.  Prefer\n+    /// `reserve_len` if future insertions are expected.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::VecMap;\n+    /// let mut map: VecMap<&str> = VecMap::new();\n+    /// map.reserve_len_exact(10);\n+    /// assert!(map.capacity() >= 10);\n+    /// ```\n+    #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n+    pub fn reserve_len_exact(&mut self, len: uint) {\n+        let cur_len = self.v.len();\n+        if len >= cur_len {\n+            self.v.reserve_exact(len - cur_len);\n+        }\n+    }\n+\n     /// Returns an iterator visiting all keys in ascending order by the keys.\n     /// The iterator's element type is `uint`.\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]"}]}