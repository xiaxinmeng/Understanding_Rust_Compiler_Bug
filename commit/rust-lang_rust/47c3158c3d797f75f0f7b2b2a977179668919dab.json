{"sha": "47c3158c3d797f75f0f7b2b2a977179668919dab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3YzMxNThjM2Q3OTdmNzVmMGY3YjJiMmE5NzcxNzk2Njg5MTlkYWI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-04T19:31:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-04T19:31:59Z"}, "message": "Auto merge of #72995 - Dylan-DPC:rollup-7gsyb8x, r=Dylan-DPC\n\nRollup of 5 pull requests\n\nSuccessful merges:\n\n - #72946 (remove outdated fixme)\n - #72971 (Hexagon libstd: fix typo for c_ulonglong)\n - #72986 (Add more assert to Vec with_capacity docs)\n - #72987 (Add myself to mailmap)\n - #72990 (Fix missing word in RELEASES.md)\n\nFailed merges:\n\nr? @ghost", "tree": {"sha": "8132ef5a4f390c33a67da7f16746bd9bbbedb899", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8132ef5a4f390c33a67da7f16746bd9bbbedb899"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47c3158c3d797f75f0f7b2b2a977179668919dab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47c3158c3d797f75f0f7b2b2a977179668919dab", "html_url": "https://github.com/rust-lang/rust/commit/47c3158c3d797f75f0f7b2b2a977179668919dab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47c3158c3d797f75f0f7b2b2a977179668919dab/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d5d0f898c2f3998e50c2180c6202f193c3acdbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5d0f898c2f3998e50c2180c6202f193c3acdbc", "html_url": "https://github.com/rust-lang/rust/commit/3d5d0f898c2f3998e50c2180c6202f193c3acdbc"}, {"sha": "e6b5d88f6de81a6b8999cad6d4a49d5db17b2396", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6b5d88f6de81a6b8999cad6d4a49d5db17b2396", "html_url": "https://github.com/rust-lang/rust/commit/e6b5d88f6de81a6b8999cad6d4a49d5db17b2396"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "9639c1174964c8b0bb40fad696f7f8b7f584c1a9", "filename": ".mailmap", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/47c3158c3d797f75f0f7b2b2a977179668919dab/.mailmap", "raw_url": "https://github.com/rust-lang/rust/raw/47c3158c3d797f75f0f7b2b2a977179668919dab/.mailmap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.mailmap?ref=47c3158c3d797f75f0f7b2b2a977179668919dab", "patch": "@@ -153,6 +153,10 @@ Kang Seonghoon <kang.seonghoon@mearie.org> <public+git@mearie.org>\n Keegan McAllister <mcallister.keegan@gmail.com> <kmcallister@mozilla.com>\n Kevin Butler <haqkrs@gmail.com>\n Kyeongwoon Lee <kyeongwoon.lee@samsung.com>\n+Kyle J Strand <batmanaod@gmail.com> <BatmanAoD@users.noreply.github.com>\n+Kyle J Strand <batmanaod@gmail.com> <kyle.j.strand@gmail.com>\n+Kyle J Strand <batmanaod@gmail.com> <kyle.strand@pieinsurance.com>\n+Kyle J Strand <batmanaod@gmail.com> <kyle.strand@rms.com>\n Lauren\u021biu Nicola <lnicola@dend.ro>\n Lee Jeffery <leejeffery@gmail.com> Lee Jeffery <lee@leejeffery.co.uk>\n Lee Wondong <wdlee91@gmail.com>"}, {"sha": "8d6535b20c2eb56d4430e53d538619469170c20f", "filename": "RELEASES.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47c3158c3d797f75f0f7b2b2a977179668919dab/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/47c3158c3d797f75f0f7b2b2a977179668919dab/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=47c3158c3d797f75f0f7b2b2a977179668919dab", "patch": "@@ -100,7 +100,7 @@ Compatibility Notes\n - [Removed the `-C no_integrated_as` flag from rustc.][70345]\n - [The `file_name` property in JSON output of macro errors now points the actual\n   source file rather than the previous format of `<NAME macros>`.][70969]\n-  **Note:** this may not point a file that actually exists on the user's system.\n+  **Note:** this may not point to a file that actually exists on the user's system.\n - [The minimum required external LLVM version has been bumped to LLVM 8.][71147]\n - [`mem::{zeroed, uninitialised}` will now panic when used with types that do\n   not allow zero initialization such as `NonZeroU8`.][66059] This was"}, {"sha": "ffae3b5c7894fa40d88302d0ba0d27c201b3a45f", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c3158c3d797f75f0f7b2b2a977179668919dab/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c3158c3d797f75f0f7b2b2a977179668919dab/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=47c3158c3d797f75f0f7b2b2a977179668919dab", "patch": "@@ -343,15 +343,18 @@ impl<T> Vec<T> {\n     ///\n     /// // The vector contains no items, even though it has capacity for more\n     /// assert_eq!(vec.len(), 0);\n+    /// assert_eq!(vec.capacity(), 10);\n     ///\n     /// // These are all done without reallocating...\n     /// for i in 0..10 {\n     ///     vec.push(i);\n     /// }\n+    /// assert_eq!(vec.len(), 10);\n     /// assert_eq!(vec.capacity(), 10);\n     ///\n     /// // ...but this may make the vector reallocate\n     /// vec.push(11);\n+    /// assert_eq!(vec.len(), 11);\n     /// assert!(vec.capacity() >= 11);\n     /// ```\n     #[inline]"}, {"sha": "19caf64c63f1ef3aa6a880ff15329e1cd49c7296", "filename": "src/librustc_trait_selection/opaque_types.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/47c3158c3d797f75f0f7b2b2a977179668919dab/src%2Flibrustc_trait_selection%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c3158c3d797f75f0f7b2b2a977179668919dab/src%2Flibrustc_trait_selection%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Fopaque_types.rs?ref=47c3158c3d797f75f0f7b2b2a977179668919dab", "patch": "@@ -1253,9 +1253,6 @@ pub fn may_define_opaque_type(\n ///\n /// Requires that trait definitions have been processed so that we can\n /// elaborate predicates and walk supertraits.\n-//\n-// FIXME: callers may only have a `&[Predicate]`, not a `Vec`, so that's\n-// what this code should accept.\n crate fn required_region_bounds(\n     tcx: TyCtxt<'tcx>,\n     erased_self_ty: Ty<'tcx>,"}, {"sha": "eb8589eb58f4757df52d53c6c5c3248bb7f2964c", "filename": "src/libstd/os/linux/raw.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47c3158c3d797f75f0f7b2b2a977179668919dab/src%2Flibstd%2Fos%2Flinux%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47c3158c3d797f75f0f7b2b2a977179668919dab/src%2Flibstd%2Fos%2Flinux%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Flinux%2Fraw.rs?ref=47c3158c3d797f75f0f7b2b2a977179668919dab", "patch": "@@ -170,7 +170,7 @@ mod arch {\n \n #[cfg(target_arch = \"hexagon\")]\n mod arch {\n-    use crate::os::raw::{c_int, c_long, c_longlong, culonglong};\n+    use crate::os::raw::{c_int, c_long, c_longlong, c_ulonglong};\n \n     #[stable(feature = \"raw_ext\", since = \"1.1.0\")]\n     pub type blkcnt_t = c_longlong;"}]}