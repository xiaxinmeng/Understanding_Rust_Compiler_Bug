{"sha": "f03987276656134f25f92f7434d7d1c63c9e981c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMzk4NzI3NjY1NjEzNGYyNWY5MmY3NDM0ZDdkMWM2M2M5ZTk4MWM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-21T16:06:24Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-21T16:06:24Z"}, "message": "Enclose type in backticks for \"reached the recursion limit while auto-dereferencing\" error", "tree": {"sha": "294ffd80cd14c1a5c57cae10436abeb53fcd283e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/294ffd80cd14c1a5c57cae10436abeb53fcd283e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f03987276656134f25f92f7434d7d1c63c9e981c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f03987276656134f25f92f7434d7d1c63c9e981c", "html_url": "https://github.com/rust-lang/rust/commit/f03987276656134f25f92f7434d7d1c63c9e981c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f03987276656134f25f92f7434d7d1c63c9e981c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b99f9f775c59de7223e810b303e56b39f7bbaf03", "url": "https://api.github.com/repos/rust-lang/rust/commits/b99f9f775c59de7223e810b303e56b39f7bbaf03", "html_url": "https://github.com/rust-lang/rust/commit/b99f9f775c59de7223e810b303e56b39f7bbaf03"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "2cd2bb5064877a2c9502e351bad54216a0b2ac36", "filename": "src/librustc_typeck/check/autoderef.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fautoderef.rs?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -59,15 +59,15 @@ impl<'a, 'gcx, 'tcx> Iterator for Autoderef<'a, 'gcx, 'tcx> {\n         if self.steps.len() >= *tcx.sess.recursion_limit.get() {\n             // We've reached the recursion limit, error gracefully.\n             let suggested_limit = *tcx.sess.recursion_limit.get() * 2;\n-            let msg = format!(\"reached the recursion limit while auto-dereferencing {:?}\",\n+            let msg = format!(\"reached the recursion limit while auto-dereferencing `{:?}`\",\n                               self.cur_ty);\n             let error_id = (DiagnosticMessageId::ErrorId(55), Some(self.span), msg);\n             let fresh = tcx.sess.one_time_diagnostics.borrow_mut().insert(error_id);\n             if fresh {\n                 struct_span_err!(tcx.sess,\n                                  self.span,\n                                  E0055,\n-                                 \"reached the recursion limit while auto-dereferencing {:?}\",\n+                                 \"reached the recursion limit while auto-dereferencing `{:?}`\",\n                                  self.cur_ty)\n                     .span_label(self.span, \"deref recursion limit reached\")\n                     .help(&format!("}, {"sha": "084951f4a2c168bf0b0af6d85cdd5da5fbf3a1cc", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -538,7 +538,7 @@ fn main() {\n     let foo = Foo;\n     let ref_foo = &&Foo;\n \n-    // error, reached the recursion limit while auto-dereferencing &&Foo\n+    // error, reached the recursion limit while auto-dereferencing `&&Foo`\n     ref_foo.foo();\n }\n ```"}, {"sha": "7e7f21dd69c9261059affe69b915008efdf1d5ba", "filename": "src/test/ui/did_you_mean/recursion_limit_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -1,4 +1,4 @@\n-error[E0055]: reached the recursion limit while auto-dereferencing I\n+error[E0055]: reached the recursion limit while auto-dereferencing `I`\n   --> $DIR/recursion_limit_deref.rs:60:22\n    |\n LL |     let x: &Bottom = &t; //~ ERROR mismatched types"}, {"sha": "dddbd92765a5d0dda9f5eb32a4a167976546404e", "filename": "src/test/ui/error-codes/E0055.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Ferror-codes%2FE0055.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Ferror-codes%2FE0055.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0055.stderr?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -1,4 +1,4 @@\n-error[E0055]: reached the recursion limit while auto-dereferencing Foo\n+error[E0055]: reached the recursion limit while auto-dereferencing `Foo`\n   --> $DIR/E0055.rs:21:13\n    |\n LL |     ref_foo.foo();"}, {"sha": "ef68adecd1a5f21eba82613d40b75a21936b6813", "filename": "src/test/ui/infinite/infinite-autoderef.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -7,15 +7,15 @@ LL |         x = box x;\n    |             cyclic type of infinite size\n    |             help: try using a conversion method: `box x.to_string()`\n \n-error[E0055]: reached the recursion limit while auto-dereferencing Foo\n+error[E0055]: reached the recursion limit while auto-dereferencing `Foo`\n   --> $DIR/infinite-autoderef.rs:35:5\n    |\n LL |     Foo.foo;\n    |     ^^^^^^^ deref recursion limit reached\n    |\n    = help: consider adding a `#![recursion_limit=\"128\"]` attribute to your crate\n \n-error[E0055]: reached the recursion limit while auto-dereferencing Foo\n+error[E0055]: reached the recursion limit while auto-dereferencing `Foo`\n   --> $DIR/infinite-autoderef.rs:35:9\n    |\n LL |     Foo.foo;\n@@ -29,7 +29,7 @@ error[E0609]: no field `foo` on type `Foo`\n LL |     Foo.foo;\n    |         ^^^ unknown field\n \n-error[E0055]: reached the recursion limit while auto-dereferencing Foo\n+error[E0055]: reached the recursion limit while auto-dereferencing `Foo`\n   --> $DIR/infinite-autoderef.rs:36:9\n    |\n LL |     Foo.bar();"}, {"sha": "1c785949547e5506a9b9c82ce959041a85611dfe", "filename": "src/test/ui/issues/issue-38940.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Fissues%2Fissue-38940.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Fissues%2Fissue-38940.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38940.rs?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -42,5 +42,5 @@ fn main() {\n     let t = Top::new();\n     let x: &Bottom = &t;\n     //~^ ERROR mismatched types\n-    //~| ERROR reached the recursion limit while auto-dereferencing I\n+    //~| ERROR reached the recursion limit while auto-dereferencing `I`\n }"}, {"sha": "d94a7101c0a3865d685afb7db8d5b5da38d457ec", "filename": "src/test/ui/issues/issue-38940.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Fissues%2Fissue-38940.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03987276656134f25f92f7434d7d1c63c9e981c/src%2Ftest%2Fui%2Fissues%2Fissue-38940.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38940.stderr?ref=f03987276656134f25f92f7434d7d1c63c9e981c", "patch": "@@ -1,4 +1,4 @@\n-error[E0055]: reached the recursion limit while auto-dereferencing I\n+error[E0055]: reached the recursion limit while auto-dereferencing `I`\n   --> $DIR/issue-38940.rs:43:22\n    |\n LL |     let x: &Bottom = &t;"}]}