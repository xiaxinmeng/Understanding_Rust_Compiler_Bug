{"sha": "3f31c389c491e6082ff850ae6873b3a5097d4d7f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmMzFjMzg5YzQ5MWU2MDgyZmY4NTBhZTY4NzNiM2E1MDk3ZDRkN2Y=", "commit": {"author": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-06-26T12:41:32Z"}, "committer": {"name": "Aaron Power", "email": "theaaronepower@gmail.com", "date": "2018-06-26T12:41:32Z"}, "message": "Updated RELEASES", "tree": {"sha": "7f3144883e0a31c1fd572e0077611f152a940926", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f3144883e0a31c1fd572e0077611f152a940926"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3f31c389c491e6082ff850ae6873b3a5097d4d7f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3f31c389c491e6082ff850ae6873b3a5097d4d7f", "html_url": "https://github.com/rust-lang/rust/commit/3f31c389c491e6082ff850ae6873b3a5097d4d7f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3f31c389c491e6082ff850ae6873b3a5097d4d7f/comments", "author": null, "committer": null, "parents": [{"sha": "ffc733fcef4e724524a705c7bc8c9e068fa3ca3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc733fcef4e724524a705c7bc8c9e068fa3ca3a", "html_url": "https://github.com/rust-lang/rust/commit/ffc733fcef4e724524a705c7bc8c9e068fa3ca3a"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "4405b593b29bcb90bc39f4cabe0b94a1bcef8fff", "filename": "RELEASES.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3f31c389c491e6082ff850ae6873b3a5097d4d7f/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/3f31c389c491e6082ff850ae6873b3a5097d4d7f/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=3f31c389c491e6082ff850ae6873b3a5097d4d7f", "patch": "@@ -3,26 +3,26 @@ Version 1.28.0 (2018-08-02)\n \n Language\n --------\n-- [Stabilised the `#[repr(transparent)]` attribute.][51562] This attribute\n+- [The `#[repr(transparent)]` attribute is now stable.][51562] This attribute\n   allows a Rust newtype wrapper (`struct NewType<T>(T);`) to be represented as\n   the inner type across Foreign Function Interface (FFI) boundaries.\n - [The keywords `pure`, `sizeof`, `alignof`, and `offsetof` have been unreserved\n   and can now be used as identifiers.][51196]\n-- [Stabilised the `GlobalAlloc` trait and `#[global_allocator]`\n-  attribute.][51241] This will allow users to specify a global allocator for\n+- [The `GlobalAlloc` trait and `#[global_allocator]` attribute are now\n+  stable.][51241] This will allow users to specify a global allocator for\n   their program.\n - [Unit test functions marked with the `#[test]` attribute can now return\n   `Result<(), E: Debug>` in addition to `()`.][51298]\n-- [Stabilised a `lifetime` specifier to `macro_rules!` allowing macros to easily\n-  target lifetimes.][50385]\n+- [The `lifetime` specifier for `macro_rules!` is now stable.][50385] This\n+  allows macros to easily target lifetimes.\n \n Compiler\n --------\n-- [Stabilised the `s` and `z` optimisation levels.][50265] These optimisations\n+- [The `s` and `z` optimisation levels are now stable.][50265] These optimisations\n   prioritise making smaller binary sizes. `z` is the same as `s` with the\n   exception that it does not vectorise loops, which typically results in an even\n   smaller binary.\n-- [Stabilised the short error format.][49546] Specified with\n+- [The short error format is now stable.][49546] Specified with\n   `--error-format=short` this option will provide a more compressed output of\n   rust error messages.\n - [Added a lint warning when you have duplicated `macro_export`s.][50143]\n@@ -77,9 +77,9 @@ Cargo\n \n Misc\n ----\n-- [Stabilised the `suggestion_applicability` field in the json output.][50486]\n-  This will allow dev tools to check whether a code suggestion would apply\n-  to them.\n+- [The `suggestion_applicability` field in `rustc`'s json output is now\n+  stable.][50486] This will allow dev tools to check whether a code suggestion\n+  would apply to them.\n \n Compatibility Notes\n -------------------\n@@ -328,7 +328,7 @@ Language\n - [Closures now implement `Copy` and/or `Clone` if all captured variables\n   implement either or both traits.][49299]\n - [The inclusive range syntax e.g. `for x in 0..=10` is now stable.][47813]\n-- [Stablise `'_`. The underscore lifetime can be used anywhere where a\n+- [The `'_` lifetime is now stable. The underscore lifetime can be used anywhere where a\n   lifetime can be elided.][49458]\n - [`impl Trait` is now stable allowing you to have abstract types in returns\n    or in function parameters.][49255] e.g. `fn foo() -> impl Iterator<Item=u8>` or\n@@ -529,7 +529,7 @@ Version 1.25.0 (2018-03-29)\n \n Language\n --------\n-- [Stabilised `#[repr(align(x))]`.][47006] [RFC 1358]\n+- [The `#[repr(align(x))]` attribute is now stable.][47006] [RFC 1358]\n - [You can now use nested groups of imports.][47948]\n   e.g. `use std::{fs::File, io::Read, path::{Path, PathBuf}};`\n - [You can now have `|` at the start of a match arm.][47947] e.g."}]}