{"sha": "ca2966c6d04958241f13e61310298a5ff69061e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhMjk2NmM2ZDA0OTU4MjQxZjEzZTYxMzEwMjk4YTVmZjY5MDYxZTI=", "commit": {"author": {"name": "Luqman Aden", "email": "laden@csclub.uwaterloo.ca", "date": "2013-06-21T01:06:13Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2013-06-26T01:14:39Z"}, "message": "Change finalize -> drop.", "tree": {"sha": "ddfa1ab38d0dc6eedf6554c61bcacd5d278a155e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddfa1ab38d0dc6eedf6554c61bcacd5d278a155e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca2966c6d04958241f13e61310298a5ff69061e2", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca2966c6d04958241f13e61310298a5ff69061e2", "html_url": "https://github.com/rust-lang/rust/commit/ca2966c6d04958241f13e61310298a5ff69061e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca2966c6d04958241f13e61310298a5ff69061e2/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4967bd0508a4d04797e0fff49517b7abbc086b74", "url": "https://api.github.com/repos/rust-lang/rust/commits/4967bd0508a4d04797e0fff49517b7abbc086b74", "html_url": "https://github.com/rust-lang/rust/commit/4967bd0508a4d04797e0fff49517b7abbc086b74"}], "stats": {"total": 310, "additions": 155, "deletions": 155}, "files": [{"sha": "346112e655baf2f5367f3f755cc927924e08ddb0", "filename": "doc/tutorial-ffi.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/doc%2Ftutorial-ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/doc%2Ftutorial-ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-ffi.md?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -183,7 +183,7 @@ impl<T: Owned> Unique<T> {\n \n #[unsafe_destructor]\n impl<T: Owned> Drop for Unique<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             let x = intrinsics::init(); // dummy value to swap in\n             // moving the object out is needed to call the destructor"}, {"sha": "c18cca8d5a22168436599ab77b816aa93ee5af37", "filename": "doc/tutorial.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -1979,7 +1979,7 @@ types by the compiler, and may not be overridden:\n > iterations of the language, and often still are.\n \n Additionally, the `Drop` trait is used to define destructors. This\n-trait defines one method called `finalize`, which is automatically\n+trait defines one method called `drop`, which is automatically\n called when a value of the type that implements this trait is\n destroyed, either because the value went out of scope or because the\n garbage collector reclaimed it.\n@@ -1990,15 +1990,15 @@ struct TimeBomb {\n }\n \n impl Drop for TimeBomb {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         for self.explosivity.times {\n             println(\"blam!\");\n         }\n     }\n }\n ~~~\n \n-It is illegal to call `finalize` directly. Only code inserted by the compiler\n+It is illegal to call `drop` directly. Only code inserted by the compiler\n may call it.\n \n ## Declaring and implementing traits"}, {"sha": "db64e0eb719b9f83f66d797bf4d8edadbaced0d6", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ syn keyword   rustOperator    as\n \n syn match     rustAssert      \"\\<assert\\(\\w\\)*!\"\n syn match     rustFail        \"\\<fail\\(\\w\\)*!\"\n-syn keyword   rustKeyword     break copy do drop extern\n+syn keyword   rustKeyword     break copy do extern\n syn keyword   rustKeyword     for if impl let log\n syn keyword   rustKeyword     copy do extern\n syn keyword   rustKeyword     for impl let log"}, {"sha": "b6cd102cf3d03875dc055251a0df1085c9a3652d", "filename": "src/libextra/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farc.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -247,7 +247,7 @@ struct PoisonOnFail {\n }\n \n impl Drop for PoisonOnFail {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             /* assert!(!*self.failed);\n                -- might be false in case of cond.wait() */"}, {"sha": "604d9ba73732ae6448b36a12649c47c7ed4260c8", "filename": "src/libextra/arena.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Farena.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -77,7 +77,7 @@ pub struct Arena {\n \n #[unsafe_destructor]\n impl Drop for Arena {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             destroy_chunk(&self.head);\n             for self.chunks.each |chunk| {"}, {"sha": "84593630cabd7fd188c7373161340db3de96ab91", "filename": "src/libextra/c_vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fc_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fc_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fc_vec.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -57,7 +57,7 @@ struct DtorRes {\n \n #[unsafe_destructor]\n impl Drop for DtorRes {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         match self.dtor {\n             option::None => (),\n             option::Some(f) => f()"}, {"sha": "19e4d221d330015fabb3fa1ad0179449f66d38e2", "filename": "src/libextra/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ffuture.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -44,7 +44,7 @@ pub struct Future<A> {\n // over ~fn's that have pipes and so forth within!\n #[unsafe_destructor]\n impl<A> Drop for Future<A> {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n priv enum FutureState<A> {"}, {"sha": "6ad51931c6768c7a067b9643724ca6b4fdb70dd8", "filename": "src/libextra/net_tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fnet_tcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fnet_tcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnet_tcp.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -57,7 +57,7 @@ pub struct TcpSocket {\n \n #[unsafe_destructor]\n impl Drop for TcpSocket {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         tear_down_socket_data(self.socket_data)\n     }\n }"}, {"sha": "8ef58a188d930b0dba727883a98362edc44722dc", "filename": "src/libextra/rc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Frc.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -68,7 +68,7 @@ impl<T> Rc<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for Rc<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             if self.ptr.is_not_null() {\n                 (*self.ptr).count -= 1;\n@@ -220,7 +220,7 @@ impl<T> RcMut<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for RcMut<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             if self.ptr.is_not_null() {\n                 (*self.ptr).count -= 1;"}, {"sha": "3c872d64ca052bee4b10f254da4d98126ccab7cb", "filename": "src/libextra/sort.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fsort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fsort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsort.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -1207,7 +1207,7 @@ mod big_tests {\n \n     #[unsafe_destructor]\n     impl<'self> Drop for LVal<'self> {\n-        fn finalize(&self) {\n+        fn drop(&self) {\n             let x = unsafe { local_data::local_data_get(self.key) };\n             match x {\n                 Some(@y) => {"}, {"sha": "63fde546047f548f3dbe934fa7e90b3168240ab4", "filename": "src/libextra/sync.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fsync.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -176,7 +176,7 @@ struct SemReleaseGeneric<'self, Q> { sem: &'self Sem<Q> }\n #[doc(hidden)]\n #[unsafe_destructor]\n impl<'self, Q:Owned> Drop for SemReleaseGeneric<'self, Q> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         self.sem.release();\n     }\n }\n@@ -219,7 +219,7 @@ pub struct Condvar<'self> {\n }\n \n #[unsafe_destructor]\n-impl<'self> Drop for Condvar<'self> { fn finalize(&self) {} }\n+impl<'self> Drop for Condvar<'self> { fn drop(&self) {} }\n \n impl<'self> Condvar<'self> {\n     /**\n@@ -295,7 +295,7 @@ impl<'self> Condvar<'self> {\n \n         #[unsafe_destructor]\n         impl<'self> Drop for CondvarReacquire<'self> {\n-            fn finalize(&self) {\n+            fn drop(&self) {\n                 unsafe {\n                     // Needs to succeed, instead of itself dying.\n                     do task::unkillable {\n@@ -689,7 +689,7 @@ struct RWlockReleaseRead<'self> {\n #[doc(hidden)]\n #[unsafe_destructor]\n impl<'self> Drop for RWlockReleaseRead<'self> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             do task::unkillable {\n                 let state = &mut *self.lock.state.get();\n@@ -726,7 +726,7 @@ struct RWlockReleaseDowngrade<'self> {\n #[doc(hidden)]\n #[unsafe_destructor]\n impl<'self> Drop for RWlockReleaseDowngrade<'self> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             do task::unkillable {\n                 let writer_or_last_reader;\n@@ -769,12 +769,12 @@ fn RWlockReleaseDowngrade<'r>(lock: &'r RWlock)\n /// The \"write permission\" token used for rwlock.write_downgrade().\n pub struct RWlockWriteMode<'self> { priv lock: &'self RWlock }\n #[unsafe_destructor]\n-impl<'self> Drop for RWlockWriteMode<'self> { fn finalize(&self) {} }\n+impl<'self> Drop for RWlockWriteMode<'self> { fn drop(&self) {} }\n \n /// The \"read permission\" token used for rwlock.write_downgrade().\n pub struct RWlockReadMode<'self> { priv lock: &'self RWlock }\n #[unsafe_destructor]\n-impl<'self> Drop for RWlockReadMode<'self> { fn finalize(&self) {} }\n+impl<'self> Drop for RWlockReadMode<'self> { fn drop(&self) {} }\n \n impl<'self> RWlockWriteMode<'self> {\n     /// Access the pre-downgrade rwlock in write mode.\n@@ -1104,7 +1104,7 @@ mod tests {\n         }\n \n         impl Drop for SendOnFailure {\n-            fn finalize(&self) {\n+            fn drop(&self) {\n                 self.c.send(());\n             }\n         }"}, {"sha": "6a715d7b481bc61cacd0817429d2e4313c95324a", "filename": "src/libextra/task_pool.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Ftask_pool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibextra%2Ftask_pool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftask_pool.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -35,7 +35,7 @@ pub struct TaskPool<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for TaskPool<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         for self.channels.iter().advance |channel| {\n             channel.send(Quit);\n         }"}, {"sha": "fa261a977f59fa57a18d596aee78e178ac086135", "filename": "src/librustc/back/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fback%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fback%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Fpasses.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -23,7 +23,7 @@ pub struct PassManager {\n }\n \n impl Drop for PassManager {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             llvm::LLVMDisposePassManager(self.llpm);\n         }"}, {"sha": "d7f33dcf0d0a3dc7a9b7fac4804b865cf4433f53", "filename": "src/librustc/lib/llvm.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Flib%2Fllvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Flib%2Fllvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib%2Fllvm.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -2216,7 +2216,7 @@ pub struct target_data_res {\n }\n \n impl Drop for target_data_res {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             llvm::LLVMDisposeTargetData(self.TD);\n         }\n@@ -2253,7 +2253,7 @@ pub struct pass_manager_res {\n }\n \n impl Drop for pass_manager_res {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             llvm::LLVMDisposePassManager(self.PM);\n         }\n@@ -2289,7 +2289,7 @@ pub struct object_file_res {\n }\n \n impl Drop for object_file_res {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             llvm::LLVMDisposeObjectFile(self.ObjectFile);\n         }\n@@ -2326,7 +2326,7 @@ pub struct section_iter_res {\n }\n \n impl Drop for section_iter_res {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             llvm::LLVMDisposeSectionIterator(self.SI);\n         }"}, {"sha": "6b826a9b9404e13236c7b85e7a653140fc8f3b36", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -110,7 +110,7 @@ pub struct _InsnCtxt { _x: () }\n \n #[unsafe_destructor]\n impl Drop for _InsnCtxt {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             do local_data::local_data_modify(task_local_insn_key) |c| {\n                 do c.map_consume |@ctx| {"}, {"sha": "442ab475046fd13e057bb05d0c997856e152a626", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -110,7 +110,7 @@ pub struct BuilderRef_res {\n }\n \n impl Drop for BuilderRef_res {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             llvm::LLVMDisposeBuilder(self.B);\n         }"}, {"sha": "57cfb1474dfebcf02bc0a09eb649d3e86aee21a2", "filename": "src/librustc/middle/trans/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontext.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -241,7 +241,7 @@ impl CrateContext {\n \n #[unsafe_destructor]\n impl Drop for CrateContext {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             unset_task_llcx();\n         }"}, {"sha": "899dc85bb8a9956eacb38bb40ea30a333b8a4b0e", "filename": "src/librustc/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Frustc.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -328,7 +328,7 @@ pub fn monitor(f: ~fn(diagnostic::Emitter)) {\n         }\n \n         impl Drop for finally {\n-            fn finalize(&self) { self.ch.send(done); }\n+            fn drop(&self) { self.ch.send(done); }\n         }\n \n         let _finally = finally { ch: ch };"}, {"sha": "351519975adf38a1d17e24f4983714d527841724", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -41,7 +41,7 @@ pub struct _indenter {\n }\n \n impl Drop for _indenter {\n-    fn finalize(&self) { debug!(\"<<\"); }\n+    fn drop(&self) { debug!(\"<<\"); }\n }\n \n pub fn _indenter(_i: ()) -> _indenter {"}, {"sha": "9cac958a113f021aa6ad317d6e209afabd745146", "filename": "src/librustdoc/demo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustdoc%2Fdemo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibrustdoc%2Fdemo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdemo.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -128,7 +128,7 @@ struct Bored {\n }\n \n impl Drop for Bored {\n-  fn finalize(&self) { }\n+  fn drop(&self) { }\n }\n \n /**"}, {"sha": "04f2d815d081587b20d1ae3f0e932e771ffae19b", "filename": "src/libstd/condition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fcondition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fcondition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcondition.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -90,7 +90,7 @@ struct Guard<'self, T, U> {\n \n #[unsafe_destructor]\n impl<'self, T, U> Drop for Guard<'self, T, U> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             debug!(\"Guard: popping handler from TLS\");\n             let curr = local_data_pop(self.cond.key);"}, {"sha": "71a0dd6b9b2ab822a84496f374e5a0b9187b8982", "filename": "src/libstd/io.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -989,7 +989,7 @@ impl FILERes {\n }\n \n impl Drop for FILERes {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             libc::fclose(self.f);\n         }\n@@ -1234,7 +1234,7 @@ impl FdRes {\n }\n \n impl Drop for FdRes {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             libc::close(self.fd);\n         }\n@@ -1772,7 +1772,7 @@ pub mod fsync {\n \n     #[unsafe_destructor]\n     impl<T:Copy> Drop for Res<T> {\n-        fn finalize(&self) {\n+        fn drop(&self) {\n             match self.arg.opt_level {\n                 None => (),\n                 Some(level) => {"}, {"sha": "020131ab119e5080f2407d0851548c8f67e4b99b", "filename": "src/libstd/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fops.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@\n \n #[lang=\"drop\"]\n pub trait Drop {\n-    fn finalize(&self);  // FIXME(#4332): Rename to \"drop\"? --pcwalton\n+    fn drop(&self);\n }\n \n #[lang=\"add\"]"}, {"sha": "f3ea81f1ae5601ecca1e4078b70dd88f7cf2bfce", "filename": "src/libstd/option.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Foption.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -416,7 +416,7 @@ fn test_unwrap_resource() {\n \n     #[unsafe_destructor]\n     impl ::ops::Drop for R {\n-       fn finalize(&self) { *(self.i) += 1; }\n+       fn drop(&self) { *(self.i) += 1; }\n     }\n \n     fn R(i: @mut int) -> R {"}, {"sha": "661dc2a659f7422fecdaf930db92e6bbc6fcaca5", "filename": "src/libstd/pipes.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fpipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Fpipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpipes.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -309,7 +309,7 @@ struct BufferResource<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for BufferResource<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             // FIXME(#4330) Need self by value to get mutability.\n             let this: &mut BufferResource<T> = transmute_mut(self);\n@@ -672,7 +672,7 @@ pub struct SendPacketBuffered<T, Tbuffer> {\n \n #[unsafe_destructor]\n impl<T:Owned,Tbuffer:Owned> Drop for SendPacketBuffered<T,Tbuffer> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             let this: &mut SendPacketBuffered<T,Tbuffer> = transmute(self);\n             if this.p != None {\n@@ -730,7 +730,7 @@ pub struct RecvPacketBuffered<T, Tbuffer> {\n \n #[unsafe_destructor]\n impl<T:Owned,Tbuffer:Owned> Drop for RecvPacketBuffered<T,Tbuffer> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             let this: &mut RecvPacketBuffered<T,Tbuffer> = transmute(self);\n             if this.p != None {"}, {"sha": "75b1d8f38103d8c05b87b8a025d0878c0d8eac03", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -222,7 +222,7 @@ impl<T> Peekable<T> for PortOne<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for ChanOneHack<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         if self.suppress_finalize { return }\n \n         unsafe {\n@@ -249,7 +249,7 @@ impl<T> Drop for ChanOneHack<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for PortOneHack<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         if self.suppress_finalize { return }\n \n         unsafe {"}, {"sha": "c5c22f45159390340c8f8ac77a52f1320340361c", "filename": "src/libstd/rt/local_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Flocal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Flocal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Flocal_heap.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -57,7 +57,7 @@ impl LocalHeap {\n }\n \n impl Drop for LocalHeap {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             rust_delete_boxed_region(self.boxed_region);\n             rust_delete_memory_region(self.memory_region);"}, {"sha": "18a5dd4a1145d1fc287665d8aa98380134a7097d", "filename": "src/libstd/rt/rc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Frc.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -74,7 +74,7 @@ impl<T> RC<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for RC<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         assert!(self.refcount() > 0);\n \n         unsafe {"}, {"sha": "fbb516b2df40ce5637ac2e479a21edc0aec30181", "filename": "src/libstd/rt/stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fstack.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -49,7 +49,7 @@ impl StackSegment {\n }\n \n impl Drop for StackSegment {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             // XXX: Using the FFI to call a C macro. Slow\n             rust_valgrind_stack_deregister(self.valgrind_id);"}, {"sha": "f5f5aca71f55c6865cfa7c2d512fcd550822061d", "filename": "src/libstd/rt/task.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Ftask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Ftask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Ftask.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -103,7 +103,7 @@ impl Task {\n }\n \n impl Drop for Task {\n-    fn finalize(&self) { assert!(self.destroyed) }\n+    fn drop(&self) { assert!(self.destroyed) }\n }\n \n // Just a sanity check to make sure we are catching a Rust-thrown exception"}, {"sha": "98d08c060e02ced450bf0dc1acfc8402f01c2873", "filename": "src/libstd/rt/thread.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fthread.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -33,7 +33,7 @@ impl Thread {\n }\n \n impl Drop for Thread {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe { rust_raw_thread_join_delete(self.raw_thread) }\n     }\n }"}, {"sha": "15c405bae69527dd8cd4206b840c31a3f02483c5", "filename": "src/libstd/rt/uv/uvio.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuv%2Fuvio.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -47,7 +47,7 @@ impl UvEventLoop {\n }\n \n impl Drop for UvEventLoop {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         // XXX: Need mutable finalizer\n         let this = unsafe {\n             transmute::<&UvEventLoop, &mut UvEventLoop>(self)\n@@ -200,7 +200,7 @@ impl UvTcpListener {\n }\n \n impl Drop for UvTcpListener {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         let watcher = self.watcher();\n         let scheduler = Local::take::<Scheduler>();\n         do scheduler.deschedule_running_task_and_then |task| {\n@@ -261,7 +261,7 @@ impl UvTcpStream {\n }\n \n impl Drop for UvTcpStream {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         rtdebug!(\"closing tcp stream\");\n         let watcher = self.watcher();\n         let scheduler = Local::take::<Scheduler>();"}, {"sha": "0187ad3abf51751ce92ca3d47421bc0b48763759", "filename": "src/libstd/rt/uvio.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fuvio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frt%2Fuvio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fuvio.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -42,7 +42,7 @@ impl UvEventLoop {\n }\n \n impl Drop for UvEventLoop {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         // XXX: Need mutable finalizer\n         let this = unsafe {\n             transmute::<&UvEventLoop, &mut UvEventLoop>(self)\n@@ -164,7 +164,7 @@ impl UvTcpListener {\n }\n \n impl Drop for UvTcpListener {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         // XXX: Again, this never gets called. Use .close() instead\n         //self.watcher().as_stream().close(||());\n     }\n@@ -230,7 +230,7 @@ impl UvStream {\n }\n \n impl Drop for UvStream {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         rtdebug!(\"closing stream\");\n         //self.watcher().close(||());\n     }"}, {"sha": "08bb7ee72814cd260603415e91a2e12a547377d1", "filename": "src/libstd/run.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frun.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -428,7 +428,7 @@ impl Process {\n }\n \n impl Drop for Process {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         // FIXME(#4330) Need self by value to get mutability.\n         let mut_self: &mut Process = unsafe { cast::transmute(self) };\n "}, {"sha": "f0e3bda34ea43a076ea82d08a0f7a3e68f0902ca", "filename": "src/libstd/task/spawn.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Ftask%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Ftask%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftask%2Fspawn.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -317,7 +317,7 @@ struct TCB {\n \n impl Drop for TCB {\n     // Runs on task exit.\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             // FIXME(#4330) Need self by value to get mutability.\n             let this: &mut TCB = transmute(self);\n@@ -372,7 +372,7 @@ struct AutoNotify {\n }\n \n impl Drop for AutoNotify {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         let result = if self.failed { Failure } else { Success };\n         self.notify_chan.send(result);\n     }"}, {"sha": "45eced9846cea70f42df8e27e2f5692627b2d4fc", "filename": "src/libstd/unstable/atomics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fatomics.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -276,7 +276,7 @@ impl<T> AtomicOption<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for AtomicOption<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         // This will ensure that the contained data is\n         // destroyed, unless it's null.\n         unsafe {"}, {"sha": "9ea353969155fdc86f4ab727cba175510152c2a8", "filename": "src/libstd/unstable/dynamic_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fdynamic_lib.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -25,7 +25,7 @@ use result::*;\n pub struct DynamicLibrary { priv handle: *libc::c_void }\n \n impl Drop for DynamicLibrary {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         match do dl::check_for_errors_in {\n             unsafe {\n                 dl::close(self.handle)"}, {"sha": "10db664450ebf788e3676ab4580ba65f34d63f34", "filename": "src/libstd/unstable/finally.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Ffinally.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Ffinally.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Ffinally.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -64,7 +64,7 @@ struct Finallyalizer<'self> {\n \n #[unsafe_destructor]\n impl<'self> Drop for Finallyalizer<'self> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         (self.dtor)();\n     }\n }"}, {"sha": "4fde8f704b987e2bf33c6eebc9b138ebd3822a18", "filename": "src/libstd/unstable/global.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fglobal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fglobal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fglobal.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -147,7 +147,7 @@ struct GlobalState {\n }\n \n impl Drop for GlobalState {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         for self.map.each_value |v| {\n             match v {\n                 &(_, ref dtor) => (*dtor)()"}, {"sha": "0f9298595eec7ba20f0844dbf3f67b2643bc5cdb", "filename": "src/libstd/unstable/sync.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Funstable%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fsync.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -75,7 +75,7 @@ impl<T: Owned> Clone for UnsafeAtomicRcBox<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for UnsafeAtomicRcBox<T>{\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             do task::unkillable {\n                 let mut data: ~AtomicRcBoxData<T> = cast::transmute(self.data);\n@@ -102,7 +102,7 @@ struct LittleLock {\n }\n \n impl Drop for LittleLock {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             rust_destroy_little_lock(self.l);\n         }"}, {"sha": "6eddae17ce6f075c7544c71097181ab9deb27da2", "filename": "src/libstd/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibstd%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Futil.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -83,7 +83,7 @@ impl NonCopyable {\n }\n \n impl Drop for NonCopyable {\n-    fn finalize(&self) { }\n+    fn drop(&self) { }\n }\n \n "}, {"sha": "d8829da3b31b736bad9221b6e6bfb1f42be3f8f4", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -268,7 +268,7 @@ pub struct Parser {\n #[unsafe_destructor]\n impl Drop for Parser {\n     /* do not copy the parser; its state is tied to outside state */\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n impl Parser {"}, {"sha": "d4f6a1ec4040cf262000014d5f2a6ed9db493aef", "filename": "src/test/auxiliary/issue-2526.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fissue-2526.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-2526.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -21,7 +21,7 @@ struct arc_destruct<T> {\n \n #[unsafe_destructor]\n impl<T:Const> Drop for arc_destruct<T> {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn arc_destruct<T:Const>(data: int) -> arc_destruct<T> {\n@@ -45,7 +45,7 @@ struct context_res {\n }\n \n impl Drop for context_res {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn context_res() -> context_res {"}, {"sha": "9c9b3d9f243404ed95d6c538316a553a7269546e", "filename": "src/test/auxiliary/issue-3012-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue-3012-1.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ pub mod socket {\n     }\n \n     impl Drop for socket_handle {\n-        fn finalize(&self) {\n+        fn drop(&self) {\n             /* c::close(self.sockfd); */\n         }\n     }"}, {"sha": "ec5d8baf25900a4d13d6108f4095ce881db2203c", "filename": "src/test/auxiliary/issue2170lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fissue2170lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fissue2170lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fissue2170lib.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -16,7 +16,7 @@ pub struct rsrc {\n }\n \n impl Drop for rsrc {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         foo(self.x);\n     }\n }"}, {"sha": "cd72468511ea17418e8ba47d6ba623f079e39d3b", "filename": "src/test/auxiliary/moves_based_on_type_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fmoves_based_on_type_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fauxiliary%2Fmoves_based_on_type_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmoves_based_on_type_lib.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ pub struct S {\n }\n \n impl Drop for S {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"goodbye\");\n     }\n }"}, {"sha": "e245ab894f5bc6b2042f291ea30e7d687db576b3", "filename": "src/test/bench/task-perf-alloc-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Ftask-perf-alloc-unwind.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -60,7 +60,7 @@ struct r {\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn r(l: @nillist) -> r {"}, {"sha": "6353d7c6581b175ebfc2f3321777c983acc76c50", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-1.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct X { x: () }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "6ea5f85797f188c79b053520486c69caa8d0e6e4", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct X { x: (), }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "8f0642896f1e2ed9ecb1ac90e853f4c2453967c9", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-3.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct X { x: (), }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "859bf7bd26d9cbd3002c463387e9c3c05bd2c289", "filename": "src/test/compile-fail/bind-by-move-neither-can-live-while-the-other-survives-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-neither-can-live-while-the-other-survives-4.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct X { x: (), }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "3f96d568a55cde47fb6e8f604a72f64306209080", "filename": "src/test/compile-fail/bind-by-move-no-lvalues-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-1.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@\n struct X { x: (), }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "c17a444ce6e9ad3098cd1e9c247f2fcb783d43b7", "filename": "src/test/compile-fail/bind-by-move-no-lvalues-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-lvalues-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@\n struct X { x: (), }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "a1243dd01d9f7e8c26323d35e7c91103ad9871c1", "filename": "src/test/compile-fail/bind-by-move-no-sub-bindings.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-by-move-no-sub-bindings.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct X { x: (), }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"destructor runs\");\n     }\n }"}, {"sha": "c9b627f55f80362a08c65f8c4262fa2960a21bf5", "filename": "src/test/compile-fail/block-must-not-have-result-res.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fblock-must-not-have-result-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fblock-must-not-have-result-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblock-must-not-have-result-res.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@\n struct r;\n \n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         true\n     }\n }"}, {"sha": "98099360f3c71f404c06c39cb0fc27f42aa9e8a1", "filename": "src/test/compile-fail/borrowck-borrowed-uniq-rvalue-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck-borrowed-uniq-rvalue-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct defer<'self> {\n \n #[unsafe_destructor]\n impl<'self> Drop for defer<'self> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             error!(\"%?\", self.x);\n         }"}, {"sha": "f709ddc0e0d28448b59c31f70f226b9f15f356c7", "filename": "src/test/compile-fail/copy-a-resource.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcopy-a-resource.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct foo {\n }\n \n impl Drop for foo {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn foo(i:int) -> foo {"}, {"sha": "e550475d64f074c6ac4c5931cec5855356666205", "filename": "src/test/compile-fail/disallowed-deconstructing-destructing-struct-let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-let.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct X {\n }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"value: %s\", self.x);\n     }\n }"}, {"sha": "748114a4f12f6f99b3c35bda8b1e9237f325bd32", "filename": "src/test/compile-fail/disallowed-deconstructing-destructing-struct-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdisallowed-deconstructing-destructing-struct-match.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct X {\n }\n \n impl Drop for X {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"value: %s\", self.x);\n     }\n }"}, {"sha": "2eb58d49612318859552fb38566831f6c24f0c51", "filename": "src/test/compile-fail/drop-on-non-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdrop-on-non-struct.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -12,7 +12,7 @@ type Foo = @[u8];\n \n impl Drop for Foo {   //~ ERROR the Drop trait may only be implemented\n //~^ ERROR cannot provide an extension implementation\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"kaboom\");\n     }\n }"}, {"sha": "5ffc9ea08eda7b48f93322045dff27c621109fb7", "filename": "src/test/compile-fail/explicit-call-to-dtor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-dtor.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,12 +13,12 @@ struct Foo {\n }\n \n impl Drop for Foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"kaboom\");\n     }\n }\n \n fn main() {\n     let x = Foo { x: 3 };\n-    x.finalize();   //~ ERROR explicit call to destructor\n+    x.drop();   //~ ERROR explicit call to destructor\n }"}, {"sha": "ace31183d76a0a1f14d31a3a68ba460c55359075", "filename": "src/test/compile-fail/explicit-call-to-supertrait-dtor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-supertrait-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-supertrait-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexplicit-call-to-supertrait-dtor.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,14 +17,14 @@ trait Bar : Drop {\n }\n \n impl Drop for Foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"kaboom\");\n     }\n }\n \n impl Bar for Foo {\n     fn blah(&self) {\n-        self.finalize();    //~ ERROR explicit call to destructor\n+        self.drop();    //~ ERROR explicit call to destructor\n     }\n }\n "}, {"sha": "314f282355dbb296a4a8529de346ef51af00ce8a", "filename": "src/test/compile-fail/issue-2548.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2548.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -18,7 +18,7 @@ struct foo {\n \n #[unsafe_destructor]\n impl Drop for foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             println(\"Goodbye, World!\");\n             *self.x += 1;"}, {"sha": "7d1f64b9dd2d6e66ae68b3f73078f54526a252e8", "filename": "src/test/compile-fail/issue-2823.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fissue-2823.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fissue-2823.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-2823.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct C {\n }\n \n impl Drop for C {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"dropping: %?\", self.x);\n     }\n }"}, {"sha": "8eb110e6ce9b33282605e97d2848e9bb4a2fdc7e", "filename": "src/test/compile-fail/issue-3214.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3214.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ fn foo<T>() {\n     }\n \n     impl<T> Drop for foo<T> {\n-        fn finalize(&self) {}\n+        fn drop(&self) {}\n     }\n }\n fn main() { }"}, {"sha": "551b50c94f242d03085d01cf6da06ea9f663b8d2", "filename": "src/test/compile-fail/kindck-destructor-owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkindck-destructor-owned.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -3,7 +3,7 @@ struct Foo {\n }\n \n impl Drop for Foo { //~ ERROR cannot implement a destructor on a struct that is not Owned\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         *self.f = 10;\n     }\n }"}, {"sha": "1f5b600157f2dc136d243bcaaed22ea004e1f0a1", "filename": "src/test/compile-fail/no-send-res-ports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-send-res-ports.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -20,7 +20,7 @@ fn main() {\n \n     #[unsafe_destructor]\n     impl Drop for foo {\n-        fn finalize(&self) {}\n+        fn drop(&self) {}\n     }\n \n     fn foo(x: Port<()>) -> foo {"}, {"sha": "aa7100f0aad58fbf5dac5e0f12cd950271594339", "filename": "src/test/compile-fail/noncopyable-class.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnoncopyable-class.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct bar {\n }\n \n impl Drop for bar {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn bar(x:int) -> bar {"}, {"sha": "2e48992e81e8abcac35a458c6bfadb82bf318a22", "filename": "src/test/compile-fail/pinned-deep-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpinned-deep-copy.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct r {\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.i) = *(self.i) + 1;\n         }"}, {"sha": "c997ce2a2815280a3e65f2d654627fb13adb8300", "filename": "src/test/compile-fail/repeat-to-run-dtor-twice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frepeat-to-run-dtor-twice.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,7 +17,7 @@ struct Foo {\n }\n \n impl Drop for Foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"Goodbye!\");\n     }\n }"}, {"sha": "dacfd46604016892ea86e0abe2f9f606c256869a", "filename": "src/test/compile-fail/unique-object-noncopyable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-object-noncopyable.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,7 +17,7 @@ struct Bar {\n }\n \n impl Drop for Bar {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n impl Foo for Bar {"}, {"sha": "1deb850741e990c58f123681b58160ba58bf198e", "filename": "src/test/compile-fail/unique-pinned-nocopy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-pinned-nocopy.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn main() {"}, {"sha": "e231e5e503774c32f5f1fd0664ee92f704a96fae", "filename": "src/test/compile-fail/unique-vec-res.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funique-vec-res.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct r {\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.i) = *(self.i) + 1;\n         }"}, {"sha": "0622c028c631bb116bcbe6bc36104b2f75973780", "filename": "src/test/compile-fail/use-after-move-self-based-on-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-after-move-self-based-on-type.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -3,7 +3,7 @@ struct S {\n }\n \n impl Drop for S {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n impl S {"}, {"sha": "d881750bd3c24954c364036f89864530b060387c", "filename": "src/test/compile-fail/vec-res-add.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvec-res-add.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,7 +17,7 @@ struct r {\n fn r(i:int) -> r { r { i: i } }\n \n impl Drop for r {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn main() {"}, {"sha": "3e78fd1f7db5bb9544cd3311acab6ec4472e4323", "filename": "src/test/run-fail/issue-2061.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fissue-2061.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fissue-2061.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2061.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct R {\n }\n \n impl Drop for R {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         let _y = R { b: self.b };\n     }\n }"}, {"sha": "37bc3b6de8ac902ae0624dd2662d6ee0bb55a15f", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -44,7 +44,7 @@ struct and_then_get_big_again {\n }\n \n impl Drop for and_then_get_big_again {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         fn getbig(i: int) {\n             if i != 0 {\n                 getbig(i - 1);"}, {"sha": "4e059c5bd3c3f15be73489d3ad6ff8fed7787c71", "filename": "src/test/run-fail/morestack3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -30,7 +30,7 @@ struct and_then_get_big_again {\n }\n \n impl Drop for and_then_get_big_again {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         fn getbig(i: int) {\n             if i != 0 {\n                 getbig(i - 1);"}, {"sha": "db46438ea3c0f9c02b9735235eed105ce62dbc12", "filename": "src/test/run-fail/morestack4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -30,7 +30,7 @@ struct and_then_get_big_again {\n }\n \n impl Drop for and_then_get_big_again {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn and_then_get_big_again(x:int) -> and_then_get_big_again {"}, {"sha": "ee268f409a5e950fe58c0980822c2229b6972fff", "filename": "src/test/run-fail/rt-set-exit-status-fail2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -21,7 +21,7 @@ struct r {\n // failed has no effect and the process exits with the\n // runtime's exit code\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         os::set_exit_status(50);\n     }\n }"}, {"sha": "16d0fe346687c8627609356e6f2c08cb428cbb71", "filename": "src/test/run-fail/too-much-recursion-unwinding.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -24,7 +24,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             if !*(self.recursed) {\n                 *(self.recursed) = true;"}, {"sha": "7f022d5761c238c3f9e16796d34cabb00d04cc09", "filename": "src/test/run-fail/unwind-box-res.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-res.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -21,7 +21,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             let _v2: ~int = cast::transmute(self.v);\n         }"}, {"sha": "b4b0150013a509186fdb2eedd3891f2c7d935f4b", "filename": "src/test/run-fail/unwind-resource-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) { fail!(\"squirrel\") }\n+    fn drop(&self) { fail!(\"squirrel\") }\n }\n \n fn r(i: int) -> r { r { i: i } }"}, {"sha": "6ebb4a742c43c8aeea7fabb793f7b780ec8704ac", "filename": "src/test/run-fail/unwind-resource-fail2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -16,7 +16,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) { fail!(\"wombat\") }\n+    fn drop(&self) { fail!(\"wombat\") }\n }\n \n fn r(i: int) -> r { r { i: i } }"}, {"sha": "2de9d4cec77efe3eca0d0422a283849f7b9cbe06", "filename": "src/test/run-fail/unwind-resource-fail3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ fn faily_box(i: @int) -> faily_box { faily_box { i: i } }\n \n #[unsafe_destructor]\n impl Drop for faily_box {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         fail!(\"quux\");\n     }\n }"}, {"sha": "00a7955d834cbd59065dc65c4fb3506ae5398d88", "filename": "src/test/run-pass/attr-no-drop-flag-size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,7 +17,7 @@ struct Test<T> {\n \n #[unsafe_destructor]\n impl<T> Drop for Test<T> {\n-    fn finalize(&self) { }\n+    fn drop(&self) { }\n }\n \n fn main() {"}, {"sha": "c52371de54af05f7342c33ec08a23f8d4cfe926b", "filename": "src/test/run-pass/borrowck-unary-move-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fborrowck-unary-move-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fborrowck-unary-move-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-unary-move-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct noncopyable {\n }\n \n impl Drop for noncopyable {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"dropped\");\n     }\n }"}, {"sha": "108ae023e12ab76ce2097c8da17f4f38d43dc82a", "filename": "src/test/run-pass/class-attributes-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fclass-attributes-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fclass-attributes-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-attributes-1.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -16,7 +16,7 @@ struct cat {\n \n impl Drop for cat {\n     #[cat_dropper]\n-    fn finalize(&self) { error!(\"%s landed on hir feet\" , self . name); }\n+    fn drop(&self) { error!(\"%s landed on hir feet\" , self . name); }\n }\n \n "}, {"sha": "02279677276f2e7d4674702b3d6ac19f10e41df8", "filename": "src/test/run-pass/class-attributes-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fclass-attributes-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fclass-attributes-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-attributes-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,7 +17,7 @@ impl Drop for cat {\n     /**\n        Actually, cats don't always land on their feet when you drop them.\n     */\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"%s landed on hir feet\", self.name);\n     }\n }"}, {"sha": "c294670faa3d9591f605b283eee9f5921bcb429f", "filename": "src/test/run-pass/class-dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fclass-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fclass-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclass-dtor.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct cat {\n }\n \n impl Drop for cat {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         (self.done)(self.meows);\n     }\n }"}, {"sha": "557a153bce2395ba9e1c5054a37a9052100e1062", "filename": "src/test/run-pass/drop-trait-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fdrop-trait-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fdrop-trait-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-trait-generic.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct S<T> {\n \n #[unsafe_destructor]\n impl<T> ::std::ops::Drop for S<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"bye\");\n     }\n }"}, {"sha": "0ed5a27eb1948d5e2857584c4fcaac9fdaa107c5", "filename": "src/test/run-pass/drop-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fdrop-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fdrop-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdrop-trait.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct Foo {\n }\n \n impl Drop for Foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         println(\"bye\");\n     }\n }"}, {"sha": "cad6661bbce1be62a45b8e5c1d7754a4414c1889", "filename": "src/test/run-pass/init-res-into-things.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ struct Box { x: r }\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.i) = *(self.i) + 1;\n         }"}, {"sha": "0f9f1102aeac7aa74116e419a60262102610788c", "filename": "src/test/run-pass/issue-2487-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2487-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2487-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2487-a.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct socket {\n }\n \n impl Drop for socket {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n impl socket {"}, {"sha": "44ace16fb95ea5d62d23331f98800db0042efee1", "filename": "src/test/run-pass/issue-2708.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2708.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2708.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2708.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -16,7 +16,7 @@ struct Font {\n }\n \n impl Drop for Font {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn Font() -> Font {"}, {"sha": "9fbca7d05720d19a28ff7107a541f824322dabf5", "filename": "src/test/run-pass/issue-2718.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2718.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -160,7 +160,7 @@ pub mod pipes {\n \n     #[unsafe_destructor]\n     impl<T:Owned> Drop for send_packet<T> {\n-        fn finalize(&self) {\n+        fn drop(&self) {\n             unsafe {\n                 if self.p != None {\n                     let self_p: &mut Option<*packet<T>> =\n@@ -190,7 +190,7 @@ pub mod pipes {\n \n     #[unsafe_destructor]\n     impl<T:Owned> Drop for recv_packet<T> {\n-        fn finalize(&self) {\n+        fn drop(&self) {\n             unsafe {\n                 if self.p != None {\n                     let self_p: &mut Option<*packet<T>> ="}, {"sha": "b44d50921a5ea4b55076a3f8f9d426b313c019c2", "filename": "src/test/run-pass/issue-2735-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct defer {\n \n #[unsafe_destructor]\n impl Drop for defer {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         *self.b = true;\n     }\n }"}, {"sha": "902b2f69d614a1f4f3dd04b03ad0a87b4af3d8d8", "filename": "src/test/run-pass/issue-2735-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2735-3.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct defer {\n \n #[unsafe_destructor]\n impl Drop for defer {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         *self.b = true;\n     }\n }"}, {"sha": "a80a079b69514071568bca13b9bfb5219a9408b7", "filename": "src/test/run-pass/issue-2895.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2895.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-2895.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-2895.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ struct Kitty {\n }\n \n impl Drop for Kitty {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n #[cfg(target_arch = \"x86_64\")]"}, {"sha": "dce6d8f0bf1048fceac61d174f7cda304864456d", "filename": "src/test/run-pass/issue-3220.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-3220.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-3220.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3220.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct thing { x: int, }\n \n impl Drop for thing {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn thing() -> thing {"}, {"sha": "e574502a9fb7d5fdb1759bbbe1a23bcc39701fea", "filename": "src/test/run-pass/issue-3563-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-3563-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-3563-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3563-3.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -58,7 +58,7 @@ struct AsciiArt {\n }\n \n impl Drop for AsciiArt {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n // It's common to define a constructor sort of function to create struct instances."}, {"sha": "de1f630a245b876a92dcc12976904a196fc60d95", "filename": "src/test/run-pass/issue-4252.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-4252.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-4252.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4252.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -26,7 +26,7 @@ impl X for Y {\n }\n \n impl<T: X> Drop for Z<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         self.x.call(); // Adding this statement causes an ICE.\n     }\n }"}, {"sha": "3da90ba1edcb369ce7f56be35ba57a442abf7def", "filename": "src/test/run-pass/issue-4735.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-4735.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-4735.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4735.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ use std::libc::c_void;\n struct NonCopyable(*c_void);\n \n impl Drop for NonCopyable {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         let p = **self;\n         let v = unsafe { transmute::<*c_void, ~int>(p) };\n     }"}, {"sha": "29fc0744305849a27c29572ef80f0cc6dc21f849", "filename": "src/test/run-pass/issue-6341.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-6341.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-6341.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6341.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -12,7 +12,7 @@\n struct A { x: uint }\n \n impl Drop for A {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn main() {}\n\\ No newline at end of file"}, {"sha": "bb0c71d6d55c5fe62595b84db5174568ebe75138", "filename": "src/test/run-pass/issue-6344-let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-6344-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-6344-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6344-let.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -11,7 +11,7 @@\n struct A { x: uint }\n \n impl Drop for A {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn main() {"}, {"sha": "7987f9689faebfbbea606abe9f78bd50f6ab891e", "filename": "src/test/run-pass/issue-6344-match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-6344-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-6344-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6344-match.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -10,7 +10,7 @@\n struct A { x: uint }\n \n impl Drop for A {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn main() {"}, {"sha": "34a9055ae83490670ad2fccc8cf58f67380c6fde", "filename": "src/test/run-pass/issue-979.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-979.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fissue-979.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-979.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct r {\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.b) += 1;\n         }"}, {"sha": "b7fdfabff9ab2959879fd62e133276319e92e822", "filename": "src/test/run-pass/newtype-struct-drop-run.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fnewtype-struct-drop-run.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fnewtype-struct-drop-run.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-drop-run.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct Foo(@mut int);\n \n #[unsafe_destructor]\n impl Drop for Foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         ***self = 23;\n     }\n }"}, {"sha": "6062f3075e2024c197dd2a79240c9871fd291049", "filename": "src/test/run-pass/newtype-struct-with-dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fnewtype-struct-with-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fnewtype-struct-with-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnewtype-struct-with-dtor.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -4,7 +4,7 @@ use std::libc;\n pub struct Fd(c_int);\n \n impl Drop for Fd {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             libc::close(**self);\n         }"}, {"sha": "5c8cfd68240fb48a5f285cbb15d870aee68b15e0", "filename": "src/test/run-pass/option-unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Foption-unwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Foption-unwrap.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct dtor {\n \n #[unsafe_destructor]\n impl Drop for dtor {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         // abuse access to shared mutable state to write this code\n         unsafe {\n             *self.x -= 1;"}, {"sha": "65e0537dfb70440ce4256245aab59f4cfcba840c", "filename": "src/test/run-pass/pipe-presentation-examples.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpipe-presentation-examples.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -85,7 +85,7 @@ pub struct Buffer {\n }\n \n impl Drop for Buffer {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n proto! double_buffer ("}, {"sha": "112c6be560d6f58fc461da01bd766f4d72d1ab95", "filename": "src/test/run-pass/resource-assign-is-not-copy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-assign-is-not-copy.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct r {\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.i) += 1;\n         }"}, {"sha": "e48b841144a7601c275c23540a41f13a33a7424b", "filename": "src/test/run-pass/resource-cycle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -17,7 +17,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             debug!(\"r's dtor: self = %x, self.v = %x, self.v's value = %x\",\n               cast::transmute::<*r, uint>(self),"}, {"sha": "1a82e321bd7cf1ec8cc272161d3d3f9ed6f3b72f", "filename": "src/test/run-pass/resource-cycle2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -23,7 +23,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             let v2: ~int = cast::transmute(self.v.c);\n         }"}, {"sha": "1e0d8447aeb5521b5473b4e6c2b1766d288c4145", "filename": "src/test/run-pass/resource-cycle3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-cycle3.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -27,7 +27,7 @@ struct R {\n }\n \n impl Drop for R {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             let _v2: ~int = cast::transmute(self.v.c);\n             // let _v3: ~int = cast::transmute_copy(self.x);"}, {"sha": "7eac25535a8cfd76eeaabb8929e22220502a4097", "filename": "src/test/run-pass/resource-destruct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-destruct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-destruct.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct shrinky_pointer {\n \n #[unsafe_destructor]\n impl Drop for shrinky_pointer {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             error!(~\"Hello!\"); **(self.i) -= 1;\n         }"}, {"sha": "75d978b0d05281dccddda4b281fa985fb291fd06", "filename": "src/test/run-pass/resource-generic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-generic.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -18,7 +18,7 @@ struct finish<T> {\n \n #[unsafe_destructor]\n impl<T:Copy> Drop for finish<T> {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             (self.arg.fin)(copy self.arg.val);\n         }"}, {"sha": "836b49f9a1520429a091dfb72d8dc52a1d413212", "filename": "src/test/run-pass/resource-in-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fresource-in-struct.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -20,7 +20,7 @@ struct close_res {\n \n #[unsafe_destructor]\n impl Drop for close_res {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.i) = false;\n         }"}, {"sha": "e450e1f48c0180160bcf476f9b18e0bec66eda4c", "filename": "src/test/run-pass/send-resource.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fsend-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsend-resource.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -16,7 +16,7 @@ struct test {\n }\n \n impl Drop for test {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn test(f: int) -> test {"}, {"sha": "2fc6833242f28cdbb992c881ab9a2793074757a2", "filename": "src/test/run-pass/struct-literal-dtor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fstruct-literal-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fstruct-literal-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-literal-dtor.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -13,7 +13,7 @@ struct foo {\n }\n \n impl Drop for foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"%s\", self.x);\n     }\n }"}, {"sha": "aa37f5e9ce9bed5e847957f38c2ec8064e407613", "filename": "src/test/run-pass/task-killjoin-rsrc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin-rsrc.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -24,7 +24,7 @@ struct notify {\n \n #[unsafe_destructor]\n impl Drop for notify {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             error!(\"notify: task=%? v=%x unwinding=%b b=%b\",\n                    task::get_task(),"}, {"sha": "416e7bf82bb845a034a850208d49e42a00dcbdf7", "filename": "src/test/run-pass/type-param-constraints.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-param-constraints.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ struct r {\n }\n \n impl Drop for r {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn r(i:int) -> r {"}, {"sha": "b0ad7f50420a17ddf54df768f78961c9e353cb7a", "filename": "src/test/run-pass/unique-pinned-nocopy-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funique-pinned-nocopy-2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -14,7 +14,7 @@ struct r {\n \n #[unsafe_destructor]\n impl Drop for r {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *(self.i) = *(self.i) + 1;\n         }"}, {"sha": "41b971d64d023089ff76f66057955901bb508bb7", "filename": "src/test/run-pass/unit-like-struct-drop-run.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funit-like-struct-drop-run.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funit-like-struct-drop-run.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funit-like-struct-drop-run.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -16,7 +16,7 @@ use std::task;\n struct Foo;\n \n impl Drop for Foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         fail!(\"This failure should happen.\");\n     }\n }"}, {"sha": "450e81bee33d421d5db4fbe53f3418e88c2ea64c", "filename": "src/test/run-pass/unwind-resource.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ struct complainer {\n }\n \n impl Drop for complainer {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         error!(\"About to send!\");\n         self.c.send(true);\n         error!(\"Sent!\");"}, {"sha": "841fb37d29d50a945d9593e66f595d61b9d6fa59", "filename": "src/test/run-pass/unwind-resource2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Funwind-resource2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource2.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -19,7 +19,7 @@ struct complainer {\n \n #[unsafe_destructor]\n impl Drop for complainer {\n-    fn finalize(&self) {}\n+    fn drop(&self) {}\n }\n \n fn complainer(c: @int) -> complainer {"}, {"sha": "54626e52d23e0cc5bf39a8bfb3b374ac26a18c85", "filename": "src/test/run-pass/vec-slice-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca2966c6d04958241f13e61310298a5ff69061e2/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-slice-drop.rs?ref=ca2966c6d04958241f13e61310298a5ff69061e2", "patch": "@@ -15,7 +15,7 @@ struct foo {\n \n #[unsafe_destructor]\n impl Drop for foo {\n-    fn finalize(&self) {\n+    fn drop(&self) {\n         unsafe {\n             *self.x += 1;\n         }"}]}