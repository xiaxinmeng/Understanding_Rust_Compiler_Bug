{"sha": "a82890e67ba01057b95d7e2f910ae91226505a87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4Mjg5MGU2N2JhMDEwNTdiOTVkN2UyZjkxMGFlOTEyMjY1MDVhODc=", "commit": {"author": {"name": "Alex Ozdemir", "email": "aozdemir@hmc.edu", "date": "2017-05-18T03:29:58Z"}, "committer": {"name": "Alex Ozdemir", "email": "aozdemir@hmc.edu", "date": "2017-06-15T15:21:17Z"}, "message": "Clearer Error Message for Duplicate Definition\n\nClearer use of the error message and span labels to communicate\nduplicaiton defitions/imports.\n\nNew error format:\n\n```\nerror[E0428]: the name `Foo` is defined twice\n --> example.rs:2:1\n  |\n1 | trait Foo { }\n  | ------------- previous definition of the trait `Foo` here\n2 | struct Foo { }\n  | ^^^^^^^^^^^^^^ `Foo` redefined here\n  = note: `Foo` must be defined only once in the type namespace of this module\n\nerror: aborting due to previous error\n```", "tree": {"sha": "074cc431da6d4f2c133dd4d836174e90477260b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/074cc431da6d4f2c133dd4d836174e90477260b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a82890e67ba01057b95d7e2f910ae91226505a87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a82890e67ba01057b95d7e2f910ae91226505a87", "html_url": "https://github.com/rust-lang/rust/commit/a82890e67ba01057b95d7e2f910ae91226505a87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a82890e67ba01057b95d7e2f910ae91226505a87/comments", "author": {"login": "alex-ozdemir", "id": 5809398, "node_id": "MDQ6VXNlcjU4MDkzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5809398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-ozdemir", "html_url": "https://github.com/alex-ozdemir", "followers_url": "https://api.github.com/users/alex-ozdemir/followers", "following_url": "https://api.github.com/users/alex-ozdemir/following{/other_user}", "gists_url": "https://api.github.com/users/alex-ozdemir/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-ozdemir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-ozdemir/subscriptions", "organizations_url": "https://api.github.com/users/alex-ozdemir/orgs", "repos_url": "https://api.github.com/users/alex-ozdemir/repos", "events_url": "https://api.github.com/users/alex-ozdemir/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-ozdemir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alex-ozdemir", "id": 5809398, "node_id": "MDQ6VXNlcjU4MDkzOTg=", "avatar_url": "https://avatars.githubusercontent.com/u/5809398?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alex-ozdemir", "html_url": "https://github.com/alex-ozdemir", "followers_url": "https://api.github.com/users/alex-ozdemir/followers", "following_url": "https://api.github.com/users/alex-ozdemir/following{/other_user}", "gists_url": "https://api.github.com/users/alex-ozdemir/gists{/gist_id}", "starred_url": "https://api.github.com/users/alex-ozdemir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alex-ozdemir/subscriptions", "organizations_url": "https://api.github.com/users/alex-ozdemir/orgs", "repos_url": "https://api.github.com/users/alex-ozdemir/repos", "events_url": "https://api.github.com/users/alex-ozdemir/events{/privacy}", "received_events_url": "https://api.github.com/users/alex-ozdemir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "258ae6dd9b1a8ac97986852fc9f00f7687004ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/258ae6dd9b1a8ac97986852fc9f00f7687004ccb", "html_url": "https://github.com/rust-lang/rust/commit/258ae6dd9b1a8ac97986852fc9f00f7687004ccb"}], "stats": {"total": 309, "additions": 176, "deletions": 133}, "files": [{"sha": "62655725bbc2b340829632c07dede712b83c6573", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 39, "deletions": 23, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -3454,11 +3454,11 @@ impl<'a> Resolver<'a> {\n                        parent: Module,\n                        ident: Ident,\n                        ns: Namespace,\n-                       binding: &NameBinding,\n+                       new_binding: &NameBinding,\n                        old_binding: &NameBinding) {\n         // Error on the second of two conflicting names\n-        if old_binding.span.lo > binding.span.lo {\n-            return self.report_conflict(parent, ident, ns, old_binding, binding);\n+        if old_binding.span.lo > new_binding.span.lo {\n+            return self.report_conflict(parent, ident, ns, old_binding, new_binding);\n         }\n \n         let container = match parent.kind {\n@@ -3468,49 +3468,65 @@ impl<'a> Resolver<'a> {\n             _ => \"enum\",\n         };\n \n-        let (participle, noun) = match old_binding.is_import() {\n-            true => (\"imported\", \"import\"),\n-            false => (\"defined\", \"definition\"),\n+        let old_noun = match old_binding.is_import() {\n+            true => \"import\",\n+            false => \"definition\",\n         };\n \n-        let (name, span) = (ident.name, binding.span);\n+        let new_participle = match new_binding.is_import() {\n+            true => \"imported\",\n+            false => \"defined\",\n+        };\n+\n+        let (name, span) = (ident.name, new_binding.span);\n \n         if let Some(s) = self.name_already_seen.get(&name) {\n             if s == &span {\n                 return;\n             }\n         }\n \n-        let msg = {\n-            let kind = match (ns, old_binding.module()) {\n-                (ValueNS, _) => \"a value\",\n-                (MacroNS, _) => \"a macro\",\n-                (TypeNS, _) if old_binding.is_extern_crate() => \"an extern crate\",\n-                (TypeNS, Some(module)) if module.is_normal() => \"a module\",\n-                (TypeNS, Some(module)) if module.is_trait() => \"a trait\",\n-                (TypeNS, _) => \"a type\",\n-            };\n-            format!(\"{} named `{}` has already been {} in this {}\",\n-                    kind, name, participle, container)\n+        let old_kind = match (ns, old_binding.module()) {\n+            (ValueNS, _) => \"value\",\n+            (MacroNS, _) => \"macro\",\n+            (TypeNS, _) if old_binding.is_extern_crate() => \"extern crate\",\n+            (TypeNS, Some(module)) if module.is_normal() => \"module\",\n+            (TypeNS, Some(module)) if module.is_trait() => \"trait\",\n+            (TypeNS, _) => \"type\",\n+        };\n+\n+        let namespace = match ns {\n+            ValueNS => \"value\",\n+            MacroNS => \"macro\",\n+            TypeNS => \"type\",\n         };\n \n-        let mut err = match (old_binding.is_extern_crate(), binding.is_extern_crate()) {\n+        let msg = format!(\"the name `{}` is defined multiple times\", name);\n+\n+        let mut err = match (old_binding.is_extern_crate(), new_binding.is_extern_crate()) {\n             (true, true) => struct_span_err!(self.session, span, E0259, \"{}\", msg),\n-            (true, _) | (_, true) => match binding.is_import() && old_binding.is_import() {\n+            (true, _) | (_, true) => match new_binding.is_import() && old_binding.is_import() {\n                 true => struct_span_err!(self.session, span, E0254, \"{}\", msg),\n                 false => struct_span_err!(self.session, span, E0260, \"{}\", msg),\n             },\n-            _ => match (old_binding.is_import(), binding.is_import()) {\n+            _ => match (old_binding.is_import(), new_binding.is_import()) {\n                 (false, false) => struct_span_err!(self.session, span, E0428, \"{}\", msg),\n                 (true, true) => struct_span_err!(self.session, span, E0252, \"{}\", msg),\n                 _ => struct_span_err!(self.session, span, E0255, \"{}\", msg),\n             },\n         };\n \n-        err.span_label(span, format!(\"`{}` already {}\", name, participle));\n+        err.note(&format!(\"`{}` must be defined only once in the {} namespace of this {}\",\n+                          name,\n+                          namespace,\n+                          container));\n+\n+        err.span_label(span, format!(\"`{}` re{} here\", name, new_participle));\n         if old_binding.span != syntax_pos::DUMMY_SP {\n-            err.span_label(old_binding.span, format!(\"previous {} of `{}` here\", noun, name));\n+            err.span_label(old_binding.span, format!(\"previous {} of the {} `{}` here\",\n+                                                      old_noun, old_kind, name));\n         }\n+\n         err.emit();\n         self.name_already_seen.insert(name, span);\n     }"}, {"sha": "9bff1c57ae4e0d63ffd3ff965d7c2b3e6ae642a9", "filename": "src/test/compile-fail-fulldeps/proc-macro/shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail-fulldeps%2Fproc-macro%2Fshadow.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -13,6 +13,6 @@\n #[macro_use]\n extern crate derive_a;\n #[macro_use]\n-extern crate derive_a; //~ ERROR `derive_a` has already been imported\n+extern crate derive_a; //~ ERROR the name `derive_a` is defined multiple times\n \n fn main() {}"}, {"sha": "89227f6b0100c806144f0d4ba235f45075b5315d", "filename": "src/test/compile-fail/E0254.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0254.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0254.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0254.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -11,7 +11,7 @@\n #![feature(alloc)]\n \n extern crate alloc;\n-//~^ NOTE previous import of `alloc` here\n+//~^ NOTE previous import of the extern crate `alloc` here\n \n mod foo {\n     pub trait alloc {\n@@ -21,6 +21,7 @@ mod foo {\n \n use foo::alloc;\n //~^ ERROR E0254\n-//~| NOTE already imported\n+//~| NOTE `alloc` reimported here\n+//~| NOTE `alloc` must be defined only once in the type namespace of this module\n \n fn main() {}"}, {"sha": "60bcd2ae07649178489dec08000b35bb5ada526f", "filename": "src/test/compile-fail/E0259.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0259.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0259.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0259.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -11,10 +11,11 @@\n #![feature(alloc, libc)]\n \n extern crate alloc;\n-//~^ NOTE previous import of `alloc` here\n+//~^ NOTE previous import of the extern crate `alloc` here\n \n extern crate libc as alloc;\n //~^ ERROR E0259\n-//~| NOTE `alloc` already imported\n+//~| NOTE `alloc` reimported here\n+//~| NOTE `alloc` must be defined only once in the type namespace of this module\n \n fn main() {}"}, {"sha": "5e802bbbe3dda7dbdfb428068d399ef4749c45e3", "filename": "src/test/compile-fail/E0260.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0260.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0260.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0260.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -11,11 +11,12 @@\n #![feature(alloc)]\n \n extern crate alloc;\n-//~^ NOTE previous import of `alloc` here\n+//~^ NOTE previous import of the extern crate `alloc` here\n \n mod alloc {\n-//~^ ERROR `alloc` has already been imported in this module [E0260]\n-//~| NOTE `alloc` already imported\n+//~^ ERROR the name `alloc` is defined multiple times [E0260]\n+//~| NOTE `alloc` redefined here\n+//~| NOTE `alloc` must be defined only once in the type namespace of this module\n     pub trait MyTrait {\n         fn do_something();\n     }"}, {"sha": "4042219b5cc1a54528541fdcfb6e659528b0912c", "filename": "src/test/compile-fail/E0428.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0428.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2FE0428.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0428.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,9 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-struct Bar; //~ previous definition of `Bar` here\n+struct Bar; //~ previous definition of the type `Bar` here\n struct Bar; //~ ERROR E0428\n-            //~| NOTE already defined\n+            //~| NOTE `Bar` redefined here\n+            //~| NOTE `Bar` must be defined only once in the type namespace of this module\n \n fn main () {\n }"}, {"sha": "eeadecf627daecc00f9c535ce73e2a2bbaaa83fd", "filename": "src/test/compile-fail/blind-item-block-item-shadow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fblind-item-block-item-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fblind-item-block-item-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblind-item-block-item-shadow.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -14,6 +14,6 @@ fn main() {\n     {\n         struct Bar;\n         use foo::Bar;\n-        //~^ ERROR a type named `Bar` has already been defined in this block\n+        //~^ ERROR the name `Bar` is defined multiple times\n     }\n }"}, {"sha": "af3abe5e0569a98063adcf88653e5be1153d560c", "filename": "src/test/compile-fail/blind-item-item-shadow.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fblind-item-item-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fblind-item-item-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fblind-item-item-shadow.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,10 +8,11 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-mod foo { pub mod foo {  } } //~ NOTE previous definition of `foo` here\n+mod foo { pub mod foo {  } } //~ NOTE previous definition of the module `foo` here\n \n use foo::foo;\n-//~^ ERROR a module named `foo` has already been defined in this module\n-//~| `foo` already defined\n+//~^ ERROR the name `foo` is defined multiple times\n+//~| `foo` reimported here\n+//~| NOTE `foo` must be defined only once in the type namespace of this module\n \n fn main() {}"}, {"sha": "21b8ded6d9333224651b2642d5602b78b9dc21d9", "filename": "src/test/compile-fail/double-import.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdouble-import.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -19,8 +19,9 @@ mod sub2 {\n     pub fn foo() {} // implementation 2\n }\n \n-use sub1::foo; //~ NOTE previous import of `foo` here\n-use sub2::foo; //~ ERROR a value named `foo` has already been imported in this module [E0252]\n-               //~| NOTE already imported\n+use sub1::foo; //~ NOTE previous import of the value `foo` here\n+use sub2::foo; //~ ERROR the name `foo` is defined multiple times\n+               //~| NOTE `foo` reimported here\n+               //~| NOTE `foo` must be defined only once in the value namespace of this module\n \n fn main() {}"}, {"sha": "9629da735b0e8c8994d2146ed287a971d65ff5ac", "filename": "src/test/compile-fail/double-type-import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fdouble-type-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fdouble-type-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdouble-type-import.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -11,7 +11,7 @@\n mod foo {\n     pub use self::bar::X;\n     use self::bar::X;\n-    //~^ ERROR a type named `X` has already been imported in this module\n+    //~^ ERROR the name `X` is defined multiple times\n \n     mod bar {\n         pub struct X;"}, {"sha": "59b4d715c2dd3f58c5c552ea633695d2342ff538", "filename": "src/test/compile-fail/enum-and-module-in-same-scope.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fenum-and-module-in-same-scope.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,12 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-enum Foo { //~ NOTE previous definition of `Foo` here\n+enum Foo { //~ NOTE previous definition of the type `Foo` here\n     X\n }\n \n-mod Foo { //~ ERROR a type named `Foo` has already been defined\n-          //~| NOTE already defined\n+mod Foo { //~ ERROR the name `Foo` is defined multiple times\n+          //~| NOTE `Foo` redefined here\n+          //~| NOTE `Foo` must be defined only once in the type namespace of this module\n     pub static X: isize = 42;\n     fn f() { f() } // Check that this does not result in a resolution error\n }"}, {"sha": "4b2a64155e5d8fde9796c4d60a5ad6d3fef3907e", "filename": "src/test/compile-fail/imports/duplicate.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fimports%2Fduplicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fimports%2Fduplicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimports%2Fduplicate.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -21,9 +21,10 @@ mod c {\n }\n \n mod d {\n-    use a::foo; //~ NOTE previous import\n-    use a::foo; //~ ERROR `foo` has already been imported\n-                //~| NOTE already imported\n+    use a::foo; //~ NOTE previous import of the value `foo` here\n+    use a::foo; //~ ERROR the name `foo` is defined multiple times\n+                //~| NOTE `foo` reimported here\n+                //~| NOTE `foo` must be defined only once in the value namespace of this module\n }\n \n mod e {"}, {"sha": "7de16e5ecfeb2e87627698f31f523d5feb20fbf1", "filename": "src/test/compile-fail/issue-19498.rs", "status": "modified", "additions": 12, "deletions": 9, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-19498.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,16 +8,19 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use self::A; //~ NOTE previous import of `A` here\n-use self::B; //~ NOTE previous import of `B` here\n-mod A {} //~ ERROR a module named `A` has already been imported in this module\n-//~| `A` already imported\n-pub mod B {} //~ ERROR a module named `B` has already been imported in this module\n-//~| `B` already imported\n+use self::A; //~ NOTE previous import of the module `A` here\n+use self::B; //~ NOTE previous import of the module `B` here\n+mod A {} //~ ERROR the name `A` is defined multiple times\n+//~| `A` redefined here\n+//~| NOTE `A` must be defined only once in the type namespace of this module\n+pub mod B {} //~ ERROR the name `B` is defined multiple times\n+//~| `B` redefined here\n+//~| NOTE `B` must be defined only once in the type namespace of this module\n mod C {\n-    use C::D; //~ NOTE previous import of `D` here\n-    mod D {} //~ ERROR a module named `D` has already been imported in this module\n-    //~| `D` already imported\n+    use C::D; //~ NOTE previous import of the module `D` here\n+    mod D {} //~ ERROR the name `D` is defined multiple times\n+    //~| `D` redefined here\n+    //~| NOTE `D` must be defined only once in the type namespace of this module\n }\n \n fn main() {}"}, {"sha": "b7dbc7c7210cb3e386daa2ed3afeb78fa4ee73ea", "filename": "src/test/compile-fail/issue-21546.rs", "status": "modified", "additions": 24, "deletions": 18, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-21546.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -12,60 +12,66 @@\n \n #[allow(non_snake_case)]\n mod Foo { }\n-//~^ NOTE previous definition of `Foo` here\n+//~^ NOTE previous definition of the module `Foo` here\n \n #[allow(dead_code)]\n struct Foo;\n-//~^ ERROR a module named `Foo` has already been defined in this module\n-//~| NOTE already defined\n+//~^ ERROR the name `Foo` is defined multiple times\n+//~| NOTE `Foo` redefined here\n+//~| NOTE `Foo` must be defined only once in the type namespace of this module\n \n #[allow(non_snake_case)]\n mod Bar { }\n-//~^ NOTE previous definition of `Bar` here\n+//~^ NOTE previous definition of the module `Bar` here\n \n #[allow(dead_code)]\n struct Bar(i32);\n-//~^ ERROR a module named `Bar` has already been defined\n-//~| NOTE already defined\n+//~^ ERROR the name `Bar` is defined multiple times\n+//~| NOTE `Bar` redefined here\n+//~| NOTE `Bar` must be defined only once in the type namespace of this module\n \n \n #[allow(dead_code)]\n struct Baz(i32);\n-//~^ NOTE previous definition\n+//~^ NOTE previous definition of the type `Baz` here\n \n #[allow(non_snake_case)]\n mod Baz { }\n-//~^ ERROR a type named `Baz` has already been defined\n-//~| NOTE already defined\n+//~^ ERROR the name `Baz` is defined multiple times\n+//~| NOTE `Baz` redefined here\n+//~| NOTE `Baz` must be defined only once in the type namespace of this module\n \n \n #[allow(dead_code)]\n struct Qux { x: bool }\n-//~^ NOTE previous definition\n+//~^ NOTE previous definition of the type `Qux` here\n \n #[allow(non_snake_case)]\n mod Qux { }\n-//~^ ERROR a type named `Qux` has already been defined\n-//~| NOTE already defined\n+//~^ ERROR the name `Qux` is defined multiple times\n+//~| NOTE `Qux` redefined here\n+//~| NOTE `Qux` must be defined only once in the type namespace of this module\n \n \n #[allow(dead_code)]\n struct Quux;\n-//~^ NOTE previous definition\n+//~^ NOTE previous definition of the type `Quux` here\n \n #[allow(non_snake_case)]\n mod Quux { }\n-//~^ ERROR a type named `Quux` has already been defined\n-//~| NOTE already defined\n+//~^ ERROR the name `Quux` is defined multiple times\n+//~| NOTE `Quux` redefined here\n+//~| NOTE `Quux` must be defined only once in the type namespace of this module\n \n \n #[allow(dead_code)]\n enum Corge { A, B }\n-//~^ NOTE previous definition\n+//~^ NOTE previous definition of the type `Corge` here\n \n #[allow(non_snake_case)]\n mod Corge { }\n-//~^ ERROR a type named `Corge` has already been defined\n-//~| NOTE already defined\n+//~^ ERROR the name `Corge` is defined multiple times\n+//~| NOTE `Corge` redefined here\n+//~| NOTE `Corge` must be defined only once in the type namespace of this module\n \n fn main() { }"}, {"sha": "dc8fc01bbfcfa0291512c4b3ff56a332729e70a8", "filename": "src/test/compile-fail/issue-24081.rs", "status": "modified", "additions": 20, "deletions": 15, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-24081.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-24081.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-24081.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,21 +8,26 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::ops::Add; //~ NOTE previous import\n-use std::ops::Sub; //~ NOTE previous import\n-use std::ops::Mul; //~ NOTE previous import\n-use std::ops::Div; //~ NOTE previous import\n-use std::ops::Rem; //~ NOTE previous import\n+use std::ops::Add; //~ NOTE previous import of the trait `Add` here\n+use std::ops::Sub; //~ NOTE previous import of the trait `Sub` here\n+use std::ops::Mul; //~ NOTE previous import of the trait `Mul` here\n+use std::ops::Div; //~ NOTE previous import of the trait `Div` here\n+use std::ops::Rem; //~ NOTE previous import of the trait `Rem` here\n \n-type Add = bool; //~ ERROR a trait named `Add` has already been imported in this module\n-//~| `Add` already imported\n-struct Sub { x: f32 } //~ ERROR a trait named `Sub` has already been imported in this module\n-//~| `Sub` already imported\n-enum Mul { A, B } //~ ERROR a trait named `Mul` has already been imported in this module\n-//~| `Mul` already imported\n-mod Div { } //~ ERROR a trait named `Div` has already been imported in this module\n-//~| `Div` already imported\n-trait Rem {  } //~ ERROR a trait named `Rem` has already been imported in this module\n-//~| `Rem` already imported\n+type Add = bool; //~ ERROR the name `Add` is defined multiple times\n+//~| `Add` redefined here\n+//~| NOTE `Add` must be defined only once in the type namespace of this module\n+struct Sub { x: f32 } //~ ERROR the name `Sub` is defined multiple times\n+//~| `Sub` redefined here\n+//~| NOTE `Sub` must be defined only once in the type namespace of this module\n+enum Mul { A, B } //~ ERROR the name `Mul` is defined multiple times\n+//~| `Mul` redefined here\n+//~| NOTE `Mul` must be defined only once in the type namespace of this module\n+mod Div { } //~ ERROR the name `Div` is defined multiple times\n+//~| `Div` redefined here\n+//~| NOTE `Div` must be defined only once in the type namespace of this module\n+trait Rem {  } //~ ERROR the name `Rem` is defined multiple times\n+//~| `Rem` redefined here\n+//~| NOTE `Rem` must be defined only once in the type namespace of this module\n \n fn main() {}"}, {"sha": "7cfcbc5471a0686e6037b9c572acdd1fa4bb65b8", "filename": "src/test/compile-fail/issue-25396.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-25396.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-25396.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-25396.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -9,16 +9,16 @@\n // except according to those terms.\n \n use foo::baz;\n-use bar::baz; //~ ERROR a module named `baz` has already been imported\n+use bar::baz; //~ ERROR the name `baz` is defined multiple times\n \n use foo::Quux;\n-use bar::Quux; //~ ERROR a trait named `Quux` has already been imported\n+use bar::Quux; //~ ERROR the name `Quux` is defined multiple times\n \n use foo::blah;\n-use bar::blah; //~ ERROR a type named `blah` has already been imported\n+use bar::blah; //~ ERROR the name `blah` is defined multiple times\n \n use foo::WOMP;\n-use bar::WOMP; //~ ERROR a value named `WOMP` has already been imported\n+use bar::WOMP; //~ ERROR the name `WOMP` is defined multiple times\n \n fn main() {}\n "}, {"sha": "9b1950601961f9a0df23a83c4b4f6f25602d10ce", "filename": "src/test/compile-fail/issue-26886.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-26886.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-26886.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-26886.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,12 +8,14 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::sync::{self, Arc}; //~ NOTE previous import\n-                            //~^ NOTE previous import\n-use std::sync::Arc; //~ ERROR a type named\n-                    //~| NOTE already imported\n-use std::sync; //~ ERROR a module named\n-               //~| NOTE already imported\n+use std::sync::{self, Arc}; //~ NOTE previous import of the type `Arc` here\n+                            //~^ NOTE previous import of the module `sync` here\n+use std::sync::Arc; //~ ERROR the name `Arc` is defined multiple times\n+                    //~| NOTE `Arc` reimported here\n+                    //~| `Arc` must be defined only once in the type namespace of this module\n+use std::sync; //~ ERROR the name `sync` is defined multiple times\n+               //~| NOTE `sync` reimported here\n+               //~| `sync` must be defined only once in the type namespace of this module\n \n fn main() {\n }"}, {"sha": "837de8eddcf14c1300eba90ed16d117885fb2572", "filename": "src/test/compile-fail/issue-28472.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-28472.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-28472.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28472.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -13,10 +13,10 @@\n extern {\n   fn foo();\n \n-  pub //~ ERROR a value named `foo` has already been defined\n+  pub //~ ERROR the name `foo` is defined multiple times\n   fn foo();\n \n-  pub //~ ERROR a value named `foo` has already been defined\n+  pub //~ ERROR the name `foo` is defined multiple times\n   static mut foo: u32;\n }\n "}, {"sha": "db60d70ca9b5f05ac011252a3263c83fe278abde", "filename": "src/test/compile-fail/issue-3099-a.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-3099-a.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-3099-a.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099-a.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -10,6 +10,6 @@\n \n enum a { b, c }\n \n-enum a { d, e } //~ ERROR a type named `a` has already been defined in this module\n+enum a { d, e } //~ ERROR the name `a` is defined multiple times\n \n fn main() {}"}, {"sha": "956d2186752a94f8eb19ae1ab9de43082475d0ea", "filename": "src/test/compile-fail/issue-3099-b.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099-b.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -10,6 +10,6 @@\n \n pub mod a {}\n \n-pub mod a {} //~ ERROR a module named `a` has already been defined in this module\n+pub mod a {} //~ ERROR the name `a` is defined multiple times\n \n fn main() {}"}, {"sha": "42766533556d58ccedc6782921c047648ea792d9", "filename": "src/test/compile-fail/issue-3099.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-3099.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-3099.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-3099.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -12,7 +12,7 @@ fn a(x: String) -> String {\n     format!(\"First function with {}\", x)\n }\n \n-fn a(x: String, y: String) -> String { //~ ERROR a value named `a` has already been defined\n+fn a(x: String, y: String) -> String { //~ ERROR the name `a` is defined multiple times\n     format!(\"Second function with {} and {}\", x, y)\n }\n "}, {"sha": "8eb16edcbd3d341d8d3bb657ec1dc27cd63b51db", "filename": "src/test/compile-fail/issue-6936.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-6936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-6936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6936.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -12,17 +12,17 @@ struct T;\n \n mod t1 {\n     type Foo = ::T;\n-    mod Foo {} //~ ERROR: `Foo` has already been defined\n+    mod Foo {} //~ ERROR the name `Foo` is defined multiple times\n }\n \n mod t2 {\n     type Foo = ::T;\n-    struct Foo; //~ ERROR: `Foo` has already been defined\n+    struct Foo; //~ ERROR the name `Foo` is defined multiple times\n }\n \n mod t3 {\n     type Foo = ::T;\n-    enum Foo {} //~ ERROR: `Foo` has already been defined\n+    enum Foo {} //~ ERROR the name `Foo` is defined multiple times\n }\n \n mod t4 {\n@@ -32,7 +32,7 @@ mod t4 {\n \n mod t5 {\n     type Bar<T> = T;\n-    mod Bar {} //~ ERROR: `Bar` has already been defined\n+    mod Bar {} //~ ERROR the name `Bar` is defined multiple times\n }\n \n mod t6 {"}, {"sha": "9b72c249356952b266d28fe3049c3a8f31d08c33", "filename": "src/test/compile-fail/issue-7044.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-7044.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-7044.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-7044.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n static X: isize = 0;\n-struct X; //~ ERROR `X` has already been defined\n+struct X; //~ ERROR the name `X` is defined multiple times\n \n fn main() {}"}, {"sha": "c4ca3acf08061127f69b41bac162af4197ae28ba", "filename": "src/test/compile-fail/issue-8640.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-8640.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fissue-8640.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-8640.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -13,7 +13,7 @@\n mod foo {\n     use baz::bar;\n     mod bar {}\n-    //~^ ERROR a module named `bar` has already been imported\n+    //~^ ERROR the name `bar` is defined multiple times\n }\n mod baz { pub mod bar {} }\n "}, {"sha": "f384eafa34bdf44922f0210a3852472380691bfb", "filename": "src/test/compile-fail/no-std-inject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fno-std-inject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fno-std-inject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-std-inject.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -10,7 +10,7 @@\n \n #![no_std]\n \n-extern crate core; //~ ERROR: an extern crate named `core` has already\n+extern crate core; //~ ERROR: the name `core` is defined multiple times\n extern crate std;\n \n fn main() {}"}, {"sha": "87a17c0f19a6de64480064e5d0f9efe96941df04", "filename": "src/test/compile-fail/resolve-conflict-extern-crate-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-extern-crate-vs-extern-crate.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n extern crate std;\n-//~^ ERROR an extern crate named `std` has already been imported\n+//~^ ERROR the name `std` is defined multiple times\n \n fn main(){}"}, {"sha": "91cf1d359542c9acf6cd047c379f2499fb7c32bd", "filename": "src/test/compile-fail/resolve-conflict-import-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-extern-crate.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::slice as std; //~ ERROR an extern crate named `std` has already been imported\n+use std::slice as std; //~ ERROR the name `std` is defined multiple times\n \n fn main() {\n }"}, {"sha": "8db9023310ec8caba9ddcddb78f20bb2c12cd9e3", "filename": "src/test/compile-fail/resolve-conflict-import-vs-import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-import-vs-import.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -10,7 +10,7 @@\n \n use std::mem::transmute;\n use std::mem::transmute;\n-//~^ ERROR a value named `transmute` has already been imported\n+//~^ ERROR the name `transmute` is defined multiple times\n \n fn main() {\n }"}, {"sha": "b50a60d39c8b813dffcfdc90086822fb8e13235c", "filename": "src/test/compile-fail/resolve-conflict-item-vs-extern-crate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-extern-crate.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n fn std() {}\n-mod std {}    //~ ERROR an extern crate named `std` has already been imported\n+mod std {}    //~ ERROR the name `std` is defined multiple times\n \n fn main() {\n }"}, {"sha": "c91657bb46354b188e8a62fe159569cc1b93c523", "filename": "src/test/compile-fail/resolve-conflict-item-vs-import.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-item-vs-import.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -9,10 +9,11 @@\n // except according to those terms.\n \n use std::mem::transmute;\n-//~^ NOTE previous import of `transmute` here\n+//~^ NOTE previous import of the value `transmute` here\n \n fn transmute() {}\n-//~^ ERROR a value named `transmute` has already been imported in this module\n-//~| `transmute` already imported\n+//~^ ERROR the name `transmute` is defined multiple times\n+//~| `transmute` redefined here\n+//~| `transmute` must be defined only once in the value namespace of this module\n fn main() {\n }"}, {"sha": "bbb6ee622b164df3bf9b986d5cb2ded6ecb6a3e5", "filename": "src/test/compile-fail/resolve-conflict-type-vs-import.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fresolve-conflict-type-vs-import.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -11,7 +11,7 @@\n use std::slice::Iter;\n \n struct Iter;\n-//~^ ERROR a type named `Iter` has already been imported in this module\n+//~^ ERROR the name `Iter` is defined multiple times\n \n fn main() {\n }"}, {"sha": "b8e628dd47ad707ec3da797034f4d80504052d75", "filename": "src/test/compile-fail/trait-duplicate-methods.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrait-duplicate-methods.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -9,9 +9,10 @@\n // except according to those terms.\n \n trait Foo {\n-    fn orange(&self); //~ NOTE previous definition of `orange` here\n-    fn orange(&self); //~ ERROR a value named `orange` has already been defined in this trait\n-                      //~| NOTE already define\n+    fn orange(&self); //~ NOTE previous definition of the value `orange` here\n+    fn orange(&self); //~ ERROR the name `orange` is defined multiple times\n+                      //~| NOTE `orange` redefined here\n+//~| NOTE `orange` must be defined only once in the value namespace of this trait\n }\n \n fn main() {}"}, {"sha": "714b73ec739164c2869a66f28b57a22f436c61dc", "filename": "src/test/compile-fail/unresolved-extern-mod-suggestion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funresolved-extern-mod-suggestion.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -10,6 +10,6 @@\n \n extern crate core;\n use core;\n-//~^ ERROR an extern crate named `core` has already been imported in this module\n+//~^ ERROR the name `core` is defined multiple times\n \n fn main() {}"}, {"sha": "485a75f0f915f7f59ca9d2019a08e5496ab5e2ec", "filename": "src/test/compile-fail/use-mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fuse-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fuse-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-mod.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -11,12 +11,13 @@\n use foo::bar::{\n     self,\n //~^ ERROR `self` import can only appear once in the list\n-//~^^ NOTE previous import of `bar` here\n+//~^^ NOTE previous import of the module `bar` here\n     Bar,\n     self\n //~^ NOTE another `self` import appears here\n-//~| ERROR a module named `bar` has already been imported in this module\n-//~| NOTE already imported\n+//~| ERROR the name `bar` is defined multiple times\n+//~| NOTE `bar` reimported here\n+//~| NOTE `bar` must be defined only once in the type namespace of this module\n };\n \n use {self};"}, {"sha": "db69bb33ae253caad4bbd251c94d9aeacb4e2acb", "filename": "src/test/compile-fail/use-paths-as-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -14,6 +14,6 @@\n // Related issue: #25763\n \n use std::{mem, ptr};\n-use std::mem; //~ ERROR has already been imported\n+use std::mem; //~ ERROR the name `mem` is defined multiple times\n \n fn main() {}"}, {"sha": "58bfd91550e0b8816d6d598d243f6f885629a61a", "filename": "src/test/compile-fail/variant-namespacing.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a82890e67ba01057b95d7e2f910ae91226505a87/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fvariant-namespacing.rs?ref=a82890e67ba01057b95d7e2f910ae91226505a87", "patch": "@@ -32,12 +32,12 @@ const XUnit: u8 = 0;\n \n extern crate variant_namespacing;\n pub use variant_namespacing::XE::{XStruct, XTuple, XUnit};\n-//~^ ERROR `XStruct` has already been defined\n-//~| ERROR `XTuple` has already been defined\n-//~| ERROR `XUnit` has already been defined\n+//~^ ERROR the name `XStruct` is defined multiple times\n+//~| ERROR the name `XTuple` is defined multiple times\n+//~| ERROR the name `XUnit` is defined multiple times\n pub use E::{Struct, Tuple, Unit};\n-//~^ ERROR `Struct` has already been defined\n-//~| ERROR `Tuple` has already been defined\n-//~| ERROR `Unit` has already been defined\n+//~^ ERROR the name `Struct` is defined multiple times\n+//~| ERROR the name `Tuple` is defined multiple times\n+//~| ERROR the name `Unit` is defined multiple times\n \n fn main() {}"}]}