{"sha": "335fd6b456ac75f5a5bd34d71855dc892bdd8e2f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzNWZkNmI0NTZhYzc1ZjVhNWJkMzRkNzE4NTVkYzg5MmJkZDhlMmY=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-03-29T21:17:27Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-09T19:48:31Z"}, "message": "Use new utility in `eval_context`", "tree": {"sha": "795c3c404b028903d685caa10cb593e2d928e713", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/795c3c404b028903d685caa10cb593e2d928e713"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/335fd6b456ac75f5a5bd34d71855dc892bdd8e2f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/335fd6b456ac75f5a5bd34d71855dc892bdd8e2f", "html_url": "https://github.com/rust-lang/rust/commit/335fd6b456ac75f5a5bd34d71855dc892bdd8e2f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/335fd6b456ac75f5a5bd34d71855dc892bdd8e2f/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fcd1f5bc0a1090f295667dc0fdb7f238672b0302", "url": "https://api.github.com/repos/rust-lang/rust/commits/fcd1f5bc0a1090f295667dc0fdb7f238672b0302", "html_url": "https://github.com/rust-lang/rust/commit/fcd1f5bc0a1090f295667dc0fdb7f238672b0302"}], "stats": {"total": 19, "additions": 10, "deletions": 9}, "files": [{"sha": "e0b5f634bf3dfb38e4571bb76dbf1b22c0e8654e", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/335fd6b456ac75f5a5bd34d71855dc892bdd8e2f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/335fd6b456ac75f5a5bd34d71855dc892bdd8e2f/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=335fd6b456ac75f5a5bd34d71855dc892bdd8e2f", "patch": "@@ -24,6 +24,7 @@ use super::{\n     Immediate, MPlaceTy, Machine, MemPlace, MemPlaceMeta, Memory, OpTy, Operand, Place, PlaceTy,\n     ScalarMaybeUndef, StackPopJump,\n };\n+use crate::util::storage::AlwaysLiveLocals;\n \n pub struct InterpCx<'mir, 'tcx, M: Machine<'mir, 'tcx>> {\n     /// Stores the `Machine` instance.\n@@ -610,17 +611,17 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             // Now mark those locals as dead that we do not want to initialize\n             match self.tcx.def_kind(instance.def_id()) {\n                 // statics and constants don't have `Storage*` statements, no need to look for them\n+                //\n+                // FIXME: The above is likely untrue. See\n+                // <https://github.com/rust-lang/rust/pull/70004#issuecomment-602022110>. Is it\n+                // okay to ignore `StorageDead`/`StorageLive` annotations during CTFE?\n                 Some(DefKind::Static) | Some(DefKind::Const) | Some(DefKind::AssocConst) => {}\n                 _ => {\n-                    for block in body.basic_blocks() {\n-                        for stmt in block.statements.iter() {\n-                            use rustc_middle::mir::StatementKind::{StorageDead, StorageLive};\n-                            match stmt.kind {\n-                                StorageLive(local) | StorageDead(local) => {\n-                                    locals[local].value = LocalValue::Dead;\n-                                }\n-                                _ => {}\n-                            }\n+                    // Mark locals that use `Storage*` annotations as dead on function entry.\n+                    let always_live = AlwaysLiveLocals::new(self.body());\n+                    for local in locals.indices() {\n+                        if !always_live.contains(local) {\n+                            locals[local].value = LocalValue::Dead;\n                         }\n                     }\n                 }"}]}