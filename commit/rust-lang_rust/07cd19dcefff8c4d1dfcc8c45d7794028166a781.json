{"sha": "07cd19dcefff8c4d1dfcc8c45d7794028166a781", "node_id": "C_kwDOAAsO6NoAKDA3Y2QxOWRjZWZmZjhjNGQxZGZjYzhjNDVkNzc5NDAyODE2NmE3ODE", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-10-06T20:10:50Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-10-06T20:41:35Z"}, "message": "parser: fix parsing of macro call inside generic args", "tree": {"sha": "5b1926a9f8199dc9e64edebe76de8498dbcdcae8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b1926a9f8199dc9e64edebe76de8498dbcdcae8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07cd19dcefff8c4d1dfcc8c45d7794028166a781", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07cd19dcefff8c4d1dfcc8c45d7794028166a781", "html_url": "https://github.com/rust-lang/rust/commit/07cd19dcefff8c4d1dfcc8c45d7794028166a781", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07cd19dcefff8c4d1dfcc8c45d7794028166a781/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94fa49c0a33be4dd6ae41afb35b6f3033b01dfcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/94fa49c0a33be4dd6ae41afb35b6f3033b01dfcc", "html_url": "https://github.com/rust-lang/rust/commit/94fa49c0a33be4dd6ae41afb35b6f3033b01dfcc"}], "stats": {"total": 46, "additions": 43, "deletions": 3}, "files": [{"sha": "e414d39b8d71a38270d834a2d6a641fdd42105dd", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/07cd19dcefff8c4d1dfcc8c45d7794028166a781/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/07cd19dcefff8c4d1dfcc8c45d7794028166a781/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=07cd19dcefff8c4d1dfcc8c45d7794028166a781", "patch": "@@ -1761,9 +1761,9 @@ dependencies = [\n \n [[package]]\n name = \"ungrammar\"\n-version = \"1.14.5\"\n+version = \"1.14.6\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"395e988af2480b8a8118ad1d5f1f790197d332e3e2585231f742949b63080ef5\"\n+checksum = \"fb1cd6666863b2ff36bab1ced85c4b5e651638705f306f3cfad0a367f85ea715\"\n \n [[package]]\n name = \"unicase\""}, {"sha": "1148c6c35c59211c1e92bd52c5d0bdb4e7f56ece", "filename": "crates/parser/src/grammar/generic_args.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/07cd19dcefff8c4d1dfcc8c45d7794028166a781/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cd19dcefff8c4d1dfcc8c45d7794028166a781/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fgeneric_args.rs?ref=07cd19dcefff8c4d1dfcc8c45d7794028166a781", "patch": "@@ -32,7 +32,10 @@ fn generic_arg(p: &mut Parser) {\n         k if k.is_literal() => const_arg(p),\n         // test associated_type_bounds\n         // fn print_all<T: Iterator<Item, Item::Item, Item::<true>, Item: Display, Item<'a> = Item>>(printables: T) {}\n-        IDENT if [T![<], T![=], T![:]].contains(&p.nth(1)) => {\n+\n+        // test macro_inside_generic_arg\n+        // type A = Foo<syn::Token![_]>;\n+        IDENT if [T![<], T![=], T![:]].contains(&p.nth(1)) && !p.nth_at(1, T![::]) => {\n             let m = p.start();\n             name_ref(p);\n             opt_generic_arg_list(p, false);"}, {"sha": "37306ba6ac07cfacba8dc33ede5058bf4a47d5ad", "filename": "crates/syntax/test_data/parser/inline/ok/0194_macro_inside_generic_arg.rast", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/07cd19dcefff8c4d1dfcc8c45d7794028166a781/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_macro_inside_generic_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/07cd19dcefff8c4d1dfcc8c45d7794028166a781/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_macro_inside_generic_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_macro_inside_generic_arg.rast?ref=07cd19dcefff8c4d1dfcc8c45d7794028166a781", "patch": "@@ -0,0 +1,36 @@\n+SOURCE_FILE@0..30\n+  TYPE_ALIAS@0..29\n+    TYPE_KW@0..4 \"type\"\n+    WHITESPACE@4..5 \" \"\n+    NAME@5..6\n+      IDENT@5..6 \"A\"\n+    WHITESPACE@6..7 \" \"\n+    EQ@7..8 \"=\"\n+    WHITESPACE@8..9 \" \"\n+    PATH_TYPE@9..28\n+      PATH@9..28\n+        PATH_SEGMENT@9..28\n+          NAME_REF@9..12\n+            IDENT@9..12 \"Foo\"\n+          GENERIC_ARG_LIST@12..28\n+            L_ANGLE@12..13 \"<\"\n+            TYPE_ARG@13..27\n+              MACRO_TYPE@13..27\n+                MACRO_CALL@13..27\n+                  PATH@13..23\n+                    PATH@13..16\n+                      PATH_SEGMENT@13..16\n+                        NAME_REF@13..16\n+                          IDENT@13..16 \"syn\"\n+                    COLON2@16..18 \"::\"\n+                    PATH_SEGMENT@18..23\n+                      NAME_REF@18..23\n+                        IDENT@18..23 \"Token\"\n+                  BANG@23..24 \"!\"\n+                  TOKEN_TREE@24..27\n+                    L_BRACK@24..25 \"[\"\n+                    UNDERSCORE@25..26 \"_\"\n+                    R_BRACK@26..27 \"]\"\n+            R_ANGLE@27..28 \">\"\n+    SEMICOLON@28..29 \";\"\n+  WHITESPACE@29..30 \"\\n\""}, {"sha": "8d43a53d97f709cff18ddff90cd05809255644b8", "filename": "crates/syntax/test_data/parser/inline/ok/0194_macro_inside_generic_arg.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/07cd19dcefff8c4d1dfcc8c45d7794028166a781/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_macro_inside_generic_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cd19dcefff8c4d1dfcc8c45d7794028166a781/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_macro_inside_generic_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0194_macro_inside_generic_arg.rs?ref=07cd19dcefff8c4d1dfcc8c45d7794028166a781", "patch": "@@ -0,0 +1 @@\n+type A = Foo<syn::Token![_]>;"}]}