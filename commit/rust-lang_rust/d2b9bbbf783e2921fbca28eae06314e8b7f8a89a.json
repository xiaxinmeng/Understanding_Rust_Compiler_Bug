{"sha": "d2b9bbbf783e2921fbca28eae06314e8b7f8a89a", "node_id": "C_kwDOAAsO6NoAKGQyYjliYmJmNzgzZTI5MjFmYmNhMjhlYWUwNjMxNGU4YjdmOGE4OWE", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-20T04:13:49Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-20T04:13:49Z"}, "message": "Inline `Parser::nonterminal_may_begin_with`.", "tree": {"sha": "a1c2608a6efbec265789f8b9d52ae792e7e34da9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a1c2608a6efbec265789f8b9d52ae792e7e34da9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2b9bbbf783e2921fbca28eae06314e8b7f8a89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2b9bbbf783e2921fbca28eae06314e8b7f8a89a", "html_url": "https://github.com/rust-lang/rust/commit/d2b9bbbf783e2921fbca28eae06314e8b7f8a89a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2b9bbbf783e2921fbca28eae06314e8b7f8a89a/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9235db37ea7253d5cd668b0155efad39530ffdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9235db37ea7253d5cd668b0155efad39530ffdb", "html_url": "https://github.com/rust-lang/rust/commit/f9235db37ea7253d5cd668b0155efad39530ffdb"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "691bfdb01a43ebfef224e141869c992c1f0ce57a", "filename": "compiler/rustc_parse/src/parser/nonterminal.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d2b9bbbf783e2921fbca28eae06314e8b7f8a89a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fnonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2b9bbbf783e2921fbca28eae06314e8b7f8a89a/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fnonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fnonterminal.rs?ref=d2b9bbbf783e2921fbca28eae06314e8b7f8a89a", "patch": "@@ -11,8 +11,10 @@ use crate::parser::{FollowedByType, ForceCollect, NtOrTt, Parser, PathStyle};\n impl<'a> Parser<'a> {\n     /// Checks whether a non-terminal may begin with a particular token.\n     ///\n-    /// Returning `false` is a *stability guarantee* that such a matcher will *never* begin with that\n-    /// token. Be conservative (return true) if not sure.\n+    /// Returning `false` is a *stability guarantee* that such a matcher will *never* begin with\n+    /// that token. Be conservative (return true) if not sure. Inlined because it has a single call\n+    /// site.\n+    #[inline]\n     pub fn nonterminal_may_begin_with(kind: NonterminalKind, token: &Token) -> bool {\n         /// Checks whether the non-terminal may contain a single (non-keyword) identifier.\n         fn may_be_ident(nt: &token::Nonterminal) -> bool {"}]}