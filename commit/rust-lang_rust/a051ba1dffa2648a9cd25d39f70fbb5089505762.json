{"sha": "a051ba1dffa2648a9cd25d39f70fbb5089505762", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEwNTFiYTFkZmZhMjY0OGE5Y2QyNWQzOWY3MGZiYjUwODk1MDU3NjI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-03T08:07:16Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-13T22:03:45Z"}, "message": "libcore: use unboxed closures in the fields of `FlatMap`", "tree": {"sha": "12f3dc33ac13e67bda5302c0324eb330f1ab01cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12f3dc33ac13e67bda5302c0324eb330f1ab01cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a051ba1dffa2648a9cd25d39f70fbb5089505762", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a051ba1dffa2648a9cd25d39f70fbb5089505762", "html_url": "https://github.com/rust-lang/rust/commit/a051ba1dffa2648a9cd25d39f70fbb5089505762", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a051ba1dffa2648a9cd25d39f70fbb5089505762/comments", "author": null, "committer": null, "parents": [{"sha": "ba480cbf75387236a364961354b466cbee69146d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba480cbf75387236a364961354b466cbee69146d", "html_url": "https://github.com/rust-lang/rust/commit/ba480cbf75387236a364961354b466cbee69146d"}], "stats": {"total": 27, "additions": 17, "deletions": 10}, "files": [{"sha": "c0eae92949872135449f9e6ac5ba121f1ad53f94", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 17, "deletions": 10, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/a051ba1dffa2648a9cd25d39f70fbb5089505762/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a051ba1dffa2648a9cd25d39f70fbb5089505762/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=a051ba1dffa2648a9cd25d39f70fbb5089505762", "patch": "@@ -372,8 +372,10 @@ pub trait IteratorExt<A>: Iterator<A> {\n     /// ```\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n-    fn flat_map<'r, B, U: Iterator<B>>(self, f: |A|: 'r -> U)\n-        -> FlatMap<'r, A, Self, U> {\n+    fn flat_map<B, U, F>(self, f: F) -> FlatMap<A, B, Self, U, F> where\n+        U: Iterator<B>,\n+        F: FnMut(A) -> U,\n+    {\n         FlatMap{iter: self, f: f, frontiter: None, backiter: None }\n     }\n \n@@ -1864,15 +1866,19 @@ impl<A, B, I, St, F> Iterator<B> for Scan<A, B, I, St, F> where\n ///\n #[must_use = \"iterator adaptors are lazy and do nothing unless consumed\"]\n #[unstable = \"waiting for unboxed closures\"]\n-pub struct FlatMap<'a, A, T, U> {\n-    iter: T,\n-    f: |A|: 'a -> U,\n+pub struct FlatMap<A, B, I, U, F> where I: Iterator<A>, U: Iterator<B>, F: FnMut(A) -> U {\n+    iter: I,\n+    f: F,\n     frontiter: Option<U>,\n     backiter: Option<U>,\n }\n \n #[unstable = \"trait is unstable\"]\n-impl<'a, A, T: Iterator<A>, B, U: Iterator<B>> Iterator<B> for FlatMap<'a, A, T, U> {\n+impl<A, B, I, U, F> Iterator<B> for FlatMap<A, B, I, U, F> where\n+    I: Iterator<A>,\n+    U: Iterator<B>,\n+    F: FnMut(A) -> U,\n+{\n     #[inline]\n     fn next(&mut self) -> Option<B> {\n         loop {\n@@ -1901,10 +1907,11 @@ impl<'a, A, T: Iterator<A>, B, U: Iterator<B>> Iterator<B> for FlatMap<'a, A, T,\n }\n \n #[unstable = \"trait is unstable\"]\n-impl<'a,\n-     A, T: DoubleEndedIterator<A>,\n-     B, U: DoubleEndedIterator<B>> DoubleEndedIterator<B>\n-     for FlatMap<'a, A, T, U> {\n+impl<A, B, I, U, F> DoubleEndedIterator<B> for FlatMap<A, B, I, U, F> where\n+    I: DoubleEndedIterator<A>,\n+    U: DoubleEndedIterator<B>,\n+    F: FnMut(A) -> U,\n+{\n     #[inline]\n     fn next_back(&mut self) -> Option<B> {\n         loop {"}]}