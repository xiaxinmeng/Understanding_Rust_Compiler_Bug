{"sha": "10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwZDgyMTM3YjNmZTQ1YTNiMGYwYzFiZDkwODBlZTQ2YjUyNTlhYzE=", "commit": {"author": {"name": "Colin Wallace", "email": "colin@mooooo.ooo", "date": "2018-07-24T05:05:45Z"}, "committer": {"name": "Colin Wallace", "email": "colin@mooooo.ooo", "date": "2018-07-24T05:05:45Z"}, "message": "librustc: Prefer `Option::map`/etc over `match` where applicable", "tree": {"sha": "e619e8f0758072b4bd16293c0ac8cdacd53d4efc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e619e8f0758072b4bd16293c0ac8cdacd53d4efc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "html_url": "https://github.com/rust-lang/rust/commit/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/comments", "author": {"login": "Wallacoloo", "id": 1210751, "node_id": "MDQ6VXNlcjEyMTA3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1210751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wallacoloo", "html_url": "https://github.com/Wallacoloo", "followers_url": "https://api.github.com/users/Wallacoloo/followers", "following_url": "https://api.github.com/users/Wallacoloo/following{/other_user}", "gists_url": "https://api.github.com/users/Wallacoloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wallacoloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wallacoloo/subscriptions", "organizations_url": "https://api.github.com/users/Wallacoloo/orgs", "repos_url": "https://api.github.com/users/Wallacoloo/repos", "events_url": "https://api.github.com/users/Wallacoloo/events{/privacy}", "received_events_url": "https://api.github.com/users/Wallacoloo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Wallacoloo", "id": 1210751, "node_id": "MDQ6VXNlcjEyMTA3NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1210751?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Wallacoloo", "html_url": "https://github.com/Wallacoloo", "followers_url": "https://api.github.com/users/Wallacoloo/followers", "following_url": "https://api.github.com/users/Wallacoloo/following{/other_user}", "gists_url": "https://api.github.com/users/Wallacoloo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Wallacoloo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Wallacoloo/subscriptions", "organizations_url": "https://api.github.com/users/Wallacoloo/orgs", "repos_url": "https://api.github.com/users/Wallacoloo/repos", "events_url": "https://api.github.com/users/Wallacoloo/events{/privacy}", "received_events_url": "https://api.github.com/users/Wallacoloo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "727bd7de7e6332482ee2765d46bfd00d89386d4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/727bd7de7e6332482ee2765d46bfd00d89386d4b", "html_url": "https://github.com/rust-lang/rust/commit/727bd7de7e6332482ee2765d46bfd00d89386d4b"}], "stats": {"total": 39, "additions": 16, "deletions": 23}, "files": [{"sha": "e1395c3fa442723c2bba781ea5918aee35bd902d", "filename": "src/librustc/traits/on_unimplemented.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fon_unimplemented.rs?ref=10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "patch": "@@ -190,11 +190,10 @@ impl<'a, 'gcx, 'tcx> OnUnimplementedDirective {\n         for command in self.subcommands.iter().chain(Some(self)).rev() {\n             if let Some(ref condition) = command.condition {\n                 if !attr::eval_condition(condition, &tcx.sess.parse_sess, &mut |c| {\n-                    options.contains(&(c.name().as_str().to_string(),\n-                                      match c.value_str().map(|s| s.as_str().to_string()) {\n-                                          Some(s) => Some(s),\n-                                          None => None\n-                                      }))\n+                    options.contains(&(\n+                        c.name().as_str().to_string(),\n+                        c.value_str().map(|s| s.as_str().to_string())\n+                    ))\n                 }) {\n                     debug!(\"evaluate: skipping {:?} due to condition\", command);\n                     continue"}, {"sha": "c2795bae01029f4e27871d91441beecc8400a0d4", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 5, "deletions": 8, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "patch": "@@ -2697,15 +2697,12 @@ impl<'a, 'gcx, 'tcx> TyCtxt<'a, 'gcx, 'tcx> {\n             self.opt_associated_item(def_id)\n         };\n \n-        match item {\n-            Some(trait_item) => {\n-                match trait_item.container {\n-                    TraitContainer(_) => None,\n-                    ImplContainer(def_id) => Some(def_id),\n-                }\n+        item.and_then(|trait_item|\n+            match trait_item.container {\n+                TraitContainer(_) => None,\n+                ImplContainer(def_id) => Some(def_id),\n             }\n-            None => None\n-        }\n+        )\n     }\n \n     /// Looks up the span of `impl_did` if the impl is local; otherwise returns `Err`"}, {"sha": "42af5db82942aadb25b10a31ccf10733dfde08fa", "filename": "src/librustc_metadata/locator.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/src%2Flibrustc_metadata%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1/src%2Flibrustc_metadata%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Flocator.rs?ref=10d82137b3fe45a3b0f0c1bd9080ee46b5259ac1", "patch": "@@ -824,17 +824,14 @@ impl<'a> Context<'a> {\n         if rlib.is_none() && rmeta.is_none() && dylib.is_none() {\n             return None;\n         }\n-        match slot {\n-            Some((_, metadata)) => {\n-                Some(Library {\n-                    dylib,\n-                    rlib,\n-                    rmeta,\n-                    metadata,\n-                })\n+        slot.map(|(_, metadata)|\n+            Library {\n+                dylib,\n+                rlib,\n+                rmeta,\n+                metadata,\n             }\n-            None => None,\n-        }\n+        )\n     }\n }\n "}]}