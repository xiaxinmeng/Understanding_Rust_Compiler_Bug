{"sha": "e85c195174bb13616c155fd9871006c56aef0bc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4NWMxOTUxNzRiYjEzNjE2YzE1NWZkOTg3MTAwNmM1NmFlZjBiYzc=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-10T17:32:43Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-22T19:01:46Z"}, "message": "Derives for ast.", "tree": {"sha": "02efc898c26a4edb383edaae0e50399a4c5e634a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02efc898c26a4edb383edaae0e50399a4c5e634a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e85c195174bb13616c155fd9871006c56aef0bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e85c195174bb13616c155fd9871006c56aef0bc7", "html_url": "https://github.com/rust-lang/rust/commit/e85c195174bb13616c155fd9871006c56aef0bc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e85c195174bb13616c155fd9871006c56aef0bc7/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31298b41d65093b2ea260d8fe8820da6db6dac94", "url": "https://api.github.com/repos/rust-lang/rust/commits/31298b41d65093b2ea260d8fe8820da6db6dac94", "html_url": "https://github.com/rust-lang/rust/commit/31298b41d65093b2ea260d8fe8820da6db6dac94"}], "stats": {"total": 29, "additions": 4, "deletions": 25}, "files": [{"sha": "d849c2d6857631375d85713d0eb061a0e32b8ace", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e85c195174bb13616c155fd9871006c56aef0bc7/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85c195174bb13616c155fd9871006c56aef0bc7/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=e85c195174bb13616c155fd9871006c56aef0bc7", "patch": "@@ -119,10 +119,6 @@ impl<'a> HashStable<StableHashingContext<'a>> for hir::ImplItemId {\n     }\n }\n \n-impl_stable_hash_for!(struct ast::Label {\n-    ident\n-});\n-\n impl<'a> HashStable<StableHashingContext<'a>> for hir::Ty {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n         hcx.while_hashing_hir_bodies(true, |hcx| {"}, {"sha": "a30804c76e60c17e3a4f067ccf97d3f5c0769495", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e85c195174bb13616c155fd9871006c56aef0bc7/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85c195174bb13616c155fd9871006c56aef0bc7/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=e85c195174bb13616c155fd9871006c56aef0bc7", "patch": "@@ -125,23 +125,6 @@ impl<'ctx> syntax::StableHashingContextLike for StableHashingContext<'ctx> {\n     }\n }\n \n-impl_stable_hash_for!(enum ::syntax::ast::NestedMetaItem {\n-    MetaItem(meta_item),\n-    Literal(lit)\n-});\n-\n-impl_stable_hash_for!(struct ::syntax::ast::MetaItem {\n-    path,\n-    kind,\n-    span\n-});\n-\n-impl_stable_hash_for!(enum ::syntax::ast::MetaItemKind {\n-    Word,\n-    List(nested_items),\n-    NameValue(lit)\n-});\n-\n impl<'a> HashStable<StableHashingContext<'a>> for SourceFile {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n         let SourceFile {"}, {"sha": "57f2104e4a50f3eeab24d94ed32438ed3f9e3efe", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e85c195174bb13616c155fd9871006c56aef0bc7/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e85c195174bb13616c155fd9871006c56aef0bc7/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=e85c195174bb13616c155fd9871006c56aef0bc7", "patch": "@@ -55,7 +55,7 @@ mod tests;\n /// ```\n ///\n /// `'outer` is a label.\n-#[derive(Clone, RustcEncodable, RustcDecodable, Copy)]\n+#[derive(Clone, RustcEncodable, RustcDecodable, Copy, HashStable_Generic)]\n pub struct Label {\n     pub ident: Ident,\n }\n@@ -483,7 +483,7 @@ pub struct Crate {\n /// Possible values inside of compile-time attribute lists.\n ///\n /// E.g., the '..' in `#[name(..)]`.\n-#[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(Clone, RustcEncodable, RustcDecodable, Debug, HashStable_Generic)]\n pub enum NestedMetaItem {\n     /// A full MetaItem, for recursive meta items.\n     MetaItem(MetaItem),\n@@ -496,7 +496,7 @@ pub enum NestedMetaItem {\n /// A spanned compile-time attribute item.\n ///\n /// E.g., `#[test]`, `#[derive(..)]`, `#[rustfmt::skip]` or `#[feature = \"foo\"]`.\n-#[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(Clone, RustcEncodable, RustcDecodable, Debug, HashStable_Generic)]\n pub struct MetaItem {\n     pub path: Path,\n     pub kind: MetaItemKind,\n@@ -506,7 +506,7 @@ pub struct MetaItem {\n /// A compile-time attribute item.\n ///\n /// E.g., `#[test]`, `#[derive(..)]` or `#[feature = \"foo\"]`.\n-#[derive(Clone, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(Clone, RustcEncodable, RustcDecodable, Debug, HashStable_Generic)]\n pub enum MetaItemKind {\n     /// Word meta item.\n     ///"}]}