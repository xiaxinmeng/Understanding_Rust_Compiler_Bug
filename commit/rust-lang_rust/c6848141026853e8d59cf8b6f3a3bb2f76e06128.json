{"sha": "c6848141026853e8d59cf8b6f3a3bb2f76e06128", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2ODQ4MTQxMDI2ODUzZThkNTljZjhiNmYzYTNiYjJmNzZlMDYxMjg=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-12-04T18:04:21Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-03-15T07:26:13Z"}, "message": "rustc: don't support missing TLS TyCtxt in ty::print.", "tree": {"sha": "69640f5465b350a7c6cf54f6ecfd0fdd936d25c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69640f5465b350a7c6cf54f6ecfd0fdd936d25c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6848141026853e8d59cf8b6f3a3bb2f76e06128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6848141026853e8d59cf8b6f3a3bb2f76e06128", "html_url": "https://github.com/rust-lang/rust/commit/c6848141026853e8d59cf8b6f3a3bb2f76e06128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6848141026853e8d59cf8b6f3a3bb2f76e06128/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "852fc6d2b61e7b1f45f2679d025b824af70f89b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/852fc6d2b61e7b1f45f2679d025b824af70f89b1", "html_url": "https://github.com/rust-lang/rust/commit/852fc6d2b61e7b1f45f2679d025b824af70f89b1"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "5f46806e1599fc705eae9be5107836346c4346a3", "filename": "src/librustc/ty/print.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c6848141026853e8d59cf8b6f3a3bb2f76e06128/src%2Flibrustc%2Fty%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6848141026853e8d59cf8b6f3a3bb2f76e06128/src%2Flibrustc%2Fty%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fprint.rs?ref=c6848141026853e8d59cf8b6f3a3bb2f76e06128", "patch": "@@ -33,10 +33,9 @@ pub struct PrintContext {\n \n impl PrintContext {\n     pub(crate) fn new() -> Self {\n-        ty::tls::with_opt(|tcx| {\n-            let (is_verbose, identify_regions) = tcx.map(\n-                |tcx| (tcx.sess.verbose(), tcx.sess.opts.debugging_opts.identify_regions)\n-            ).unwrap_or((false, false));\n+        ty::tls::with(|tcx| {\n+            let (is_verbose, identify_regions) =\n+                (tcx.sess.verbose(), tcx.sess.opts.debugging_opts.identify_regions);\n             PrintContext {\n                 is_debug: false,\n                 is_verbose: is_verbose,"}]}