{"sha": "f80e454450c891c075617d23532c6eb317f4471d", "node_id": "C_kwDOAAsO6NoAKGY4MGU0NTQ0NTBjODkxYzA3NTYxN2QyMzUzMmM2ZWIzMTdmNDQ3MWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-24T22:32:57Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-24T22:32:57Z"}, "message": "Auto merge of #97372 - JohnTitor:rollup-6owv1v0, r=JohnTitor\n\nRollup of 6 pull requests\n\nSuccessful merges:\n\n - #93966 (document expectations for Waker::wake)\n - #97266 (Make weird name lints trigger behind cfg_attr)\n - #97355 (Remove unused brush image)\n - #97358 (Update minifier-rs version to 0.1.0)\n - #97363 (Fix a small mistake in `SliceIndex`'s documentation)\n - #97364 (Fix weird indentation in continue_keyword docs)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "a93506f2842b474173e0769c5661aa35500085a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a93506f2842b474173e0769c5661aa35500085a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f80e454450c891c075617d23532c6eb317f4471d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f80e454450c891c075617d23532c6eb317f4471d", "html_url": "https://github.com/rust-lang/rust/commit/f80e454450c891c075617d23532c6eb317f4471d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f80e454450c891c075617d23532c6eb317f4471d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "76761db5919b6d2e178b26947ad9b4fcb0ff0e7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/76761db5919b6d2e178b26947ad9b4fcb0ff0e7c", "html_url": "https://github.com/rust-lang/rust/commit/76761db5919b6d2e178b26947ad9b4fcb0ff0e7c"}, {"sha": "c3fea092080f83c06cfe9ed8841ff69d6f82a746", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3fea092080f83c06cfe9ed8841ff69d6f82a746", "html_url": "https://github.com/rust-lang/rust/commit/c3fea092080f83c06cfe9ed8841ff69d6f82a746"}], "stats": {"total": 304, "additions": 236, "deletions": 68}, "files": [{"sha": "f9f8362fb7e2a451265b514c0607e72294d25ae2", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -2224,12 +2224,6 @@ version = \"0.1.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"c41e0c4fef86961ac6d6f8a82609f55f31b05e4fce149ac5710e439df7619ba4\"\n \n-[[package]]\n-name = \"macro-utils\"\n-version = \"0.1.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0e72f7deb758fea9ea7d290aebfa788763d0bffae12caa6406a25baaf8fa68a8\"\n-\n [[package]]\n name = \"maplit\"\n version = \"1.0.2\"\n@@ -2361,12 +2355,9 @@ dependencies = [\n \n [[package]]\n name = \"minifier\"\n-version = \"0.0.43\"\n+version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d81352bda6f4d04af1720afaa762054f66e16caffd93c1f86461a1c0ac4e695e\"\n-dependencies = [\n- \"macro-utils\",\n-]\n+checksum = \"7071d17e2898e134cabf624f43cdefa0cedf57c739e964df3d0df9d028701a72\"\n \n [[package]]\n name = \"minimal-lexical\""}, {"sha": "2ab948958d04796d309d41bbca50b3866da6b19f", "filename": "compiler/rustc_lint/src/early.rs", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/compiler%2Frustc_lint%2Fsrc%2Fearly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fearly.rs?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -424,10 +424,25 @@ pub fn check_ast_node<'a>(\n     let mut passes: Vec<_> = passes.iter().map(|p| (p)()).collect();\n     let mut buffered = lint_buffer.unwrap_or_default();\n \n-    if !sess.opts.debugging_opts.no_interleave_lints {\n+    if sess.opts.debugging_opts.no_interleave_lints {\n+        for (i, pass) in passes.iter_mut().enumerate() {\n+            buffered =\n+                sess.prof.extra_verbose_generic_activity(\"run_lint\", pass.name()).run(|| {\n+                    early_lint_node(\n+                        sess,\n+                        !pre_expansion && i == 0,\n+                        lint_store,\n+                        registered_tools,\n+                        buffered,\n+                        EarlyLintPassObjects { lints: slice::from_mut(pass) },\n+                        check_node,\n+                    )\n+                });\n+        }\n+    } else {\n         buffered = early_lint_node(\n             sess,\n-            pre_expansion,\n+            !pre_expansion,\n             lint_store,\n             registered_tools,\n             buffered,\n@@ -446,21 +461,6 @@ pub fn check_ast_node<'a>(\n                 check_node,\n             );\n         }\n-    } else {\n-        for (i, pass) in passes.iter_mut().enumerate() {\n-            buffered =\n-                sess.prof.extra_verbose_generic_activity(\"run_lint\", pass.name()).run(|| {\n-                    early_lint_node(\n-                        sess,\n-                        pre_expansion && i == 0,\n-                        lint_store,\n-                        registered_tools,\n-                        buffered,\n-                        EarlyLintPassObjects { lints: slice::from_mut(pass) },\n-                        check_node,\n-                    )\n-                });\n-        }\n     }\n \n     // All of the buffered lints should have been emitted at this point."}, {"sha": "a067534b1893883c5715768d077a97df268f2afb", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -474,7 +474,7 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `unknown_lints` lint detects unrecognized lint attribute.\n+    /// The `unknown_lints` lint detects unrecognized lint attributes.\n     ///\n     /// ### Example\n     ///"}, {"sha": "fd7ecf3daf31604258bff8a3ff7eecc8b86fe457", "filename": "library/core/src/slice/index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/library%2Fcore%2Fsrc%2Fslice%2Findex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/library%2Fcore%2Fsrc%2Fslice%2Findex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Findex.rs?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -138,7 +138,7 @@ mod private_slice_index {\n /// A helper trait used for indexing operations.\n ///\n /// Implementations of this trait have to promise that if the argument\n-/// to `get_(mut_)unchecked` is a safe reference, then so is the result.\n+/// to `get_unchecked(_mut)` is a safe reference, then so is the result.\n #[stable(feature = \"slice_get_slice\", since = \"1.28.0\")]\n #[rustc_diagnostic_item = \"SliceIndex\"]\n #[rustc_on_unimplemented("}, {"sha": "87d4a25afd5867a00f5c54d63f1d6c3d180b3305", "filename": "library/core/src/task/wake.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fwake.rs?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -218,6 +218,19 @@ unsafe impl Sync for Waker {}\n \n impl Waker {\n     /// Wake up the task associated with this `Waker`.\n+    ///\n+    /// As long as the runtime keeps running and the task is not finished, it is\n+    /// guaranteed that each invocation of `wake` (or `wake_by_ref`) will be followed\n+    /// by at least one `poll` of the task to which this `Waker` belongs. This makes\n+    /// it possible to temporarily yield to other tasks while running potentially\n+    /// unbounded processing loops.\n+    ///\n+    /// Note that the above implies that multiple wake-ups may be coalesced into a\n+    /// single `poll` invocation by the runtime.\n+    ///\n+    /// Also note that yielding to competing tasks is not guaranteed: it is the\n+    /// executor\u2019s choice which task to run and the executor may choose to run the\n+    /// current task again.\n     #[inline]\n     #[stable(feature = \"futures_api\", since = \"1.36.0\")]\n     pub fn wake(self) {"}, {"sha": "6dcd55cc937eee7906cb608e5000397b89dc5023", "filename": "library/std/src/keyword_docs.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/library%2Fstd%2Fsrc%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fkeyword_docs.rs?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -70,7 +70,7 @@ mod as_keyword {}\n /// A break expression is normally associated with the innermost loop enclosing the\n /// `break` but a label can be used to specify which enclosing loop is affected.\n ///\n-///```rust\n+/// ```rust\n /// 'outer: for i in 1..=5 {\n ///     println!(\"outer iteration (i): {i}\");\n ///\n@@ -87,7 +87,7 @@ mod as_keyword {}\n ///     }\n /// }\n /// println!(\"Bye.\");\n-///```\n+/// ```\n ///\n /// When associated with `loop`, a break expression may be used to return a value from that loop.\n /// This is only valid with `loop` and not with any other type of loop.\n@@ -194,20 +194,20 @@ mod const_keyword {}\n /// When `continue` is encountered, the current iteration is terminated, returning control to the\n /// loop head, typically continuing with the next iteration.\n ///\n-///```rust\n+/// ```rust\n /// // Printing odd numbers by skipping even ones\n /// for number in 1..=10 {\n ///     if number % 2 == 0 {\n ///         continue;\n ///     }\n ///     println!(\"{number}\");\n /// }\n-///```\n+/// ```\n ///\n /// Like `break`, `continue` is normally associated with the innermost enclosing loop, but labels\n /// may be used to specify the affected loop.\n ///\n-///```rust\n+/// ```rust\n /// // Print Odd numbers under 30 with unit <= 5\n /// 'tens: for ten in 0..3 {\n ///     '_units: for unit in 0..=9 {\n@@ -220,7 +220,7 @@ mod const_keyword {}\n ///         println!(\"{}\", ten * 10 + unit);\n ///     }\n /// }\n-///```\n+/// ```\n ///\n /// See [continue expressions] from the reference for more details.\n ///"}, {"sha": "03ceb63168c063c0f970af3665bb800fcc0fad83", "filename": "src/librustdoc/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Flibrustdoc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Flibrustdoc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2FCargo.toml?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -11,7 +11,7 @@ arrayvec = { version = \"0.7\", default-features = false }\n askama = { version = \"0.11\", default-features = false, features = [\"config\"] }\n atty = \"0.2\"\n pulldown-cmark = { version = \"0.9\", default-features = false }\n-minifier = \"0.0.43\"\n+minifier = \"0.1.0\"\n serde = { version = \"1.0\", features = [\"derive\"] }\n serde_json = \"1.0\"\n smallvec = \"1.6.1\""}, {"sha": "ea266e856a9d8126541b0839a21a54ead0f91561", "filename": "src/librustdoc/html/static/images/brush.svg", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/76761db5919b6d2e178b26947ad9b4fcb0ff0e7c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fimages%2Fbrush.svg", "raw_url": "https://github.com/rust-lang/rust/raw/76761db5919b6d2e178b26947ad9b4fcb0ff0e7c/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fimages%2Fbrush.svg", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fimages%2Fbrush.svg?ref=76761db5919b6d2e178b26947ad9b4fcb0ff0e7c", "patch": "@@ -1 +0,0 @@\n-<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"1792\" height=\"1792\" viewBox=\"0 0 1792 1792\"><path d=\"M1615 0q70 0 122.5 46.5t52.5 116.5q0 63-45 151-332 629-465 752-97 91-218 91-126 0-216.5-92.5t-90.5-219.5q0-128 92-212l638-579q59-54 130-54zm-909 1034q39 76 106.5 130t150.5 76l1 71q4 213-129.5 347t-348.5 134q-123 0-218-46.5t-152.5-127.5-86.5-183-29-220q7 5 41 30t62 44.5 59 36.5 46 17q41 0 55-37 25-66 57.5-112.5t69.5-76 88-47.5 103-25.5 125-10.5z\"/></svg>\n\\ No newline at end of file"}, {"sha": "af9b8dedc73afaa6c82005016443327ad1d44621", "filename": "src/test/ui-fulldeps/lint-tool-test.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-tool-test.stderr?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -18,14 +18,6 @@ warning: lint name `test_group` is deprecated and may not have an effect in the\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n-warning: unknown lint: `this_lint_does_not_exist`\n-  --> $DIR/lint-tool-test.rs:36:8\n-   |\n-LL | #[deny(this_lint_does_not_exist)]\n-   |        ^^^^^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(unknown_lints)]` on by default\n-\n warning: lint name `test_lint` is deprecated and may not have an effect in the future.\n   --> $DIR/lint-tool-test.rs:9:23\n    |\n@@ -44,6 +36,14 @@ warning: lint name `test_group` is deprecated and may not have an effect in the\n LL | #[allow(test_group)]\n    |         ^^^^^^^^^^ help: change it to: `clippy::test_group`\n \n+warning: unknown lint: `this_lint_does_not_exist`\n+  --> $DIR/lint-tool-test.rs:36:8\n+   |\n+LL | #[deny(this_lint_does_not_exist)]\n+   |        ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: `#[warn(unknown_lints)]` on by default\n+\n warning: use of deprecated attribute `plugin`: compiler plugins are deprecated. See https://github.com/rust-lang/rust/pull/64675\n   --> $DIR/lint-tool-test.rs:6:1\n    |"}, {"sha": "06e1bd84c8ba25c3767b809782d0aeda602a2637", "filename": "src/test/ui/feature-gates/issue-43106-gating-of-builtin-attrs.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fissue-43106-gating-of-builtin-attrs.stderr?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -1,3 +1,17 @@\n+warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n+   |\n+LL |     mod inner { #![macro_escape] }\n+   |                 ^^^^^^^^^^^^^^^^\n+   |\n+   = help: try an outer attribute: `#[macro_use]`\n+\n+warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n+  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n+   |\n+LL | #[macro_escape]\n+   | ^^^^^^^^^^^^^^^\n+\n warning: unknown lint: `x5400`\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:46:9\n    |\n@@ -172,20 +186,6 @@ warning: unknown lint: `x5100`\n LL |     #[deny(x5100)] impl S { }\n    |            ^^^^^\n \n-warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:401:17\n-   |\n-LL |     mod inner { #![macro_escape] }\n-   |                 ^^^^^^^^^^^^^^^^\n-   |\n-   = help: try an outer attribute: `#[macro_use]`\n-\n-warning: `#[macro_escape]` is a deprecated synonym for `#[macro_use]`\n-  --> $DIR/issue-43106-gating-of-builtin-attrs.rs:398:1\n-   |\n-LL | #[macro_escape]\n-   | ^^^^^^^^^^^^^^^\n-\n warning: use of deprecated attribute `crate_id`: no longer used.\n   --> $DIR/issue-43106-gating-of-builtin-attrs.rs:85:1\n    |"}, {"sha": "a2581658920b9e2195281c84d0955b89ac40ceff", "filename": "src/test/ui/lint/issue-97094.interleaved.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Fissue-97094.interleaved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Fissue-97094.interleaved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-97094.interleaved.stderr?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -0,0 +1,53 @@\n+error: unknown lint: `nonex_lint_top_level`\n+  --> $DIR/issue-97094.rs:14:26\n+   |\n+LL | #![cfg_attr(all(), allow(nonex_lint_top_level))]\n+   |                          ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-97094.rs:10:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(unknown_lints)]` implied by `#[deny(warnings)]`\n+\n+error: lint `bare_trait_object` has been renamed to `bare_trait_objects`\n+  --> $DIR/issue-97094.rs:16:26\n+   |\n+LL | #![cfg_attr(all(), allow(bare_trait_object))]\n+   |                          ^^^^^^^^^^^^^^^^^ help: use the new name: `bare_trait_objects`\n+   |\n+   = note: `#[deny(renamed_and_removed_lints)]` implied by `#[deny(warnings)]`\n+\n+error: unknown lint: `nonex_lint_mod`\n+  --> $DIR/issue-97094.rs:19:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_mod))]\n+   |                         ^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_mod_inner`\n+  --> $DIR/issue-97094.rs:22:30\n+   |\n+LL |     #![cfg_attr(all(), allow(nonex_lint_mod_inner))]\n+   |                              ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:26:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_fn))]\n+   |                         ^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_in_macro`\n+  --> $DIR/issue-97094.rs:37:29\n+   |\n+LL |     #[cfg_attr(all(), allow(nonex_lint_in_macro))]\n+   |                             ^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:56:13\n+   |\n+LL |     #[allow(nonex_lint_fn)]\n+   |             ^^^^^^^^^^^^^\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "a2581658920b9e2195281c84d0955b89ac40ceff", "filename": "src/test/ui/lint/issue-97094.nointerleaved.stderr", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Fissue-97094.nointerleaved.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Fissue-97094.nointerleaved.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-97094.nointerleaved.stderr?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -0,0 +1,53 @@\n+error: unknown lint: `nonex_lint_top_level`\n+  --> $DIR/issue-97094.rs:14:26\n+   |\n+LL | #![cfg_attr(all(), allow(nonex_lint_top_level))]\n+   |                          ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: the lint level is defined here\n+  --> $DIR/issue-97094.rs:10:9\n+   |\n+LL | #![deny(warnings)]\n+   |         ^^^^^^^^\n+   = note: `#[deny(unknown_lints)]` implied by `#[deny(warnings)]`\n+\n+error: lint `bare_trait_object` has been renamed to `bare_trait_objects`\n+  --> $DIR/issue-97094.rs:16:26\n+   |\n+LL | #![cfg_attr(all(), allow(bare_trait_object))]\n+   |                          ^^^^^^^^^^^^^^^^^ help: use the new name: `bare_trait_objects`\n+   |\n+   = note: `#[deny(renamed_and_removed_lints)]` implied by `#[deny(warnings)]`\n+\n+error: unknown lint: `nonex_lint_mod`\n+  --> $DIR/issue-97094.rs:19:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_mod))]\n+   |                         ^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_mod_inner`\n+  --> $DIR/issue-97094.rs:22:30\n+   |\n+LL |     #![cfg_attr(all(), allow(nonex_lint_mod_inner))]\n+   |                              ^^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:26:25\n+   |\n+LL | #[cfg_attr(all(), allow(nonex_lint_fn))]\n+   |                         ^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_in_macro`\n+  --> $DIR/issue-97094.rs:37:29\n+   |\n+LL |     #[cfg_attr(all(), allow(nonex_lint_in_macro))]\n+   |                             ^^^^^^^^^^^^^^^^^^^\n+\n+error: unknown lint: `nonex_lint_fn`\n+  --> $DIR/issue-97094.rs:56:13\n+   |\n+LL |     #[allow(nonex_lint_fn)]\n+   |             ^^^^^^^^^^^^^\n+\n+error: aborting due to 7 previous errors\n+"}, {"sha": "aeaead1bd11bd5577b126633c2f0e601112e71da", "filename": "src/test/ui/lint/issue-97094.rs", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Fissue-97094.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Fissue-97094.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fissue-97094.rs?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -0,0 +1,59 @@\n+// revisions: interleaved nointerleaved\n+// [nointerleaved]compile-flags: -Z no-interleave-lints\n+\n+// This test has two revisions because the logic change\n+// needed to make this test pass had to be adjusted\n+// for no-interleave-lints. Should the debug option\n+// be removed one day, please don't remove this\n+// test entirely, just remove the revision from it.\n+\n+#![deny(warnings)]\n+\n+// Ensure that unknown lints inside cfg-attr's are linted for\n+\n+#![cfg_attr(all(), allow(nonex_lint_top_level))]\n+//~^ ERROR unknown lint\n+#![cfg_attr(all(), allow(bare_trait_object))]\n+//~^ ERROR has been renamed\n+\n+#[cfg_attr(all(), allow(nonex_lint_mod))]\n+//~^ ERROR unknown lint\n+mod baz {\n+    #![cfg_attr(all(), allow(nonex_lint_mod_inner))]\n+    //~^ ERROR unknown lint\n+}\n+\n+#[cfg_attr(all(), allow(nonex_lint_fn))]\n+//~^ ERROR unknown lint\n+pub fn main() {}\n+\n+macro_rules! bar {\n+    ($($t:tt)*) => {\n+        $($t)*\n+    };\n+}\n+\n+bar!(\n+    #[cfg_attr(all(), allow(nonex_lint_in_macro))]\n+    //~^ ERROR unknown lint\n+    pub fn _bar() {}\n+);\n+\n+// No warning for non-applying cfg\n+#[cfg_attr(any(), allow(nonex_lint_fn))]\n+pub fn _foo() {}\n+\n+// Allowing unknown lints works if inside cfg_attr\n+#[cfg_attr(all(), allow(unknown_lints))]\n+mod bar_allowed {\n+    #[allow(nonex_lint_fn)]\n+    fn _foo() {}\n+}\n+\n+// ... but not if the cfg_attr doesn't evaluate\n+#[cfg_attr(any(), allow(unknown_lints))]\n+mod bar_not_allowed {\n+    #[allow(nonex_lint_fn)]\n+    //~^ ERROR unknown lint\n+    fn _foo() {}\n+}"}, {"sha": "5521af17c84128e11ec70c02df890d25937a53f4", "filename": "src/test/ui/lint/reasons-erroneous.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f80e454450c891c075617d23532c6eb317f4471d/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Freasons-erroneous.stderr?ref=f80e454450c891c075617d23532c6eb317f4471d", "patch": "@@ -58,14 +58,6 @@ error[E0452]: malformed lint attribute input\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n-warning: unknown lint: `reason`\n-  --> $DIR/reasons-erroneous.rs:50:39\n-   |\n-LL | #![warn(missing_copy_implementations, reason)]\n-   |                                       ^^^^^^\n-   |\n-   = note: `#[warn(unknown_lints)]` on by default\n-\n error[E0452]: malformed lint attribute input\n   --> $DIR/reasons-erroneous.rs:3:58\n    |\n@@ -126,6 +118,14 @@ error[E0452]: malformed lint attribute input\n LL | #![warn(keyword_idents, reason = \"root in rubble\", macro_use_extern_crate)]\n    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^ reason in lint attribute must come last\n \n+warning: unknown lint: `reason`\n+  --> $DIR/reasons-erroneous.rs:50:39\n+   |\n+LL | #![warn(missing_copy_implementations, reason)]\n+   |                                       ^^^^^^\n+   |\n+   = note: `#[warn(unknown_lints)]` on by default\n+\n error: aborting due to 20 previous errors; 1 warning emitted\n \n For more information about this error, try `rustc --explain E0452`."}]}