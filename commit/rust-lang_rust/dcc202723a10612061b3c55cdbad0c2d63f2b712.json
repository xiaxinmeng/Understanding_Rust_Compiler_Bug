{"sha": "dcc202723a10612061b3c55cdbad0c2d63f2b712", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjYzIwMjcyM2ExMDYxMjA2MWIzYzU1Y2RiYWQwYzJkNjNmMmI3MTI=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2020-08-20T14:56:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-20T14:56:19Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Wesley Wiser <wwiser@gmail.com>", "tree": {"sha": "a3d558f8ee1a5c352b32647be3f105338d2a48cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3d558f8ee1a5c352b32647be3f105338d2a48cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcc202723a10612061b3c55cdbad0c2d63f2b712", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfPo8TCRBK7hj4Ov3rIwAAdHIIADuoaygOFqpV4tYMBv09DnLT\n666EmMSr7CMU0LAdC9/jUmJHVn/whuKe8IAOITFxAGzYSHjBt5nYRvWicslvnMcC\nn2skx952C2iJDZ0faygWqx5FCijaweWbeNjHpHqoyx6ez0dyD1mpnV7NY6gtbVfq\nZR+r3iVOLcyT6Gg2W9l7lIkvcOiSpBJDOvtleZUfyk7Ct1p2CYyJzkXt+DOv+anP\nqThV19/9iM8zAaDGohxT38vPgazIDDKUQ5RdT8zSBSsFKFFb8CppFSWO++2nieCX\ngi+s+tzgAkigr3U24RmAxd+jXmcVegxbwp4pHWyyDRaXiyHjDnsmMvPf8P1JclM=\n=oyj9\n-----END PGP SIGNATURE-----\n", "payload": "tree a3d558f8ee1a5c352b32647be3f105338d2a48cc\nparent f0bae6726f3b68ec80cabcb3fa66e460b715eb0b\nauthor Oliver Scherer <github35764891676564198441@oli-obk.de> 1597935379 +0200\ncommitter GitHub <noreply@github.com> 1597935379 +0200\n\nApply suggestions from code review\n\nCo-authored-by: Wesley Wiser <wwiser@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcc202723a10612061b3c55cdbad0c2d63f2b712", "html_url": "https://github.com/rust-lang/rust/commit/dcc202723a10612061b3c55cdbad0c2d63f2b712", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcc202723a10612061b3c55cdbad0c2d63f2b712/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f0bae6726f3b68ec80cabcb3fa66e460b715eb0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f0bae6726f3b68ec80cabcb3fa66e460b715eb0b", "html_url": "https://github.com/rust-lang/rust/commit/f0bae6726f3b68ec80cabcb3fa66e460b715eb0b"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "24e0376d226f17b6ffd99ba9a34cadc8fda0c27c", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcc202723a10612061b3c55cdbad0c2d63f2b712/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcc202723a10612061b3c55cdbad0c2d63f2b712/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=dcc202723a10612061b3c55cdbad0c2d63f2b712", "patch": "@@ -77,14 +77,14 @@ impl<'tcx> HasLocalDecls<'tcx> for Body<'tcx> {\n /// dialects forbid certain variants or values in certain phases.\n ///\n /// Note: Each phase's validation checks all invariants of the *previous* phases' dialects. A phase\n-/// that changes the dialect documents what invariants must be uphelpd *after* that phase finishes.\n+/// that changes the dialect documents what invariants must be upheld *after* that phase finishes.\n ///\n /// Warning: ordering of variants is significant.\n #[derive(Copy, Clone, TyEncodable, TyDecodable, Debug, PartialEq, Eq, PartialOrd, Ord)]\n #[derive(HashStable)]\n pub enum MirPhase {\n     Build = 0,\n-    // FIXME: it's unclear whether we still need this phase (and its corresponding query).\n+    // FIXME(oli-obk): it's unclear whether we still need this phase (and its corresponding query).\n     // We used to have this for pre-miri MIR based const eval.\n     Const = 1,\n     /// This phase checks the MIR for promotable elements and takes them out of the main MIR body"}, {"sha": "56479b047fa38f437461231394b9fbdc9f82e104", "filename": "src/librustc_mir/transform/const_prop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcc202723a10612061b3c55cdbad0c2d63f2b712/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcc202723a10612061b3c55cdbad0c2d63f2b712/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fconst_prop.rs?ref=dcc202723a10612061b3c55cdbad0c2d63f2b712", "patch": "@@ -857,7 +857,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n \n                             if let Some(Some(alloc)) = alloc {\n                                 // Assign entire constant in a single statement.\n-                                // We can't use aggregates, as we are post-aggregate-lowering.\n+                                // We can't use aggregates, as we run after the aggregate-lowering `MirPhase`.\n                                 *rval = Rvalue::Use(Operand::Constant(Box::new(Constant {\n                                     span: source_info.span,\n                                     user_ty: None,"}]}