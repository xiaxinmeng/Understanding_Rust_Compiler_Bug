{"sha": "aecb32ce6e80862562a728a6bee7b741b299d988", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlY2IzMmNlNmU4MDg2MjU2MmE3MjhhNmJlZTdiNzQxYjI5OWQ5ODg=", "commit": {"author": {"name": "Jonathan Sieber", "email": "mail@strfry.org", "date": "2018-10-19T19:04:33Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-03-13T21:21:06Z"}, "message": "build a proper c++-enabled musl toolchain with musl-cross-make", "tree": {"sha": "5e9fd8e1ee93fc7e3d3e09d92741a1541e876aec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e9fd8e1ee93fc7e3d3e09d92741a1541e876aec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aecb32ce6e80862562a728a6bee7b741b299d988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aecb32ce6e80862562a728a6bee7b741b299d988", "html_url": "https://github.com/rust-lang/rust/commit/aecb32ce6e80862562a728a6bee7b741b299d988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aecb32ce6e80862562a728a6bee7b741b299d988/comments", "author": {"login": "strfry", "id": 1341440, "node_id": "MDQ6VXNlcjEzNDE0NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1341440?v=4", "gravatar_id": "", "url": "https://api.github.com/users/strfry", "html_url": "https://github.com/strfry", "followers_url": "https://api.github.com/users/strfry/followers", "following_url": "https://api.github.com/users/strfry/following{/other_user}", "gists_url": "https://api.github.com/users/strfry/gists{/gist_id}", "starred_url": "https://api.github.com/users/strfry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/strfry/subscriptions", "organizations_url": "https://api.github.com/users/strfry/orgs", "repos_url": "https://api.github.com/users/strfry/repos", "events_url": "https://api.github.com/users/strfry/events{/privacy}", "received_events_url": "https://api.github.com/users/strfry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3729e48bf2c6bc45b3efdee56ec2ce2cbcffe900", "url": "https://api.github.com/repos/rust-lang/rust/commits/3729e48bf2c6bc45b3efdee56ec2ce2cbcffe900", "html_url": "https://github.com/rust-lang/rust/commit/3729e48bf2c6bc45b3efdee56ec2ce2cbcffe900"}], "stats": {"total": 88, "additions": 79, "deletions": 9}, "files": [{"sha": "2f538a28b43647d90c7c061a000342fa71b15106", "filename": "src/ci/docker/dist-x86_64-musl/Dockerfile", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/aecb32ce6e80862562a728a6bee7b741b299d988/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/aecb32ce6e80862562a728a6bee7b741b299d988/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86_64-musl%2FDockerfile?ref=aecb32ce6e80862562a728a6bee7b741b299d988", "patch": "@@ -4,6 +4,7 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   g++ \\\n   make \\\n   file \\\n+  wget \\\n   curl \\\n   ca-certificates \\\n   python2.7 \\\n@@ -18,19 +19,17 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n \n WORKDIR /build/\n \n-COPY scripts/musl.sh /build/\n+COPY scripts/musl-toolchain.sh /build/\n # We need to mitigate rust-lang/rust#34978 when compiling musl itself as well\n-RUN CC=gcc \\\n-    CFLAGS=\"-Wa,-mrelax-relocations=no\" \\\n-    CXX=g++ \\\n-    CXXFLAGS=\"-Wa,-mrelax-relocations=no\" \\\n-    bash musl.sh x86_64 && rm -rf /build\n+# TODO: Check what this issue is and if we can ignore it\n+\n+RUN bash musl-toolchain.sh x86_64-linux-musl && rm -rf build\n \n COPY scripts/sccache.sh /scripts/\n RUN sh /scripts/sccache.sh\n \n ENV RUST_CONFIGURE_ARGS \\\n-      --musl-root-x86_64=/musl-x86_64 \\\n+      --musl-root-x86_64=/usr/local/x86_64-linux-musl \\\n       --enable-extended \\\n       --disable-docs\n \n@@ -39,9 +38,14 @@ ENV RUST_CONFIGURE_ARGS \\\n # way to produce \"super compatible\" binaries.\n #\n # See: https://github.com/rust-lang/rust/issues/34978\n-ENV CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no\n+#ENV CFLAGS_x86_64_unknown_linux_musl=-Wa,-mrelax-relocations=no\n+\n+ENV HOSTS=x86_64-unknown-linux-musl \\\n+    CC_x86_64_unknown_linux_musl=x86_64-linux-musl-gcc \\\n+    CXX_x86_64_unknown_linux_musl=x86_64-linux-musl-g++\n \n-ENV HOSTS=x86_64-unknown-linux-musl\n+#    CARGO_TARGET_ARM_UNKNOWN_LINUX_MUSLEABIHF_LINKER=musl-gcc \\\n+#    CARGO_TARGET_ARM_UNKNOWN_LINUX_MUSLEABIHF_RUNNER=\"qemu-arm -L /musl-arm\"\n \n ENV RUSTFLAGS=\"-C target-feature=-crt-static\"\n "}, {"sha": "db609a8666f3049eecc7a235176ea6bc3aeaf9e3", "filename": "src/ci/docker/scripts/musl-toolchain.sh", "status": "added", "additions": 66, "deletions": 0, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/aecb32ce6e80862562a728a6bee7b741b299d988/src%2Fci%2Fdocker%2Fscripts%2Fmusl-toolchain.sh", "raw_url": "https://github.com/rust-lang/rust/raw/aecb32ce6e80862562a728a6bee7b741b299d988/src%2Fci%2Fdocker%2Fscripts%2Fmusl-toolchain.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Fmusl-toolchain.sh?ref=aecb32ce6e80862562a728a6bee7b741b299d988", "patch": "@@ -0,0 +1,66 @@\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  rm /tmp/build.log\n+  set -x\n+}\n+\n+TARGET=$1\n+OUTPUT=/usr/local\n+shift\n+\n+git clone https://github.com/richfelker/musl-cross-make -b v0.9.7\n+cd musl-cross-make\n+\n+hide_output make -j$(nproc) TARGET=$TARGET\n+hide_output make install TARGET=$TARGET OUTPUT=$OUTPUT\n+\n+cd ..\n+\n+export CC=$TARGET-gcc\n+export CXX=$TARGET-g++\n+\n+LLVM=60\n+\n+# may have been downloaded in a previous run\n+if [ ! -d libunwind-release_$LLVM ]; then\n+  curl -L https://github.com/llvm-mirror/llvm/archive/release_$LLVM.tar.gz | tar xzf -\n+  curl -L https://github.com/llvm-mirror/libunwind/archive/release_$LLVM.tar.gz | tar xzf -\n+fi\n+\n+mkdir libunwind-build\n+cd libunwind-build\n+cmake ../libunwind-release_$LLVM \\\n+          -DLLVM_PATH=/build/llvm-release_$LLVM \\\n+          -DLIBUNWIND_ENABLE_SHARED=0 \\\n+          -DCMAKE_C_COMPILER=$CC \\\n+          -DCMAKE_CXX_COMPILER=$CXX \\\n+          -DCMAKE_C_FLAGS=\"$CFLAGS\" \\\n+          -DCMAKE_CXX_FLAGS=\"$CXXFLAGS\"\n+\n+hide_output make -j$(nproc)\n+cp lib/libunwind.a $OUTPUT/$TARGET/lib\n+cd ../ && rm -rf libunwind-build\n+"}]}