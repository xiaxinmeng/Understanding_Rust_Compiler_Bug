{"sha": "9cad27fce878977e40dd5b8042165b9a45e86c83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljYWQyN2ZjZTg3ODk3N2U0MGRkNWI4MDQyMTY1YjlhNDVlODZjODM=", "commit": {"author": {"name": "mbartlett21", "email": "29034492+mbartlett21@users.noreply.github.com", "date": "2021-05-25T02:06:45Z"}, "committer": {"name": "mbartlett21", "email": "29034492+mbartlett21@users.noreply.github.com", "date": "2021-05-25T02:06:45Z"}, "message": "Add semicolon in `needless_for_each.rs`", "tree": {"sha": "8483979db4d4274a76771988c60207d1cc631908", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8483979db4d4274a76771988c60207d1cc631908"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cad27fce878977e40dd5b8042165b9a45e86c83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cad27fce878977e40dd5b8042165b9a45e86c83", "html_url": "https://github.com/rust-lang/rust/commit/9cad27fce878977e40dd5b8042165b9a45e86c83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cad27fce878977e40dd5b8042165b9a45e86c83/comments", "author": {"login": "mbartlett21", "id": 29034492, "node_id": "MDQ6VXNlcjI5MDM0NDky", "avatar_url": "https://avatars.githubusercontent.com/u/29034492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbartlett21", "html_url": "https://github.com/mbartlett21", "followers_url": "https://api.github.com/users/mbartlett21/followers", "following_url": "https://api.github.com/users/mbartlett21/following{/other_user}", "gists_url": "https://api.github.com/users/mbartlett21/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbartlett21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbartlett21/subscriptions", "organizations_url": "https://api.github.com/users/mbartlett21/orgs", "repos_url": "https://api.github.com/users/mbartlett21/repos", "events_url": "https://api.github.com/users/mbartlett21/events{/privacy}", "received_events_url": "https://api.github.com/users/mbartlett21/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbartlett21", "id": 29034492, "node_id": "MDQ6VXNlcjI5MDM0NDky", "avatar_url": "https://avatars.githubusercontent.com/u/29034492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbartlett21", "html_url": "https://github.com/mbartlett21", "followers_url": "https://api.github.com/users/mbartlett21/followers", "following_url": "https://api.github.com/users/mbartlett21/following{/other_user}", "gists_url": "https://api.github.com/users/mbartlett21/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbartlett21/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbartlett21/subscriptions", "organizations_url": "https://api.github.com/users/mbartlett21/orgs", "repos_url": "https://api.github.com/users/mbartlett21/repos", "events_url": "https://api.github.com/users/mbartlett21/events{/privacy}", "received_events_url": "https://api.github.com/users/mbartlett21/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d737772246d9912ba7bbf9b906f467da02ef70e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d737772246d9912ba7bbf9b906f467da02ef70e", "html_url": "https://github.com/rust-lang/rust/commit/6d737772246d9912ba7bbf9b906f467da02ef70e"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "a723a472a25feabd9be2c0cacb534ddae36f8466", "filename": "clippy_lints/src/needless_for_each.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cad27fce878977e40dd5b8042165b9a45e86c83/clippy_lints%2Fsrc%2Fneedless_for_each.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cad27fce878977e40dd5b8042165b9a45e86c83/clippy_lints%2Fsrc%2Fneedless_for_each.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_for_each.rs?ref=9cad27fce878977e40dd5b8042165b9a45e86c83", "patch": "@@ -142,7 +142,7 @@ impl<'tcx> Visitor<'tcx> for RetCollector {\n         match expr.kind {\n             ExprKind::Ret(..) => {\n                 if self.loop_depth > 0 && !self.ret_in_loop {\n-                    self.ret_in_loop = true\n+                    self.ret_in_loop = true;\n                 }\n \n                 self.spans.push(expr.span);"}]}