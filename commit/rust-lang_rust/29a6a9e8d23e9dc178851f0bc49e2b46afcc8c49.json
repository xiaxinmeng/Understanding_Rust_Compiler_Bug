{"sha": "29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YTZhOWU4ZDIzZTlkYzE3ODg1MWYwYmM0OWUyYjQ2YWZjYzhjNDk=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-04-03T00:03:12Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2017-04-03T00:03:19Z"}, "message": "iter: Use underlying find/rfind for the same methods in Rev", "tree": {"sha": "494db087e974b827649a717a999765741903be28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/494db087e974b827649a717a999765741903be28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "html_url": "https://github.com/rust-lang/rust/commit/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fe151194e9a919ab23c2bb356767a5cbfa3811e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe151194e9a919ab23c2bb356767a5cbfa3811e7", "html_url": "https://github.com/rust-lang/rust/commit/fe151194e9a919ab23c2bb356767a5cbfa3811e7"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "273f9d0e6f6d31cf9581cbafb0fde73d7f569f96", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=29a6a9e8d23e9dc178851f0bc49e2b46afcc8c49", "patch": "@@ -358,12 +358,24 @@ impl<I> Iterator for Rev<I> where I: DoubleEndedIterator {\n     fn next(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next_back() }\n     #[inline]\n     fn size_hint(&self) -> (usize, Option<usize>) { self.iter.size_hint() }\n+\n+    fn find<P>(&mut self, predicate: P) -> Option<Self::Item>\n+        where P: FnMut(&Self::Item) -> bool\n+    {\n+        self.iter.rfind(predicate)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<I> DoubleEndedIterator for Rev<I> where I: DoubleEndedIterator {\n     #[inline]\n     fn next_back(&mut self) -> Option<<I as Iterator>::Item> { self.iter.next() }\n+\n+    fn rfind<P>(&mut self, predicate: P) -> Option<Self::Item>\n+        where P: FnMut(&Self::Item) -> bool\n+    {\n+        self.iter.find(predicate)\n+    }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}