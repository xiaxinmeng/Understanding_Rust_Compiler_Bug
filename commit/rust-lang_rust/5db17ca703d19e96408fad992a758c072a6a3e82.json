{"sha": "5db17ca703d19e96408fad992a758c072a6a3e82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVkYjE3Y2E3MDNkMTllOTY0MDhmYWQ5OTJhNzU4YzA3MmE2YTNlODI=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-09-25T14:53:44Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-09-25T14:56:22Z"}, "message": "Use the maximum available width in struct formatting\n\nPreviously, we'd use an approximation for the maximum width since the configuration wasn't available in `write_list`.", "tree": {"sha": "78e151c8d2169d1ddd16431eb06dcdd4797877ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78e151c8d2169d1ddd16431eb06dcdd4797877ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5db17ca703d19e96408fad992a758c072a6a3e82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5db17ca703d19e96408fad992a758c072a6a3e82", "html_url": "https://github.com/rust-lang/rust/commit/5db17ca703d19e96408fad992a758c072a6a3e82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5db17ca703d19e96408fad992a758c072a6a3e82/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ccf4204155fac79f18067d43cd081172ffd60e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ccf4204155fac79f18067d43cd081172ffd60e8", "html_url": "https://github.com/rust-lang/rust/commit/4ccf4204155fac79f18067d43cd081172ffd60e8"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "c1f211dbf362dfe5c07b72513efea04850398a79", "filename": "src/expr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5db17ca703d19e96408fad992a758c072a6a3e82/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db17ca703d19e96408fad992a758c072a6a3e82/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=5db17ca703d19e96408fad992a758c072a6a3e82", "patch": "@@ -1152,9 +1152,10 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n                                  match *item {\n                                      StructLitField::Regular(ref field) => field.span.lo,\n                                      StructLitField::Base(ref expr) => {\n-                                         let last_field_hi = fields.last()\n-                                                                   .map_or(span.lo,\n-                                                                           |field| field.span.hi);\n+                                         let last_field_hi = fields.last().map_or(span.lo,\n+                                                                                  |field| {\n+                                                                                      field.span.hi\n+                                                                                  });\n                                          let snippet = context.snippet(mk_sp(last_field_hi,\n                                                                              expr.span.lo));\n                                          let pos = snippet.find_uncommented(\"..\").unwrap();"}, {"sha": "c2a8f46b3db169f27f6bc9cb1600c175d2cee34f", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5db17ca703d19e96408fad992a758c072a6a3e82/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db17ca703d19e96408fad992a758c072a6a3e82/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=5db17ca703d19e96408fad992a758c072a6a3e82", "patch": "@@ -788,8 +788,8 @@ impl<'a> FmtVisitor<'a> {\n             ends_with_newline: true,\n             config: self.config,\n         };\n-        let list_str = write_list(&items.collect::<Vec<_>>(), &fmt).unwrap();\n \n+        let list_str = try_opt!(write_list(&items.collect::<Vec<_>>(), &fmt));\n         result.push_str(&list_str);\n \n         if break_line {\n@@ -819,11 +819,12 @@ impl<'a> FmtVisitor<'a> {\n                                         struct_def,\n                                         Some(generics),\n                                         span,\n-                                        indent)\n-                         .unwrap();\n+                                        indent);\n \n-        self.buffer.push_str(&result);\n-        self.last_pos = span.hi;\n+        if let Some(rewrite) = result {\n+            self.buffer.push_str(&rewrite);\n+            self.last_pos = span.hi;\n+        }\n     }\n \n     fn format_header(&self, item_name: &str, ident: ast::Ident, vis: ast::Visibility) -> String {"}, {"sha": "a6c0e862cce790737c2d24ff2833f501e786b946", "filename": "src/lists.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5db17ca703d19e96408fad992a758c072a6a3e82/src%2Flists.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db17ca703d19e96408fad992a758c072a6a3e82/src%2Flists.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flists.rs?ref=5db17ca703d19e96408fad992a758c072a6a3e82", "patch": "@@ -214,9 +214,11 @@ pub fn write_list<'b>(items: &[ListItem], formatting: &ListFormatting<'b>) -> Op\n             }\n         }\n \n-        let max_width = formatting.indent.width() + formatting.v_width;\n-        let item_str = wrap_str(&item.item[..], max_width, formatting.v_width, formatting.indent);\n-        result.push_str(&&try_opt!(item_str));\n+        let item_str = try_opt!(wrap_str(&item.item[..],\n+                                         formatting.config.max_width,\n+                                         formatting.v_width,\n+                                         formatting.indent));\n+        result.push_str(&item_str);\n \n         // Post-comments\n         if tactic != ListTactic::Vertical && item.post_comment.is_some() {"}, {"sha": "bd9db77fec0ba7a5c5fdda891f1447aa090fcb61", "filename": "tests/source/structs.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5db17ca703d19e96408fad992a758c072a6a3e82/tests%2Fsource%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db17ca703d19e96408fad992a758c072a6a3e82/tests%2Fsource%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstructs.rs?ref=5db17ca703d19e96408fad992a758c072a6a3e82", "patch": "@@ -102,3 +102,6 @@ pub struct State<F: FnMut() -> time::Timespec> { now: F }\n pub struct State<F: FnMut() -> ()> { now: F }\n \n pub struct State<F: FnMut()> { now: F }\n+\n+struct Palette { /// A map of indizes in the palette to a count of pixels in approximately that color\n+                    foo: i32}"}, {"sha": "67060ddf80ed35955cb9bd2278a817cc90ac43a3", "filename": "tests/target/structs.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5db17ca703d19e96408fad992a758c072a6a3e82/tests%2Ftarget%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5db17ca703d19e96408fad992a758c072a6a3e82/tests%2Ftarget%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstructs.rs?ref=5db17ca703d19e96408fad992a758c072a6a3e82", "patch": "@@ -95,3 +95,8 @@ pub struct State<F: FnMut() -> ()> {\n pub struct State<F: FnMut()> {\n     now: F,\n }\n+\n+struct Palette {\n+    /// A map of indizes in the palette to a count of pixels in approximately that color\n+    foo: i32,\n+}"}]}