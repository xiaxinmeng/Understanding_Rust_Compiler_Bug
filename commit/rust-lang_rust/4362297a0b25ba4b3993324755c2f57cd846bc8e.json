{"sha": "4362297a0b25ba4b3993324755c2f57cd846bc8e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzNjIyOTdhMGIyNWJhNGIzOTkzMzI0NzU1YzJmNTdjZDg0NmJjOGU=", "commit": {"author": {"name": "Matt Hooper", "email": "matthewjhooper94@gmail.com", "date": "2020-09-20T23:38:18Z"}, "committer": {"name": "Matt Hooper", "email": "matthewjhooper94@gmail.com", "date": "2020-09-20T23:38:18Z"}, "message": "Add edit utility for adding an associated item list to a impl def", "tree": {"sha": "41d08a1a3d864d14eff0d5c9487ccd6155128881", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41d08a1a3d864d14eff0d5c9487ccd6155128881"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4362297a0b25ba4b3993324755c2f57cd846bc8e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4362297a0b25ba4b3993324755c2f57cd846bc8e", "html_url": "https://github.com/rust-lang/rust/commit/4362297a0b25ba4b3993324755c2f57cd846bc8e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4362297a0b25ba4b3993324755c2f57cd846bc8e/comments", "author": {"login": "M-J-Hooper", "id": 13765376, "node_id": "MDQ6VXNlcjEzNzY1Mzc2", "avatar_url": "https://avatars.githubusercontent.com/u/13765376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-J-Hooper", "html_url": "https://github.com/M-J-Hooper", "followers_url": "https://api.github.com/users/M-J-Hooper/followers", "following_url": "https://api.github.com/users/M-J-Hooper/following{/other_user}", "gists_url": "https://api.github.com/users/M-J-Hooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-J-Hooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-J-Hooper/subscriptions", "organizations_url": "https://api.github.com/users/M-J-Hooper/orgs", "repos_url": "https://api.github.com/users/M-J-Hooper/repos", "events_url": "https://api.github.com/users/M-J-Hooper/events{/privacy}", "received_events_url": "https://api.github.com/users/M-J-Hooper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "M-J-Hooper", "id": 13765376, "node_id": "MDQ6VXNlcjEzNzY1Mzc2", "avatar_url": "https://avatars.githubusercontent.com/u/13765376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/M-J-Hooper", "html_url": "https://github.com/M-J-Hooper", "followers_url": "https://api.github.com/users/M-J-Hooper/followers", "following_url": "https://api.github.com/users/M-J-Hooper/following{/other_user}", "gists_url": "https://api.github.com/users/M-J-Hooper/gists{/gist_id}", "starred_url": "https://api.github.com/users/M-J-Hooper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/M-J-Hooper/subscriptions", "organizations_url": "https://api.github.com/users/M-J-Hooper/orgs", "repos_url": "https://api.github.com/users/M-J-Hooper/repos", "events_url": "https://api.github.com/users/M-J-Hooper/events{/privacy}", "received_events_url": "https://api.github.com/users/M-J-Hooper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82dc4af5dec0d8b4418ee5fda637fa0576884b84", "url": "https://api.github.com/repos/rust-lang/rust/commits/82dc4af5dec0d8b4418ee5fda637fa0576884b84", "html_url": "https://github.com/rust-lang/rust/commit/82dc4af5dec0d8b4418ee5fda637fa0576884b84"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "ceeb0fb4b35a7410a0fb704b4ad891f8010332e9", "filename": "crates/syntax/src/ast/edit.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/4362297a0b25ba4b3993324755c2f57cd846bc8e/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4362297a0b25ba4b3993324755c2f57cd846bc8e/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Fast%2Fedit.rs?ref=4362297a0b25ba4b3993324755c2f57cd846bc8e", "patch": "@@ -93,6 +93,22 @@ where\n     }\n }\n \n+impl ast::Impl {\n+    #[must_use]\n+    pub fn with_items(&self, items: ast::AssocItemList) -> ast::Impl {\n+        let mut to_insert: ArrayVec<[SyntaxElement; 2]> = ArrayVec::new();\n+        if let Some(old_items) = self.assoc_item_list() {\n+            let to_replace: SyntaxElement = old_items.syntax().clone().into();\n+            to_insert.push(items.syntax().clone().into());\n+            self.replace_children(single_node(to_replace), to_insert)\n+        } else {\n+            to_insert.push(make::tokens::single_space().into());\n+            to_insert.push(items.syntax().clone().into());\n+            self.insert_children(InsertPosition::Last, to_insert)\n+        }\n+    }\n+}\n+\n impl ast::AssocItemList {\n     #[must_use]\n     pub fn append_items("}]}