{"sha": "baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhZWIxNmU4M2Y3YjJiZWVlODIxMWUyYzNhZDVlNGE3ZGMzYTU0MzQ=", "commit": {"author": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-10-23T13:25:22Z"}, "committer": {"name": "Florian Diebold", "email": "florian.diebold@freiheit.com", "date": "2020-10-23T13:28:02Z"}, "message": "Improve Chalk debugging\n\n - add panic context for the trait goal if CHALK_DEBUG is set\n - print the Chalk program even if we're panicking\n - log goal/solution while TLS is still set", "tree": {"sha": "ee90a4710d4e3741dc7ce0e8baa1c8bb7616d35e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee90a4710d4e3741dc7ce0e8baa1c8bb7616d35e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434", "html_url": "https://github.com/rust-lang/rust/commit/baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd8a75b2cf46a967b3449652fe17c19a8fcc4e41", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd8a75b2cf46a967b3449652fe17c19a8fcc4e41", "html_url": "https://github.com/rust-lang/rust/commit/dd8a75b2cf46a967b3449652fe17c19a8fcc4e41"}], "stats": {"total": 30, "additions": 23, "deletions": 7}, "files": [{"sha": "ce1174cbef586cc28c24d1df68be37b3be2b048d", "filename": "crates/hir_ty/src/traits.rs", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits.rs?ref=baeb16e83f7b2beee8211e2c3ad5e4a7dc3a5434", "patch": "@@ -5,6 +5,7 @@ use base_db::CrateId;\n use chalk_ir::cast::Cast;\n use chalk_solve::{logging_db::LoggingRustIrDatabase, Solver};\n use hir_def::{lang_item::LangItemTarget, TraitId};\n+use stdx::panic_context;\n \n use crate::{db::HirDatabase, DebruijnIndex, Substs};\n \n@@ -168,26 +169,41 @@ fn solve(\n     };\n \n     let mut solve = || {\n-        if is_chalk_print() {\n-            let logging_db = LoggingRustIrDatabase::new(context);\n-            let solution = solver.solve_limited(&logging_db, goal, &should_continue);\n-            log::debug!(\"chalk program:\\n{}\", logging_db);\n+        let _ctx = if is_chalk_debug() || is_chalk_print() {\n+            Some(panic_context::enter(format!(\"solving {:?}\", goal)))\n+        } else {\n+            None\n+        };\n+        let solution = if is_chalk_print() {\n+            let logging_db =\n+                LoggingRustIrDatabaseLoggingOnDrop(LoggingRustIrDatabase::new(context));\n+            let solution = solver.solve_limited(&logging_db.0, goal, &should_continue);\n             solution\n         } else {\n             solver.solve_limited(&context, goal, &should_continue)\n-        }\n+        };\n+\n+        log::debug!(\"solve({:?}) => {:?}\", goal, solution);\n+\n+        solution\n     };\n \n     // don't set the TLS for Chalk unless Chalk debugging is active, to make\n     // extra sure we only use it for debugging\n     let solution =\n         if is_chalk_debug() { chalk::tls::set_current_program(db, solve) } else { solve() };\n \n-    log::debug!(\"solve({:?}) => {:?}\", goal, solution);\n-\n     solution\n }\n \n+struct LoggingRustIrDatabaseLoggingOnDrop<'a>(LoggingRustIrDatabase<Interner, ChalkContext<'a>>);\n+\n+impl<'a> Drop for LoggingRustIrDatabaseLoggingOnDrop<'a> {\n+    fn drop(&mut self) {\n+        eprintln!(\"chalk program:\\n{}\", self.0);\n+    }\n+}\n+\n fn is_chalk_debug() -> bool {\n     std::env::var(\"CHALK_DEBUG\").is_ok()\n }"}]}