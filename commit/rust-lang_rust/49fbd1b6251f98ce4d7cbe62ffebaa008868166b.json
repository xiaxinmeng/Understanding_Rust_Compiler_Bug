{"sha": "49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZmJkMWI2MjUxZjk4Y2U0ZDdjYmU2MmZmZWJhYTAwODg2ODE2NmI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-11T22:36:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-11T22:36:53Z"}, "message": "Merge #5325\n\n5325: Update lsp-types to account for new CodeActionKind structure r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>", "tree": {"sha": "2619a048bd3890277a135f8400b0cffc5a31b60e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2619a048bd3890277a135f8400b0cffc5a31b60e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfCj8FCRBK7hj4Ov3rIwAAdHIIAGd/zAGcowktuozVlOXuQ2FK\nAvpo87Fi0XSJqZWWXvEDlmKTEP4Mdr57NW4ThS6lU242h4gklB5OrV/m/aKM2pdx\nHhH0JDUiU0qGsgUsMIigCzHd+FtfCQfByQtBnr3IgKRBE2xZHNP/v7qrb75qwGlF\nCiBOvBP6n8C0GVOuc2y51KVa+rIpEEUIEop1xlq5yFWVEBUX94OuUf8yRMQ60C0V\nUDtvTiPhOSZHTP7OO2doCXbZDXi9FGG7/FqeFclRh8qUk4GuLqTU0gus/GurraQ+\n10iFul8tSUNMq3Xsbh5g0lIKO4MaKoHq8x+5ljMguvq1cqqAxJfd5ofmlphzxJQ=\n=sDI/\n-----END PGP SIGNATURE-----\n", "payload": "tree 2619a048bd3890277a135f8400b0cffc5a31b60e\nparent 02efda91d0fa856f0a2d33e9370147123c06abe7\nparent 8c81465d5b43cb17162d5cd00e9e45ae02b47cd7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1594507013 +0000\ncommitter GitHub <noreply@github.com> 1594507013 +0000\n\nMerge #5325\n\n5325: Update lsp-types to account for new CodeActionKind structure r=kjeremy a=kjeremy\n\n\n\nCo-authored-by: Jeremy Kolb <kjeremy@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "html_url": "https://github.com/rust-lang/rust/commit/49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "02efda91d0fa856f0a2d33e9370147123c06abe7", "url": "https://api.github.com/repos/rust-lang/rust/commits/02efda91d0fa856f0a2d33e9370147123c06abe7", "html_url": "https://github.com/rust-lang/rust/commit/02efda91d0fa856f0a2d33e9370147123c06abe7"}, {"sha": "8c81465d5b43cb17162d5cd00e9e45ae02b47cd7", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c81465d5b43cb17162d5cd00e9e45ae02b47cd7", "html_url": "https://github.com/rust-lang/rust/commit/8c81465d5b43cb17162d5cd00e9e45ae02b47cd7"}], "stats": {"total": 71, "additions": 40, "deletions": 31}, "files": [{"sha": "292ddb98261956f710dc567128272f7e5114c062", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -691,9 +691,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.74.2\"\n+version = \"0.75.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b360754e89e0e13c114245131382ba921d4ff1efabb918e549422938aaa8d392\"\n+checksum = \"a1b4ab1df4a5538413c707860e13fff9e0c9bc2fa613efc15d78196bc06ae06d\"\n dependencies = [\n  \"base64\",\n  \"bitflags\","}, {"sha": "676a0426993636fe2c4a6240da56955f5885b471", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -20,7 +20,7 @@ globset = \"0.4.4\"\n itertools = \"0.9.0\"\n jod-thread = \"0.1.0\"\n log = \"0.4.8\"\n-lsp-types = { version = \"0.74.0\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.75.0\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n rand = { version = \"0.7.3\", features = [\"small_rng\"] }"}, {"sha": "f999c730aed9671894bfec556bda07fcdf64b1a9", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -2,7 +2,7 @@\n use std::env;\n \n use lsp_types::{\n-    CallHierarchyServerCapability, ClientCapabilities, CodeActionOptions,\n+    CallHierarchyServerCapability, ClientCapabilities, CodeActionKind, CodeActionOptions,\n     CodeActionProviderCapability, CodeLensOptions, CompletionOptions,\n     DocumentOnTypeFormattingOptions, FoldingRangeProviderCapability,\n     ImplementationProviderCapability, RenameOptions, RenameProviderCapability, SaveOptions,\n@@ -106,12 +106,12 @@ fn code_action_capabilities(client_caps: &ClientCapabilities) -> CodeActionProvi\n                 // Ideally we would base this off of the client capabilities\n                 // but the client is supposed to fall back gracefully for unknown values.\n                 code_action_kinds: Some(vec![\n-                    lsp_types::code_action_kind::EMPTY.to_string(),\n-                    lsp_types::code_action_kind::QUICKFIX.to_string(),\n-                    lsp_types::code_action_kind::REFACTOR.to_string(),\n-                    lsp_types::code_action_kind::REFACTOR_EXTRACT.to_string(),\n-                    lsp_types::code_action_kind::REFACTOR_INLINE.to_string(),\n-                    lsp_types::code_action_kind::REFACTOR_REWRITE.to_string(),\n+                    CodeActionKind::EMPTY,\n+                    CodeActionKind::QUICKFIX,\n+                    CodeActionKind::REFACTOR,\n+                    CodeActionKind::REFACTOR_EXTRACT,\n+                    CodeActionKind::REFACTOR_INLINE,\n+                    CodeActionKind::REFACTOR_REWRITE,\n                 ]),\n                 work_done_progress_options: Default::default(),\n             })"}, {"sha": "7be3ef9841e33fb2792cbca1ed9632a738c5ec18", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -112,7 +112,7 @@ fn map_rust_child_diagnostic(\n             title: rd.message.clone(),\n             id: None,\n             group: None,\n-            kind: Some(\"quickfix\".to_string()),\n+            kind: Some(lsp_types::CodeActionKind::QUICKFIX),\n             edit: Some(lsp_ext::SnippetWorkspaceEdit {\n                 // FIXME: there's no good reason to use edit_map here....\n                 changes: Some(edit_map),"}, {"sha": "f2e24178aef159c70ab90f5d16733a48f1ec9030", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -11,11 +11,11 @@ use lsp_server::ErrorCode;\n use lsp_types::{\n     CallHierarchyIncomingCall, CallHierarchyIncomingCallsParams, CallHierarchyItem,\n     CallHierarchyOutgoingCall, CallHierarchyOutgoingCallsParams, CallHierarchyPrepareParams,\n-    CodeLens, Command, CompletionItem, Diagnostic, DocumentFormattingParams, DocumentHighlight,\n-    DocumentSymbol, FoldingRange, FoldingRangeParams, HoverContents, Location, Position,\n-    PrepareRenameResponse, Range, RenameParams, SemanticTokensParams, SemanticTokensRangeParams,\n-    SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation, TextDocumentIdentifier,\n-    Url, WorkspaceEdit,\n+    CodeActionKind, CodeLens, Command, CompletionItem, Diagnostic, DocumentFormattingParams,\n+    DocumentHighlight, DocumentSymbol, FoldingRange, FoldingRangeParams, HoverContents, Location,\n+    Position, PrepareRenameResponse, Range, RenameParams, SemanticTokensParams,\n+    SemanticTokensRangeParams, SemanticTokensRangeResult, SemanticTokensResult, SymbolInformation,\n+    TextDocumentIdentifier, Url, WorkspaceEdit,\n };\n use ra_ide::{\n     FileId, FilePosition, FileRange, HoverAction, HoverGotoTypeData, NavigationTarget, Query,\n@@ -760,7 +760,7 @@ fn handle_fixes(\n             title,\n             id: None,\n             group: None,\n-            kind: Some(lsp_types::code_action_kind::QUICKFIX.into()),\n+            kind: Some(CodeActionKind::QUICKFIX),\n             edit: Some(edit),\n         };\n         res.push(action);"}, {"sha": "e216966a986217a35ad946dab8e8674080be600e", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -3,7 +3,9 @@\n use std::{collections::HashMap, path::PathBuf};\n \n use lsp_types::request::Request;\n-use lsp_types::{notification::Notification, Position, Range, TextDocumentIdentifier};\n+use lsp_types::{\n+    notification::Notification, CodeActionKind, Position, Range, TextDocumentIdentifier,\n+};\n use serde::{Deserialize, Serialize};\n \n pub enum AnalyzerStatus {}\n@@ -248,7 +250,7 @@ pub struct CodeAction {\n     #[serde(skip_serializing_if = \"Option::is_none\")]\n     pub group: Option<String>,\n     #[serde(skip_serializing_if = \"Option::is_none\")]\n-    pub kind: Option<String>,\n+    pub kind: Option<CodeActionKind>,\n     // We don't handle commands on the client-side\n     // #[serde(skip_serializing_if = \"Option::is_none\")]\n     // pub command: Option<lsp_types::Command>,"}, {"sha": "3585202a40680098f6d282070c39e050f853c09b", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -629,16 +629,15 @@ pub(crate) fn call_hierarchy_item(\n     Ok(lsp_types::CallHierarchyItem { name, kind, tags: None, detail, uri, range, selection_range })\n }\n \n-pub(crate) fn code_action_kind(kind: AssistKind) -> String {\n+pub(crate) fn code_action_kind(kind: AssistKind) -> lsp_types::CodeActionKind {\n     match kind {\n-        AssistKind::None | AssistKind::Generate => lsp_types::code_action_kind::EMPTY,\n-        AssistKind::QuickFix => lsp_types::code_action_kind::QUICKFIX,\n-        AssistKind::Refactor => lsp_types::code_action_kind::REFACTOR,\n-        AssistKind::RefactorExtract => lsp_types::code_action_kind::REFACTOR_EXTRACT,\n-        AssistKind::RefactorInline => lsp_types::code_action_kind::REFACTOR_INLINE,\n-        AssistKind::RefactorRewrite => lsp_types::code_action_kind::REFACTOR_REWRITE,\n+        AssistKind::None | AssistKind::Generate => lsp_types::CodeActionKind::EMPTY,\n+        AssistKind::QuickFix => lsp_types::CodeActionKind::QUICKFIX,\n+        AssistKind::Refactor => lsp_types::CodeActionKind::REFACTOR,\n+        AssistKind::RefactorExtract => lsp_types::CodeActionKind::REFACTOR_EXTRACT,\n+        AssistKind::RefactorInline => lsp_types::CodeActionKind::REFACTOR_INLINE,\n+        AssistKind::RefactorRewrite => lsp_types::CodeActionKind::REFACTOR_REWRITE,\n     }\n-    .to_string()\n }\n \n pub(crate) fn unresolved_code_action("}, {"sha": "084632757262c05049db7b0fb554285521708db4", "filename": "crates/rust-analyzer/test_data/rustc_unused_variable.txt", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable.txt", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable.txt?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -37,7 +37,9 @@\n                 id: None,\n                 group: None,\n                 kind: Some(\n-                    \"quickfix\",\n+                    CodeActionKind(\n+                        \"quickfix\",\n+                    ),\n                 ),\n                 edit: Some(\n                     SnippetWorkspaceEdit {"}, {"sha": "d637923c502f25a338413511a95b9c68fc63322f", "filename": "crates/rust-analyzer/test_data/rustc_unused_variable_as_hint.txt", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable_as_hint.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable_as_hint.txt?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -37,7 +37,9 @@\n                 id: None,\n                 group: None,\n                 kind: Some(\n-                    \"quickfix\",\n+                    CodeActionKind(\n+                        \"quickfix\",\n+                    ),\n                 ),\n                 edit: Some(\n                     SnippetWorkspaceEdit {"}, {"sha": "6b48f16edb7579514c6a7e7f51d043a52c62131a", "filename": "crates/rust-analyzer/test_data/rustc_unused_variable_as_info.txt", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable_as_info.txt", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable_as_info.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftest_data%2Frustc_unused_variable_as_info.txt?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -37,7 +37,9 @@\n                 id: None,\n                 group: None,\n                 kind: Some(\n-                    \"quickfix\",\n+                    CodeActionKind(\n+                        \"quickfix\",\n+                    ),\n                 ),\n                 edit: Some(\n                     SnippetWorkspaceEdit {"}, {"sha": "2c4cbea1688fdbeb8c873264f134416a9efe4eed", "filename": "crates/rust-analyzer/test_data/snap_multi_line_fix.txt", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Fsnap_multi_line_fix.txt", "raw_url": "https://github.com/rust-lang/rust/raw/49fbd1b6251f98ce4d7cbe62ffebaa008868166b/crates%2Frust-analyzer%2Ftest_data%2Fsnap_multi_line_fix.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftest_data%2Fsnap_multi_line_fix.txt?ref=49fbd1b6251f98ce4d7cbe62ffebaa008868166b", "patch": "@@ -52,7 +52,9 @@\n                 id: None,\n                 group: None,\n                 kind: Some(\n-                    \"quickfix\",\n+                    CodeActionKind(\n+                        \"quickfix\",\n+                    ),\n                 ),\n                 edit: Some(\n                     SnippetWorkspaceEdit {"}]}