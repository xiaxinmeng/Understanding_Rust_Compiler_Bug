{"sha": "89b364d687b7a3d16fb9553f7b5b0c034c406d91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YjM2NGQ2ODdiN2EzZDE2ZmI5NTUzZjdiNWIwYzAzNGM0MDZkOTE=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-04-06T03:51:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-04-06T03:51:43Z"}, "message": "Rollup merge of #41050 - jseyfried:fix_derive_parsing, r=petrochenkov\n\nmacros: fix bug parsing `#[derive]` invocations\n\nFixes #40962 (introduced in #40346).\nr? @nrc", "tree": {"sha": "54e5bab4924318f488d3a81d38d839ee1f1d3d1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54e5bab4924318f488d3a81d38d839ee1f1d3d1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89b364d687b7a3d16fb9553f7b5b0c034c406d91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89b364d687b7a3d16fb9553f7b5b0c034c406d91", "html_url": "https://github.com/rust-lang/rust/commit/89b364d687b7a3d16fb9553f7b5b0c034c406d91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89b364d687b7a3d16fb9553f7b5b0c034c406d91/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a62109c9694263002c4c80cd2c13cf7913a15e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a62109c9694263002c4c80cd2c13cf7913a15e", "html_url": "https://github.com/rust-lang/rust/commit/e4a62109c9694263002c4c80cd2c13cf7913a15e"}, {"sha": "6a9448b523b95dbc850e856508342644fc17db45", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a9448b523b95dbc850e856508342644fc17db45", "html_url": "https://github.com/rust-lang/rust/commit/6a9448b523b95dbc850e856508342644fc17db45"}], "stats": {"total": 49, "additions": 46, "deletions": 3}, "files": [{"sha": "966cb7ee8d8d83c6299955357d2a2306469c1328", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=89b364d687b7a3d16fb9553f7b5b0c034c406d91", "patch": "@@ -222,8 +222,10 @@ impl<'a> base::Resolver for Resolver<'a> {\n             let name = unwrap_or!(attrs[i].name(), continue);\n \n             if name == \"derive\" {\n-                let result = attrs[i].parse_list(&self.session.parse_sess,\n-                                                 |parser| parser.parse_path(PathStyle::Mod));\n+                let result = attrs[i].parse_list(&self.session.parse_sess, |parser| {\n+                    parser.parse_path_allowing_meta(PathStyle::Mod)\n+                });\n+\n                 let mut traits = match result {\n                     Ok(traits) => traits,\n                     Err(mut e) => {"}, {"sha": "e7c5d8278d9775065d1c800633ceaba2458e7e17", "filename": "src/libsyntax/ext/derive.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Flibsyntax%2Fext%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Flibsyntax%2Fext%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderive.rs?ref=89b364d687b7a3d16fb9553f7b5b0c034c406d91", "patch": "@@ -26,7 +26,8 @@ pub fn collect_derives(cx: &mut ExtCtxt, attrs: &mut Vec<ast::Attribute>) -> Vec\n             return true;\n         }\n \n-        match attr.parse_list(cx.parse_sess, |parser| parser.parse_path(PathStyle::Mod)) {\n+        match attr.parse_list(cx.parse_sess,\n+                              |parser| parser.parse_path_allowing_meta(PathStyle::Mod)) {\n             Ok(ref traits) if traits.is_empty() => {\n                 cx.span_warn(attr.span, \"empty trait list in `derive`\");\n                 false"}, {"sha": "0dd2c03acb654b8eee67693b3d561381b65afcd0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=89b364d687b7a3d16fb9553f7b5b0c034c406d91", "patch": "@@ -1767,6 +1767,26 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n+    /// Like `parse_path`, but also supports parsing `Word` meta items into paths for back-compat.\n+    /// This is used when parsing derive macro paths in `#[derive]` attributes.\n+    pub fn parse_path_allowing_meta(&mut self, mode: PathStyle) -> PResult<'a, ast::Path> {\n+        let meta_ident = match self.token {\n+            token::Interpolated(ref nt) => match **nt {\n+                token::NtMeta(ref meta) => match meta.node {\n+                    ast::MetaItemKind::Word => Some(ast::Ident::with_empty_ctxt(meta.name)),\n+                    _ => None,\n+                },\n+                _ => None,\n+            },\n+            _ => None,\n+        };\n+        if let Some(ident) = meta_ident {\n+            self.bump();\n+            return Ok(ast::Path::from_ident(self.prev_span, ident));\n+        }\n+        self.parse_path(mode)\n+    }\n+\n     /// Examples:\n     /// - `a::b<T,U>::c<V,W>`\n     /// - `a::b<T,U>::c(V) -> W`"}, {"sha": "b35cfa12eab189d5b913c8344517ca846e51fd1e", "filename": "src/test/run-pass/issue-40962.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Ftest%2Frun-pass%2Fissue-40962.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b364d687b7a3d16fb9553f7b5b0c034c406d91/src%2Ftest%2Frun-pass%2Fissue-40962.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-40962.rs?ref=89b364d687b7a3d16fb9553f7b5b0c034c406d91", "patch": "@@ -0,0 +1,20 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! m {\n+    ($i:meta) => {\n+        #[derive($i)]\n+        struct S;\n+    }\n+}\n+\n+m!(Clone);\n+\n+fn main() {}"}]}