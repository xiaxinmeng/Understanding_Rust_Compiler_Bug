{"sha": "2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNjVlMTBhOWZmZjBmZTVhNGZiMWZjNTQwODFiNGIwY2ExOWFjNjE=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-13T19:29:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-13T19:29:34Z"}, "message": "Fix lib-deque.rs to pass typarams by alias.", "tree": {"sha": "ea9b85687511804e08dc9c569ec4f160b6c44055", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea9b85687511804e08dc9c569ec4f160b6c44055"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61", "html_url": "https://github.com/rust-lang/rust/commit/2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80a4b1ba534ed8d0d4a099349332e937d9c6775c", "url": "https://api.github.com/repos/rust-lang/rust/commits/80a4b1ba534ed8d0d4a099349332e937d9c6775c", "html_url": "https://github.com/rust-lang/rust/commit/80a4b1ba534ed8d0d4a099349332e937d9c6775c"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "4361a1cf79c6b260d06163ea9ad4050e86023db8", "filename": "src/test/run-pass/lib-deque.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61/src%2Ftest%2Frun-pass%2Flib-deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61/src%2Ftest%2Frun-pass%2Flib-deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-deque.rs?ref=2c65e10a9fff0fe5a4fb1fc54081b4b0ca19ac61", "patch": "@@ -91,7 +91,7 @@ fn test_boxes(@int a, @int b, @int c, @int d) {\n   check (deq.get(3) == d);\n }\n \n-type eqfn[T] = fn(T a, T b) -> bool;\n+type eqfn[T] = fn(&T a, &T b) -> bool;\n \n fn test_parameterized[T](eqfn[T] e, &T a, &T b, &T c, &T d) {\n   let deque.t[T] deq = deque.create[T]();\n@@ -142,15 +142,15 @@ tag taggypar[T] {\n type reccy = rec(int x, int y, taggy t);\n \n fn main() {\n-  fn inteq(int a, int b) -> bool {\n+  fn inteq(&int a, &int b) -> bool {\n     ret a == b;\n   }\n \n-  fn intboxeq(@int a, @int b) -> bool {\n+  fn intboxeq(&@int a, &@int b) -> bool {\n     ret a == b;\n   }\n \n-  fn taggyeq(taggy a, taggy b) -> bool {\n+  fn taggyeq(&taggy a, &taggy b) -> bool {\n     alt (a) {\n       case (one(?a1)) {\n         alt (b) {\n@@ -175,7 +175,7 @@ fn main() {\n     }\n   }\n \n-  fn taggypareq[T](taggypar[T] a, taggypar[T] b) -> bool {\n+  fn taggypareq[T](&taggypar[T] a, &taggypar[T] b) -> bool {\n     alt (a) {\n       case (onepar[T](?a1)) {\n         alt (b) {\n@@ -200,7 +200,7 @@ fn main() {\n     }\n   }\n \n-  fn reccyeq(reccy a, reccy b) -> bool {\n+  fn reccyeq(&reccy a, &reccy b) -> bool {\n     ret (a.x == b.x && a.y == b.y && taggyeq(a.t, b.t));\n   }\n "}]}