{"sha": "87a1b3840ecfebdcd22313ed37f0609732d8cf83", "node_id": "C_kwDOAAsO6NoAKDg3YTFiMzg0MGVjZmViZGNkMjIzMTNlZDM3ZjA2MDk3MzJkOGNmODM", "commit": {"author": {"name": "Ezra Shaw", "email": "ezrasure@outlook.com", "date": "2023-04-20T06:58:43Z"}, "committer": {"name": "Ezra Shaw", "email": "ezrashawdev@gmail.com", "date": "2023-05-05T10:40:05Z"}, "message": "tweak spans for `ref mut` suggestion", "tree": {"sha": "fa3adc2fb1a740f58b751d3ea3d81103593466f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa3adc2fb1a740f58b751d3ea3d81103593466f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87a1b3840ecfebdcd22313ed37f0609732d8cf83", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE/c15HB+s7bjrqpLmUVbPWEUVCw0FAmRU3QUACgkQUVbPWEUV\nCw0YSxAAlO8su7u2UbTakg+0LHZdcto6f9tSWV3G3LjPxxZRuTbVR/AK5tng4Bp9\ncz5HydD631J7Drefxb6Zqp2pTy+sV+trdFy3Wu/hV1Lhr36vTwkGbmPVfOIvvfQ0\nFOWi+JunIrHig352XXe9sf40w4t9tEmSHWrneQNmLz7NGpQXRf9giwq5QHgolOJE\n09c0KdpqFjx7yneRrdzQq4PyvyHk25fj9CCoR/HJKQ+hE/pqEyCKKx05H00aXxKC\nZrLNV5Hrn6vJcwgotMp6mzDZeaQp/DAYkbbNH97YO//NEasTW+proXPWtWZh+46S\nRRglDAL89KhM0ng2aWMvnSVUTpUAVQ2pUMTh194KWLzHt/fzgxnvtG9Qk/STPaao\n3mNZwE1zdXDcAfy1klii1ulibkEm12NaEhkWpWy5KUSqdn/xKlN/lrc6x+Oojsjd\n47KS/dVXf1i6I021NN6cBk7ldiQ0PDmSXxkyJXpbm2J7OhXF2zoOodY4iLV2vdSg\nsZOeEPLAQFLuTN/k/gxhKL1q1f6oolOl/K3alfNLp6thtkYFMulyrHaqqcJBsUlz\nZhtw+IqFmba2QPOXWgtrsShz1//24SDqP80g7dP5NapJWyH7zbX3qbuNu8mxWBv0\nlSqvvqDxob5jCLgU689f3YSvkuKv+snQvX69KxGcM3C4ezU4IXc=\n=SYgL\n-----END PGP SIGNATURE-----", "payload": "tree fa3adc2fb1a740f58b751d3ea3d81103593466f8\nparent 336a6569f5477d36151500bbd7c57e3bba357cec\nauthor Ezra Shaw <ezrasure@outlook.com> 1681973923 +1200\ncommitter Ezra Shaw <ezrashawdev@gmail.com> 1683283205 +1200\n\ntweak spans for `ref mut` suggestion\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87a1b3840ecfebdcd22313ed37f0609732d8cf83", "html_url": "https://github.com/rust-lang/rust/commit/87a1b3840ecfebdcd22313ed37f0609732d8cf83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87a1b3840ecfebdcd22313ed37f0609732d8cf83/comments", "author": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ezrashaw", "id": 38062690, "node_id": "MDQ6VXNlcjM4MDYyNjkw", "avatar_url": "https://avatars.githubusercontent.com/u/38062690?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ezrashaw", "html_url": "https://github.com/Ezrashaw", "followers_url": "https://api.github.com/users/Ezrashaw/followers", "following_url": "https://api.github.com/users/Ezrashaw/following{/other_user}", "gists_url": "https://api.github.com/users/Ezrashaw/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ezrashaw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ezrashaw/subscriptions", "organizations_url": "https://api.github.com/users/Ezrashaw/orgs", "repos_url": "https://api.github.com/users/Ezrashaw/repos", "events_url": "https://api.github.com/users/Ezrashaw/events{/privacy}", "received_events_url": "https://api.github.com/users/Ezrashaw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "336a6569f5477d36151500bbd7c57e3bba357cec", "url": "https://api.github.com/repos/rust-lang/rust/commits/336a6569f5477d36151500bbd7c57e3bba357cec", "html_url": "https://github.com/rust-lang/rust/commit/336a6569f5477d36151500bbd7c57e3bba357cec"}], "stats": {"total": 37, "additions": 18, "deletions": 19}, "files": [{"sha": "0a89eb072455b6768a4855b5232a69f761e155c2", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 9, "deletions": 7, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/87a1b3840ecfebdcd22313ed37f0609732d8cf83/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a1b3840ecfebdcd22313ed37f0609732d8cf83/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=87a1b3840ecfebdcd22313ed37f0609732d8cf83", "patch": "@@ -559,9 +559,9 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                                 binding_mode: ty::BindingMode::BindByReference(_),\n                                 ..\n                             })) => {\n-                                let pattern_span = local_decl.source_info.span;\n+                                let pattern_span: Span = local_decl.source_info.span;\n                                 suggest_ref_mut(self.infcx.tcx, pattern_span)\n-                                    .map(|replacement| (true, pattern_span, replacement))\n+                                    .map(|span| (true, span, \"mut \".to_owned()))\n                             }\n \n                             _ => unreachable!(),\n@@ -1316,11 +1316,13 @@ fn get_mut_span_in_struct_field<'tcx>(\n }\n \n /// If possible, suggest replacing `ref` with `ref mut`.\n-fn suggest_ref_mut(tcx: TyCtxt<'_>, binding_span: Span) -> Option<String> {\n-    let hi_src = tcx.sess.source_map().span_to_snippet(binding_span).ok()?;\n-    if hi_src.starts_with(\"ref\") && hi_src[\"ref\".len()..].starts_with(rustc_lexer::is_whitespace) {\n-        let replacement = format!(\"ref mut{}\", &hi_src[\"ref\".len()..]);\n-        Some(replacement)\n+fn suggest_ref_mut(tcx: TyCtxt<'_>, span: Span) -> Option<Span> {\n+    let pattern_str = tcx.sess.source_map().span_to_snippet(span).ok()?;\n+    if pattern_str.starts_with(\"ref\")\n+        && pattern_str[\"ref\".len()..].starts_with(rustc_lexer::is_whitespace)\n+    {\n+        let span = span.with_lo(span.lo() + BytePos(4)).shrink_to_lo();\n+        Some(span)\n     } else {\n         None\n     }"}, {"sha": "8ccb5809e39729143a6be3d6cad8826a673aa428", "filename": "tests/ui/nll/issue-51244.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fnll%2Fissue-51244.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fnll%2Fissue-51244.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnll%2Fissue-51244.stderr?ref=87a1b3840ecfebdcd22313ed37f0609732d8cf83", "patch": "@@ -7,7 +7,7 @@ LL |     *my_ref = 0;\n help: consider changing this to be a mutable reference\n    |\n LL |     let ref mut my_ref @ _ = 0;\n-   |         ~~~~~~~~~~~~~~\n+   |             +++\n \n error: aborting due to previous error\n "}, {"sha": "a033cc0655ef9015e027d1eb8445dc338ab2c472", "filename": "tests/ui/pattern/move-ref-patterns/borrowck-move-ref-pattern.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpattern%2Fmove-ref-patterns%2Fborrowck-move-ref-pattern.stderr?ref=87a1b3840ecfebdcd22313ed37f0609732d8cf83", "patch": "@@ -112,7 +112,7 @@ LL |     *_x0 = U;\n help: consider changing this to be a mutable reference\n    |\n LL |     let (ref mut _x0, _x1, ref _x2, ..) = tup;\n-   |          ~~~~~~~~~~~\n+   |              +++\n \n error[E0594]: cannot assign to `*_x2`, which is behind a `&` reference\n   --> $DIR/borrowck-move-ref-pattern.rs:27:5\n@@ -123,7 +123,7 @@ LL |     *_x2 = U;\n help: consider changing this to be a mutable reference\n    |\n LL |     let (ref _x0, _x1, ref mut _x2, ..) = tup;\n-   |                        ~~~~~~~~~~~\n+   |                            +++\n \n error[E0382]: use of moved value: `tup.1`\n   --> $DIR/borrowck-move-ref-pattern.rs:28:10"}, {"sha": "b40439b8e372c65255e397b3a636d1e0f2ba4d08", "filename": "tests/ui/suggestions/suggest-ref-mut.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fsuggestions%2Fsuggest-ref-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fsuggestions%2Fsuggest-ref-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-ref-mut.rs?ref=87a1b3840ecfebdcd22313ed37f0609732d8cf83", "patch": "@@ -12,19 +12,16 @@ impl X {\n fn main() {\n     let ref foo = 16;\n     //~^ HELP\n-    //~| SUGGESTION ref mut foo\n     *foo = 32;\n     //~^ ERROR\n     if let Some(ref bar) = Some(16) {\n         //~^ HELP\n-        //~| SUGGESTION ref mut bar\n         *bar = 32;\n         //~^ ERROR\n     }\n     match 16 {\n         ref quo => { *quo = 32; },\n         //~^ ERROR\n         //~| HELP\n-        //~| SUGGESTION ref mut quo\n     }\n }"}, {"sha": "cc00022ab8e3d552bdca107b232e4b21c0c71076", "filename": "tests/ui/suggestions/suggest-ref-mut.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fsuggestions%2Fsuggest-ref-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87a1b3840ecfebdcd22313ed37f0609732d8cf83/tests%2Fui%2Fsuggestions%2Fsuggest-ref-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuggestions%2Fsuggest-ref-mut.stderr?ref=87a1b3840ecfebdcd22313ed37f0609732d8cf83", "patch": "@@ -10,37 +10,37 @@ LL |     fn zap(&mut self) {\n    |            ~~~~~~~~~\n \n error[E0594]: cannot assign to `*foo`, which is behind a `&` reference\n-  --> $DIR/suggest-ref-mut.rs:16:5\n+  --> $DIR/suggest-ref-mut.rs:15:5\n    |\n LL |     *foo = 32;\n    |     ^^^^^^^^^ `foo` is a `&` reference, so the data it refers to cannot be written\n    |\n help: consider changing this to be a mutable reference\n    |\n LL |     let ref mut foo = 16;\n-   |         ~~~~~~~~~~~\n+   |             +++\n \n error[E0594]: cannot assign to `*bar`, which is behind a `&` reference\n-  --> $DIR/suggest-ref-mut.rs:21:9\n+  --> $DIR/suggest-ref-mut.rs:19:9\n    |\n LL |         *bar = 32;\n    |         ^^^^^^^^^ `bar` is a `&` reference, so the data it refers to cannot be written\n    |\n help: consider changing this to be a mutable reference\n    |\n LL |     if let Some(ref mut bar) = Some(16) {\n-   |                 ~~~~~~~~~~~\n+   |                     +++\n \n error[E0594]: cannot assign to `*quo`, which is behind a `&` reference\n-  --> $DIR/suggest-ref-mut.rs:25:22\n+  --> $DIR/suggest-ref-mut.rs:23:22\n    |\n LL |         ref quo => { *quo = 32; },\n    |                      ^^^^^^^^^ `quo` is a `&` reference, so the data it refers to cannot be written\n    |\n help: consider changing this to be a mutable reference\n    |\n LL |         ref mut quo => { *quo = 32; },\n-   |         ~~~~~~~~~~~\n+   |             +++\n \n error: aborting due to 4 previous errors\n "}]}