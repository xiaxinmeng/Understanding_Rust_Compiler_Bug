{"sha": "3c2a709620fd1cc3802a6ffce558e673b1add954", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMmE3MDk2MjBmZDFjYzM4MDJhNmZmY2U1NThlNjczYjFhZGQ5NTQ=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2021-05-26T11:32:10Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-26T11:32:10Z"}, "message": "Rollup merge of #85678 - lukas-code:matches2021, r=dtolnay\n\nfix `matches!` and `assert_matches!` on edition 2021\n\nPreviously this code failed to compile on edition 2021. [(Playground)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=53960f2f051f641777b9e458da747707)\n```rust\nfn main() {\n    matches!((), ());\n}\n```\n```\n   Compiling playground v0.0.1 (/playground)\nerror: `$pattern:pat` may be followed by `|`, which is not allowed for `pat` fragments\n    |\n    = note: allowed there are: `=>`, `,`, `=`, `if` or `in`\n\nerror: aborting due to previous error\n\nerror: could not compile `playground`\n\nTo learn more, run the command again with --verbose.\n```", "tree": {"sha": "f58de384850b95582af962d4658be78b73785206", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f58de384850b95582af962d4658be78b73785206"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c2a709620fd1cc3802a6ffce558e673b1add954", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgrjG7CRBK7hj4Ov3rIwAAM6gIAKNcFBAP+T9uOgnBoF+w3k29\njS/s3OVL2HkfAa0698dQUYn8PtmCY/XRRbj+yQGyHuNSd+e08iQLs5kcfT95QAXG\nlTqxGEf15SJIJJbVIXh5ocBlWKLvKEF4Dp0ugSA71y5g9Q0oKnv9D8D7WI5pM3mV\n558WgY03KXFTVMr/AFVfbLa7nqxrN+ZRNqxg6Am+XfKU9yY3cWR9PY1Jc7MryTbf\nTdpyS15ETV2iaFQKM0ETJteKKvrfcyJHOvjcopLRogWLyVaEcQj/zpz0jLymz4Rr\nDdVcp9wUdfvMHjQvNUXGYDGZVA90KZqOc7NaG7dE6/D3pDF+D/IBIfY8v6Qoxew=\n=1STH\n-----END PGP SIGNATURE-----\n", "payload": "tree f58de384850b95582af962d4658be78b73785206\nparent 12ab323d0ec860bb93c4f9da7a61ee0dde016f8c\nparent 824c7435fa849d101a522e3744aff85074752734\nauthor Dylan DPC <dylan.dpc@gmail.com> 1622028730 +0200\ncommitter GitHub <noreply@github.com> 1622028730 +0200\n\nRollup merge of #85678 - lukas-code:matches2021, r=dtolnay\n\nfix `matches!` and `assert_matches!` on edition 2021\n\nPreviously this code failed to compile on edition 2021. [(Playground)](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2021&gist=53960f2f051f641777b9e458da747707)\n```rust\nfn main() {\n    matches!((), ());\n}\n```\n```\n   Compiling playground v0.0.1 (/playground)\nerror: `$pattern:pat` may be followed by `|`, which is not allowed for `pat` fragments\n    |\n    = note: allowed there are: `=>`, `,`, `=`, `if` or `in`\n\nerror: aborting due to previous error\n\nerror: could not compile `playground`\n\nTo learn more, run the command again with --verbose.\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2a709620fd1cc3802a6ffce558e673b1add954", "html_url": "https://github.com/rust-lang/rust/commit/3c2a709620fd1cc3802a6ffce558e673b1add954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c2a709620fd1cc3802a6ffce558e673b1add954/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12ab323d0ec860bb93c4f9da7a61ee0dde016f8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/12ab323d0ec860bb93c4f9da7a61ee0dde016f8c", "html_url": "https://github.com/rust-lang/rust/commit/12ab323d0ec860bb93c4f9da7a61ee0dde016f8c"}, {"sha": "824c7435fa849d101a522e3744aff85074752734", "url": "https://api.github.com/repos/rust-lang/rust/commits/824c7435fa849d101a522e3744aff85074752734", "html_url": "https://github.com/rust-lang/rust/commit/824c7435fa849d101a522e3744aff85074752734"}], "stats": {"total": 19, "additions": 16, "deletions": 3}, "files": [{"sha": "a023edaca9e940563911eb1117989b774e4182f6", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c2a709620fd1cc3802a6ffce558e673b1add954/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2a709620fd1cc3802a6ffce558e673b1add954/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=3c2a709620fd1cc3802a6ffce558e673b1add954", "patch": "@@ -168,6 +168,7 @@\n #![feature(no_coverage)] // rust-lang/rust#84605\n #![feature(int_error_matching)]\n #![deny(unsafe_op_in_unsafe_fn)]\n+#![deny(or_patterns_back_compat)]\n \n // allow using `core::` in intra-doc links\n #[allow(unused_extern_crates)]"}, {"sha": "7eb65483b99e77e09ea5825062c6e5828a110d94", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3c2a709620fd1cc3802a6ffce558e673b1add954/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2a709620fd1cc3802a6ffce558e673b1add954/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=3c2a709620fd1cc3802a6ffce558e673b1add954", "patch": "@@ -138,7 +138,7 @@ macro_rules! assert_ne {\n #[unstable(feature = \"assert_matches\", issue = \"82775\")]\n #[allow_internal_unstable(core_panic)]\n macro_rules! assert_matches {\n-    ($left:expr, $( $pattern:pat )|+ $( if $guard: expr )? $(,)?) => ({\n+    ($left:expr, $( $pattern:pat_param )|+ $( if $guard: expr )? $(,)?) => ({\n         match $left {\n             $( $pattern )|+ $( if $guard )? => {}\n             ref left_val => {\n@@ -150,7 +150,7 @@ macro_rules! assert_matches {\n             }\n         }\n     });\n-    ($left:expr, $( $pattern:pat )|+ $( if $guard: expr )?, $($arg:tt)+) => ({\n+    ($left:expr, $( $pattern:pat_param )|+ $( if $guard: expr )?, $($arg:tt)+) => ({\n         match $left {\n             $( $pattern )|+ $( if $guard )? => {}\n             ref left_val => {\n@@ -315,7 +315,7 @@ macro_rules! debug_assert_matches {\n #[macro_export]\n #[stable(feature = \"matches_macro\", since = \"1.42.0\")]\n macro_rules! matches {\n-    ($expression:expr, $( $pattern:pat )|+ $( if $guard: expr )? $(,)?) => {\n+    ($expression:expr, $( $pattern:pat_param )|+ $( if $guard: expr )? $(,)?) => {\n         match $expression {\n             $( $pattern )|+ $( if $guard )? => true,\n             _ => false"}, {"sha": "1090b1578ba511b6e8a6e2dad8810c73d559d24c", "filename": "src/test/ui/matches2021.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c2a709620fd1cc3802a6ffce558e673b1add954/src%2Ftest%2Fui%2Fmatches2021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c2a709620fd1cc3802a6ffce558e673b1add954/src%2Ftest%2Fui%2Fmatches2021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmatches2021.rs?ref=3c2a709620fd1cc3802a6ffce558e673b1add954", "patch": "@@ -0,0 +1,12 @@\n+// run-pass\n+// edition:2021\n+// compile-flags: -Zunstable-options\n+\n+// regression test for https://github.com/rust-lang/rust/pull/85678\n+\n+#![feature(assert_matches)]\n+\n+fn main() {\n+    assert!(matches!((), ()));\n+    assert_matches!((), ());\n+}"}]}