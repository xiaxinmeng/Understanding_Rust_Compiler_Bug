{"sha": "85ba5f0f17f71e5010e136cf1e7c7b6266188c42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YmE1ZjBmMTdmNzFlNTAxMGUxMzZjZjFlN2M3YjYyNjYxODhjNDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-31T12:03:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-31T12:03:28Z"}, "message": "Auto merge of #3608 - phansch:improve_util_docs, r=oli-obk\n\nSome improvements to util documentation\n\nNone", "tree": {"sha": "99bc6eb910605e41190c2900bca27d8f56e27c45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99bc6eb910605e41190c2900bca27d8f56e27c45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85ba5f0f17f71e5010e136cf1e7c7b6266188c42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85ba5f0f17f71e5010e136cf1e7c7b6266188c42", "html_url": "https://github.com/rust-lang/rust/commit/85ba5f0f17f71e5010e136cf1e7c7b6266188c42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85ba5f0f17f71e5010e136cf1e7c7b6266188c42/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2fd8e71e90f08c3763a34a80cab6c82970527a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2fd8e71e90f08c3763a34a80cab6c82970527a5", "html_url": "https://github.com/rust-lang/rust/commit/f2fd8e71e90f08c3763a34a80cab6c82970527a5"}, {"sha": "cc76384807ab0552697cf67631197266cb2f3ef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc76384807ab0552697cf67631197266cb2f3ef4", "html_url": "https://github.com/rust-lang/rust/commit/cc76384807ab0552697cf67631197266cb2f3ef4"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "647bae1ae6bd5742a4e0f55607f0240315870285", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 20, "deletions": 1, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/85ba5f0f17f71e5010e136cf1e7c7b6266188c42/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85ba5f0f17f71e5010e136cf1e7c7b6266188c42/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=85ba5f0f17f71e5010e136cf1e7c7b6266188c42", "patch": "@@ -62,6 +62,15 @@ pub fn differing_macro_contexts(lhs: Span, rhs: Span) -> bool {\n     rhs.ctxt() != lhs.ctxt()\n }\n \n+/// Returns `true` if the given `NodeId` is inside a constant context\n+///\n+/// # Example\n+///\n+/// ```rust,ignore\n+/// if in_constant(cx, expr.id) {\n+///     // Do something\n+/// }\n+/// ```\n pub fn in_constant(cx: &LateContext<'_, '_>, id: NodeId) -> bool {\n     let parent_id = cx.tcx.hir().get_parent(id);\n     match cx.tcx.hir().body_owner_kind(parent_id) {\n@@ -377,6 +386,9 @@ pub fn contains_name(name: Name, expr: &Expr) -> bool {\n \n /// Convert a span to a code snippet if available, otherwise use default.\n ///\n+/// This is useful if you want to provide suggestions for your lint or more generally, if you want\n+/// to convert a given `Span` to a `str`.\n+///\n /// # Example\n /// ```rust,ignore\n /// snippet(cx, expr.span, \"..\")\n@@ -430,7 +442,7 @@ pub fn snippet_opt<'a, T: LintContext<'a>>(cx: &T, span: Span) -> Option<String>\n ///\n /// # Example\n /// ```rust,ignore\n-/// snippet(cx, expr.span, \"..\")\n+/// snippet_block(cx, expr.span, \"..\")\n /// ```\n pub fn snippet_block<'a, 'b, T: LintContext<'b>>(cx: &T, span: Span, default: &'a str) -> Cow<'a, str> {\n     let snip = snippet(cx, span, default);\n@@ -741,6 +753,13 @@ pub fn is_integer_literal(expr: &Expr, value: u128) -> bool {\n     false\n }\n \n+/// Returns `true` if the given `Expr` has been coerced before.\n+///\n+/// Examples of coercions can be found in the Nomicon at\n+/// <https://doc.rust-lang.org/nomicon/coercions.html>.\n+///\n+/// See `rustc::ty::adjustment::Adjustment` and `rustc_typeck::check::coercion` for more\n+/// information on adjustments and coercions.\n pub fn is_adjusted(cx: &LateContext<'_, '_>, e: &Expr) -> bool {\n     cx.tables.adjustments().get(e.hir_id).is_some()\n }"}]}