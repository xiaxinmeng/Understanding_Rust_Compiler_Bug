{"sha": "15d4383053307a983ea81197ec2a313bc9a471d9", "node_id": "C_kwDOAAsO6NoAKDE1ZDQzODMwNTMzMDdhOTgzZWE4MTE5N2VjMmEzMTNiYzlhNDcxZDk", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-10-24T14:28:53Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-10-24T14:28:53Z"}, "message": "Let `InferenceTable::unify()` relate `Zip` values", "tree": {"sha": "277ea3a0d392c6e50748edd657a6e9201bff9bc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/277ea3a0d392c6e50748edd657a6e9201bff9bc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15d4383053307a983ea81197ec2a313bc9a471d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmNWrDUACgkQ4laYqTBY\nYXFN6w//dmmoYtKGciwDO08UhIQXonsFiibYl+wOm6grV5ICduU4iFoyjEzfu8zj\nMxITTBa8NevwulGrU/iGOgkU0MGvH8ThlhM0dnsd0hWTO7zCTuCYahCQIoToo9IL\nizWQkZj/frv3SH6wDGm85CyfCDodPxhj9ivBwYLLZaMXDyhMfBMN2M1sD6FNjXO0\noF/ulKgj8UF/HhozVhdQCYSbsAeLDtQKfnsHlwex+hc8q+mmNQug1GvSChyeIg0t\nqXHJsDiq3UnDtlY1gJEcFAqZPPaTk/lnBwwpVE+fTSDSOWFLt+IR91ExEASV+wyS\nBumdCW/ysq0ZgA/LVIW+kb1N9a25S/4HHn5ypUnElb1aD7rg69itXLPqvU//nn3k\nGzgWEW3vCqozyeJLpRuE1VCnwiyJ92YvFyD25umpYwXHzzDoloS2rY18+MV8Ucoz\nnC06rMqt0/HHK2uWd87PZtB6AXH56XJN+mJ1f7VZfUstJJryRZx0l4IQ9Bp86h5+\nzimfIPacTfjfx5JsX4cl3KprqNXHXSyZgbRGW8A9BQq+MmviUP4xgNrFus0V2oTL\nFFlzBPfsFvhOP7koeRj7so4H0t8u2aBF1YzjELW8RLB/z3M5Nfy8GSZQQGKGIxsa\nOmDszJGfIeMDi11+XVpNFvR8c6tFy1CGr7xpBqShnnPuEPkTKJE=\n=nBfT\n-----END PGP SIGNATURE-----", "payload": "tree 277ea3a0d392c6e50748edd657a6e9201bff9bc6\nparent 6afd0f57eb97306e677caa2e072f7537a2b314a3\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1666621733 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1666621733 +0900\n\nLet `InferenceTable::unify()` relate `Zip` values\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15d4383053307a983ea81197ec2a313bc9a471d9", "html_url": "https://github.com/rust-lang/rust/commit/15d4383053307a983ea81197ec2a313bc9a471d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15d4383053307a983ea81197ec2a313bc9a471d9/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6afd0f57eb97306e677caa2e072f7537a2b314a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6afd0f57eb97306e677caa2e072f7537a2b314a3", "html_url": "https://github.com/rust-lang/rust/commit/6afd0f57eb97306e677caa2e072f7537a2b314a3"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "12f45f00f9c4dce9a1052c39fe7e6f6c2f6b70fa", "filename": "crates/hir-ty/src/infer/unify.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/15d4383053307a983ea81197ec2a313bc9a471d9/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d4383053307a983ea81197ec2a313bc9a471d9/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Funify.rs?ref=15d4383053307a983ea81197ec2a313bc9a471d9", "patch": "@@ -340,8 +340,8 @@ impl<'a> InferenceTable<'a> {\n         self.resolve_with_fallback(t, &|_, _, d, _| d)\n     }\n \n-    /// Unify two types and register new trait goals that arise from that.\n-    pub(crate) fn unify(&mut self, ty1: &Ty, ty2: &Ty) -> bool {\n+    /// Unify two relatable values (e.g. `Ty`) and register new trait goals that arise from that.\n+    pub(crate) fn unify<T: ?Sized + Zip<Interner>>(&mut self, ty1: &T, ty2: &T) -> bool {\n         let result = match self.try_unify(ty1, ty2) {\n             Ok(r) => r,\n             Err(_) => return false,\n@@ -350,9 +350,13 @@ impl<'a> InferenceTable<'a> {\n         true\n     }\n \n-    /// Unify two types and return new trait goals arising from it, so the\n+    /// Unify two relatable values (e.g. `Ty`) and return new trait goals arising from it, so the\n     /// caller needs to deal with them.\n-    pub(crate) fn try_unify<T: Zip<Interner>>(&mut self, t1: &T, t2: &T) -> InferResult<()> {\n+    pub(crate) fn try_unify<T: ?Sized + Zip<Interner>>(\n+        &mut self,\n+        t1: &T,\n+        t2: &T,\n+    ) -> InferResult<()> {\n         match self.var_unification_table.relate(\n             Interner,\n             &self.db,"}, {"sha": "6d3df34746e1ec5c6767a918694f965f9d381a7f", "filename": "crates/hir-ty/src/method_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15d4383053307a983ea81197ec2a313bc9a471d9/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15d4383053307a983ea81197ec2a313bc9a471d9/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fmethod_resolution.rs?ref=15d4383053307a983ea81197ec2a313bc9a471d9", "patch": "@@ -1214,7 +1214,7 @@ fn is_valid_fn_candidate(\n             let expected_receiver =\n                 sig.map(|s| s.params()[0].clone()).substitute(Interner, &fn_subst);\n \n-            check_that!(table.unify(&receiver_ty, &expected_receiver));\n+            check_that!(table.unify(receiver_ty, &expected_receiver));\n         }\n \n         if let ItemContainerId::ImplId(impl_id) = container {"}]}