{"sha": "51f209a61f38eaabe6bce54118e53432a7ba5d55", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZjIwOWE2MWYzOGVhYWJlNmJjZTU0MTE4ZTUzNDMyYTdiYTVkNTU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-14T15:56:21Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-24T09:41:15Z"}, "message": "write_primval used to leak memory if the destination was ByRef\n\ninstead of duplicating all the code from `write_value`, we forward to it.", "tree": {"sha": "4bb10d911e8bc09501049ae137cdf38d0c061656", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bb10d911e8bc09501049ae137cdf38d0c061656"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51f209a61f38eaabe6bce54118e53432a7ba5d55", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAliv/7sACgkQpp+NIls6\n19mtHg//WlkVxQGfRZtQxcErD5DfnfygfefiIwadjDhY1s4AF53WX4Ul3SH8SYdg\nsJkfHHj0Nl9c0jcKPpCitD6W10MK6ZzrfiAxG+m9Ws5aisZzlUh2hLFkOYap2eCJ\ngeF6LB2cN1jeHQVMAKJYGC8ZLHSsg/haS+GWKyn911SlF6Za8uMbyagrjE9O+wx4\nXBsKexlSnA2gUZsJsrcp/9KqLzMHeZncerpHU385WRMFAXb2zsenxr6ZS04Oz/Yz\napNYfygt2s0KO/oqBp51S+xIS8ondSY3vWGpRjOsKN8qAFGiFVLPSv+FX0ih7NOR\nfpJPY4/nfxCId5WkwPcQgu01eDylfa/Zr4+L3E4xvVHWU2HTJ6HRBDBggUDN5v4R\nyyOY70Z0IczMjVZGJ/4K90lzjNK8chVrKFLcmJT7U3eovgR8qpRw6kQ0k4h/dHA7\nk0ZNox6Sq0CxI4P8wNAx98rovg2bVXkUZXXW8HEw6hnAOUAT2fmPc2pldr/PQ+0V\n8A3hVekXjVN3Zlj1ENX6NU5ZWJHvPppXEkmdA809p2m1nc9XffNAOUVGauZ8Jl+H\nEEA581NJ540qBgcaDbFir1K+AEP0y3u4u7hbD7Cdp3EvuCYZXBJIup8AsdvJK7EU\nuqrAQw1b0ukaP7F/xSCA1nedL3k0l2gOGX7C/yesCcnhGd0tMK0=\n=JjFg\n-----END PGP SIGNATURE-----", "payload": "tree 4bb10d911e8bc09501049ae137cdf38d0c061656\nparent c4c9ff8d3f1eed85ec7bb08e402e64f545d45e42\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487087781 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487929275 +0100\n\nwrite_primval used to leak memory if the destination was ByRef\n\ninstead of duplicating all the code from `write_value`, we forward to it."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51f209a61f38eaabe6bce54118e53432a7ba5d55", "html_url": "https://github.com/rust-lang/rust/commit/51f209a61f38eaabe6bce54118e53432a7ba5d55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51f209a61f38eaabe6bce54118e53432a7ba5d55/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4c9ff8d3f1eed85ec7bb08e402e64f545d45e42", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4c9ff8d3f1eed85ec7bb08e402e64f545d45e42", "html_url": "https://github.com/rust-lang/rust/commit/c4c9ff8d3f1eed85ec7bb08e402e64f545d45e42"}], "stats": {"total": 21, "additions": 1, "deletions": 20}, "files": [{"sha": "0ab6e85e389d0563fc761b5e939ccfc92f3aa7e6", "filename": "src/eval_context.rs", "status": "modified", "additions": 1, "deletions": 20, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/51f209a61f38eaabe6bce54118e53432a7ba5d55/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51f209a61f38eaabe6bce54118e53432a7ba5d55/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=51f209a61f38eaabe6bce54118e53432a7ba5d55", "patch": "@@ -929,26 +929,7 @@ impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n         val: PrimVal,\n         dest_ty: Ty<'tcx>,\n     ) -> EvalResult<'tcx> {\n-        match dest {\n-            Lvalue::Ptr { ptr, extra } => {\n-                assert_eq!(extra, LvalueExtra::None);\n-                let size = self.type_size(dest_ty)?.expect(\"dest type must be sized\");\n-                self.memory.write_primval(ptr, val, size)\n-            }\n-            Lvalue::Local { frame, local, field } => {\n-                self.stack[frame].set_local(local, field.map(|(i, _)| i), Value::ByVal(val));\n-                Ok(())\n-            }\n-            Lvalue::Global(cid) => {\n-                let global_val = self.globals.get_mut(&cid).expect(\"global not cached\");\n-                if global_val.mutable {\n-                    global_val.value = Value::ByVal(val);\n-                    Ok(())\n-                } else {\n-                    Err(EvalError::ModifiedConstantMemory)\n-                }\n-            }\n-        }\n+        self.write_value(Value::ByVal(val), dest, dest_ty)\n     }\n \n     pub(super) fn write_value("}]}