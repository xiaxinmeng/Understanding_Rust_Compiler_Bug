{"sha": "ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNGIxMzRjNmJlMjc2NDJkYmU5MTVmMzJhNDFmOWEyMWJkMGMxYzk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-08-30T08:27:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-30T08:27:57Z"}, "message": "Merge #5914\n\n5914: Replace custom `xtask::not_bash::fs2` setup with fs_err crate r=matklad a=Veetaha\n\n\n\nCo-authored-by: Veetaha <veetaha2@gmail.com>", "tree": {"sha": "a240f5e253dfca1e473fd9d82354246f2c167536", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a240f5e253dfca1e473fd9d82354246f2c167536"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfS2MNCRBK7hj4Ov3rIwAAdHIIAAD6wX3YZKv51XtFTLF9Jfre\nPzZ80PEogUHFa7uFVlp/VlQshe29T0xNa5NY8+fvx83Ga01UePN7zaMjFA1dCMD5\nNTq6Ii8bpN2K79udl2wi7DdYFmrO5c0nRpXhiQgM9uoib9Ut5JHd+vYKCcDVfiUd\nolnvZcnWvj1p6YIqMclyLs89rD/euzW4odTlSaEhP0G5dzJZlk+Sq/aFPDTcJ+Ld\nxR84PVIO5Oks4CL9LfG/cQt4ImLETATc8DEoMgYrQ4sOyRvzawfi/jW87JE75VN7\n6B2c9pNAfzFMG2HaInfG52BtCrBdguBjTESGF7VOEwk8DEZUOl3EEvIJcBbc4lg=\n=2NpW\n-----END PGP SIGNATURE-----\n", "payload": "tree a240f5e253dfca1e473fd9d82354246f2c167536\nparent dd685d0d51a8204ae384a422151b3154a38d6f13\nparent 4bc56ebd936cc1b580ef88c40eead2ba3209cdbe\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1598776077 +0000\ncommitter GitHub <noreply@github.com> 1598776077 +0000\n\nMerge #5914\n\n5914: Replace custom `xtask::not_bash::fs2` setup with fs_err crate r=matklad a=Veetaha\n\n\n\nCo-authored-by: Veetaha <veetaha2@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "html_url": "https://github.com/rust-lang/rust/commit/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd685d0d51a8204ae384a422151b3154a38d6f13", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd685d0d51a8204ae384a422151b3154a38d6f13", "html_url": "https://github.com/rust-lang/rust/commit/dd685d0d51a8204ae384a422151b3154a38d6f13"}, {"sha": "4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe", "html_url": "https://github.com/rust-lang/rust/commit/4bc56ebd936cc1b580ef88c40eead2ba3209cdbe"}], "stats": {"total": 57, "additions": 12, "deletions": 45}, "files": [{"sha": "cec4462f2045429574028263e68f24f9aefd981a", "filename": "Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "patch": "@@ -385,6 +385,12 @@ dependencies = [\n  \"toolchain\",\n ]\n \n+[[package]]\n+name = \"fs-err\"\n+version = \"2.3.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"c1a51f8b7158efbe531f7baa74e38e49fbc41239e5d66720bb37ed39c27c241a\"\n+\n [[package]]\n name = \"fsevent\"\n version = \"2.0.2\"\n@@ -1875,6 +1881,7 @@ version = \"0.1.0\"\n dependencies = [\n  \"anyhow\",\n  \"flate2\",\n+ \"fs-err\",\n  \"pico-args\",\n  \"proc-macro2\",\n  \"quote\","}, {"sha": "01a8388253876cac635950159cab1a1b38ae370f", "filename": "xtask/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/xtask%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/xtask%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2FCargo.toml?ref=ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "patch": "@@ -18,4 +18,5 @@ quote = \"1.0.2\"\n ungrammar = \"1.1.3\"\n walkdir = \"2.3.1\"\n write-json =  \"0.1.0\"\n+fs-err = \"2.3\"\n # Avoid adding more dependencies to this crate"}, {"sha": "aa7d949677dc0d3ac6f525d012e09d7cc9844921", "filename": "xtask/src/dist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/xtask%2Fsrc%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/xtask%2Fsrc%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fdist.rs?ref=ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "patch": "@@ -115,7 +115,7 @@ impl Patch {\n         self\n     }\n \n-    fn commit(&self) -> Result<()> {\n+    fn commit(&self) -> io::Result<()> {\n         fs2::write(&self.path, &self.contents)\n     }\n }"}, {"sha": "038898993ac046cea756fefa0851b02d379d19ab", "filename": "xtask/src/not_bash.rs", "status": "modified", "additions": 3, "deletions": 44, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/xtask%2Fsrc%2Fnot_bash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac4b134c6be27642dbe915f32a41f9a21bd0c1c9/xtask%2Fsrc%2Fnot_bash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fnot_bash.rs?ref=ac4b134c6be27642dbe915f32a41f9a21bd0c1c9", "patch": "@@ -4,55 +4,14 @@ use std::{\n     cell::RefCell,\n     env,\n     ffi::OsString,\n-    io::Write,\n+    io::{self, Write},\n     path::{Path, PathBuf},\n     process::{Command, Stdio},\n };\n \n use anyhow::{bail, Context, Result};\n \n-pub mod fs2 {\n-    use std::{fs, path::Path};\n-\n-    use anyhow::{Context, Result};\n-\n-    pub fn read_dir<P: AsRef<Path>>(path: P) -> Result<fs::ReadDir> {\n-        let path = path.as_ref();\n-        fs::read_dir(path).with_context(|| format!(\"Failed to read {}\", path.display()))\n-    }\n-\n-    pub fn read_to_string<P: AsRef<Path>>(path: P) -> Result<String> {\n-        let path = path.as_ref();\n-        fs::read_to_string(path).with_context(|| format!(\"Failed to read {}\", path.display()))\n-    }\n-\n-    pub fn write<P: AsRef<Path>, C: AsRef<[u8]>>(path: P, contents: C) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::write(path, contents).with_context(|| format!(\"Failed to write {}\", path.display()))\n-    }\n-\n-    pub fn copy<P: AsRef<Path>, Q: AsRef<Path>>(from: P, to: Q) -> Result<u64> {\n-        let from = from.as_ref();\n-        let to = to.as_ref();\n-        fs::copy(from, to)\n-            .with_context(|| format!(\"Failed to copy {} to {}\", from.display(), to.display()))\n-    }\n-\n-    pub fn remove_file<P: AsRef<Path>>(path: P) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::remove_file(path).with_context(|| format!(\"Failed to remove file {}\", path.display()))\n-    }\n-\n-    pub fn remove_dir_all<P: AsRef<Path>>(path: P) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::remove_dir_all(path).with_context(|| format!(\"Failed to remove dir {}\", path.display()))\n-    }\n-\n-    pub fn create_dir_all<P: AsRef<Path>>(path: P) -> Result<()> {\n-        let path = path.as_ref();\n-        fs::create_dir_all(path).with_context(|| format!(\"Failed to create dir {}\", path.display()))\n-    }\n-}\n+pub use fs_err as fs2;\n \n #[macro_export]\n macro_rules! run {\n@@ -98,7 +57,7 @@ impl Drop for Pushenv {\n     }\n }\n \n-pub fn rm_rf(path: impl AsRef<Path>) -> Result<()> {\n+pub fn rm_rf(path: impl AsRef<Path>) -> io::Result<()> {\n     let path = path.as_ref();\n     if !path.exists() {\n         return Ok(());"}]}