{"sha": "d62cf317aa2d229339ce2f9555e65560c66edb5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2MmNmMzE3YWEyZDIyOTMzOWNlMmY5NTU1ZTY1NTYwYzY2ZWRiNWY=", "commit": {"author": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-12-23T00:49:33Z"}, "committer": {"name": "Tobias Bucher", "email": "tobiasbucher5991@gmail.com", "date": "2014-12-23T00:50:54Z"}, "message": "Fix `collections::VecMap`'s `PartialEq` implementation\n\nPreviously it took capacity into account.\n\nAdditionally remove the `ne` implementation of `RingBuf` which is the default\none anyway.", "tree": {"sha": "4d5c1cb4afdd13fe47f76f042e9c4a8bc11bdec8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d5c1cb4afdd13fe47f76f042e9c4a8bc11bdec8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d62cf317aa2d229339ce2f9555e65560c66edb5f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d62cf317aa2d229339ce2f9555e65560c66edb5f", "html_url": "https://github.com/rust-lang/rust/commit/d62cf317aa2d229339ce2f9555e65560c66edb5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d62cf317aa2d229339ce2f9555e65560c66edb5f/comments", "author": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tbu-", "id": 6666593, "node_id": "MDQ6VXNlcjY2NjY1OTM=", "avatar_url": "https://avatars.githubusercontent.com/u/6666593?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tbu-", "html_url": "https://github.com/tbu-", "followers_url": "https://api.github.com/users/tbu-/followers", "following_url": "https://api.github.com/users/tbu-/following{/other_user}", "gists_url": "https://api.github.com/users/tbu-/gists{/gist_id}", "starred_url": "https://api.github.com/users/tbu-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tbu-/subscriptions", "organizations_url": "https://api.github.com/users/tbu-/orgs", "repos_url": "https://api.github.com/users/tbu-/repos", "events_url": "https://api.github.com/users/tbu-/events{/privacy}", "received_events_url": "https://api.github.com/users/tbu-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34d680009205de2302b902d8f9f5f7ae7a042f1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/34d680009205de2302b902d8f9f5f7ae7a042f1a", "html_url": "https://github.com/rust-lang/rust/commit/34d680009205de2302b902d8f9f5f7ae7a042f1a"}], "stats": {"total": 16, "additions": 12, "deletions": 4}, "files": [{"sha": "27209f98cdb9c7cd07cb46bbb72786dcc185d54a", "filename": "src/libcollections/ring_buf.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d62cf317aa2d229339ce2f9555e65560c66edb5f/src%2Flibcollections%2Fring_buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62cf317aa2d229339ce2f9555e65560c66edb5f/src%2Flibcollections%2Fring_buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fring_buf.rs?ref=d62cf317aa2d229339ce2f9555e65560c66edb5f", "patch": "@@ -1294,9 +1294,6 @@ impl<A: PartialEq> PartialEq for RingBuf<A> {\n         self.len() == other.len() &&\n             self.iter().zip(other.iter()).all(|(a, b)| a.eq(b))\n     }\n-    fn ne(&self, other: &RingBuf<A>) -> bool {\n-        !self.eq(other)\n-    }\n }\n \n impl<A: Eq> Eq for RingBuf<A> {}"}, {"sha": "12e1a3dbad91ffc80f8d9678fea8855695a6e6e8", "filename": "src/libcollections/vec_map.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d62cf317aa2d229339ce2f9555e65560c66edb5f/src%2Flibcollections%2Fvec_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d62cf317aa2d229339ce2f9555e65560c66edb5f/src%2Flibcollections%2Fvec_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_map.rs?ref=d62cf317aa2d229339ce2f9555e65560c66edb5f", "patch": "@@ -60,7 +60,6 @@ use vec::Vec;\n /// months.clear();\n /// assert!(months.is_empty());\n /// ```\n-#[deriving(PartialEq, Eq)]\n pub struct VecMap<V> {\n     v: Vec<Option<V>>,\n }\n@@ -489,6 +488,14 @@ impl<V:Clone> VecMap<V> {\n     }\n }\n \n+impl<V: PartialEq> PartialEq for VecMap<V> {\n+    fn eq(&self, other: &VecMap<V>) -> bool {\n+        iter::order::eq(self.iter(), other.iter())\n+    }\n+}\n+\n+impl<V: Eq> Eq for VecMap<V> {}\n+\n impl<V: PartialOrd> PartialOrd for VecMap<V> {\n     #[inline]\n     fn partial_cmp(&self, other: &VecMap<V>) -> Option<Ordering> {\n@@ -952,6 +959,10 @@ mod test_map {\n         assert!(a != b);\n         assert!(b.insert(5, 19).is_none());\n         assert!(a == b);\n+\n+        a = VecMap::new();\n+        b = VecMap::with_capacity(1);\n+        assert!(a == b);\n     }\n \n     #[test]"}]}