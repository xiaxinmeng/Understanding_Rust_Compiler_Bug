{"sha": "2d95b5bce7119ae5549499083d24d143eae34d6b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkOTViNWJjZTcxMTlhZTU1NDk0OTkwODNkMjRkMTQzZWFlMzRkNmI=", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-09-04T18:22:34Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2021-09-04T18:22:34Z"}, "message": "Document when to use Windows' `symlink_dir` vs. `symlink_file`\n\nIt was previously unclear which should be used when.", "tree": {"sha": "366b587921d609d568b7b1d08be61399909d5d5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/366b587921d609d568b7b1d08be61399909d5d5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d95b5bce7119ae5549499083d24d143eae34d6b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmEzuXAACgkQcTRy8vRW\nJ95Xtw//VKIgKw3dXNat7JapYoZfyJ308N65fmpTQkJBmgNn2d4BjFNchGVxVj0t\nykp1W5j2nbNGlAbWtFiVt79srRMQAf3XMG549ItUY6DwxJxDGNEtvhqOt7m7ODVa\nDs+jJH++KTkl1abWJ7rJuFP9YQgRMbVpDxNC8ELNgpQcI0CfJ5Up0r0gobR6JWx8\nNyb1PfQKfv6BoOPZRXYfMLXQ0NFp5Z3NlrLSktfjvu8VQ/sy6S19rWFfc6Ds49Cj\n+ndP2gf2G8oqdSXWaBD9wjU9DW16NJM8uT3oVPcoFQBWDhXe/UjcX4CCyH7eVipm\n3fqQm4SlGMuipijyNC+Kew37TBBMXUUXHf2riNOJTFcnav776guIoex9ZQ7BKqi9\npCVFO+eUZInmaEd+beHeGYYoVGZOKO9cVwFwsmAOn7YXdVIge8j5RZd5TV3KkIdV\nMj8ewy3VBp0M2HCIKYrly3tWuXyyYvldk6ETrHtlLKtl28x0CdDkCJr9Uks+OnHg\nLTFH1JoptucrcUiwcirQlF+27IeKI1pL2A1tl/7S4ea3DnBSnMGOkjPnOY7AT5cP\nRK7ZuK0Bw/gp5jiEHo0w8g7B4uL/m1WMK9aP9+Dkkeu6AyTID8ITW0d6CbBHriAt\n/26vx1dLRpPVYETErAmo3SD6GdQ0plE37QZP1SP+Kh9mlJoVHL4=\n=RnCS\n-----END PGP SIGNATURE-----", "payload": "tree 366b587921d609d568b7b1d08be61399909d5d5e\nparent 226e181b80fa0be755872b66916ef7e704601ec2\nauthor Chris Denton <christophersdenton@gmail.com> 1630779754 +0100\ncommitter Chris Denton <christophersdenton@gmail.com> 1630779754 +0100\n\nDocument when to use Windows' `symlink_dir` vs. `symlink_file`\n\nIt was previously unclear which should be used when.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d95b5bce7119ae5549499083d24d143eae34d6b", "html_url": "https://github.com/rust-lang/rust/commit/2d95b5bce7119ae5549499083d24d143eae34d6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d95b5bce7119ae5549499083d24d143eae34d6b/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "226e181b80fa0be755872b66916ef7e704601ec2", "url": "https://api.github.com/repos/rust-lang/rust/commits/226e181b80fa0be755872b66916ef7e704601ec2", "html_url": "https://github.com/rust-lang/rust/commit/226e181b80fa0be755872b66916ef7e704601ec2"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "71563a02dcbb931290b75a22c20ed4cc6bc1be80", "filename": "library/std/src/os/windows/fs.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2d95b5bce7119ae5549499083d24d143eae34d6b/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d95b5bce7119ae5549499083d24d143eae34d6b/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Fwindows%2Ffs.rs?ref=2d95b5bce7119ae5549499083d24d143eae34d6b", "patch": "@@ -517,11 +517,20 @@ impl FileTypeExt for fs::FileType {\n     }\n }\n \n-/// Creates a new file symbolic link on the filesystem.\n+/// Creates a new symlink to a non-directory file on the filesystem.\n ///\n /// The `link` path will be a file symbolic link pointing to the `original`\n /// path.\n ///\n+/// The `original` path should not be a directory or a symlink to a directory,\n+/// otherwise the symlink will be broken. Use [`symlink_dir`] for directories.\n+///\n+/// This function currently corresponds to [`CreateSymbolicLinkW`][CreateSymbolicLinkW].\n+/// Note that this [may change in the future][changes].\n+///\n+/// [CreateSymbolicLinkW]: https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw\n+/// [changes]: io#platform-specific-behavior\n+///\n /// # Examples\n ///\n /// ```no_run\n@@ -537,11 +546,20 @@ pub fn symlink_file<P: AsRef<Path>, Q: AsRef<Path>>(original: P, link: Q) -> io:\n     sys::fs::symlink_inner(original.as_ref(), link.as_ref(), false)\n }\n \n-/// Creates a new directory symlink on the filesystem.\n+/// Creates a new symlink to a directory on the filesystem.\n ///\n /// The `link` path will be a directory symbolic link pointing to the `original`\n /// path.\n ///\n+/// The `original` path must be a directory or a symlink to a directory,\n+/// otherwise the symlink will be broken. Use [`symlink_file`] for other files.\n+///\n+/// This function currently corresponds to [`CreateSymbolicLinkW`][CreateSymbolicLinkW].\n+/// Note that this [may change in the future][changes].\n+///\n+/// [CreateSymbolicLinkW]: https://docs.microsoft.com/en-us/windows/win32/api/winbase/nf-winbase-createsymboliclinkw\n+/// [changes]: io#platform-specific-behavior\n+///\n /// # Examples\n ///\n /// ```no_run"}]}