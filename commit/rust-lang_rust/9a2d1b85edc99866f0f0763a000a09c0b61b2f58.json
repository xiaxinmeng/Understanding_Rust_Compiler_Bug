{"sha": "9a2d1b85edc99866f0f0763a000a09c0b61b2f58", "node_id": "C_kwDOAAsO6NoAKDlhMmQxYjg1ZWRjOTk4NjZmMGYwNzYzYTAwMGEwOWMwYjYxYjJmNTg", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-03-16T10:34:18Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-04-03T08:23:12Z"}, "message": "restore check for both target os and env\n\nThis is better than the old impl of target.ends_with(\"windows-gnu\"),\nbecause it also catches things like windows-gnullvm", "tree": {"sha": "ba910efe560f1017fc412246d2f340c5c6072e6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba910efe560f1017fc412246d2f340c5c6072e6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9a2d1b85edc99866f0f0763a000a09c0b61b2f58", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmQqjPAACgkQzXazX3c0\ndp4Xdg//Th50ZsCHiC884GEA6WxeDBKSQ2XQcjepKuvbTvR0baUCtqklxPRI6xsh\nQWZqEIVYDO5Qm4RyKG2isSRXl7tebrqtoR0I+1iZMY2EXRMEFfrTaT0qjkqfzp6R\niYhlpgBd0abb2qIkv8Vl6/WGooMXe/j5R9A/XjNDQxaYpISg41h3VuJ4VHw3nyjF\no+YOVcJ9Zcsbbaslj86b1lj73EHHPK7hSyTh1RRAMry2m+17g39mIgtEyWHSoJug\nMlHqa0JiDINEM7WTA+5+JblMPZrljx0r9JcciA6k+v4HhLqh06Bc3Msczeco+QME\niEL/wSZ/DwGEKkJhPxzl5notUg4OTvOjlDuz2Vs5AiuOoC4iBZwzHpL4Zv1B6Qi4\nKkuTKeR67POBODq5iksQesh1wdBCrZmfr5csFvN8pIYJ7NgFTalFlznWiIoppevO\n3EwefHMFe7blQBgj9cvGwpNseb7W4+2GZ3UQRabhjo6lsre9VztL/v5fOOAu+p2P\nzlUEcjTQBs0rIUDd2vks84343B70SFKb5KeOk8IbfZbcijIGJEzL/vt835lsoq0t\n3iFUycMu837GySBThICGMjwuNa+0gRAUYaVhIPn5OB5kbFjVz46WeYEL/XquQNtR\nFEzNC1QmhtPNAzpWxlBQQyjbc3m0UAfj9YID6UzNHpPbXl+Iqbw=\n=z1yH\n-----END PGP SIGNATURE-----", "payload": "tree ba910efe560f1017fc412246d2f340c5c6072e6c\nparent 5b0a0d8254fa9c4d799d501b2a5b280170d4fd95\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1678962858 +0100\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1680510192 +0200\n\nrestore check for both target os and env\n\nThis is better than the old impl of target.ends_with(\"windows-gnu\"),\nbecause it also catches things like windows-gnullvm\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9a2d1b85edc99866f0f0763a000a09c0b61b2f58", "html_url": "https://github.com/rust-lang/rust/commit/9a2d1b85edc99866f0f0763a000a09c0b61b2f58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9a2d1b85edc99866f0f0763a000a09c0b61b2f58/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b0a0d8254fa9c4d799d501b2a5b280170d4fd95", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0a0d8254fa9c4d799d501b2a5b280170d4fd95", "html_url": "https://github.com/rust-lang/rust/commit/5b0a0d8254fa9c4d799d501b2a5b280170d4fd95"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "98b27a5c6b60ad79a81750d2117f52e6c542a19f", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/9a2d1b85edc99866f0f0763a000a09c0b61b2f58/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2d1b85edc99866f0f0763a000a09c0b61b2f58/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=9a2d1b85edc99866f0f0763a000a09c0b61b2f58", "patch": "@@ -409,6 +409,7 @@ pub struct TargetCfgs {\n     pub all_targets: HashSet<String>,\n     pub all_archs: HashSet<String>,\n     pub all_oses: HashSet<String>,\n+    pub all_oses_and_envs: HashSet<String>,\n     pub all_envs: HashSet<String>,\n     pub all_abis: HashSet<String>,\n     pub all_families: HashSet<String>,\n@@ -433,6 +434,7 @@ impl TargetCfgs {\n         let mut all_targets = HashSet::new();\n         let mut all_archs = HashSet::new();\n         let mut all_oses = HashSet::new();\n+        let mut all_oses_and_envs = HashSet::new();\n         let mut all_envs = HashSet::new();\n         let mut all_abis = HashSet::new();\n         let mut all_families = HashSet::new();\n@@ -441,6 +443,7 @@ impl TargetCfgs {\n         for (target, cfg) in targets.into_iter() {\n             all_archs.insert(cfg.arch.clone());\n             all_oses.insert(cfg.os.clone());\n+            all_oses_and_envs.insert(cfg.os_and_env());\n             all_envs.insert(cfg.env.clone());\n             all_abis.insert(cfg.abi.clone());\n             for family in &cfg.families {\n@@ -459,6 +462,7 @@ impl TargetCfgs {\n             all_targets,\n             all_archs,\n             all_oses,\n+            all_oses_and_envs,\n             all_envs,\n             all_abis,\n             all_families,\n@@ -506,6 +510,12 @@ pub struct TargetCfg {\n     panic: PanicStrategy,\n }\n \n+impl TargetCfg {\n+    pub(crate) fn os_and_env(&self) -> String {\n+        format!(\"{}-{}\", self.os, self.env)\n+    }\n+}\n+\n fn default_os() -> String {\n     \"none\".into()\n }"}, {"sha": "3b9333dfe7a0b100ea8918bc9af2c923eeb0fcef", "filename": "src/tools/compiletest/src/header/cfg.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9a2d1b85edc99866f0f0763a000a09c0b61b2f58/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9a2d1b85edc99866f0f0763a000a09c0b61b2f58/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader%2Fcfg.rs?ref=9a2d1b85edc99866f0f0763a000a09c0b61b2f58", "patch": "@@ -84,6 +84,11 @@ pub(super) fn parse_cfg_name_directive<'a>(\n         allowed_names: &target_cfgs.all_envs,\n         message: \"when the target environment is {name}\"\n     }\n+    condition! {\n+        name: &target_cfg.os_and_env(),\n+        allowed_names: &target_cfgs.all_oses_and_envs,\n+        message: \"when the operative system and target environment are {name}\"\n+    }\n     condition! {\n         name: &target_cfg.abi,\n         allowed_names: &target_cfgs.all_abis,"}]}