{"sha": "d003e3b97bbdbfe95f007758fef36576a1877a6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMDNlM2I5N2JiZGJmZTk1ZjAwNzc1OGZlZjM2NTc2YTE4NzdhNmM=", "commit": {"author": {"name": "Caleb Cartwright", "email": "caleb.cartwright@outlook.com", "date": "2020-11-16T19:24:51Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2020-11-16T21:48:20Z"}, "message": "ci: update GHA workflows", "tree": {"sha": "c69d536fd8b0860259b29ad0d4a765dcc2e2f95c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c69d536fd8b0860259b29ad0d4a765dcc2e2f95c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d003e3b97bbdbfe95f007758fef36576a1877a6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d003e3b97bbdbfe95f007758fef36576a1877a6c", "html_url": "https://github.com/rust-lang/rust/commit/d003e3b97bbdbfe95f007758fef36576a1877a6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d003e3b97bbdbfe95f007758fef36576a1877a6c/comments", "author": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89f38304a7f9076fa00d48c7b654536af5f71912", "url": "https://api.github.com/repos/rust-lang/rust/commits/89f38304a7f9076fa00d48c7b654536af5f71912", "html_url": "https://github.com/rust-lang/rust/commit/89f38304a7f9076fa00d48c7b654536af5f71912"}], "stats": {"total": 41, "additions": 2, "deletions": 39}, "files": [{"sha": "781b8e4b0be48a6e9ddddcbcaf2183a239b61cce", "filename": ".github/workflows/upload-assets.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d003e3b97bbdbfe95f007758fef36576a1877a6c/.github%2Fworkflows%2Fupload-assets.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d003e3b97bbdbfe95f007758fef36576a1877a6c/.github%2Fworkflows%2Fupload-assets.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fupload-assets.yml?ref=d003e3b97bbdbfe95f007758fef36576a1877a6c", "patch": "@@ -57,11 +57,11 @@ jobs:\n           if [ \"${{ matrix.os }}\" = \"windows-latest\" ]; then\n             cp target/release/{rustfmt.exe,cargo-fmt.exe,rustfmt-format-diff.exe,git-rustfmt.exe} \"$staging/\"\n             7z a \"$staging.zip\" \"$staging\"\n-            echo \"::set-env name=ASSET::$staging.zip\"\n+            echo \"ASSET=$staging.zip\" >> $GITHUB_ENV\n           else\n             cp target/release/{rustfmt,cargo-fmt,rustfmt-format-diff,git-rustfmt} \"$staging/\"\n             tar czf \"$staging.tar.gz\" \"$staging\"\n-            echo \"::set-env name=ASSET::$staging.tar.gz\"\n+            echo \"ASSET=$staging.tar.gz\" >> $GITHUB_ENV\n           fi\n \n       - name: Upload Release Asset"}, {"sha": "0b78d63aaf7e25f7fd22e5b99fcfcfd92f7d66d6", "filename": ".github/workflows/windows.yml", "status": "modified", "additions": 0, "deletions": 37, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/d003e3b97bbdbfe95f007758fef36576a1877a6c/.github%2Fworkflows%2Fwindows.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d003e3b97bbdbfe95f007758fef36576a1877a6c/.github%2Fworkflows%2Fwindows.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fwindows.yml?ref=d003e3b97bbdbfe95f007758fef36576a1877a6c", "patch": "@@ -27,7 +27,6 @@ jobs:\n         include:\n           - channel: nightly\n             target: i686-pc-windows-gnu\n-            mingw-7z-path: mingw\n \n     env:\n       CFG_RELEASE_CHANNEL: nightly\n@@ -41,42 +40,6 @@ jobs:\n     - name: checkout\n       uses: actions/checkout@v2\n \n-    # The Windows runners do not (yet) have a proper msys/mingw environment\n-    # pre-configured like AppVeyor does, though they will likely be added in the future.\n-    # https://github.com/actions/virtual-environments/issues/30\n-    #\n-    # In the interim, this ensures mingw32 is installed and available on the PATH\n-    # for the i686-pc-windows-gnu target. This approach is used because it's common in\n-    # other rust projects and there are issues/limitations with the msys2 chocolatey nuget\n-    # package and numworks/setup-msys2 action.\n-    # https://github.com/rust-lang/rust/blob/master/src/ci/scripts/install-mingw.sh#L59\n-    # https://github.com/rust-lang/rustup/blob/master/appveyor.yml\n-    #\n-    # Use GitHub Actions cache support to avoid downloading the .7z file every time\n-    # to be cognizant of the AWS egress cost impacts\n-    # https://help.github.com/en/actions/automating-your-workflow-with-github-actions/caching-dependencies-to-speed-up-workflows#usage-limits-and-eviction-policy\n-    - name: cache mingw.7z\n-      id: cache-mingw\n-      with:\n-        path: ${{ matrix.mingw-7z-path }}\n-        key: ${{ matrix.channel }}-${{ matrix.target }}-mingw\n-      uses: actions/cache@v1\n-      if: matrix.target == 'i686-pc-windows-gnu' && matrix.channel == 'nightly'\n-    - name: download mingw.7z\n-      run: |\n-        # Disable the download progress bar which can cause perf issues\n-        $ProgressPreference = \"SilentlyContinue\"\n-        md -Force ${{ matrix.mingw-7z-path }}\n-        Invoke-WebRequest https://ci-mirrors.rust-lang.org/rustc/i686-6.3.0-release-posix-dwarf-rt_v5-rev2.7z -OutFile ${{ matrix.mingw-7z-path }}/mingw.7z\n-      if: matrix.target == 'i686-pc-windows-gnu' && matrix.channel == 'nightly' && steps.cache-mingw.outputs.cache-hit != 'true'\n-      shell: powershell\n-    - name: install mingw32\n-      run: |\n-        7z x -y ${{ matrix.mingw-7z-path }}/mingw.7z -oC:\\msys64 | Out-Null\n-        echo ::add-path::C:\\msys64\\mingw32\\bin\n-      if: matrix.target == 'i686-pc-windows-gnu' && matrix.channel == 'nightly'\n-      shell: powershell\n-\n       # Run build\n     - name: setup\n       uses: actions-rs/toolchain@v1"}]}