{"sha": "aed001b8d4b318dab34882dafa27511e21bfa58a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZDAwMWI4ZDRiMzE4ZGFiMzQ4ODJkYWZhMjc1MTFlMjFiZmE1OGE=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-22T06:59:09Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2019-01-29T07:19:05Z"}, "message": "Update various docs\n\n* `const_transmute` currently also seems to depend on the `const_fn`\n  feature.\n* Only `Sized` is currently allowed as a bound, not Copy.", "tree": {"sha": "740ffce076c38d71242b8528696348e50545c641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/740ffce076c38d71242b8528696348e50545c641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aed001b8d4b318dab34882dafa27511e21bfa58a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEvUKv4zqIn2RHUgCKtvoGpuDiZlsFAlxP/moACgkQtvoGpuDi\nZlsw6hAAg8TDipqs/KOP7oVAqZAKhli6sICylJW9LbXyima4fC26ttlgRwZ7OSSX\nKncCCkZ9mf2XFgqWqXDrV9Yh3FCOh5dqR+5ngXSOqk2QTFDevrAC3TI1S3TA+AQ5\nv/6Z6SLs3Mg3m+iUDiVWyqlZG/j3CV1beHGZ9f0ab6C2tNlaHFe9ddz+CGQ1JLT0\nxcxwLJEvjiKCjigy7Igrlc90Tc+gLOz9lRPzor6Do4Xbg/DBwyy/w2EEeduQ5ZI0\nl6189rLle/q5L4tMQfI4SWrVBQ67lqELywpr036ag+dxSfTTt2r4IST2SYu1PHpH\n9qpeP1ApMaMiuWDq4MbViC0GDmTQ+n4cyLf68OJWCo6TsnAb8GP6V6D6As4SZi0J\n0i5hFtnRe+B1MVNEUVQ/YmcPc81vRJaKz3+UwVEfx/nadprKjPzQyiec16TuVdUs\nCLnDA5X69O8uW2F/uHM+c+/P0TkPMQ5//jEfMWmiJafcjFWZWSzffkFHFL6j/RNW\nWV1462QjkJyNORX+5mZu+vcLrwbHH7ZlVUoUUaODf82IP30yuXLiHvEtirSCVt0m\nNpjN6SGnsVXdqqIe3gqrVFU99hO8X1VkXNNvU5m+cqJA5JwnXdUlYt+GsLtdGfwg\nuTqtERFT719Hu7eUpLUy+mzFzQqkVfV0TnBjDFU6tNuU06F+98U=\n=8T1f\n-----END PGP SIGNATURE-----", "payload": "tree 740ffce076c38d71242b8528696348e50545c641\nparent 0c6bdda562a0b703214657d92dcfa85b78537daf\nauthor Philipp Hansch <dev@phansch.net> 1548140349 +0100\ncommitter Philipp Hansch <dev@phansch.net> 1548746345 +0100\n\nUpdate various docs\n\n* `const_transmute` currently also seems to depend on the `const_fn`\n  feature.\n* Only `Sized` is currently allowed as a bound, not Copy.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aed001b8d4b318dab34882dafa27511e21bfa58a", "html_url": "https://github.com/rust-lang/rust/commit/aed001b8d4b318dab34882dafa27511e21bfa58a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aed001b8d4b318dab34882dafa27511e21bfa58a/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c6bdda562a0b703214657d92dcfa85b78537daf", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c6bdda562a0b703214657d92dcfa85b78537daf", "html_url": "https://github.com/rust-lang/rust/commit/0c6bdda562a0b703214657d92dcfa85b78537daf"}], "stats": {"total": 16, "additions": 9, "deletions": 7}, "files": [{"sha": "9c9029a500b63c1777480003e14f565dd9b9f492", "filename": "clippy_lints/src/missing_const_for_fn.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aed001b8d4b318dab34882dafa27511e21bfa58a/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed001b8d4b318dab34882dafa27511e21bfa58a/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_const_for_fn.rs?ref=aed001b8d4b318dab34882dafa27511e21bfa58a", "patch": "@@ -11,11 +11,11 @@ use syntax_pos::Span;\n \n /// **What it does:**\n ///\n-/// Suggests the use of `const` in functions and methods where possible\n+/// Suggests the use of `const` in functions and methods where possible.\n ///\n /// **Why is this bad?**\n-/// Not using `const` is a missed optimization. Instead of having the function execute at runtime,\n-/// when using `const`, it's evaluated at compiletime.\n+///\n+/// Not having the function const prevents callers of the function from being const as well.\n ///\n /// **Known problems:**\n ///"}, {"sha": "139e64de1ff5d465e423ed02e115b8dff3327749", "filename": "tests/ui/missing_const_for_fn/could_be_const.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/aed001b8d4b318dab34882dafa27511e21bfa58a/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aed001b8d4b318dab34882dafa27511e21bfa58a/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_const_for_fn%2Fcould_be_const.rs?ref=aed001b8d4b318dab34882dafa27511e21bfa58a", "patch": "@@ -25,8 +25,8 @@ fn two() -> i32 {\n     abc\n }\n \n-// TODO: Why can this be const? because it's a zero sized type?\n-// There is the `const_string_new` feature, but it seems that this already works in const fns?\n+// FIXME: This is a false positive in the `is_min_const_fn` function.\n+// At least until the `const_string_new` feature is stabilzed.\n fn string() -> String {\n     String::new()\n }\n@@ -41,12 +41,14 @@ fn generic<T>(t: T) -> T {\n     t\n }\n \n-// FIXME: This could be const but is currently not linted\n+// FIXME: Depends on the `const_transmute` and `const_fn` feature gates.\n+// In the future Clippy should be able to suggest this as const, too.\n fn sub(x: u32) -> usize {\n     unsafe { transmute(&x) }\n }\n \n-// FIXME: This could be const but is currently not linted\n+// NOTE: This is currently not yet allowed to be const\n+// Once implemented, Clippy should be able to suggest this as const, too.\n fn generic_arr<T: Copy>(t: [T; 1]) -> T {\n     t[0]\n }"}]}