{"sha": "524e80358254575bb699756c405050da6c920e28", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNGU4MDM1ODI1NDU3NWJiNjk5NzU2YzQwNTA1MGRhNmM5MjBlMjg=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-01T02:32:02Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2011-04-01T03:15:11Z"}, "message": "Only use allocas to hold expression results for boxed types", "tree": {"sha": "901b5692ac478a17fb9452c59f9430bee3b820a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/901b5692ac478a17fb9452c59f9430bee3b820a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/524e80358254575bb699756c405050da6c920e28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/524e80358254575bb699756c405050da6c920e28", "html_url": "https://github.com/rust-lang/rust/commit/524e80358254575bb699756c405050da6c920e28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/524e80358254575bb699756c405050da6c920e28/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f05d3c516b085bd489893d7885be0bb687a786f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f05d3c516b085bd489893d7885be0bb687a786f7", "html_url": "https://github.com/rust-lang/rust/commit/f05d3c516b085bd489893d7885be0bb687a786f7"}], "stats": {"total": 21, "additions": 3, "deletions": 18}, "files": [{"sha": "f6d59b9292d83caccc8b37b0682fc806cd68c13f", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 18, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/524e80358254575bb699756c405050da6c920e28/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/524e80358254575bb699756c405050da6c920e28/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=524e80358254575bb699756c405050da6c920e28", "patch": "@@ -5393,25 +5393,10 @@ fn trans_block(@block_ctxt cx, &ast.block b) -> result {\n \n                 auto r_ty = ty.expr_ty(e);\n \n-                fn is_nil(@ty.t r_ty) -> bool {\n-                    alt (r_ty.struct) {\n-                        case (ty.ty_nil) {\n-                            ret true;\n-                        }\n-                        case (_) {\n-                            ret false;\n-                        }\n-                    }\n-                }\n+                if (ty.type_is_boxed(r_ty)) {\n \n-                // FIXME: This is a temporary hack to prevent compile\n-                // failures. There's some expression variant that claims\n-                // to be ty_nil but but does not translate to T_nil. Need\n-                // to hunt it down. Of course, if we're talking about nil,\n-                // do we really want to do this whole business anyway?\n-                if (!is_nil(r_ty)) {\n-                    // This alloca is declared at the function level, above\n-                    // the block scope\n+                    // Create an alloca up in the llallocas block to hold the\n+                    // expression result.\n                     auto res_alloca = alloc_ty(bcx, r_ty);\n                     bcx = res_alloca.bcx;\n                     auto res_copy = copy_ty(bcx, INIT,"}]}