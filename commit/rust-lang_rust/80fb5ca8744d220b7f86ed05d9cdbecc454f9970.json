{"sha": "80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwZmI1Y2E4NzQ0ZDIyMGI3Zjg2ZWQwNWQ5Y2RiZWNjNDU0Zjk5NzA=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-09T09:25:45Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2015-01-09T09:25:45Z"}, "message": "Handle errors properly in rustbook.\n\nSilently ignoring errors is :( so lets not silently ignore them. huon is\n:) now.", "tree": {"sha": "3e4bad038206d34052048f12e4fc3c42f3afb011", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e4bad038206d34052048f12e4fc3c42f3afb011"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "html_url": "https://github.com/rust-lang/rust/commit/80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4247a30bdd73ee3f1c9fa58a4130380a2e47f6ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/4247a30bdd73ee3f1c9fa58a4130380a2e47f6ad", "html_url": "https://github.com/rust-lang/rust/commit/4247a30bdd73ee3f1c9fa58a4130380a2e47f6ad"}], "stats": {"total": 42, "additions": 20, "deletions": 22}, "files": [{"sha": "20346449fd16c25e057412c33ac5f717f92385d4", "filename": "src/rustbook/book.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Fbook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Fbook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fbook.rs?ref=80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "patch": "@@ -124,7 +124,7 @@ pub fn parse_summary<R: Reader>(input: R, src: &Path) -> Result<Book, Vec<String\n             let path_from_root = match src.join(given_path.unwrap()).path_relative_from(src) {\n                 Some(p) => p,\n                 None => {\n-                    errors.push(format!(\"Paths in SUMMARY.md must be relative, \\\n+                    errors.push(format!(\"paths in SUMMARY.md must be relative, \\\n                                          but path '{}' for section '{}' is not.\",\n                                          given_path.unwrap(), title));\n                     Path::new(\"\")\n@@ -148,8 +148,9 @@ pub fn parse_summary<R: Reader>(input: R, src: &Path) -> Result<Book, Vec<String\n             }).sum() / 4 + 1;\n \n             if level > stack.len() + 1 {\n-                // FIXME: better error message\n-                errors.push(format!(\"Section '{}' is indented too many levels.\", item.title));\n+                errors.push(format!(\"section '{}' is indented too deeply; \\\n+                                     found {}, expected {} or less\",\n+                                    item.title, level, stack.len() + 1));\n             } else if level <= stack.len() {\n                 collapse(&mut stack, &mut top_items, level);\n             }"}, {"sha": "44b1630d9fb4c869e7a97f8c2d6b58b4ede7418a", "filename": "src/rustbook/build.rs", "status": "modified", "additions": 9, "deletions": 18, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fbuild.rs?ref=80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "patch": "@@ -73,10 +73,7 @@ fn write_toc(book: &Book, path_to_root: &Path, out: &mut Writer) -> IoResult<()>\n }\n \n fn render(book: &Book, tgt: &Path) -> CliResult<()> {\n-    let tmp = TempDir::new(\"rust-book\")\n-                      .ok()\n-                      // FIXME: lift to Result instead\n-                      .expect(\"could not create temporary directory\");\n+    let tmp = try!(TempDir::new(\"rust-book\"));\n \n     for (section, item) in book.iter() {\n         println!(\"{} {}\", section, item.title);\n@@ -163,30 +160,24 @@ impl Subcommand for Build {\n             tgt = Path::new(os::args()[3].clone());\n         }\n \n-        let _ = fs::mkdir(&tgt, io::USER_DIR); // FIXME: handle errors\n+        try!(fs::mkdir(&tgt, io::USER_DIR));\n \n-        // FIXME: handle errors\n-        let _ = File::create(&tgt.join(\"rust-book.css\")).write_str(css::STYLE);\n+        try!(File::create(&tgt.join(\"rust-book.css\")).write_str(css::STYLE));\n \n-        let summary = File::open(&src.join(\"SUMMARY.md\"));\n+        let summary = try!(File::open(&src.join(\"SUMMARY.md\")));\n         match book::parse_summary(summary, &src) {\n             Ok(book) => {\n                 // execute rustdoc on the whole book\n-                try!(render(&book, &tgt).map_err(|err| {\n-                    term.err(&format!(\"error: {}\", err.description())[]);\n-                    err.detail().map(|detail| {\n-                        term.err(&format!(\"detail: {}\", detail)[]);\n-                    });\n-                    err\n-                }))\n+                render(&book, &tgt)\n             }\n             Err(errors) => {\n+                let n = errors.len();\n                 for err in errors.into_iter() {\n-                    term.err(&err[]);\n+                    term.err(&format!(\"error: {}\", err)[]);\n                 }\n+\n+                Err(box format!(\"{} errors occurred\", n) as Box<Error>)\n             }\n         }\n-\n-        Ok(()) // lol\n     }\n }"}, {"sha": "7d5e7efcc945990c33de51db2c64d911a6ef381b", "filename": "src/rustbook/error.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Ferror.rs?ref=80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "patch": "@@ -79,4 +79,5 @@ impl Error for IoError {\n     }\n }\n \n+\n //fn iter_map_err<T, U, E, I: Iterator<Result<T,E>>>(iter: I,"}, {"sha": "48dad14321a8d57db23e557f4716228980fba9f7", "filename": "src/rustbook/main.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80fb5ca8744d220b7f86ed05d9cdbecc454f9970/src%2Frustbook%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fmain.rs?ref=80fb5ca8744d220b7f86ed05d9cdbecc454f9970", "patch": "@@ -54,7 +54,12 @@ fn main() {\n                     Ok(_) => {\n                         match subcmd.execute(&mut term) {\n                             Ok(_) => (),\n-                            Err(_) => os::set_exit_status(-1),\n+                            Err(err) => {\n+                                term.err(&format!(\"error: {}\", err.description())[]);\n+                                err.detail().map(|detail| {\n+                                    term.err(&format!(\"detail: {}\", detail)[]);\n+                                });\n+                            }\n                         }\n                     }\n                     Err(err) => {"}]}