{"sha": "bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjM2RiN2MxZGVkMGRiMmQzODA0YjVhYzNlNWMzNWRkNTMzNTAyMjg=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-02T16:02:58Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-02T16:09:12Z"}, "message": "Fix tests", "tree": {"sha": "be462be1360464d640d37332bbd436482ef5331a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be462be1360464d640d37332bbd436482ef5331a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "html_url": "https://github.com/rust-lang/rust/commit/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a83ab820a4633bac718ee0fd11f06d1b3142be6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a83ab820a4633bac718ee0fd11f06d1b3142be6b", "html_url": "https://github.com/rust-lang/rust/commit/a83ab820a4633bac718ee0fd11f06d1b3142be6b"}], "stats": {"total": 339, "additions": 270, "deletions": 69}, "files": [{"sha": "f32ce0d229b84247246fa46f103604f771f4fc2e", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 210, "deletions": 15, "changes": 225, "blob_url": "https://github.com/rust-lang/rust/blob/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "patch": "@@ -228,12 +228,38 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 1..21,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 1..21,\n+                    name: \"main\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        12..16,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Bin,\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 22..46,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 22..46,\n+                    name: \"test_foo\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        33..41,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"test_foo\",\n@@ -245,7 +271,20 @@ mod tests {\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 47..81,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 47..81,\n+                    name: \"test_foo\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        68..76,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"test_foo\",\n@@ -280,12 +319,38 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 1..21,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 1..21,\n+                    name: \"main\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        12..16,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Bin,\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 22..64,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 22..64,\n+                    name: \"foo\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        56..59,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: DocTest {\n                     test_id: Path(\n                         \"foo\",\n@@ -320,12 +385,38 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 1..21,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 1..21,\n+                    name: \"main\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        12..16,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Bin,\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 51..105,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 51..105,\n+                    name: \"foo\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        97..100,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: DocTest {\n                     test_id: Path(\n                         \"Data::foo\",\n@@ -355,14 +446,40 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 1..59,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 1..59,\n+                    name: \"test_mod\",\n+                    kind: MODULE,\n+                    focus_range: Some(\n+                        13..21,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: TestMod {\n                     path: \"test_mod\",\n                 },\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 28..57,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 28..57,\n+                    name: \"test_foo1\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        43..52,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"test_mod::test_foo1\",\n@@ -397,14 +514,40 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 23..85,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 23..85,\n+                    name: \"test_mod\",\n+                    kind: MODULE,\n+                    focus_range: Some(\n+                        27..35,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: TestMod {\n                     path: \"foo::test_mod\",\n                 },\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 46..79,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 46..79,\n+                    name: \"test_foo1\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        65..74,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"foo::test_mod::test_foo1\",\n@@ -441,14 +584,40 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 41..115,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 41..115,\n+                    name: \"test_mod\",\n+                    kind: MODULE,\n+                    focus_range: Some(\n+                        45..53,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: TestMod {\n                     path: \"foo::bar::test_mod\",\n                 },\n                 cfg_exprs: [],\n             },\n             Runnable {\n-                range: 68..105,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 68..105,\n+                    name: \"test_foo1\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        91..100,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"foo::bar::test_mod::test_foo1\",\n@@ -480,7 +649,20 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 1..58,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 1..58,\n+                    name: \"test_foo1\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        44..53,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"test_foo1\",\n@@ -517,7 +699,20 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: 1..80,\n+                nav: NavigationTarget {\n+                    file_id: FileId(\n+                        1,\n+                    ),\n+                    full_range: 1..80,\n+                    name: \"test_foo1\",\n+                    kind: FN_DEF,\n+                    focus_range: Some(\n+                        66..75,\n+                    ),\n+                    container_name: None,\n+                    description: None,\n+                    docs: None,\n+                },\n                 kind: Test {\n                     test_id: Path(\n                         \"test_foo1\","}, {"sha": "ec24ce5e0f5f0009ad128fb6f57c32d823556130", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "patch": "@@ -139,6 +139,7 @@ pub enum RunnableKind {\n #[derive(Deserialize, Serialize, Debug)]\n #[serde(rename_all = \"camelCase\")]\n pub struct CargoRunnable {\n+    #[serde(skip_serializing_if = \"Option::is_none\")]\n     pub workspace_root: Option<PathBuf>,\n     // command, --package and --lib stuff\n     pub cargo_args: Vec<String>,"}, {"sha": "e18f973b824ca6a64c98ef014f2df6791c829a55", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 59, "deletions": 54, "changes": 113, "blob_url": "https://github.com/rust-lang/rust/blob/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3db7c1ded0db2d3804b5ac3e5c35dd53350228/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=bc3db7c1ded0db2d3804b5ac3e5c35dd53350228", "patch": "@@ -76,30 +76,33 @@ fn foo() {\n     server.request::<Runnables>(\n         RunnablesParams { text_document: server.doc_id(\"lib.rs\"), position: None },\n         json!([\n-          {\n-            \"args\": [ \"test\" ],\n-            \"extraArgs\": [ \"foo\", \"--nocapture\" ],\n-            \"kind\": \"cargo\",\n-            \"env\": { \"RUST_BACKTRACE\": \"short\" },\n-            \"cwd\": null,\n-            \"label\": \"test foo\",\n-            \"range\": {\n-              \"end\": { \"character\": 1, \"line\": 2 },\n-              \"start\": { \"character\": 0, \"line\": 0 }\n-            }\n-          },\n-          {\n-            \"args\": [\"check\", \"--workspace\"],\n-            \"extraArgs\": [],\n-            \"kind\": \"cargo\",\n-            \"env\": {},\n-            \"cwd\": null,\n-            \"label\": \"cargo check --workspace\",\n-            \"range\": {\n-              \"end\": { \"character\": 0, \"line\": 0 },\n-              \"start\": { \"character\": 0, \"line\": 0 }\n+            {\n+              \"args\": {\n+                \"cargoArgs\": [\"test\"],\n+                \"executableArgs\": [\"foo\", \"--nocapture\"],\n+              },\n+              \"kind\": \"cargo\",\n+              \"label\": \"test foo\",\n+              \"location\": {\n+                \"targetRange\": {\n+                  \"end\": { \"character\": 1, \"line\": 2 },\n+                  \"start\": { \"character\": 0, \"line\": 0 }\n+                },\n+                \"targetSelectionRange\": {\n+                  \"end\": { \"character\": 6, \"line\": 1 },\n+                  \"start\": { \"character\": 3, \"line\": 1 }\n+                },\n+                \"targetUri\": \"file:///[..]/lib.rs\"\n+              }\n+            },\n+            {\n+              \"args\": {\n+                \"cargoArgs\": [\"check\", \"--workspace\"],\n+                \"executableArgs\": [],\n+              },\n+              \"kind\": \"cargo\",\n+              \"label\": \"cargo check --workspace\"\n             }\n-          }\n         ]),\n     );\n }\n@@ -138,42 +141,44 @@ fn main() {}\n     server.request::<Runnables>(\n         RunnablesParams { text_document: server.doc_id(\"foo/tests/spam.rs\"), position: None },\n         json!([\n-            {\n-              \"args\": [ \"test\", \"--package\", \"foo\", \"--test\", \"spam\" ],\n-              \"extraArgs\": [ \"test_eggs\", \"--exact\", \"--nocapture\" ],\n-              \"kind\": \"cargo\",\n-              \"env\": { \"RUST_BACKTRACE\": \"short\" },\n-              \"label\": \"test test_eggs\",\n-              \"range\": {\n-                \"end\": { \"character\": 17, \"line\": 1 },\n-                \"start\": { \"character\": 0, \"line\": 0 }\n-              },\n-              \"cwd\": server.path().join(\"foo\")\n+          {\n+            \"args\": {\n+              \"cargoArgs\": [\"test\", \"--package\", \"foo\", \"--test\", \"spam\"],\n+              \"executableArgs\": [\"test_eggs\", \"--exact\", \"--nocapture\"],\n+              \"workspaceRoot\": server.path().join(\"foo\")\n             },\n-            {\n-              \"args\": [ \"check\", \"--package\", \"foo\" ],\n-              \"extraArgs\": [],\n-              \"kind\": \"cargo\",\n-              \"env\": {},\n-              \"label\": \"cargo check -p foo\",\n-              \"range\": {\n-                \"end\": { \"character\": 0, \"line\": 0 },\n+            \"kind\": \"cargo\",\n+            \"label\": \"test test_eggs\",\n+            \"location\": {\n+              \"targetRange\": {\n+                \"end\": { \"character\": 17, \"line\": 1 },\n                 \"start\": { \"character\": 0, \"line\": 0 }\n               },\n-              \"cwd\": server.path().join(\"foo\")\n-            },\n-            {\n-              \"args\": [ \"test\", \"--package\", \"foo\" ],\n-              \"extraArgs\": [],\n-              \"kind\": \"cargo\",\n-              \"env\": {},\n-              \"label\": \"cargo test -p foo\",\n-              \"range\": {\n-                \"end\": { \"character\": 0, \"line\": 0 },\n-                \"start\": { \"character\": 0, \"line\": 0 }\n+              \"targetSelectionRange\": {\n+                \"end\": { \"character\": 12, \"line\": 1 },\n+                \"start\": { \"character\": 3, \"line\": 1 }\n               },\n-              \"cwd\": server.path().join(\"foo\")\n+              \"targetUri\": \"file:///[..]/tests/spam.rs\"\n             }\n+          },\n+          {\n+            \"args\": {\n+              \"cargoArgs\": [\"check\", \"--package\", \"foo\"],\n+              \"executableArgs\": [],\n+              \"workspaceRoot\": server.path().join(\"foo\")\n+            },\n+            \"kind\": \"cargo\",\n+            \"label\": \"cargo check -p foo\"\n+          },\n+          {\n+            \"args\": {\n+              \"cargoArgs\": [\"test\", \"--package\", \"foo\"],\n+              \"executableArgs\": [],\n+              \"workspaceRoot\": server.path().join(\"foo\")\n+            },\n+            \"kind\": \"cargo\",\n+            \"label\": \"cargo test -p foo\"\n+          }\n         ]),\n     );\n }"}]}