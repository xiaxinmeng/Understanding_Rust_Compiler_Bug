{"sha": "e81d81e5af07f65a51e8496fda524b4cfbc09677", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MWQ4MWU1YWYwN2Y2NWE1MWU4NDk2ZmRhNTI0YjRjZmJjMDk2Nzc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-07T10:23:08Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-01-07T10:23:08Z"}, "message": "implement panic_if_uninhabited intrinsic", "tree": {"sha": "06f6f63b0661a12095dea21102f47c475735c100", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06f6f63b0661a12095dea21102f47c475735c100"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e81d81e5af07f65a51e8496fda524b4cfbc09677", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e81d81e5af07f65a51e8496fda524b4cfbc09677", "html_url": "https://github.com/rust-lang/rust/commit/e81d81e5af07f65a51e8496fda524b4cfbc09677", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e81d81e5af07f65a51e8496fda524b4cfbc09677/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb319b5e426d2d467262400262dd2297211abe2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb319b5e426d2d467262400262dd2297211abe2d", "html_url": "https://github.com/rust-lang/rust/commit/cb319b5e426d2d467262400262dd2297211abe2d"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0ef847236418c0b8b1033008c25782772bc14023", "filename": "src/intrinsic.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e81d81e5af07f65a51e8496fda524b4cfbc09677/src%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e81d81e5af07f65a51e8496fda524b4cfbc09677/src%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic.rs?ref=e81d81e5af07f65a51e8496fda524b4cfbc09677", "patch": "@@ -286,6 +286,14 @@ pub trait EvalContextExt<'a, 'mir, 'tcx: 'a+'mir>: crate::MiriEvalContextExt<'a,\n                 this.write_scalar(result_ptr, dest)?;\n             }\n \n+            \"panic_if_uninhabited\" => {\n+                let ty = substs.type_at(0);\n+                let layout = this.layout_of(ty)?;\n+                if layout.abi.is_uninhabited() {\n+                    return err!(Intrinsic(format!(\"Trying to instantiate uninhabited type {}\", ty)))\n+                }\n+            }\n+\n             \"powf32\" => {\n                 let f = this.read_scalar(args[0])?.to_f32()?;\n                 let f2 = this.read_scalar(args[1])?.to_f32()?;"}]}