{"sha": "81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxZmNkZDRhZjljOWU5OWNmMjAzMWM1ZjA5YTVmMWExZGJmM2JmYzU=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-11-13T00:54:33Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2015-11-13T12:13:23Z"}, "message": "BinaryHeap: Simplify sift down\n\nSift down was doing all too much work: it can stop directly when the\ncurrent element obeys the heap property in relation to its children.\n\nIn the old code, sift down didn't compare the element to sift down at\nall, so it was maximally sifted down and relied on the sift up call to\nput it in the correct location.\n\nThis should speed up heapify and .pop().\n\nAlso rename Hole::removed() to Hole::element()", "tree": {"sha": "19f8cb697799d9536a8977613b2a4784051273d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19f8cb697799d9536a8977613b2a4784051273d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5", "html_url": "https://github.com/rust-lang/rust/commit/81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "792a9f12cff83186a5426bc6e713fbc11261a4b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/792a9f12cff83186a5426bc6e713fbc11261a4b1", "html_url": "https://github.com/rust-lang/rust/commit/792a9f12cff83186a5426bc6e713fbc11261a4b1"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "bdf5f5b2a8311a65c5725a8e0eeb07095b3a710c", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=81fcdd4af9c9e99cf2031c5f09a5f1a1dbf3bfc5", "patch": "@@ -521,29 +521,30 @@ impl<T: Ord> BinaryHeap<T> {\n \n             while hole.pos() > start {\n                 let parent = (hole.pos() - 1) / 2;\n-                if hole.removed() <= hole.get(parent) { break }\n+                if hole.element() <= hole.get(parent) { break; }\n                 hole.move_to(parent);\n             }\n         }\n     }\n \n-    fn sift_down_range(&mut self, mut pos: usize, end: usize) {\n-        let start = pos;\n+    /// Take an element at `pos` and move it down the heap,\n+    /// while its children are larger.\n+    fn sift_down_range(&mut self, pos: usize, end: usize) {\n         unsafe {\n             let mut hole = Hole::new(&mut self.data, pos);\n             let mut child = 2 * pos + 1;\n             while child < end {\n                 let right = child + 1;\n+                // compare with the greater of the two children\n                 if right < end && !(hole.get(child) > hole.get(right)) {\n                     child = right;\n                 }\n+                // if we are already in order, stop.\n+                if hole.element() >= hole.get(child) { break; }\n                 hole.move_to(child);\n                 child = 2 * hole.pos() + 1;\n             }\n-\n-            pos = hole.pos;\n         }\n-        self.sift_up(start, pos);\n     }\n \n     fn sift_down(&mut self, pos: usize) {\n@@ -605,7 +606,7 @@ impl<'a, T> Hole<'a, T> {\n \n     /// Return a reference to the element removed\n     #[inline(always)]\n-    fn removed(&self) -> &T {\n+    fn element(&self) -> &T {\n         self.elt.as_ref().unwrap()\n     }\n "}]}