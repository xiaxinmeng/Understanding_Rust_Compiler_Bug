{"sha": "1417f53863c6afb1b90aef2d1c518cc8449a77f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MTdmNTM4NjNjNmFmYjFiOTBhZWYyZDFjNTE4Y2M4NDQ5YTc3ZjI=", "commit": {"author": {"name": "Artyom Pavlov", "email": "newpavlov@gmail.com", "date": "2019-08-19T19:58:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-08-19T19:58:35Z"}, "message": "fix cfg", "tree": {"sha": "9f170461ce5785fdcd2a8a2938ea8127aaeb8881", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f170461ce5785fdcd2a8a2938ea8127aaeb8881"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1417f53863c6afb1b90aef2d1c518cc8449a77f2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdWv9rCRBK7hj4Ov3rIwAAdHIIAF1c/5k3yNap8FRnTm+iRfFM\nWt3qzCpBG32wbPY5AFrBC7tHTsa04ay3t2HE5VSNcd/pjx+VHXnZxvcdn65TzdOa\nL3P3Tvxv8QId96dw8QHJsnKzpdDw2cdTa8hUsxNaOUMt/JhU6+sUp8TE9u9ALrNR\nTA0nGWS7n3T37NKW9iiRrzDalm9W9Mks7eDT4cMAA/Oxh1rAv07ASyP0XpojxrT5\n8DT9Gw4R+U7K7O+YOcBG8Y0D5uU7iCTg7E+CCaPdX4NEynvaEzxJNkgybmbZLrlY\nlJaV1Lvj2jYLo0DBR3KV8H0dcpOohmThkDXFEl6o0V80BCgfUc+IL/GVQ0G6Q4Q=\n=Q+Ex\n-----END PGP SIGNATURE-----\n", "payload": "tree 9f170461ce5785fdcd2a8a2938ea8127aaeb8881\nparent 5d75654cce9bb174b874ff7d8eb2ccd70e9b268f\nauthor Artyom Pavlov <newpavlov@gmail.com> 1566244715 +0000\ncommitter GitHub <noreply@github.com> 1566244715 +0000\n\nfix cfg"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1417f53863c6afb1b90aef2d1c518cc8449a77f2", "html_url": "https://github.com/rust-lang/rust/commit/1417f53863c6afb1b90aef2d1c518cc8449a77f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1417f53863c6afb1b90aef2d1c518cc8449a77f2/comments", "author": {"login": "newpavlov", "id": 329626, "node_id": "MDQ6VXNlcjMyOTYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/329626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/newpavlov", "html_url": "https://github.com/newpavlov", "followers_url": "https://api.github.com/users/newpavlov/followers", "following_url": "https://api.github.com/users/newpavlov/following{/other_user}", "gists_url": "https://api.github.com/users/newpavlov/gists{/gist_id}", "starred_url": "https://api.github.com/users/newpavlov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/newpavlov/subscriptions", "organizations_url": "https://api.github.com/users/newpavlov/orgs", "repos_url": "https://api.github.com/users/newpavlov/repos", "events_url": "https://api.github.com/users/newpavlov/events{/privacy}", "received_events_url": "https://api.github.com/users/newpavlov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d75654cce9bb174b874ff7d8eb2ccd70e9b268f", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d75654cce9bb174b874ff7d8eb2ccd70e9b268f", "html_url": "https://github.com/rust-lang/rust/commit/5d75654cce9bb174b874ff7d8eb2ccd70e9b268f"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "ea0e8b38e2b538b166a9b0dd095b542386245406", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 9, "deletions": 11, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/1417f53863c6afb1b90aef2d1c518cc8449a77f2/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1417f53863c6afb1b90aef2d1c518cc8449a77f2/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=1417f53863c6afb1b90aef2d1c518cc8449a77f2", "patch": "@@ -183,18 +183,16 @@ impl Command {\n                 cvt(libc::setgid(u as gid_t))?;\n             }\n             if let Some(u) = self.get_uid() {\n+                // When dropping privileges from root, the `setgroups` call\n+                // will remove any extraneous groups. If we don't call this,\n+                // then even though our uid has dropped, we may still have\n+                // groups that enable us to do super-user things. This will\n+                // fail if we aren't root, so don't bother checking the\n+                // return value, this is just done as an optimistic\n+                // privilege dropping function.\n                 //FIXME: Redox kernel does not support setgroups yet\n-                if cfg!(not(target_os = \"redox\")) {\n-                    // When dropping privileges from root, the `setgroups` call\n-                    // will remove any extraneous groups. If we don't call this,\n-                    // then even though our uid has dropped, we may still have\n-                    // groups that enable us to do super-user things. This will\n-                    // fail if we aren't root, so don't bother checking the\n-                    // return value, this is just done as an optimistic\n-                    // privilege dropping function.\n-                    let _ = libc::setgroups(0, ptr::null());\n-                }\n-\n+                #[cfg(not(target_os = \"redox\"))]\n+                let _ = libc::setgroups(0, ptr::null());\n                 cvt(libc::setuid(u as uid_t))?;\n             }\n         }"}]}