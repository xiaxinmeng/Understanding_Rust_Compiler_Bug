{"sha": "f03c2aef470250fbc2a2552c146bc19ffe08422c", "node_id": "C_kwDOAAsO6NoAKGYwM2MyYWVmNDcwMjUwZmJjMmEyNTUyYzE0NmJjMTlmZmUwODQyMmM", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-01T19:13:18Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-12-13T01:38:38Z"}, "message": "Add tests", "tree": {"sha": "df74901b2a82e7e6138e00a2f12f9b31014e0db6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df74901b2a82e7e6138e00a2f12f9b31014e0db6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f03c2aef470250fbc2a2552c146bc19ffe08422c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f03c2aef470250fbc2a2552c146bc19ffe08422c", "html_url": "https://github.com/rust-lang/rust/commit/f03c2aef470250fbc2a2552c146bc19ffe08422c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f03c2aef470250fbc2a2552c146bc19ffe08422c/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa5af2a0034b211631204218caa8f2f17ea0b0e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa5af2a0034b211631204218caa8f2f17ea0b0e6", "html_url": "https://github.com/rust-lang/rust/commit/aa5af2a0034b211631204218caa8f2f17ea0b0e6"}], "stats": {"total": 80, "additions": 80, "deletions": 0}, "files": [{"sha": "1bec41e2efa01ec78f04cfc2d2ef9c7fe34452fd", "filename": "src/test/ui/inline-const/expr-unsafe-err.mir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.mir.stderr?ref=f03c2aef470250fbc2a2552c146bc19ffe08422c", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: call to unsafe function is unsafe and requires unsafe function or block\n+  --> $DIR/expr-unsafe-err.rs:8:9\n+   |\n+LL |         require_unsafe();\n+   |         ^^^^^^^^^^^^^^^^ call to unsafe function\n+   |\n+   = note: consult the function's documentation for information on how to avoid undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "adf05d352ea70c0f5f9602d965a5788e91601df1", "filename": "src/test/ui/inline-const/expr-unsafe-err.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.rs?ref=f03c2aef470250fbc2a2552c146bc19ffe08422c", "patch": "@@ -0,0 +1,11 @@\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+#![feature(inline_const)]\n+const unsafe fn require_unsafe() -> usize { 1 }\n+\n+fn main() {\n+    const {\n+        require_unsafe();\n+        //~^ ERROR [E0133]\n+    }\n+}"}, {"sha": "c971e8afb35770c56530afb66cf7379b3a885d9f", "filename": "src/test/ui/inline-const/expr-unsafe-err.thir.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe-err.thir.stderr?ref=f03c2aef470250fbc2a2552c146bc19ffe08422c", "patch": "@@ -0,0 +1,11 @@\n+error[E0133]: call to unsafe function `require_unsafe` is unsafe and requires unsafe function or block\n+  --> $DIR/expr-unsafe-err.rs:8:9\n+   |\n+LL |         require_unsafe();\n+   |         ^^^^^^^^^^^^^^^^ call to unsafe function\n+   |\n+   = note: consult the function's documentation for information on how to avoid undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0133`."}, {"sha": "1ab6e42fba0a5b9a38ebe2c8d8547bfb4368163d", "filename": "src/test/ui/inline-const/expr-unsafe.mir.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.mir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.mir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.mir.stderr?ref=f03c2aef470250fbc2a2552c146bc19ffe08422c", "patch": "@@ -0,0 +1,14 @@\n+warning: unnecessary `unsafe` block\n+  --> $DIR/expr-unsafe.rs:12:13\n+   |\n+LL |             unsafe {}\n+   |             ^^^^^^ unnecessary `unsafe` block\n+   |\n+note: the lint level is defined here\n+  --> $DIR/expr-unsafe.rs:4:9\n+   |\n+LL | #![warn(unused_unsafe)]\n+   |         ^^^^^^^^^^^^^\n+\n+warning: 1 warning emitted\n+"}, {"sha": "d71efd33db16393faa706670b1d27ee07ba2732f", "filename": "src/test/ui/inline-const/expr-unsafe.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.rs?ref=f03c2aef470250fbc2a2552c146bc19ffe08422c", "patch": "@@ -0,0 +1,16 @@\n+// check-pass\n+// revisions: mir thir\n+// [thir]compile-flags: -Z thir-unsafeck\n+#![warn(unused_unsafe)]\n+#![feature(inline_const)]\n+const unsafe fn require_unsafe() -> usize { 1 }\n+\n+fn main() {\n+    unsafe {\n+        const {\n+            require_unsafe();\n+            unsafe {}\n+            //~^ WARNING unnecessary `unsafe` block\n+        }\n+    }\n+}"}, {"sha": "4737444fb61c42ea44d01db76738ffc7072015c4", "filename": "src/test/ui/inline-const/expr-unsafe.thir.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.thir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f03c2aef470250fbc2a2552c146bc19ffe08422c/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.thir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fexpr-unsafe.thir.stderr?ref=f03c2aef470250fbc2a2552c146bc19ffe08422c", "patch": "@@ -0,0 +1,17 @@\n+warning: unnecessary `unsafe` block\n+  --> $DIR/expr-unsafe.rs:12:13\n+   |\n+LL |     unsafe {\n+   |     ------ because it's nested under this `unsafe` block\n+...\n+LL |             unsafe {}\n+   |             ^^^^^^ unnecessary `unsafe` block\n+   |\n+note: the lint level is defined here\n+  --> $DIR/expr-unsafe.rs:4:9\n+   |\n+LL | #![warn(unused_unsafe)]\n+   |         ^^^^^^^^^^^^^\n+\n+warning: 1 warning emitted\n+"}]}