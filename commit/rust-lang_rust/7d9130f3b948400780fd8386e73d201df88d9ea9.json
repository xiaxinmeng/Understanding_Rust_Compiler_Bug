{"sha": "7d9130f3b948400780fd8386e73d201df88d9ea9", "node_id": "C_kwDOAAsO6NoAKDdkOTEzMGYzYjk0ODQwMDc4MGZkODM4NmU3M2QyMDFkZjg4ZDllYTk", "commit": {"author": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-05-04T10:22:11Z"}, "committer": {"name": "Boxy", "email": "supbscripter@gmail.com", "date": "2023-05-04T10:22:40Z"}, "message": "do not allow rustc::pass_by_value lint", "tree": {"sha": "e5bf4a0636ffc7698b68a81c916cf046f5f69f04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5bf4a0636ffc7698b68a81c916cf046f5f69f04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d9130f3b948400780fd8386e73d201df88d9ea9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d9130f3b948400780fd8386e73d201df88d9ea9", "html_url": "https://github.com/rust-lang/rust/commit/7d9130f3b948400780fd8386e73d201df88d9ea9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d9130f3b948400780fd8386e73d201df88d9ea9/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c04106f9f13cb6e8f73aff8ea0888e94631dc47a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c04106f9f13cb6e8f73aff8ea0888e94631dc47a", "html_url": "https://github.com/rust-lang/rust/commit/c04106f9f13cb6e8f73aff8ea0888e94631dc47a"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "6a7e49cbec6487b52c679c1e264dc1fa315e44a3", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7d9130f3b948400780fd8386e73d201df88d9ea9/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d9130f3b948400780fd8386e73d201df88d9ea9/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=7d9130f3b948400780fd8386e73d201df88d9ea9", "patch": "@@ -192,10 +192,9 @@ macro_rules! make_mir_visitor {\n                 self.super_constant(constant, location);\n             }\n \n-            #[allow(rustc::pass_by_value)]\n             fn visit_ty_const(\n                 &mut self,\n-                ct: & $($mutability)? ty::Const<'tcx>,\n+                ct: $( & $mutability)? ty::Const<'tcx>,\n                 location: Location,\n             ) {\n                 self.super_ty_const(ct, location);\n@@ -636,7 +635,7 @@ macro_rules! make_mir_visitor {\n \n                     Rvalue::Repeat(value, ct) => {\n                         self.visit_operand(value, location);\n-                        self.visit_ty_const(ct, location);\n+                        self.visit_ty_const($(&$mutability)? *ct, location);\n                     }\n \n                     Rvalue::ThreadLocalRef(_) => {}\n@@ -888,16 +887,15 @@ macro_rules! make_mir_visitor {\n                 self.visit_span($(& $mutability)? *span);\n                 drop(user_ty); // no visit method for this\n                 match literal {\n-                    ConstantKind::Ty(ct) => self.visit_ty_const(ct, location),\n+                    ConstantKind::Ty(ct) => self.visit_ty_const($(&$mutability)? *ct, location),\n                     ConstantKind::Val(_, ty) => self.visit_ty($(& $mutability)? *ty, TyContext::Location(location)),\n                     ConstantKind::Unevaluated(_, ty) => self.visit_ty($(& $mutability)? *ty, TyContext::Location(location)),\n                 }\n             }\n \n-            #[allow(rustc::pass_by_value)]\n             fn super_ty_const(\n                 &mut self,\n-                _ct: & $($mutability)? ty::Const<'tcx>,\n+                _ct: $(& $mutability)? ty::Const<'tcx>,\n                 _location: Location,\n             ) {\n "}]}