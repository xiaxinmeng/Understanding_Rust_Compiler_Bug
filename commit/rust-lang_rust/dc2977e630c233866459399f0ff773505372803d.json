{"sha": "dc2977e630c233866459399f0ff773505372803d", "node_id": "C_kwDOAAsO6NoAKGRjMjk3N2U2MzBjMjMzODY2NDU5Mzk5ZjBmZjc3MzUwNTM3MjgwM2Q", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-13T09:49:53Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-06-13T09:49:53Z"}, "message": "check for inferred params in a clearer way", "tree": {"sha": "99669316cf4172c75552a96ed9829723c56fd0c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99669316cf4172c75552a96ed9829723c56fd0c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc2977e630c233866459399f0ff773505372803d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2977e630c233866459399f0ff773505372803d", "html_url": "https://github.com/rust-lang/rust/commit/dc2977e630c233866459399f0ff773505372803d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc2977e630c233866459399f0ff773505372803d/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "451e0301d88feb3836177217c8d103d197b2b774", "url": "https://api.github.com/repos/rust-lang/rust/commits/451e0301d88feb3836177217c8d103d197b2b774", "html_url": "https://github.com/rust-lang/rust/commit/451e0301d88feb3836177217c8d103d197b2b774"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "2fadf9c89380460b87dcb2e6191f5435cfed3637", "filename": "compiler/rustc_typeck/src/check/pat.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc2977e630c233866459399f0ff773505372803d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2977e630c233866459399f0ff773505372803d/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fpat.rs?ref=dc2977e630c233866459399f0ff773505372803d", "patch": "@@ -664,7 +664,9 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             };\n \n             match binding_parent {\n-                hir::Node::Param(hir::Param { ty_span, .. }) if binding.span.hi() <= ty_span.lo() => {\n+                // Check that there is explicit type (ie this is not a closure param with inferred type)\n+                // so we don't suggest moving something to the type that does not exist\n+                hir::Node::Param(hir::Param { ty_span, .. }) if binding.span != *ty_span => {\n                     err.multipart_suggestion_verbose(\n                         format!(\"to take parameter `{binding}` by reference, move `&{mutability}` to the type\"), \n                         vec!["}]}