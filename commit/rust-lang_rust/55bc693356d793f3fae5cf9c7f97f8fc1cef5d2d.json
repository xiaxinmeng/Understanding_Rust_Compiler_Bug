{"sha": "55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d", "node_id": "C_kwDOAAsO6NoAKDU1YmM2OTMzNTZkNzkzZjNmYWU1Y2Y5YzdmOTdmOGZjMWNlZjVkMmQ", "commit": {"author": {"name": "yue4u", "email": "github@yue.coffee", "date": "2022-06-08T11:53:42Z"}, "committer": {"name": "yue4u", "email": "github@yue.coffee", "date": "2022-06-08T11:55:16Z"}, "message": "fix: show non-std enum in a fresh use tree completion", "tree": {"sha": "2e8fe36c752ae502d874a6ef2a4107b101ca84bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8fe36c752ae502d874a6ef2a4107b101ca84bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d", "html_url": "https://github.com/rust-lang/rust/commit/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d/comments", "author": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66a842124b52cb005e9dee4605df161badb295e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/66a842124b52cb005e9dee4605df161badb295e0", "html_url": "https://github.com/rust-lang/rust/commit/66a842124b52cb005e9dee4605df161badb295e0"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "2d862170774cfcbc993c48789dd8c74e38c378aa", "filename": "crates/ide-completion/src/completions/use_.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fuse_.rs?ref=55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d", "patch": "@@ -101,11 +101,22 @@ pub(crate) fn complete_use_tree(acc: &mut Completions, ctx: &CompletionContext)\n             cov_mark::hit!(use_tree_crate_roots_only);\n             acc.add_crate_roots(ctx);\n         }\n-        // only show modules in a fresh UseTree\n+        // only show modules and non-std enum in a fresh UseTree\n         None => {\n-            cov_mark::hit!(unqualified_path_only_modules_in_import);\n+            cov_mark::hit!(unqualified_path_selected_only);\n             ctx.process_all_names(&mut |name, res| {\n-                if let ScopeDef::ModuleDef(hir::ModuleDef::Module(_)) = res {\n+                let should_add_resolution = match res {\n+                    ScopeDef::ModuleDef(hir::ModuleDef::Module(_)) => true,\n+                    ScopeDef::ModuleDef(hir::ModuleDef::Adt(hir::Adt::Enum(_))) => {\n+                        match res.krate(ctx.db) {\n+                            // exclude prelude enum\n+                            Some(krate) => !krate.is_builtin(ctx.db),\n+                            _ => true,\n+                        }\n+                    }\n+                    _ => false,\n+                };\n+                if should_add_resolution {\n                     acc.add_resolution(ctx, name, res);\n                 }\n             });"}, {"sha": "db283f69ce569cef8777417a5885304b04256565", "filename": "crates/ide-completion/src/tests/use_tree.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d/crates%2Fide-completion%2Fsrc%2Ftests%2Fuse_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d/crates%2Fide-completion%2Fsrc%2Ftests%2Fuse_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fuse_tree.rs?ref=55bc693356d793f3fae5cf9c7f97f8fc1cef5d2d", "patch": "@@ -10,18 +10,23 @@ fn check(ra_fixture: &str, expect: Expect) {\n \n #[test]\n fn use_tree_start() {\n-    cov_mark::check!(unqualified_path_only_modules_in_import);\n+    cov_mark::check!(unqualified_path_selected_only);\n     check(\n         r#\"\n //- /lib.rs crate:main deps:other_crate\n use f$0\n \n struct Foo;\n+enum FooBar {\n+    Foo,\n+    Bar\n+}\n mod foo {}\n //- /other_crate/lib.rs crate:other_crate\n // nothing here\n \"#,\n         expect![[r#\"\n+            en FooBar\n             md foo\n             md other_crate\n             kw crate::"}]}