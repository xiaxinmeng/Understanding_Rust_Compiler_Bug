{"sha": "b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NGQ5NGE1MTYyZWU0YjJlMjBmNGFlODIzMjhmM2U3ZjZhMTUyYjg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-07T10:41:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-31T19:23:50Z"}, "message": "remove unneccessary uses of `drain_fulfillment_cx`\n\nThere were various places that we are invoking `drain_fulfillment_cx`\nwith a \"result\" of `()`. This is kind of pointless, since it amounts to\njust a call to `select_all_or_error` along with some extra overhead.", "tree": {"sha": "1318651813b7bc1ca0ea87182f42de419573c742", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1318651813b7bc1ca0ea87182f42de419573c742"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8", "html_url": "https://github.com/rust-lang/rust/commit/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52c2d87aa989eb83bfe61884e3c5f24cb5e923d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/52c2d87aa989eb83bfe61884e3c5f24cb5e923d5", "html_url": "https://github.com/rust-lang/rust/commit/52c2d87aa989eb83bfe61884e3c5f24cb5e923d5"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "0604136ec6018565d62364eb8453e516d0104ef1", "filename": "src/librustc/traits/specialize/mod.rs", "status": "modified", "additions": 19, "deletions": 16, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fspecialize%2Fmod.rs?ref=b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8", "patch": "@@ -207,24 +207,27 @@ fn fulfill_implication<'a, 'gcx, 'tcx>(infcx: &InferCtxt<'a, 'gcx, 'tcx>,\n     for oblig in obligations.into_iter() {\n         fulfill_cx.register_predicate_obligation(&infcx, oblig);\n     }\n+    match fulfill_cx.select_all_or_error(infcx) {\n+        Err(errors) => {\n+            // no dice!\n+            debug!(\"fulfill_implication: for impls on {:?} and {:?}, could not fulfill: {:?} given \\\n+                    {:?}\",\n+                   source_trait_ref,\n+                   target_trait_ref,\n+                   errors,\n+                   infcx.parameter_environment.caller_bounds);\n+            Err(())\n+        }\n \n-    if let Err(errors) = infcx.drain_fulfillment_cx(&mut fulfill_cx, &()) {\n-        // no dice!\n-        debug!(\"fulfill_implication: for impls on {:?} and {:?}, could not fulfill: {:?} given \\\n-                {:?}\",\n-               source_trait_ref,\n-               target_trait_ref,\n-               errors,\n-               infcx.parameter_environment.caller_bounds);\n-        Err(())\n-    } else {\n-        debug!(\"fulfill_implication: an impl for {:?} specializes {:?}\",\n-               source_trait_ref,\n-               target_trait_ref);\n+        Ok(()) => {\n+            debug!(\"fulfill_implication: an impl for {:?} specializes {:?}\",\n+                   source_trait_ref,\n+                   target_trait_ref);\n \n-        // Now resolve the *substitution* we built for the target earlier, replacing\n-        // the inference variables inside with whatever we got from fulfillment.\n-        Ok(infcx.resolve_type_vars_if_possible(&target_substs))\n+            // Now resolve the *substitution* we built for the target earlier, replacing\n+            // the inference variables inside with whatever we got from fulfillment.\n+            Ok(infcx.resolve_type_vars_if_possible(&target_substs))\n+        }\n     }\n }\n "}, {"sha": "95a38cd21d9366a86be045f04f0e3059018fa9f3", "filename": "src/librustc_trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8/src%2Flibrustc_trans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8/src%2Flibrustc_trans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcommon.rs?ref=b44d94a5162ee4b2e20f4ae82328f3e7f6a152b8", "patch": "@@ -1028,7 +1028,7 @@ pub fn normalize_and_test_predicates<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n             fulfill_cx.register_predicate_obligation(&infcx, obligation);\n         }\n \n-        infcx.drain_fulfillment_cx(&mut fulfill_cx, &()).is_ok()\n+        fulfill_cx.select_all_or_error(infcx).is_ok()\n     })\n }\n "}]}