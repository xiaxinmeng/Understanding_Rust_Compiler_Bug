{"sha": "52e0bda644823089f16795cc9e071cf827b4810b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyZTBiZGE2NDQ4MjMwODlmMTY3OTVjYzllMDcxY2Y4MjdiNDgxMGI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-05T23:44:51Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-05T23:44:51Z"}, "message": "Auto merge of #31889 - alexcrichton:update-jemalloc-again, r=nikomatsakis\n\nNow that https://github.com/jemalloc/jemalloc/commit/767d85061a6fb88ec977bbcd9b429a43aff391e6 is upstream, the relevant deadlocking issue which prompted our downgrade has been resolved. As a result, there's no known issue to *not* upgrade! This also re-enables jemalloc for the pc-windows-gnu target as known issues with that have also been fixed.\n\nCloses #31030", "tree": {"sha": "bc52b8e971287afb6e7130eaf17acbefe6617c05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc52b8e971287afb6e7130eaf17acbefe6617c05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52e0bda644823089f16795cc9e071cf827b4810b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52e0bda644823089f16795cc9e071cf827b4810b", "html_url": "https://github.com/rust-lang/rust/commit/52e0bda644823089f16795cc9e071cf827b4810b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52e0bda644823089f16795cc9e071cf827b4810b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3029e0918de00162932132a7972e566f3a3372f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3029e0918de00162932132a7972e566f3a3372f5", "html_url": "https://github.com/rust-lang/rust/commit/3029e0918de00162932132a7972e566f3a3372f5"}, {"sha": "df9e1733537bee656f36a3c89fd473f5f1a1dff5", "url": "https://api.github.com/repos/rust-lang/rust/commits/df9e1733537bee656f36a3c89fd473f5f1a1dff5", "html_url": "https://github.com/rust-lang/rust/commit/df9e1733537bee656f36a3c89fd473f5f1a1dff5"}], "stats": {"total": 70, "additions": 29, "deletions": 41}, "files": [{"sha": "3426b30aeeb85f9080d28f6f4dda698c8a11dd28", "filename": "mk/cfg/i686-pc-windows-gnu.mk", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52e0bda644823089f16795cc9e071cf827b4810b/mk%2Fcfg%2Fi686-pc-windows-gnu.mk", "raw_url": "https://github.com/rust-lang/rust/raw/52e0bda644823089f16795cc9e071cf827b4810b/mk%2Fcfg%2Fi686-pc-windows-gnu.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fi686-pc-windows-gnu.mk?ref=52e0bda644823089f16795cc9e071cf827b4810b", "patch": "@@ -25,5 +25,3 @@ CFG_GNU_TRIPLE_i686-pc-windows-gnu := i686-w64-mingw32\n CFG_THIRD_PARTY_OBJECTS_i686-pc-windows-gnu := crt2.o dllcrt2.o\n CFG_INSTALLED_OBJECTS_i686-pc-windows-gnu := crt2.o dllcrt2.o rsbegin.o rsend.o\n CFG_RUSTRT_HAS_STARTUP_OBJS_i686-pc-windows-gnu := 1\n-# FIXME(#31030) - there's not a great reason to disable jemalloc here\n-CFG_DISABLE_JEMALLOC_i686-pc-windows-gnu := 1"}, {"sha": "f0732d08c71ea84c65b9c5e6140084bb69ac2aa2", "filename": "mk/cfg/x86_64-pc-windows-gnu.mk", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52e0bda644823089f16795cc9e071cf827b4810b/mk%2Fcfg%2Fx86_64-pc-windows-gnu.mk", "raw_url": "https://github.com/rust-lang/rust/raw/52e0bda644823089f16795cc9e071cf827b4810b/mk%2Fcfg%2Fx86_64-pc-windows-gnu.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcfg%2Fx86_64-pc-windows-gnu.mk?ref=52e0bda644823089f16795cc9e071cf827b4810b", "patch": "@@ -25,5 +25,3 @@ CFG_GNU_TRIPLE_x86_64-pc-windows-gnu := x86_64-w64-mingw32\n CFG_THIRD_PARTY_OBJECTS_x86_64-pc-windows-gnu := crt2.o dllcrt2.o\n CFG_INSTALLED_OBJECTS_x86_64-pc-windows-gnu := crt2.o dllcrt2.o rsbegin.o rsend.o\n CFG_RUSTRT_HAS_STARTUP_OBJS_x86_64-pc-windows-gnu := 1\n-# FIXME(#31030) - there's not a great reason to disable jemalloc here\n-CFG_DISABLE_JEMALLOC_x86_64-pc-windows-gnu := 1"}, {"sha": "aab1c0a0e0b39825b16673128729ef46310a5da8", "filename": "src/jemalloc", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fjemalloc?ref=52e0bda644823089f16795cc9e071cf827b4810b", "patch": "@@ -1 +1 @@\n-Subproject commit e24a1a025a1f214e40eedafe3b9c7b1d69937922\n+Subproject commit aab1c0a0e0b39825b16673128729ef46310a5da8"}, {"sha": "db7f304227f01acc9df0d1df50744ac82e3e08c4", "filename": "src/test/compile-fail/allocator-dylib-is-system.rs", "status": "modified", "additions": 13, "deletions": 4, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/52e0bda644823089f16795cc9e071cf827b4810b/src%2Ftest%2Fcompile-fail%2Fallocator-dylib-is-system.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e0bda644823089f16795cc9e071cf827b4810b/src%2Ftest%2Fcompile-fail%2Fallocator-dylib-is-system.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fallocator-dylib-is-system.rs?ref=52e0bda644823089f16795cc9e071cf827b4810b", "patch": "@@ -8,11 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-windows everything is the system allocator on windows\n-// ignore-musl no dylibs on musl yet\n-// ignore-bitrig no jemalloc on bitrig\n-// ignore-openbsd no jemalloc on openbsd\n+// ignore-musl no dylibs\n // aux-build:allocator-dylib.rs\n+// aux-build:allocator1.rs\n // no-prefer-dynamic\n // error-pattern: cannot link together two allocators\n \n@@ -23,7 +21,18 @@\n #![feature(alloc_jemalloc)]\n \n extern crate allocator_dylib;\n+\n+// The main purpose of this test is to ensure that `alloc_jemalloc` **fails**\n+// here (specifically the jemalloc allocator), but currently jemalloc is\n+// disabled on quite a few platforms (bsds, emscripten, msvc, etc). To ensure\n+// that this just passes on those platforms we link in some other allocator to\n+// ensure we get the same error.\n+//\n+// So long as we CI linux/OSX we should be good.\n+#[cfg(any(target_os = \"linux\", target_os = \"macos\"))]\n extern crate alloc_jemalloc;\n+#[cfg(not(any(target_os = \"linux\", target_os = \"macos\")))]\n+extern crate allocator1;\n \n fn main() {\n     allocator_dylib::foo();"}, {"sha": "46ad226d255645a0df21d8ac19f5179aa6905fe0", "filename": "src/test/compile-fail/allocator-rust-dylib-is-jemalloc.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/52e0bda644823089f16795cc9e071cf827b4810b/src%2Ftest%2Fcompile-fail%2Fallocator-rust-dylib-is-jemalloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e0bda644823089f16795cc9e071cf827b4810b/src%2Ftest%2Fcompile-fail%2Fallocator-rust-dylib-is-jemalloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fallocator-rust-dylib-is-jemalloc.rs?ref=52e0bda644823089f16795cc9e071cf827b4810b", "patch": "@@ -8,11 +8,9 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-windows everything is the system allocator on windows\n-// ignore-musl no dylibs on musl right now\n-// ignore-bitrig no jemalloc on bitrig\n-// ignore-openbsd no jemalloc on openbsd\n+// ignore-musl no dylibs\n // aux-build:allocator-dylib2.rs\n+// aux-build:allocator1.rs\n // error-pattern: cannot link together two allocators\n \n // Ensure that rust dynamic libraries use jemalloc as their allocator, verifying\n@@ -21,9 +19,19 @@\n #![feature(alloc_system)]\n \n extern crate allocator_dylib2;\n+\n+// The main purpose of this test is to ensure that `alloc_system` **fails**\n+// here (specifically the system allocator), but currently system is\n+// disabled on quite a few platforms (bsds, emscripten, msvc, etc). To ensure\n+// that this just passes on those platforms we link in some other allocator to\n+// ensure we get the same error.\n+//\n+// So long as we CI linux/OSX we should be good.\n+#[cfg(any(target_os = \"linux\", target_os = \"macos\"))]\n extern crate alloc_system;\n+#[cfg(not(any(target_os = \"linux\", target_os = \"macos\")))]\n+extern crate allocator1;\n \n fn main() {\n     allocator_dylib2::foo();\n }\n-"}, {"sha": "32ed2b330118d5cd85badd30eb5f4df1192f4da7", "filename": "src/test/run-pass/allocator-default.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/52e0bda644823089f16795cc9e071cf827b4810b/src%2Ftest%2Frun-pass%2Fallocator-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52e0bda644823089f16795cc9e071cf827b4810b/src%2Ftest%2Frun-pass%2Fallocator-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator-default.rs?ref=52e0bda644823089f16795cc9e071cf827b4810b", "patch": "@@ -8,12 +8,10 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(alloc_jemalloc, alloc_system)]\n+#![feature(alloc_jemalloc)]\n \n-#[cfg(not(any(windows, target_os = \"bitrig\", target_os = \"openbsd\", target_os=\"emscripten\")))]\n+#[cfg(any(target_os = \"linux\", target_os = \"macos\"))]\n extern crate alloc_jemalloc;\n-#[cfg(any(windows, target_os = \"bitrig\", target_os = \"openbsd\", target_os=\"emscripten\"))]\n-extern crate alloc_system;\n \n fn main() {\n     println!(\"{:?}\", Box::new(3));"}, {"sha": "ad1438f75fc50507681282b6e090f126635ae530", "filename": "src/test/run-pass/allocator-jemalloc.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3029e0918de00162932132a7972e566f3a3372f5/src%2Ftest%2Frun-pass%2Fallocator-jemalloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3029e0918de00162932132a7972e566f3a3372f5/src%2Ftest%2Frun-pass%2Fallocator-jemalloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator-jemalloc.rs?ref=3029e0918de00162932132a7972e566f3a3372f5", "patch": "@@ -1,23 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// no-prefer-dynamic\n-// ignore-windows no jemalloc on windows\n-// ignore-bitrig no jemalloc on bitrig\n-// ignore-openbsd no jemalloc on openbsd\n-// ignore-emscripten no jemalloc on emscripten\n-\n-#![feature(alloc_jemalloc)]\n-\n-extern crate alloc_jemalloc;\n-\n-fn main() {\n-    println!(\"{:?}\", Box::new(3));\n-}"}]}