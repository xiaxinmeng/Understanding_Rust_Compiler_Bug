{"sha": "6c3e4591b87e6c690b31166867484675dcb1e48c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjM2U0NTkxYjg3ZTZjNjkwYjMxMTY2ODY3NDg0Njc1ZGNiMWU0OGM=", "commit": {"author": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-07-27T05:04:25Z"}, "committer": {"name": "Ryan1729", "email": "Ryan1729@gmail.com", "date": "2020-07-27T05:04:25Z"}, "message": "update reference since we see the expected four errors", "tree": {"sha": "1ed5f5b0459509e3598ff49442f4b733fe9c20ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ed5f5b0459509e3598ff49442f4b733fe9c20ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c3e4591b87e6c690b31166867484675dcb1e48c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c3e4591b87e6c690b31166867484675dcb1e48c", "html_url": "https://github.com/rust-lang/rust/commit/6c3e4591b87e6c690b31166867484675dcb1e48c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c3e4591b87e6c690b31166867484675dcb1e48c/comments", "author": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Ryan1729", "id": 2133026, "node_id": "MDQ6VXNlcjIxMzMwMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/2133026?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Ryan1729", "html_url": "https://github.com/Ryan1729", "followers_url": "https://api.github.com/users/Ryan1729/followers", "following_url": "https://api.github.com/users/Ryan1729/following{/other_user}", "gists_url": "https://api.github.com/users/Ryan1729/gists{/gist_id}", "starred_url": "https://api.github.com/users/Ryan1729/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Ryan1729/subscriptions", "organizations_url": "https://api.github.com/users/Ryan1729/orgs", "repos_url": "https://api.github.com/users/Ryan1729/repos", "events_url": "https://api.github.com/users/Ryan1729/events{/privacy}", "received_events_url": "https://api.github.com/users/Ryan1729/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8d6eda93049f0077c1515bec35fe0359ea43f96", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8d6eda93049f0077c1515bec35fe0359ea43f96", "html_url": "https://github.com/rust-lang/rust/commit/a8d6eda93049f0077c1515bec35fe0359ea43f96"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "66bc4d42ce8c3c85e80d571bcbb658884a92cbe3", "filename": "tests/ui/derive_ord_xor_partial_ord.stderr", "status": "modified", "additions": 71, "deletions": 1, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/6c3e4591b87e6c690b31166867484675dcb1e48c/tests%2Fui%2Fderive_ord_xor_partial_ord.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6c3e4591b87e6c690b31166867484675dcb1e48c/tests%2Fui%2Fderive_ord_xor_partial_ord.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_ord_xor_partial_ord.stderr?ref=6c3e4591b87e6c690b31166867484675dcb1e48c", "patch": "@@ -1 +1,71 @@\n-TODO\n\\ No newline at end of file\n+error: you are deriving `Ord` but have implemented `PartialOrd` explicitly\n+  --> $DIR/derive_ord_xor_partial_ord.rs:20:10\n+   |\n+LL | #[derive(Ord, PartialEq, Eq)]\n+   |          ^^^\n+   |\n+   = note: `-D clippy::derive-ord-xor-partial-ord` implied by `-D warnings`\n+note: `PartialOrd` implemented here\n+  --> $DIR/derive_ord_xor_partial_ord.rs:23:1\n+   |\n+LL | / impl PartialOrd for DeriveOrd {\n+LL | |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n+LL | |         Some(other.cmp(self))\n+LL | |     }\n+LL | | }\n+   | |_^\n+   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: you are deriving `Ord` but have implemented `PartialOrd` explicitly\n+  --> $DIR/derive_ord_xor_partial_ord.rs:29:10\n+   |\n+LL | #[derive(Ord, PartialEq, Eq)]\n+   |          ^^^\n+   |\n+note: `PartialOrd` implemented here\n+  --> $DIR/derive_ord_xor_partial_ord.rs:32:1\n+   |\n+LL | / impl PartialOrd<DeriveOrdWithExplicitTypeVariable> for DeriveOrdWithExplicitTypeVariable {\n+LL | |     fn partial_cmp(&self, other: &Self) -> Option<Ordering> {\n+LL | |         Some(other.cmp(self))\n+LL | |     }\n+LL | | }\n+   | |_^\n+   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: you are implementing `Ord` explicitly but have derived `PartialOrd`\n+  --> $DIR/derive_ord_xor_partial_ord.rs:41:1\n+   |\n+LL | / impl std::cmp::Ord for DerivePartialOrd {\n+LL | |     fn cmp(&self, other: &Self) -> Ordering {\n+LL | |         Ordering::Less\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+note: `PartialOrd` implemented here\n+  --> $DIR/derive_ord_xor_partial_ord.rs:38:10\n+   |\n+LL | #[derive(PartialOrd, PartialEq, Eq)]\n+   |          ^^^^^^^^^^\n+   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: you are implementing `Ord` explicitly but have derived `PartialOrd`\n+  --> $DIR/derive_ord_xor_partial_ord.rs:61:5\n+   |\n+LL | /     impl Ord for DerivePartialOrdInUseOrd {\n+LL | |         fn cmp(&self, other: &Self) -> Ordering {\n+LL | |             Ordering::Less\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+note: `PartialOrd` implemented here\n+  --> $DIR/derive_ord_xor_partial_ord.rs:58:14\n+   |\n+LL |     #[derive(PartialOrd, PartialEq, Eq)]\n+   |              ^^^^^^^^^^\n+   = note: this error originates in a derive macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to 4 previous errors\n+"}]}