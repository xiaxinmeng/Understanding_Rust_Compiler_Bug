{"sha": "6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlODhhYWVmNWQ0OWM4ZWM3YjZmZmU2YjQxNDU3YzNhMDI4YjRlYjA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-20T19:38:47Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-10-20T19:38:52Z"}, "message": "use pythonic import order\n\nuse std\n// blank line\nuse extern crates\n// blank line\nuse crate::{}", "tree": {"sha": "6ae9f95315451a9e722dcffa0c1e1283d276d312", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ae9f95315451a9e722dcffa0c1e1283d276d312"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "html_url": "https://github.com/rust-lang/rust/commit/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8eea10e3ab25111375a95990b93d1170d5fe8a9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8eea10e3ab25111375a95990b93d1170d5fe8a9f", "html_url": "https://github.com/rust-lang/rust/commit/8eea10e3ab25111375a95990b93d1170d5fe8a9f"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "310bf15857231b32307f172220edd49ff4a7e3dd", "filename": "crates/ra_analysis/src/descriptors.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -1,12 +1,13 @@\n-use crate::{imp::FileResolverImp, FileId};\n+use std::collections::BTreeMap;\n+\n use ra_syntax::{\n     ast::{self, AstNode, NameOwner},\n     text_utils::is_subrange,\n     SmolStr,\n };\n use relative_path::RelativePathBuf;\n \n-use std::collections::BTreeMap;\n+use crate::{imp::FileResolverImp, FileId};\n \n #[derive(Debug, PartialEq, Eq, Hash)]\n pub struct ModuleDescriptor {"}, {"sha": "750031093713206507c281d5a561e5b01c8f9133", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -23,11 +23,12 @@ mod symbol_index;\n \n use std::{fmt::Debug, sync::Arc};\n \n-use crate::imp::{AnalysisHostImpl, AnalysisImpl, FileResolverImp};\n use ra_syntax::{AtomEdit, File, TextRange, TextUnit};\n use relative_path::{RelativePath, RelativePathBuf};\n use rustc_hash::FxHashMap;\n \n+use crate::imp::{AnalysisHostImpl, AnalysisImpl, FileResolverImp};\n+\n pub use crate::{\n     descriptors::FnDescriptor,\n     job::{JobHandle, JobToken},"}, {"sha": "a0f3c0437466bdeb0d77d315e28fd95174c2874e", "filename": "crates/ra_analysis/src/symbol_index.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fsymbol_index.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -1,4 +1,8 @@\n-use crate::{FileId, Query};\n+use std::{\n+    hash::{Hash, Hasher},\n+    sync::Arc,\n+};\n+\n use fst::{self, Streamer};\n use ra_editor::{file_symbols, FileSymbol};\n use ra_syntax::{\n@@ -7,10 +11,7 @@ use ra_syntax::{\n };\n use rayon::prelude::*;\n \n-use std::{\n-    hash::{Hash, Hasher},\n-    sync::Arc,\n-};\n+use crate::{FileId, Query};\n \n #[derive(Debug)]\n pub(crate) struct SymbolIndex {"}, {"sha": "673f1bf7d83214f20b83ee62d46765cb198efca1", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -1,5 +1,6 @@\n-use rustc_hash::FxHashMap;\n+use std::collections::HashMap;\n \n+use rustc_hash::FxHashMap;\n use languageserver_types::{\n     CodeActionResponse, Command, CompletionItem, CompletionItemKind, Diagnostic,\n     DiagnosticSeverity, DocumentSymbol, FoldingRange, FoldingRangeKind, FoldingRangeParams,\n@@ -18,8 +19,6 @@ use crate::{\n     Result,\n };\n \n-use std::collections::HashMap;\n-\n pub fn handle_syntax_tree(\n     world: ServerWorld,\n     params: req::SyntaxTreeParams,"}, {"sha": "d3282938267ba3cf3e3f799a1ba1474d5e5e7bec", "filename": "crates/ra_lsp_server/src/path_map.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fpath_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fpath_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fpath_map.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -1,9 +1,9 @@\n+use std::path::{Component, Path, PathBuf};\n+\n use im;\n use ra_analysis::{FileId, FileResolver};\n use relative_path::RelativePath;\n \n-use std::path::{Component, Path, PathBuf};\n-\n #[derive(Debug, Clone, Copy, PartialEq, Eq)]\n pub enum Root {\n     Workspace,"}, {"sha": "04e2ef9c852f95418f185f1922eaf452e1b9f13c", "filename": "crates/ra_lsp_server/src/project_model.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fproject_model.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -1,9 +1,9 @@\n+use std::path::{Path, PathBuf};\n+\n use cargo_metadata::{metadata_run, CargoOpt};\n use ra_syntax::SmolStr;\n use rustc_hash::{FxHashMap, FxHashSet};\n \n-use std::path::{Path, PathBuf};\n-\n use crate::{\n     thread_watcher::{ThreadWatcher, Worker},\n     Result,"}, {"sha": "51b35fa6679d119a9869115fd06d5afd0661ed99", "filename": "crates/ra_lsp_server/src/thread_watcher.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fthread_watcher.rs?ref=6e88aaef5d49c8ec7b6ffe6b41457c3a028b4eb0", "patch": "@@ -1,8 +1,9 @@\n-use crate::Result;\n+use std::thread;\n+\n use crossbeam_channel::{bounded, unbounded, Receiver, Sender};\n use drop_bomb::DropBomb;\n \n-use std::thread;\n+use crate::Result;\n \n pub struct Worker<I, O> {\n     pub inp: Sender<I>,"}]}