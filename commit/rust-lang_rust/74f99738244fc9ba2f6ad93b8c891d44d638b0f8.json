{"sha": "74f99738244fc9ba2f6ad93b8c891d44d638b0f8", "node_id": "C_kwDOAAsO6NoAKDc0Zjk5NzM4MjQ0ZmM5YmEyZjZhZDkzYjhjODkxZDQ0ZDYzOGIwZjg", "commit": {"author": {"name": "Nikita Tomashevich", "email": "quant3234@gmail.com", "date": "2022-08-23T12:33:06Z"}, "committer": {"name": "Nikita Tomashevich", "email": "quant3234@gmail.com", "date": "2022-08-23T12:33:06Z"}, "message": "Fix formating in infer.ftl to make tidy happy", "tree": {"sha": "fa90072bfbbbb9c14c204a0c8beab12cf26b9302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa90072bfbbbb9c14c204a0c8beab12cf26b9302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f99738244fc9ba2f6ad93b8c891d44d638b0f8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEAWou4Gq79HasRseDspeR1Nh440UFAmMEyR0ACgkQspeR1Nh4\n40XzrA//dUjtrW2qQnJzuhf99AlHd3pPY6agSj5YWPwk8/L7gR7KbfwhOeTe4iZN\n7qwHmyTtAlSIJ2jAWAemuNg/aF0irkndtzHva9iSQkI3Wr1u6etnbt3oEW7Hg4Yw\nUm7fUhCuqQ/QPZLA7YzyuNMJ53euJ2s3le3TobGLRnrqfNCJIHcfrA1fenCWHPsb\naNZNgaoUcqTPPZYdBCkTPXtlKKyeFctaxHVq0YJoHwY0YVhfw/yTdcS0ulMkLnCQ\nK83iTbktMUOiZ4O3Nfg8ciE/IK35YjNNxvU4iaIQLxLN2L+lTwLkyOUjxLI/6HhQ\nbr4ADHnM1dZJ+1f4OKsViMQpPLTKxxFIPEOC3tT2xZQs95HhSqhpdCgmO1FMyjGb\nc+02Fq2lW2EXubWMRzhrz3Q5NiZ2rWruGcC41W6bEziD8SbIMSw7a+JFIvTJA9XP\n6FnPOKOoQ+rpTMBNvQnuTJfmzU1iAgTjGOP048iPPX639RGopRI4Ac6xS79cwtBo\n2x9ioOwyihHJOIjyjLwJ1qx5vrhFC3EV7NX47BTEYLvECGWXqNdCQqFR7saBwDMv\nwZ1NklXy0ehllaFYNjTVb6qCmqC+2YqtOTtuoFi8Ohwl+tpLPz3nYwptiyzgCmMQ\nXkCOTAkDTkR0SmQWQ946QnndBpp6robsMZDMUjohP2HWzP48yYw=\n=Oiz6\n-----END PGP SIGNATURE-----", "payload": "tree fa90072bfbbbb9c14c204a0c8beab12cf26b9302\nparent f50d1713fd4aab1ff9d160e9fa4b20cd2f71e68a\nauthor Nikita Tomashevich <quant3234@gmail.com> 1661257986 +0300\ncommitter Nikita Tomashevich <quant3234@gmail.com> 1661257986 +0300\n\nFix formating in infer.ftl to make tidy happy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f99738244fc9ba2f6ad93b8c891d44d638b0f8", "html_url": "https://github.com/rust-lang/rust/commit/74f99738244fc9ba2f6ad93b8c891d44d638b0f8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f99738244fc9ba2f6ad93b8c891d44d638b0f8/comments", "author": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "committer": {"login": "IntQuant", "id": 25219447, "node_id": "MDQ6VXNlcjI1MjE5NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/25219447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/IntQuant", "html_url": "https://github.com/IntQuant", "followers_url": "https://api.github.com/users/IntQuant/followers", "following_url": "https://api.github.com/users/IntQuant/following{/other_user}", "gists_url": "https://api.github.com/users/IntQuant/gists{/gist_id}", "starred_url": "https://api.github.com/users/IntQuant/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/IntQuant/subscriptions", "organizations_url": "https://api.github.com/users/IntQuant/orgs", "repos_url": "https://api.github.com/users/IntQuant/repos", "events_url": "https://api.github.com/users/IntQuant/events{/privacy}", "received_events_url": "https://api.github.com/users/IntQuant/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f50d1713fd4aab1ff9d160e9fa4b20cd2f71e68a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f50d1713fd4aab1ff9d160e9fa4b20cd2f71e68a", "html_url": "https://github.com/rust-lang/rust/commit/f50d1713fd4aab1ff9d160e9fa4b20cd2f71e68a"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "6ae60d92e26eed230aaaaa0032be81582c15528d", "filename": "compiler/rustc_error_messages/locales/en-US/infer.ftl", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/74f99738244fc9ba2f6ad93b8c891d44d638b0f8/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/74f99738244fc9ba2f6ad93b8c891d44d638b0f8/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Finfer.ftl?ref=74f99738244fc9ba2f6ad93b8c891d44d638b0f8", "patch": "@@ -1,4 +1,4 @@\n-infer_opaque_hidden_type = \n+infer_opaque_hidden_type =\n     opaque type's hidden type cannot be another opaque type from the same scope\n     .label = one of the two opaque types used here has to be outside its defining scope\n     .opaque_type = opaque type whose hidden type is being assigned\n@@ -8,7 +8,7 @@ infer_type_annotations_needed = {$source_kind ->\n     [closure] type annotations needed for the closure `{$source_name}`\n     [normal] type annotations needed for `{$source_name}`\n     *[other] type annotations needed\n-} \n+}\n     .label = type must be known at this point\n \n infer_label_bad = {$bad_kind ->\n@@ -38,24 +38,24 @@ infer_source_kind_subdiag_let = {$kind ->\n }\n \n infer_source_kind_subdiag_generic_label =\n-    cannot infer {$is_type -> \n+    cannot infer {$is_type ->\n     [true] type\n     *[false] the value\n-    } of the {$is_type -> \n+    } of the {$is_type ->\n     [true] type\n     *[false] const\n     } {$parent_exists ->\n     [true] parameter `{$param_name}` declared on the {$parent_prefix} `{$parent_name}`\n-    *[false] parameter {$param_name} \n+    *[false] parameter {$param_name}\n     }\n \n infer_source_kind_subdiag_generic_suggestion =\n-    consider specifying the generic {$arg_count -> \n+    consider specifying the generic {$arg_count ->\n     [one] argument\n     *[other] arguments\n     }\n \n-infer_source_kind_fully_qualified = \n+infer_source_kind_fully_qualified =\n     try using a fully qualified path to specify the expected types\n \n infer_source_kind_closure_return =\n@@ -105,4 +105,3 @@ infer_relate_param_bound = ...so that the type `{$name}` will meet its required\n infer_relate_param_bound_2 = ...that is required by this bound\n infer_relate_region_param_bound = ...so that the declared lifetime parameter bounds are satisfied\n infer_compare_impl_item_obligation = ...so that the definition in impl matches the definition from the trait\n-"}]}