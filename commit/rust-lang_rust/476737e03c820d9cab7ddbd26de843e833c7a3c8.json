{"sha": "476737e03c820d9cab7ddbd26de843e833c7a3c8", "node_id": "C_kwDOAAsO6NoAKDQ3NjczN2UwM2M4MjBkOWNhYjdkZGJkMjZkZTg0M2U4MzNjN2EzYzg", "commit": {"author": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2023-02-11T18:41:21Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-04-05T15:59:29Z"}, "message": "Fix an assembly test with a hard-coded hash", "tree": {"sha": "0395e3adffea721c179005e12530bd3646f31184", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0395e3adffea721c179005e12530bd3646f31184"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/476737e03c820d9cab7ddbd26de843e833c7a3c8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/476737e03c820d9cab7ddbd26de843e833c7a3c8", "html_url": "https://github.com/rust-lang/rust/commit/476737e03c820d9cab7ddbd26de843e833c7a3c8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/476737e03c820d9cab7ddbd26de843e833c7a3c8/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36ca32c1ed817f4621b89409599b0f4c37914685", "url": "https://api.github.com/repos/rust-lang/rust/commits/36ca32c1ed817f4621b89409599b0f4c37914685", "html_url": "https://github.com/rust-lang/rust/commit/36ca32c1ed817f4621b89409599b0f4c37914685"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "36f017cf9d606562ce26bbbce141cca9f3bf94a7", "filename": "tests/assembly/asm/global_asm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/476737e03c820d9cab7ddbd26de843e833c7a3c8/tests%2Fassembly%2Fasm%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/476737e03c820d9cab7ddbd26de843e833c7a3c8/tests%2Fassembly%2Fasm%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fassembly%2Fasm%2Fglobal_asm.rs?ref=476737e03c820d9cab7ddbd26de843e833c7a3c8", "patch": "@@ -25,9 +25,9 @@ global_asm!(\"movl ${}, %ecx\", const 5, options(att_syntax));\n global_asm!(\"call {}\", sym my_func);\n // CHECK: lea rax, [rip + MY_STATIC]\n global_asm!(\"lea rax, [rip + {}]\", sym MY_STATIC);\n-// CHECK: call _RNvCsiubXh4Yz005_10global_asm6foobar\n+// CHECK: call _RNvCsddMtV7nAi4C_10global_asm6foobar\n global_asm!(\"call {}\", sym foobar);\n-// CHECK: _RNvCsiubXh4Yz005_10global_asm6foobar:\n+// CHECK: _RNvCsddMtV7nAi4C_10global_asm6foobar:\n fn foobar() {\n     loop {}\n }"}]}