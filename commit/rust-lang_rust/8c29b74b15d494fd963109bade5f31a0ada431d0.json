{"sha": "8c29b74b15d494fd963109bade5f31a0ada431d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMjliNzRiMTVkNDk0ZmQ5NjMxMDliYWRlNWYzMWEwYWRhNDMxZDA=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-12T16:20:01Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-11-12T18:04:31Z"}, "message": "Remove dead code for encoding/decoding lint IDs\n\nThis helps decouple the lint system from needing the implicit TLS TyCtxt\nas well.", "tree": {"sha": "0e98a7922cbe81629547f4fcbb1b6d7d9ec516c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e98a7922cbe81629547f4fcbb1b6d7d9ec516c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c29b74b15d494fd963109bade5f31a0ada431d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c29b74b15d494fd963109bade5f31a0ada431d0", "html_url": "https://github.com/rust-lang/rust/commit/8c29b74b15d494fd963109bade5f31a0ada431d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c29b74b15d494fd963109bade5f31a0ada431d0/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5dda3ee9314cfee9c4e30a7b17dcd5ebdec081a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5dda3ee9314cfee9c4e30a7b17dcd5ebdec081a7", "html_url": "https://github.com/rust-lang/rust/commit/5dda3ee9314cfee9c4e30a7b17dcd5ebdec081a7"}], "stats": {"total": 27, "additions": 1, "deletions": 26}, "files": [{"sha": "dc3bc5fa0cebfddac642f97dd861cb96e8481411", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 26, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/8c29b74b15d494fd963109bade5f31a0ada431d0/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c29b74b15d494fd963109bade5f31a0ada431d0/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=8c29b74b15d494fd963109bade5f31a0ada431d0", "patch": "@@ -35,7 +35,6 @@ use crate::util::common::time;\n use errors::DiagnosticBuilder;\n use std::slice;\n use rustc_data_structures::sync::{self, ParallelIterator, join, par_iter};\n-use rustc_serialize::{Decoder, Decodable, Encoder, Encodable};\n use syntax::ast;\n use syntax::util::lev_distance::find_best_match_for_name;\n use syntax::visit as ast_visit;\n@@ -71,7 +70,7 @@ pub struct LintStore {\n \n /// Lints that are buffered up early on in the `Session` before the\n /// `LintLevels` is calculated\n-#[derive(PartialEq, RustcEncodable, RustcDecodable, Debug)]\n+#[derive(PartialEq, Debug)]\n pub struct BufferedEarlyLint {\n     pub lint_id: LintId,\n     pub ast_id: ast::NodeId,\n@@ -1574,27 +1573,3 @@ pub fn check_ast_crate<T: EarlyLintPass>(\n         }\n     }\n }\n-\n-impl Encodable for LintId {\n-    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        s.emit_str(&self.lint.name.to_lowercase())\n-    }\n-}\n-\n-impl Decodable for LintId {\n-    #[inline]\n-    fn decode<D: Decoder>(d: &mut D) -> Result<LintId, D::Error> {\n-        let s = d.read_str()?;\n-        ty::tls::with(|tcx| {\n-            match tcx.lint_store.find_lints(&s) {\n-                Ok(ids) => {\n-                    if ids.len() != 0 {\n-                        panic!(\"invalid lint-id `{}`\", s);\n-                    }\n-                    Ok(ids[0])\n-                }\n-                Err(_) => panic!(\"invalid lint-id `{}`\", s),\n-            }\n-        })\n-    }\n-}"}]}