{"sha": "33d793c326a83ed2e71a4d5e612526cf13c890b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzZDc5M2MzMjZhODNlZDJlNzFhNGQ1ZTYxMjUyNmNmMTNjODkwYjI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-28T20:48:04Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-28T20:48:04Z"}, "message": "Point at all constraints before args", "tree": {"sha": "ef2d999b0b7979216f9c2c5f98bf936aeb6c75dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef2d999b0b7979216f9c2c5f98bf936aeb6c75dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33d793c326a83ed2e71a4d5e612526cf13c890b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33d793c326a83ed2e71a4d5e612526cf13c890b2", "html_url": "https://github.com/rust-lang/rust/commit/33d793c326a83ed2e71a4d5e612526cf13c890b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33d793c326a83ed2e71a4d5e612526cf13c890b2/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9d5ee567652cd342d9348c215009049551747b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9d5ee567652cd342d9348c215009049551747b0", "html_url": "https://github.com/rust-lang/rust/commit/b9d5ee567652cd342d9348c215009049551747b0"}], "stats": {"total": 140, "additions": 86, "deletions": 54}, "files": [{"sha": "680a58d8b7786149a0ec90a1ccce9d0880b12166", "filename": "src/librustc_ast_passes/ast_validation.rs", "status": "modified", "additions": 28, "deletions": 14, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/33d793c326a83ed2e71a4d5e612526cf13c890b2/src%2Flibrustc_ast_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33d793c326a83ed2e71a4d5e612526cf13c890b2/src%2Flibrustc_ast_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_passes%2Fast_validation.rs?ref=33d793c326a83ed2e71a4d5e612526cf13c890b2", "patch": "@@ -14,7 +14,7 @@ use rustc_ast::visit::{self, AssocCtxt, FnCtxt, FnKind, Visitor};\n use rustc_ast::walk_list;\n use rustc_ast_pretty::pprust;\n use rustc_data_structures::fx::FxHashMap;\n-use rustc_errors::{error_code, struct_span_err, Applicability};\n+use rustc_errors::{error_code, pluralize, struct_span_err, Applicability};\n use rustc_parse::validate_attr;\n use rustc_session::lint::builtin::PATTERNS_IN_FNS_WITHOUT_BODY;\n use rustc_session::lint::LintBuffer;\n@@ -647,24 +647,38 @@ impl<'a> AstValidator<'a> {\n             return;\n         }\n         // Find all generic argument coming after the first constraint...\n-        let mut misplaced_args = Vec::new();\n-        let mut first = None;\n-        for arg in &data.args {\n-            match (arg, first) {\n-                (AngleBracketedArg::Arg(a), Some(_)) => misplaced_args.push(a.span()),\n-                (AngleBracketedArg::Constraint(c), None) => first = Some(c.span),\n-                (AngleBracketedArg::Arg(_), None) | (AngleBracketedArg::Constraint(_), Some(_)) => {\n-                }\n-            }\n-        }\n+        let constraint_spans = data\n+            .args\n+            .iter()\n+            .filter_map(|arg| match arg {\n+                AngleBracketedArg::Constraint(c) => Some(c.span),\n+                _ => None,\n+            })\n+            .collect::<Vec<_>>();\n+        let arg_spans = data\n+            .args\n+            .iter()\n+            .filter_map(|arg| match arg {\n+                AngleBracketedArg::Arg(a) => Some(a.span()),\n+                _ => None,\n+            })\n+            .collect::<Vec<_>>();\n+        let constraint_len = constraint_spans.len();\n         // ...and then error:\n         self.err_handler()\n             .struct_span_err(\n-                misplaced_args.clone(),\n+                arg_spans.clone(),\n                 \"generic arguments must come before the first constraint\",\n             )\n-            .span_label(first.unwrap(), \"the first constraint is provided here\")\n-            .span_labels(misplaced_args, \"generic argument\")\n+            .span_labels(\n+                constraint_spans,\n+                &format!(\n+                    \"the constraint{} {} provided here\",\n+                    pluralize!(constraint_len),\n+                    if constraint_len == 1 { \"is\" } else { \"are\" }\n+                ),\n+            )\n+            .span_labels(arg_spans, \"generic argument\")\n             .emit();\n     }\n }"}, {"sha": "6bb1425ee133f14faaca403b2dcbc9e5d3f04225", "filename": "src/test/ui/parser/issue-32214.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/33d793c326a83ed2e71a4d5e612526cf13c890b2/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d793c326a83ed2e71a4d5e612526cf13c890b2/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-32214.stderr?ref=33d793c326a83ed2e71a4d5e612526cf13c890b2", "patch": "@@ -4,7 +4,7 @@ error: generic arguments must come before the first constraint\n LL | pub fn test<W, I: Trait<Item=(), W> >() {}\n    |                         -------  ^ generic argument\n    |                         |\n-   |                         the first constraint is provided here\n+   |                         the constraint is provided here\n \n error: aborting due to previous error\n "}, {"sha": "b4cf0deacee4660ec80c4d926f434f4a37d3b416", "filename": "src/test/ui/suggestions/suggest-move-types.stderr", "status": "modified", "additions": 57, "deletions": 39, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/33d793c326a83ed2e71a4d5e612526cf13c890b2/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33d793c326a83ed2e71a4d5e612526cf13c890b2/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-move-types.stderr?ref=33d793c326a83ed2e71a4d5e612526cf13c890b2", "patch": "@@ -4,7 +4,7 @@ error: generic arguments must come before the first constraint\n LL | struct A<T, M: One<A=(), T>> {\n    |                    ----  ^ generic argument\n    |                    |\n-   |                    the first constraint is provided here\n+   |                    the constraint is provided here\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:33:43\n@@ -13,70 +13,88 @@ LL | struct Al<'a, T, M: OneWithLifetime<A=(), T, 'a>> {\n    |                                     ----  ^  ^^ generic argument\n    |                                     |     |\n    |                                     |     generic argument\n-   |                                     the first constraint is provided here\n+   |                                     the constraint is provided here\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:40:46\n    |\n LL | struct B<T, U, V, M: Three<A=(), B=(), C=(), T, U, V>> {\n-   |                            ----              ^  ^  ^ generic argument\n-   |                            |                 |  |\n-   |                            |                 |  generic argument\n-   |                            |                 generic argument\n-   |                            the first constraint is provided here\n+   |                            ----  ----  ----  ^  ^  ^ generic argument\n+   |                            |     |     |     |  |\n+   |                            |     |     |     |  generic argument\n+   |                            |     |     |     generic argument\n+   |                            |     |     the constraints are provided here\n+   |                            |     the constraints are provided here\n+   |                            the constraints are provided here\n \n error: generic arguments must come before the first constraint\n   --> $DIR/suggest-move-types.rs:48:71\n    |\n LL | struct Bl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<A=(), B=(), C=(), T, U, V, 'a, 'b, 'c>> {\n-   |                                                     ----              ^  ^  ^  ^^  ^^  ^^ generic argument\n-   |                                                     |                 |  |  |  |   |\n-   |                                                     |                 |  |  |  |   generic argument\n-   |                                                     |                 |  |  |  generic argument\n-   |                                                     |                 |  |  generic argument\n-   |                                                     |                 |  generic argument\n-   |                                                     |                 generic argument\n-   |                                                     the first constraint is provided here\n+   |                                                     ----  ----  ----  ^  ^  ^  ^^  ^^  ^^ generic argument\n+   |                                                     |     |     |     |  |  |  |   |\n+   |                                                     |     |     |     |  |  |  |   generic argument\n+   |                                                     |     |     |     |  |  |  generic argument\n+   |                                                     |     |     |     |  |  generic argument\n+   |                                                     |     |     |     |  generic argument\n+   |                                                     |     |     |     generic argument\n+   |                                                     |     |     the constraints are provided here\n+   |                                                     |     the constraints are provided here\n+   |                                                     the constraints are provided here\n \n error: generic arguments must come before the first constraint\n-  --> $DIR/suggest-move-types.rs:57:49\n+  --> $DIR/suggest-move-types.rs:57:28\n    |\n LL | struct C<T, U, V, M: Three<T, A=(), B=(), C=(), U, V>> {\n-   |                               ----              ^  ^ generic argument\n-   |                               |                 |\n-   |                               |                 generic argument\n-   |                               the first constraint is provided here\n+   |                            ^  ----  ----  ----  ^  ^ generic argument\n+   |                            |  |     |     |     |\n+   |                            |  |     |     |     generic argument\n+   |                            |  |     |     the constraints are provided here\n+   |                            |  |     the constraints are provided here\n+   |                            |  the constraints are provided here\n+   |                            generic argument\n \n error: generic arguments must come before the first constraint\n-  --> $DIR/suggest-move-types.rs:65:78\n+  --> $DIR/suggest-move-types.rs:65:53\n    |\n LL | struct Cl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), C=(), U, 'b, V, 'c>> {\n-   |                                                            ----              ^  ^^  ^  ^^ generic argument\n-   |                                                            |                 |  |   |\n-   |                                                            |                 |  |   generic argument\n-   |                                                            |                 |  generic argument\n-   |                                                            |                 generic argument\n-   |                                                            the first constraint is provided here\n+   |                                                     ^  ^^  ----  ----  ----  ^  ^^  ^  ^^ generic argument\n+   |                                                     |  |   |     |     |     |  |   |\n+   |                                                     |  |   |     |     |     |  |   generic argument\n+   |                                                     |  |   |     |     |     |  generic argument\n+   |                                                     |  |   |     |     |     generic argument\n+   |                                                     |  |   |     |     the constraints are provided here\n+   |                                                     |  |   |     the constraints are provided here\n+   |                                                     |  |   the constraints are provided here\n+   |                                                     |  generic argument\n+   |                                                     generic argument\n \n error: generic arguments must come before the first constraint\n-  --> $DIR/suggest-move-types.rs:74:43\n+  --> $DIR/suggest-move-types.rs:74:28\n    |\n LL | struct D<T, U, V, M: Three<T, A=(), B=(), U, C=(), V>> {\n-   |                               ----        ^        ^ generic argument\n-   |                               |           |\n-   |                               |           generic argument\n-   |                               the first constraint is provided here\n+   |                            ^  ----  ----  ^  ----  ^ generic argument\n+   |                            |  |     |     |  |\n+   |                            |  |     |     |  the constraints are provided here\n+   |                            |  |     |     generic argument\n+   |                            |  |     the constraints are provided here\n+   |                            |  the constraints are provided here\n+   |                            generic argument\n \n error: generic arguments must come before the first constraint\n-  --> $DIR/suggest-move-types.rs:82:72\n+  --> $DIR/suggest-move-types.rs:82:53\n    |\n LL | struct Dl<'a, 'b, 'c, T, U, V, M: ThreeWithLifetime<T, 'a, A=(), B=(), U, 'b, C=(), V, 'c>> {\n-   |                                                            ----        ^  ^^        ^  ^^ generic argument\n-   |                                                            |           |  |         |\n-   |                                                            |           |  |         generic argument\n-   |                                                            |           |  generic argument\n-   |                                                            |           generic argument\n-   |                                                            the first constraint is provided here\n+   |                                                     ^  ^^  ----  ----  ^  ^^  ----  ^  ^^ generic argument\n+   |                                                     |  |   |     |     |  |   |     |\n+   |                                                     |  |   |     |     |  |   |     generic argument\n+   |                                                     |  |   |     |     |  |   the constraints are provided here\n+   |                                                     |  |   |     |     |  generic argument\n+   |                                                     |  |   |     |     generic argument\n+   |                                                     |  |   |     the constraints are provided here\n+   |                                                     |  |   the constraints are provided here\n+   |                                                     |  generic argument\n+   |                                                     generic argument\n \n error[E0747]: type provided when a lifetime was expected\n   --> $DIR/suggest-move-types.rs:33:43"}]}