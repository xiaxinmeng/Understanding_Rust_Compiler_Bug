{"sha": "dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNTAxNzM1YWM4ZWIzODc1NmY4YTRmNGRhOTFiMGI3YTRmYmNhMWI=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-14T10:08:03Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2017-09-18T09:27:41Z"}, "message": "incr.comp.: Initialize the CachingCodemapView in StableHashingContext lazily.", "tree": {"sha": "651f1d95fa272ddf43371d2125e4b14db7aec13a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/651f1d95fa272ddf43371d2125e4b14db7aec13a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "html_url": "https://github.com/rust-lang/rust/commit/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "67c84e05e72931587e5f81a297dee95bc149bcd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/67c84e05e72931587e5f81a297dee95bc149bcd8", "html_url": "https://github.com/rust-lang/rust/commit/67c84e05e72931587e5f81a297dee95bc149bcd8"}], "stats": {"total": 30, "additions": 21, "deletions": 9}, "files": [{"sha": "71e442b3bb2132494642458cd0408237d3f69ccf", "filename": "src/librustc/ich/caching_codemap_view.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fcaching_codemap_view.rs?ref=dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "patch": "@@ -11,7 +11,6 @@\n use std::rc::Rc;\n use syntax::codemap::CodeMap;\n use syntax_pos::{BytePos, FileMap};\n-use ty::TyCtxt;\n \n #[derive(Clone)]\n struct CacheEntry {\n@@ -23,15 +22,14 @@ struct CacheEntry {\n     file_index: usize,\n }\n \n-pub struct CachingCodemapView<'tcx> {\n-    codemap: &'tcx CodeMap,\n+pub struct CachingCodemapView<'cm> {\n+    codemap: &'cm CodeMap,\n     line_cache: [CacheEntry; 3],\n     time_stamp: usize,\n }\n \n-impl<'gcx> CachingCodemapView<'gcx> {\n-    pub fn new<'a, 'tcx>(tcx: TyCtxt<'a, 'gcx, 'tcx>) -> CachingCodemapView<'gcx> {\n-        let codemap = tcx.sess.codemap();\n+impl<'cm> CachingCodemapView<'cm> {\n+    pub fn new(codemap: &'cm CodeMap) -> CachingCodemapView<'cm> {\n         let files = codemap.files();\n         let first_file = files[0].clone();\n         let entry = CacheEntry {"}, {"sha": "3f9590a45c68c835de3e3195103e6e892e33b835", "filename": "src/librustc/ich/hcx.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b/src%2Flibrustc%2Fich%2Fhcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b/src%2Flibrustc%2Fich%2Fhcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fhcx.rs?ref=dd501735ac8eb38756f8a4f4da91b0b7a4fbca1b", "patch": "@@ -21,6 +21,7 @@ use std::collections::HashMap;\n \n use syntax::ast;\n use syntax::attr;\n+use syntax::codemap::CodeMap;\n use syntax::ext::hygiene::SyntaxContext;\n use syntax::symbol::Symbol;\n use syntax_pos::Span;\n@@ -36,13 +37,17 @@ use rustc_data_structures::accumulate_vec::AccumulateVec;\n /// things (e.g. each DefId/DefPath is only hashed once).\n pub struct StableHashingContext<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'gcx, 'tcx>,\n-    codemap: CachingCodemapView<'gcx>,\n     hash_spans: bool,\n     hash_bodies: bool,\n     overflow_checks_enabled: bool,\n     node_id_hashing_mode: NodeIdHashingMode,\n     // A sorted array of symbol keys for fast lookup.\n     ignored_attr_names: Vec<Symbol>,\n+\n+    // Very often, we are hashing something that does not need the\n+    // CachingCodemapView, so we initialize it lazily.\n+    raw_codemap: &'gcx CodeMap,\n+    caching_codemap: Option<CachingCodemapView<'gcx>>,\n }\n \n #[derive(PartialEq, Eq, Clone, Copy)]\n@@ -66,7 +71,8 @@ impl<'a, 'gcx, 'tcx> StableHashingContext<'a, 'gcx, 'tcx> {\n \n         StableHashingContext {\n             tcx,\n-            codemap: CachingCodemapView::new(tcx),\n+            caching_codemap: None,\n+            raw_codemap: tcx.sess.codemap(),\n             hash_spans: hash_spans_initial,\n             hash_bodies: true,\n             overflow_checks_enabled: check_overflow_initial,\n@@ -132,7 +138,15 @@ impl<'a, 'gcx, 'tcx> StableHashingContext<'a, 'gcx, 'tcx> {\n \n     #[inline]\n     pub fn codemap(&mut self) -> &mut CachingCodemapView<'gcx> {\n-        &mut self.codemap\n+        match self.caching_codemap {\n+            Some(ref mut cm) => {\n+                cm\n+            }\n+            ref mut none => {\n+                *none = Some(CachingCodemapView::new(self.raw_codemap));\n+                none.as_mut().unwrap()\n+            }\n+        }\n     }\n \n     #[inline]"}]}