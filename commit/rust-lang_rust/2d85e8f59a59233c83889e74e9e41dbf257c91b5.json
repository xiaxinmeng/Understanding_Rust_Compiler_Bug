{"sha": "2d85e8f59a59233c83889e74e9e41dbf257c91b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkODVlOGY1OWE1OTIzM2M4Mzg4OWU3NGU5ZTQxZGJmMjU3YzkxYjU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T07:53:24Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-18T07:53:24Z"}, "message": "rustdoc: Improve formatting of return type", "tree": {"sha": "4225022e39256229c61678937d026535f087d97e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4225022e39256229c61678937d026535f087d97e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d85e8f59a59233c83889e74e9e41dbf257c91b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d85e8f59a59233c83889e74e9e41dbf257c91b5", "html_url": "https://github.com/rust-lang/rust/commit/2d85e8f59a59233c83889e74e9e41dbf257c91b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d85e8f59a59233c83889e74e9e41dbf257c91b5/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c295c0f49c880c895e21c4e7d741943cfed75e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c295c0f49c880c895e21c4e7d741943cfed75e0", "html_url": "https://github.com/rust-lang/rust/commit/6c295c0f49c880c895e21c4e7d741943cfed75e0"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "afd06523b9a88edf27372a23f30c27d106e524d4", "filename": "src/rustdoc/gen.rs", "status": "modified", "additions": 20, "deletions": 3, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2d85e8f59a59233c83889e74e9e41dbf257c91b5/src%2Frustdoc%2Fgen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d85e8f59a59233c83889e74e9e41dbf257c91b5/src%2Frustdoc%2Fgen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fgen.rs?ref=2d85e8f59a59233c83889e74e9e41dbf257c91b5", "patch": "@@ -141,7 +141,8 @@ fn write_return(\n       some(doc) {\n         alt doc.ty {\n           some(ty) {\n-            ctxt.w.write_line(\"### Returns `\" + ty + \"`\");\n+            ctxt.w.write_line(#fmt(\"Returns `%s`\", ty));\n+            ctxt.w.write_line(\"\");\n             alt doc.desc {\n               some(d) {\n                 ctxt.w.write_line(d);\n@@ -162,6 +163,7 @@ mod tests {\n         let srv = astsrv::mk_srv_from_str(source);\n         let doc = extract::from_srv(srv, \"\");\n         let doc = attr_pass::mk_pass()(srv, doc);\n+        let doc = tystr_pass::mk_pass()(srv, doc);\n         write_markdown_str(doc)\n     }\n \n@@ -208,16 +210,31 @@ mod tests {\n     }\n \n     #[test]\n-    fn should_leve_blank_line_after_brief() {\n+    fn should_leave_blank_line_after_brief() {\n         let markdown = render(\"#[doc(brief = \\\"brief\\\")] fn a() { }\");\n         assert str::contains(markdown, \"brief\\n\\n\");\n     }\n \n     #[test]\n-    fn should_leve_blank_line_between_brief_and_desc() {\n+    fn should_leave_blank_line_between_brief_and_desc() {\n         let markdown = render(\n             \"#[doc(brief = \\\"brief\\\", desc = \\\"desc\\\")] fn a() { }\"\n         );\n         assert str::contains(markdown, \"brief\\n\\ndesc\");\n     }\n+\n+    #[test]\n+    fn should_write_return_type_on_new_line() {\n+        let markdown = render(\"fn a() -> int { }\");\n+        assert str::contains(markdown, \"\\nReturns `int`\");\n+    }\n+\n+    #[test]\n+    fn should_write_blank_line_between_return_type_and_next_header() {\n+        let markdown = render(\n+            \"fn a() -> int { } \\\n+             fn b() -> int { }\"\n+        );\n+        assert str::contains(markdown, \"Returns `int`\\n\\n##\");\n+    }\n }\n\\ No newline at end of file"}]}