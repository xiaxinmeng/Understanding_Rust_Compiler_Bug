{"sha": "67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZWM5NmM4Zjk3YWU4MTBmNzJjY2MwOGM4YmYwYzM3MWZmMTEzMDU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-07T12:55:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-06-07T12:55:08Z"}, "message": "Auto merge of #5691 - flip1995:rustup, r=matthiaskrgr\n\nRustup\n\nchangelog: none", "tree": {"sha": "70d219f25692cbf37078482832a03e905461fe8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70d219f25692cbf37078482832a03e905461fe8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "html_url": "https://github.com/rust-lang/rust/commit/67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5699672b5b69e829a8a51fc339e65f8c057bdf9e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5699672b5b69e829a8a51fc339e65f8c057bdf9e", "html_url": "https://github.com/rust-lang/rust/commit/5699672b5b69e829a8a51fc339e65f8c057bdf9e"}, {"sha": "d9aa26a14dca32e0c4f2718ad1d3322f0de1674d", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9aa26a14dca32e0c4f2718ad1d3322f0de1674d", "html_url": "https://github.com/rust-lang/rust/commit/d9aa26a14dca32e0c4f2718ad1d3322f0de1674d"}], "stats": {"total": 38, "additions": 28, "deletions": 10}, "files": [{"sha": "0c80394f03e3c83851d4f9b83ba4c6bfc7495032", "filename": ".github/workflows/clippy_bors.yml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/.github%2Fworkflows%2Fclippy_bors.yml", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/.github%2Fworkflows%2Fclippy_bors.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fclippy_bors.yml?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -232,7 +232,8 @@ jobs:\n       matrix:\n         integration:\n         - 'rust-lang/cargo'\n-        - 'rust-lang/rls'\n+        # FIXME: re-enable once fmt_macros is renamed in RLS\n+        # - 'rust-lang/rls'\n         - 'rust-lang/chalk'\n         - 'rust-lang/rustfmt'\n         - 'Marwes/combine'"}, {"sha": "17dd3cd5493e7cbfb737fa94cfa7ef523ebcc3f5", "filename": "clippy_lints/src/future_not_send.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Ffuture_not_send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffuture_not_send.rs?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -95,7 +95,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for FutureNotSend {\n                                         let trait_ref = trait_pred.to_poly_trait_ref();\n                                         db.note(&*format!(\n                                             \"`{}` doesn't implement `{}`\",\n-                                            trait_ref.self_ty(),\n+                                            trait_ref.skip_binder().self_ty(),\n                                             trait_ref.print_only_trait_path(),\n                                         ));\n                                     }"}, {"sha": "6f8923b266092ddd62b6bc323d99d567d290db10", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -16,8 +16,6 @@\n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)\n #[allow(unused_extern_crates)]\n-extern crate fmt_macros;\n-#[allow(unused_extern_crates)]\n extern crate rustc_ast;\n #[allow(unused_extern_crates)]\n extern crate rustc_ast_pretty;\n@@ -48,6 +46,8 @@ extern crate rustc_mir;\n #[allow(unused_extern_crates)]\n extern crate rustc_parse;\n #[allow(unused_extern_crates)]\n+extern crate rustc_parse_format;\n+#[allow(unused_extern_crates)]\n extern crate rustc_session;\n #[allow(unused_extern_crates)]\n extern crate rustc_span;"}, {"sha": "06638e7187bae781f6cdf6c8188e3c600a91d503", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -325,6 +325,11 @@ pub fn implements_trait<'a, 'tcx>(\n     trait_id: DefId,\n     ty_params: &[GenericArg<'tcx>],\n ) -> bool {\n+    // Do not check on infer_types to avoid panic in evaluate_obligation.\n+    if ty.has_infer_types() {\n+        return false;\n+    }\n+    let ty = cx.tcx.erase_regions(&ty);\n     let ty_params = cx.tcx.mk_substs(ty_params.iter());\n     cx.tcx.type_implements_trait((trait_id, ty, ty_params, cx.param_env))\n }"}, {"sha": "732f4b28e06e3e1b449b2ff9a0889eb2d87d274e", "filename": "clippy_lints/src/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/clippy_lints%2Fsrc%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fwrite.rs?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -369,7 +369,7 @@ impl Write {\n         tts: &TokenStream,\n         is_write: bool,\n     ) -> (Option<StrLit>, Option<Expr>) {\n-        use fmt_macros::{\n+        use rustc_parse_format::{\n             AlignUnknown, ArgumentImplicitlyIs, ArgumentIs, ArgumentNamed, CountImplied, FormatSpec, ParseMode, Parser,\n             Piece,\n         };"}, {"sha": "2045ffdb5f09d38996c36d57ffc9c56967859d96", "filename": "tests/ui/or_fun_call.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/tests%2Fui%2For_fun_call.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/tests%2Fui%2For_fun_call.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.fixed?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -29,7 +29,7 @@ fn or_fun_call() {\n     with_enum.unwrap_or(Enum::A(5));\n \n     let with_const_fn = Some(Duration::from_secs(1));\n-    with_const_fn.unwrap_or(Duration::from_secs(5));\n+    with_const_fn.unwrap_or_else(|| Duration::from_secs(5));\n \n     let with_constructor = Some(vec![1]);\n     with_constructor.unwrap_or_else(make);\n@@ -94,7 +94,7 @@ fn test_or_with_ctors() {\n \n     let b = \"b\".to_string();\n     let _ = Some(Bar(\"a\".to_string(), Duration::from_secs(1)))\n-        .or(Some(Bar(b, Duration::from_secs(2))));\n+        .or_else(|| Some(Bar(b, Duration::from_secs(2))));\n \n     let vec = vec![\"foo\"];\n     let _ = opt.ok_or(vec.len());"}, {"sha": "bc5978b538f16f69901c7d59576e840a95f95e23", "filename": "tests/ui/or_fun_call.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/tests%2Fui%2For_fun_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67ec96c8f97ae810f72ccc08c8bf0c371ff11305/tests%2Fui%2For_fun_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2For_fun_call.stderr?ref=67ec96c8f97ae810f72ccc08c8bf0c371ff11305", "patch": "@@ -1,10 +1,16 @@\n+error: use of `unwrap_or` followed by a function call\n+  --> $DIR/or_fun_call.rs:32:19\n+   |\n+LL |     with_const_fn.unwrap_or(Duration::from_secs(5));\n+   |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(|| Duration::from_secs(5))`\n+   |\n+   = note: `-D clippy::or-fun-call` implied by `-D warnings`\n+\n error: use of `unwrap_or` followed by a function call\n   --> $DIR/or_fun_call.rs:35:22\n    |\n LL |     with_constructor.unwrap_or(make());\n    |                      ^^^^^^^^^^^^^^^^^ help: try this: `unwrap_or_else(make)`\n-   |\n-   = note: `-D clippy::or-fun-call` implied by `-D warnings`\n \n error: use of `unwrap_or` followed by a call to `new`\n   --> $DIR/or_fun_call.rs:38:5\n@@ -78,5 +84,11 @@ error: use of `or` followed by a function call\n LL |     let _ = Some(\"a\".to_string()).or(Some(\"b\".to_string()));\n    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(\"b\".to_string()))`\n \n-error: aborting due to 13 previous errors\n+error: use of `or` followed by a function call\n+  --> $DIR/or_fun_call.rs:97:10\n+   |\n+LL |         .or(Some(Bar(b, Duration::from_secs(2))));\n+   |          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try this: `or_else(|| Some(Bar(b, Duration::from_secs(2))))`\n+\n+error: aborting due to 15 previous errors\n "}]}