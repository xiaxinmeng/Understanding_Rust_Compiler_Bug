{"sha": "12ced8f9dbe800824a03ab7502c908c2167b7e9b", "node_id": "C_kwDOAAsO6NoAKDEyY2VkOGY5ZGJlODAwODI0YTAzYWI3NTAyYzkwOGMyMTY3YjdlOWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-02T10:15:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-02T10:15:18Z"}, "message": "Auto merge of #13517 - feniljain:fix_completions, r=Veykril\n\nfix: make custom expr prefix completions to understand refs\n\nPossible fix of #7929\n\nWhile reviewing the postfix completion code I saw that while calling `add_custom_postfix_completions` we were doing it under the part where reference was not taken into consideration, but as we are only adding postfix completions with `Expr` scope ( [source](https://github.com/rust-lang/rust-analyzer/blob/ba28e19b7838e3ad4223ae82d074dc3950ef1548/crates/ide-completion/src/completions/postfix.rs#L272) )\n\nI shifted the `add_custom_postfix_completions` call to part where references are considered\n\nI am not sure if this is the correct fix or I am understanding the problem exactly but this small move seemed to have fixed the issue :)", "tree": {"sha": "e58ce14aba5c7c7887bba9043d6817fe45526552", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e58ce14aba5c7c7887bba9043d6817fe45526552"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12ced8f9dbe800824a03ab7502c908c2167b7e9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12ced8f9dbe800824a03ab7502c908c2167b7e9b", "html_url": "https://github.com/rust-lang/rust/commit/12ced8f9dbe800824a03ab7502c908c2167b7e9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12ced8f9dbe800824a03ab7502c908c2167b7e9b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1305fa5d92640ce847dc8e6aeefd53cb6302dbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1305fa5d92640ce847dc8e6aeefd53cb6302dbf", "html_url": "https://github.com/rust-lang/rust/commit/c1305fa5d92640ce847dc8e6aeefd53cb6302dbf"}, {"sha": "98125b9f957be6fe4466bd266592a513cf4352b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/98125b9f957be6fe4466bd266592a513cf4352b1", "html_url": "https://github.com/rust-lang/rust/commit/98125b9f957be6fe4466bd266592a513cf4352b1"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "b9bd47f7da504609b4c3b78947bd00bc9774164a", "filename": "crates/ide-completion/src/completions/postfix.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/12ced8f9dbe800824a03ab7502c908c2167b7e9b/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12ced8f9dbe800824a03ab7502c908c2167b7e9b/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Fpostfix.rs?ref=12ced8f9dbe800824a03ab7502c908c2167b7e9b", "patch": "@@ -69,10 +69,6 @@ pub(crate) fn complete_postfix(\n         }\n     }\n \n-    if !ctx.config.snippets.is_empty() {\n-        add_custom_postfix_completions(acc, ctx, &postfix_snippet, &receiver_text);\n-    }\n-\n     let try_enum = TryEnum::from_ty(&ctx.sema, &receiver_ty.strip_references());\n     if let Some(try_enum) = &try_enum {\n         match try_enum {\n@@ -140,6 +136,10 @@ pub(crate) fn complete_postfix(\n         None => return,\n     };\n \n+    if !ctx.config.snippets.is_empty() {\n+        add_custom_postfix_completions(acc, ctx, &postfix_snippet, &receiver_text);\n+    }\n+\n     match try_enum {\n         Some(try_enum) => match try_enum {\n             TryEnum::Result => {\n@@ -613,4 +613,25 @@ fn main() {\n             r#\"fn main() { log::error!(\"{}\", 2+2) }\"#,\n         );\n     }\n+\n+    #[test]\n+    fn postfix_custom_snippets_completion_for_references() {\n+        check_edit_with_config(\n+            CompletionConfig {\n+                snippets: vec![Snippet::new(\n+                    &[],\n+                    &[\"ok\".into()],\n+                    &[\"Ok(${receiver})\".into()],\n+                    \"\",\n+                    &[],\n+                    crate::SnippetScope::Expr,\n+                )\n+                .unwrap()],\n+                ..TEST_CONFIG\n+            },\n+            \"ok\",\n+            r#\"fn main() { &&42.$0 }\"#,\n+            r#\"fn main() { Ok(&&42) }\"#,\n+        );\n+    }\n }"}]}