{"sha": "efe4d7ca7e463692b56275a7cccbec4c54eb4f3f", "node_id": "C_kwDOAAsO6NoAKGVmZTRkN2NhN2U0NjM2OTJiNTYyNzVhN2NjY2JlYzRjNTRlYjRmM2Y", "commit": {"author": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-07T17:09:10Z"}, "committer": {"name": "Noah Lev", "email": "camelidcamel@gmail.com", "date": "2021-11-07T17:19:54Z"}, "message": "Remove Clean impl for `IndexVec<T>`", "tree": {"sha": "b1bb54dcdf56d61ed657f569da35f70eb187f54b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1bb54dcdf56d61ed657f569da35f70eb187f54b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f", "html_url": "https://github.com/rust-lang/rust/commit/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "750568d49c75441374a4862cf590cd5bb9547456", "url": "https://api.github.com/repos/rust-lang/rust/commits/750568d49c75441374a4862cf590cd5bb9547456", "html_url": "https://github.com/rust-lang/rust/commit/750568d49c75441374a4862cf590cd5bb9547456"}], "stats": {"total": 9, "additions": 1, "deletions": 8}, "files": [{"sha": "77f7f64b80b24b1e6582abd496df98fb814625bf", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=efe4d7ca7e463692b56275a7cccbec4c54eb4f3f", "patch": "@@ -244,7 +244,7 @@ fn build_enum(cx: &mut DocContext<'_>, did: DefId) -> clean::Enum {\n     clean::Enum {\n         generics: (cx.tcx.generics_of(did), predicates).clean(cx),\n         variants_stripped: false,\n-        variants: cx.tcx.adt_def(did).variants.clean(cx),\n+        variants: cx.tcx.adt_def(did).variants.iter().map(|v| v.clean(cx)).collect(),\n     }\n }\n "}, {"sha": "b5e15dd182088fb6c83896110d298faebd1fb31a", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/efe4d7ca7e463692b56275a7cccbec4c54eb4f3f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=efe4d7ca7e463692b56275a7cccbec4c54eb4f3f", "patch": "@@ -16,7 +16,6 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, DefKind, Res};\n use rustc_hir::def_id::{DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-use rustc_index::vec::{Idx, IndexVec};\n use rustc_infer::infer::region_constraints::{Constraint, RegionConstraintData};\n use rustc_middle::middle::resolve_lifetime as rl;\n use rustc_middle::ty::fold::TypeFolder;\n@@ -62,12 +61,6 @@ impl<T: Clean<U>, U> Clean<Vec<U>> for [T] {\n     }\n }\n \n-impl<T: Clean<U>, U, V: Idx> Clean<IndexVec<V, U>> for IndexVec<V, T> {\n-    fn clean(&self, cx: &mut DocContext<'_>) -> IndexVec<V, U> {\n-        self.iter().map(|x| x.clean(cx)).collect()\n-    }\n-}\n-\n impl<T: Clean<U>, U> Clean<U> for &T {\n     fn clean(&self, cx: &mut DocContext<'_>) -> U {\n         (**self).clean(cx)"}]}