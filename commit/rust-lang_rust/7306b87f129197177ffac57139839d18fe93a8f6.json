{"sha": "7306b87f129197177ffac57139839d18fe93a8f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczMDZiODdmMTI5MTk3MTc3ZmZhYzU3MTM5ODM5ZDE4ZmU5M2E4ZjY=", "commit": {"author": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2018-11-14T00:25:51Z"}, "committer": {"name": "Petr Hosek", "email": "phosek@google.com", "date": "2019-01-06T06:25:56Z"}, "message": "Provide the option to use libc++ even on all platforms\n\nThis is the default on platforms which use libc++ as the default C++\nlibrary but this option allows using libc++ on others as well.", "tree": {"sha": "f32381ff5fa82c73b720b4fecee9629f0bf03a2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f32381ff5fa82c73b720b4fecee9629f0bf03a2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7306b87f129197177ffac57139839d18fe93a8f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7306b87f129197177ffac57139839d18fe93a8f6", "html_url": "https://github.com/rust-lang/rust/commit/7306b87f129197177ffac57139839d18fe93a8f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7306b87f129197177ffac57139839d18fe93a8f6/comments", "author": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrhosek", "id": 283696, "node_id": "MDQ6VXNlcjI4MzY5Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/283696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrhosek", "html_url": "https://github.com/petrhosek", "followers_url": "https://api.github.com/users/petrhosek/followers", "following_url": "https://api.github.com/users/petrhosek/following{/other_user}", "gists_url": "https://api.github.com/users/petrhosek/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrhosek/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrhosek/subscriptions", "organizations_url": "https://api.github.com/users/petrhosek/orgs", "repos_url": "https://api.github.com/users/petrhosek/repos", "events_url": "https://api.github.com/users/petrhosek/events{/privacy}", "received_events_url": "https://api.github.com/users/petrhosek/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36500deb1a276e47e9780876c136e8ceea46a860", "url": "https://api.github.com/repos/rust-lang/rust/commits/36500deb1a276e47e9780876c136e8ceea46a860", "html_url": "https://github.com/rust-lang/rust/commit/36500deb1a276e47e9780876c136e8ceea46a860"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "b15f2113c80ef92bf8d20cb5c354ce3055452ca9", "filename": "config.toml.example", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7306b87f129197177ffac57139839d18fe93a8f6/config.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/7306b87f129197177ffac57139839d18fe93a8f6/config.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/config.toml.example?ref=7306b87f129197177ffac57139839d18fe93a8f6", "patch": "@@ -90,6 +90,12 @@\n # with clang-cl, so this is special in that it only compiles LLVM with clang-cl\n #clang-cl = '/path/to/clang-cl.exe'\n \n+# Use libc++ when building LLVM instead of libstdc++. This is the default on\n+# platforms already use libc++ as the default C++ library, but this option\n+# allows you to use libc++ even on platforms when it's not. You need to ensure\n+# that your host compiler ships with libc++.\n+#use-libcxx = true\n+\n # =============================================================================\n # General build configuration options\n # ============================================================================="}, {"sha": "6b6ead351e8a0fd3eb26fcc9cb37a1ed5cce0825", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7306b87f129197177ffac57139839d18fe93a8f6/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7306b87f129197177ffac57139839d18fe93a8f6/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=7306b87f129197177ffac57139839d18fe93a8f6", "patch": "@@ -752,6 +752,9 @@ pub fn build_codegen_backend(builder: &Builder,\n             if builder.config.llvm_link_shared {\n                 cargo.env(\"LLVM_LINK_SHARED\", \"1\");\n             }\n+            if builder.config.llvm_use_libcxx {\n+                cargo.env(\"LLVM_USE_LIBCXX\", \"1\");\n+            }\n         }\n         _ => panic!(\"unknown backend: {}\", backend),\n     }"}, {"sha": "9421817ae6d8e644583263bb49bda30bb240fa15", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7306b87f129197177ffac57139839d18fe93a8f6/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7306b87f129197177ffac57139839d18fe93a8f6/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=7306b87f129197177ffac57139839d18fe93a8f6", "patch": "@@ -82,6 +82,8 @@ pub struct Config {\n     pub lldb_enabled: bool,\n     pub llvm_tools_enabled: bool,\n \n+    pub llvm_use_libcxx: bool,\n+\n     // rust codegen options\n     pub rust_optimize: bool,\n     pub rust_codegen_units: Option<u32>,\n@@ -252,6 +254,7 @@ struct Llvm {\n     link_shared: Option<bool>,\n     version_suffix: Option<String>,\n     clang_cl: Option<String>,\n+    use_libcxx: Option<bool>,\n }\n \n #[derive(Deserialize, Default, Clone)]\n@@ -513,6 +516,7 @@ impl Config {\n             config.llvm_link_jobs = llvm.link_jobs;\n             config.llvm_version_suffix = llvm.version_suffix.clone();\n             config.llvm_clang_cl = llvm.clang_cl.clone();\n+            set(&mut config.llvm_use_libcxx, llvm.use_libcxx);\n         }\n \n         if let Some(ref rust) = toml.rust {"}, {"sha": "b0c3c9702498dcbb20dee72d2fc23d6900c73197", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7306b87f129197177ffac57139839d18fe93a8f6/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/7306b87f129197177ffac57139839d18fe93a8f6/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=7306b87f129197177ffac57139839d18fe93a8f6", "patch": "@@ -62,6 +62,7 @@ def v(*args):\n o(\"lld\", \"rust.lld\", \"build lld\")\n o(\"lldb\", \"rust.lldb\", \"build lldb\")\n o(\"missing-tools\", \"dist.missing-tools\", \"allow failures when building tools\")\n+o(\"use-libcxx\", \"llvm.use_libcxx\", \"build LLVM with libc++\")\n \n # Optimization and debugging options. These may be overridden by the release\n # channel, etc."}, {"sha": "4826fef548a88e384d356b7ce4bc9866b9ad4113", "filename": "src/librustc_llvm/build.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7306b87f129197177ffac57139839d18fe93a8f6/src%2Flibrustc_llvm%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7306b87f129197177ffac57139839d18fe93a8f6/src%2Flibrustc_llvm%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_llvm%2Fbuild.rs?ref=7306b87f129197177ffac57139839d18fe93a8f6", "patch": "@@ -232,6 +232,7 @@ fn main() {\n     }\n \n     let llvm_static_stdcpp = env::var_os(\"LLVM_STATIC_STDCPP\");\n+    let llvm_use_libcxx = env::var_os(\"LLVM_USE_LIBCXX\");\n \n     let stdcppname = if target.contains(\"openbsd\") {\n         // llvm-config on OpenBSD doesn't mention stdlib=libc++\n@@ -241,6 +242,8 @@ fn main() {\n     } else if target.contains(\"netbsd\") && llvm_static_stdcpp.is_some() {\n         // NetBSD uses a separate library when relocation is required\n         \"stdc++_pic\"\n+    } else if llvm_use_libcxx.is_some() {\n+        \"c++\"\n     } else {\n         \"stdc++\"\n     };"}]}