{"sha": "67028cee5177aa5e5f9300114c9a8449258adb3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MDI4Y2VlNTE3N2FhNWU1ZjkzMDAxMTRjOWE4NDQ5MjU4YWRiM2E=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-03-28T14:33:50Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-25T10:29:55Z"}, "message": "Use PassMode::ByVal for Abi::Vector", "tree": {"sha": "199b02d41603462d133aa8836d10e71f2b488520", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/199b02d41603462d133aa8836d10e71f2b488520"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67028cee5177aa5e5f9300114c9a8449258adb3a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67028cee5177aa5e5f9300114c9a8449258adb3a", "html_url": "https://github.com/rust-lang/rust/commit/67028cee5177aa5e5f9300114c9a8449258adb3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67028cee5177aa5e5f9300114c9a8449258adb3a/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "08fc673190ef43b111a6fea2fadf7de25bf7f282", "url": "https://api.github.com/repos/rust-lang/rust/commits/08fc673190ef43b111a6fea2fadf7de25bf7f282", "html_url": "https://github.com/rust-lang/rust/commit/08fc673190ef43b111a6fea2fadf7de25bf7f282"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "02604a375720176d3ff844bc7f2a88d60c48793f", "filename": "src/abi/pass_mode.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/67028cee5177aa5e5f9300114c9a8449258adb3a/src%2Fabi%2Fpass_mode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67028cee5177aa5e5f9300114c9a8449258adb3a/src%2Fabi%2Fpass_mode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fpass_mode.rs?ref=67028cee5177aa5e5f9300114c9a8449258adb3a", "patch": "@@ -100,7 +100,13 @@ pub(super) fn get_pass_mode<'tcx>(tcx: TyCtxt<'tcx>, layout: TyAndLayout<'tcx>)\n             }\n \n             // FIXME implement Vector Abi in a cg_llvm compatible way\n-            Abi::Vector { .. } => PassMode::ByRef { size: Some(layout.size) },\n+            Abi::Vector { .. } => {\n+                if let Some(vector_ty) = crate::intrinsics::clif_vector_type(tcx, layout) {\n+                    PassMode::ByVal(vector_ty)\n+                } else {\n+                    PassMode::ByRef { size: Some(layout.size) }\n+                }\n+            }\n \n             Abi::Aggregate { sized: true } => PassMode::ByRef { size: Some(layout.size) },\n             Abi::Aggregate { sized: false } => PassMode::ByRef { size: None },"}, {"sha": "ea7326edc04f87182abaf4847737877e7ba03b7f", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67028cee5177aa5e5f9300114c9a8449258adb3a/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67028cee5177aa5e5f9300114c9a8449258adb3a/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=67028cee5177aa5e5f9300114c9a8449258adb3a", "patch": "@@ -175,7 +175,7 @@ fn lane_type_and_count<'tcx>(\n     (lane_layout, lane_count)\n }\n \n-fn clif_vector_type<'tcx>(tcx: TyCtxt<'tcx>, layout: TyAndLayout<'tcx>) -> Option<Type> {\n+pub(crate) fn clif_vector_type<'tcx>(tcx: TyCtxt<'tcx>, layout: TyAndLayout<'tcx>) -> Option<Type> {\n     let (element, count) = match &layout.abi {\n         Abi::Vector { element, count } => (element.clone(), *count),\n         _ => unreachable!(),"}]}