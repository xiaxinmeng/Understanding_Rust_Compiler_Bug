{"sha": "15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1Y2Q1MWFmNWUxOTM3ODllODIwMjRmZmJlMTk0ZjRjMGRiZGZiYzM=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-16T21:33:23Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-06-16T21:39:03Z"}, "message": "Mention functions pointers in the documentation", "tree": {"sha": "86487842e967ae9df83b7da585615fc65cc5dbed", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86487842e967ae9df83b7da585615fc65cc5dbed"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "html_url": "https://github.com/rust-lang/rust/commit/15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15cd51af5e193789e82024ffbe194f4c0dbdfbc3/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a647c0cd68bdd0f15081019f0b21bc31ae23f072", "url": "https://api.github.com/repos/rust-lang/rust/commits/a647c0cd68bdd0f15081019f0b21bc31ae23f072", "html_url": "https://github.com/rust-lang/rust/commit/a647c0cd68bdd0f15081019f0b21bc31ae23f072"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "226454561f6fe42df2e7faaa7b71f8c0a68cd11b", "filename": "src/libcore/mem/mod.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/15cd51af5e193789e82024ffbe194f4c0dbdfbc3/src%2Flibcore%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15cd51af5e193789e82024ffbe194f4c0dbdfbc3/src%2Flibcore%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmem%2Fmod.rs?ref=15cd51af5e193789e82024ffbe194f4c0dbdfbc3", "patch": "@@ -581,11 +581,12 @@ pub const fn needs_drop<T>() -> bool {\n /// This means that, for example, the padding byte in `(u8, u16)` is not\n /// necessarily zeroed.\n ///\n-/// There is no guarantee that an all-zero byte-pattern represents a valid value of\n-/// some type `T`. For example, the all-zero byte-pattern is not a valid value\n-/// for reference types (`&T` and `&mut T`). Using `zeroed` on such types\n-/// causes immediate [undefined behavior][ub] because [the Rust compiler assumes][inv]\n-/// that there always is a valid value in a variable it considers initialized.\n+/// There is no guarantee that an all-zero byte-pattern represents a valid value\n+/// of some type `T`. For example, the all-zero byte-pattern is not a valid value\n+/// for reference types (`&T`, `&mut T` and functions pointers). Using `zeroed` on\n+/// such types on such types causes immediate [undefined behavior][ub] because\n+/// [the Rust compiler assumes][inv] that there always is a valid value in a\n+/// variable it considers initialized.\n ///\n /// This has the same effect as [`MaybeUninit::zeroed().assume_init()`][zeroed].\n /// It is useful for FFI sometimes, but should generally be avoided.\n@@ -612,6 +613,7 @@ pub const fn needs_drop<T>() -> bool {\n /// use std::mem;\n ///\n /// let _x: &i32 = unsafe { mem::zeroed() }; // Undefined behavior!\n+/// let _y: fn() = unsafe { mem::zeroed() }; // And again !\n /// ```\n #[inline(always)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}