{"sha": "331afc32468e02a03f18557fbafad345eff09509", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMzMWFmYzMyNDY4ZTAyYTAzZjE4NTU3ZmJhZmFkMzQ1ZWZmMDk1MDk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-08-08T15:21:47Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-08-08T15:21:47Z"}, "message": "extern fns often need to adhere to a specific api -> don't suggest api-changes", "tree": {"sha": "f8eb2193ac51646fa7cb21f7cb792e561ff10abb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8eb2193ac51646fa7cb21f7cb792e561ff10abb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/331afc32468e02a03f18557fbafad345eff09509", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXqKOLAAoJEFbW7qD8Z6xG7oYQALH3CBxmp1UG6ofrIfDyo8WB\nJaI/vHCYC8Z87Ey2yYc5XN63owf9jD0dF1g5II9XX7GWHaTsCKYMbRiIMyRDTVGF\nIxMRJE1EBG+3dFeqMKNZwPedsOEyMtsozKArGRSDmuBT2XbL1B4+nSMnz/1cMv60\nG00tvsAbgLHqdeW7xT9xfOgpD8+5ROrP8jfBnseZQIhOrIg+UInxj3wj3t0tewOS\nP/CW2z84WOivA7F0hkKnaRnG+sP1XXgYnzMEbNZnLSqp4YiUBKtm3qRbYN6MFN9J\n8lMUi6/Pw60J4Q4Z9KQMclLrTiikCmJ5YT7ibdunViRYlD5oE+/FuRoBwttjprYY\nVt0EHwnvgf9lkHbLidEbNvh0oIviJtls6XRweE3Ib8HFLDIsv6pFh0lFmkZm+RKc\n+Hbz7BzxEdyulirVxnYU7BNsR6eQxP1W2WH7VLUqnqxjnUf2dx++QqO+rlh9/ZOD\n53O5IMz4so7Wj0jwhLRS8Cw/qXuAHrIi2dN7UcmfesR+bOavQxhpZ+k/i0aBe58L\naQJUi3GLLN/D4LtlmWngjFJAmzSAQ/7OQ4d/lEbz+EX93jPrIuzQMwh6lbFTESww\nnyTIIrzazogUVBIDujwfzOvYSWdC+UxXk2p3GBGIn66q8/fwP/J89PmTl1zqUf8Q\nGC/ydHqAcKtkn9jFGhkC\n=Mfwd\n-----END PGP SIGNATURE-----", "payload": "tree f8eb2193ac51646fa7cb21f7cb792e561ff10abb\nparent ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1470669707 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1470669707 +0200\n\nextern fns often need to adhere to a specific api -> don't suggest api-changes"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/331afc32468e02a03f18557fbafad345eff09509", "html_url": "https://github.com/rust-lang/rust/commit/331afc32468e02a03f18557fbafad345eff09509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/331afc32468e02a03f18557fbafad345eff09509/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1", "html_url": "https://github.com/rust-lang/rust/commit/ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "eadbd01e4ea920c3c8994f2f43a7aee0b873bde7", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/331afc32468e02a03f18557fbafad345eff09509/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/331afc32468e02a03f18557fbafad345eff09509/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=331afc32468e02a03f18557fbafad345eff09509", "patch": "@@ -4,6 +4,7 @@ use rustc::ty;\n use rustc::lint::*;\n use std::collections::HashSet;\n use syntax::ast;\n+use syntax::abi::Abi;\n use syntax::codemap::Span;\n use utils::{span_lint, type_is_unsafe_function};\n \n@@ -85,15 +86,23 @@ impl LateLintPass for Functions {\n \n         // don't warn for implementations, it's not their fault\n         if !is_impl {\n-            self.check_arg_number(cx, decl, span);\n+            // don't lint extern functions decls, it's not their fault either\n+            match kind {\n+                hir::intravisit::FnKind::Method(_, &hir::MethodSig { abi: Abi::Rust, .. }, _, _) |\n+                hir::intravisit::FnKind::ItemFn(_, _, _, _, Abi::Rust, _, _) => self.check_arg_number(cx, decl, span),\n+                _ => {},\n+            }\n         }\n \n         self.check_raw_ptr(cx, unsafety, decl, block, nodeid);\n     }\n \n     fn check_trait_item(&mut self, cx: &LateContext, item: &hir::TraitItem) {\n         if let hir::MethodTraitItem(ref sig, ref block) = item.node {\n-            self.check_arg_number(cx, &sig.decl, item.span);\n+            // don't lint extern functions decls, it's not their fault\n+            if sig.abi == Abi::Rust {\n+                self.check_arg_number(cx, &sig.decl, item.span);\n+            }\n \n             if let Some(ref block) = *block {\n                 self.check_raw_ptr(cx, sig.unsafety, &sig.decl, block, item.id);"}, {"sha": "60a074df0f5b2016b743760a68ad868b4c429645", "filename": "tests/compile-fail/functions.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/331afc32468e02a03f18557fbafad345eff09509/tests%2Fcompile-fail%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/331afc32468e02a03f18557fbafad345eff09509/tests%2Fcompile-fail%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunctions.rs?ref=331afc32468e02a03f18557fbafad345eff09509", "patch": "@@ -12,6 +12,9 @@ fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _\n     //~^ ERROR: this function has too many arguments (8/7)\n }\n \n+// don't lint extern fns\n+extern fn extern_fn(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+\n pub trait Foo {\n     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);\n     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());"}]}