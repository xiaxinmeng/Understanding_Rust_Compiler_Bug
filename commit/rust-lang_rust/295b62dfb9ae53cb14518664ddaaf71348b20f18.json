{"sha": "295b62dfb9ae53cb14518664ddaaf71348b20f18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NWI2MmRmYjlhZTUzY2IxNDUxODY2NGRkYWFmNzEzNDhiMjBmMTg=", "commit": {"author": {"name": "Johann Hofmann", "email": "git@johann-hofmann.com", "date": "2015-05-10T22:53:24Z"}, "committer": {"name": "Johann", "email": "git@johann-hofmann.com", "date": "2015-05-10T23:22:57Z"}, "message": "Docs: Compile-time bounds check in index expression\n\nThe reference was claiming all vectors all bounds-checked at run-time, when constant vectors are usually checked at compile-time.\n\nFor the changed example see http://is.gd/28ak9E", "tree": {"sha": "1a1e540bd071dc3070599974e0864267e0cf0804", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1a1e540bd071dc3070599974e0864267e0cf0804"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/295b62dfb9ae53cb14518664ddaaf71348b20f18", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/295b62dfb9ae53cb14518664ddaaf71348b20f18", "html_url": "https://github.com/rust-lang/rust/commit/295b62dfb9ae53cb14518664ddaaf71348b20f18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/295b62dfb9ae53cb14518664ddaaf71348b20f18/comments", "author": null, "committer": null, "parents": [{"sha": "9ecc9896dedb426e3f4eb3d23dfc60192fe5275f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ecc9896dedb426e3f4eb3d23dfc60192fe5275f", "html_url": "https://github.com/rust-lang/rust/commit/9ecc9896dedb426e3f4eb3d23dfc60192fe5275f"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "fe5a6d9be49d39293a8bf0a4ef991e430c875636", "filename": "src/doc/reference.md", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/295b62dfb9ae53cb14518664ddaaf71348b20f18/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/295b62dfb9ae53cb14518664ddaaf71348b20f18/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=295b62dfb9ae53cb14518664ddaaf71348b20f18", "patch": "@@ -842,7 +842,7 @@ module declarations should be at the crate root if direct usage of the declared\n modules within `use` items is desired. It is also possible to use `self` and\n `super` at the beginning of a `use` item to refer to the current and direct\n parent modules respectively. All rules regarding accessing declared modules in\n-`use` declarations applies to both module declarations and `extern crate`\n+`use` declarations apply to both module declarations and `extern crate`\n declarations.\n \n An example of what will and will not work for `use` items:\n@@ -2564,12 +2564,19 @@ array is mutable, the resulting [lvalue](#lvalues,-rvalues-and-temporaries) can\n be assigned to.\n \n Indices are zero-based, and may be of any integral type. Vector access is\n-bounds-checked at run-time. When the check fails, it will put the thread in a\n-_panicked state_.\n+bounds-checked at compile-time for constant arrays being accessed with a constant index value.\n+Otherwise a check will be performed at run-time that will put the thread in a _panicked state_ if it fails.\n \n ```{should-fail}\n ([1, 2, 3, 4])[0];\n-([\"a\", \"b\"])[10]; // panics\n+\n+let x = ([\"a\", \"b\"])[10]; // compiler error: const index-expr is out of bounds\n+\n+let n = 10;\n+let y = ([\"a\", \"b\"])[n]; // panics\n+\n+let arr = [\"a\", \"b\"];\n+arr[10]; // panics\n ```\n \n ### Range expressions"}]}