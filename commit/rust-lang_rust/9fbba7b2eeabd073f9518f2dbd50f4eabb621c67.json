{"sha": "9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmYmJhN2IyZWVhYmQwNzNmOTUxOGYyZGJkNTBmNGVhYmI2MjFjNjc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-16T10:02:07Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-11-30T02:36:14Z"}, "message": "Statically link librustrt to libstd\n\nThis commit alters the build process of the compiler to build a static\nlibrustrt.a instead of a dynamic version. This means that we can stop\ndistributing librustrt as well as default linking against it in the compiler.\n\nThis also means that if you attempt to build rust code without libstd, it will\nno longer work if there are any landing pads in play. The reason for this is\nthat LLVM and rustc will emit calls to the various upcalls in librustrt used to\nmanage exception handling. In theory we could split librustrt into librustrt and\nlibrustupcall. We would then distribute librustupcall and link to it for all\nprograms using landing pads, but I would rather see just one librustrt artifact\nand simplify the build process.\n\nThe major benefit of doing this is that building a static rust library for use\nin embedded situations all of a sudden just became a whole lot more feasible.\n\nCloses #3361", "tree": {"sha": "dc6501789d9d004f5806714a706416c92f68cfdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc6501789d9d004f5806714a706416c92f68cfdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "html_url": "https://github.com/rust-lang/rust/commit/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e338a4154b134fc1d4628496d4ccf85b7af7c443", "url": "https://api.github.com/repos/rust-lang/rust/commits/e338a4154b134fc1d4628496d4ccf85b7af7c443", "html_url": "https://github.com/rust-lang/rust/commit/e338a4154b134fc1d4628496d4ccf85b7af7c443"}], "stats": {"total": 121, "additions": 46, "deletions": 75}, "files": [{"sha": "b575312c03b407f52289f2c877f9e620c4e97eda", "filename": "Makefile.in", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -222,7 +222,7 @@ GENERATED :=\n \n define DEF_LIBS\n \n-CFG_RUNTIME_$(1) :=$(call CFG_LIB_NAME_$(1),rustrt)\n+CFG_RUNTIME_$(1) :=$(call CFG_STATIC_LIB_NAME_$(1),rustrt)\n CFG_RUSTLLVM_$(1) :=$(call CFG_LIB_NAME_$(1),rustllvm)\n CFG_STDLIB_$(1) :=$(call CFG_LIB_NAME_$(1),std)\n CFG_EXTRALIB_$(1) :=$(call CFG_LIB_NAME_$(1),extra)"}, {"sha": "7d6c0ea5264268c742beb28e3d90d8dbcb0c2aec", "filename": "mk/install.mk", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/mk%2Finstall.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/mk%2Finstall.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Finstall.mk?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -88,7 +88,6 @@ install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n install-target-$(1)-host-$(2): $$(TSREQ$$(ISTAGE)_T_$(1)_H_$(2)) $$(SREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$$(Q)$$(call MK_INSTALL_DIR,$$(PTL$(1)$(2)))\n-\t$$(Q)$$(call INSTALL_LIB,$$(CFG_RUNTIME_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(STDLIB_GLOB_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(EXTRALIB_GLOB_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(LIBRUSTUV_GLOB_$(1)))\n@@ -101,7 +100,6 @@ install-target-$(1)-host-$(2): LIB_SOURCE_DIR=$$(TL$(1)$(2))\n install-target-$(1)-host-$(2): LIB_DESTIN_DIR=$$(PTL$(1)$(2))\n install-target-$(1)-host-$(2): $$(CSREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$$(Q)$$(call MK_INSTALL_DIR,$$(PTL$(1)$(2)))\n-\t$$(Q)$$(call INSTALL_LIB,$$(CFG_RUNTIME_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(CFG_RUSTLLVM_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(STDLIB_GLOB_$(1)))\n \t$$(Q)$$(call INSTALL_LIB,$$(EXTRALIB_GLOB_$(1)))\n@@ -153,7 +151,6 @@ install-host: $(CSREQ$(ISTAGE)_T_$(CFG_BUILD_)_H_$(CFG_BUILD_))\n \t$(Q)$(call INSTALL_LIB,$(LIBSYNTAX_GLOB_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL_LIB,$(LIBRUSTPKG_GLOB_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL_LIB,$(LIBRUSTDOC_GLOB_$(CFG_BUILD)))\n-\t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_RUNTIME_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL,$(HL),$(PHL),$(CFG_RUSTLLVM_$(CFG_BUILD)))\n \t$(Q)$(call INSTALL,$(S)/man,$(CFG_MANDIR)/man1,rustc.1)\n \t$(Q)$(call INSTALL,$(S)/man,$(CFG_MANDIR)/man1,rustdoc.1)\n@@ -170,7 +167,6 @@ uninstall:\n \t$(Q)rm -f $(PHB)/rustpkg$(X_$(CFG_BUILD))\n \t$(Q)rm -f $(PHB)/rustdoc$(X_$(CFG_BUILD))\n \t$(Q)rm -f $(PHL)/$(CFG_RUSTLLVM_$(CFG_BUILD))\n-\t$(Q)rm -f $(PHL)/$(CFG_RUNTIME_$(CFG_BUILD))\n \t$(Q)for i in \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(STDLIB_GLOB_$(CFG_BUILD))) \\\n           $(call HOST_LIB_FROM_HL_GLOB,$(STDLIB_RGLOB_$(CFG_BUILD))) \\\n@@ -238,7 +234,6 @@ endif\n define INSTALL_RUNTIME_TARGET_N\n install-runtime-target-$(1)-host-$(2): $$(TSREQ$$(ISTAGE)_T_$(1)_H_$(2)) $$(SREQ$$(ISTAGE)_T_$(1)_H_$(2))\n \t$(Q)$(call ADB_SHELL,mkdir,$(CFG_RUNTIME_PUSH_DIR))\n-\t$(Q)$(call ADB_PUSH,$$(TL$(1)$(2))/$$(CFG_RUNTIME_$(1)),$(CFG_RUNTIME_PUSH_DIR))\n \t$(Q)$(call ADB_PUSH,$$(TL$(1)$(2))/$$(STDLIB_GLOB_$(1)),$(CFG_RUNTIME_PUSH_DIR))\n \t$(Q)$(call ADB_PUSH,$$(TL$(1)$(2))/$$(EXTRALIB_GLOB_$(1)),$(CFG_RUNTIME_PUSH_DIR))\n \t$(Q)$(call ADB_PUSH,$$(TL$(1)$(2))/$$(LIBRUSTUV_GLOB_$(1)),$(CFG_RUNTIME_PUSH_DIR))\n@@ -247,7 +242,6 @@ endef\n define INSTALL_RUNTIME_TARGET_CLEANUP_N\n install-runtime-target-$(1)-cleanup:\n \t$(Q)$(call ADB,remount)\n-\t$(Q)$(call ADB_SHELL,rm,$(CFG_RUNTIME_PUSH_DIR)/$(CFG_RUNTIME_$(1)))\n \t$(Q)$(call ADB_SHELL,rm,$(CFG_RUNTIME_PUSH_DIR)/$(STDLIB_GLOB_$(1)))\n \t$(Q)$(call ADB_SHELL,rm,$(CFG_RUNTIME_PUSH_DIR)/$(EXTRALIB_GLOB_$(1)))\n \t$(Q)$(call ADB_SHELL,rm,$(CFG_RUNTIME_PUSH_DIR)/$(LIBRUSTUV_GLOB_$(1)))"}, {"sha": "f27ed8714f471c12d0a800321a8b247bcaed065c", "filename": "mk/rt.mk", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -121,11 +121,9 @@ $$(RT_BUILD_DIR_$(1)_$(2))/arch/$$(HOST_$(1))/libmorestack.a: $$(MORESTACK_OBJS_\n \t@$$(call E, link: $$@)\n \t$$(Q)$(AR_$(1)) rcs $$@ $$^\n \n-$$(RT_BUILD_DIR_$(1)_$(2))/$(CFG_RUNTIME_$(1)): $$(RUNTIME_OBJS_$(1)_$(2)) $$(MKFILE_DEPS) \\\n-                        $$(RUNTIME_DEF_$(1)_$(2))\n+$$(RT_BUILD_DIR_$(1)_$(2))/$(CFG_RUNTIME_$(1)): $$(RUNTIME_OBJS_$(1)_$(2)) $$(MKFILE_DEPS)\n \t@$$(call E, link: $$@)\n-\t$$(Q)$$(call CFG_LINK_CXX_$(1),$$@, $$(RUNTIME_OBJS_$(1)_$(2)) \\\n-\t    $$(CFG_LIBUV_LINK_FLAGS_$(1)),$$(RUNTIME_DEF_$(1)_$(2)),$$(CFG_RUNTIME_$(1)))\n+\t$$(Q)$(AR_$(1)) rcs $$@ $$(RUNTIME_OBJS_$(1)_$(2))\n \n # These could go in rt.mk or rustllvm.mk, they're needed for both.\n "}, {"sha": "03ada0eef18331057b69642110b2eb9623f6d2ed", "filename": "src/etc/snapshot.py", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Fetc%2Fsnapshot.py", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Fetc%2Fsnapshot.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fsnapshot.py?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -31,31 +31,27 @@ def scrub(b):\n               \"lib/librustc-*.so\",\n               \"lib/libsyntax-*.so\",\n               \"lib/librustuv-*.so\",\n-              \"lib/librustrt.so\",\n               \"lib/librustllvm.so\"],\n     \"macos\": [\"bin/rustc\",\n               \"lib/libstd-*.dylib\",\n               \"lib/libextra-*.dylib\",\n               \"lib/librustc-*.dylib\",\n               \"lib/libsyntax-*.dylib\",\n               \"lib/librustuv-*.dylib\",\n-              \"lib/librustrt.dylib\",\n               \"lib/librustllvm.dylib\"],\n     \"winnt\": [\"bin/rustc.exe\",\n               \"bin/std-*.dll\",\n               \"bin/extra-*.dll\",\n               \"bin/rustc-*.dll\",\n               \"bin/syntax-*.dll\",\n               \"bin/rustuv-*.dll\",\n-              \"bin/rustrt.dll\",\n               \"bin/rustllvm.dll\"],\n     \"freebsd\": [\"bin/rustc\",\n                 \"lib/libstd-*.so\",\n                 \"lib/libextra-*.so\",\n                 \"lib/librustc-*.so\",\n                 \"lib/libsyntax-*.so\",\n                 \"lib/librustuv-*.so\",\n-                \"lib/librustrt.so\",\n                 \"lib/librustllvm.so\"]\n     }\n "}, {"sha": "ba4f120f6269c266d29021ae7cbf44356eff3fe4", "filename": "src/libstd/rtdeps.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Flibstd%2Frtdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Flibstd%2Frtdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frtdeps.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -13,7 +13,7 @@\n //! necessary for running libstd.\n \n // All platforms need to link to rustrt\n-#[link(name = \"rustrt\")]\n+#[link(name = \"rustrt\", kind = \"static\")]\n extern {}\n \n // LLVM implements the `frem` instruction as a call to `fmod`, which lives in\n@@ -26,6 +26,7 @@ extern {}\n #[link(name = \"dl\")]\n #[link(name = \"m\")]\n #[link(name = \"pthread\")]\n+#[link(name = \"stdc++\")]\n extern {}\n \n #[cfg(target_os = \"android\")]\n@@ -45,4 +46,9 @@ extern {}\n \n #[cfg(target_os = \"macos\")]\n #[link(name = \"pthread\")]\n+#[link(name = \"stdc++\")]\n+extern {}\n+\n+#[cfg(stage0)]\n+#[link_args = \"-lstdc++\"]\n extern {}"}, {"sha": "2a3e687ee55551835127e4a11ccc795cf26b9614", "filename": "src/rt/rustrt.def.in", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/e338a4154b134fc1d4628496d4ccf85b7af7c443/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/e338a4154b134fc1d4628496d4ccf85b7af7c443/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=e338a4154b134fc1d4628496d4ccf85b7af7c443", "patch": "@@ -1,51 +0,0 @@\n-rust_dbg_abi_1\n-rust_dbg_abi_2\n-rust_dbg_static_mut\n-rust_dbg_static_mut_check_four\n-rust_get_time\n-rust_tzset\n-rust_gmtime\n-rust_localtime\n-rust_timegm\n-rust_mktime\n-rust_precise_time_ns\n-rust_list_dir_val\n-rust_list_dir_wfd_size\n-rust_list_dir_wfd_fp_buf\n-rust_unset_sigprocmask\n-rust_env_pairs\n-rust_win32_rand_acquire\n-rust_win32_rand_gen\n-rust_win32_rand_release\n-upcall_rust_personality\n-upcall_reset_stack_limit\n-rust_dbg_call\n-rust_dbg_do_nothing\n-tdefl_compress_mem_to_heap\n-tinfl_decompress_mem_to_heap\n-rust_swap_registers\n-rust_readdir\n-rust_opendir\n-rust_dbg_extern_identity_u32\n-rust_dbg_extern_identity_u64\n-rust_dbg_extern_identity_TwoU8s\n-rust_dbg_extern_identity_TwoU16s\n-rust_dbg_extern_identity_TwoU32s\n-rust_dbg_extern_identity_TwoU64s\n-rust_dbg_extern_identity_TwoDoubles\n-rust_dbg_extern_return_TwoU8s\n-rust_dbg_extern_return_TwoU16s\n-rust_dbg_extern_return_TwoU32s\n-rust_dbg_extern_return_TwoU64s\n-rust_dbg_extern_identity_double\n-rust_dbg_extern_identity_u8\n-rust_try\n-rust_begin_unwind\n-rust_valgrind_stack_register\n-rust_valgrind_stack_deregister\n-rust_running_on_valgrind\n-rust_get_num_cpus\n-rust_get_test_int\n-rust_pthread_mutex_t_size\n-rust_pthread_cond_t_size\n-rust_crit_section_size"}, {"sha": "01a90f1ad449b73e460dce483864dfe896fe33bc", "filename": "src/test/auxiliary/anon-extern-mod-cross-crate-1.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fanon-extern-mod-cross-crate-1.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -8,14 +8,13 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[link_name = \"rustrt\"];\n-#[link(name = \"anonexternmod\",\n-       vers = \"0.1\")];\n+#[link(name = \"anonexternmod\", vers = \"0.1\")];\n \n #[crate_type = \"lib\"];\n \n use std::libc;\n \n extern {\n+    #[link(name = \"rustrt\")]\n     pub fn rust_get_test_int() -> libc::intptr_t;\n }"}, {"sha": "89317a45171132d928abb22f6eb5cad8e658240c", "filename": "src/test/auxiliary/extern-crosscrate-source.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fextern-crosscrate-source.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -18,6 +18,7 @@ use std::libc;\n pub mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "4705d13cd968564e7b1192a227f07c85f9268d58", "filename": "src/test/auxiliary/foreign_lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fforeign_lib.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -13,6 +13,7 @@\n pub mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         fn rust_get_test_int() -> libc::intptr_t;\n     }"}, {"sha": "654212270546a32e0f3c58f66d6723b2bb6c374d", "filename": "src/test/run-pass/anon-extern-mod-cross-crate-2.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod-cross-crate-2.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -14,6 +14,9 @@ extern mod anonexternmod;\n \n use anonexternmod::rust_get_test_int;\n \n+#[link(name = \"rustrt\")] // we have explicitly chosen to require this\n+extern {}\n+\n pub fn main() {\n     unsafe {\n         rust_get_test_int();"}, {"sha": "7e05bcc1fd2266f03fe16c0f2c3fd5ed3ff89792", "filename": "src/test/run-pass/anon-extern-mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -10,7 +10,7 @@\n \n use std::libc;\n \n-#[link_name = \"rustrt\"]\n+#[link(name = \"rustrt\")]\n extern {\n     fn rust_get_test_int() -> libc::intptr_t;\n }"}, {"sha": "d590c35d9e2185600b860ff6f7b557ef64dd0b20", "filename": "src/test/run-pass/c-stack-as-value.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -11,6 +11,7 @@\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_get_test_int() -> libc::intptr_t;\n     }"}, {"sha": "e3b727fafd3c823c43c07f7848f70dc4ce5fbdc3", "filename": "src/test/run-pass/extern-call-deep.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-deep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-deep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-deep.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -13,6 +13,7 @@ use std::libc;\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "00ac0bfa118eb19763a092219d45b25d2f84bec8", "filename": "src/test/run-pass/extern-call-deep2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-deep2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-deep2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-deep2.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -14,6 +14,7 @@ use std::task;\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "c49d589572cbedacd5897151d9ab262d851f2037", "filename": "src/test/run-pass/extern-call-indirect.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-indirect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-indirect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-indirect.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -13,6 +13,7 @@ use std::libc;\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "0044f0f468f306a28b6507bfb10b37ce208cf10c", "filename": "src/test/run-pass/extern-call-scrub.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-call-scrub.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -18,6 +18,7 @@ use std::task;\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "c224a2f1f0543fdefc40deb3cec69ce6f02ef115", "filename": "src/test/run-pass/extern-pass-TwoU16s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU16s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU16s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU16s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -18,6 +18,7 @@ struct TwoU16s {\n     one: u16, two: u16\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_TwoU16s(v: TwoU16s) -> TwoU16s;\n }"}, {"sha": "592d42c65d1886bb3dad763730e3100714367678", "filename": "src/test/run-pass/extern-pass-TwoU32s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU32s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU32s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU32s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -16,6 +16,7 @@ struct TwoU32s {\n     one: u32, two: u32\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_TwoU32s(v: TwoU32s) -> TwoU32s;\n }"}, {"sha": "d2520f32c7bd2c4fd5f0aea150660c242f5dee85", "filename": "src/test/run-pass/extern-pass-TwoU64s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU64s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -18,6 +18,7 @@ struct TwoU64s {\n     one: u64, two: u64\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_TwoU64s(v: TwoU64s) -> TwoU64s;\n }"}, {"sha": "5548b8a7d3993bf1907aba808cbac9a79cee1c14", "filename": "src/test/run-pass/extern-pass-TwoU8s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU8s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU8s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-TwoU8s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -18,6 +18,7 @@ struct TwoU8s {\n     one: u8, two: u8\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_TwoU8s(v: TwoU8s) -> TwoU8s;\n }"}, {"sha": "85d0463fe7252c3d57a388ccf10e14e65b4fea0e", "filename": "src/test/run-pass/extern-pass-char.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-char.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-char.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-char.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -10,6 +10,7 @@\n \n // Test a function that takes/returns a u8.\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_u8(v: u8) -> u8;\n }"}, {"sha": "2d35fe6043e8fc013cb2184c381d573f4ab7b4a7", "filename": "src/test/run-pass/extern-pass-double.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-double.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-double.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-double.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_double(v: f64) -> f64;\n }"}, {"sha": "5ff3353a8c085a4248940e4e351c98903239b260", "filename": "src/test/run-pass/extern-pass-u32.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-u32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-u32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-u32.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -10,6 +10,7 @@\n \n // Test a function that takes/returns a u32.\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_u32(v: u32) -> u32;\n }"}, {"sha": "b94c57a7a663d5b62982c17eccef05b3d21c9d06", "filename": "src/test/run-pass/extern-pass-u64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-u64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-pass-u64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-pass-u64.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -10,6 +10,7 @@\n \n // Test a call to a function that takes/returns a u64.\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_identity_u64(v: u64) -> u64;\n }"}, {"sha": "45efbbb278540bb9d2c6ce8c327498a4a3713bc1", "filename": "src/test/run-pass/extern-return-TwoU16s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU16s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU16s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-return-TwoU16s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -12,6 +12,7 @@ struct TwoU16s {\n     one: u16, two: u16\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_return_TwoU16s() -> TwoU16s;\n }"}, {"sha": "8258ee623ab229221f7694abd39dfcca696d07b8", "filename": "src/test/run-pass/extern-return-TwoU32s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU32s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU32s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-return-TwoU32s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -12,6 +12,7 @@ struct TwoU32s {\n     one: u32, two: u32\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_return_TwoU32s() -> TwoU32s;\n }"}, {"sha": "d8b051f57a92f428fa6c2a6c7100db1bf476557e", "filename": "src/test/run-pass/extern-return-TwoU64s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU64s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU64s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-return-TwoU64s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -14,6 +14,7 @@ struct TwoU64s {\n     one: u64, two: u64\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_return_TwoU64s() -> TwoU64s;\n }"}, {"sha": "99dbd93fb7d3ed3c6542f73ac7519098caf09ec7", "filename": "src/test/run-pass/extern-return-TwoU8s.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU8s.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-return-TwoU8s.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-return-TwoU8s.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -12,6 +12,7 @@ struct TwoU8s {\n     one: u8, two: u8\n }\n \n+#[link(name = \"rustrt\")]\n extern {\n     pub fn rust_dbg_extern_return_TwoU8s() -> TwoU8s;\n }"}, {"sha": "7c16ae74c4a91a1dc65c23a30a6adeeecc79ed61", "filename": "src/test/run-pass/extern-stress.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-stress.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -17,6 +17,7 @@ use std::task;\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "a4ac197ac6aed522f2dcc9ce575e3391b72b3874", "filename": "src/test/run-pass/extern-yield.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-yield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fextern-yield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextern-yield.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -14,6 +14,7 @@ use std::task;\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_call(cb: extern \"C\" fn (libc::uintptr_t) -> libc::uintptr_t,\n                              data: libc::uintptr_t)"}, {"sha": "ee54423a97d7d6d998e4faeff5cf922cf1165565", "filename": "src/test/run-pass/foreign-call-no-runtime.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-call-no-runtime.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -2,6 +2,7 @@ use std::cast;\n use std::libc;\n use std::unstable::run_in_bare_thread;\n \n+#[link(name = \"rustrt\")]\n extern {\n     fn rust_dbg_call(cb: extern \"C\" fn(libc::uintptr_t),\n                      data: libc::uintptr_t) -> libc::uintptr_t;"}, {"sha": "260b1f272c234fdfac4ff018c09ac9c5c29d525c", "filename": "src/test/run-pass/foreign-dupe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-dupe.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -14,7 +14,7 @@\n mod rustrt1 {\n     use std::libc;\n \n-    #[link_name = \"rustrt\"]\n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_get_test_int() -> libc::intptr_t;\n     }\n@@ -23,7 +23,7 @@ mod rustrt1 {\n mod rustrt2 {\n     use std::libc;\n \n-    #[link_name = \"rustrt\"]\n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_get_test_int() -> libc::intptr_t;\n     }"}, {"sha": "eef45532265a38c84130ed86109c8574ca1ccbb8", "filename": "src/test/run-pass/foreign-no-abi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fforeign-no-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fforeign-no-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fforeign-no-abi.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -13,6 +13,7 @@\n mod rustrt {\n     use std::libc;\n \n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_get_test_int() -> libc::intptr_t;\n     }"}, {"sha": "6850e9d9bd2518db94dbc58025f583625c9cb3ae", "filename": "src/test/run-pass/invoke-external-foreign.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -17,6 +17,9 @@\n \n extern mod foreign_lib;\n \n+#[link(name = \"rustrt\")] // we have explicitly chosen to require this\n+extern {}\n+\n pub fn main() {\n     unsafe {\n         let _foo = foreign_lib::rustrt::rust_get_test_int();"}, {"sha": "0afe01bf7edc8cea01d44ac0ac9a606c3266b8d2", "filename": "src/test/run-pass/static-mut-foreign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fstatic-mut-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fstatic-mut-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstatic-mut-foreign.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -14,7 +14,7 @@\n \n use std::libc;\n \n-#[nolink]\n+#[link(name = \"rustrt\")]\n extern {\n     static mut rust_dbg_static_mut: libc::c_int;\n     pub fn rust_dbg_static_mut_check_four();"}, {"sha": "e2fe7a960163e12908554652d651032949a08880", "filename": "src/test/run-pass/struct-return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fstruct-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fbba7b2eeabd073f9518f2dbd50f4eabb621c67/src%2Ftest%2Frun-pass%2Fstruct-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-return.rs?ref=9fbba7b2eeabd073f9518f2dbd50f4eabb621c67", "patch": "@@ -16,7 +16,7 @@ pub struct Floats { a: f64, b: u8, c: f64 }\n mod rustrt {\n     use super::{Floats, Quad};\n \n-    #[nolink]\n+    #[link(name = \"rustrt\")]\n     extern {\n         pub fn rust_dbg_abi_1(q: Quad) -> Quad;\n         pub fn rust_dbg_abi_2(f: Floats) -> Floats;"}]}