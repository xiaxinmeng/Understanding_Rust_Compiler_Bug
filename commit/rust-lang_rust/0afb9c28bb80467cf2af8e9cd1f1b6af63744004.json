{"sha": "0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZmI5YzI4YmI4MDQ2N2NmMmFmOGU5Y2QxZjFiNmFmNjM3NDQwMDQ=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-14T19:08:49Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-08-14T19:08:49Z"}, "message": "Tweak output of E0225\n\nWhen encountering multiple non-auto trait bounds suggest creating a new\ntrait and explain what auto-traits are.", "tree": {"sha": "c07f5a0bcff9ff02cf58b3fca552e78be1ae978b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c07f5a0bcff9ff02cf58b3fca552e78be1ae978b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "html_url": "https://github.com/rust-lang/rust/commit/0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "url": "https://api.github.com/repos/rust-lang/rust/commits/3df25ae186e89c885d9a71cd37fbd7a37e39fc85", "html_url": "https://github.com/rust-lang/rust/commit/3df25ae186e89c885d9a71cd37fbd7a37e39fc85"}], "stats": {"total": 434, "additions": 295, "deletions": 139}, "files": [{"sha": "f626bb0b7e365eb3d9453b60e70d6327bd715171", "filename": "src/librustc_trait_selection/traits/util.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Flibrustc_trait_selection%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Flibrustc_trait_selection%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Futil.rs?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -53,10 +53,14 @@ impl<'tcx> TraitAliasExpansionInfo<'tcx> {\n                 diag.span_label(*sp, format!(\"referenced here ({})\", use_desc));\n             }\n         }\n-        diag.span_label(\n-            self.bottom().1,\n-            format!(\"trait alias used in trait object type ({})\", use_desc),\n-        );\n+        if self.top().1 != self.bottom().1 {\n+            // When the trait object is in a return type these two spans match, we don't want\n+            // redundant labels.\n+            diag.span_label(\n+                self.bottom().1,\n+                format!(\"trait alias used in trait object type ({})\", use_desc),\n+            );\n+        }\n     }\n \n     pub fn trait_ref(&self) -> ty::PolyTraitRef<'tcx> {"}, {"sha": "342f8b61069ac103391e54e0ed09fbbce41d09f8", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -1665,6 +1665,20 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                 \"additional use\",\n             );\n             first_trait.label_with_exp_info(&mut err, \"first non-auto trait\", \"first use\");\n+            err.help(&format!(\n+                \"consider creating a new trait with all of these as super-traits and using that \\\n+                 trait here instead: `trait NewTrait: {} {{}}`\",\n+                regular_traits\n+                    .iter()\n+                    .map(|t| t.trait_ref().print_only_trait_path().to_string())\n+                    .collect::<Vec<_>>()\n+                    .join(\" + \"),\n+            ));\n+            err.note(\n+                \"auto-traits like `Send` and `Sync` are traits that have special properties; \\\n+                 for more information on them, visit \\\n+                 <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\",\n+            );\n             err.emit();\n         }\n "}, {"sha": "49003c74450f1aee25b22f20d5b0514329611365", "filename": "src/test/ui/associated-types/missing-associated-types.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fassociated-types%2Fmissing-associated-types.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fassociated-types%2Fmissing-associated-types.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fmissing-associated-types.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -2,12 +2,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/missing-associated-types.rs:12:32\n    |\n LL | type Foo<Rhs> = dyn Add<Rhs> + Sub<Rhs> + X<Rhs> + Y<Rhs>;\n-   |                     --------   ^^^^^^^^\n-   |                     |          |\n-   |                     |          additional non-auto trait\n-   |                     |          trait alias used in trait object type (additional use)\n+   |                     --------   ^^^^^^^^ additional non-auto trait\n+   |                     |\n    |                     first non-auto trait\n-   |                     trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: std::ops::Add<Rhs> + std::ops::Sub<Rhs> + X<Rhs> + Y<Rhs> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0191]: the value of the associated types `A` (from trait `Y`), `Output` (from trait `std::ops::Add`), `Output` (from trait `std::ops::Mul`), `Output` (from trait `std::ops::Sub`) must be specified\n   --> $DIR/missing-associated-types.rs:12:21\n@@ -31,12 +31,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/missing-associated-types.rs:15:32\n    |\n LL | type Bar<Rhs> = dyn Add<Rhs> + Sub<Rhs> + X<Rhs> + Z<Rhs>;\n-   |                     --------   ^^^^^^^^\n-   |                     |          |\n-   |                     |          additional non-auto trait\n-   |                     |          trait alias used in trait object type (additional use)\n+   |                     --------   ^^^^^^^^ additional non-auto trait\n+   |                     |\n    |                     first non-auto trait\n-   |                     trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: std::ops::Add<Rhs> + std::ops::Sub<Rhs> + X<Rhs> + Z<Rhs> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0191]: the value of the associated types `A` (from trait `Z`), `B` (from trait `Z`), `Output` (from trait `std::ops::Add`), `Output` (from trait `std::ops::Div`), `Output` (from trait `std::ops::Div`), `Output` (from trait `std::ops::Mul`), `Output` (from trait `std::ops::Sub`) must be specified\n   --> $DIR/missing-associated-types.rs:15:21\n@@ -67,12 +67,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/missing-associated-types.rs:18:32\n    |\n LL | type Baz<Rhs> = dyn Add<Rhs> + Sub<Rhs> + Y<Rhs>;\n-   |                     --------   ^^^^^^^^\n-   |                     |          |\n-   |                     |          additional non-auto trait\n-   |                     |          trait alias used in trait object type (additional use)\n+   |                     --------   ^^^^^^^^ additional non-auto trait\n+   |                     |\n    |                     first non-auto trait\n-   |                     trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: std::ops::Add<Rhs> + std::ops::Sub<Rhs> + Y<Rhs> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0191]: the value of the associated types `A` (from trait `Y`), `Output` (from trait `std::ops::Add`), `Output` (from trait `std::ops::Sub`) must be specified\n   --> $DIR/missing-associated-types.rs:18:21\n@@ -95,12 +95,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/missing-associated-types.rs:21:32\n    |\n LL | type Bat<Rhs> = dyn Add<Rhs> + Sub<Rhs> + Fine<Rhs>;\n-   |                     --------   ^^^^^^^^\n-   |                     |          |\n-   |                     |          additional non-auto trait\n-   |                     |          trait alias used in trait object type (additional use)\n+   |                     --------   ^^^^^^^^ additional non-auto trait\n+   |                     |\n    |                     first non-auto trait\n-   |                     trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: std::ops::Add<Rhs> + std::ops::Sub<Rhs> + Fine<Rhs> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0191]: the value of the associated types `Output` (from trait `std::ops::Add`), `Output` (from trait `std::ops::Sub`) must be specified\n   --> $DIR/missing-associated-types.rs:21:21"}, {"sha": "93984f1c372fa8ef0dfde0acbef52d76e6e94458", "filename": "src/test/ui/bad/bad-sized.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fbad%2Fbad-sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fbad%2Fbad-sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad%2Fbad-sized.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -2,12 +2,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/bad-sized.rs:4:28\n    |\n LL |     let x: Vec<dyn Trait + Sized> = Vec::new();\n-   |                    -----   ^^^^^\n-   |                    |       |\n-   |                    |       additional non-auto trait\n-   |                    |       trait alias used in trait object type (additional use)\n+   |                    -----   ^^^^^ additional non-auto trait\n+   |                    |\n    |                    first non-auto trait\n-   |                    trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Trait + std::marker::Sized {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0277]: the size for values of type `dyn Trait` cannot be known at compilation time\n   --> $DIR/bad-sized.rs:4:12"}, {"sha": "435a2c9396273093694b4d7dcfa857fd9ccfb9ba", "filename": "src/test/ui/error-codes/E0225.stderr", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ferror-codes%2FE0225.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ferror-codes%2FE0225.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0225.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -2,12 +2,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/E0225.rs:6:36\n    |\n LL |     let _: Box<dyn std::io::Read + std::io::Write>;\n-   |                    -------------   ^^^^^^^^^^^^^^\n-   |                    |               |\n-   |                    |               additional non-auto trait\n-   |                    |               trait alias used in trait object type (additional use)\n+   |                    -------------   ^^^^^^^^^^^^^^ additional non-auto trait\n+   |                    |\n    |                    first non-auto trait\n-   |                    trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: std::io::Read + std::io::Write {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/E0225.rs:8:20\n@@ -22,6 +22,9 @@ LL |     let _: Box<dyn Foo>;\n    |                    |\n    |                    trait alias used in trait object type (additional use)\n    |                    trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: std::io::Read + std::io::Write {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error: aborting due to 2 previous errors\n "}, {"sha": "9dda99109fa2b875416a57ccfa4967adcd842faa", "filename": "src/test/ui/issues/issue-22560.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-22560.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -28,12 +28,12 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/issue-22560.rs:9:23\n    |\n LL | type Test = dyn Add + Sub;\n-   |                 ---   ^^^\n-   |                 |     |\n-   |                 |     additional non-auto trait\n-   |                 |     trait alias used in trait object type (additional use)\n+   |                 ---   ^^^ additional non-auto trait\n+   |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Add<[type error]> + Sub<[type error]> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0191]: the value of the associated types `Output` (from trait `Add`), `Output` (from trait `Sub`) must be specified\n   --> $DIR/issue-22560.rs:9:17"}, {"sha": "f9628f2c2eca3da5a5b9e78c44427dd330017c56", "filename": "src/test/ui/issues/issue-32963.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fissues%2Fissue-32963.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fissues%2Fissue-32963.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-32963.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -2,23 +2,23 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/issue-32963.rs:8:31\n    |\n LL |     size_of_copy::<dyn Misc + Copy>();\n-   |                        ----   ^^^^\n-   |                        |      |\n-   |                        |      additional non-auto trait\n-   |                        |      trait alias used in trait object type (additional use)\n+   |                        ----   ^^^^ additional non-auto trait\n+   |                        |\n    |                        first non-auto trait\n-   |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Misc + std::marker::Copy {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/issue-32963.rs:8:31\n    |\n LL |     size_of_copy::<dyn Misc + Copy>();\n-   |                        ----   ^^^^\n-   |                        |      |\n-   |                        |      additional non-auto trait\n-   |                        |      trait alias used in trait object type (additional use)\n+   |                        ----   ^^^^ additional non-auto trait\n+   |                        |\n    |                        first non-auto trait\n-   |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Misc + std::marker::Copy {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0277]: the trait bound `dyn Misc: std::marker::Copy` is not satisfied\n   --> $DIR/issue-32963.rs:8:5"}, {"sha": "6efbfad8f38657881ca2653692c5520c536636ce", "filename": "src/test/ui/parser/trait-object-trait-parens.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -40,34 +40,34 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/trait-object-trait-parens.rs:8:35\n    |\n LL |     let _: Box<(Obj) + (?Sized) + (for<'a> Trait<'a>)>;\n-   |                -----              ^^^^^^^^^^^^^^^^^^^\n-   |                |                  |\n-   |                |                  additional non-auto trait\n-   |                |                  trait alias used in trait object type (additional use)\n+   |                -----              ^^^^^^^^^^^^^^^^^^^ additional non-auto trait\n+   |                |\n    |                first non-auto trait\n-   |                trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + for<'a> Trait<'a> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:12:49\n    |\n LL |     let _: Box<(?Sized) + (for<'a> Trait<'a>) + (Obj)>;\n-   |                           -------------------   ^^^^^\n-   |                           |                     |\n-   |                           |                     additional non-auto trait\n-   |                           |                     trait alias used in trait object type (additional use)\n+   |                           -------------------   ^^^^^ additional non-auto trait\n+   |                           |\n    |                           first non-auto trait\n-   |                           trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: for<'a> Trait<'a> + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-object-trait-parens.rs:16:38\n    |\n LL |     let _: Box<(for<'a> Trait<'a>) + (Obj) + (?Sized)>;\n-   |                 -----------------    ^^^^^\n-   |                 |                    |\n-   |                 |                    additional non-auto trait\n-   |                 |                    trait alias used in trait object type (additional use)\n+   |                 -----------------    ^^^^^ additional non-auto trait\n+   |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: for<'a> Trait<'a> + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error: aborting due to 6 previous errors; 3 warnings emitted\n "}, {"sha": "b297d54375c79783f82cd67fb70c2582536a157b", "filename": "src/test/ui/traits/trait-alias/trait-alias-no-duplicates.stderr", "status": "modified", "additions": 89, "deletions": 20, "changes": 109, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-duplicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-duplicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-duplicates.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -11,6 +11,9 @@ LL | type _T00 = dyn _0 + _0;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:19:22\n@@ -27,6 +30,9 @@ LL | type _T01 = dyn _1 + _0;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:22:22\n@@ -46,6 +52,9 @@ LL | type _T02 = dyn _1 + _1;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:25:23\n@@ -59,7 +68,9 @@ LL | type _T03 = dyn Obj + _1;\n    |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:28:22\n@@ -70,11 +81,12 @@ LL | trait _1 = _0;\n    |            -- referenced here (first use)\n ...\n LL | type _T04 = dyn _1 + Obj;\n-   |                 --   ^^^\n-   |                 |    |\n-   |                 |    additional non-auto trait\n-   |                 |    trait alias used in trait object type (additional use)\n+   |                 --   ^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:37:17\n@@ -97,6 +109,9 @@ LL | type _T10 = dyn _2 + _3;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:40:22\n@@ -113,6 +128,9 @@ LL | type _T11 = dyn _3 + _2;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:43:23\n@@ -127,7 +145,9 @@ LL | type _T12 = dyn Obj + _2;\n    |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:46:17\n@@ -150,6 +170,9 @@ LL | type _T13 = dyn _2 + Obj;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:49:22\n@@ -166,6 +189,9 @@ LL | type _T14 = dyn _1 + _3;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:52:22\n@@ -182,6 +208,9 @@ LL | type _T15 = dyn _3 + _1;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:55:22\n@@ -200,6 +229,9 @@ LL | type _T16 = dyn _1 + _4;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:58:22\n@@ -218,6 +250,9 @@ LL | type _T17 = dyn _4 + _1;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:65:22\n@@ -232,6 +267,9 @@ LL | type _T20 = dyn _5 + _5;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:68:23\n@@ -243,7 +281,9 @@ LL | type _T21 = dyn Obj + _5;\n    |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:71:22\n@@ -252,11 +292,12 @@ LL | trait _5 = Obj + Send;\n    |            --- first non-auto trait\n ...\n LL | type _T22 = dyn _5 + Obj;\n-   |                 --   ^^^\n-   |                 |    |\n-   |                 |    additional non-auto trait\n-   |                 |    trait alias used in trait object type (additional use)\n+   |                 --   ^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:74:36\n@@ -265,11 +306,12 @@ LL | trait _5 = Obj + Send;\n    |            --- first non-auto trait\n ...\n LL | type _T23 = dyn _5 + Send + Sync + Obj;\n-   |                 --                 ^^^\n-   |                 |                  |\n-   |                 |                  additional non-auto trait\n-   |                 |                  trait alias used in trait object type (additional use)\n+   |                 --                 ^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:81:17\n@@ -290,6 +332,9 @@ LL | type _T30 = dyn _6;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:84:17\n@@ -310,6 +355,9 @@ LL | type _T31 = dyn _6 + Send;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:87:24\n@@ -330,6 +378,9 @@ LL | type _T32 = dyn Send + _6;\n    |                        |\n    |                        trait alias used in trait object type (additional use)\n    |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:95:22\n@@ -343,11 +394,12 @@ LL | trait _8 = Unpin + _7;\n    |                    -- referenced here (first use)\n LL | \n LL | type _T40 = dyn _8 + Obj;\n-   |                 --   ^^^\n-   |                 |    |\n-   |                 |    additional non-auto trait\n-   |                 |    trait alias used in trait object type (additional use)\n+   |                 --   ^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:98:23\n@@ -364,7 +416,9 @@ LL | type _T41 = dyn Obj + _8;\n    |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:101:22\n@@ -386,6 +440,9 @@ LL | type _T42 = dyn _8 + _4;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:104:22\n@@ -407,6 +464,9 @@ LL | type _T43 = dyn _4 + _8;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:107:36\n@@ -428,6 +488,9 @@ LL | type _T44 = dyn _4 + Send + Sync + _8;\n    |                 --                 ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:117:22\n@@ -440,6 +503,9 @@ LL | type _T50 = dyn _9 + _10;\n    |                 --   ^^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: for<'a> ObjL<'a> + for<'b> ObjL<'b> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-duplicates.rs:123:23\n@@ -452,6 +518,9 @@ LL | type _T60 = dyn _11 + _12;\n    |                 ---   ^^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjT<for<'a> fn(&'a u8)> + ObjT<for<'b> fn(&'b u8)> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error: aborting due to 27 previous errors\n "}, {"sha": "1d7b3fa112b007a7a290aa23943eaccf2e5f6a08", "filename": "src/test/ui/traits/trait-alias/trait-alias-no-extra-traits.stderr", "status": "modified", "additions": 96, "deletions": 30, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-extra-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-extra-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-alias%2Ftrait-alias-no-extra-traits.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -5,11 +5,12 @@ LL | trait _0 = ObjA;\n    |            ---- first non-auto trait\n ...\n LL | type _T00 = dyn _0 + ObjB;\n-   |                 --   ^^^^\n-   |                 |    |\n-   |                 |    additional non-auto trait\n-   |                 |    trait alias used in trait object type (additional use)\n+   |                 --   ^^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:19:24\n@@ -21,7 +22,9 @@ LL | type _T01 = dyn ObjB + _0;\n    |                 ----   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:22:24\n@@ -35,7 +38,9 @@ LL | type _T02 = dyn ObjB + _1;\n    |                 ----   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:25:22\n@@ -46,11 +51,12 @@ LL | trait _1 = _0;\n    |            -- referenced here (first use)\n ...\n LL | type _T03 = dyn _1 + ObjB;\n-   |                 --   ^^^^\n-   |                 |    |\n-   |                 |    additional non-auto trait\n-   |                 |    trait alias used in trait object type (additional use)\n+   |                 --   ^^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:34:22\n@@ -67,6 +73,9 @@ LL | type _T10 = dyn _2 + _3;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:37:22\n@@ -83,6 +92,9 @@ LL | type _T11 = dyn _3 + _2;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:40:22\n@@ -101,6 +113,9 @@ LL | type _T12 = dyn _2 + _4;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:43:22\n@@ -119,6 +134,9 @@ LL | type _T13 = dyn _4 + _2;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:50:22\n@@ -135,6 +153,9 @@ LL | type _T20 = dyn _5 + _1;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:53:22\n@@ -151,6 +172,9 @@ LL | type _T21 = dyn _1 + _5;\n    |                 --   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:56:22\n@@ -159,11 +183,12 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n LL | type _T22 = dyn _5 + ObjA;\n-   |                 --   ^^^^\n-   |                 |    |\n-   |                 |    additional non-auto trait\n-   |                 |    trait alias used in trait object type (additional use)\n+   |                 --   ^^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:59:24\n@@ -175,7 +200,9 @@ LL | type _T23 = dyn ObjA + _5;\n    |                 ----   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:62:29\n@@ -192,6 +219,9 @@ LL | type _T24 = dyn Send + _5 + _1 + Sync;\n    |                        --   ^^ trait alias used in trait object type (additional use)\n    |                        |\n    |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:65:29\n@@ -208,6 +238,9 @@ LL | type _T25 = dyn _1 + Sync + _5 + Send;\n    |                 --          ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:68:36\n@@ -216,11 +249,12 @@ LL | trait _5 = Sync + ObjB + Send;\n    |                   ---- first non-auto trait\n ...\n LL | type _T26 = dyn Sync + Send + _5 + ObjA;\n-   |                               --   ^^^^\n-   |                               |    |\n-   |                               |    additional non-auto trait\n-   |                               |    trait alias used in trait object type (additional use)\n+   |                               --   ^^^^ additional non-auto trait\n+   |                               |\n    |                               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:71:38\n@@ -232,7 +266,9 @@ LL | type _T27 = dyn Send + Sync + ObjA + _5;\n    |                               ----   ^^ trait alias used in trait object type (additional use)\n    |                               |\n    |                               first non-auto trait\n-   |                               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:80:17\n@@ -255,6 +291,9 @@ LL | type _T30 = dyn _6;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:83:17\n@@ -277,6 +316,9 @@ LL | type _T31 = dyn _6 + Send;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:86:24\n@@ -299,6 +341,9 @@ LL | type _T32 = dyn Send + _6;\n    |                        |\n    |                        trait alias used in trait object type (additional use)\n    |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:89:17\n@@ -331,6 +376,9 @@ LL | type _T33 = dyn _8;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:92:17\n@@ -363,6 +411,9 @@ LL | type _T34 = dyn _8 + Send;\n    |                 |\n    |                 trait alias used in trait object type (additional use)\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:95:24\n@@ -395,6 +446,9 @@ LL | type _T35 = dyn Send + _8;\n    |                        |\n    |                        trait alias used in trait object type (additional use)\n    |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:103:23\n@@ -408,11 +462,12 @@ LL | trait _10 = Unpin + _9;\n    |                     -- referenced here (first use)\n LL | \n LL | type _T40 = dyn _10 + ObjA;\n-   |                 ---   ^^^^\n-   |                 |     |\n-   |                 |     additional non-auto trait\n-   |                 |     trait alias used in trait object type (additional use)\n+   |                 ---   ^^^^ additional non-auto trait\n+   |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:106:24\n@@ -429,7 +484,9 @@ LL | type _T41 = dyn ObjA + _10;\n    |                 ----   ^^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:109:23\n@@ -451,6 +508,9 @@ LL | type _T42 = dyn _10 + _1;\n    |                 ---   ^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:112:37\n@@ -464,11 +524,12 @@ LL | trait _10 = Unpin + _9;\n    |                     -- referenced here (first use)\n ...\n LL | type _T43 = dyn Send + _10 + Sync + ObjA;\n-   |                        ---          ^^^^\n-   |                        |            |\n-   |                        |            additional non-auto trait\n-   |                        |            trait alias used in trait object type (additional use)\n+   |                        ---          ^^^^ additional non-auto trait\n+   |                        |\n    |                        trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:115:24\n@@ -485,7 +546,9 @@ LL | type _T44 = dyn ObjA + _10 + Send + Sync;\n    |                 ----   ^^^ trait alias used in trait object type (additional use)\n    |                 |\n    |                 first non-auto trait\n-   |                 trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjA + ObjB {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/trait-alias-no-extra-traits.rs:118:37\n@@ -507,6 +570,9 @@ LL | type _T45 = dyn Sync + Send + _10 + _1;\n    |                               ---   ^^ trait alias used in trait object type (additional use)\n    |                               |\n    |                               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjB + ObjA {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error: aborting due to 28 previous errors\n "}, {"sha": "ed5409d01596ace0b9fd238b611c51af61c30596", "filename": "src/test/ui/traits/wf-trait-object-no-duplicates.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-no-duplicates.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0afb9c28bb80467cf2af8e9cd1f1b6af63744004/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-no-duplicates.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-no-duplicates.stderr?ref=0afb9c28bb80467cf2af8e9cd1f1b6af63744004", "patch": "@@ -2,56 +2,56 @@ error[E0225]: only auto traits can be used as additional traits in a trait objec\n   --> $DIR/wf-trait-object-no-duplicates.rs:8:21\n    |\n LL | type _0 = dyn Obj + Obj;\n-   |               ---   ^^^\n-   |               |     |\n-   |               |     additional non-auto trait\n-   |               |     trait alias used in trait object type (additional use)\n+   |               ---   ^^^ additional non-auto trait\n+   |               |\n    |               first non-auto trait\n-   |               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:13:28\n    |\n LL | type _1 = dyn Send + Obj + Obj;\n-   |                      ---   ^^^\n-   |                      |     |\n-   |                      |     additional non-auto trait\n-   |                      |     trait alias used in trait object type (additional use)\n+   |                      ---   ^^^ additional non-auto trait\n+   |                      |\n    |                      first non-auto trait\n-   |                      trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:16:28\n    |\n LL | type _2 = dyn Obj + Send + Obj;\n-   |               ---          ^^^\n-   |               |            |\n-   |               |            additional non-auto trait\n-   |               |            trait alias used in trait object type (additional use)\n+   |               ---          ^^^ additional non-auto trait\n+   |               |\n    |               first non-auto trait\n-   |               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: Obj + Obj {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:26:34\n    |\n LL | type _4 = dyn for<'a> ObjL<'a> + for<'b> ObjL<'b>;\n-   |               ----------------   ^^^^^^^^^^^^^^^^\n-   |               |                  |\n-   |               |                  additional non-auto trait\n-   |               |                  trait alias used in trait object type (additional use)\n+   |               ----------------   ^^^^^^^^^^^^^^^^ additional non-auto trait\n+   |               |\n    |               first non-auto trait\n-   |               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: for<'a> ObjL<'a> + for<'b> ObjL<'b> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error[E0225]: only auto traits can be used as additional traits in a trait object\n   --> $DIR/wf-trait-object-no-duplicates.rs:30:42\n    |\n LL | type _5 = dyn ObjT<for<'a> fn(&'a u8)> + ObjT<for<'b> fn(&'b u8)>;\n-   |               ------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^\n-   |               |                          |\n-   |               |                          additional non-auto trait\n-   |               |                          trait alias used in trait object type (additional use)\n+   |               ------------------------   ^^^^^^^^^^^^^^^^^^^^^^^^ additional non-auto trait\n+   |               |\n    |               first non-auto trait\n-   |               trait alias used in trait object type (first use)\n+   |\n+   = help: consider creating a new trait with all of these as super-traits and using that trait here instead: `trait NewTrait: ObjT<for<'a> fn(&'a u8)> + ObjT<for<'b> fn(&'b u8)> {}`\n+   = note: auto-traits like `Send` and `Sync` are traits that have special properties; for more information on them, visit <https://doc.rust-lang.org/reference/special-types-and-traits.html#auto-traits>\n \n error: aborting due to 5 previous errors\n "}]}