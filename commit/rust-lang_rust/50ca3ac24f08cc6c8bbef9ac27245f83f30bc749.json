{"sha": "50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwY2EzYWMyNGYwOGNjNmM4YmJlZjlhYzI3MjQ1ZjgzZjMwYmM3NDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-28T23:25:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-28T23:25:23Z"}, "message": "Auto merge of #84615 - a1phyr:clone_from_pathbuf_osstring, r=Mark-Simulacrum\n\nOverride `clone_from` method for PathBuf and OsString\n\nThis was not the case before because `#[derive(Clone)]` do not do it.", "tree": {"sha": "1d98d5d8b725d8ab9c60122d30e3a9b33da33e48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d98d5d8b725d8ab9c60122d30e3a9b33da33e48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "html_url": "https://github.com/rust-lang/rust/commit/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca075d268d2ce315964e1dd195cfe837b8a53f4d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca075d268d2ce315964e1dd195cfe837b8a53f4d", "html_url": "https://github.com/rust-lang/rust/commit/ca075d268d2ce315964e1dd195cfe837b8a53f4d"}, {"sha": "4a8671a2fa89bfcb925cd9a8e7c5887387cc59ab", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a8671a2fa89bfcb925cd9a8e7c5887387cc59ab", "html_url": "https://github.com/rust-lang/rust/commit/4a8671a2fa89bfcb925cd9a8e7c5887387cc59ab"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "ea4b28660177767cc78d0f5edd1871319193a82d", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "patch": "@@ -71,7 +71,6 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n /// [`&str`]: str\n /// [`CStr`]: crate::ffi::CStr\n /// [conversions]: super#conversions\n-#[derive(Clone)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"OsString\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct OsString {\n@@ -420,6 +419,19 @@ impl Default for OsString {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl Clone for OsString {\n+    #[inline]\n+    fn clone(&self) -> Self {\n+        OsString { inner: self.inner.clone() }\n+    }\n+\n+    #[inline]\n+    fn clone_from(&mut self, source: &Self) {\n+        self.inner.clone_from(&source.inner)\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Debug for OsString {\n     fn fmt(&self, formatter: &mut fmt::Formatter<'_>) -> fmt::Result {"}, {"sha": "ed0987064e8f744d0473f1619f132c6662aad0c1", "filename": "library/std/src/path.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "patch": "@@ -1065,7 +1065,6 @@ impl FusedIterator for Ancestors<'_> {}\n /// ```\n ///\n /// Which method works best depends on what kind of situation you're in.\n-#[derive(Clone)]\n #[cfg_attr(not(test), rustc_diagnostic_item = \"PathBuf\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n // FIXME:\n@@ -1406,6 +1405,19 @@ impl PathBuf {\n     }\n }\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl Clone for PathBuf {\n+    #[inline]\n+    fn clone(&self) -> Self {\n+        PathBuf { inner: self.inner.clone() }\n+    }\n+\n+    #[inline]\n+    fn clone_from(&mut self, source: &Self) {\n+        self.inner.clone_from(&source.inner)\n+    }\n+}\n+\n #[stable(feature = \"box_from_path\", since = \"1.17.0\")]\n impl From<&Path> for Box<Path> {\n     fn from(path: &Path) -> Box<Path> {"}, {"sha": "32705c432fa8a2d5e6f1b518ecd8624b035d71f8", "filename": "library/std/src/sys_common/os_str_bytes.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50ca3ac24f08cc6c8bbef9ac27245f83f30bc749/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys_common%2Fos_str_bytes.rs?ref=50ca3ac24f08cc6c8bbef9ac27245f83f30bc749", "patch": "@@ -14,7 +14,7 @@ use crate::sys_common::{AsInner, FromInner, IntoInner};\n \n use core::str::lossy::Utf8Lossy;\n \n-#[derive(Clone, Hash)]\n+#[derive(Hash)]\n pub(crate) struct Buf {\n     pub inner: Vec<u8>,\n }\n@@ -53,6 +53,18 @@ impl fmt::Display for Buf {\n     }\n }\n \n+impl Clone for Buf {\n+    #[inline]\n+    fn clone(&self) -> Self {\n+        Buf { inner: self.inner.clone() }\n+    }\n+\n+    #[inline]\n+    fn clone_from(&mut self, source: &Self) {\n+        self.inner.clone_from(&source.inner)\n+    }\n+}\n+\n impl IntoInner<Vec<u8>> for Buf {\n     fn into_inner(self) -> Vec<u8> {\n         self.inner"}]}