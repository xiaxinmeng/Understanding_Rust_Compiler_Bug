{"sha": "610615b33de76d3b194b0a69fbe220a2d28129fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxMDYxNWIzM2RlNzZkM2IxOTRiMGE2OWZiZTIyMGEyZDI4MTI5ZmU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-08-08T15:56:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-08T15:56:00Z"}, "message": "Merge pull request #1153 from oli-obk/too_many_extern_fn_args\n\nextern fns often need to adhere to a specific api -> don't suggest api changes", "tree": {"sha": "f8eb2193ac51646fa7cb21f7cb792e561ff10abb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8eb2193ac51646fa7cb21f7cb792e561ff10abb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/610615b33de76d3b194b0a69fbe220a2d28129fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/610615b33de76d3b194b0a69fbe220a2d28129fe", "html_url": "https://github.com/rust-lang/rust/commit/610615b33de76d3b194b0a69fbe220a2d28129fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/610615b33de76d3b194b0a69fbe220a2d28129fe/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1", "html_url": "https://github.com/rust-lang/rust/commit/ac5abcf5930ea59f13a4da3ff579cc4b3ed88bd1"}, {"sha": "331afc32468e02a03f18557fbafad345eff09509", "url": "https://api.github.com/repos/rust-lang/rust/commits/331afc32468e02a03f18557fbafad345eff09509", "html_url": "https://github.com/rust-lang/rust/commit/331afc32468e02a03f18557fbafad345eff09509"}], "stats": {"total": 16, "additions": 14, "deletions": 2}, "files": [{"sha": "eadbd01e4ea920c3c8994f2f43a7aee0b873bde7", "filename": "clippy_lints/src/functions.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/610615b33de76d3b194b0a69fbe220a2d28129fe/clippy_lints%2Fsrc%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610615b33de76d3b194b0a69fbe220a2d28129fe/clippy_lints%2Fsrc%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ffunctions.rs?ref=610615b33de76d3b194b0a69fbe220a2d28129fe", "patch": "@@ -4,6 +4,7 @@ use rustc::ty;\n use rustc::lint::*;\n use std::collections::HashSet;\n use syntax::ast;\n+use syntax::abi::Abi;\n use syntax::codemap::Span;\n use utils::{span_lint, type_is_unsafe_function};\n \n@@ -85,15 +86,23 @@ impl LateLintPass for Functions {\n \n         // don't warn for implementations, it's not their fault\n         if !is_impl {\n-            self.check_arg_number(cx, decl, span);\n+            // don't lint extern functions decls, it's not their fault either\n+            match kind {\n+                hir::intravisit::FnKind::Method(_, &hir::MethodSig { abi: Abi::Rust, .. }, _, _) |\n+                hir::intravisit::FnKind::ItemFn(_, _, _, _, Abi::Rust, _, _) => self.check_arg_number(cx, decl, span),\n+                _ => {},\n+            }\n         }\n \n         self.check_raw_ptr(cx, unsafety, decl, block, nodeid);\n     }\n \n     fn check_trait_item(&mut self, cx: &LateContext, item: &hir::TraitItem) {\n         if let hir::MethodTraitItem(ref sig, ref block) = item.node {\n-            self.check_arg_number(cx, &sig.decl, item.span);\n+            // don't lint extern functions decls, it's not their fault\n+            if sig.abi == Abi::Rust {\n+                self.check_arg_number(cx, &sig.decl, item.span);\n+            }\n \n             if let Some(ref block) = *block {\n                 self.check_raw_ptr(cx, sig.unsafety, &sig.decl, block, item.id);"}, {"sha": "60a074df0f5b2016b743760a68ad868b4c429645", "filename": "tests/compile-fail/functions.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/610615b33de76d3b194b0a69fbe220a2d28129fe/tests%2Fcompile-fail%2Ffunctions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/610615b33de76d3b194b0a69fbe220a2d28129fe/tests%2Fcompile-fail%2Ffunctions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ffunctions.rs?ref=610615b33de76d3b194b0a69fbe220a2d28129fe", "patch": "@@ -12,6 +12,9 @@ fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _\n     //~^ ERROR: this function has too many arguments (8/7)\n }\n \n+// don't lint extern fns\n+extern fn extern_fn(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {}\n+\n pub trait Foo {\n     fn good(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool);\n     fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ());"}]}