{"sha": "4bbe970673e8b982e2c94d17cd860c2c89ca5211", "node_id": "C_kwDOAAsO6NoAKDRiYmU5NzA2NzNlOGI5ODJlMmM5NGQxN2NkODYwYzJjODljYTUyMTE", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-01T09:29:36Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-02-01T09:29:36Z"}, "message": "review + rebase", "tree": {"sha": "89bb4e528a815e3087b5ff244e9eb819368e672b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89bb4e528a815e3087b5ff244e9eb819368e672b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4bbe970673e8b982e2c94d17cd860c2c89ca5211", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4bbe970673e8b982e2c94d17cd860c2c89ca5211", "html_url": "https://github.com/rust-lang/rust/commit/4bbe970673e8b982e2c94d17cd860c2c89ca5211", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4bbe970673e8b982e2c94d17cd860c2c89ca5211/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6970547d40108ba87cc64425c54c91a6caaebc5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/6970547d40108ba87cc64425c54c91a6caaebc5a", "html_url": "https://github.com/rust-lang/rust/commit/6970547d40108ba87cc64425c54c91a6caaebc5a"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "fa8cbeaaf51e2b90d374a0adfcfbb8f96bac39db", "filename": "compiler/rustc_lint/src/internal.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4bbe970673e8b982e2c94d17cd860c2c89ca5211/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbe970673e8b982e2c94d17cd860c2c89ca5211/compiler%2Frustc_lint%2Fsrc%2Finternal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Finternal.rs?ref=4bbe970673e8b982e2c94d17cd860c2c89ca5211", "patch": "@@ -5,7 +5,8 @@ use crate::{EarlyContext, EarlyLintPass, LateContext, LateLintPass, LintContext}\n use rustc_ast as ast;\n use rustc_errors::Applicability;\n use rustc_hir::def::Res;\n-use rustc_hir::*;\n+use rustc_hir::{Expr, ExprKind, GenericArg, Path, PathSegment, QPath};\n+use rustc_hir::{HirId, Item, ItemKind, Node, Ty, TyKind};\n use rustc_middle::ty;\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::hygiene::{ExpnKind, MacroKind};\n@@ -75,10 +76,10 @@ impl LateLintPass<'_> for QueryStability {\n         }\n \n         let (span, def_id, substs) = match expr.kind {\n-            ExprKind::MethodCall(_, span, _, _)\n+            ExprKind::MethodCall(segment, _, _)\n                 if let Some(def_id) = cx.typeck_results().type_dependent_def_id(expr.hir_id) =>\n             {\n-                (span, def_id, cx.typeck_results().node_substs(expr.hir_id))\n+                (segment.ident.span, def_id, cx.typeck_results().node_substs(expr.hir_id))\n             },\n             _ => {\n                 let &ty::FnDef(def_id, substs) ="}, {"sha": "ca511f7b814be858724ac352628126e78c26aa82", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4bbe970673e8b982e2c94d17cd860c2c89ca5211/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4bbe970673e8b982e2c94d17cd860c2c89ca5211/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=4bbe970673e8b982e2c94d17cd860c2c89ca5211", "patch": "@@ -487,7 +487,7 @@ impl CheckAttrVisitor<'_> {\n     fn check_rustc_must_implement_one_of(\n         &self,\n         attr: &Attribute,\n-        span: &Span,\n+        span: Span,\n         target: Target,\n     ) -> bool {\n         match target {\n@@ -496,7 +496,7 @@ impl CheckAttrVisitor<'_> {\n                 self.tcx\n                     .sess\n                     .struct_span_err(attr.span, \"attribute can only be applied to a trait\")\n-                    .span_label(*span, \"not a trait\")\n+                    .span_label(span, \"not a trait\")\n                     .emit();\n                 false\n             }"}]}