{"sha": "c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f", "node_id": "C_kwDOAAsO6NoAKGMyMGUwZGFmMzJiMzU1ZTJhMGFiOTk3MmNmMTliMmFhNjRjNGQ2NGY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-01-25T21:19:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-25T21:19:54Z"}, "message": "Rollup merge of #107255 - lcnr:implied-b-hr, r=oli-obk\n\nadd test where we ignore hr implied bounds\n\nr? types", "tree": {"sha": "db6d79fb5ad6f82182eb31ce376a440410e9dac6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/db6d79fb5ad6f82182eb31ce376a440410e9dac6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJj0Zz6CRBK7hj4Ov3rIwAA/gYIAGZ3ITftSDudB/FN+Q4PxMTr\nPcLOOL1wXT4FuDpHRaL3nlOprZ5/ysmrYXY/5I3dY8zjFNQGTByK+xWZ87JyuwMp\n95god7WvEKLJd5oFTzbdDeKLubVndP3267ZxczMjIwovhOHEM14iMAGdplFbQmBd\nkvOLX8r9mdUmfe7sZPLtfZD6L2RNrZYSY2gpt1y6YKI26sI0AyWqXeGLAvB9Q/uf\nfQ41vE7xC7IFRCGmZ2kS2N14cKgNDBT7CfrBTZxe3QUc7X6V+tRf1tmF2tEXHtC9\nZB6G78rQ/OHf8vwZOpztXqLc6JCEdg1Bv11OuOSpsYYpyyY8nPUObqKT50INQCs=\n=Ytz5\n-----END PGP SIGNATURE-----\n", "payload": "tree db6d79fb5ad6f82182eb31ce376a440410e9dac6\nparent 2ed3639f83f3648854879404ac192092a582d133\nparent e6e93e021e7be6c9ae400145a2aa235f16f9eb45\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1674681594 +0100\ncommitter GitHub <noreply@github.com> 1674681594 +0100\n\nRollup merge of #107255 - lcnr:implied-b-hr, r=oli-obk\n\nadd test where we ignore hr implied bounds\n\nr? types\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f", "html_url": "https://github.com/rust-lang/rust/commit/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2ed3639f83f3648854879404ac192092a582d133", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ed3639f83f3648854879404ac192092a582d133", "html_url": "https://github.com/rust-lang/rust/commit/2ed3639f83f3648854879404ac192092a582d133"}, {"sha": "e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e93e021e7be6c9ae400145a2aa235f16f9eb45", "html_url": "https://github.com/rust-lang/rust/commit/e6e93e021e7be6c9ae400145a2aa235f16f9eb45"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "103884c50313f35feccd2ec480bb5845ce531e5b", "filename": "tests/ui/regions/higher-ranked-implied.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f/tests%2Fui%2Fregions%2Fhigher-ranked-implied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f/tests%2Fui%2Fregions%2Fhigher-ranked-implied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fhigher-ranked-implied.rs?ref=c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f", "patch": "@@ -0,0 +1,14 @@\n+// FIXME: This test should pass as the first two fields add implied bounds that\n+// `'a` is equal to `'b` while the last one should simply use that fact. With\n+// the current implementation this errors. We have to be careful as implied bounds\n+// are only sound if they're also correctly checked.\n+\n+struct Inv<T>(*mut T); // `T` is invariant.\n+type A = for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'a ()>);\n+type B = for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'b ()>);\n+\n+fn main() {\n+    let x: A = |_, _, _| ();\n+    let y: B = x; //~ ERROR mismatched types\n+    let _: A = y; //~ ERROR mismatched types\n+}"}, {"sha": "9d80eacd7c32047f3e85f7c21c40b9bae0e48396", "filename": "tests/ui/regions/higher-ranked-implied.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f/tests%2Fui%2Fregions%2Fhigher-ranked-implied.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f/tests%2Fui%2Fregions%2Fhigher-ranked-implied.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fregions%2Fhigher-ranked-implied.stderr?ref=c20e0daf32b355e2a0ab9972cf19b2aa64c4d64f", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/higher-ranked-implied.rs:12:16\n+   |\n+LL |     let y: B = x;\n+   |                ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'b ()>)`\n+              found fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'a ()>)`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/higher-ranked-implied.rs:13:16\n+   |\n+LL |     let _: A = y;\n+   |                ^ one type is more general than the other\n+   |\n+   = note: expected fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'a ()>)`\n+              found fn pointer `for<'a, 'b> fn(Inv<&'a &'b ()>, Inv<&'b &'a ()>, Inv<&'b ()>)`\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}