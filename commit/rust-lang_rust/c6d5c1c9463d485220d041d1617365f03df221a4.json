{"sha": "c6d5c1c9463d485220d041d1617365f03df221a4", "node_id": "C_kwDOAAsO6NoAKGM2ZDVjMWM5NDYzZDQ4NTIyMGQwNDFkMTYxNzM2NWYwM2RmMjIxYTQ", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:09:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:09:16Z"}, "message": "dead code", "tree": {"sha": "31265f8448271fd6bc45379fda70bc59e4b6be5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/31265f8448271fd6bc45379fda70bc59e4b6be5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6d5c1c9463d485220d041d1617365f03df221a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6d5c1c9463d485220d041d1617365f03df221a4", "html_url": "https://github.com/rust-lang/rust/commit/c6d5c1c9463d485220d041d1617365f03df221a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6d5c1c9463d485220d041d1617365f03df221a4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9902b92ab0e886a190a2babdbe7a940955bceed", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9902b92ab0e886a190a2babdbe7a940955bceed", "html_url": "https://github.com/rust-lang/rust/commit/e9902b92ab0e886a190a2babdbe7a940955bceed"}], "stats": {"total": 23, "additions": 1, "deletions": 22}, "files": [{"sha": "64d80baa3ed10648de4fdf300004021b1d480529", "filename": "crates/mbe/src/tests.rs", "status": "modified", "additions": 1, "deletions": 22, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c6d5c1c9463d485220d041d1617365f03df221a4/crates%2Fmbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6d5c1c9463d485220d041d1617365f03df221a4/crates%2Fmbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests.rs?ref=c6d5c1c9463d485220d041d1617365f03df221a4", "patch": "@@ -80,6 +80,7 @@ macro_rules! impl_fixture {\n                 test_utils::assert_eq_text!(&expected.trim(), &actual.trim());\n             }\n \n+            #[allow(unused)]\n             fn assert_expand_items(&self, invocation: &str, expected: &str) -> &$name {\n                 self.assert_expansion(ParserEntryPoint::Items, invocation, expected);\n                 self\n@@ -140,12 +141,6 @@ pub(crate) fn parse_macro(ra_fixture: &str) -> MacroFixture {\n     MacroFixture { rules }\n }\n \n-pub(crate) fn parse_macro2(ra_fixture: &str) -> MacroFixture2 {\n-    let definition_tt = parse_macro_def_to_tt(ra_fixture);\n-    let rules = MacroDef::parse(&definition_tt).unwrap();\n-    MacroFixture2 { rules }\n-}\n-\n pub(crate) fn parse_macro_error(ra_fixture: &str) -> ParseError {\n     let definition_tt = parse_macro_rules_to_tt(ra_fixture);\n \n@@ -183,22 +178,6 @@ fn parse_macro_rules_to_tt(ra_fixture: &str) -> tt::Subtree {\n     definition_tt\n }\n \n-fn parse_macro_def_to_tt(ra_fixture: &str) -> tt::Subtree {\n-    let source_file = ast::SourceFile::parse(ra_fixture).ok().unwrap();\n-    let macro_definition =\n-        source_file.syntax().descendants().find_map(ast::MacroDef::cast).unwrap();\n-\n-    let (definition_tt, _) = syntax_node_to_token_tree(macro_definition.body().unwrap().syntax());\n-\n-    let parsed =\n-        parse_to_token_tree(&ra_fixture[macro_definition.body().unwrap().syntax().text_range()])\n-            .unwrap()\n-            .0;\n-    assert_eq!(definition_tt, parsed);\n-\n-    definition_tt\n-}\n-\n fn debug_dump_ignore_spaces(node: &syntax::SyntaxNode) -> String {\n     let mut level = 0;\n     let mut buf = String::new();"}]}