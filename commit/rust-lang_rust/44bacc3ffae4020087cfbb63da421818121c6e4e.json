{"sha": "44bacc3ffae4020087cfbb63da421818121c6e4e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0YmFjYzNmZmFlNDAyMDA4N2NmYmI2M2RhNDIxODE4MTIxYzZlNGU=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-02T12:46:02Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-09-02T21:38:21Z"}, "message": "Revert change to MaybeUninit until rustdoc bugs are fixed\n\nhttps://github.com/rust-lang/rust/issues/76106", "tree": {"sha": "a8643ecca4d2c196b14985537df2e3153af1bacb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8643ecca4d2c196b14985537df2e3153af1bacb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44bacc3ffae4020087cfbb63da421818121c6e4e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44bacc3ffae4020087cfbb63da421818121c6e4e", "html_url": "https://github.com/rust-lang/rust/commit/44bacc3ffae4020087cfbb63da421818121c6e4e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44bacc3ffae4020087cfbb63da421818121c6e4e/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59a1a05bff5a16e1361e68214485d40cffb50980", "url": "https://api.github.com/repos/rust-lang/rust/commits/59a1a05bff5a16e1361e68214485d40cffb50980", "html_url": "https://github.com/rust-lang/rust/commit/59a1a05bff5a16e1361e68214485d40cffb50980"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6a240fbb42a998228b01c44a45a9dfe3273cb7c1", "filename": "library/alloc/src/sync.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44bacc3ffae4020087cfbb63da421818121c6e4e/library%2Falloc%2Fsrc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44bacc3ffae4020087cfbb63da421818121c6e4e/library%2Falloc%2Fsrc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fsync.rs?ref=44bacc3ffae4020087cfbb63da421818121c6e4e", "patch": "@@ -443,7 +443,7 @@ impl<T> Arc<T> {\n     /// assert_eq!(*zero, 0)\n     /// ```\n     ///\n-    /// [zeroed]: mem::MaybeUninit::zeroed\n+    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed() -> Arc<mem::MaybeUninit<T>> {\n         unsafe {\n@@ -550,7 +550,7 @@ impl<T> Arc<[T]> {\n     /// assert_eq!(*values, [0, 0, 0])\n     /// ```\n     ///\n-    /// [zeroed]: mem::MaybeUninit::zeroed\n+    /// [zeroed]: ../../std/mem/union.MaybeUninit.html#method.zeroed\n     #[unstable(feature = \"new_uninit\", issue = \"63291\")]\n     pub fn new_zeroed_slice(len: usize) -> Arc<[mem::MaybeUninit<T>]> {\n         unsafe {\n@@ -577,7 +577,7 @@ impl<T> Arc<mem::MaybeUninit<T>> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::method.assume_init\n+    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n     ///\n     /// # Examples\n     ///\n@@ -616,7 +616,7 @@ impl<T> Arc<[mem::MaybeUninit<T>]> {\n     /// Calling this when the content is not yet fully initialized\n     /// causes immediate undefined behavior.\n     ///\n-    /// [`MaybeUninit::assume_init`]: mem::MaybeUninit::method.assume_init\n+    /// [`MaybeUninit::assume_init`]: ../../std/mem/union.MaybeUninit.html#method.assume_init\n     ///\n     /// # Examples\n     ///"}]}