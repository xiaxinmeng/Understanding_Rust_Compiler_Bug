{"sha": "cbde4f2c67667c717adecf3fac9df84954154fe0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZGU0ZjJjNjc2NjdjNzE3YWRlY2YzZmFjOWRmODQ5NTQxNTRmZTA=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-04-10T12:45:51Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-04-14T18:06:26Z"}, "message": "parent_node_is_if_expr now also recognizes if let as parent if", "tree": {"sha": "1c070d7f696cda2f6f14e45576604e09c98d1b3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c070d7f696cda2f6f14e45576604e09c98d1b3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbde4f2c67667c717adecf3fac9df84954154fe0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbde4f2c67667c717adecf3fac9df84954154fe0", "html_url": "https://github.com/rust-lang/rust/commit/cbde4f2c67667c717adecf3fac9df84954154fe0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbde4f2c67667c717adecf3fac9df84954154fe0/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1c675f3fc682201cdb28719133285b878e2d157", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1c675f3fc682201cdb28719133285b878e2d157", "html_url": "https://github.com/rust-lang/rust/commit/b1c675f3fc682201cdb28719133285b878e2d157"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "dfc79ac365bf134af213d6f4628b078acd5802e9", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/cbde4f2c67667c717adecf3fac9df84954154fe0/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbde4f2c67667c717adecf3fac9df84954154fe0/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=cbde4f2c67667c717adecf3fac9df84954154fe0", "patch": "@@ -290,6 +290,13 @@ fn lint_same_then_else<'tcx>(\n     }\n }\n \n+/// The return tuple is structured as follows:\n+/// 1. The amount of equal statements from the start\n+/// 2. The amount of equal statements from the end\n+/// 3. An indication if the block expressions are the same. This will also be true if both are `None`\n+///\n+/// This function can also trigger the `IF_SAME_THEN_ELSE` in which case it'll return `(0, 0, false)`\n+/// to aboard any further processing and avoid duplicate lint triggers.\n fn scan_block_for_eq(cx: &LateContext<'tcx>, blocks: &[&Block<'tcx>]) -> (usize, usize, bool) {\n     let mut start_eq = usize::MAX;\n     let mut end_eq = usize::MAX;"}, {"sha": "1ef5d9d32c5de1af8e7d848daaceb9e35a77e4ae", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 23, "deletions": 7, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/cbde4f2c67667c717adecf3fac9df84954154fe0/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbde4f2c67667c717adecf3fac9df84954154fe0/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=cbde4f2c67667c717adecf3fac9df84954154fe0", "patch": "@@ -1212,13 +1212,29 @@ pub fn parent_node_is_if_expr(expr: &Expr<'_>, cx: &LateContext<'_>) -> bool {\n     let map = cx.tcx.hir();\n     let parent_id = map.get_parent_node(expr.hir_id);\n     let parent_node = map.get(parent_id);\n-    matches!(\n-        parent_node,\n-        Node::Expr(Expr {\n-            kind: ExprKind::If(_, _, _),\n-            ..\n-        })\n-    )\n+    \n+    // Check for `if`\n+    if_chain! {\n+        if let Node::Expr(expr) = parent_node;\n+        if let ExprKind::If(_, _, _) = expr.kind;\n+        then {\n+            return true;\n+        }\n+    }\n+\n+    // Check for `if let`\n+    if_chain! {\n+        if let Node::Arm(arm) = parent_node;\n+        let arm_parent_id = map.get_parent_node(arm.hir_id);\n+        let arm_parent_node = map.get(arm_parent_id);\n+        if let Node::Expr(expr) = arm_parent_node;\n+        if let ExprKind::Match(_, _, MatchSource::IfLetDesugar { .. }) = expr.kind;\n+        then {\n+            return true;\n+        }\n+    }\n+\n+    false\n }\n \n // Finds the `#[must_use]` attribute, if any"}, {"sha": "ce2040bdeb82d934e2bbe8c7fbd7bbb63d959835", "filename": "tests/ui/branches_sharing_code/shared_at_bottom.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cbde4f2c67667c717adecf3fac9df84954154fe0/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbde4f2c67667c717adecf3fac9df84954154fe0/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fbranches_sharing_code%2Fshared_at_bottom.rs?ref=cbde4f2c67667c717adecf3fac9df84954154fe0", "patch": "@@ -206,4 +206,18 @@ fn fp_test() {\n     }\n }\n \n+fn fp_if_let_issue7054() {\n+    // This shouldn't trigger the lint\n+    let string;\n+    let _x = if let true = true {\n+        \"\"\n+    } else if true {\n+        string = \"x\".to_owned();\n+        &string\n+    } else {\n+        string = \"y\".to_owned();\n+        &string\n+    };\n+}\n+\n fn main() {}"}]}