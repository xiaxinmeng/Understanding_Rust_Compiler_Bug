{"sha": "d5b1119b16d0592459104b1a16237d27c7d738bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YjExMTliMTZkMDU5MjQ1OTEwNGIxYTE2MjM3ZDI3YzdkNzM4YmI=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2017-12-20T22:13:15Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2017-12-20T22:13:15Z"}, "message": "Const-eval TyArray trait implementors", "tree": {"sha": "00ac5b748d809ce78801b6057fd97999215e3e37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00ac5b748d809ce78801b6057fd97999215e3e37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5b1119b16d0592459104b1a16237d27c7d738bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5b1119b16d0592459104b1a16237d27c7d738bb", "html_url": "https://github.com/rust-lang/rust/commit/d5b1119b16d0592459104b1a16237d27c7d738bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5b1119b16d0592459104b1a16237d27c7d738bb/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "81622c6b02536bdcf56145beb317da0d336703c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/81622c6b02536bdcf56145beb317da0d336703c1", "html_url": "https://github.com/rust-lang/rust/commit/81622c6b02536bdcf56145beb317da0d336703c1"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "09792d29d366151f877d4594b5a77a9984634f62", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d5b1119b16d0592459104b1a16237d27c7d738bb/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5b1119b16d0592459104b1a16237d27c7d738bb/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d5b1119b16d0592459104b1a16237d27c7d738bb", "patch": "@@ -33,7 +33,6 @@ use rustc::middle::resolve_lifetime as rl;\n use rustc::middle::lang_items;\n use rustc::hir::def::{Def, CtorKind};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n-use rustc::traits::Reveal;\n use rustc::ty::subst::Substs;\n use rustc::ty::{self, Ty, AdtKind};\n use rustc::middle::stability;\n@@ -2044,7 +2043,7 @@ impl Clean<Type> for hir::Ty {\n             TySlice(ref ty) => Slice(box ty.clean(cx)),\n             TyArray(ref ty, n) => {\n                 let def_id = cx.tcx.hir.body_owner_def_id(n);\n-                let param_env = ty::ParamEnv::empty(Reveal::UserFacing);\n+                let param_env = cx.tcx.param_env(def_id);\n                 let substs = Substs::identity_for_item(cx.tcx, def_id);\n                 let n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap();\n                 let n = if let ConstVal::Integral(ConstInt::Usize(n)) = n.val {\n@@ -2173,6 +2172,11 @@ impl<'tcx> Clean<Type> for Ty<'tcx> {\n             ty::TyStr => Primitive(PrimitiveType::Str),\n             ty::TySlice(ty) => Slice(box ty.clean(cx)),\n             ty::TyArray(ty, n) => {\n+                let mut n = cx.tcx.lift(&n).unwrap();\n+                if let ConstVal::Unevaluated(def_id, substs) = n.val {\n+                    let param_env = cx.tcx.param_env(def_id);\n+                    n = cx.tcx.const_eval(param_env.and((def_id, substs))).unwrap()\n+                };\n                 let n = if let ConstVal::Integral(ConstInt::Usize(n)) = n.val {\n                     n.to_string()\n                 } else if let ConstVal::Unevaluated(def_id, _) = n.val {"}]}