{"sha": "d8b9387ace8331ce1a61d496c8f3251ac1de6928", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4YjkzODdhY2U4MzMxY2UxYTYxZDQ5NmM4ZjMyNTFhYzFkZTY5Mjg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-18T21:00:52Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:11:19Z"}, "message": "Take ConstValue::Placeholder into account in new locations", "tree": {"sha": "217493b03ad2a5a93878dfefc65ad4014f4df4ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/217493b03ad2a5a93878dfefc65ad4014f4df4ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8b9387ace8331ce1a61d496c8f3251ac1de6928", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b9387ace8331ce1a61d496c8f3251ac1de6928", "html_url": "https://github.com/rust-lang/rust/commit/d8b9387ace8331ce1a61d496c8f3251ac1de6928", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8b9387ace8331ce1a61d496c8f3251ac1de6928/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc16b0a1476bdd1aa8fafd69dc841b5f539bc94e", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc16b0a1476bdd1aa8fafd69dc841b5f539bc94e", "html_url": "https://github.com/rust-lang/rust/commit/fc16b0a1476bdd1aa8fafd69dc841b5f539bc94e"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "504b939c5f2d6bcf07d4827cb0b20db9e1595ee0", "filename": "src/librustc/ty/structural_impls.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8b9387ace8331ce1a61d496c8f3251ac1de6928/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b9387ace8331ce1a61d496c8f3251ac1de6928/src%2Flibrustc%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fstructural_impls.rs?ref=d8b9387ace8331ce1a61d496c8f3251ac1de6928", "patch": "@@ -1355,6 +1355,7 @@ impl<'tcx> TypeFoldable<'tcx> for ConstValue<'tcx> {\n             // FIXME(const_generics): implement TypeFoldable for InferConst\n             ConstValue::Infer(ic) => ConstValue::Infer(ic),\n             ConstValue::Param(p) => ConstValue::Param(p.fold_with(folder)),\n+            ConstValue::Placeholder(p) => ConstValue::Placeholder(p),\n             ConstValue::Scalar(a) => ConstValue::Scalar(a),\n             ConstValue::Slice(a, b) => ConstValue::Slice(a, b),\n             ConstValue::Unevaluated(did, substs)\n@@ -1366,8 +1367,9 @@ impl<'tcx> TypeFoldable<'tcx> for ConstValue<'tcx> {\n         match *self {\n             ConstValue::ByRef(..) => false,\n             // FIXME(const_generics): implement TypeFoldable for InferConst\n-            ConstValue::Infer(_ic) => false,\n+            ConstValue::Infer(_) => false,\n             ConstValue::Param(p) => p.visit_with(visitor),\n+            ConstValue::Placeholder(_) => false,\n             ConstValue::Scalar(_) => false,\n             ConstValue::Slice(..) => false,\n             ConstValue::Unevaluated(_, substs) => substs.visit_with(visitor),"}, {"sha": "5d98cb568bdaf74cfde2b76ea4bdf7dc71fc5eb3", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d8b9387ace8331ce1a61d496c8f3251ac1de6928/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8b9387ace8331ce1a61d496c8f3251ac1de6928/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=d8b9387ace8331ce1a61d496c8f3251ac1de6928", "patch": "@@ -11,7 +11,7 @@ use rustc::infer::InferCtxt;\n use rustc::ty::adjustment::{Adjust, Adjustment, PointerCast};\n use rustc::ty::fold::{BottomUpFolder, TypeFoldable, TypeFolder};\n use rustc::ty::subst::UnpackedKind;\n-use rustc::ty::{self, Ty, TyCtxt, Const};\n+use rustc::ty::{self, Ty, TyCtxt};\n use rustc::mir::interpret::ConstValue;\n use rustc::util::nodemap::DefIdSet;\n use rustc_data_structures::sync::Lrc;\n@@ -579,7 +579,7 @@ impl<'cx, 'gcx, 'tcx> WritebackCx<'cx, 'gcx, 'tcx> {\n                                         // parameter from the existential type\n                                         return self.tcx()\n                                             .global_tcx()\n-                                            .mk_const_param(param.index, param.name, ty);\n+                                            .mk_const_param(param.index, param.name, ct.ty);\n                                     }\n                                 }\n                             }"}]}