{"sha": "77924a9e442bfa4d3151a6b67206f31487782458", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3OTI0YTllNDQyYmZhNGQzMTUxYTZiNjcyMDZmMzE0ODc3ODI0NTg=", "commit": {"author": {"name": "rChaser53", "email": "tayoshizawa29@gmail.com", "date": "2019-04-09T20:57:16Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2019-04-09T20:57:16Z"}, "message": "create GitHub page for Configuration.md (#3485)", "tree": {"sha": "f7f1441b838bfb7098bcab4a83f0040fe4c44ece", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7f1441b838bfb7098bcab4a83f0040fe4c44ece"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77924a9e442bfa4d3151a6b67206f31487782458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77924a9e442bfa4d3151a6b67206f31487782458", "html_url": "https://github.com/rust-lang/rust/commit/77924a9e442bfa4d3151a6b67206f31487782458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77924a9e442bfa4d3151a6b67206f31487782458/comments", "author": {"login": "rchaser53", "id": 9676954, "node_id": "MDQ6VXNlcjk2NzY5NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/9676954?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rchaser53", "html_url": "https://github.com/rchaser53", "followers_url": "https://api.github.com/users/rchaser53/followers", "following_url": "https://api.github.com/users/rchaser53/following{/other_user}", "gists_url": "https://api.github.com/users/rchaser53/gists{/gist_id}", "starred_url": "https://api.github.com/users/rchaser53/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rchaser53/subscriptions", "organizations_url": "https://api.github.com/users/rchaser53/orgs", "repos_url": "https://api.github.com/users/rchaser53/repos", "events_url": "https://api.github.com/users/rchaser53/events{/privacy}", "received_events_url": "https://api.github.com/users/rchaser53/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "35504acc6f17e8f8ab51003d2b5a8366e063f1ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/35504acc6f17e8f8ab51003d2b5a8366e063f1ae", "html_url": "https://github.com/rust-lang/rust/commit/35504acc6f17e8f8ab51003d2b5a8366e063f1ae"}], "stats": {"total": 180, "additions": 180, "deletions": 0}, "files": [{"sha": "55c715526a66861a67198677a75f0536568dbbbf", "filename": "docs/index.html", "status": "added", "additions": 180, "deletions": 0, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/77924a9e442bfa4d3151a6b67206f31487782458/docs%2Findex.html", "raw_url": "https://github.com/rust-lang/rust/raw/77924a9e442bfa4d3151a6b67206f31487782458/docs%2Findex.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Findex.html?ref=77924a9e442bfa4d3151a6b67206f31487782458", "patch": "@@ -0,0 +1,180 @@\n+<!doctype html>\n+<html>\n+    <head>\n+      <meta name=\"viewport\" content=\"width=device-width\">\n+      <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/github-markdown-css/3.0.1/github-markdown.css\" />\n+      <script src=\"https://cdn.jsdelivr.net/npm/marked/marked.min.js\"></script>\n+      <script src=\"https://cdn.jsdelivr.net/npm/vue@2.6.10/dist/vue.js\"></script>\n+      <script src=\"https://cdnjs.cloudflare.com/ajax/libs/axios/0.18.0/axios.min.js\"></script>\n+      <style>\n+        @media (max-width: 767px) {\n+          .markdown-body {\n+            padding: 15px;\n+          }\n+\n+          #search {\n+            max-width: 85%;\n+          }\n+        }\n+        body {\n+          overflow: scroll;\n+        }\n+        .markdown-body {\n+          box-sizing: border-box;\n+          min-width: 200px;\n+          max-width: 980px;\n+          margin: 0 auto;\n+          padding: 45px;\n+        }\n+        #search {\n+          border: 1px solid #d1d5da;\n+          padding-left: 30px;\n+          overflow: hidden;\n+        }\n+        .searchCondition {\n+          display: flex;\n+          flex-wrap: wrap;\n+        }\n+        .searchCondition > div {\n+          margin-right: 30px;\n+        }\n+      </style>\n+    </head>\n+    <body>\n+        <div id=\"app\">\n+          <article class=\"markdown-body\">\n+            <div class=\"searchCondition\">\n+              <div>\n+                <form style=\"display:flex;\">\n+                  <label for=\"search\" style=\"margin-right: 3px;\" >search:</label>\n+                  <div style=\"position: relative;\">\n+                    <input id=\"search\" placeholder=\"Search all options\" v-model=\"searchCondition\">\n+                    <svg style=\"position: absolute; left: 8px; top: 7px;\" class=\"octicon octicon-search subnav-search-icon\" viewBox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\">\n+                      <path fill-rule=\"evenodd\" d=\"M15.7 13.3l-3.81-3.83A5.93 5.93 0 0 0 13 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 0 0 0-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z\"></path>\n+                    </svg>\n+                  </div>\n+                </form>\n+              </div>\n+              <div>\n+                  <label for=\"stable\">stable: </label>\n+                  <input type=\"checkbox\" id=\"stable\" v-model=\"shouldStable\">\n+              </div>\n+            </div>\n+            <div v-html=\"aboutHtml\"></div>\n+            <div v-html=\"configurationAboutHtml\"></div>\n+            <div v-html=\"outputHtml\"></div>\n+          </article>\n+        </div>\n+        <script>\n+            const ConfigurationMdUrl = 'https://raw.githubusercontent.com/rust-lang/rustfmt/master/Configurations.md';\n+            new Vue({\n+              el: '#app',\n+              data() {\n+                const configurationDescriptions = [];\n+                configurationDescriptions.links = {}\n+                return {\n+                  aboutHtml: '',\n+                  configurationAboutHtml: '',\n+                  searchCondition: '',\n+                  configurationDescriptions,\n+                  shouldStable: false\n+                }\n+              },\n+              computed: {\n+                outputHtml() {\n+                  const ast = this.configurationDescriptions\n+                                  .filter(({ head, text, stable }) => {\n+                                    \n+                                    if (\n+                                      text.includes(this.searchCondition) === false &&\n+                                      head.includes(this.searchCondition) === false\n+                                    ) {\n+                                      return false;\n+                                    }\n+                                    return (this.shouldStable)\n+                                      ? stable === true\n+                                      : true;\n+                                  })\n+                                  .reduce((stack, { value }) => {\n+                                    return stack.concat(value);\n+                                  }, []);\n+                  ast.links = {};\n+                  return marked.parser(ast);\n+                }\n+              },\n+              mounted: async function() {\n+                const res = await axios.get(ConfigurationMdUrl);\n+                const { \n+                  about,\n+                  configurationAbout,\n+                  configurationDescriptions\n+                } = parseMarkdownAst(res.data);\n+                this.aboutHtml = marked.parser(about);\n+                this.configurationAboutHtml = marked.parser(configurationAbout);\n+                this.configurationDescriptions = configurationDescriptions;\n+              }\n+            });\n+            const extractDepthOnes = (ast) => {\n+              return ast.reduce((stack, next) => {\n+                if (next.depth === 1) {\n+                  stack.push([]);\n+                }\n+                const lastIndex = stack.length - 1;\n+                stack[lastIndex].push(next);\n+                return stack;\n+              }, []);\n+            }\n+            const extractDepthTwos = (ast) => {\n+              return ast.map((elem) => {\n+                return elem.reduce((stack, next) => {\n+                  if (next.depth === 2) {\n+                    stack.push([]);\n+                  }\n+                  const lastIndex = stack.length - 1;\n+                  stack[lastIndex].push(next);\n+                  return stack;\n+                }, \n+                [[]]);\n+              });\n+            }\n+            const createHeadAndValue = (ast) => {\n+              return ast.map((elem) => {\n+                return elem.map((val) => {\n+                  return {\n+                    head: val[0].text,\n+                    value: val,\n+                    stable: val.some((elem) => {\n+                      return !!elem.text && elem.text.includes(\"**Stable**: Yes\")\n+                    }),\n+                    text: val.reduce((result, next) => {\n+                      return next.text != null\n+                        ? `${result} ${next.text}`\n+                        : result;\n+                    }, '')\n+                  }\n+                });\n+              })\n+            }\n+            const parseMarkdownAst = (rawMarkdown) => {\n+              const ast = marked.lexer(rawMarkdown);\n+              const depthOnes = extractDepthOnes(ast);\n+              const depthTwos = extractDepthTwos(depthOnes);\n+              const [\n+                abouts, configurations\n+              ] = createHeadAndValue(depthTwos);\n+              const about = abouts[0].value;\n+              about.links = {};\n+              const [\n+                configurationAbout, ...configurationDescriptions\n+              ] = configurations;\n+              configurationAbout.value.links = {};\n+              \n+              return {\n+                about,\n+                configurationAbout: configurationAbout.value,\n+                configurationDescriptions\n+              };\n+            }\n+        </script>\n+    </body>\n+</html>\n\\ No newline at end of file"}]}