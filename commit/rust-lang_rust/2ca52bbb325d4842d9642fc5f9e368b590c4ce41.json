{"sha": "2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYTUyYmJiMzI1ZDQ4NDJkOTY0MmZjNWY5ZTM2OGI1OTBjNGNlNDE=", "commit": {"author": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-02T22:58:42Z"}, "committer": {"name": "Paul Daniel Faria", "email": "Nashenas88@users.noreply.github.com", "date": "2020-06-27T14:16:19Z"}, "message": "Revert ide highlighting changes (addressing on another branch)", "tree": {"sha": "d123db8fa4c040deb3696d72a11d8e441dc902be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d123db8fa4c040deb3696d72a11d8e441dc902be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "html_url": "https://github.com/rust-lang/rust/commit/2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/comments", "author": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nashenas88", "id": 1673130, "node_id": "MDQ6VXNlcjE2NzMxMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1673130?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nashenas88", "html_url": "https://github.com/Nashenas88", "followers_url": "https://api.github.com/users/Nashenas88/followers", "following_url": "https://api.github.com/users/Nashenas88/following{/other_user}", "gists_url": "https://api.github.com/users/Nashenas88/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nashenas88/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nashenas88/subscriptions", "organizations_url": "https://api.github.com/users/Nashenas88/orgs", "repos_url": "https://api.github.com/users/Nashenas88/repos", "events_url": "https://api.github.com/users/Nashenas88/events{/privacy}", "received_events_url": "https://api.github.com/users/Nashenas88/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2fc92fa28cda858c25fea2e378c2eb73e7f65247", "url": "https://api.github.com/repos/rust-lang/rust/commits/2fc92fa28cda858c25fea2e378c2eb73e7f65247", "html_url": "https://github.com/rust-lang/rust/commit/2fc92fa28cda858c25fea2e378c2eb73e7f65247"}], "stats": {"total": 114, "additions": 10, "deletions": 104}, "files": [{"sha": "6aa7251b53b5b8b121625d9091a6ffe7d10a6598", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -671,10 +671,6 @@ impl Function {\n         db.function_data(self.id).params.clone()\n     }\n \n-    pub fn is_unsafe(self, db: &dyn HirDatabase) -> bool {\n-        db.function_data(self.id).is_unsafe\n-    }\n-\n     pub fn diagnostics(self, db: &dyn HirDatabase, sink: &mut DiagnosticSink) {\n         let _p = profile(\"Function::diagnostics\");\n         let infer = db.infer(self.id.into());"}, {"sha": "748f07625316e560d7315e0d0874e94faab12411", "filename": "crates/ra_ide/src/snapshots/highlight_injection.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_injection.html?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -13,7 +13,7 @@\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #E28C14; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "12a68ce625eb6e28710f1b17769269612110ef24", "filename": "crates/ra_ide/src/snapshots/highlight_strings.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_strings.html?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -13,7 +13,7 @@\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #E28C14; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "692307280d73a49c3fce183f160f1db91c38844f", "filename": "crates/ra_ide/src/snapshots/highlight_unsafe.html", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/2fc92fa28cda858c25fea2e378c2eb73e7f65247/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/2fc92fa28cda858c25fea2e378c2eb73e7f65247/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlight_unsafe.html?ref=2fc92fa28cda858c25fea2e378c2eb73e7f65247", "patch": "@@ -1,53 +0,0 @@\n-\n-<style>\n-body                { margin: 0; }\n-pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padding: 0.4em; }\n-\n-.lifetime           { color: #DFAF8F; font-style: italic; }\n-.comment            { color: #7F9F7F; }\n-.documentation      { color: #629755; }\n-.injected           { opacity: 0.65 ; }\n-.struct, .enum      { color: #7CB8BB; }\n-.enum_variant       { color: #BDE0F3; }\n-.string_literal     { color: #CC9393; }\n-.field              { color: #94BFF3; }\n-.function           { color: #93E0E3; }\n-.function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #BC8383; }\n-.parameter          { color: #94BFF3; }\n-.text               { color: #DCDCCC; }\n-.type               { color: #7CB8BB; }\n-.builtin_type       { color: #8CD0D3; }\n-.type_param         { color: #DFAF8F; }\n-.attribute          { color: #94BFF3; }\n-.numeric_literal    { color: #BFEBBF; }\n-.bool_literal       { color: #BFE6EB; }\n-.macro              { color: #94BFF3; }\n-.module             { color: #AFD8AF; }\n-.variable           { color: #DCDCCC; }\n-.format_specifier   { color: #CC696B; }\n-.mutable            { text-decoration: underline; }\n-.unresolved_reference { color: #FC5555; }\n-.escape_sequence    { color: #94BFF3; }\n-\n-.keyword            { color: #F0DFAF; font-weight: bold; }\n-.keyword.unsafe     { color: #BC8383; font-weight: bold; }\n-.control            { font-style: italic; }\n-</style>\n-<pre><code><span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_fn</span>() {}\n-\n-<span class=\"keyword\">struct</span> <span class=\"struct declaration\">HasUnsafeFn</span>;\n-\n-<span class=\"keyword\">impl</span> <span class=\"struct\">HasUnsafeFn</span> {\n-    <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function declaration unsafe\">unsafe_method</span>(&<span class=\"self_keyword\">self</span>) {}\n-}\n-\n-<span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span>() {\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\">x</span> = &<span class=\"numeric_literal\">5</span> <span class=\"keyword\">as</span> *<span class=\"keyword\">const</span> <span class=\"builtin_type\">usize</span>;\n-    <span class=\"keyword unsafe\">unsafe</span> {\n-        <span class=\"function unsafe\">unsafe_fn</span>();\n-        <span class=\"struct\">HasUnsafeFn</span>.<span class=\"function unsafe\">unsafe_method</span>();\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">y</span> = <span class=\"function unsafe\">*</span><span class=\"variable\">x</span>;\n-        <span class=\"keyword\">let</span> <span class=\"variable declaration\">z</span> = -<span class=\"variable\">x</span>;\n-    }\n-}</code></pre>\n\\ No newline at end of file"}, {"sha": "d093a6266132c089f44f2ba7bfed1cb231e1e34f", "filename": "crates/ra_ide/src/snapshots/highlighting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Fhighlighting.html?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -13,7 +13,7 @@\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #E28C14; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "192d564a6a47fb907da0cd9989b4f1c4590847e9", "filename": "crates/ra_ide/src/snapshots/rainbow_highlighting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsnapshots%2Frainbow_highlighting.html?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -13,7 +13,7 @@\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #E28C14; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "fb4f2ce388c0b35f3e884eaa4fee0ad1bed264de", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -605,13 +605,7 @@ fn highlight_name(db: &RootDatabase, def: Definition) -> Highlight {\n         Definition::Field(_) => HighlightTag::Field,\n         Definition::ModuleDef(def) => match def {\n             hir::ModuleDef::Module(_) => HighlightTag::Module,\n-            hir::ModuleDef::Function(func) => {\n-                let mut h = HighlightTag::Function.into();\n-                if func.is_unsafe(db) {\n-                    h |= HighlightModifier::Unsafe;\n-                }\n-                return h;\n-            }\n+            hir::ModuleDef::Function(_) => HighlightTag::Function,\n             hir::ModuleDef::Adt(hir::Adt::Struct(_)) => HighlightTag::Struct,\n             hir::ModuleDef::Adt(hir::Adt::Enum(_)) => HighlightTag::Enum,\n             hir::ModuleDef::Adt(hir::Adt::Union(_)) => HighlightTag::Union,"}, {"sha": "3477610e57ddcbcce9c105aeaec74b6aa2c457eb", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -72,7 +72,7 @@ pre                 { color: #DCDCCC; background: #3F3F3F; font-size: 22px; padd\n .field              { color: #94BFF3; }\n .function           { color: #93E0E3; }\n .function.unsafe    { color: #E28C14; }\n-.operator.unsafe    { color: #BC8383; }\n+.operator.unsafe    { color: #E28C14; }\n .parameter          { color: #94BFF3; }\n .text               { color: #DCDCCC; }\n .type               { color: #7CB8BB; }"}, {"sha": "b9bea47294029a7cc3226306e67b7cb364412c7f", "filename": "crates/ra_ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -25,15 +25,13 @@ pub enum HighlightTag {\n     EnumVariant,\n     EscapeSequence,\n     Field,\n-    FormatSpecifier,\n     Function,\n     Generic,\n     Keyword,\n     Lifetime,\n     Macro,\n     Module,\n     NumericLiteral,\n-    Operator,\n     SelfKeyword,\n     SelfType,\n     Static,\n@@ -45,6 +43,8 @@ pub enum HighlightTag {\n     Union,\n     Local,\n     UnresolvedReference,\n+    FormatSpecifier,\n+    Operator,\n }\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]\n@@ -77,15 +77,13 @@ impl HighlightTag {\n             HighlightTag::EnumVariant => \"enum_variant\",\n             HighlightTag::EscapeSequence => \"escape_sequence\",\n             HighlightTag::Field => \"field\",\n-            HighlightTag::FormatSpecifier => \"format_specifier\",\n             HighlightTag::Function => \"function\",\n             HighlightTag::Generic => \"generic\",\n             HighlightTag::Keyword => \"keyword\",\n             HighlightTag::Lifetime => \"lifetime\",\n             HighlightTag::Macro => \"macro\",\n             HighlightTag::Module => \"module\",\n             HighlightTag::NumericLiteral => \"numeric_literal\",\n-            HighlightTag::Operator => \"operator\",\n             HighlightTag::SelfKeyword => \"self_keyword\",\n             HighlightTag::SelfType => \"self_type\",\n             HighlightTag::Static => \"static\",\n@@ -97,6 +95,8 @@ impl HighlightTag {\n             HighlightTag::Union => \"union\",\n             HighlightTag::Local => \"variable\",\n             HighlightTag::UnresolvedReference => \"unresolved_reference\",\n+            HighlightTag::FormatSpecifier => \"format_specifier\",\n+            HighlightTag::Operator => \"operator\",\n         }\n     }\n }"}, {"sha": "b7fad97197f55ba13ad72b78aa5b6c0266ef6f2f", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ca52bbb325d4842d9642fc5f9e368b590c4ce41/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=2ca52bbb325d4842d9642fc5f9e368b590c4ce41", "patch": "@@ -370,34 +370,3 @@ fn check_highlighting(ra_fixture: &str, snapshot: &str, rainbow: bool) {\n     fs::write(dst_file, &actual_html).unwrap();\n     assert_eq_text!(expected_html, actual_html);\n }\n-\n-#[test]\n-fn test_unsafe_highlighting() {\n-    let (analysis, file_id) = single_file(\n-        r#\"\n-unsafe fn unsafe_fn() {}\n-\n-struct HasUnsafeFn;\n-\n-impl HasUnsafeFn {\n-    unsafe fn unsafe_method(&self) {}\n-}\n-\n-fn main() {\n-    let x = &5 as *const usize;\n-    unsafe {\n-        unsafe_fn();\n-        HasUnsafeFn.unsafe_method();\n-        let y = *x;\n-        let z = -x;\n-    }\n-}\n-\"#\n-        .trim(),\n-    );\n-    let dst_file = project_dir().join(\"crates/ra_ide/src/snapshots/highlight_unsafe.html\");\n-    let actual_html = &analysis.highlight_as_html(file_id, false).unwrap();\n-    let expected_html = &read_text(&dst_file);\n-    fs::write(dst_file, &actual_html).unwrap();\n-    assert_eq_text!(expected_html, actual_html);\n-}"}]}