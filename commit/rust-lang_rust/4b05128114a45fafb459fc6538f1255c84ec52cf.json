{"sha": "4b05128114a45fafb459fc6538f1255c84ec52cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRiMDUxMjgxMTRhNDVmYWZiNDU5ZmM2NTM4ZjEyNTVjODRlYzUyY2Y=", "commit": {"author": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2018-09-15T12:03:02Z"}, "committer": {"name": "Vitaly _Vi Shukela", "email": "vi0oss@gmail.com", "date": "2018-09-16T18:43:06Z"}, "message": "Attach Applicability to multipart_suggestion and span_suggestions", "tree": {"sha": "69679c276886bcf691b3798a683bbd608cfeec1e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69679c276886bcf691b3798a683bbd608cfeec1e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b05128114a45fafb459fc6538f1255c84ec52cf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABEIAB0WIQQzEHnM5f9ubG8rMBnAlyIdbgPfaAUCW56kOgAKCRDAlyIdbgPf\naBVzAPwI1oUBunApdN2axmsdp8ACXDT+d/SpLAdFu56brIerVAD7B50GMfBUvO4r\n1KbJBJa+iCvSXQbpy//S6poZ1GLpkEo=\n=h310\n-----END PGP SIGNATURE-----", "payload": "tree 69679c276886bcf691b3798a683bbd608cfeec1e\nparent 2f5cb6dbdc7aff9d4c5991c9eea78b5d9daed815\nauthor Vitaly _Vi Shukela <vi0oss@gmail.com> 1537012982 +0300\ncommitter Vitaly _Vi Shukela <vi0oss@gmail.com> 1537123386 +0300\n\nAttach Applicability to multipart_suggestion and span_suggestions\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b05128114a45fafb459fc6538f1255c84ec52cf", "html_url": "https://github.com/rust-lang/rust/commit/4b05128114a45fafb459fc6538f1255c84ec52cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b05128114a45fafb459fc6538f1255c84ec52cf/comments", "author": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vi", "id": 173219, "node_id": "MDQ6VXNlcjE3MzIxOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/173219?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vi", "html_url": "https://github.com/vi", "followers_url": "https://api.github.com/users/vi/followers", "following_url": "https://api.github.com/users/vi/following{/other_user}", "gists_url": "https://api.github.com/users/vi/gists{/gist_id}", "starred_url": "https://api.github.com/users/vi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vi/subscriptions", "organizations_url": "https://api.github.com/users/vi/orgs", "repos_url": "https://api.github.com/users/vi/repos", "events_url": "https://api.github.com/users/vi/events{/privacy}", "received_events_url": "https://api.github.com/users/vi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f5cb6dbdc7aff9d4c5991c9eea78b5d9daed815", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f5cb6dbdc7aff9d4c5991c9eea78b5d9daed815", "html_url": "https://github.com/rust-lang/rust/commit/2f5cb6dbdc7aff9d4c5991c9eea78b5d9daed815"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "75b9d28316008b9cef30d818c82a4b0dfd2eac9a", "filename": "src/librustc_typeck/check/compare_method.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcompare_method.rs?ref=4b05128114a45fafb459fc6538f1255c84ec52cf", "patch": "@@ -801,7 +801,7 @@ fn compare_synthetic_generics<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                             .span_to_snippet(trait_m.generics.span)\n                             .ok()?;\n \n-                        err.multipart_suggestion(\n+                        err.multipart_suggestion_with_applicability(\n                             \"try changing the `impl Trait` argument to a generic parameter\",\n                             vec![\n                                 // replace `impl Trait` with `T`\n@@ -811,6 +811,7 @@ fn compare_synthetic_generics<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                                 // of the generics, but it works for the common case\n                                 (generics_span, new_generics),\n                             ],\n+                            Applicability::Unspecified,\n                         );\n                         Some(())\n                     })();\n@@ -872,14 +873,15 @@ fn compare_synthetic_generics<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                             .span_to_snippet(bounds)\n                             .ok()?;\n \n-                        err.multipart_suggestion(\n+                        err.multipart_suggestion_with_applicability(\n                             \"try removing the generic parameter and using `impl Trait` instead\",\n                             vec![\n                                 // delete generic parameters\n                                 (impl_m.generics.span, String::new()),\n                                 // replace param usage with `impl Trait`\n                                 (span, format!(\"impl {}\", bounds)),\n                             ],\n+                            Applicability::Unspecified,\n                         );\n                         Some(())\n                     })();"}, {"sha": "13f3bdbb10f079f0e62c34ed9d55cb5f9d6bfed9", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=4b05128114a45fafb459fc6538f1255c84ec52cf", "patch": "@@ -132,9 +132,11 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                 let expr_text = print::to_string(print::NO_ANN, |s| s.print_expr(expr));\n                 let suggestions = compatible_variants.iter()\n                     .map(|v| format!(\"{}({})\", v, expr_text)).collect::<Vec<_>>();\n-                err.span_suggestions(expr.span,\n+                err.span_suggestions_with_applicability(expr.span,\n                                      \"try using a variant of the expected type\",\n-                                     suggestions);\n+                                     suggestions,\n+                                     Applicability::Unspecified,\n+                                     );\n             }\n         }\n "}, {"sha": "f029ae2d954e06b25cc9262b05d30ddb3bbd46ee", "filename": "src/librustc_typeck/check/op.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibrustc_typeck%2Fcheck%2Fop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fop.rs?ref=4b05128114a45fafb459fc6538f1255c84ec52cf", "patch": "@@ -464,10 +464,12 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                     is_assign,\n                 ) {\n                     (Ok(l), Ok(r), false) => {\n-                        err.multipart_suggestion(msg, vec![\n+                        err.multipart_suggestion_with_applicability(msg, vec![\n                             (lhs_expr.span, format!(\"{}.to_owned()\", l)),\n                             (rhs_expr.span, format!(\"&{}\", r)),\n-                        ]);\n+                        ],\n+                        Applicability::Unspecified,\n+                        );\n                     }\n                     _ => {\n                         err.help(msg);"}, {"sha": "b4ad777e6d7b88b583aa9e08f8a20c40031917fb", "filename": "src/libsyntax_ext/format.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibsyntax_ext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b05128114a45fafb459fc6538f1255c84ec52cf/src%2Flibsyntax_ext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_ext%2Fformat.rs?ref=4b05128114a45fafb459fc6538f1255c84ec52cf", "patch": "@@ -996,9 +996,10 @@ pub fn expand_preparsed_format_args(ecx: &mut ExtCtxt,\n                         ));\n                     }\n                     if suggestions.len() > 0 {\n-                        diag.multipart_suggestion(\n+                        diag.multipart_suggestion_with_applicability(\n                             \"format specifiers use curly braces\",\n                             suggestions,\n+                            Applicability::Unspecified,\n                         );\n                     }\n                 }};"}]}