{"sha": "8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiM2NlOWNhNjhhMGU0NGNhZjJkNDZiYTQwMjViYTNjNjk2ODQ5YjQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-03T15:37:37Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-03T22:10:08Z"}, "message": "always create a category, even it is just \"boring\"", "tree": {"sha": "5fcb95c53afdbd33b01e7abea5c3abd9399a0ee9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fcb95c53afdbd33b01e7abea5c3abd9399a0ee9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4", "html_url": "https://github.com/rust-lang/rust/commit/8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aae177e0054540056f788c39c20a3612d91886e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/aae177e0054540056f788c39c20a3612d91886e5", "html_url": "https://github.com/rust-lang/rust/commit/aae177e0054540056f788c39c20a3612d91886e5"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "5a86f2432d807303ee030f1b1c88d1c950b118b9", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fmod.rs?ref=8b3ce9ca68a0e44caf2d46ba4025ba3c696849b4", "patch": "@@ -140,13 +140,13 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         &self,\n         index: ConstraintIndex,\n         mir: &Mir<'tcx>,\n-    ) -> Option<(ConstraintCategory, Span)> {\n+    ) -> (ConstraintCategory, Span) {\n         let constraint = self.constraints[index];\n         let span = constraint.locations.span(mir);\n-        let location = constraint.locations.from_location()?;\n+        let location = constraint.locations.from_location().unwrap_or(Location::START);\n \n         if !self.constraint_is_interesting(index) {\n-            return Some((ConstraintCategory::Boring, span));\n+            return (ConstraintCategory::Boring, span);\n         }\n \n         let data = &mir[location.block];\n@@ -178,7 +178,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n             }\n         };\n \n-        Some((category, span))\n+        (category, span)\n     }\n \n     /// Report an error because the universal region `fr` was required to outlive\n@@ -231,7 +231,7 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n \n         // Classify each of the constraints along the path.\n         let mut categorized_path: Vec<(ConstraintCategory, Span)> = path.iter()\n-            .filter_map(|&index| self.classify_constraint(index, mir))\n+            .map(|&index| self.classify_constraint(index, mir))\n             .collect();\n         debug!(\"report_error: categorized_path={:?}\", categorized_path);\n "}]}