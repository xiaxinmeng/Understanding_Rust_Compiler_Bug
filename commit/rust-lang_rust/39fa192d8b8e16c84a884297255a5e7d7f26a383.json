{"sha": "39fa192d8b8e16c84a884297255a5e7d7f26a383", "node_id": "C_kwDOAAsO6NoAKDM5ZmExOTJkOGI4ZTE2Yzg0YTg4NDI5NzI1NWE1ZTdkN2YyNmEzODM", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T15:06:32Z"}, "committer": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2023-04-25T15:22:09Z"}, "message": "Fix `ui/io-checks/inaccessbile-temp-dir.rs` test", "tree": {"sha": "113898f62dbc2b1010842af76b32dfd654bc81c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/113898f62dbc2b1010842af76b32dfd654bc81c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39fa192d8b8e16c84a884297255a5e7d7f26a383", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39fa192d8b8e16c84a884297255a5e7d7f26a383", "html_url": "https://github.com/rust-lang/rust/commit/39fa192d8b8e16c84a884297255a5e7d7f26a383", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39fa192d8b8e16c84a884297255a5e7d7f26a383/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91b61a4ad618c1abc2af43a58695de185ef1e513", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b61a4ad618c1abc2af43a58695de185ef1e513", "html_url": "https://github.com/rust-lang/rust/commit/91b61a4ad618c1abc2af43a58695de185ef1e513"}], "stats": {"total": 75, "additions": 32, "deletions": 43}, "files": [{"sha": "f701dde829b3099387974250ded6b25f022ac95e", "filename": "tests/run-make/inaccessbile-temp-dir/Makefile", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/39fa192d8b8e16c84a884297255a5e7d7f26a383/tests%2Frun-make%2Finaccessbile-temp-dir%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/39fa192d8b8e16c84a884297255a5e7d7f26a383/tests%2Frun-make%2Finaccessbile-temp-dir%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Finaccessbile-temp-dir%2FMakefile?ref=39fa192d8b8e16c84a884297255a5e7d7f26a383", "patch": "@@ -0,0 +1,31 @@\n+# only-linux\n+\n+include ../tools.mk\n+\n+# Issue #66530: We would ICE if someone compiled with `-o /dev/null`,\n+# because we would try to generate auxiliary files in `/dev/` (which\n+# at least the OS X file system rejects).\n+#\n+# An attempt to `-Ztemps-dir` into a directory we cannot write into should\n+# indeed be an error; but not an ICE.\n+#\n+# However, some folks run tests as root, which can write `/dev/` and end\n+# up clobbering `/dev/null`. Instead we'll use an inaccessible path, which\n+# also used to ICE, but even root can't magically write there.\n+#\n+# Note that `-Ztemps-dir` uses `create_dir_all` so it is not sufficient to\n+# use a directory with non-existing parent like `/does-not-exist/output`.\n+\n+all:\n+\t# Create an inaccessible directory\n+\tmkdir $(TMPDIR)/inaccessible\n+\tchmod 000 $(TMPDIR)/inaccessible\n+\n+\t# Run rustc with `-Ztemps-dir` set to a directory \n+\t# *inside* the inaccessible one, so that it can't create it\n+\t$(RUSTC) program.rs -Ztemps-dir=$(TMPDIR)/inaccessible/tmp 2>&1 \\\n+\t\t| $(CGREP) \"failed to find or create the directory specified by `--temps-dir`\"\n+\n+\t# Make the inaccessible directory accessible,\n+\t# so that compiletest can delete the temp dir\n+\tchmod +rw $(TMPDIR)/inaccessible"}, {"sha": "f328e4d9d04c31d0d70d16d21a07d1613be9d577", "filename": "tests/run-make/inaccessbile-temp-dir/program.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/39fa192d8b8e16c84a884297255a5e7d7f26a383/tests%2Frun-make%2Finaccessbile-temp-dir%2Fprogram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39fa192d8b8e16c84a884297255a5e7d7f26a383/tests%2Frun-make%2Finaccessbile-temp-dir%2Fprogram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-make%2Finaccessbile-temp-dir%2Fprogram.rs?ref=39fa192d8b8e16c84a884297255a5e7d7f26a383", "patch": "@@ -0,0 +1 @@\n+fn main() {}"}, {"sha": "9c0aa01357217294e70c38958be09ae0b411920c", "filename": "tests/ui/io-checks/inaccessbile-temp-dir.rs", "status": "removed", "additions": 0, "deletions": 39, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/91b61a4ad618c1abc2af43a58695de185ef1e513/tests%2Fui%2Fio-checks%2Finaccessbile-temp-dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91b61a4ad618c1abc2af43a58695de185ef1e513/tests%2Fui%2Fio-checks%2Finaccessbile-temp-dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fio-checks%2Finaccessbile-temp-dir.rs?ref=91b61a4ad618c1abc2af43a58695de185ef1e513", "patch": "@@ -1,39 +0,0 @@\n-// Issue #66530: We would ICE if someone compiled with `-o /dev/null`,\n-// because we would try to generate auxiliary files in `/dev/` (which\n-// at least the OS X file system rejects).\n-//\n-// An attempt to `-o` into a directory we cannot write into should indeed\n-// be an error; but not an ICE.\n-//\n-// However, some folks run tests as root, which can write `/dev/` and end\n-// up clobbering `/dev/null`. Instead we'll use a non-existent path, which\n-// also used to ICE, but even root can't magically write there.\n-\n-// compile-flags: -Z temps-dir=/does-not-exist/output\n-\n-// The error-pattern check occurs *before* normalization, and the error patterns\n-// are wildly different between build environments. So this is a cop-out (and we\n-// rely on the checking of the normalized stderr output as our actual\n-// \"verification\" of the diagnostic).\n-\n-// error-pattern: error\n-\n-// On Mac OS X, we get an error like the below\n-// normalize-stderr-test \"failed to write bytecode to /does-not-exist/output.non_ice_error_on_worker_io_fail.*\" -> \"io error modifying /does-not-exist/\"\n-\n-// On Linux, we get an error like the below\n-// normalize-stderr-test \"couldn't create a temp dir.*\" -> \"io error modifying /does-not-exist/\"\n-\n-// ignore-windows - this is a unix-specific test\n-// ignore-emscripten - the file-system issues do not replicate here\n-// ignore-wasm - the file-system issues do not replicate here\n-// ignore-arm - the file-system issues do not replicate here, at least on armhf-gnu\n-\n-#![crate_type = \"lib\"]\n-#![cfg_attr(not(feature = \"std\"), no_std)]\n-pub mod task {\n-    pub mod __internal {\n-        use crate::task::Waker;\n-    }\n-    pub use core::task::Waker;\n-}"}, {"sha": "2fc5f93ef791a11ed06c38dfc7f3bbf7034de4ba", "filename": "tests/ui/io-checks/inaccessbile-temp-dir.stderr", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/91b61a4ad618c1abc2af43a58695de185ef1e513/tests%2Fui%2Fio-checks%2Finaccessbile-temp-dir.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/91b61a4ad618c1abc2af43a58695de185ef1e513/tests%2Fui%2Fio-checks%2Finaccessbile-temp-dir.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fio-checks%2Finaccessbile-temp-dir.stderr?ref=91b61a4ad618c1abc2af43a58695de185ef1e513", "patch": "@@ -1,4 +0,0 @@\n-error: failed to find or create the directory specified by `--temps-dir`\n-\n-error: aborting due to previous error\n-"}]}