{"sha": "dc4ea800b7126e0751ba75eae095cc2a805dc8da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjNGVhODAwYjcxMjZlMDc1MWJhNzVlYWUwOTVjYzJhODA1ZGM4ZGE=", "commit": {"author": {"name": "r00ster91", "email": "r00ster91@protonmail.com", "date": "2021-06-04T12:32:47Z"}, "committer": {"name": "r00ster91", "email": "r00ster91@protonmail.com", "date": "2021-06-04T12:32:47Z"}, "message": "Replace some std::iter::repeat with str::repeat", "tree": {"sha": "d79d5b8703f7aeb3fd5b6e78785a51a647f76c63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d79d5b8703f7aeb3fd5b6e78785a51a647f76c63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc4ea800b7126e0751ba75eae095cc2a805dc8da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc4ea800b7126e0751ba75eae095cc2a805dc8da", "html_url": "https://github.com/rust-lang/rust/commit/dc4ea800b7126e0751ba75eae095cc2a805dc8da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc4ea800b7126e0751ba75eae095cc2a805dc8da/comments", "author": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "committer": {"login": "r00ster91", "id": 35064754, "node_id": "MDQ6VXNlcjM1MDY0NzU0", "avatar_url": "https://avatars.githubusercontent.com/u/35064754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/r00ster91", "html_url": "https://github.com/r00ster91", "followers_url": "https://api.github.com/users/r00ster91/followers", "following_url": "https://api.github.com/users/r00ster91/following{/other_user}", "gists_url": "https://api.github.com/users/r00ster91/gists{/gist_id}", "starred_url": "https://api.github.com/users/r00ster91/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/r00ster91/subscriptions", "organizations_url": "https://api.github.com/users/r00ster91/orgs", "repos_url": "https://api.github.com/users/r00ster91/repos", "events_url": "https://api.github.com/users/r00ster91/events{/privacy}", "received_events_url": "https://api.github.com/users/r00ster91/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5", "html_url": "https://github.com/rust-lang/rust/commit/4f3b49fffa13518aa6006762c0eb6851c0c0b2d5"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "aca96e06ef2e779c9be14100770758b1ed88781e", "filename": "clippy_lints/src/mem_discriminant.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc4ea800b7126e0751ba75eae095cc2a805dc8da/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc4ea800b7126e0751ba75eae095cc2a805dc8da/clippy_lints%2Fsrc%2Fmem_discriminant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmem_discriminant.rs?ref=dc4ea800b7126e0751ba75eae095cc2a805dc8da", "patch": "@@ -7,7 +7,6 @@ use rustc_errors::Applicability;\n use rustc_hir::{BorrowKind, Expr, ExprKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n-use std::iter;\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for calls of `mem::discriminant()` on a non-enum type.\n@@ -67,7 +66,7 @@ impl<'tcx> LateLintPass<'tcx> for MemDiscriminant {\n                                 }\n                             }\n \n-                            let derefs: String = iter::repeat('*').take(derefs_needed).collect();\n+                            let derefs = \"*\".repeat(derefs_needed);\n                             diag.span_suggestion(\n                                 param.span,\n                                 \"try dereferencing\","}, {"sha": "1a32af5dc7a386fdd5e03c3832e8c105d6fc47f8", "filename": "clippy_lints/src/methods/clone_on_copy.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dc4ea800b7126e0751ba75eae095cc2a805dc8da/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc4ea800b7126e0751ba75eae095cc2a805dc8da/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fclone_on_copy.rs?ref=dc4ea800b7126e0751ba75eae095cc2a805dc8da", "patch": "@@ -8,7 +8,6 @@ use rustc_hir::{BindingAnnotation, Expr, ExprKind, MatchSource, Node, PatKind};\n use rustc_lint::LateContext;\n use rustc_middle::ty::{self, adjustment::Adjust};\n use rustc_span::symbol::{sym, Symbol};\n-use std::iter;\n \n use super::CLONE_DOUBLE_REF;\n use super::CLONE_ON_COPY;\n@@ -54,8 +53,8 @@ pub(super) fn check(cx: &LateContext<'_>, expr: &Expr<'_>, method_name: Symbol,\n                             ty = inner;\n                             n += 1;\n                         }\n-                        let refs: String = iter::repeat('&').take(n + 1).collect();\n-                        let derefs: String = iter::repeat('*').take(n).collect();\n+                        let refs = \"&\".repeat(n + 1);\n+                        let derefs = \"*\".repeat(n);\n                         let explicit = format!(\"<{}{}>::clone({})\", refs, ty, snip);\n                         diag.span_suggestion(\n                             expr.span,"}]}