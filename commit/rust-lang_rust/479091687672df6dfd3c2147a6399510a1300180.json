{"sha": "479091687672df6dfd3c2147a6399510a1300180", "node_id": "C_kwDOAAsO6NoAKDQ3OTA5MTY4NzY3MmRmNmRmZDNjMjE0N2E2Mzk5NTEwYTEzMDAxODA", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-05T10:59:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-05T10:59:38Z"}, "message": "Auto merge of #13139 - Austaras:enum, r=Veykril\n\nSuggest struct when completing enum\n\ncloses #13107", "tree": {"sha": "9ad95abbdfbb436913977f5114fdb37042ba767a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ad95abbdfbb436913977f5114fdb37042ba767a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/479091687672df6dfd3c2147a6399510a1300180", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/479091687672df6dfd3c2147a6399510a1300180", "html_url": "https://github.com/rust-lang/rust/commit/479091687672df6dfd3c2147a6399510a1300180", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/479091687672df6dfd3c2147a6399510a1300180/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1c26530ecf23971e371c470d147592d6e617561", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c26530ecf23971e371c470d147592d6e617561", "html_url": "https://github.com/rust-lang/rust/commit/a1c26530ecf23971e371c470d147592d6e617561"}, {"sha": "748567cba574e0b15359f11f74b649927d313d05", "url": "https://api.github.com/repos/rust-lang/rust/commits/748567cba574e0b15359f11f74b649927d313d05", "html_url": "https://github.com/rust-lang/rust/commit/748567cba574e0b15359f11f74b649927d313d05"}], "stats": {"total": 47, "additions": 43, "deletions": 4}, "files": [{"sha": "8e26d889f9b63c8ce28ffe210da9a433aa6c126a", "filename": "crates/ide-completion/src/tests/expression.rs", "status": "modified", "additions": 39, "deletions": 0, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/479091687672df6dfd3c2147a6399510a1300180/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479091687672df6dfd3c2147a6399510a1300180/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Ftests%2Fexpression.rs?ref=479091687672df6dfd3c2147a6399510a1300180", "patch": "@@ -671,6 +671,45 @@ fn main() {\n     );\n }\n \n+#[test]\n+fn varaiant_with_struct() {\n+    check_empty(\n+        r#\"\n+pub struct YoloVariant {\n+    pub f: usize\n+}\n+\n+pub enum HH {\n+    Yolo(YoloVariant),\n+}\n+\n+fn brr() {\n+    let t = HH::Yolo(Y$0);\n+}\n+\"#,\n+        expect![[r#\"\n+            en HH\n+            fn brr()           fn()\n+            st YoloVariant\n+            st YoloVariant {\u2026} YoloVariant { f: usize }\n+            bt u32\n+            kw crate::\n+            kw false\n+            kw for\n+            kw if\n+            kw if let\n+            kw loop\n+            kw match\n+            kw return\n+            kw self::\n+            kw true\n+            kw unsafe\n+            kw while\n+            kw while let\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn return_unit_block() {\n     cov_mark::check!(return_unit_block);"}, {"sha": "7109c6fd188f58df18f7d283b02af6a7b3bbe140", "filename": "crates/ide-db/src/active_parameter.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/479091687672df6dfd3c2147a6399510a1300180/crates%2Fide-db%2Fsrc%2Factive_parameter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/479091687672df6dfd3c2147a6399510a1300180/crates%2Fide-db%2Fsrc%2Factive_parameter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-db%2Fsrc%2Factive_parameter.rs?ref=479091687672df6dfd3c2147a6399510a1300180", "patch": "@@ -12,7 +12,7 @@ use crate::RootDatabase;\n #[derive(Debug)]\n pub struct ActiveParameter {\n     pub ty: Type,\n-    pub pat: Either<ast::SelfParam, ast::Pat>,\n+    pub pat: Option<Either<ast::SelfParam, ast::Pat>>,\n }\n \n impl ActiveParameter {\n@@ -27,12 +27,12 @@ impl ActiveParameter {\n             return None;\n         }\n         let (pat, ty) = params.swap_remove(idx);\n-        pat.map(|pat| ActiveParameter { ty, pat })\n+        Some(ActiveParameter { ty, pat })\n     }\n \n     pub fn ident(&self) -> Option<ast::Name> {\n-        self.pat.as_ref().right().and_then(|param| match param {\n-            ast::Pat::IdentPat(ident) => ident.name(),\n+        self.pat.as_ref().and_then(|param| match param {\n+            Either::Right(ast::Pat::IdentPat(ident)) => ident.name(),\n             _ => None,\n         })\n     }"}]}