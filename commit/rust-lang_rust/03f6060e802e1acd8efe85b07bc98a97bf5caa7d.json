{"sha": "03f6060e802e1acd8efe85b07bc98a97bf5caa7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzZjYwNjBlODAyZTFhY2Q4ZWZlODViMDdiYzk4YTk3YmY1Y2FhN2Q=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-23T12:25:26Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-11-23T12:27:04Z"}, "message": "Make type_kind properly recognize ty_ptr as sendable", "tree": {"sha": "b38f4d1c601ad379c7029e8357dbaf32fb2d6b2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b38f4d1c601ad379c7029e8357dbaf32fb2d6b2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03f6060e802e1acd8efe85b07bc98a97bf5caa7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03f6060e802e1acd8efe85b07bc98a97bf5caa7d", "html_url": "https://github.com/rust-lang/rust/commit/03f6060e802e1acd8efe85b07bc98a97bf5caa7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03f6060e802e1acd8efe85b07bc98a97bf5caa7d/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9fb3719ded8d6938c21710d4b487ab1328c7dd5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9fb3719ded8d6938c21710d4b487ab1328c7dd5e", "html_url": "https://github.com/rust-lang/rust/commit/9fb3719ded8d6938c21710d4b487ab1328c7dd5e"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "33d261dc83fdec817cd89825062f321bb017cf2f", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/03f6060e802e1acd8efe85b07bc98a97bf5caa7d/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03f6060e802e1acd8efe85b07bc98a97bf5caa7d/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=03f6060e802e1acd8efe85b07bc98a97bf5caa7d", "patch": "@@ -986,7 +986,7 @@ fn type_kind(cx: ctxt, ty: t) -> ast::kind {\n     let result = alt struct(cx, ty) {\n       // Scalar and unique types are sendable\n       ty_nil. | ty_bot. | ty_bool. | ty_int. | ty_uint. | ty_float. |\n-      ty_machine(_) | ty_char. | ty_native(_) |\n+      ty_machine(_) | ty_char. | ty_native(_) | ty_ptr(_) |\n       ty_type. | ty_str. | ty_native_fn(_, _) { ast::kind_sendable }\n       // FIXME: obj is broken for now, since we aren't asserting\n       // anything about its fields.\n@@ -1003,8 +1003,8 @@ fn type_kind(cx: ctxt, ty: t) -> ast::kind {\n       // Those with refcounts-to-inner raise pinned to shared,\n       // lower unique to shared. Therefore just set result to shared.\n       ty_box(mt) { ast::kind_copyable }\n-      // Pointers and unique containers raise pinned to shared.\n-      ty_ptr(tm) | ty_vec(tm) | ty_uniq(tm) { type_kind(cx, tm.ty) }\n+      // Boxes and unique pointers raise pinned to shared.\n+      ty_vec(tm) | ty_uniq(tm) { type_kind(cx, tm.ty) }\n       // Records lower to the lowest of their members.\n       ty_rec(flds) {\n         let lowest = ast::kind_sendable;"}]}