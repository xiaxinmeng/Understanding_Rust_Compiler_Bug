{"sha": "6747d0738a88e7a94171ec7b3f42c837352bc5be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NDdkMDczOGE4OGU3YTk0MTcxZWM3YjNmNDJjODM3MzUyYmM1YmU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-12T08:02:26Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-15T06:56:33Z"}, "message": "Handle more cases in the heap lints", "tree": {"sha": "e4c3d977e230937ec91a09b4ac8c9d3e63c18fb6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4c3d977e230937ec91a09b4ac8c9d3e63c18fb6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6747d0738a88e7a94171ec7b3f42c837352bc5be", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6747d0738a88e7a94171ec7b3f42c837352bc5be", "html_url": "https://github.com/rust-lang/rust/commit/6747d0738a88e7a94171ec7b3f42c837352bc5be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6747d0738a88e7a94171ec7b3f42c837352bc5be/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f6537fed4417134d72200ab3d46b124a4f2a34c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f6537fed4417134d72200ab3d46b124a4f2a34c", "html_url": "https://github.com/rust-lang/rust/commit/0f6537fed4417134d72200ab3d46b124a4f2a34c"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "5128f90a0a5a3b60f1ec3b57cda24c6ece6cb122", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -770,9 +770,21 @@ fn check_heap_type(cx: &Context, span: Span, ty: ty::t) {\n         let mut n_uniq = 0;\n         ty::fold_ty(cx.tcx, ty, |t| {\n             match ty::get(t).sty {\n-              ty::ty_box(_) => n_box += 1,\n-              ty::ty_uniq(_) => n_uniq += 1,\n-              _ => ()\n+                ty::ty_box(_) | ty::ty_estr(ty::vstore_box) |\n+                ty::ty_evec(_, ty::vstore_box) |\n+                ty::ty_trait(_, _, ty::BoxTraitStore, _, _) => {\n+                    n_box += 1;\n+                }\n+                ty::ty_uniq(_) | ty::ty_estr(ty::vstore_uniq) |\n+                ty::ty_evec(_, ty::vstore_uniq) |\n+                ty::ty_trait(_, _, ty::UniqTraitStore, _, _) => {\n+                    n_uniq += 1;\n+                }\n+                ty::ty_closure(ref c) if c.sigil == ast::OwnedSigil => {\n+                    n_uniq += 1;\n+                }\n+\n+                _ => ()\n             };\n             t\n         });"}, {"sha": "c02da1beeb7323391b33cd6cf655d7bd2f5ff863", "filename": "src/test/compile-fail/lint-heap-memory.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-heap-memory.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -19,6 +19,20 @@ struct Foo {\n struct Bar { x: ~int } //~ ERROR type uses owned\n \n fn main() {\n-    let _x : Bar = Bar {x : ~10};\n+    let _x : Bar = Bar {x : ~10}; //~ ERROR type uses owned\n+\n+    @2; //~ ERROR type uses managed\n+    @[1]; //~ ERROR type uses managed\n+    //~^ ERROR type uses managed\n+    fn f(_: @Clone) {} //~ ERROR type uses managed\n+    @\"\"; //~ ERROR type uses managed\n+    //~^ ERROR type uses managed\n+\n+    ~2; //~ ERROR type uses owned\n+    ~[1]; //~ ERROR type uses owned\n+    //~^ ERROR type uses owned\n+    fn g(_: ~Clone) {} //~ ERROR type uses owned\n+    ~\"\"; //~ ERROR type uses owned\n     //~^ ERROR type uses owned\n+    proc() {}; //~ ERROR type uses owned\n }"}, {"sha": "85b6fd03a273fe568f7a6588b479b64c50b8c2c5", "filename": "src/test/debug-info/borrowed-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fborrowed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fborrowed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fborrowed-struct.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -43,6 +43,7 @@\n // debugger:print *unique_val_interior_ref_2\n // check:$10 = 26.5\n \n+#[feature(managed_boxes)];\n #[allow(unused_variable)];\n \n struct SomeStruct {"}, {"sha": "b760126207bba0d403f6dd43ce7a8dab55f69fb4", "filename": "src/test/debug-info/box.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fbox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fbox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fbox.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -22,6 +22,7 @@\n // debugger:print d->val\n // check:$4 = false\n \n+#[feature(managed_boxes)];\n #[allow(unused_variable)];\n \n fn main() {"}, {"sha": "5a7eacb3eea52aba06d4ae52ad9b22c31d3264b3", "filename": "src/test/debug-info/boxed-struct.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fboxed-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fboxed-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fboxed-struct.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -25,6 +25,7 @@\n // debugger:print managed_dtor->val\n // check:$4 = {x = 33, y = 333, z = 3333, w = 33333}\n \n+#[feature(managed_boxes)];\n #[allow(unused_variable)];\n \n struct StructWithSomePadding {"}, {"sha": "16498952f28e3f73c6d0987f4f328eacad8d3cae", "filename": "src/test/debug-info/destructured-local.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fdestructured-local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fdestructured-local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fdestructured-local.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -123,6 +123,7 @@\n // debugger:print *nn\n // check:$43 = 56\n \n+#[feature(managed_boxes)];\n #[allow(unused_variable)];\n \n struct Struct {"}, {"sha": "80f2031b92ebc86edaed630ee54da50bd7409378", "filename": "src/test/debug-info/generic-method-on-generic-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fgeneric-method-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fgeneric-method-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fgeneric-method-on-generic-struct.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = {-16, 16.5}\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct Struct<T> {\n     x: T\n }"}, {"sha": "8c94f2ea970bc47734ee7a842fb579052509a4a4", "filename": "src/test/debug-info/managed-enum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmanaged-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmanaged-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmanaged-enum.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -23,7 +23,7 @@\n // check:$3 = {-9747455}\n \n #[allow(unused_variable)];\n-#[feature(struct_variant)];\n+#[feature(struct_variant, managed_boxes)];\n \n // The first element is to ensure proper alignment, irrespective of the machines word size. Since\n // the size of the discriminant value is machine dependent, this has be taken into account when"}, {"sha": "622786fcb53c2df8319ba6e6c99a4040351b50b3", "filename": "src/test/debug-info/method-on-enum.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-enum.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,7 @@\n // check:$21 = -16\n // debugger:continue\n \n+#[feature(managed_boxes)];\n #[feature(struct_variant)];\n \n enum Enum {"}, {"sha": "99ed66cc03b52f237912ac99dcacd21516e9b6fd", "filename": "src/test/debug-info/method-on-generic-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-generic-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-generic-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-generic-struct.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = -16\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct Struct<T> {\n     x: T\n }"}, {"sha": "9c2afadaef386d16266d9cd2996396bb2022fbc8", "filename": "src/test/debug-info/method-on-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-struct.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = -16\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct Struct {\n     x: int\n }"}, {"sha": "6b67dcc18a9aacb7db3b102ae2d4e608289717fb", "filename": "src/test/debug-info/method-on-trait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-trait.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = -16\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct Struct {\n     x: int\n }"}, {"sha": "46177664a11eb2dbbc22a5a9106bf8d49c27716d", "filename": "src/test/debug-info/method-on-tuple-struct.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fmethod-on-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fmethod-on-tuple-struct.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = -16\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct TupleStruct(int, f64);\n \n impl TupleStruct {"}, {"sha": "f9726c5329b1cfec89bf664bf43e865848846b1f", "filename": "src/test/debug-info/self-in-default-method.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fself-in-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fself-in-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fself-in-default-method.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = -16\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct Struct {\n     x: int\n }"}, {"sha": "1b1e0ccf652483cae1d5cffe7a35ce5507b879a7", "filename": "src/test/debug-info/self-in-generic-default-method.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fself-in-generic-default-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fself-in-generic-default-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fself-in-generic-default-method.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -94,6 +94,8 @@\n // check:$21 = {-16, 16.5}\n // debugger:continue\n \n+#[feature(managed_boxes)];\n+\n struct Struct {\n     x: int\n }"}, {"sha": "1032356689f305eba5c643c05c753aeb13a383b6", "filename": "src/test/debug-info/var-captured-in-nested-closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fvar-captured-in-nested-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fvar-captured-in-nested-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fvar-captured-in-nested-closure.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -49,6 +49,7 @@\n // check:$14 = 8\n // debugger:continue\n \n+#[feature(managed_boxes)];\n #[allow(unused_variable)];\n \n struct Struct {"}, {"sha": "53287a8511bce43ce7217004584ca981da02a2d1", "filename": "src/test/debug-info/var-captured-in-stack-closure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fvar-captured-in-stack-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fdebug-info%2Fvar-captured-in-stack-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebug-info%2Fvar-captured-in-stack-closure.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -28,6 +28,7 @@\n // debugger:print managed->val\n // check:$6 = 7\n \n+#[feature(managed_boxes)];\n #[allow(unused_variable)];\n \n struct Struct {"}, {"sha": "8d6eaef8b340f1319f597759a491f5fc6aec809d", "filename": "src/test/pretty/block-disambig.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fpretty%2Fblock-disambig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6747d0738a88e7a94171ec7b3f42c837352bc5be/src%2Ftest%2Fpretty%2Fblock-disambig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fblock-disambig.rs?ref=6747d0738a88e7a94171ec7b3f42c837352bc5be", "patch": "@@ -12,6 +12,8 @@\n // previously ambiguous (e.g. 'if true { } *val;' gets parsed as a\n // binop)\n \n+#[feature(managed_boxes)];\n+\n fn test1() { let val = @0; { } *val; }\n \n fn test2() -> int { let val = @0; { } *val }"}]}