{"sha": "5b9799bba45df2205e16008c7d9709c370e04ca9", "node_id": "C_kwDOAAsO6NoAKDViOTc5OWJiYTQ1ZGYyMjA1ZTE2MDA4YzdkOTcwOWMzNzBlMDRjYTk", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-09T14:36:05Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-03-09T14:36:05Z"}, "message": "Specify proc-macro crate type for proc-macro hir_def test fixtures", "tree": {"sha": "5de25f113db404a63e902809ffddccdb2cd155d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5de25f113db404a63e902809ffddccdb2cd155d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b9799bba45df2205e16008c7d9709c370e04ca9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9799bba45df2205e16008c7d9709c370e04ca9", "html_url": "https://github.com/rust-lang/rust/commit/5b9799bba45df2205e16008c7d9709c370e04ca9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b9799bba45df2205e16008c7d9709c370e04ca9/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3edc5dcea865e4c6ca774ed747b90bfb1ffbd877", "url": "https://api.github.com/repos/rust-lang/rust/commits/3edc5dcea865e4c6ca774ed747b90bfb1ffbd877", "html_url": "https://github.com/rust-lang/rust/commit/3edc5dcea865e4c6ca774ed747b90bfb1ffbd877"}], "stats": {"total": 100, "additions": 52, "deletions": 48}, "files": [{"sha": "222e524d6c027290636e7733babc4ea082cd1ecd", "filename": "crates/hir_def/src/nameres/tests/macros.rs", "status": "modified", "additions": 52, "deletions": 48, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/5b9799bba45df2205e16008c7d9709c370e04ca9/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b9799bba45df2205e16008c7d9709c370e04ca9/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=5b9799bba45df2205e16008c7d9709c370e04ca9", "patch": "@@ -809,6 +809,7 @@ pub macro derive($item:item) {}\n struct S;\n \n //- /proc.rs crate:proc\n+#![crate_type=\"proc-macro\"]\n #[proc_macro_derive(Derive, attributes(helper))]\n fn derive() {}\n         \"#,\n@@ -886,29 +887,30 @@ indirect_macro!();\n #[test]\n fn resolves_proc_macros() {\n     check(\n-        r\"\n-        struct TokenStream;\n+        r#\"\n+#![crate_type=\"proc-macro\"]\n+struct TokenStream;\n \n-        #[proc_macro]\n-        pub fn function_like_macro(args: TokenStream) -> TokenStream {\n-            args\n-        }\n+#[proc_macro]\n+pub fn function_like_macro(args: TokenStream) -> TokenStream {\n+    args\n+}\n \n-        #[proc_macro_attribute]\n-        pub fn attribute_macro(_args: TokenStream, item: TokenStream) -> TokenStream {\n-            item\n-        }\n+#[proc_macro_attribute]\n+pub fn attribute_macro(_args: TokenStream, item: TokenStream) -> TokenStream {\n+    item\n+}\n \n-        #[proc_macro_derive(DummyTrait)]\n-        pub fn derive_macro(_item: TokenStream) -> TokenStream {\n-            TokenStream\n-        }\n+#[proc_macro_derive(DummyTrait)]\n+pub fn derive_macro(_item: TokenStream) -> TokenStream {\n+    TokenStream\n+}\n \n-        #[proc_macro_derive(AnotherTrait, attributes(helper_attr))]\n-        pub fn derive_macro_2(_item: TokenStream) -> TokenStream {\n-            TokenStream\n-        }\n-        \",\n+#[proc_macro_derive(AnotherTrait, attributes(helper_attr))]\n+pub fn derive_macro_2(_item: TokenStream) -> TokenStream {\n+    TokenStream\n+}\n+\"#,\n         expect![[r#\"\n             crate\n             AnotherTrait: m\n@@ -927,33 +929,34 @@ fn proc_macro_censoring() {\n     // Make sure that only proc macros are publicly exported from proc-macro crates.\n \n     check(\n-        r\"\n-        //- /main.rs crate:main deps:macros\n-        pub use macros::*;\n+        r#\"\n+//- /main.rs crate:main deps:macros\n+pub use macros::*;\n \n-        //- /macros.rs crate:macros\n-        pub struct TokenStream;\n+//- /macros.rs crate:macros\n+#![crate_type=\"proc-macro\"]\n+pub struct TokenStream;\n \n-        #[proc_macro]\n-        pub fn function_like_macro(args: TokenStream) -> TokenStream {\n-            args\n-        }\n+#[proc_macro]\n+pub fn function_like_macro(args: TokenStream) -> TokenStream {\n+    args\n+}\n \n-        #[proc_macro_attribute]\n-        pub fn attribute_macro(_args: TokenStream, item: TokenStream) -> TokenStream {\n-            item\n-        }\n+#[proc_macro_attribute]\n+pub fn attribute_macro(_args: TokenStream, item: TokenStream) -> TokenStream {\n+    item\n+}\n \n-        #[proc_macro_derive(DummyTrait)]\n-        pub fn derive_macro(_item: TokenStream) -> TokenStream {\n-            TokenStream\n-        }\n+#[proc_macro_derive(DummyTrait)]\n+pub fn derive_macro(_item: TokenStream) -> TokenStream {\n+    TokenStream\n+}\n \n-        #[macro_export]\n-        macro_rules! mbe {\n-            () => {};\n-        }\n-        \",\n+#[macro_export]\n+macro_rules! mbe {\n+    () => {};\n+}\n+\"#,\n         expect![[r#\"\n             crate\n             DummyTrait: m\n@@ -966,14 +969,15 @@ fn proc_macro_censoring() {\n #[test]\n fn collects_derive_helpers() {\n     let def_map = compute_crate_def_map(\n-        r\"\n-        struct TokenStream;\n+        r#\"\n+#![crate_type=\"proc-macro\"]\n+struct TokenStream;\n \n-        #[proc_macro_derive(AnotherTrait, attributes(helper_attr))]\n-        pub fn derive_macro_2(_item: TokenStream) -> TokenStream {\n-            TokenStream\n-        }\n-        \",\n+#[proc_macro_derive(AnotherTrait, attributes(helper_attr))]\n+pub fn derive_macro_2(_item: TokenStream) -> TokenStream {\n+    TokenStream\n+}\n+\"#,\n     );\n \n     assert_eq!(def_map.exported_derives.len(), 1);"}]}