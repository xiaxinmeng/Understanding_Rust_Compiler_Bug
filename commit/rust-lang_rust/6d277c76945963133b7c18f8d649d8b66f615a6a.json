{"sha": "6d277c76945963133b7c18f8d649d8b66f615a6a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkMjc3Yzc2OTQ1OTYzMTMzYjdjMThmOGQ2NDlkOGI2NmY2MTVhNmE=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-04-26T19:06:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-26T19:06:48Z"}, "message": "Rollup merge of #84551 - r00ster91:patch-4, r=yaahc\n\nUnify the docs of std::env::{args_os, args} more\n\nI noticed that `args_os` was missing some information and I thought it should mention `args` for when you want more safety just like how `args` mentions `args_os` if you don't want it to panic on invalid Unicode.", "tree": {"sha": "510e842c267456c58f83459b91215b870fcd2e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/510e842c267456c58f83459b91215b870fcd2e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d277c76945963133b7c18f8d649d8b66f615a6a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJghw9JCRBK7hj4Ov3rIwAADc8IAH7x+ir3UNG5IalGcAwIMUzE\nSQtvrO4Sh7MJanYnS7jugiU6O3TkrIeFNAbvdyTGgaEjDOQXOBbxIsc0xmI/bjmu\n9h8fKtlt+epYlZxBMd1qFmtHvqpTgRJK/9Xr7hB8GAmwZ23dIpuutz4ZywbGS0aC\nzDHacA04ofB40fU/kecukBnG3ANKMHRU+VJqhnBbCMrt5Od3C1abAtUAoMUCsQvQ\nVGOLAn3vidNlY8bhI+FfWPoHgH46DMcdXClPfW7OAjGzAOWPnRP81rjGfiyfWjj0\nDOhHcBSqkM5OLR7RjZCVREXlXuXOyRfS06+PHdpPdC3QQj4hKJhNRMnBhAcyx+Y=\n=r7C0\n-----END PGP SIGNATURE-----\n", "payload": "tree 510e842c267456c58f83459b91215b870fcd2e59\nparent 9758d532f029af1dddf567c0f87ed5947297b4c2\nparent 82b6983acabb61e9e720ec362440fc556fd069c2\nauthor Mara Bos <m-ou.se@m-ou.se> 1619464008 +0200\ncommitter GitHub <noreply@github.com> 1619464008 +0200\n\nRollup merge of #84551 - r00ster91:patch-4, r=yaahc\n\nUnify the docs of std::env::{args_os, args} more\n\nI noticed that `args_os` was missing some information and I thought it should mention `args` for when you want more safety just like how `args` mentions `args_os` if you don't want it to panic on invalid Unicode.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d277c76945963133b7c18f8d649d8b66f615a6a", "html_url": "https://github.com/rust-lang/rust/commit/6d277c76945963133b7c18f8d649d8b66f615a6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d277c76945963133b7c18f8d649d8b66f615a6a/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9758d532f029af1dddf567c0f87ed5947297b4c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9758d532f029af1dddf567c0f87ed5947297b4c2", "html_url": "https://github.com/rust-lang/rust/commit/9758d532f029af1dddf567c0f87ed5947297b4c2"}, {"sha": "82b6983acabb61e9e720ec362440fc556fd069c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b6983acabb61e9e720ec362440fc556fd069c2", "html_url": "https://github.com/rust-lang/rust/commit/82b6983acabb61e9e720ec362440fc556fd069c2"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "116a37249e392c42e5bae62aec1dcb5037202bc3", "filename": "library/std/src/env.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6d277c76945963133b7c18f8d649d8b66f615a6a/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d277c76945963133b7c18f8d649d8b66f615a6a/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=6d277c76945963133b7c18f8d649d8b66f615a6a", "patch": "@@ -710,14 +710,14 @@ pub struct ArgsOs {\n /// passed as-is.\n ///\n /// On glibc Linux systems, arguments are retrieved by placing a function in `.init_array`.\n-/// Glibc passes `argc`, `argv`, and `envp` to functions in `.init_array`, as a non-standard\n+/// glibc passes `argc`, `argv`, and `envp` to functions in `.init_array`, as a non-standard\n /// extension. This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it\n /// does on macOS and Windows.\n ///\n /// # Panics\n ///\n /// The returned iterator will panic during iteration if any argument to the\n-/// process is not valid unicode. If this is not desired,\n+/// process is not valid Unicode. If this is not desired,\n /// use the [`args_os`] function instead.\n ///\n /// # Examples\n@@ -735,17 +735,25 @@ pub fn args() -> Args {\n     Args { inner: args_os() }\n }\n \n-/// Returns the arguments which this program was started with (normally passed\n+/// Returns the arguments that this program was started with (normally passed\n /// via the command line).\n ///\n /// The first element is traditionally the path of the executable, but it can be\n-/// set to arbitrary text, and it may not even exist, so this property should\n+/// set to arbitrary text, and may not even exist. This means this property should\n /// not be relied upon for security purposes.\n ///\n-/// On glibc Linux systems, arguments are retrieved by placing a function in \".init_array\".\n-/// Glibc passes argc, argv, and envp to functions in \".init_array\", as a non-standard extension.\n-/// This allows `std::env::args` to work even in a `cdylib` or `staticlib`, as it does on macOS\n-/// and Windows.\n+/// On Unix systems the shell usually expands unquoted arguments with glob patterns\n+/// (such as `*` and `?`). On Windows this is not done, and such arguments are\n+/// passed as-is.\n+///\n+/// On glibc Linux systems, arguments are retrieved by placing a function in `.init_array`.\n+/// glibc passes `argc`, `argv`, and `envp` to functions in `.init_array`, as a non-standard\n+/// extension. This allows `std::env::args_os` to work even in a `cdylib` or `staticlib`, as it\n+/// does on macOS and Windows.\n+///\n+/// Note that the returned iterator will not check if the arguments to the\n+/// process are valid Unicode. To ensure UTF-8 validity,\n+/// use the [`args`] function instead.\n ///\n /// # Examples\n ///"}]}