{"sha": "37261a904ce2fbd4137180500c57f75f29945828", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3MjYxYTkwNGNlMmZiZDQxMzcxODA1MDBjNTdmNzVmMjk5NDU4Mjg=", "commit": {"author": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T05:51:01Z"}, "committer": {"name": "rail", "email": "12975677+rail-rain@users.noreply.github.com", "date": "2020-04-27T05:51:01Z"}, "message": "Print 0 when `end` and `offset` is 0, and also simplify the suggestion", "tree": {"sha": "6bf803976ebb3af94d775efbcb6463dd3a0ba9cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6bf803976ebb3af94d775efbcb6463dd3a0ba9cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37261a904ce2fbd4137180500c57f75f29945828", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37261a904ce2fbd4137180500c57f75f29945828", "html_url": "https://github.com/rust-lang/rust/commit/37261a904ce2fbd4137180500c57f75f29945828", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37261a904ce2fbd4137180500c57f75f29945828/comments", "author": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rail-rain", "id": 12975677, "node_id": "MDQ6VXNlcjEyOTc1Njc3", "avatar_url": "https://avatars.githubusercontent.com/u/12975677?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rail-rain", "html_url": "https://github.com/rail-rain", "followers_url": "https://api.github.com/users/rail-rain/followers", "following_url": "https://api.github.com/users/rail-rain/following{/other_user}", "gists_url": "https://api.github.com/users/rail-rain/gists{/gist_id}", "starred_url": "https://api.github.com/users/rail-rain/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rail-rain/subscriptions", "organizations_url": "https://api.github.com/users/rail-rain/orgs", "repos_url": "https://api.github.com/users/rail-rain/repos", "events_url": "https://api.github.com/users/rail-rain/events{/privacy}", "received_events_url": "https://api.github.com/users/rail-rain/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad9ad6f402e3e15706519e59ef111a941d28d5af", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad9ad6f402e3e15706519e59ef111a941d28d5af", "html_url": "https://github.com/rust-lang/rust/commit/ad9ad6f402e3e15706519e59ef111a941d28d5af"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "6b5a8498dc929121ab3cb7f88334f96406022fb4", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/37261a904ce2fbd4137180500c57f75f29945828/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37261a904ce2fbd4137180500c57f75f29945828/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=37261a904ce2fbd4137180500c57f75f29945828", "patch": "@@ -959,7 +959,7 @@ fn detect_manual_memcpy<'a, 'tcx>(\n         if let PatKind::Binding(_, canonical_id, _, _) = pat.kind {\n             let print_sum = |arg1: &Offset, arg2: &Offset| -> String {\n                 match (&arg1.value[..], arg1.negate, &arg2.value[..], arg2.negate) {\n-                    (\"0\", _, \"0\", _) => \"\".into(),\n+                    (\"0\", _, \"0\", _) => \"0\".into(),\n                     (\"0\", _, x, false) | (x, false, \"0\", _) => x.into(),\n                     (\"0\", _, x, true) => format!(\"-{}\", x),\n                     (x, false, y, false) => format!(\"({} + {})\", x, y),\n@@ -981,6 +981,15 @@ fn detect_manual_memcpy<'a, 'tcx>(\n                 }\n             };\n \n+            let print_offset = |start_str: &Offset, inline_offset: &Offset| -> String {\n+                let offset = print_sum(start_str, inline_offset);\n+                if offset.as_str() == \"0\" {\n+                    \"\".into()\n+                } else {\n+                    offset\n+                }\n+            };\n+\n             let print_limit = |end: &Option<&Expr<'_>>, offset: Offset, var_name: &str| {\n                 if let Some(end) = *end {\n                     if_chain! {\n@@ -1020,9 +1029,9 @@ fn detect_manual_memcpy<'a, 'tcx>(\n                 .into_iter()\n                 .map(|(dst_var, src_var)| {\n                     let start_str = Offset::positive(snippet(cx, start.span, \"\").to_string());\n-                    let dst_offset = print_sum(&start_str, &dst_var.offset);\n+                    let dst_offset = print_offset(&start_str, &dst_var.offset);\n                     let dst_limit = print_limit(end, dst_var.offset, &dst_var.var_name);\n-                    let src_offset = print_sum(&start_str, &src_var.offset);\n+                    let src_offset = print_offset(&start_str, &src_var.offset);\n                     let src_limit = print_limit(end, src_var.offset, &src_var.var_name);\n                     let dst = if dst_offset == \"\" && dst_limit == \"\" {\n                         dst_var.var_name"}, {"sha": "ec80f6070d62216f59bb4da8d9e4296e098a4184", "filename": "tests/ui/manual_memcpy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37261a904ce2fbd4137180500c57f75f29945828/tests%2Fui%2Fmanual_memcpy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/37261a904ce2fbd4137180500c57f75f29945828/tests%2Fui%2Fmanual_memcpy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmanual_memcpy.stderr?ref=37261a904ce2fbd4137180500c57f75f29945828", "patch": "@@ -58,13 +58,13 @@ error: it looks like you're manually copying between slices\n   --> $DIR/manual_memcpy.rs:94:14\n    |\n LL |     for i in from..from + src.len() {\n-   |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + src.len()].clone_from_slice(&src[0..(from + src.len() - from)])`\n+   |              ^^^^^^^^^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + src.len()].clone_from_slice(&src[..(from + src.len() - from)])`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/manual_memcpy.rs:98:14\n    |\n LL |     for i in from..from + 3 {\n-   |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + 3].clone_from_slice(&src[0..(from + 3 - from)])`\n+   |              ^^^^^^^^^^^^^^ help: try replacing the loop by: `dst[from..from + 3].clone_from_slice(&src[..(from + 3 - from)])`\n \n error: it looks like you're manually copying between slices\n   --> $DIR/manual_memcpy.rs:105:14"}]}