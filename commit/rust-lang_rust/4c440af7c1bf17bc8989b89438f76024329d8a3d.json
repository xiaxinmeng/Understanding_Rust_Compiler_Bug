{"sha": "4c440af7c1bf17bc8989b89438f76024329d8a3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjNDQwYWY3YzFiZjE3YmM4OTg5Yjg5NDM4Zjc2MDI0MzI5ZDhhM2Q=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-02T13:03:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-02T13:03:16Z"}, "message": "Merge pull request #1183 from bjorn3/full_aarch64_support\n\nAArch64 support on Linux", "tree": {"sha": "8bdb34baab03c934b74a80d66f918997708c195d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bdb34baab03c934b74a80d66f918997708c195d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c440af7c1bf17bc8989b89438f76024329d8a3d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg3w6UCRBK7hj4Ov3rIwAARRMIAFzUnmpFvhcNooH73MYB3NIe\naSk00qVdnA9OYrLVvNOJEHlklkQxmgJcjLRuJCpqlHclCJea9cEaY1vwvtnracFq\nq5AgBpDpchmMXpPT5+OFT3EOUdIsQ6Yiluv5Q1ZczET71IqZ8gLsTefvSQANRF+v\nHmYw/te3EnzmzeOOziQxC/gY6bOtb1/hGyE/8eBAeK6Ylt4TZ2XQ5QttHCpDxGQ2\nQpTEo/WTr/AJ0q+NG3uyIrDtfP4TNnxYX80PwXgKgjIrrtN4FzHZgwSUAR2dQCw6\nSq2vw2bcJIktRiSj/qSXozpOOGRtrjiRiKKA2ivYJ3z+yI8LzuOAZi77Gw2mnz8=\n=sMzV\n-----END PGP SIGNATURE-----\n", "payload": "tree 8bdb34baab03c934b74a80d66f918997708c195d\nparent ae98d5a78dfe5f9d45d69d49f4f0776bdf8afab5\nparent 3dc9ec246c4eabd9907636ccd1bca85b3df56d53\nauthor bjorn3 <bjorn3@users.noreply.github.com> 1625230996 +0200\ncommitter GitHub <noreply@github.com> 1625230996 +0200\n\nMerge pull request #1183 from bjorn3/full_aarch64_support\n\nAArch64 support on Linux"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c440af7c1bf17bc8989b89438f76024329d8a3d", "html_url": "https://github.com/rust-lang/rust/commit/4c440af7c1bf17bc8989b89438f76024329d8a3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c440af7c1bf17bc8989b89438f76024329d8a3d/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ae98d5a78dfe5f9d45d69d49f4f0776bdf8afab5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ae98d5a78dfe5f9d45d69d49f4f0776bdf8afab5", "html_url": "https://github.com/rust-lang/rust/commit/ae98d5a78dfe5f9d45d69d49f4f0776bdf8afab5"}, {"sha": "3dc9ec246c4eabd9907636ccd1bca85b3df56d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dc9ec246c4eabd9907636ccd1bca85b3df56d53", "html_url": "https://github.com/rust-lang/rust/commit/3dc9ec246c4eabd9907636ccd1bca85b3df56d53"}], "stats": {"total": 79, "additions": 54, "deletions": 25}, "files": [{"sha": "f81ac87726052c7c16e78869bd4baf2866be1fa1", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4c440af7c1bf17bc8989b89438f76024329d8a3d/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4c440af7c1bf17bc8989b89438f76024329d8a3d/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=4c440af7c1bf17bc8989b89438f76024329d8a3d", "patch": "@@ -19,6 +19,9 @@ jobs:\n           - os: ubuntu-latest\n             env:\n               TARGET_TRIPLE: x86_64-pc-windows-gnu\n+          - os: ubuntu-latest\n+            env:\n+              TARGET_TRIPLE: aarch64-unknown-linux-gnu\n \n     steps:\n     - uses: actions/checkout@v2\n@@ -49,12 +52,20 @@ jobs:\n         sudo apt-get install -y gcc-mingw-w64-x86-64 wine-stable\n         rustup target add x86_64-pc-windows-gnu\n \n+    - name: Install AArch64 toolchain and qemu\n+      if: matrix.os == 'ubuntu-latest' && matrix.env.TARGET_TRIPLE == 'aarch64-unknown-linux-gnu'\n+      run: |\n+        sudo apt-get install -y gcc-aarch64-linux-gnu qemu-user\n+\n     - name: Prepare dependencies\n       run: |\n         git config --global user.email \"user@example.com\"\n         git config --global user.name \"User\"\n         ./y.rs prepare\n \n+    - name: Build\n+      run: ./y.rs build --sysroot none\n+\n     - name: Test\n       env:\n         TARGET_TRIPLE: ${{ matrix.env.TARGET_TRIPLE }}"}, {"sha": "f62e59cefc2414c23ecb8a3ca3418d87d4e7f7c5", "filename": ".vscode/settings.json", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4c440af7c1bf17bc8989b89438f76024329d8a3d/.vscode%2Fsettings.json", "raw_url": "https://github.com/rust-lang/rust/raw/4c440af7c1bf17bc8989b89438f76024329d8a3d/.vscode%2Fsettings.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.vscode%2Fsettings.json?ref=4c440af7c1bf17bc8989b89438f76024329d8a3d", "patch": "@@ -3,7 +3,7 @@\n     \"rust-analyzer.diagnostics.disabled\": [\"unresolved-extern-crate\", \"unresolved-macro-call\"],\n     \"rust-analyzer.assist.importGranularity\": \"module\",\n     \"rust-analyzer.assist.importEnforceGranularity\": true,\n-    \"rust-analyzer.assist.importPrefix\": \"by_crate\",\n+    \"rust-analyzer.assist.importPrefix\": \"crate\",\n     \"rust-analyzer.cargo.runBuildScripts\": true,\n     \"rust-analyzer.linkedProjects\": [\n         \"./Cargo.toml\","}, {"sha": "748faeaffbf1a88ffff378254c9ccaa537b4bb34", "filename": "Cargo.lock", "status": "modified", "additions": 15, "deletions": 14, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/4c440af7c1bf17bc8989b89438f76024329d8a3d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4c440af7c1bf17bc8989b89438f76024329d8a3d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=4c440af7c1bf17bc8989b89438f76024329d8a3d", "patch": "@@ -34,15 +34,15 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n [[package]]\n name = \"cranelift-bforest\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"cranelift-entity\",\n ]\n \n [[package]]\n name = \"cranelift-codegen\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"cranelift-bforest\",\n  \"cranelift-codegen-meta\",\n@@ -58,7 +58,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-codegen-meta\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"cranelift-codegen-shared\",\n  \"cranelift-entity\",\n@@ -67,17 +67,17 @@ dependencies = [\n [[package]]\n name = \"cranelift-codegen-shared\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n \n [[package]]\n name = \"cranelift-entity\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n \n [[package]]\n name = \"cranelift-frontend\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"cranelift-codegen\",\n  \"log\",\n@@ -88,7 +88,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-jit\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -105,7 +105,7 @@ dependencies = [\n [[package]]\n name = \"cranelift-module\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -116,16 +116,17 @@ dependencies = [\n [[package]]\n name = \"cranelift-native\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"cranelift-codegen\",\n+ \"libc\",\n  \"target-lexicon\",\n ]\n \n [[package]]\n name = \"cranelift-object\"\n version = \"0.75.0\"\n-source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#3d56728b8698d538a00d9f1c295149bbf5e8b78b\"\n+source = \"git+https://github.com/bytecodealliance/wasmtime.git?branch=main#f2d2f3a841f4da8188df0a5f1033b5bdeaf02bcd\"\n dependencies = [\n  \"anyhow\",\n  \"cranelift-codegen\",\n@@ -171,9 +172,9 @@ dependencies = [\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.86\"\n+version = \"0.2.97\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b7282d924be3275cec7f6756ff4121987bc6481325397dde6ba3e7802b1a8b1c\"\n+checksum = \"12b8adadd720df158f4d70dfe7ccc6adb0472d7c55ca83445f6a5ab3e36f8fb6\"\n \n [[package]]\n name = \"libloading\"\n@@ -211,9 +212,9 @@ checksum = \"b16bd47d9e329435e309c58469fe0791c2d0d1ba96ec0954152a5ae2b04387dc\"\n \n [[package]]\n name = \"object\"\n-version = \"0.25.2\"\n+version = \"0.25.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f8bc1d42047cf336f0f939c99e97183cf31551bf0f2865a2ec9c8d91fd4ffb5e\"\n+checksum = \"a38f2be3697a57b4060074ff41b44c16870d916ad7877c17696e063257482bc7\"\n dependencies = [\n  \"crc32fast\",\n  \"indexmap\","}, {"sha": "72d6a0265efbb8a1dbe02beb2de236e4ef312434", "filename": "build_system/build_sysroot.rs", "status": "modified", "additions": 18, "deletions": 3, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4c440af7c1bf17bc8989b89438f76024329d8a3d/build_system%2Fbuild_sysroot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c440af7c1bf17bc8989b89438f76024329d8a3d/build_system%2Fbuild_sysroot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fbuild_sysroot.rs?ref=4c440af7c1bf17bc8989b89438f76024329d8a3d", "patch": "@@ -115,10 +115,16 @@ pub(crate) fn build_sysroot(\n             }\n         }\n         SysrootKind::Clif => {\n-            build_clif_sysroot_for_triple(channel, target_dir, target_triple);\n+            build_clif_sysroot_for_triple(channel, target_dir, host_triple, None);\n \n             if host_triple != target_triple {\n-                build_clif_sysroot_for_triple(channel, target_dir, host_triple);\n+                // When cross-compiling it is often necessary to manually pick the right linker\n+                let linker = if target_triple == \"aarch64-unknown-linux-gnu\" {\n+                    Some(\"aarch64-linux-gnu-gcc\")\n+                } else {\n+                    None\n+                };\n+                build_clif_sysroot_for_triple(channel, target_dir, target_triple, linker);\n             }\n \n             // Copy std for the host to the lib dir. This is necessary for the jit mode to find\n@@ -133,7 +139,12 @@ pub(crate) fn build_sysroot(\n     }\n }\n \n-fn build_clif_sysroot_for_triple(channel: &str, target_dir: &Path, triple: &str) {\n+fn build_clif_sysroot_for_triple(\n+    channel: &str,\n+    target_dir: &Path,\n+    triple: &str,\n+    linker: Option<&str>,\n+) {\n     let build_dir = Path::new(\"build_sysroot\").join(\"target\").join(triple).join(channel);\n \n     let keep_sysroot =\n@@ -155,6 +166,10 @@ fn build_clif_sysroot_for_triple(channel: &str, target_dir: &Path, triple: &str)\n         build_cmd.arg(\"--release\");\n         rustflags.push_str(\" -Zmir-opt-level=3\");\n     }\n+    if let Some(linker) = linker {\n+        use std::fmt::Write;\n+        write!(rustflags, \" -Clinker={}\", linker).unwrap();\n+    }\n     build_cmd.env(\"RUSTFLAGS\", rustflags);\n     build_cmd.env(\n         \"RUSTC\","}, {"sha": "d997ce6d1b379044fd3675420e9837739ef0aa10", "filename": "example/mini_core_hello_world.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4c440af7c1bf17bc8989b89438f76024329d8a3d/example%2Fmini_core_hello_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c440af7c1bf17bc8989b89438f76024329d8a3d/example%2Fmini_core_hello_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/example%2Fmini_core_hello_world.rs?ref=4c440af7c1bf17bc8989b89438f76024329d8a3d", "patch": "@@ -292,7 +292,7 @@ fn main() {\n     #[cfg(not(any(jit, windows)))]\n     test_tls();\n \n-    #[cfg(all(not(jit), target_os = \"linux\"))]\n+    #[cfg(all(not(jit), target_arch = \"x86_64\", target_os = \"linux\"))]\n     unsafe {\n         global_asm_test();\n     }\n@@ -303,12 +303,12 @@ fn main() {\n     assert_eq!(*REF1, *REF2);\n }\n \n-#[cfg(all(not(jit), target_os = \"linux\"))]\n+#[cfg(all(not(jit), target_arch = \"x86_64\", target_os = \"linux\"))]\n extern \"C\" {\n     fn global_asm_test();\n }\n \n-#[cfg(all(not(jit), target_os = \"linux\"))]\n+#[cfg(all(not(jit), target_arch = \"x86_64\", target_os = \"linux\"))]\n global_asm! {\n     \"\n     .global global_asm_test"}, {"sha": "50317b192edf7f70ca727e2223e5862e1247d662", "filename": "src/lib.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4c440af7c1bf17bc8989b89438f76024329d8a3d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c440af7c1bf17bc8989b89438f76024329d8a3d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4c440af7c1bf17bc8989b89438f76024329d8a3d", "patch": "@@ -287,10 +287,12 @@ fn build_isa(sess: &Session, backend_config: &BackendConfig) -> Box<dyn isa::Tar\n         }\n         None => {\n             let mut builder =\n-                cranelift_codegen::isa::lookup_variant(target_triple, variant).unwrap();\n-            // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n-            // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n-            builder.enable(\"nehalem\").unwrap();\n+                cranelift_codegen::isa::lookup_variant(target_triple.clone(), variant).unwrap();\n+            if target_triple.architecture == target_lexicon::Architecture::X86_64 {\n+                // Don't use \"haswell\" as the default, as it implies `has_lzcnt`.\n+                // macOS CI is still at Ivy Bridge EP, so `lzcnt` is interpreted as `bsr`.\n+                builder.enable(\"nehalem\").unwrap();\n+            }\n             builder\n         }\n     };"}]}