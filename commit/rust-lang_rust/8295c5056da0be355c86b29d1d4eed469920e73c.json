{"sha": "8295c5056da0be355c86b29d1d4eed469920e73c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyOTVjNTA1NmRhMGJlMzU1Yzg2YjI5ZDFkNGVlZDQ2OTkyMGU3M2M=", "commit": {"author": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-08-24T19:41:23Z"}, "committer": {"name": "Ulrik Sverdrup", "email": "bluss@users.noreply.github.com", "date": "2016-08-24T19:41:23Z"}, "message": "memrchr: Use a conditional instead of subtracting a complicated min\n\nThis makes the critical calculation easier to understand.", "tree": {"sha": "a670e10e751bdb087cde48c5a1f0746c7cb0dbd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a670e10e751bdb087cde48c5a1f0746c7cb0dbd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8295c5056da0be355c86b29d1d4eed469920e73c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8295c5056da0be355c86b29d1d4eed469920e73c", "html_url": "https://github.com/rust-lang/rust/commit/8295c5056da0be355c86b29d1d4eed469920e73c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8295c5056da0be355c86b29d1d4eed469920e73c/comments", "author": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bluss", "id": 3209739, "node_id": "MDQ6VXNlcjMyMDk3Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/3209739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bluss", "html_url": "https://github.com/bluss", "followers_url": "https://api.github.com/users/bluss/followers", "following_url": "https://api.github.com/users/bluss/following{/other_user}", "gists_url": "https://api.github.com/users/bluss/gists{/gist_id}", "starred_url": "https://api.github.com/users/bluss/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bluss/subscriptions", "organizations_url": "https://api.github.com/users/bluss/orgs", "repos_url": "https://api.github.com/users/bluss/repos", "events_url": "https://api.github.com/users/bluss/events{/privacy}", "received_events_url": "https://api.github.com/users/bluss/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1ecee96bfb7fb52b67358302c524a8c0193dc23", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1ecee96bfb7fb52b67358302c524a8c0193dc23", "html_url": "https://github.com/rust-lang/rust/commit/d1ecee96bfb7fb52b67358302c524a8c0193dc23"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "03f55f7ad61864cf3ed90ed794b36e41728873c0", "filename": "src/libstd/memchr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8295c5056da0be355c86b29d1d4eed469920e73c/src%2Flibstd%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8295c5056da0be355c86b29d1d4eed469920e73c/src%2Flibstd%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmemchr.rs?ref=8295c5056da0be355c86b29d1d4eed469920e73c", "patch": "@@ -209,7 +209,7 @@ mod fallback {\n         let end_align = (ptr as usize + len) & (usize_bytes - 1);\n         let mut offset;\n         if end_align > 0 {\n-            offset = len - cmp::min(end_align, len);\n+            offset = if end_align >= len { 0 } else { len - end_align };\n             if let Some(index) = text[offset..].iter().rposition(|elt| *elt == x) {\n                 return Some(offset + index);\n             }"}]}