{"sha": "9bf577311473aa0accbf0d456cbd26b7530b200f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjliZjU3NzMxMTQ3M2FhMGFjY2JmMGQ0NTZjYmQyNmI3NTMwYjIwMGY=", "commit": {"author": {"name": "William Chargin", "email": "wchargin@gmail.com", "date": "2019-09-08T21:03:09Z"}, "committer": {"name": "William Chargin", "email": "wchargin@gmail.com", "date": "2019-09-08T21:12:56Z"}, "message": "Fix `Stdio::piped` example code and lint\n\nSummary:\nInvoking `rev` does not add a trailing newline when none is present in\nthe input (at least on my Debian). Nearby examples use `echo` rather\nthan `rev`, which probably explains the source of the discrepancy.\n\nAlso, a `mut` qualifier is unused.\n\nTest Plan:\nCopy the code block into <https://play.rust-lang.org> with a `fn main`\nwrapper, and run it. Note that it compiles and runs cleanly; prior to\nthis commit, it would emit an `unused_mut` warning and then panic.\n\nwchargin-branch: stdio-piped-docs", "tree": {"sha": "2428be140327613392a3c29dd00d83fc888efd0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2428be140327613392a3c29dd00d83fc888efd0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9bf577311473aa0accbf0d456cbd26b7530b200f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9bf577311473aa0accbf0d456cbd26b7530b200f", "html_url": "https://github.com/rust-lang/rust/commit/9bf577311473aa0accbf0d456cbd26b7530b200f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9bf577311473aa0accbf0d456cbd26b7530b200f/comments", "author": {"login": "wchargin", "id": 4317806, "node_id": "MDQ6VXNlcjQzMTc4MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4317806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchargin", "html_url": "https://github.com/wchargin", "followers_url": "https://api.github.com/users/wchargin/followers", "following_url": "https://api.github.com/users/wchargin/following{/other_user}", "gists_url": "https://api.github.com/users/wchargin/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchargin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchargin/subscriptions", "organizations_url": "https://api.github.com/users/wchargin/orgs", "repos_url": "https://api.github.com/users/wchargin/repos", "events_url": "https://api.github.com/users/wchargin/events{/privacy}", "received_events_url": "https://api.github.com/users/wchargin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wchargin", "id": 4317806, "node_id": "MDQ6VXNlcjQzMTc4MDY=", "avatar_url": "https://avatars.githubusercontent.com/u/4317806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wchargin", "html_url": "https://github.com/wchargin", "followers_url": "https://api.github.com/users/wchargin/followers", "following_url": "https://api.github.com/users/wchargin/following{/other_user}", "gists_url": "https://api.github.com/users/wchargin/gists{/gist_id}", "starred_url": "https://api.github.com/users/wchargin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wchargin/subscriptions", "organizations_url": "https://api.github.com/users/wchargin/orgs", "repos_url": "https://api.github.com/users/wchargin/repos", "events_url": "https://api.github.com/users/wchargin/events{/privacy}", "received_events_url": "https://api.github.com/users/wchargin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b8116dced2c6c5d02e1c4359e89dc0919d6001b", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8116dced2c6c5d02e1c4359e89dc0919d6001b", "html_url": "https://github.com/rust-lang/rust/commit/2b8116dced2c6c5d02e1c4359e89dc0919d6001b"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "cecd9a5ab56b7995d5f6c4fb2304680171bf5d92", "filename": "src/libstd/process.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9bf577311473aa0accbf0d456cbd26b7530b200f/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9bf577311473aa0accbf0d456cbd26b7530b200f/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=9bf577311473aa0accbf0d456cbd26b7530b200f", "patch": "@@ -935,12 +935,12 @@ impl Stdio {\n     ///     .expect(\"Failed to spawn child process\");\n     ///\n     /// {\n-    ///     let mut stdin = child.stdin.as_mut().expect(\"Failed to open stdin\");\n+    ///     let stdin = child.stdin.as_mut().expect(\"Failed to open stdin\");\n     ///     stdin.write_all(\"Hello, world!\".as_bytes()).expect(\"Failed to write to stdin\");\n     /// }\n     ///\n     /// let output = child.wait_with_output().expect(\"Failed to read stdout\");\n-    /// assert_eq!(String::from_utf8_lossy(&output.stdout), \"!dlrow ,olleH\\n\");\n+    /// assert_eq!(String::from_utf8_lossy(&output.stdout), \"!dlrow ,olleH\");\n     /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub fn piped() -> Stdio { Stdio(imp::Stdio::MakePipe) }"}]}