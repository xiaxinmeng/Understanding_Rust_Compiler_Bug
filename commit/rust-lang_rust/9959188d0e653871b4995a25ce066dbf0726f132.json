{"sha": "9959188d0e653871b4995a25ce066dbf0726f132", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NTkxODhkMGU2NTM4NzFiNDk5NWEyNWNlMDY2ZGJmMDcyNmYxMzI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2014-02-25T16:03:41Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-12T20:39:47Z"}, "message": "Use generic impls for `Hash`", "tree": {"sha": "0eb1353d61e39bd5658d07bb9699dd1624aa7516", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0eb1353d61e39bd5658d07bb9699dd1624aa7516"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9959188d0e653871b4995a25ce066dbf0726f132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9959188d0e653871b4995a25ce066dbf0726f132", "html_url": "https://github.com/rust-lang/rust/commit/9959188d0e653871b4995a25ce066dbf0726f132", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9959188d0e653871b4995a25ce066dbf0726f132/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "207ebf13f12d8fa4449d66cd86407de03f264667", "url": "https://api.github.com/repos/rust-lang/rust/commits/207ebf13f12d8fa4449d66cd86407de03f264667", "html_url": "https://github.com/rust-lang/rust/commit/207ebf13f12d8fa4449d66cd86407de03f264667"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "28ea36fa2317a2a2597d47e05ff626bfae3beb6a", "filename": "src/libcollections/lru_cache.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibcollections%2Flru_cache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibcollections%2Flru_cache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flru_cache.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -39,7 +39,7 @@\n \n use std::cast;\n use std::container::Container;\n-use std::hash::{Hash, sip};\n+use std::hash::Hash;\n use std::fmt;\n use std::ptr;\n \n@@ -62,9 +62,9 @@ pub struct LruCache<K, V> {\n     priv tail: *mut LruEntry<K, V>,\n }\n \n-impl<K: Hash> Hash for KeyRef<K> {\n-    fn hash(&self, s: &mut sip::SipState) {\n-        unsafe {(*self.k).hash(s)}\n+impl<S, K: Hash<S>> Hash<S> for KeyRef<K> {\n+    fn hash(&self, state: &mut S) {\n+        unsafe { (*self.k).hash(state) }\n     }\n }\n "}, {"sha": "32de7bf08667fb941372fef7437ab62c3a6e4bcf", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -29,7 +29,7 @@ Rust extras are part of the standard Rust distribution.\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://static.rust-lang.org/doc/master\")];\n \n-#[feature(macro_rules, globs, managed_boxes, asm)];\n+#[feature(macro_rules, globs, managed_boxes, asm, default_type_params)];\n \n #[deny(non_camel_case_types)];\n #[deny(missing_doc)];"}, {"sha": "6be90c0056d11774149f88929f404a6e45b9d106", "filename": "src/libextra/url.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibextra%2Furl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibextra%2Furl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Furl.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -14,7 +14,7 @@\n \n use std::cmp::Eq;\n use std::fmt;\n-use std::hash::{Hash, sip};\n+use std::hash::Hash;\n use std::io::BufReader;\n use std::from_str::FromStr;\n use std::uint;\n@@ -849,15 +849,15 @@ impl fmt::Show for Path {\n     }\n }\n \n-impl Hash for Url {\n-    fn hash(&self, s: &mut sip::SipState) {\n-        self.to_str().hash(s)\n+impl<S: Writer> Hash<S> for Url {\n+    fn hash(&self, state: &mut S) {\n+        self.to_str().hash(state)\n     }\n }\n \n-impl Hash for Path {\n-    fn hash(&self, s: &mut sip::SipState) {\n-        self.to_str().hash(s)\n+impl<S: Writer> Hash<S> for Path {\n+    fn hash(&self, state: &mut S) {\n+        self.to_str().hash(state)\n     }\n }\n "}, {"sha": "f7588f6ca599c70e066cf6321c6e4a2ea33b8813", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -15,7 +15,7 @@ use c_str::{CString, ToCStr};\n use clone::Clone;\n use cmp::Eq;\n use from_str::FromStr;\n-use hash::{Hash, sip};\n+use io::Writer;\n use iter::{AdditiveIterator, Extendable, Iterator, Map};\n use option::{Option, None, Some};\n use str;\n@@ -88,10 +88,10 @@ impl ToCStr for Path {\n     }\n }\n \n-impl Hash for Path {\n+impl<H: Writer> ::hash::Hash<H> for Path {\n     #[inline]\n-    fn hash(&self, s: &mut sip::SipState) {\n-        self.repr.hash(s)\n+    fn hash(&self, hasher: &mut H) {\n+        self.repr.hash(hasher)\n     }\n }\n "}, {"sha": "6d05001beab927aba5702a17cf885021251ce59a", "filename": "src/libstd/path/windows.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibstd%2Fpath%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibstd%2Fpath%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fwindows.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -17,7 +17,7 @@ use clone::Clone;\n use container::Container;\n use cmp::Eq;\n use from_str::FromStr;\n-use hash::{Hash, sip};\n+use io::Writer;\n use iter::{AdditiveIterator, DoubleEndedIterator, Extendable, Rev, Iterator, Map};\n use option::{Option, Some, None};\n use str;\n@@ -112,10 +112,10 @@ impl ToCStr for Path {\n     }\n }\n \n-impl Hash for Path {\n+impl<H: Writer> ::hash::Hash<H> for Path {\n     #[inline]\n-    fn hash(&self, s: &mut sip::SipState) {\n-        self.repr.hash(s)\n+    fn hash(&self, hasher: &mut H) {\n+        self.repr.hash(hasher)\n     }\n }\n "}, {"sha": "1900d0ffedd4ff595e77c26d1dac8493620a7859", "filename": "src/libstd/str.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -89,7 +89,7 @@ use clone::Clone;\n use cmp::{Eq, TotalEq, Ord, TotalOrd, Equiv, Ordering};\n use container::{Container, Mutable};\n use fmt;\n-use hash::{Hash, sip};\n+use io::Writer;\n use iter::{Iterator, FromIterator, Extendable, range};\n use iter::{Filter, AdditiveIterator, Map};\n use iter::{Rev, DoubleEndedIterator, ExactSize};\n@@ -1331,10 +1331,13 @@ impl<'a> Default for MaybeOwned<'a> {\n     fn default() -> MaybeOwned<'a> { Slice(\"\") }\n }\n \n-impl<'a> Hash for MaybeOwned<'a> {\n+impl<'a, H: Writer> ::hash::Hash<H> for MaybeOwned<'a> {\n     #[inline]\n-    fn hash(&self, s: &mut sip::SipState) {\n-        self.as_slice().hash(s)\n+    fn hash(&self, hasher: &mut H) {\n+        match *self {\n+            Slice(s) => s.hash(hasher),\n+            Owned(ref s) => s.hash(hasher),\n+        }\n     }\n }\n "}, {"sha": "922393d8bb3af09a44a7d64773a696ff2d3101e3", "filename": "src/libuuid/lib.rs", "status": "modified", "additions": 11, "deletions": 4, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibuuid%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9959188d0e653871b4995a25ce066dbf0726f132/src%2Flibuuid%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibuuid%2Flib.rs?ref=9959188d0e653871b4995a25ce066dbf0726f132", "patch": "@@ -59,6 +59,12 @@ Examples of string representations:\n #[crate_type = \"dylib\"];\n #[license = \"MIT/ASL2\"];\n \n+#[feature(default_type_params)];\n+\n+// NOTE remove the following two attributes after the next snapshot.\n+#[allow(unrecognized_lint)];\n+#[allow(default_type_param_usage)];\n+\n // test harness access\n #[cfg(test)]\n extern crate test;\n@@ -71,7 +77,7 @@ use std::char::Char;\n use std::default::Default;\n use std::fmt;\n use std::from_str::FromStr;\n-use std::hash::{Hash, sip};\n+use std::hash::Hash;\n use std::num::FromStrRadix;\n use std::str;\n use std::vec;\n@@ -116,9 +122,10 @@ pub struct Uuid {\n     /// The 128-bit number stored in 16 bytes\n     bytes: UuidBytes\n }\n-impl Hash for Uuid {\n-    fn hash(&self, s: &mut sip::SipState) {\n-        self.bytes.slice_from(0).hash(s)\n+\n+impl<S: Writer> Hash<S> for Uuid {\n+    fn hash(&self, state: &mut S) {\n+        self.bytes.hash(state)\n     }\n }\n "}]}