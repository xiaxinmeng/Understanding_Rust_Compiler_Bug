{"sha": "063d9ca9283efcf1043c7c706c761f20f6f8d9d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2M2Q5Y2E5MjgzZWZjZjEwNDNjN2M3MDZjNzYxZjIwZjZmOGQ5ZDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-27T01:17:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-27T01:17:56Z"}, "message": "std: Make vec::from_elem failure-safe", "tree": {"sha": "2e8a8dc3952e0949f444803eed0ea7d739ae22b7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2e8a8dc3952e0949f444803eed0ea7d739ae22b7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/063d9ca9283efcf1043c7c706c761f20f6f8d9d3", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/063d9ca9283efcf1043c7c706c761f20f6f8d9d3", "html_url": "https://github.com/rust-lang/rust/commit/063d9ca9283efcf1043c7c706c761f20f6f8d9d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/063d9ca9283efcf1043c7c706c761f20f6f8d9d3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8221bd5e2cf05cea7546ebdd5331d17a3e4a4c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8221bd5e2cf05cea7546ebdd5331d17a3e4a4c5", "html_url": "https://github.com/rust-lang/rust/commit/a8221bd5e2cf05cea7546ebdd5331d17a3e4a4c5"}], "stats": {"total": 34, "additions": 30, "deletions": 4}, "files": [{"sha": "3e9c4b788fe8b62572a0e1643b127c5dc782a656", "filename": "src/libstd/vec.rs", "status": "modified", "additions": 30, "deletions": 4, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/063d9ca9283efcf1043c7c706c761f20f6f8d9d3/src%2Flibstd%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/063d9ca9283efcf1043c7c706c761f20f6f8d9d3/src%2Flibstd%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fvec.rs?ref=063d9ca9283efcf1043c7c706c761f20f6f8d9d3", "patch": "@@ -125,11 +125,14 @@ pub fn from_elem<T:Clone>(n_elts: uint, t: T) -> ~[T] {\n         let mut v = with_capacity(n_elts);\n         let p = raw::to_mut_ptr(v);\n         let mut i = 0u;\n-        while i < n_elts {\n-            intrinsics::move_val_init(&mut(*ptr::mut_offset(p, i as int)), t.clone());\n-            i += 1u;\n+        do (|| {\n+            while i < n_elts {\n+                intrinsics::move_val_init(&mut(*ptr::mut_offset(p, i as int)), t.clone());\n+                i += 1u;\n+            }\n+        }).finally {\n+            raw::set_len(&mut v, i);\n         }\n-        raw::set_len(&mut v, n_elts);\n         v\n     }\n }\n@@ -3134,6 +3137,29 @@ mod tests {\n         };\n     }\n \n+    #[test]\n+    #[should_fail]\n+    fn test_from_elem_fail() {\n+        use cast;\n+\n+        struct S {\n+            f: int,\n+            boxes: (~int, @int)\n+        }\n+\n+        impl Clone for S {\n+            fn clone(&self) -> S {\n+                let s = unsafe { cast::transmute_mut(self) };\n+                s.f += 1;\n+                if s.f == 10 { fail!() }\n+                S { f: s.f, boxes: s.boxes.clone() }\n+            }\n+        }\n+\n+        let s = S { f: 0, boxes: (~0, @0) };\n+        let _ = from_elem(100, s);\n+    }\n+\n     #[test]\n     #[should_fail]\n     fn test_build_fail() {"}]}