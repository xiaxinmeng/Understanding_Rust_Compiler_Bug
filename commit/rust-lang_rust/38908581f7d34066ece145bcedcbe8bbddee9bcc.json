{"sha": "38908581f7d34066ece145bcedcbe8bbddee9bcc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4OTA4NTgxZjdkMzQwNjZlY2UxNDViY2VkY2JlOGJiZGRlZTliY2M=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T05:21:21Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-26T19:05:21Z"}, "message": "rustdoc: Rename astsrv::ctxt.map to ast_map", "tree": {"sha": "5b567c3e06e01051d4db901cd36a9b538e1793f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b567c3e06e01051d4db901cd36a9b538e1793f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38908581f7d34066ece145bcedcbe8bbddee9bcc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38908581f7d34066ece145bcedcbe8bbddee9bcc", "html_url": "https://github.com/rust-lang/rust/commit/38908581f7d34066ece145bcedcbe8bbddee9bcc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38908581f7d34066ece145bcedcbe8bbddee9bcc/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c590bdeea41f5476f42c6a7cb067e162328bdbc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/c590bdeea41f5476f42c6a7cb067e162328bdbc2", "html_url": "https://github.com/rust-lang/rust/commit/c590bdeea41f5476f42c6a7cb067e162328bdbc2"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "8bd631b945b85a77540608b9650b644e818253ae", "filename": "src/rustdoc/astsrv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Fastsrv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Fastsrv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fastsrv.rs?ref=38908581f7d34066ece145bcedcbe8bbddee9bcc", "patch": "@@ -19,7 +19,7 @@ export exec;\n \n type ctxt = {\n     ast: @ast::crate,\n-    map: ast_map::map\n+    ast_map: ast_map::map\n };\n \n type ctxt_handler<T> = fn~(ctxt: ctxt) -> T;\n@@ -48,7 +48,7 @@ fn build_ctxt(ast: @ast::crate) -> ctxt {\n \n     {\n         ast: ast,\n-        map: ast_map::map_crate(*ast)\n+        ast_map: ast_map::map_crate(*ast)\n     }\n }\n \n@@ -76,7 +76,7 @@ mod tests {\n         let source = \"fn a() { }\";\n         let srv = mk_srv_from_str(source);\n         exec(srv) {|ctxt|\n-            assert ctxt.map.size() != 0u\n+            assert ctxt.ast_map.size() != 0u\n         };\n     }\n "}, {"sha": "d3a1f1dc48d24cb33e403972aecc8116c243a712", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=38908581f7d34066ece145bcedcbe8bbddee9bcc", "patch": "@@ -66,7 +66,7 @@ fn parse_item_attrs<T>(\n     id: doc::ast_id,\n     parse_attrs: fn~([ast::attribute]) -> T) -> T {\n     astsrv::exec(srv) {|ctxt|\n-        let attrs = alt ctxt.map.get(id) {\n+        let attrs = alt ctxt.ast_map.get(id) {\n           ast_map::node_item(item) { item.attrs }\n         };\n         parse_attrs(attrs)\n@@ -263,7 +263,7 @@ fn fold_enum(\n         desc: attrs.desc,\n         variants: vec::map(doc.variants) {|variant|\n             let attrs = astsrv::exec(srv) {|ctxt|\n-                alt ctxt.map.get(doc.id) {\n+                alt ctxt.ast_map.get(doc.id) {\n                   ast_map::node_item(@{\n                     node: ast::item_enum(ast_variants, _), _\n                   }) {"}, {"sha": "e766ab12671154ba25e89633d4711ee5213d0d02", "filename": "src/rustdoc/prune_unexported_pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Fprune_unexported_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Fprune_unexported_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fprune_unexported_pass.rs?ref=38908581f7d34066ece145bcedcbe8bbddee9bcc", "patch": "@@ -155,7 +155,7 @@ fn is_exported_from_mod(\n     item_name: str\n ) -> bool {\n     astsrv::exec(srv) {|ctxt|\n-        alt ctxt.map.get(mod_id) {\n+        alt ctxt.ast_map.get(mod_id) {\n           ast_map::node_item(item) {\n             alt item.node {\n               ast::item_mod(m) {"}, {"sha": "e8be05b0cda3fd851949905c75e89429c2d60906", "filename": "src/rustdoc/tystr_pass.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Ftystr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38908581f7d34066ece145bcedcbe8bbddee9bcc/src%2Frustdoc%2Ftystr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Ftystr_pass.rs?ref=38908581f7d34066ece145bcedcbe8bbddee9bcc", "patch": "@@ -41,7 +41,7 @@ fn fold_fn(\n \n fn get_fn_sig(srv: astsrv::srv, fn_id: doc::ast_id) -> option<str> {\n     astsrv::exec(srv) {|ctxt|\n-        alt ctxt.map.get(fn_id) {\n+        alt ctxt.ast_map.get(fn_id) {\n           ast_map::node_item(@{\n             ident: ident,\n             node: ast::item_fn(decl, _, blk), _\n@@ -79,7 +79,7 @@ fn merge_ret_ty(\n \n fn get_ret_ty(srv: astsrv::srv, fn_id: doc::ast_id) -> option<str> {\n     astsrv::exec(srv) {|ctxt|\n-        alt ctxt.map.get(fn_id) {\n+        alt ctxt.ast_map.get(fn_id) {\n           ast_map::node_item(@{\n             node: ast::item_fn(decl, _, _), _\n           }) {\n@@ -130,7 +130,7 @@ fn merge_arg_tys(\n \n fn get_arg_tys(srv: astsrv::srv, fn_id: doc::ast_id) -> [(str, str)] {\n     astsrv::exec(srv) {|ctxt|\n-        alt ctxt.map.get(fn_id) {\n+        alt ctxt.ast_map.get(fn_id) {\n           ast_map::node_item(@{\n             node: ast::item_fn(decl, _, _), _\n           }) {\n@@ -161,7 +161,7 @@ fn fold_const(\n \n     ~{\n         ty: some(astsrv::exec(srv) {|ctxt|\n-            alt ctxt.map.get(doc.id) {\n+            alt ctxt.ast_map.get(doc.id) {\n               ast_map::node_item(@{\n                 node: ast::item_const(ty, _), _\n               }) {\n@@ -191,7 +191,7 @@ fn fold_enum(\n     ~{\n         variants: vec::map(doc.variants) {|variant|\n             let sig = astsrv::exec(srv) {|ctxt|\n-                alt ctxt.map.get(doc.id) {\n+                alt ctxt.ast_map.get(doc.id) {\n                   ast_map::node_item(@{\n                     node: ast::item_enum(ast_variants, _), _\n                   }) {"}]}