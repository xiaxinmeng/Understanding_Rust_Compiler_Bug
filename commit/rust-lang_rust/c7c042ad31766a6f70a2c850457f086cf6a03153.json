{"sha": "c7c042ad31766a6f70a2c850457f086cf6a03153", "node_id": "C_kwDOAAsO6NoAKGM3YzA0MmFkMzE3NjZhNmY3MGEyYzg1MDQ1N2YwODZjZjZhMDMxNTM", "commit": {"author": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-05-05T22:13:18Z"}, "committer": {"name": "Luqman Aden", "email": "me@luqman.ca", "date": "2023-05-05T22:13:18Z"}, "message": "Address review comments.\n\nRemove bitcasts in OperandRef::extract_field; only pointercasts should\nbe needed.", "tree": {"sha": "81ee71d80faeb04f017c9239fe5f076e45e419a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81ee71d80faeb04f017c9239fe5f076e45e419a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7c042ad31766a6f70a2c850457f086cf6a03153", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7c042ad31766a6f70a2c850457f086cf6a03153", "html_url": "https://github.com/rust-lang/rust/commit/c7c042ad31766a6f70a2c850457f086cf6a03153", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7c042ad31766a6f70a2c850457f086cf6a03153/comments", "author": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luqmana", "id": 287063, "node_id": "MDQ6VXNlcjI4NzA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/287063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luqmana", "html_url": "https://github.com/luqmana", "followers_url": "https://api.github.com/users/luqmana/followers", "following_url": "https://api.github.com/users/luqmana/following{/other_user}", "gists_url": "https://api.github.com/users/luqmana/gists{/gist_id}", "starred_url": "https://api.github.com/users/luqmana/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luqmana/subscriptions", "organizations_url": "https://api.github.com/users/luqmana/orgs", "repos_url": "https://api.github.com/users/luqmana/repos", "events_url": "https://api.github.com/users/luqmana/events{/privacy}", "received_events_url": "https://api.github.com/users/luqmana/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b1eedaae81326567e0439d058546d93f9e7f73a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1eedaae81326567e0439d058546d93f9e7f73a", "html_url": "https://github.com/rust-lang/rust/commit/7b1eedaae81326567e0439d058546d93f9e7f73a"}], "stats": {"total": 6, "additions": 0, "deletions": 6}, "files": [{"sha": "9efbb34b515b6679ba83015e9c3ee01ce4619fa5", "filename": "compiler/rustc_codegen_ssa/src/mir/operand.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c7c042ad31766a6f70a2c850457f086cf6a03153/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7c042ad31766a6f70a2c850457f086cf6a03153/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Foperand.rs?ref=c7c042ad31766a6f70a2c850457f086cf6a03153", "patch": "@@ -247,8 +247,6 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n                 let ty = bx.cx().immediate_backend_type(field);\n                 if bx.type_kind(ty) == TypeKind::Pointer {\n                     *llval = bx.pointercast(*llval, ty);\n-                } else {\n-                    *llval = bx.bitcast(*llval, ty);\n                 }\n             }\n             (OperandValue::Pair(a, b), Abi::ScalarPair(a_abi, b_abi)) => {\n@@ -260,13 +258,9 @@ impl<'a, 'tcx, V: CodegenObject> OperandRef<'tcx, V> {\n                 let b_ty = bx.cx().scalar_pair_element_backend_type(field, 1, true);\n                 if bx.type_kind(a_ty) == TypeKind::Pointer {\n                     *a = bx.pointercast(*a, a_ty);\n-                } else {\n-                    *a = bx.bitcast(*a, a_ty);\n                 }\n                 if bx.type_kind(b_ty) == TypeKind::Pointer {\n                     *b = bx.pointercast(*b, b_ty);\n-                } else {\n-                    *b = bx.bitcast(*b, b_ty);\n                 }\n             }\n             // Newtype vector of array, e.g. #[repr(simd)] struct S([i32; 4]);"}]}