{"sha": "748d354af3145d4292ea84142f73bb8114e3db12", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0OGQzNTRhZjMxNDVkNDI5MmVhODQxNDJmNzNiYjgxMTRlM2RiMTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-15T23:50:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-15T23:50:47Z"}, "message": "Auto merge of #56600 - ljedrz:fix_edition, r=Mark-Simulacrum\n\nbootstrap: fix edition\n\nA byproduct of work on https://github.com/rust-lang/rust/pull/56595; done with `cargo fix --edition`.", "tree": {"sha": "df2faa6276c176ede8ca9783d06ef7a341502468", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df2faa6276c176ede8ca9783d06ef7a341502468"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/748d354af3145d4292ea84142f73bb8114e3db12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/748d354af3145d4292ea84142f73bb8114e3db12", "html_url": "https://github.com/rust-lang/rust/commit/748d354af3145d4292ea84142f73bb8114e3db12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/748d354af3145d4292ea84142f73bb8114e3db12/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93c2f055ba443385b7c97b1b81fb179db5c9e065", "url": "https://api.github.com/repos/rust-lang/rust/commits/93c2f055ba443385b7c97b1b81fb179db5c9e065", "html_url": "https://github.com/rust-lang/rust/commit/93c2f055ba443385b7c97b1b81fb179db5c9e065"}, {"sha": "a5a3da541b9cb97c43676242d33496b4ee9c9ca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5a3da541b9cb97c43676242d33496b4ee9c9ca1", "html_url": "https://github.com/rust-lang/rust/commit/a5a3da541b9cb97c43676242d33496b4ee9c9ca1"}], "stats": {"total": 196, "additions": 99, "deletions": 97}, "files": [{"sha": "0f7b6c22e1cc52ff8632881b195b831f8d4d3aca", "filename": "src/bootstrap/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCargo.toml?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -2,6 +2,7 @@\n authors = [\"The Rust Project Developers\"]\n name = \"bootstrap\"\n version = \"0.0.0\"\n+edition = \"2018\"\n \n [lib]\n name = \"bootstrap\""}, {"sha": "405fc871eef76e6f22763c3b510261a9d134f80d", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -21,20 +21,20 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::time::{Duration, Instant};\n \n-use cache::{Cache, Interned, INTERNER};\n-use check;\n-use compile;\n-use dist;\n-use doc;\n-use flags::Subcommand;\n-use install;\n-use native;\n-use test;\n-use tool;\n-use util::{add_lib_path, exe, libdir};\n-use {Build, DocTests, Mode, GitRepo};\n-\n-pub use Compiler;\n+use crate::cache::{Cache, Interned, INTERNER};\n+use crate::check;\n+use crate::compile;\n+use crate::dist;\n+use crate::doc;\n+use crate::flags::Subcommand;\n+use crate::install;\n+use crate::native;\n+use crate::test;\n+use crate::tool;\n+use crate::util::{add_lib_path, exe, libdir};\n+use crate::{Build, DocTests, Mode, GitRepo};\n+\n+pub use crate::Compiler;\n \n use petgraph::graph::NodeIndex;\n use petgraph::Graph;\n@@ -1252,7 +1252,7 @@ impl<'a> Builder<'a> {\n #[cfg(test)]\n mod __test {\n     use super::*;\n-    use config::Config;\n+    use crate::config::Config;\n     use std::thread;\n \n     fn configure(host: &[&str], target: &[&str]) -> Config {"}, {"sha": "165cffa4587d370bbddf7567c5509c566e480605", "filename": "src/bootstrap/cache.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcache.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -23,7 +23,7 @@ use std::path::{Path, PathBuf};\n use std::sync::Mutex;\n use std::cmp::{PartialOrd, Ord, Ordering};\n \n-use builder::Step;\n+use crate::builder::Step;\n \n pub struct Interned<T>(usize, PhantomData<*const T>);\n "}, {"sha": "3d2b3a2c9de498ee7bc69bb1f14b5bed96bf82de", "filename": "src/bootstrap/cc_detect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcc_detect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcc_detect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcc_detect.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -39,9 +39,9 @@ use std::process::Command;\n use build_helper::output;\n use cc;\n \n-use {Build, GitRepo};\n-use config::Target;\n-use cache::Interned;\n+use crate::{Build, GitRepo};\n+use crate::config::Target;\n+use crate::cache::Interned;\n \n // The `cc` crate doesn't provide a way to obtain a path to the detected archiver,\n // so use some simplified logic here. First we respect the environment variable `AR`, then"}, {"sha": "8756ec944c25704da8a5dc9e3a3a00aa6c61e7b6", "filename": "src/bootstrap/channel.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fchannel.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fchannel.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fchannel.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -20,8 +20,8 @@ use std::process::Command;\n \n use build_helper::output;\n \n-use Build;\n-use config::Config;\n+use crate::Build;\n+use crate::config::Config;\n \n // The version number\n pub const CFG_RELEASE_NUM: &str = \"1.33.0\";"}, {"sha": "84e7c40e4559e479a94d2b71257ea0bc9fdff3c3", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -10,11 +10,12 @@\n \n //! Implementation of compiling the compiler and standard library, in \"check\" mode.\n \n-use compile::{run_cargo, std_cargo, test_cargo, rustc_cargo, rustc_cargo_env, add_to_sysroot};\n-use builder::{RunConfig, Builder, ShouldRun, Step};\n-use tool::{prepare_tool_cargo, SourceType};\n-use {Compiler, Mode};\n-use cache::{INTERNER, Interned};\n+use crate::compile::{run_cargo, std_cargo, test_cargo, rustc_cargo, rustc_cargo_env,\n+                     add_to_sysroot};\n+use crate::builder::{RunConfig, Builder, ShouldRun, Step};\n+use crate::tool::{prepare_tool_cargo, SourceType};\n+use crate::{Compiler, Mode};\n+use crate::cache::{INTERNER, Interned};\n use std::path::PathBuf;\n \n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]"}, {"sha": "dc42159d068b1e6bff46bfed57290fc5fc716d15", "filename": "src/bootstrap/clean.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fclean.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -19,7 +19,7 @@ use std::fs;\n use std::io::{self, ErrorKind};\n use std::path::Path;\n \n-use Build;\n+use crate::Build;\n \n pub fn clean(build: &Build, all: bool) {\n     rm_rf(\"tmp\".as_ref());"}, {"sha": "61a04b97206029fbb3679f7e17358dc893456bb5", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -29,12 +29,12 @@ use build_helper::{output, mtime, up_to_date};\n use filetime::FileTime;\n use serde_json;\n \n-use util::{exe, libdir, is_dylib};\n-use {Compiler, Mode, GitRepo};\n-use native;\n+use crate::util::{exe, libdir, is_dylib};\n+use crate::{Compiler, Mode, GitRepo};\n+use crate::native;\n \n-use cache::{INTERNER, Interned};\n-use builder::{Step, RunConfig, ShouldRun, Builder};\n+use crate::cache::{INTERNER, Interned};\n+use crate::builder::{Step, RunConfig, ShouldRun, Builder};\n \n #[derive(Debug, PartialOrd, Ord, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct Std {"}, {"sha": "2ae9da9c085d4397811f30051d9cd8ee5879d26e", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -22,9 +22,9 @@ use std::cmp;\n \n use num_cpus;\n use toml;\n-use cache::{INTERNER, Interned};\n-use flags::Flags;\n-pub use flags::Subcommand;\n+use crate::cache::{INTERNER, Interned};\n+use crate::flags::Flags;\n+pub use crate::flags::Subcommand;\n \n /// Global configuration for the entire build and/or bootstrap.\n ///"}, {"sha": "927f9bf8ddbca36ce57320793902ae916c95b518", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -26,13 +26,13 @@ use std::process::{Command, Stdio};\n \n use build_helper::output;\n \n-use {Compiler, Mode, LLVM_TOOLS};\n-use channel;\n-use util::{libdir, is_dylib, exe};\n-use builder::{Builder, RunConfig, ShouldRun, Step};\n-use compile;\n-use tool::{self, Tool};\n-use cache::{INTERNER, Interned};\n+use crate::{Compiler, Mode, LLVM_TOOLS};\n+use crate::channel;\n+use crate::util::{libdir, is_dylib, exe};\n+use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n+use crate::compile;\n+use crate::tool::{self, Tool};\n+use crate::cache::{INTERNER, Interned};\n use time;\n \n pub fn pkgname(builder: &Builder, component: &str) -> String {"}, {"sha": "217328adfbf66403925f23a05a112ef6916a0667", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -22,15 +22,15 @@ use std::fs;\n use std::io;\n use std::path::{PathBuf, Path};\n \n-use Mode;\n+use crate::Mode;\n use build_helper::up_to_date;\n \n-use util::symlink_dir;\n-use builder::{Builder, Compiler, RunConfig, ShouldRun, Step};\n-use tool::{self, prepare_tool_cargo, Tool, SourceType};\n-use compile;\n-use cache::{INTERNER, Interned};\n-use config::Config;\n+use crate::util::symlink_dir;\n+use crate::builder::{Builder, Compiler, RunConfig, ShouldRun, Step};\n+use crate::tool::{self, prepare_tool_cargo, Tool, SourceType};\n+use crate::compile;\n+use crate::cache::{INTERNER, Interned};\n+use crate::config::Config;\n \n macro_rules! book {\n     ($($name:ident, $path:expr, $book_name:expr;)+) => {"}, {"sha": "14e2f69432dac21d96753c6e1eeb1d78cb0b1591", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -19,12 +19,12 @@ use std::process;\n \n use getopts::Options;\n \n-use builder::Builder;\n-use config::Config;\n-use metadata;\n-use {Build, DocTests};\n+use crate::builder::Builder;\n+use crate::config::Config;\n+use crate::metadata;\n+use crate::{Build, DocTests};\n \n-use cache::{Interned, INTERNER};\n+use crate::cache::{Interned, INTERNER};\n \n /// Deserialized version of all flags for this compile.\n pub struct Flags {"}, {"sha": "aebcfb4519543abbea8e271b402f66a807c3fbb9", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -18,11 +18,11 @@ use std::fs;\n use std::path::{Path, PathBuf, Component};\n use std::process::Command;\n \n-use dist::{self, pkgname, sanitize_sh, tmpdir};\n+use crate::dist::{self, pkgname, sanitize_sh, tmpdir};\n \n-use builder::{Builder, RunConfig, ShouldRun, Step};\n-use cache::Interned;\n-use config::Config;\n+use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n+use crate::cache::Interned;\n+use crate::config::Config;\n \n pub fn install_docs(builder: &Builder, stage: u32, host: Interned<String>) {\n     install_sh(builder, \"docs\", \"rust-docs\", stage, Some(host));"}, {"sha": "a9da2c491da53992774affa8f2c2d63660e027ca", "filename": "src/bootstrap/job.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fjob.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fjob.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fjob.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -42,7 +42,7 @@\n use std::env;\n use std::io;\n use std::mem;\n-use Build;\n+use crate::Build;\n \n type HANDLE = *mut u8;\n type BOOL = i32;"}, {"sha": "c5b8f19eee6fb0b27a41c2c010cffaf7729b52b1", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -159,7 +159,7 @@ use std::os::windows::fs::symlink_file;\n use build_helper::{run_silent, run_suppressed, try_run_silent, try_run_suppressed, output, mtime};\n use filetime::FileTime;\n \n-use util::{exe, libdir, OutputFolder, CiEnv};\n+use crate::util::{exe, libdir, OutputFolder, CiEnv};\n \n mod cc_detect;\n mod channel;\n@@ -188,7 +188,7 @@ mod job;\n mod job {\n     use libc;\n \n-    pub unsafe fn setup(build: &mut ::Build) {\n+    pub unsafe fn setup(build: &mut crate::Build) {\n         if build.config.low_priority {\n             libc::setpriority(libc::PRIO_PGRP as _, 0, 10);\n         }\n@@ -197,14 +197,14 @@ mod job {\n \n #[cfg(any(target_os = \"haiku\", not(any(unix, windows))))]\n mod job {\n-    pub unsafe fn setup(_build: &mut ::Build) {\n+    pub unsafe fn setup(_build: &mut crate::Build) {\n     }\n }\n \n-pub use config::Config;\n-use flags::Subcommand;\n-use cache::{Interned, INTERNER};\n-use toolstate::ToolState;\n+pub use crate::config::Config;\n+use crate::flags::Subcommand;\n+use crate::cache::{Interned, INTERNER};\n+use crate::toolstate::ToolState;\n \n const LLVM_TOOLS: &[&str] = &[\n     \"llvm-nm\", // used to inspect binaries; it shows symbol names, their sizes and visibility"}, {"sha": "bb503e8b8d3d1bf8d6bb1bd145297312af3903a2", "filename": "src/bootstrap/metadata.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetadata.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -16,8 +16,8 @@ use std::collections::HashSet;\n use build_helper::output;\n use serde_json;\n \n-use {Build, Crate};\n-use cache::INTERNER;\n+use crate::{Build, Crate};\n+use crate::cache::INTERNER;\n \n #[derive(Deserialize)]\n struct Output {"}, {"sha": "2da800f19c07b8b804a7222dab1983aedb543cc1", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -28,11 +28,11 @@ use build_helper::output;\n use cmake;\n use cc;\n \n-use util::{self, exe};\n+use crate::util::{self, exe};\n use build_helper::up_to_date;\n-use builder::{Builder, RunConfig, ShouldRun, Step};\n-use cache::Interned;\n-use GitRepo;\n+use crate::builder::{Builder, RunConfig, ShouldRun, Step};\n+use crate::cache::Interned;\n+use crate::GitRepo;\n \n #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct Llvm {"}, {"sha": "f585495b0aa947f573a11ccc16875411032b5d80", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -27,7 +27,7 @@ use std::process::Command;\n \n use build_helper::output;\n \n-use Build;\n+use crate::Build;\n \n struct Finder {\n     cache: HashMap<OsString, Option<PathBuf>>,"}, {"sha": "11932d58ceac623011357f60652b4a15f26a2cea", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -23,17 +23,17 @@ use std::process::Command;\n \n use build_helper::{self, output};\n \n-use builder::{Builder, Compiler, Kind, RunConfig, ShouldRun, Step};\n-use cache::{Interned, INTERNER};\n-use compile;\n-use dist;\n-use flags::Subcommand;\n-use native;\n-use tool::{self, Tool, SourceType};\n-use toolstate::ToolState;\n-use util::{self, dylib_path, dylib_path_var};\n-use Crate as CargoCrate;\n-use {DocTests, Mode, GitRepo};\n+use crate::builder::{Builder, Compiler, Kind, RunConfig, ShouldRun, Step};\n+use crate::cache::{Interned, INTERNER};\n+use crate::compile;\n+use crate::dist;\n+use crate::flags::Subcommand;\n+use crate::native;\n+use crate::tool::{self, Tool, SourceType};\n+use crate::toolstate::ToolState;\n+use crate::util::{self, dylib_path, dylib_path_var};\n+use crate::Crate as CargoCrate;\n+use crate::{DocTests, Mode, GitRepo};\n \n const ADB_TEST_DIR: &str = \"/data/tmp/work\";\n \n@@ -616,7 +616,7 @@ impl Step for RustdocJS {\n         if let Some(ref nodejs) = builder.config.nodejs {\n             let mut command = Command::new(nodejs);\n             command.args(&[\"src/tools/rustdoc-js/tester.js\", &*self.host]);\n-            builder.ensure(::doc::Std {\n+            builder.ensure(crate::doc::Std {\n                 target: self.target,\n                 stage: builder.top_stage,\n             });"}, {"sha": "4335359e11589c7295c18e2f4832f615d61d7b2e", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -15,16 +15,16 @@ use std::path::PathBuf;\n use std::process::{Command, exit};\n use std::collections::HashSet;\n \n-use Mode;\n-use Compiler;\n-use builder::{Step, RunConfig, ShouldRun, Builder};\n-use util::{exe, add_lib_path};\n-use compile;\n-use native;\n-use channel::GitInfo;\n-use channel;\n-use cache::Interned;\n-use toolstate::ToolState;\n+use crate::Mode;\n+use crate::Compiler;\n+use crate::builder::{Step, RunConfig, ShouldRun, Builder};\n+use crate::util::{exe, add_lib_path};\n+use crate::compile;\n+use crate::native;\n+use crate::channel::GitInfo;\n+use crate::channel;\n+use crate::cache::Interned;\n+use crate::toolstate::ToolState;\n \n #[derive(Debug, Clone, Hash, PartialEq, Eq)]\n pub enum SourceType {"}, {"sha": "b18e38e471efff47672d499e91ce736aca49c1c2", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/748d354af3145d4292ea84142f73bb8114e3db12/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=748d354af3145d4292ea84142f73bb8114e3db12", "patch": "@@ -21,8 +21,8 @@ use std::path::{Path, PathBuf};\n use std::process::Command;\n use std::time::{SystemTime, Instant};\n \n-use config::Config;\n-use builder::Builder;\n+use crate::config::Config;\n+use crate::builder::Builder;\n \n /// Returns the `name` as the filename of a static library for `target`.\n pub fn staticlib(name: &str, target: &str) -> String {"}]}