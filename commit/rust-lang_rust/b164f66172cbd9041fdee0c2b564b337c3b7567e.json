{"sha": "b164f66172cbd9041fdee0c2b564b337c3b7567e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxNjRmNjYxNzJjYmQ5MDQxZmRlZTBjMmI1NjRiMzM3YzNiNzU2N2U=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-29T22:45:34Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-04-29T22:45:34Z"}, "message": "rollup merge of #24610: nagisa/offset-docs", "tree": {"sha": "4f5dffa57fab1c3d3387eecdfa21366b3adb1f39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f5dffa57fab1c3d3387eecdfa21366b3adb1f39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b164f66172cbd9041fdee0c2b564b337c3b7567e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b164f66172cbd9041fdee0c2b564b337c3b7567e", "html_url": "https://github.com/rust-lang/rust/commit/b164f66172cbd9041fdee0c2b564b337c3b7567e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b164f66172cbd9041fdee0c2b564b337c3b7567e/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "551a74dddd84cf01440ee84148ebd18bc68bd7c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/551a74dddd84cf01440ee84148ebd18bc68bd7c8", "html_url": "https://github.com/rust-lang/rust/commit/551a74dddd84cf01440ee84148ebd18bc68bd7c8"}, {"sha": "82b43568a64822c693fdfa50a736056efe92c4ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b43568a64822c693fdfa50a736056efe92c4ce", "html_url": "https://github.com/rust-lang/rust/commit/82b43568a64822c693fdfa50a736056efe92c4ce"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "d6885763b1c94be0a341926060464364ad99a7f8", "filename": "src/libcore/intrinsics.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b164f66172cbd9041fdee0c2b564b337c3b7567e/src%2Flibcore%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b164f66172cbd9041fdee0c2b564b337c3b7567e/src%2Flibcore%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fintrinsics.rs?ref=b164f66172cbd9041fdee0c2b564b337c3b7567e", "patch": "@@ -255,12 +255,17 @@ extern \"rust-intrinsic\" {\n     /// Returns `true` if a type is managed (will be allocated on the local heap)\n     pub fn owns_managed<T>() -> bool;\n \n-    /// Calculates the offset from a pointer. The offset *must* be in-bounds of\n-    /// the object, or one-byte-past-the-end. An arithmetic overflow is also\n-    /// undefined behaviour.\n+    /// Calculates the offset from a pointer.\n     ///\n     /// This is implemented as an intrinsic to avoid converting to and from an\n     /// integer, since the conversion would throw away aliasing information.\n+    ///\n+    /// # Safety\n+    ///\n+    /// Both the starting and resulting pointer must be either in bounds or one\n+    /// byte past the end of an allocated object. If either pointer is out of\n+    /// bounds or arithmetic overflow occurs then any further use of the\n+    /// returned value will result in undefined behavior.\n     pub fn offset<T>(dst: *const T, offset: isize) -> *const T;\n \n     /// Copies `count * size_of<T>` bytes from `src` to `dst`. The source"}, {"sha": "47c029f11b38fad65971f9822d532aae935a161b", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b164f66172cbd9041fdee0c2b564b337c3b7567e/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b164f66172cbd9041fdee0c2b564b337c3b7567e/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=b164f66172cbd9041fdee0c2b564b337c3b7567e", "patch": "@@ -284,9 +284,10 @@ impl<T: ?Sized> *const T {\n     ///\n     /// # Safety\n     ///\n-    /// The offset must be in-bounds of the object, or one-byte-past-the-end.\n-    /// Otherwise `offset` invokes Undefined Behaviour, regardless of whether\n-    /// the pointer is used.\n+    /// Both the starting and resulting pointer must be either in bounds or one\n+    /// byte past the end of an allocated object. If either pointer is out of\n+    /// bounds or arithmetic overflow occurs then\n+    /// any further use of the returned value will result in undefined behavior.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n     pub unsafe fn offset(self, count: isize) -> *const T where T: Sized {"}]}