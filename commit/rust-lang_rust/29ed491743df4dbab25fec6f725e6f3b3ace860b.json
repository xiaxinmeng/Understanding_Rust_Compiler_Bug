{"sha": "29ed491743df4dbab25fec6f725e6f3b3ace860b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZWQ0OTE3NDNkZjRkYmFiMjVmZWM2ZjcyNWU2ZjNiM2FjZTg2MGI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-13T23:39:03Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-18T19:38:23Z"}, "message": "Add `GenericArg`\n\nCo-Authored-By: Gabriel Smith <yodaldevoid@users.noreply.github.com>", "tree": {"sha": "16a7000e1d416071ab069f7bf71a3dd83b7c4beb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16a7000e1d416071ab069f7bf71a3dd83b7c4beb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29ed491743df4dbab25fec6f725e6f3b3ace860b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29ed491743df4dbab25fec6f725e6f3b3ace860b", "html_url": "https://github.com/rust-lang/rust/commit/29ed491743df4dbab25fec6f725e6f3b3ace860b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29ed491743df4dbab25fec6f725e6f3b3ace860b/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14913159e0509a2b7d1c86984a044b76dd4e4902", "url": "https://api.github.com/repos/rust-lang/rust/commits/14913159e0509a2b7d1c86984a044b76dd4e4902", "html_url": "https://github.com/rust-lang/rust/commit/14913159e0509a2b7d1c86984a044b76dd4e4902"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "8581c40c843e86bd72be8ac5dd786a5f1f76d483", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/29ed491743df4dbab25fec6f725e6f3b3ace860b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29ed491743df4dbab25fec6f725e6f3b3ace860b/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=29ed491743df4dbab25fec6f725e6f3b3ace860b", "patch": "@@ -3247,6 +3247,23 @@ impl Clean<Path> for hir::Path {\n     }\n }\n \n+#[derive(Clone, RustcEncodable, RustcDecodable, PartialEq, Eq, Debug, Hash)]\n+pub enum GenericArg {\n+    Lifetime(Lifetime),\n+    Type(Type),\n+    Const(Constant),\n+}\n+\n+impl fmt::Display for GenericArg {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        match self {\n+            GenericArg::Lifetime(lt) => lt.fmt(f),\n+            GenericArg::Type(ty) => ty.fmt(f),\n+            GenericArg::Const(ct) => ct.fmt(f),\n+        }\n+    }\n+}\n+\n #[derive(Clone, RustcEncodable, RustcDecodable, PartialEq, Eq, Debug, Hash)]\n pub enum GenericArgs {\n     AngleBracketed {"}]}