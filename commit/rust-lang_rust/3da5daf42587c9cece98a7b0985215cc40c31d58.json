{"sha": "3da5daf42587c9cece98a7b0985215cc40c31d58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYTVkYWY0MjU4N2M5Y2VjZTk4YTdiMDk4NTIxNWNjNDBjMzFkNTg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-05T18:34:42Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-05-05T18:34:42Z"}, "message": "change various uses of `item_variances` to `variances_of`", "tree": {"sha": "9ed6c1e0f9245f2f435d585e027c4dceba09d0d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ed6c1e0f9245f2f435d585e027c4dceba09d0d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3da5daf42587c9cece98a7b0985215cc40c31d58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3da5daf42587c9cece98a7b0985215cc40c31d58", "html_url": "https://github.com/rust-lang/rust/commit/3da5daf42587c9cece98a7b0985215cc40c31d58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3da5daf42587c9cece98a7b0985215cc40c31d58/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79de56a14b320327e5077232809ed5f2067aeb40", "url": "https://api.github.com/repos/rust-lang/rust/commits/79de56a14b320327e5077232809ed5f2067aeb40", "html_url": "https://github.com/rust-lang/rust/commit/79de56a14b320327e5077232809ed5f2067aeb40"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "9ffab1acf3cdee5bf9c6e55fb2f72bb655a72b81", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=3da5daf42587c9cece98a7b0985215cc40c31d58", "patch": "@@ -313,7 +313,7 @@ pub enum Variance {\n /// variance of every item in the local crate. You should not use it\n /// directly, because to do so will make your pass dependent on the\n /// HIR of every item in the local crate. Instead, use\n-/// `tcx.item_variances()` to get the variance for a *particular*\n+/// `tcx.variances_of()` to get the variance for a *particular*\n /// item.\n pub struct CrateVariancesMap {\n     /// This relation tracks the dependencies between the variance of"}, {"sha": "796cb8c4d651d08f02a107965013af44899af221", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=3da5daf42587c9cece98a7b0985215cc40c31d58", "patch": "@@ -240,8 +240,8 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n }\n \n impl<'a, 'b: 'a, 'tcx: 'b> EntryBuilder<'a, 'b, 'tcx> {\n-    fn encode_item_variances(&mut self, def_id: DefId) -> LazySeq<ty::Variance> {\n-        debug!(\"EntryBuilder::encode_item_variances({:?})\", def_id);\n+    fn encode_variances_of(&mut self, def_id: DefId) -> LazySeq<ty::Variance> {\n+        debug!(\"EntryBuilder::encode_variances_of({:?})\", def_id);\n         let tcx = self.tcx;\n         self.lazy_seq_from_slice(&tcx.variances_of(def_id))\n     }\n@@ -824,7 +824,7 @@ impl<'a, 'b: 'a, 'tcx: 'b> EntryBuilder<'a, 'b, 'tcx> {\n                 hir::ItemEnum(..) |\n                 hir::ItemStruct(..) |\n                 hir::ItemUnion(..) |\n-                hir::ItemTrait(..) => self.encode_item_variances(def_id),\n+                hir::ItemTrait(..) => self.encode_variances_of(def_id),\n                 _ => LazySeq::empty(),\n             },\n             generics: match item.node {"}, {"sha": "592916178897c8ab203ec2dd6f06f852f325e742", "filename": "src/librustc_typeck/variance/README.md", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc_typeck%2Fvariance%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc_typeck%2Fvariance%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2FREADME.md?ref=3da5daf42587c9cece98a7b0985215cc40c31d58", "patch": "@@ -102,15 +102,15 @@ can become quite muddled if we are not careful. To resolve this, we refactor\n into two queries:\n \n - `crate_variances` computes the variance for all items in the current crate.\n-- `item_variances` accesses the variance for an individual reading; it\n+- `variances_of` accesses the variance for an individual reading; it\n   works by requesting `crate_variances` and extracting the relevant data.\n   \n-If you limit yourself to reading `item_variances`, your code will only\n+If you limit yourself to reading `variances_of`, your code will only\n depend then on the inference inferred for that particular item.\n \n Eventually, the goal is to rely on the red-green dependency management\n algorithm. At the moment, however, we rely instead on a hack, where\n-`item_variances` ignores the dependencies of accessing\n+`variances_of` ignores the dependencies of accessing\n `crate_variances` and instead computes the *correct* dependencies\n itself. To this end, when we build up the constraints in the system,\n we also built up a transitive `dependencies` relation as part of the"}, {"sha": "1acadb7e772365efc7b1cfd7c380dcc202b6e48e", "filename": "src/librustc_typeck/variance/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3da5daf42587c9cece98a7b0985215cc40c31d58/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance%2Ftest.rs?ref=3da5daf42587c9cece98a7b0985215cc40c31d58", "patch": "@@ -27,12 +27,12 @@ impl<'a, 'tcx> ItemLikeVisitor<'tcx> for VarianceTest<'a, 'tcx> {\n         // For unit testing: check for a special \"rustc_variance\"\n         // attribute and report an error with various results if found.\n         if self.tcx.has_attr(item_def_id, \"rustc_variance\") {\n-            let item_variances = self.tcx.variances_of(item_def_id);\n+            let variances_of = self.tcx.variances_of(item_def_id);\n             span_err!(self.tcx.sess,\n                       item.span,\n                       E0208,\n                       \"{:?}\",\n-                      item_variances);\n+                      variances_of);\n         }\n     }\n "}]}