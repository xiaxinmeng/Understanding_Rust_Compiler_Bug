{"sha": "0273f6f849270a798761e056382f859063c69e21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyNzNmNmY4NDkyNzBhNzk4NzYxZTA1NjM4MmY4NTkwNjNjNjllMjE=", "commit": {"author": {"name": "Martin Pool", "email": "mbp@google.com", "date": "2020-12-02T16:50:17Z"}, "committer": {"name": "Martin Pool", "email": "mbp@google.com", "date": "2020-12-02T16:54:42Z"}, "message": "Add a doctest example of str::split on a slice of chars\n\nThis is mentioned as supported, but the semantics are not described.", "tree": {"sha": "d283b6f326c6f5c0126f0374593565c93cad95d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d283b6f326c6f5c0126f0374593565c93cad95d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0273f6f849270a798761e056382f859063c69e21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0273f6f849270a798761e056382f859063c69e21", "html_url": "https://github.com/rust-lang/rust/commit/0273f6f849270a798761e056382f859063c69e21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0273f6f849270a798761e056382f859063c69e21/comments", "author": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sourcefrog", "id": 346355, "node_id": "MDQ6VXNlcjM0NjM1NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/346355?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sourcefrog", "html_url": "https://github.com/sourcefrog", "followers_url": "https://api.github.com/users/sourcefrog/followers", "following_url": "https://api.github.com/users/sourcefrog/following{/other_user}", "gists_url": "https://api.github.com/users/sourcefrog/gists{/gist_id}", "starred_url": "https://api.github.com/users/sourcefrog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sourcefrog/subscriptions", "organizations_url": "https://api.github.com/users/sourcefrog/orgs", "repos_url": "https://api.github.com/users/sourcefrog/repos", "events_url": "https://api.github.com/users/sourcefrog/events{/privacy}", "received_events_url": "https://api.github.com/users/sourcefrog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d37afad0cc87bf709ad10c85319296ac53030f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/d37afad0cc87bf709ad10c85319296ac53030f03", "html_url": "https://github.com/rust-lang/rust/commit/d37afad0cc87bf709ad10c85319296ac53030f03"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "83cf47c8c8f61edbde4661068275e210d55a50ae", "filename": "library/core/src/str/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0273f6f849270a798761e056382f859063c69e21/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0273f6f849270a798761e056382f859063c69e21/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fmod.rs?ref=0273f6f849270a798761e056382f859063c69e21", "patch": "@@ -1131,6 +1131,13 @@ impl str {\n     /// assert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n     /// ```\n     ///\n+    /// If the pattern is a slice of chars, split on each occurrence of any of the characters:\n+    ///\n+    /// ```\n+    /// let v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\n+    /// assert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n+    /// ```\n+    ///\n     /// A more complex pattern, using a closure:\n     ///\n     /// ```"}]}