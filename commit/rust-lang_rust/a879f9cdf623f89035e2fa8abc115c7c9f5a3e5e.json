{"sha": "a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NzlmOWNkZjYyM2Y4OTAzNWUyZmE4YWJjMTE1YzdjOWY1YTNlNWU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-06-13T14:47:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-06-13T14:47:54Z"}, "message": "Rollup merge of #73302 - JakobDegen:should-panic-documentation, r=Mark-Simulacrum\n\nAdjusted some doctests in libcore to use `should_panic`.\n\nFixes #73196 .\n\nI grepped libstd and libcore for all the instances of this pattern that I could find, but its possible that I missed some of course. If anyone knows of any more, please let me know and I will add them to the PR.", "tree": {"sha": "88b29b0ddeafc05ec2b83ee0381f944beb55819b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b29b0ddeafc05ec2b83ee0381f944beb55819b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe5OcbCRBK7hj4Ov3rIwAAdHIIAE8JHvKKtC5WY1pJLbwZPNwI\n91RquDuYTb+8IFAcZkN1r0xhIqy0bNjuf94EYXFQs2MoVwR2FwvxdATSEnLName2\nTqzatPOHWvMd8Xbw2VKpar5Mup9gnpB6Mv4dI00cd3CvCTg/ommBK7oGfOdPYnrn\nhz2Aapt8gOicGD0qp2di7OLeXZatIHp2usW0KIO5hcsnRahjigggreir/DYsA7lv\ntUIQBH3ms36+Olbo6t608j3jqE2bNk/PREI1XRgicHnA4WGhsM5KgwJjbWUW1CCy\nb4yygynasMy3fDBEo122B+ICF/1Hikm2Bk+JyXepaD0u1E+2AIXOCf0fi3ZR4iE=\n=jGHn\n-----END PGP SIGNATURE-----\n", "payload": "tree 88b29b0ddeafc05ec2b83ee0381f944beb55819b\nparent 0bbc65186965828ab5255241a691e3bdab3f3793\nparent 3ab4b380aa0b0db982d3586b47dcfa13a1a427b8\nauthor Dylan DPC <dylan.dpc@gmail.com> 1592059674 +0200\ncommitter GitHub <noreply@github.com> 1592059674 +0200\n\nRollup merge of #73302 - JakobDegen:should-panic-documentation, r=Mark-Simulacrum\n\nAdjusted some doctests in libcore to use `should_panic`.\n\nFixes #73196 .\n\nI grepped libstd and libcore for all the instances of this pattern that I could find, but its possible that I missed some of course. If anyone knows of any more, please let me know and I will add them to the PR.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "html_url": "https://github.com/rust-lang/rust/commit/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bbc65186965828ab5255241a691e3bdab3f3793", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bbc65186965828ab5255241a691e3bdab3f3793", "html_url": "https://github.com/rust-lang/rust/commit/0bbc65186965828ab5255241a691e3bdab3f3793"}, {"sha": "3ab4b380aa0b0db982d3586b47dcfa13a1a427b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ab4b380aa0b0db982d3586b47dcfa13a1a427b8", "html_url": "https://github.com/rust-lang/rust/commit/3ab4b380aa0b0db982d3586b47dcfa13a1a427b8"}], "stats": {"total": 99, "additions": 28, "deletions": 71}, "files": [{"sha": "c4293ed7bcfe2a557f2204175d86fd84d48ed39b", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 8, "deletions": 18, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "patch": "@@ -778,18 +778,13 @@ impl<T: ?Sized> RefCell<T> {\n     ///\n     /// An example of panic:\n     ///\n-    /// ```\n+    /// ```should_panic\n     /// use std::cell::RefCell;\n-    /// use std::thread;\n-    ///\n-    /// let result = thread::spawn(move || {\n-    ///    let c = RefCell::new(5);\n-    ///    let m = c.borrow_mut();\n     ///\n-    ///    let b = c.borrow(); // this causes a panic\n-    /// }).join();\n+    /// let c = RefCell::new(5);\n     ///\n-    /// assert!(result.is_err());\n+    /// let m = c.borrow_mut();\n+    /// let b = c.borrow(); // this causes a panic\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n@@ -858,18 +853,13 @@ impl<T: ?Sized> RefCell<T> {\n     ///\n     /// An example of panic:\n     ///\n-    /// ```\n+    /// ```should_panic\n     /// use std::cell::RefCell;\n-    /// use std::thread;\n-    ///\n-    /// let result = thread::spawn(move || {\n-    ///    let c = RefCell::new(5);\n-    ///    let m = c.borrow();\n     ///\n-    ///    let b = c.borrow_mut(); // this causes a panic\n-    /// }).join();\n+    /// let c = RefCell::new(5);\n+    /// let m = c.borrow();\n     ///\n-    /// assert!(result.is_err());\n+    /// let b = c.borrow_mut(); // this causes a panic\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]"}, {"sha": "d7e39946148ed793fd1eb0b175f275305f92df08", "filename": "src/libcore/char/convert.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/src%2Flibcore%2Fchar%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/src%2Flibcore%2Fchar%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fconvert.rs?ref=a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "patch": "@@ -278,16 +278,11 @@ impl fmt::Display for CharTryFromError {\n ///\n /// Passing a large radix, causing a panic:\n ///\n-/// ```\n-/// use std::thread;\n+/// ```should_panic\n /// use std::char;\n ///\n-/// let result = thread::spawn(|| {\n-///     // this panics\n-///     let c = char::from_digit(1, 37);\n-/// }).join();\n-///\n-/// assert!(result.is_err());\n+/// // this panics\n+/// let c = char::from_digit(1, 37);\n /// ```\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "dd2f01c679f7347a33ac6409f1fef7fa1b13d3c0", "filename": "src/libcore/char/methods.rs", "status": "modified", "additions": 17, "deletions": 45, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/src%2Flibcore%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e/src%2Flibcore%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmethods.rs?ref=a879f9cdf623f89035e2fa8abc115c7c9f5a3e5e", "patch": "@@ -229,16 +229,11 @@ impl char {\n     ///\n     /// Passing a large radix, causing a panic:\n     ///\n-    /// ```\n-    /// use std::thread;\n+    /// ```should_panic\n     /// use std::char;\n     ///\n-    /// let result = thread::spawn(|| {\n-    ///     // this panics\n-    ///     let c = char::from_digit(1, 37);\n-    /// }).join();\n-    ///\n-    /// assert!(result.is_err());\n+    /// // this panics\n+    /// char::from_digit(1, 37);\n     /// ```\n     #[unstable(feature = \"assoc_char_funcs\", reason = \"recently added\", issue = \"71763\")]\n     #[inline]\n@@ -282,15 +277,9 @@ impl char {\n     ///\n     /// Passing a large radix, causing a panic:\n     ///\n-    /// ```\n-    /// use std::thread;\n-    ///\n-    /// let result = thread::spawn(|| {\n-    ///     // this panics\n-    ///     '1'.is_digit(37);\n-    /// }).join();\n-    ///\n-    /// assert!(result.is_err());\n+    /// ```should_panic\n+    /// // this panics\n+    /// '1'.is_digit(37);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n@@ -337,14 +326,9 @@ impl char {\n     ///\n     /// Passing a large radix, causing a panic:\n     ///\n-    /// ```\n-    /// use std::thread;\n-    ///\n-    /// let result = thread::spawn(|| {\n-    ///     '1'.to_digit(37);\n-    /// }).join();\n-    ///\n-    /// assert!(result.is_err());\n+    /// ```should_panic\n+    /// // this panics\n+    /// '1'.to_digit(37);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     #[inline]\n@@ -646,17 +630,11 @@ impl char {\n     ///\n     /// A buffer that's too small:\n     ///\n-    /// ```\n-    /// use std::thread;\n-    ///\n-    /// let result = thread::spawn(|| {\n-    ///     let mut b = [0; 1];\n-    ///\n-    ///     // this panics\n-    ///    '\u00df'.encode_utf8(&mut b);\n-    /// }).join();\n+    /// ```should_panic\n+    /// let mut b = [0; 1];\n     ///\n-    /// assert!(result.is_err());\n+    /// // this panics\n+    /// '\u00df'.encode_utf8(&mut b);\n     /// ```\n     #[stable(feature = \"unicode_encode_char\", since = \"1.15.0\")]\n     #[inline]\n@@ -687,17 +665,11 @@ impl char {\n     ///\n     /// A buffer that's too small:\n     ///\n-    /// ```\n-    /// use std::thread;\n-    ///\n-    /// let result = thread::spawn(|| {\n-    ///     let mut b = [0; 1];\n-    ///\n-    ///     // this panics\n-    ///     '\ud835\udd4a'.encode_utf16(&mut b);\n-    /// }).join();\n+    /// ```should_panic\n+    /// let mut b = [0; 1];\n     ///\n-    /// assert!(result.is_err());\n+    /// // this panics\n+    /// '\ud835\udd4a'.encode_utf16(&mut b);\n     /// ```\n     #[stable(feature = \"unicode_encode_char\", since = \"1.15.0\")]\n     #[inline]"}]}