{"sha": "9810a147a777e1cea91dd01a946fa6a0baf97e62", "node_id": "C_kwDOAAsO6NoAKDk4MTBhMTQ3YTc3N2UxY2VhOTFkZDAxYTk0NmZhNmEwYmFmOTdlNjI", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-06T03:59:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-03-06T03:59:23Z"}, "message": "add extra tests for shifts with negative offsets", "tree": {"sha": "76ff234a55f094f2da8036c97b455455c6914a80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76ff234a55f094f2da8036c97b455455c6914a80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9810a147a777e1cea91dd01a946fa6a0baf97e62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9810a147a777e1cea91dd01a946fa6a0baf97e62", "html_url": "https://github.com/rust-lang/rust/commit/9810a147a777e1cea91dd01a946fa6a0baf97e62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9810a147a777e1cea91dd01a946fa6a0baf97e62/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "54b14b7f0110133477e7459a327a0a5cbd18fd41", "url": "https://api.github.com/repos/rust-lang/rust/commits/54b14b7f0110133477e7459a327a0a5cbd18fd41", "html_url": "https://github.com/rust-lang/rust/commit/54b14b7f0110133477e7459a327a0a5cbd18fd41"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "f5c1a7a5ff21287ee6d5db746bc428a185473749", "filename": "tests/run-pass/integer-ops.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9810a147a777e1cea91dd01a946fa6a0baf97e62/tests%2Frun-pass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9810a147a777e1cea91dd01a946fa6a0baf97e62/tests%2Frun-pass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Finteger-ops.rs?ref=9810a147a777e1cea91dd01a946fa6a0baf97e62", "patch": "@@ -1,13 +1,24 @@\n+// compile-flags: -Coverflow-checks=off\n #![allow(arithmetic_overflow)]\n \n pub fn main() {\n-    // This tests that do (not) do sign extension properly when loading integers\n+    // This tests that we do (not) do sign extension properly when loading integers\n     assert_eq!(u32::MAX as i64, 4294967295);\n     assert_eq!(i32::MIN as i64, -2147483648);\n \n     assert_eq!(i8::MAX, 127);\n     assert_eq!(i8::MIN, -128);\n \n+    // Shifts with negative offsets are subtle.\n+    assert_eq!(13 << -2i8, 13 << 254);\n+    assert_eq!(13 << i8::MIN, 13);\n+    assert_eq!(13 << -1i16, 13 << u16::MAX);\n+    assert_eq!(13 << i16::MIN, 13);\n+    assert_eq!(13i128 << -2i8, 13i128 << 254);\n+    assert_eq!(13i128 << i8::MIN, 13);\n+    assert_eq!(13i128 << -1i16, 13i128 << u16::MAX);\n+    assert_eq!(13i128 << i16::MIN, 13);\n+\n     assert_eq!(i32::from_str_radix(\"A\", 16), Ok(10));\n \n     let n = -0b1000_0000i8;"}]}