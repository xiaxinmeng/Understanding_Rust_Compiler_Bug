{"sha": "7b3f72906ffea5a8aec9e3d109d8e012f771a672", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiM2Y3MjkwNmZmZWE1YThhZWM5ZTNkMTA5ZDhlMDEyZjc3MWE2NzI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-09-07T16:06:39Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-09-07T16:06:39Z"}, "message": "Add tracking issue", "tree": {"sha": "efcb77ea6ea1d3f3ccba778f61c422b0c22b90d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efcb77ea6ea1d3f3ccba778f61c422b0c22b90d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b3f72906ffea5a8aec9e3d109d8e012f771a672", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b3f72906ffea5a8aec9e3d109d8e012f771a672", "html_url": "https://github.com/rust-lang/rust/commit/7b3f72906ffea5a8aec9e3d109d8e012f771a672", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b3f72906ffea5a8aec9e3d109d8e012f771a672/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0e1c1691422132a40e5f534ff579004a79ef9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0e1c1691422132a40e5f534ff579004a79ef9c", "html_url": "https://github.com/rust-lang/rust/commit/0f0e1c1691422132a40e5f534ff579004a79ef9c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "32ec26975e375291ec503bd2194c7419e041f917", "filename": "src/libcore/bool.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7b3f72906ffea5a8aec9e3d109d8e012f771a672/src%2Flibcore%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7b3f72906ffea5a8aec9e3d109d8e012f771a672/src%2Flibcore%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbool.rs?ref=7b3f72906ffea5a8aec9e3d109d8e012f771a672", "patch": "@@ -13,7 +13,7 @@ impl bool {\n     /// assert_eq!(false.then(0), None);\n     /// assert_eq!(true.then(0), Some(0));\n     /// ```\n-    #[unstable(feature = \"bool_to_option\", issue = \"0\")]\n+    #[unstable(feature = \"bool_to_option\", issue = \"64260\")]\n     #[inline]\n     pub fn then<T>(self, t: T) -> Option<T> {\n         if self {\n@@ -33,7 +33,7 @@ impl bool {\n     /// assert_eq!(false.then_with(|| 0), None);\n     /// assert_eq!(true.then_with(|| 0), Some(0));\n     /// ```\n-    #[unstable(feature = \"bool_to_option\", issue = \"0\")]\n+    #[unstable(feature = \"bool_to_option\", issue = \"64260\")]\n     #[inline]\n     pub fn then_with<T, F: FnOnce() -> T>(self, f: F) -> Option<T> {\n         if self {"}]}