{"sha": "74f4f395aefd1054b8d8974a128007d0671e9d78", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0ZjRmMzk1YWVmZDEwNTRiOGQ4OTc0YTEyODAwN2QwNjcxZTlkNzg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-12T22:52:33Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-05-19T17:53:07Z"}, "message": "std: Don't require rust_try as an exported symbol\n\nThis commit adds a small non-generic non-inlineable shim function to\n`rt::unwind::try` which the compiler can take care of for managing the exported\nsymbol instead of having to edit `src/rt/rust_try.ll`", "tree": {"sha": "04cb70af0c63aa522ba89227e975944c656234ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04cb70af0c63aa522ba89227e975944c656234ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74f4f395aefd1054b8d8974a128007d0671e9d78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74f4f395aefd1054b8d8974a128007d0671e9d78", "html_url": "https://github.com/rust-lang/rust/commit/74f4f395aefd1054b8d8974a128007d0671e9d78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74f4f395aefd1054b8d8974a128007d0671e9d78/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d32cf5d9afdd8c375935ac875b2a20f24159e52", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d32cf5d9afdd8c375935ac875b2a20f24159e52", "html_url": "https://github.com/rust-lang/rust/commit/3d32cf5d9afdd8c375935ac875b2a20f24159e52"}], "stats": {"total": 33, "additions": 24, "deletions": 9}, "files": [{"sha": "576035ffe9a027ec20b2635a7b163143f1820359", "filename": "src/libstd/rt/unwind/mod.rs", "status": "modified", "additions": 24, "deletions": 9, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/74f4f395aefd1054b8d8974a128007d0671e9d78/src%2Flibstd%2Frt%2Funwind%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74f4f395aefd1054b8d8974a128007d0671e9d78/src%2Flibstd%2Frt%2Funwind%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind%2Fmod.rs?ref=74f4f395aefd1054b8d8974a128007d0671e9d78", "patch": "@@ -127,16 +127,31 @@ extern {}\n ///   run.\n pub unsafe fn try<F: FnOnce()>(f: F) -> Result<(), Box<Any + Send>> {\n     let mut f = Some(f);\n+    return inner_try(try_fn::<F>, &mut f as *mut _ as *mut c_void);\n \n-    let prev = PANICKING.with(|s| s.get());\n-    PANICKING.with(|s| s.set(false));\n-    let ep = rust_try(try_fn::<F>, &mut f as *mut _ as *mut c_void);\n-    PANICKING.with(|s| s.set(prev));\n-    return if ep.is_null() {\n-        Ok(())\n-    } else {\n-        Err(imp::cleanup(ep))\n-    };\n+    // If an inner function were not used here, then this generic function `try`\n+    // uses the native symbol `rust_try`, for which the code is statically\n+    // linked into the standard library. This means that the DLL for the\n+    // standard library must have `rust_try` as an exposed symbol that\n+    // downstream crates can link against (because monomorphizations of `try` in\n+    // downstream crates will have a reference to the `rust_try` symbol).\n+    //\n+    // On MSVC this requires the symbol `rust_try` to be tagged with\n+    // `dllexport`, but it's easier to not have conditional `src/rt/rust_try.ll`\n+    // files and instead just have this non-generic shim the compiler can take\n+    // care of exposing correctly.\n+    unsafe fn inner_try(f: extern fn(*mut c_void), data: *mut c_void)\n+                        -> Result<(), Box<Any + Send>> {\n+        let prev = PANICKING.with(|s| s.get());\n+        PANICKING.with(|s| s.set(false));\n+        let ep = rust_try(f, data);\n+        PANICKING.with(|s| s.set(prev));\n+        if ep.is_null() {\n+            Ok(())\n+        } else {\n+            Err(imp::cleanup(ep))\n+        }\n+    }\n \n     extern fn try_fn<F: FnOnce()>(opt_closure: *mut c_void) {\n         let opt_closure = opt_closure as *mut Option<F>;"}]}