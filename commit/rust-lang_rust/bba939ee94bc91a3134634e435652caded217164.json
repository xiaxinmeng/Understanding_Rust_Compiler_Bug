{"sha": "bba939ee94bc91a3134634e435652caded217164", "node_id": "C_kwDOAAsO6NoAKGJiYTkzOWVlOTRiYzkxYTMxMzQ2MzRlNDM1NjUyY2FkZWQyMTcxNjQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-17T03:37:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-17T03:37:17Z"}, "message": "Rollup merge of #101914 - aDotInTheVoid:rdj-path-union-docs, r=jsha\n\nrustdoc-json-types: Document that ResolvedPath can also be a union\n\nr? rustdoc", "tree": {"sha": "33d4a1117ef31b6b86f841d0186fea9845b55603", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33d4a1117ef31b6b86f841d0186fea9845b55603"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bba939ee94bc91a3134634e435652caded217164", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjJUDtCRBK7hj4Ov3rIwAA5cEIAJ+sGJB4gwuEo4ELnzE/uTtk\nsQrBx3dwp/q7FvVTD1k3WBizQ6jqf+N8AK/TFbH0J3ZUgwolYaf3iOL695gS6GMd\n/x7fk1R4fTjbTesuxt4dwmtSzhdOMTkQdguPEJAMZbD8DZCfMo40mWaRz7iu9krn\nJ/BqTOjrkLSVYl6hVbId9huxpPBqFG120blTqL9XEyc09b5rroYT7YT/3hRpow8/\niNsnP9/DNcZVE7Dc+fBCoUPUvedxFxCYuhiVDqPrxd+pqozfhR4Kt0GuGT3GwE4e\niFPelZx+EWp2XYiwOaqBZjazNKFZD5XWIpEkbWsCq3r61rJgrytSvdIkvuDaSqw=\n=mBqX\n-----END PGP SIGNATURE-----\n", "payload": "tree 33d4a1117ef31b6b86f841d0186fea9845b55603\nparent b1178afcb4bc9199ef09c62b5e34ffc18b93ec94\nparent cb6c923cf475aa1d3b390acdf00d70123af7fb75\nauthor Michael Howell <michael@notriddle.com> 1663385837 -0700\ncommitter GitHub <noreply@github.com> 1663385837 -0700\n\nRollup merge of #101914 - aDotInTheVoid:rdj-path-union-docs, r=jsha\n\nrustdoc-json-types: Document that ResolvedPath can also be a union\n\nr? rustdoc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bba939ee94bc91a3134634e435652caded217164", "html_url": "https://github.com/rust-lang/rust/commit/bba939ee94bc91a3134634e435652caded217164", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bba939ee94bc91a3134634e435652caded217164/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1178afcb4bc9199ef09c62b5e34ffc18b93ec94", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1178afcb4bc9199ef09c62b5e34ffc18b93ec94", "html_url": "https://github.com/rust-lang/rust/commit/b1178afcb4bc9199ef09c62b5e34ffc18b93ec94"}, {"sha": "cb6c923cf475aa1d3b390acdf00d70123af7fb75", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb6c923cf475aa1d3b390acdf00d70123af7fb75", "html_url": "https://github.com/rust-lang/rust/commit/cb6c923cf475aa1d3b390acdf00d70123af7fb75"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "fb183042670e8db73ee2240255962a537d60cfd8", "filename": "src/rustdoc-json-types/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bba939ee94bc91a3134634e435652caded217164/src%2Frustdoc-json-types%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba939ee94bc91a3134634e435652caded217164/src%2Frustdoc-json-types%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc-json-types%2Flib.rs?ref=bba939ee94bc91a3134634e435652caded217164", "patch": "@@ -542,7 +542,7 @@ pub enum Term {\n #[serde(rename_all = \"snake_case\")]\n #[serde(tag = \"kind\", content = \"inner\")]\n pub enum Type {\n-    /// Structs and enums\n+    /// Structs, enums, and unions\n     ResolvedPath(Path),\n     DynTrait(DynTrait),\n     /// Parameterized types"}, {"sha": "c9df2b81c4b0f61f283a829fb4979c3720fef581", "filename": "src/test/rustdoc-json/unions/union.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bba939ee94bc91a3134634e435652caded217164/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bba939ee94bc91a3134634e435652caded217164/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Funions%2Funion.rs?ref=bba939ee94bc91a3134634e435652caded217164", "patch": "@@ -1,7 +1,15 @@\n // @has \"$.index[*][?(@.name=='Union')].visibility\" \\\"public\\\"\n // @has \"$.index[*][?(@.name=='Union')].kind\" \\\"union\\\"\n // @!has \"$.index[*][?(@.name=='Union')].inner.struct_type\"\n+// @set Union = \"$.index[*][?(@.name=='Union')].id\"\n pub union Union {\n     int: i32,\n     float: f32,\n }\n+\n+\n+// @is \"$.index[*][?(@.name=='make_int_union')].inner.decl.output.kind\" '\"resolved_path\"'\n+// @is \"$.index[*][?(@.name=='make_int_union')].inner.decl.output.inner.id\" $Union\n+pub fn make_int_union(int: i32) -> Union {\n+    Union { int }\n+}"}]}