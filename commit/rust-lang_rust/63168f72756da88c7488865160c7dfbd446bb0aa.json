{"sha": "63168f72756da88c7488865160c7dfbd446bb0aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzMTY4ZjcyNzU2ZGE4OGM3NDg4ODY1MTYwYzdkZmJkNDQ2YmIwYWE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-23T06:44:44Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-02-23T16:24:49Z"}, "message": "Lint bare traits", "tree": {"sha": "bfc817b50895c4e1f9d668d0aa95de313fd726e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfc817b50895c4e1f9d668d0aa95de313fd726e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63168f72756da88c7488865160c7dfbd446bb0aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63168f72756da88c7488865160c7dfbd446bb0aa", "html_url": "https://github.com/rust-lang/rust/commit/63168f72756da88c7488865160c7dfbd446bb0aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63168f72756da88c7488865160c7dfbd446bb0aa/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd29696218c9363d0e6dff7824c53f040eab76fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd29696218c9363d0e6dff7824c53f040eab76fc", "html_url": "https://github.com/rust-lang/rust/commit/bd29696218c9363d0e6dff7824c53f040eab76fc"}], "stats": {"total": 27, "additions": 23, "deletions": 4}, "files": [{"sha": "aeccf133fa86a51f82a97af96567f5874527e4fb", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 20, "deletions": 4, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/63168f72756da88c7488865160c7dfbd446bb0aa/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63168f72756da88c7488865160c7dfbd446bb0aa/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=63168f72756da88c7488865160c7dfbd446bb0aa", "patch": "@@ -46,7 +46,7 @@ use hir::HirVec;\n use hir::map::{Definitions, DefKey, DefPathData};\n use hir::def_id::{DefIndex, DefId, CRATE_DEF_INDEX, DefIndexAddressSpace};\n use hir::def::{Def, PathResolution};\n-use lint::builtin::PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES;\n+use lint::builtin::{self, PARENTHESIZED_PARAMS_IN_TYPES_AND_MODULES};\n use middle::cstore::CrateStore;\n use rustc_data_structures::indexed_vec::IndexVec;\n use session::Session;\n@@ -912,7 +912,11 @@ impl<'a> LoweringContext<'a> {\n             TyKind::Path(ref qself, ref path) => {\n                 let id = self.lower_node_id(t.id);\n                 let qpath = self.lower_qpath(t.id, qself, path, ParamMode::Explicit, itctx);\n-                return self.ty_path(id, t.span, qpath);\n+                let ty = self.ty_path(id, t.span, qpath);\n+                if let hir::TyTraitObject(..) = ty.node {\n+                    self.maybe_lint_bare_trait(t.span, t.id);\n+                }\n+                return ty;\n             }\n             TyKind::ImplicitSelf => {\n                 hir::TyPath(hir::QPath::Resolved(None, P(hir::Path {\n@@ -931,7 +935,7 @@ impl<'a> LoweringContext<'a> {\n                 let expr = self.lower_body(None, |this| this.lower_expr(expr));\n                 hir::TyTypeof(expr)\n             }\n-            TyKind::TraitObject(ref bounds, ..) => {\n+            TyKind::TraitObject(ref bounds, kind) => {\n                 let mut lifetime_bound = None;\n                 let bounds = bounds.iter().filter_map(|bound| {\n                     match *bound {\n@@ -950,6 +954,9 @@ impl<'a> LoweringContext<'a> {\n                 let lifetime_bound = lifetime_bound.unwrap_or_else(|| {\n                     self.elided_lifetime(t.span)\n                 });\n+                if kind != TraitObjectSyntax::Dyn {\n+                    self.maybe_lint_bare_trait(t.span, t.id);\n+                }\n                 hir::TyTraitObject(bounds, lifetime_bound)\n             }\n             TyKind::ImplTrait(ref bounds) => {\n@@ -3685,7 +3692,6 @@ impl<'a> LoweringContext<'a> {\n                     // The original ID is taken by the `PolyTraitRef`,\n                     // so the `Ty` itself needs a different one.\n                     id = self.next_id();\n-\n                     hir::TyTraitObject(hir_vec![principal], self.elided_lifetime(span))\n                 } else {\n                     hir::TyPath(hir::QPath::Resolved(None, path))\n@@ -3703,6 +3709,16 @@ impl<'a> LoweringContext<'a> {\n             name: hir::LifetimeName::Implicit,\n         }\n     }\n+\n+    fn maybe_lint_bare_trait(&self, span: Span, id: NodeId) {\n+        if self.sess.features.borrow().dyn_trait {\n+            self.sess.buffer_lint_with_diagnostic(\n+                builtin::BARE_TRAIT_OBJECT, id, span,\n+                \"trait objects without an explicit `dyn` are deprecated\",\n+                builtin::BuiltinLintDiagnostics::BareTraitObject(span)\n+            )\n+        }\n+    }\n }\n \n fn body_ids(bodies: &BTreeMap<hir::BodyId, hir::Body>) -> Vec<hir::BodyId> {"}, {"sha": "e1ca4665df8bbfac6c30472a7450fd762cc4523c", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/63168f72756da88c7488865160c7dfbd446bb0aa/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63168f72756da88c7488865160c7dfbd446bb0aa/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=63168f72756da88c7488865160c7dfbd446bb0aa", "patch": "@@ -40,6 +40,8 @@\n        html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![deny(warnings)]\n \n+#![cfg_attr(not(stage0), allow(bare_trait_object))]\n+\n #![feature(box_patterns)]\n #![feature(box_syntax)]\n #![feature(conservative_impl_trait)]"}, {"sha": "7905065bc1d8fc2c84661fc45c7ba6c4ca461f6c", "filename": "src/librustc_mir/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/63168f72756da88c7488865160c7dfbd446bb0aa/src%2Flibrustc_mir%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63168f72756da88c7488865160c7dfbd446bb0aa/src%2Flibrustc_mir%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Flib.rs?ref=63168f72756da88c7488865160c7dfbd446bb0aa", "patch": "@@ -15,6 +15,7 @@ Rust MIR: a lowered representation of Rust. Also: an experiment!\n */\n \n #![deny(warnings)]\n+#![cfg_attr(not(stage0), allow(bare_trait_object))]\n \n #![feature(box_patterns)]\n #![feature(box_syntax)]"}]}