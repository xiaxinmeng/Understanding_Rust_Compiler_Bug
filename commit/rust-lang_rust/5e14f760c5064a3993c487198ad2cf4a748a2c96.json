{"sha": "5e14f760c5064a3993c487198ad2cf4a748a2c96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlMTRmNzYwYzUwNjRhMzk5M2M0ODcxOThhZDJjZjRhNzQ4YTJjOTY=", "commit": {"author": {"name": "Sean Klein", "email": "seanmarionklein@gmail.com", "date": "2021-01-19T18:40:58Z"}, "committer": {"name": "Caleb Cartwright", "email": "calebcartwright@users.noreply.github.com", "date": "2021-01-28T01:26:58Z"}, "message": "fix: Avoid incorrect global 'cfg_if' Symbol interning\n\nFixes #4656", "tree": {"sha": "35c95c7282c381621e4237b13964a82186749285", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35c95c7282c381621e4237b13964a82186749285"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e14f760c5064a3993c487198ad2cf4a748a2c96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e14f760c5064a3993c487198ad2cf4a748a2c96", "html_url": "https://github.com/rust-lang/rust/commit/5e14f760c5064a3993c487198ad2cf4a748a2c96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e14f760c5064a3993c487198ad2cf4a748a2c96/comments", "author": {"login": "smklein", "id": 3258857, "node_id": "MDQ6VXNlcjMyNTg4NTc=", "avatar_url": "https://avatars.githubusercontent.com/u/3258857?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smklein", "html_url": "https://github.com/smklein", "followers_url": "https://api.github.com/users/smklein/followers", "following_url": "https://api.github.com/users/smklein/following{/other_user}", "gists_url": "https://api.github.com/users/smklein/gists{/gist_id}", "starred_url": "https://api.github.com/users/smklein/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smklein/subscriptions", "organizations_url": "https://api.github.com/users/smklein/orgs", "repos_url": "https://api.github.com/users/smklein/repos", "events_url": "https://api.github.com/users/smklein/events{/privacy}", "received_events_url": "https://api.github.com/users/smklein/received_events", "type": "User", "site_admin": false}, "committer": {"login": "calebcartwright", "id": 13042488, "node_id": "MDQ6VXNlcjEzMDQyNDg4", "avatar_url": "https://avatars.githubusercontent.com/u/13042488?v=4", "gravatar_id": "", "url": "https://api.github.com/users/calebcartwright", "html_url": "https://github.com/calebcartwright", "followers_url": "https://api.github.com/users/calebcartwright/followers", "following_url": "https://api.github.com/users/calebcartwright/following{/other_user}", "gists_url": "https://api.github.com/users/calebcartwright/gists{/gist_id}", "starred_url": "https://api.github.com/users/calebcartwright/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/calebcartwright/subscriptions", "organizations_url": "https://api.github.com/users/calebcartwright/orgs", "repos_url": "https://api.github.com/users/calebcartwright/repos", "events_url": "https://api.github.com/users/calebcartwright/events{/privacy}", "received_events_url": "https://api.github.com/users/calebcartwright/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "110271469a151f790f2e4c92949d128f0ece99f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/110271469a151f790f2e4c92949d128f0ece99f1", "html_url": "https://github.com/rust-lang/rust/commit/110271469a151f790f2e4c92949d128f0ece99f1"}], "stats": {"total": 68, "additions": 63, "deletions": 5}, "files": [{"sha": "370b7eb6c4e6d91a9da6f8abf26167249b6ca1f1", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -3,6 +3,7 @@\n \n #[macro_use]\n extern crate derive_new;\n+#[cfg(test)]\n #[macro_use]\n extern crate lazy_static;\n #[macro_use]"}, {"sha": "cadcd30a3d2c518c103f24eefaa2aef816eb53d1", "filename": "src/modules.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -21,10 +21,6 @@ mod visitor;\n \n type FileModMap<'ast> = BTreeMap<FileName, Module<'ast>>;\n \n-lazy_static! {\n-    static ref CFG_IF: Symbol = Symbol::intern(\"cfg_if\");\n-}\n-\n /// Represents module with its inner attributes.\n #[derive(Debug, Clone)]\n pub(crate) struct Module<'a> {\n@@ -480,7 +476,7 @@ fn is_cfg_if(item: &ast::Item) -> bool {\n     match item.kind {\n         ast::ItemKind::MacCall(ref mac) => {\n             if let Some(first_segment) = mac.path.segments.first() {\n-                if first_segment.ident.name == *CFG_IF {\n+                if first_segment.ident.name == Symbol::intern(\"cfg_if\") {\n                     return true;\n                 }\n             }"}, {"sha": "142de28f33056080f6f6239c1b69fac9c177a7cf", "filename": "src/test/mod.rs", "status": "modified", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/src%2Ftest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/src%2Ftest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmod.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -372,6 +372,44 @@ fn self_tests() {\n     );\n }\n \n+#[test]\n+fn format_files_find_new_files_via_cfg_if() {\n+    init_log();\n+    run_test_with(&TestSetting::default(), || {\n+        // To repro issue-4656, it is necessary that these files are parsed\n+        // as a part of the same session (hence this separate test runner).\n+        let files = vec![\n+            Path::new(\"tests/source/issue-4656/lib2.rs\"),\n+            Path::new(\"tests/source/issue-4656/lib.rs\"),\n+        ];\n+\n+        let config = Config::default();\n+        let mut session = Session::<io::Stdout>::new(config, None);\n+\n+        let mut write_result = HashMap::new();\n+        for file in files {\n+            assert!(file.exists());\n+            let result = session.format(Input::File(file.into())).unwrap();\n+            assert!(!session.has_formatting_errors());\n+            assert!(!result.has_warnings());\n+            let mut source_file = SourceFile::new();\n+            mem::swap(&mut session.source_file, &mut source_file);\n+\n+            for (filename, text) in source_file {\n+                if let FileName::Real(ref filename) = filename {\n+                    write_result.insert(filename.to_owned(), text);\n+                }\n+            }\n+        }\n+        assert_eq!(\n+            3,\n+            write_result.len(),\n+            \"Should have uncovered an extra file (format_me_please.rs) via lib.rs\"\n+        );\n+        assert!(handle_result(write_result, None).is_ok());\n+    });\n+}\n+\n #[test]\n fn stdin_formatting_smoke_test() {\n     init_log();"}, {"sha": "7de753016497aae2779ceee9faf8db85e163f716", "filename": "tests/source/issue-4656/format_me_please.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Fsource%2Fissue-4656%2Fformat_me_please.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Fsource%2Fissue-4656%2Fformat_me_please.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4656%2Fformat_me_please.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -0,0 +1,2 @@\n+\n+pub fn     hello(   )  {     }"}, {"sha": "5dac91b8aab2cd1cc7d3489292955c511fbefd32", "filename": "tests/source/issue-4656/lib.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Fsource%2Fissue-4656%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Fsource%2Fissue-4656%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4656%2Flib.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -0,0 +1,7 @@\n+extern crate cfg_if;\n+\n+cfg_if::cfg_if! {\n+    if #[cfg(target_family = \"unix\")] {\n+        mod format_me_please;\n+    }\n+}"}, {"sha": "b17fffc58e1dd564b660e351040f88754018cb2b", "filename": "tests/source/issue-4656/lib2.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Fsource%2Fissue-4656%2Flib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Fsource%2Fissue-4656%2Flib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-4656%2Flib2.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -0,0 +1,3 @@\n+its_a_macro! {\n+    // Contents\n+}"}, {"sha": "421e195a2fbd9936156a21209212ef653fa92b26", "filename": "tests/target/issue-4656/format_me_please.rs", "status": "added", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Ftarget%2Fissue-4656%2Fformat_me_please.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Ftarget%2Fissue-4656%2Fformat_me_please.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4656%2Fformat_me_please.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -0,0 +1 @@\n+pub fn hello() {}"}, {"sha": "5dac91b8aab2cd1cc7d3489292955c511fbefd32", "filename": "tests/target/issue-4656/lib.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Ftarget%2Fissue-4656%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Ftarget%2Fissue-4656%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4656%2Flib.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -0,0 +1,7 @@\n+extern crate cfg_if;\n+\n+cfg_if::cfg_if! {\n+    if #[cfg(target_family = \"unix\")] {\n+        mod format_me_please;\n+    }\n+}"}, {"sha": "b17fffc58e1dd564b660e351040f88754018cb2b", "filename": "tests/target/issue-4656/lib2.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Ftarget%2Fissue-4656%2Flib2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e14f760c5064a3993c487198ad2cf4a748a2c96/tests%2Ftarget%2Fissue-4656%2Flib2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-4656%2Flib2.rs?ref=5e14f760c5064a3993c487198ad2cf4a748a2c96", "patch": "@@ -0,0 +1,3 @@\n+its_a_macro! {\n+    // Contents\n+}"}]}