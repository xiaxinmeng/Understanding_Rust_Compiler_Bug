{"sha": "58125e5433c7067b1b5331791bf15418715e046e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4MTI1ZTU0MzNjNzA2N2IxYjUzMzE3OTFiZjE1NDE4NzE1ZTA0NmU=", "commit": {"author": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-13T04:09:40Z"}, "committer": {"name": "jbranchaud", "email": "jbranchaud@gmail.com", "date": "2014-12-13T04:09:40Z"}, "message": "Add a doctest for BTreeSet::new.", "tree": {"sha": "f4e1aa7f86b2eadb7d538a483ec201a55ee9262a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4e1aa7f86b2eadb7d538a483ec201a55ee9262a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58125e5433c7067b1b5331791bf15418715e046e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58125e5433c7067b1b5331791bf15418715e046e", "html_url": "https://github.com/rust-lang/rust/commit/58125e5433c7067b1b5331791bf15418715e046e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58125e5433c7067b1b5331791bf15418715e046e/comments", "author": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jbranchaud", "id": 694063, "node_id": "MDQ6VXNlcjY5NDA2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/694063?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jbranchaud", "html_url": "https://github.com/jbranchaud", "followers_url": "https://api.github.com/users/jbranchaud/followers", "following_url": "https://api.github.com/users/jbranchaud/following{/other_user}", "gists_url": "https://api.github.com/users/jbranchaud/gists{/gist_id}", "starred_url": "https://api.github.com/users/jbranchaud/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jbranchaud/subscriptions", "organizations_url": "https://api.github.com/users/jbranchaud/orgs", "repos_url": "https://api.github.com/users/jbranchaud/repos", "events_url": "https://api.github.com/users/jbranchaud/events{/privacy}", "received_events_url": "https://api.github.com/users/jbranchaud/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffc111889e93bcd38222d9d74a70fdc26a78fcb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffc111889e93bcd38222d9d74a70fdc26a78fcb5", "html_url": "https://github.com/rust-lang/rust/commit/ffc111889e93bcd38222d9d74a70fdc26a78fcb5"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "f02b1d3f3adb3afde1f73697c1b65c362cccfabe", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/58125e5433c7067b1b5331791bf15418715e046e/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58125e5433c7067b1b5331791bf15418715e046e/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=58125e5433c7067b1b5331791bf15418715e046e", "patch": "@@ -64,6 +64,14 @@ pub struct UnionItems<'a, T:'a> {\n \n impl<T: Ord> BTreeSet<T> {\n     /// Makes a new BTreeSet with a reasonable choice of B.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::BTreeSet;\n+    ///\n+    /// let mut set: BTreeSet<int> = BTreeSet::new();\n+    /// ```\n     #[unstable = \"matches collection reform specification, waiting for dust to settle\"]\n     pub fn new() -> BTreeSet<T> {\n         BTreeSet { map: BTreeMap::new() }"}]}