{"sha": "806d7d725d3575fd1ec161a3c0e030ddde8da400", "node_id": "C_kwDOAAsO6NoAKDgwNmQ3ZDcyNWQzNTc1ZmQxZWMxNjFhM2MwZTAzMGRkZGU4ZGE0MDA", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-22T10:07:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-22T10:07:23Z"}, "message": "Merge #10828\n\n10828: doc: document absence of stability guarantees r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "cf696ad747b2f89d445770d5c8ab9ddcfff2d613", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf696ad747b2f89d445770d5c8ab9ddcfff2d613"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/806d7d725d3575fd1ec161a3c0e030ddde8da400", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhm2vbCRBK7hj4Ov3rIwAACPAIABLZjkok4mWOfFVIv4XhKZTf\nZIttFvJTwfmni8z5OQ31C045yg+1RBCyjXKPJW9keo9QExo2cMi3mYAywoS23sLm\nhNrCHGbp91qwIOrbDRJ2E7OpCftv5gZeDXpkCTSBgZq8qdCsPtMKbavq6NzR4c5r\nqiBkPKYMSsw/+lJlEbPAucNQInYtJXqR+ADtOvKn2oSJB5aTOxq+JMIlk+1opxgX\nEP6LJ8ptV5chX2TONkbHGHlJeYvB/MPawY44Wd/yRZsNGnvEQriPVWoMJfVC0rTF\no+DK/21r7jY700miYg2MUj99koZPSiRmzb8vVmXfvSIWEYTqYWBIX9/xeNU1z08=\n=xuWy\n-----END PGP SIGNATURE-----\n", "payload": "tree cf696ad747b2f89d445770d5c8ab9ddcfff2d613\nparent 183ef048f61ae36aa389d1d0345cde940fe788e9\nparent d9dc925c2e9597a0aff11998ff6b00ab19b70eb5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637575643 +0000\ncommitter GitHub <noreply@github.com> 1637575643 +0000\n\nMerge #10828\n\n10828: doc: document absence of stability guarantees r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/806d7d725d3575fd1ec161a3c0e030ddde8da400", "html_url": "https://github.com/rust-lang/rust/commit/806d7d725d3575fd1ec161a3c0e030ddde8da400", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/806d7d725d3575fd1ec161a3c0e030ddde8da400/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183ef048f61ae36aa389d1d0345cde940fe788e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/183ef048f61ae36aa389d1d0345cde940fe788e9", "html_url": "https://github.com/rust-lang/rust/commit/183ef048f61ae36aa389d1d0345cde940fe788e9"}, {"sha": "d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5", "html_url": "https://github.com/rust-lang/rust/commit/d9dc925c2e9597a0aff11998ff6b00ab19b70eb5"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "2f2c4351c737b95b8163c8df1e2ee2473a9d09f7", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/806d7d725d3575fd1ec161a3c0e030ddde8da400/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/806d7d725d3575fd1ec161a3c0e030ddde8da400/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=806d7d725d3575fd1ec161a3c0e030ddde8da400", "patch": "@@ -306,6 +306,32 @@ This crate contains utilities for CPU and memory profiling.\n \n This sections talks about the things which are everywhere and nowhere in particular.\n \n+### Stability Guarantees\n+\n+One of the reasons rust-analyzer moves relatively fast is that we don't introduce new stability guarantees.\n+Instead, as much as possible we leverage existing ones.\n+\n+Examples:\n+\n+* The `ide` API of rust-analyzer are explicitly unstable, but the LSP interface is stable, and here we just implement a stable API managed by someone else.\n+* Rust language and Cargo are stable, and they are the primary inputs to rust-analyzer.\n+* The `rowan` library is published to crates.io, but it is deliberately kept under `1.0` and always makes semver-incompatible upgrades\n+\n+Another important example is that rust-analyzer isn't run on CI, so, unlike `rustc` and `clippy`, it is actually ok for us to change runtime behavior.\n+\n+At some point we might consider opening up APIs or allowing crates.io libraries to include rust-analyzer specific annotations, but that's going to be a big commitment on our side.\n+\n+Exceptions:\n+\n+* `rust-project.json` is a de-facto stable format for non-cargo build systems.\n+  It is probably ok enough, but was definitely stabilized implicitly.\n+  Lesson for the future: when designing API which could become a stability boundary, don't wait for the first users until you stabilize it.\n+  By the time you have first users, it is already de-facto stable.\n+  And the users will first use the thing, and *then* inform you that now you have users.\n+  The sad thing is that stuff should be stable before someone uses it for the first time, or it should contain explicit opt-in.\n+* We ship some LSP extensions, and we try to keep those somewhat stable.\n+  Here, we need to work with a finite set of editor maintainers, so not providing rock-solid guarantees works.\n+\n ### Code generation\n \n Some components in this repository are generated through automatic processes."}]}