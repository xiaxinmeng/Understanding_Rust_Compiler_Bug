{"sha": "973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "node_id": "C_kwDOAAsO6NoAKDk3MzA1OWUxZTdlM2E2NmMzMTM4ZTc1NzhkN2M5YzlhYjgzYjUzMTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-09-10T05:09:23Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-10T05:09:23Z"}, "message": "Rollup merge of #101634 - aDotInTheVoid:rdj-test, r=CraftSpider\n\nRustdoc-Json Tests: Use `@is` and `@ismany` more often.", "tree": {"sha": "0ee742f6629fcb62f241df827df85662a5e864e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ee742f6629fcb62f241df827df85662a5e864e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjHBwDCRBK7hj4Ov3rIwAAXtgIACl27mqqZVqXg0FmmaIVXxPt\niILCFRO81mULia8rZnNleMDkNe55ypBPKH/X/Y2AnDKyDy21+Mp6380UL6HGllbr\nVTr5KCw5Qe/al7Q1B5U90jVgM0VdHykY+bqSwjDfp39wMq3CVqtSOyTSHHXfgFzd\nMb5JjxWbnrMz0N80oNyQMaq89TG+0nX5b+X0iAE2WUbFkR3j+5QwLY1Z0jKrjjk+\nB1KRqLO7hA3tUz5O67urlwTCQZXax+3QZc1v7O9FO0gcLQPLN5e5JUpuONWr4U8D\nYlJVdmiutb8osHM+87hJdxd5yEtS0AsSgOZ+HW19GhuLeaAgA+SC5w1X8YeSGzM=\n=AvVT\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ee742f6629fcb62f241df827df85662a5e864e0\nparent 2566e31a87791c90a20b47df2779bc26bc1fb0b1\nparent 5634b26ed68efdbf0b25a4df7823cb47ef65c49e\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1662786563 +0200\ncommitter GitHub <noreply@github.com> 1662786563 +0200\n\nRollup merge of #101634 - aDotInTheVoid:rdj-test, r=CraftSpider\n\nRustdoc-Json Tests: Use `@is` and `@ismany` more often.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "html_url": "https://github.com/rust-lang/rust/commit/973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2566e31a87791c90a20b47df2779bc26bc1fb0b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2566e31a87791c90a20b47df2779bc26bc1fb0b1", "html_url": "https://github.com/rust-lang/rust/commit/2566e31a87791c90a20b47df2779bc26bc1fb0b1"}, {"sha": "5634b26ed68efdbf0b25a4df7823cb47ef65c49e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5634b26ed68efdbf0b25a4df7823cb47ef65c49e", "html_url": "https://github.com/rust-lang/rust/commit/5634b26ed68efdbf0b25a4df7823cb47ef65c49e"}], "stats": {"total": 116, "additions": 61, "deletions": 55}, "files": [{"sha": "6d7f6bb969fb1b9d0b68e241a8490d8ce1b84576", "filename": "src/test/rustdoc-json/assoc_items.rs", "status": "modified", "additions": 20, "deletions": 10, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fassoc_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fassoc_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fassoc_items.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -3,25 +3,35 @@\n pub struct Simple;\n \n impl Simple {\n-    // @has \"$.index[*][?(@.name=='CONSTANT')].kind\" \\\"assoc_const\\\"\n+    // @is \"$.index[*][?(@.name=='CONSTANT')].kind\" \\\"assoc_const\\\"\n     pub const CONSTANT: usize = 0;\n }\n \n pub trait EasyToImpl {\n-    // @has \"$.index[*][?(@.name=='ToDeclare')].kind\" \\\"assoc_type\\\"\n-    // @has \"$.index[*][?(@.name=='ToDeclare')].inner.default\" null\n+    // @is \"$.index[*][?(@.docs=='ToDeclare trait')].kind\" \\\"assoc_type\\\"\n+    // @is \"$.index[*][?(@.docs=='ToDeclare trait')].inner.default\" null\n+    // @is \"$.index[*][?(@.docs=='ToDeclare trait')].inner.bounds\" []\n+    /// ToDeclare trait\n     type ToDeclare;\n-    // @has \"$.index[*][?(@.name=='AN_ATTRIBUTE')].kind\" \\\"assoc_const\\\"\n-    // @has \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.default\" null\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE trait')].kind\" \\\"assoc_const\\\"\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE trait')].inner.default\" null\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE trait')].inner.type.kind\" '\"primitive\"'\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE trait')].inner.type.inner\" '\"usize\"'\n+    /// AN_ATTRIBUTE trait\n     const AN_ATTRIBUTE: usize;\n }\n \n impl EasyToImpl for Simple {\n-    // @has \"$.index[*][?(@.name=='ToDeclare')].inner.default.kind\" \\\"primitive\\\"\n-    // @has \"$.index[*][?(@.name=='ToDeclare')].inner.default.inner\" \\\"usize\\\"\n+    // @is \"$.index[*][?(@.docs=='ToDeclare impl')].kind\" '\"assoc_type\"'\n+    // @is \"$.index[*][?(@.docs=='ToDeclare impl')].inner.default.kind\" \\\"primitive\\\"\n+    // @is \"$.index[*][?(@.docs=='ToDeclare impl')].inner.default.inner\" \\\"usize\\\"\n+    /// ToDeclare impl\n     type ToDeclare = usize;\n-    // @has \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.type.kind\" \\\"primitive\\\"\n-    // @has \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.type.inner\" \\\"usize\\\"\n-    // @has \"$.index[*][?(@.name=='AN_ATTRIBUTE')].inner.default\" \\\"12\\\"\n+\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE impl')].kind\" '\"assoc_const\"'\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE impl')].inner.type.kind\" \\\"primitive\\\"\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE impl')].inner.type.inner\" \\\"usize\\\"\n+    // @is \"$.index[*][?(@.docs=='AN_ATTRIBUTE impl')].inner.default\" \\\"12\\\"\n+    /// AN_ATTRIBUTE impl\n     const AN_ATTRIBUTE: usize = 12;\n }"}, {"sha": "23b854d8d1721a1c05db3bcd017fe442a757c475", "filename": "src/test/rustdoc-json/enums/variant_struct.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fenums%2Fvariant_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fenums%2Fvariant_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fenums%2Fvariant_struct.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -1,9 +1,9 @@\n-// @has \"$.index[*][?(@.name=='EnumStruct')].visibility\" \\\"public\\\"\n-// @has \"$.index[*][?(@.name=='EnumStruct')].kind\" \\\"enum\\\"\n+// @is \"$.index[*][?(@.name=='EnumStruct')].visibility\" \\\"public\\\"\n+// @is \"$.index[*][?(@.name=='EnumStruct')].kind\" \\\"enum\\\"\n pub enum EnumStruct {\n-    // @has \"$.index[*][?(@.name=='VariantS')].inner.variant_kind\" \\\"struct\\\"\n-    // @has \"$.index[*][?(@.name=='x')].kind\" \\\"struct_field\\\"\n-    // @has \"$.index[*][?(@.name=='y')].kind\" \\\"struct_field\\\"\n+    // @is \"$.index[*][?(@.name=='VariantS')].inner.variant_kind\" \\\"struct\\\"\n+    // @is \"$.index[*][?(@.name=='x')].kind\" \\\"struct_field\\\"\n+    // @is \"$.index[*][?(@.name=='y')].kind\" \\\"struct_field\\\"\n     VariantS {\n         x: u32,\n         y: String,"}, {"sha": "b71ec47a804ad961c1da11f06f86a6b71497c6fc", "filename": "src/test/rustdoc-json/enums/variant_tuple_struct.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fenums%2Fvariant_tuple_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fenums%2Fvariant_tuple_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fenums%2Fvariant_tuple_struct.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -1,8 +1,8 @@\n-// @has \"$.index[*][?(@.name=='EnumTupleStruct')].visibility\" \\\"public\\\"\n-// @has \"$.index[*][?(@.name=='EnumTupleStruct')].kind\" \\\"enum\\\"\n+// @is \"$.index[*][?(@.name=='EnumTupleStruct')].visibility\" \\\"public\\\"\n+// @is \"$.index[*][?(@.name=='EnumTupleStruct')].kind\" \\\"enum\\\"\n pub enum EnumTupleStruct {\n-    // @has \"$.index[*][?(@.name=='VariantA')].inner.variant_kind\" \\\"tuple\\\"\n-    // @has \"$.index[*][?(@.name=='0')].kind\" \\\"struct_field\\\"\n-    // @has \"$.index[*][?(@.name=='1')].kind\" \\\"struct_field\\\"\n+    // @is \"$.index[*][?(@.name=='VariantA')].inner.variant_kind\" \\\"tuple\\\"\n+    // @is \"$.index[*][?(@.name=='0')].kind\" \\\"struct_field\\\"\n+    // @is \"$.index[*][?(@.name=='1')].kind\" \\\"struct_field\\\"\n     VariantA(u32, String),\n }"}, {"sha": "7b70ff1df6b092b8859d1af5d017603302478c86", "filename": "src/test/rustdoc-json/fns/generics.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Ffns%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Ffns%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ffns%2Fgenerics.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -9,16 +9,16 @@ pub trait Wham {}\n // @is    \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.where_predicates\" []\n // @count \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.params[*]\" 1\n // @is    \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.params[0].name\" '\"T\"'\n-// @has   \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.params[0].kind.type.synthetic\" false\n-// @has   \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.params[0].kind.type.bounds[0].trait_bound.trait.id\" $wham_id\n+// @is    \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.params[0].kind.type.synthetic\" false\n+// @is    \"$.index[*][?(@.name=='one_generic_param_fn')].inner.generics.params[0].kind.type.bounds[0].trait_bound.trait.id\" $wham_id\n // @is    \"$.index[*][?(@.name=='one_generic_param_fn')].inner.decl.inputs\" '[[\"w\", {\"inner\": \"T\", \"kind\": \"generic\"}]]'\n pub fn one_generic_param_fn<T: Wham>(w: T) {}\n \n // @is    \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.where_predicates\" []\n // @count \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.params[*]\" 1\n // @is    \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.params[0].name\" '\"impl Wham\"'\n-// @has   \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.params[0].kind.type.synthetic\" true\n-// @has   \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.params[0].kind.type.bounds[0].trait_bound.trait.id\" $wham_id\n+// @is    \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.params[0].kind.type.synthetic\" true\n+// @is    \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.generics.params[0].kind.type.bounds[0].trait_bound.trait.id\" $wham_id\n // @count \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.decl.inputs[*]\" 1\n // @is    \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.decl.inputs[0][0]\" '\"w\"'\n // @is    \"$.index[*][?(@.name=='one_synthetic_generic_param_fn')].inner.decl.inputs[0][1].kind\" '\"impl_trait\"'"}, {"sha": "856f7c7015b3e3025fb9c2faa709ac774e13c44b", "filename": "src/test/rustdoc-json/impls/import_from_private.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fimpls%2Fimport_from_private.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fimpls%2Fimport_from_private.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fimpls%2Fimport_from_private.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -16,9 +16,7 @@ mod bar {\n // @set import = \"$.index[*][?(@.kind=='import')].id\"\n pub use bar::Baz;\n \n-// FIXME(adotinthevoid): Use hasexact once #99474 lands\n-\n-// @has \"$.index[*][?(@.kind=='module')].inner.items[*]\" $import\n-// @is  \"$.index[*][?(@.kind=='import')].inner.id\" $baz\n-// @has \"$.index[*][?(@.kind=='struct')].inner.impls[*]\" $impl\n-// @has \"$.index[*][?(@.kind=='impl')].inner.items[*]\" $doit\n+// @is \"$.index[*][?(@.kind=='module')].inner.items[*]\" $import\n+// @is \"$.index[*][?(@.kind=='import')].inner.id\" $baz\n+// @is \"$.index[*][?(@.kind=='struct')].inner.impls[*]\" $impl\n+// @is \"$.index[*][?(@.kind=='impl')].inner.items[*]\" $doit"}, {"sha": "8024044bc05ab3993b836da2045dce5876401734", "filename": "src/test/rustdoc-json/primitives.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fprimitives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Fprimitives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Fprimitives.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -1,22 +1,22 @@\n #![feature(never_type)]\n \n-// @has \"$.index[*][?(@.name=='PrimNever')].visibility\" \\\"public\\\"\n-// @has \"$.index[*][?(@.name=='PrimNever')].inner.type.kind\" \\\"primitive\\\"\n-// @has \"$.index[*][?(@.name=='PrimNever')].inner.type.inner\" \\\"never\\\"\n+// @is \"$.index[*][?(@.name=='PrimNever')].visibility\" \\\"public\\\"\n+// @is \"$.index[*][?(@.name=='PrimNever')].inner.type.kind\" \\\"primitive\\\"\n+// @is \"$.index[*][?(@.name=='PrimNever')].inner.type.inner\" \\\"never\\\"\n pub type PrimNever = !;\n \n-// @has \"$.index[*][?(@.name=='PrimStr')].inner.type.kind\" \\\"primitive\\\"\n-// @has \"$.index[*][?(@.name=='PrimStr')].inner.type.inner\" \\\"str\\\"\n+// @is \"$.index[*][?(@.name=='PrimStr')].inner.type.kind\" \\\"primitive\\\"\n+// @is \"$.index[*][?(@.name=='PrimStr')].inner.type.inner\" \\\"str\\\"\n pub type PrimStr = str;\n \n-// @has \"$.index[*][?(@.name=='PrimBool')].inner.type.kind\" \\\"primitive\\\"\n-// @has \"$.index[*][?(@.name=='PrimBool')].inner.type.inner\" \\\"bool\\\"\n+// @is \"$.index[*][?(@.name=='PrimBool')].inner.type.kind\" \\\"primitive\\\"\n+// @is \"$.index[*][?(@.name=='PrimBool')].inner.type.inner\" \\\"bool\\\"\n pub type PrimBool = bool;\n \n-// @has \"$.index[*][?(@.name=='PrimChar')].inner.type.kind\" \\\"primitive\\\"\n-// @has \"$.index[*][?(@.name=='PrimChar')].inner.type.inner\" \\\"char\\\"\n+// @is \"$.index[*][?(@.name=='PrimChar')].inner.type.kind\" \\\"primitive\\\"\n+// @is \"$.index[*][?(@.name=='PrimChar')].inner.type.inner\" \\\"char\\\"\n pub type PrimChar = char;\n \n-// @has \"$.index[*][?(@.name=='PrimU8')].inner.type.kind\" \\\"primitive\\\"\n-// @has \"$.index[*][?(@.name=='PrimU8')].inner.type.inner\" \\\"u8\\\"\n+// @is \"$.index[*][?(@.name=='PrimU8')].inner.type.kind\" \\\"primitive\\\"\n+// @is \"$.index[*][?(@.name=='PrimU8')].inner.type.inner\" \\\"u8\\\"\n pub type PrimU8 = u8;"}, {"sha": "a57cb97d4a6a2175dffb3c6afba764eee21ec27a", "filename": "src/test/rustdoc-json/traits/has_body.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftraits%2Fhas_body.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -1,21 +1,21 @@\n // @has \"$.index[*][?(@.name=='Foo')]\"\n pub trait Foo {\n-    // @has \"$.index[*][?(@.name=='no_self')].inner.has_body\" false\n+    // @is \"$.index[*][?(@.name=='no_self')].inner.has_body\" false\n     fn no_self();\n-    // @has \"$.index[*][?(@.name=='move_self')].inner.has_body\" false\n+    // @is \"$.index[*][?(@.name=='move_self')].inner.has_body\" false\n     fn move_self(self);\n-    // @has \"$.index[*][?(@.name=='ref_self')].inner.has_body\" false\n+    // @is \"$.index[*][?(@.name=='ref_self')].inner.has_body\" false\n     fn ref_self(&self);\n \n-    // @has \"$.index[*][?(@.name=='no_self_def')].inner.has_body\" true\n+    // @is \"$.index[*][?(@.name=='no_self_def')].inner.has_body\" true\n     fn no_self_def() {}\n-    // @has \"$.index[*][?(@.name=='move_self_def')].inner.has_body\" true\n+    // @is \"$.index[*][?(@.name=='move_self_def')].inner.has_body\" true\n     fn move_self_def(self) {}\n-    // @has \"$.index[*][?(@.name=='ref_self_def')].inner.has_body\" true\n+    // @is \"$.index[*][?(@.name=='ref_self_def')].inner.has_body\" true\n     fn ref_self_def(&self) {}\n }\n \n pub trait Bar: Clone {\n-    // @has \"$.index[*][?(@.name=='method')].inner.has_body\" false\n+    // @is \"$.index[*][?(@.name=='method')].inner.has_body\" false\n     fn method(&self, param: usize);\n }"}, {"sha": "eaf249252e33a1eab4745016a43f45db1b846abf", "filename": "src/test/rustdoc-json/type/dyn.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Ftype%2Fdyn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Ftype%2Fdyn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Ftype%2Fdyn.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -5,9 +5,7 @@ use std::fmt::Debug;\n // @set sync_int_gen = \"$.index[*][?(@.name=='SyncIntGen')].id\"\n // @set ref_fn       = \"$.index[*][?(@.name=='RefFn')].id\"\n // @set weird_order  = \"$.index[*][?(@.name=='WeirdOrder')].id\"\n-// @has \"$.index[*][?(@.name=='dyn')].inner.items[*]\" $sync_int_gen\n-// @has \"$.index[*][?(@.name=='dyn')].inner.items[*]\" $ref_fn\n-// @has \"$.index[*][?(@.name=='dyn')].inner.items[*]\" $weird_order\n+// @ismany \"$.index[*][?(@.name=='dyn')].inner.items[*]\" $sync_int_gen $ref_fn $weird_order\n \n // @is    \"$.index[*][?(@.name=='SyncIntGen')].kind\" \\\"typedef\\\"\n // @is    \"$.index[*][?(@.name=='SyncIntGen')].inner.generics\" '{\"params\": [], \"where_predicates\": []}'"}, {"sha": "4454a69ecd1bf35a3f4e5ea0cfc71172a1ede9d8", "filename": "src/test/rustdoc-json/unions/impl.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Funions%2Fimpl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/973059e1e7e3a66c3138e7578d7c9c9ab83b5318/src%2Ftest%2Frustdoc-json%2Funions%2Fimpl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-json%2Funions%2Fimpl.rs?ref=973059e1e7e3a66c3138e7578d7c9c9ab83b5318", "patch": "@@ -1,14 +1,14 @@\n #![no_std]\n \n-// @has \"$.index[*][?(@.name=='Ux')].visibility\" \\\"public\\\"\n-// @has \"$.index[*][?(@.name=='Ux')].kind\" \\\"union\\\"\n+// @is \"$.index[*][?(@.name=='Ux')].visibility\" \\\"public\\\"\n+// @is \"$.index[*][?(@.name=='Ux')].kind\" \\\"union\\\"\n pub union Ux {\n     a: u32,\n     b: u64\n }\n \n-// @has \"$.index[*][?(@.name=='Num')].visibility\" \\\"public\\\"\n-// @has \"$.index[*][?(@.name=='Num')].kind\" \\\"trait\\\"\n+// @is \"$.index[*][?(@.name=='Num')].visibility\" \\\"public\\\"\n+// @is \"$.index[*][?(@.name=='Num')].kind\" \\\"trait\\\"\n pub trait Num {}\n \n // @count \"$.index[*][?(@.name=='Ux')].inner.impls\" 1"}]}