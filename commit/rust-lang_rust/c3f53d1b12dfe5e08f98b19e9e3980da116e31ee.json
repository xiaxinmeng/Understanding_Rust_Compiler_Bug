{"sha": "c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZjUzZDFiMTJkZmU1ZTA4Zjk4YjE5ZTllMzk4MGRhMTE2ZTMxZWU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-09-15T21:50:50Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2015-09-17T11:13:14Z"}, "message": "Resolve prefix in imports with empty braces", "tree": {"sha": "9610c3eba35abadd54f0511e95b42bd89e11d1ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9610c3eba35abadd54f0511e95b42bd89e11d1ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "html_url": "https://github.com/rust-lang/rust/commit/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "357982fae4ac7be0f6e0065399606f2d78618aaf", "url": "https://api.github.com/repos/rust-lang/rust/commits/357982fae4ac7be0f6e0065399606f2d78618aaf", "html_url": "https://github.com/rust-lang/rust/commit/357982fae4ac7be0f6e0065399606f2d78618aaf"}], "stats": {"total": 84, "additions": 74, "deletions": 10}, "files": [{"sha": "8f5208d3ef1192cfe362d84bafcde2da4b4c5516", "filename": "src/librustc_front/visit.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Flibrustc_front%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Flibrustc_front%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_front%2Fvisit.rs?ref=c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "patch": "@@ -218,8 +218,7 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                             visitor.visit_path_list_item(prefix, item)\n                         }\n                     } else {\n-                        // FIXME(#28388) visit_path should be used instead of walk_path\n-                        walk_path(visitor, prefix);\n+                        visitor.visit_path(prefix, item.id);\n                     }\n                 }\n             }"}, {"sha": "6159ba5b79e0e6cd45abcf3e22d0f733dba22a5b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "patch": "@@ -2210,23 +2210,39 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n \n             ItemUse(ref view_path) => {\n                 // check for imports shadowing primitive types\n-                let check_rename = |id, ident: Ident| {\n-                    match self.def_map.borrow().get(&id).map(|d| d.full_def()) {\n+                let check_rename = |this: &Self, id, ident: Ident| {\n+                    match this.def_map.borrow().get(&id).map(|d| d.full_def()) {\n                         Some(DefTy(..)) | Some(DefStruct(..)) | Some(DefTrait(..)) | None => {\n-                            self.check_if_primitive_type_name(ident.name, item.span);\n+                            this.check_if_primitive_type_name(ident.name, item.span);\n                         }\n                         _ => {}\n                     }\n                 };\n \n                 match view_path.node {\n                     hir::ViewPathSimple(ident, _) => {\n-                        check_rename(item.id, ident);\n+                        check_rename(self, item.id, ident);\n                     }\n-                    hir::ViewPathList(_, ref items) => {\n+                    hir::ViewPathList(ref prefix, ref items) => {\n                         for item in items {\n                             if let Some(ident) = item.node.rename() {\n-                                check_rename(item.node.id(), ident);\n+                                check_rename(self, item.node.id(), ident);\n+                            }\n+                        }\n+\n+                        // Resolve prefix of an import with empty braces (issue #28388)\n+                        if items.is_empty() && !prefix.segments.is_empty() {\n+                            match self.resolve_crate_relative_path(prefix.span,\n+                                                                   &prefix.segments,\n+                                                                   TypeNS) {\n+                                Some((def, lp)) => self.record_def(item.id,\n+                                                   PathResolution::new(def, lp, 0)),\n+                                None => {\n+                                    resolve_error(self,\n+                                                  prefix.span,\n+                                                  ResolutionError::FailedToResolve(\n+                                                      &path_names_to_string(prefix, 0)));\n+                                }\n                             }\n                         }\n                     }"}, {"sha": "f4f4c9dfc24fb172ebc6b3a3dde4a5214b65d5a5", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "patch": "@@ -224,8 +224,7 @@ pub fn walk_item<'v, V: Visitor<'v>>(visitor: &mut V, item: &'v Item) {\n                             visitor.visit_path_list_item(prefix, item)\n                         }\n                     } else {\n-                        // FIXME(#28388) visit_path should be used instead of walk_path\n-                        walk_path(visitor, prefix);\n+                        visitor.visit_path(prefix, item.id);\n                     }\n                 }\n             }"}, {"sha": "ef97b400b00a5009bdd4cf969509328bfb95722c", "filename": "src/test/compile-fail/issue-28388-1.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Ftest%2Fcompile-fail%2Fissue-28388-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Ftest%2Fcompile-fail%2Fissue-28388-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28388-1.rs?ref=c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Prefix in imports with empty braces should be resolved and checked privacy, stability, etc.\n+\n+use foo::{}; //~ ERROR failed to resolve. foo\n+\n+fn main() {}"}, {"sha": "837dc67c804eb65c01c4d15e16598355d09b56a4", "filename": "src/test/compile-fail/issue-28388-2.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Ftest%2Fcompile-fail%2Fissue-28388-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Ftest%2Fcompile-fail%2Fissue-28388-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28388-2.rs?ref=c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Prefix in imports with empty braces should be resolved and checked privacy, stability, etc.\n+\n+mod m {\n+    mod n {}\n+}\n+\n+use m::n::{}; //~ ERROR module `n` is private\n+\n+fn main() {}"}, {"sha": "59756be55bd6264040976db98f6fb9329b50645c", "filename": "src/test/compile-fail/issue-28388-3.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Ftest%2Fcompile-fail%2Fissue-28388-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f53d1b12dfe5e08f98b19e9e3980da116e31ee/src%2Ftest%2Fcompile-fail%2Fissue-28388-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-28388-3.rs?ref=c3f53d1b12dfe5e08f98b19e9e3980da116e31ee", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Prefix in imports with empty braces should be resolved and checked privacy, stability, etc.\n+\n+use std::rt::{}; //~ ERROR use of unstable library feature 'rt'\n+use std::{}; // OK\n+\n+fn main() {}"}]}