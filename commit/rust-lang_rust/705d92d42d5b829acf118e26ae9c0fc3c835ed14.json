{"sha": "705d92d42d5b829acf118e26ae9c0fc3c835ed14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwNWQ5MmQ0MmQ1YjgyOWFjZjExOGUyNmFlOWMwZmMzYzgzNWVkMTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-07-21T09:26:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-07-21T09:26:59Z"}, "message": "Rollup merge of #34855 - GuillaumeGomez:vec_deque_doc, r=steveklabnik\n\nAdd examples for VecDeque\n\nPart of #29348.\n\nr? @steveklabnik", "tree": {"sha": "4ac7f19a5b7b6fd9576d0a96dc91c630f1d464f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4ac7f19a5b7b6fd9576d0a96dc91c630f1d464f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/705d92d42d5b829acf118e26ae9c0fc3c835ed14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/705d92d42d5b829acf118e26ae9c0fc3c835ed14", "html_url": "https://github.com/rust-lang/rust/commit/705d92d42d5b829acf118e26ae9c0fc3c835ed14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/705d92d42d5b829acf118e26ae9c0fc3c835ed14/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a168e30bb1e9779dedfa1529b705f355dd9e2492", "url": "https://api.github.com/repos/rust-lang/rust/commits/a168e30bb1e9779dedfa1529b705f355dd9e2492", "html_url": "https://github.com/rust-lang/rust/commit/a168e30bb1e9779dedfa1529b705f355dd9e2492"}, {"sha": "42326ec2a48a6a70d737b27cb7930810360a1df6", "url": "https://api.github.com/repos/rust-lang/rust/commits/42326ec2a48a6a70d737b27cb7930810360a1df6", "html_url": "https://github.com/rust-lang/rust/commit/42326ec2a48a6a70d737b27cb7930810360a1df6"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "9e4428ec57d50db1eaf6a1a95c725deeb921f28a", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 71, "deletions": 1, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/705d92d42d5b829acf118e26ae9c0fc3c835ed14/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/705d92d42d5b829acf118e26ae9c0fc3c835ed14/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=705d92d42d5b829acf118e26ae9c0fc3c835ed14", "patch": "@@ -365,12 +365,28 @@ impl<T> VecDeque<T> {\n \n impl<T> VecDeque<T> {\n     /// Creates an empty `VecDeque`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let vector: VecDeque<u32> = VecDeque::new();\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn new() -> VecDeque<T> {\n         VecDeque::with_capacity(INITIAL_CAPACITY)\n     }\n \n     /// Creates an empty `VecDeque` with space for at least `n` elements.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let vector: VecDeque<u32> = VecDeque::with_capacity(10);\n+    /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn with_capacity(n: usize) -> VecDeque<T> {\n         // +1 since the ringbuffer always leaves one space empty\n@@ -696,6 +712,25 @@ impl<T> VecDeque<T> {\n \n     /// Returns a pair of slices which contain, in order, the contents of the\n     /// `VecDeque`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut vector: VecDeque<u32> = VecDeque::new();\n+    ///\n+    /// vector.push_back(0);\n+    /// vector.push_back(1);\n+    /// vector.push_back(2);\n+    ///\n+    /// assert_eq!(vector.as_slices(), (&[0u32, 1, 2] as &[u32], &[] as &[u32]));\n+    ///\n+    /// vector.push_front(10);\n+    /// vector.push_front(9);\n+    ///\n+    /// assert_eq!(vector.as_slices(), (&[9u32, 10] as &[u32], &[0u32, 1, 2] as &[u32]));\n+    /// ```\n     #[inline]\n     #[stable(feature = \"deque_extras_15\", since = \"1.5.0\")]\n     pub fn as_slices(&self) -> (&[T], &[T]) {\n@@ -715,6 +750,24 @@ impl<T> VecDeque<T> {\n \n     /// Returns a pair of slices which contain, in order, the contents of the\n     /// `VecDeque`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut vector: VecDeque<u32> = VecDeque::new();\n+    ///\n+    /// vector.push_back(0);\n+    /// vector.push_back(1);\n+    ///\n+    /// vector.push_front(10);\n+    /// vector.push_front(9);\n+    ///\n+    /// vector.as_mut_slices().0[0] = 42;\n+    /// vector.as_mut_slices().1[0] = 24;\n+    /// assert_eq!(vector.as_slices(), (&[42u32, 10] as &[u32], &[24u32, 1] as &[u32]));\n+    /// ```\n     #[inline]\n     #[stable(feature = \"deque_extras_15\", since = \"1.5.0\")]\n     pub fn as_mut_slices(&mut self) -> (&mut [T], &mut [T]) {\n@@ -789,7 +842,7 @@ impl<T> VecDeque<T> {\n     ///\n     /// ```\n     /// use std::collections::VecDeque;\n-\n+    ///\n     /// let mut v: VecDeque<_> = vec![1, 2, 3].into_iter().collect();\n     /// assert_eq!(vec![3].into_iter().collect::<VecDeque<_>>(), v.drain(2..).collect());\n     /// assert_eq!(vec![1, 2].into_iter().collect::<VecDeque<_>>(), v);\n@@ -875,6 +928,22 @@ impl<T> VecDeque<T> {\n \n     /// Returns `true` if the `VecDeque` contains an element equal to the\n     /// given value.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(vec_deque_contains)]\n+    ///\n+    /// use std::collections::VecDeque;\n+    ///\n+    /// let mut vector: VecDeque<u32> = VecDeque::new();\n+    ///\n+    /// vector.push_back(0);\n+    /// vector.push_back(1);\n+    ///\n+    /// assert_eq!(vector.contains(&1), true);\n+    /// assert_eq!(vector.contains(&10), false);\n+    /// ```\n     #[unstable(feature = \"vec_deque_contains\", reason = \"recently added\",\n                issue = \"32630\")]\n     pub fn contains(&self, x: &T) -> bool\n@@ -1404,6 +1473,7 @@ impl<T> VecDeque<T> {\n     /// Returns `None` if `index` is out of bounds.\n     ///\n     /// # Examples\n+    ///\n     /// ```\n     /// use std::collections::VecDeque;\n     ///"}]}