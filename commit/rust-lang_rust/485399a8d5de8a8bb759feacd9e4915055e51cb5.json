{"sha": "485399a8d5de8a8bb759feacd9e4915055e51cb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NTM5OWE4ZDVkZThhOGJiNzU5ZmVhY2Q5ZTQ5MTUwNTVlNTFjYjU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-25T05:39:18Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-04-25T05:39:18Z"}, "message": "Skip substitution and/or binding when there's no work to do.", "tree": {"sha": "e0329754898c6a100117feae39282c658139aa5e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0329754898c6a100117feae39282c658139aa5e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/485399a8d5de8a8bb759feacd9e4915055e51cb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/485399a8d5de8a8bb759feacd9e4915055e51cb5", "html_url": "https://github.com/rust-lang/rust/commit/485399a8d5de8a8bb759feacd9e4915055e51cb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/485399a8d5de8a8bb759feacd9e4915055e51cb5/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9e6b3ad28ce934f993f1bb8227f40d6f6d25e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9e6b3ad28ce934f993f1bb8227f40d6f6d25e2", "html_url": "https://github.com/rust-lang/rust/commit/1b9e6b3ad28ce934f993f1bb8227f40d6f6d25e2"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "2b4a9a78206ea606738097d5e7b0372885f12046", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/485399a8d5de8a8bb759feacd9e4915055e51cb5/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/485399a8d5de8a8bb759feacd9e4915055e51cb5/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=485399a8d5de8a8bb759feacd9e4915055e51cb5", "patch": "@@ -1391,6 +1391,34 @@ fn type_contains_vars(@type_store tystore, t typ) -> bool {\n     ret *flag;\n }\n \n+fn type_contains_params(@type_store tystore, t typ) -> bool {\n+    fn checker(@type_store tystore, @mutable bool flag, t typ) {\n+        alt (struct(tystore, typ)) {\n+            case (ty_param(_)) { *flag = true; }\n+            case (_) { /* fall through */ }\n+        }\n+    }\n+\n+    let @mutable bool flag = @mutable false;\n+    auto f = bind checker(tystore, flag, _);\n+    walk_ty(tystore, f, typ);\n+    ret *flag;\n+}\n+\n+fn type_contains_bound_params(@type_store tystore, t typ) -> bool {\n+    fn checker(@type_store tystore, @mutable bool flag, t typ) {\n+        alt (struct(tystore, typ)) {\n+            case (ty_bound_param(_)) { *flag = true; }\n+            case (_) { /* fall through */ }\n+        }\n+    }\n+\n+    let @mutable bool flag = @mutable false;\n+    auto f = bind checker(tystore, flag, _);\n+    walk_ty(tystore, f, typ);\n+    ret *flag;\n+}\n+\n // Type accessors for substructures of types\n \n fn ty_fn_args(@type_store tystore, t fty) -> vec[arg] {\n@@ -2495,6 +2523,9 @@ fn type_err_to_str(&ty.type_err err) -> str {\n fn substitute_type_params(@type_store tystore,\n                           vec[t] bindings,\n                           t typ) -> t {\n+    if (!type_contains_bound_params(tystore, typ)) {\n+        ret typ;\n+    }\n     fn replacer(@type_store tystore, vec[t] bindings, t typ) -> t {\n         alt (struct(tystore, typ)) {\n             case (ty_bound_param(?param_index)) {\n@@ -2510,6 +2541,9 @@ fn substitute_type_params(@type_store tystore,\n \n // Converts type parameters in a type to bound type parameters.\n fn bind_params_in_type(@type_store tystore, t typ) -> t {\n+    if (!type_contains_params(tystore, typ)) {\n+        ret typ;\n+    }\n     fn binder(@type_store tystore, t typ) -> t {\n         alt (struct(tystore, typ)) {\n             case (ty_bound_param(?index)) {"}]}