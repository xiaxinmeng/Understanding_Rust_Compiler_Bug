{"sha": "7bbc8ef02235d1cca7017fb33ed872d3f604bd07", "node_id": "C_kwDOAAsO6NoAKDdiYmM4ZWYwMjIzNWQxY2NhNzAxN2ZiMzNlZDg3MmQzZjYwNGJkMDc", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-28T00:19:46Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-03-28T00:19:46Z"}, "message": "Make doc comment a little bit more accurate\n\nIt queries not LLVM in particular but the codegen backend *in general*.\nWhile cranelift does not provide target features, other codegen backends do.", "tree": {"sha": "e63409f7dda73faff23e765f4588a33cb3e78f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e63409f7dda73faff23e765f4588a33cb3e78f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bbc8ef02235d1cca7017fb33ed872d3f604bd07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bbc8ef02235d1cca7017fb33ed872d3f604bd07", "html_url": "https://github.com/rust-lang/rust/commit/7bbc8ef02235d1cca7017fb33ed872d3f604bd07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bbc8ef02235d1cca7017fb33ed872d3f604bd07/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "febd59e122f67d26d410a62f661a941a706b28ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/febd59e122f67d26d410a62f661a941a706b28ec", "html_url": "https://github.com/rust-lang/rust/commit/febd59e122f67d26d410a62f661a941a706b28ec"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6fb50aa39049a05c9410b6a647e5bfd5e82cf7fe", "filename": "compiler/rustc_interface/src/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bbc8ef02235d1cca7017fb33ed872d3f604bd07/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bbc8ef02235d1cca7017fb33ed872d3f604bd07/compiler%2Frustc_interface%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Futil.rs?ref=7bbc8ef02235d1cca7017fb33ed872d3f604bd07", "patch": "@@ -34,7 +34,7 @@ pub type MakeBackendFn = fn() -> Box<dyn CodegenBackend>;\n /// specific features (SSE, NEON etc.).\n ///\n /// This is performed by checking whether a set of permitted features\n-/// is available on the target machine, by querying LLVM.\n+/// is available on the target machine, by querying the codegen backend.\n pub fn add_configuration(\n     cfg: &mut CrateConfig,\n     sess: &mut Session,"}]}