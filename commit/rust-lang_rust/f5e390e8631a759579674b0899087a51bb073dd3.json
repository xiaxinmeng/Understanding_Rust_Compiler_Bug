{"sha": "f5e390e8631a759579674b0899087a51bb073dd3", "node_id": "C_kwDOAAsO6NoAKGY1ZTM5MGU4NjMxYTc1OTU3OTY3NGIwODk5MDg3YTUxYmIwNzNkZDM", "commit": {"author": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-10-27T18:20:56Z"}, "committer": {"name": "Alex Macleod", "email": "alex@macleod.io", "date": "2022-10-27T18:20:56Z"}, "message": "Fix rustc_parse_format spans following escaped utf-8 multibyte chars", "tree": {"sha": "1ddca29093755626d9f304b5fe22f6c51efe233c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ddca29093755626d9f304b5fe22f6c51efe233c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5e390e8631a759579674b0899087a51bb073dd3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5e390e8631a759579674b0899087a51bb073dd3", "html_url": "https://github.com/rust-lang/rust/commit/f5e390e8631a759579674b0899087a51bb073dd3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5e390e8631a759579674b0899087a51bb073dd3/comments", "author": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Alexendoo", "id": 1830331, "node_id": "MDQ6VXNlcjE4MzAzMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1830331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Alexendoo", "html_url": "https://github.com/Alexendoo", "followers_url": "https://api.github.com/users/Alexendoo/followers", "following_url": "https://api.github.com/users/Alexendoo/following{/other_user}", "gists_url": "https://api.github.com/users/Alexendoo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Alexendoo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Alexendoo/subscriptions", "organizations_url": "https://api.github.com/users/Alexendoo/orgs", "repos_url": "https://api.github.com/users/Alexendoo/repos", "events_url": "https://api.github.com/users/Alexendoo/events{/privacy}", "received_events_url": "https://api.github.com/users/Alexendoo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9dd3d29ec848efd753667292277fd9f297d7db8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9dd3d29ec848efd753667292277fd9f297d7db8d", "html_url": "https://github.com/rust-lang/rust/commit/9dd3d29ec848efd753667292277fd9f297d7db8d"}], "stats": {"total": 129, "additions": 111, "deletions": 18}, "files": [{"sha": "54bf4d1d6b7381469d276d77b0ee66afa1663963", "filename": "compiler/rustc_parse_format/src/lib.rs", "status": "modified", "additions": 29, "deletions": 18, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/f5e390e8631a759579674b0899087a51bb073dd3/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e390e8631a759579674b0899087a51bb073dd3/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs?ref=f5e390e8631a759579674b0899087a51bb073dd3", "patch": "@@ -819,27 +819,27 @@ fn find_skips_from_snippet(\n     };\n \n     fn find_skips(snippet: &str, is_raw: bool) -> Vec<usize> {\n-        let mut s = snippet.char_indices().peekable();\n+        let mut s = snippet.char_indices();\n         let mut skips = vec![];\n         while let Some((pos, c)) = s.next() {\n-            match (c, s.peek()) {\n+            match (c, s.clone().next()) {\n                 // skip whitespace and empty lines ending in '\\\\'\n                 ('\\\\', Some((next_pos, '\\n'))) if !is_raw => {\n                     skips.push(pos);\n-                    skips.push(*next_pos);\n+                    skips.push(next_pos);\n                     let _ = s.next();\n \n-                    while let Some((pos, c)) = s.peek() {\n+                    while let Some((pos, c)) = s.clone().next() {\n                         if matches!(c, ' ' | '\\n' | '\\t') {\n-                            skips.push(*pos);\n+                            skips.push(pos);\n                             let _ = s.next();\n                         } else {\n                             break;\n                         }\n                     }\n                 }\n                 ('\\\\', Some((next_pos, 'n' | 't' | 'r' | '0' | '\\\\' | '\\'' | '\\\"'))) => {\n-                    skips.push(*next_pos);\n+                    skips.push(next_pos);\n                     let _ = s.next();\n                 }\n                 ('\\\\', Some((_, 'x'))) if !is_raw => {\n@@ -858,19 +858,30 @@ fn find_skips_from_snippet(\n                     }\n                     if let Some((next_pos, next_c)) = s.next() {\n                         if next_c == '{' {\n-                            skips.push(next_pos);\n-                            let mut i = 0; // consume up to 6 hexanumeric chars + closing `}`\n-                            while let (Some((next_pos, c)), true) = (s.next(), i < 7) {\n-                                if c.is_digit(16) {\n-                                    skips.push(next_pos);\n-                                } else if c == '}' {\n-                                    skips.push(next_pos);\n-                                    break;\n-                                } else {\n-                                    break;\n-                                }\n-                                i += 1;\n+                            // consume up to 6 hexanumeric chars\n+                            let digits_len =\n+                                s.clone().take(6).take_while(|(_, c)| c.is_digit(16)).count();\n+\n+                            let len_utf8 = s\n+                                .as_str()\n+                                .get(..digits_len)\n+                                .and_then(|digits| u32::from_str_radix(digits, 16).ok())\n+                                .and_then(char::from_u32)\n+                                .map_or(1, char::len_utf8);\n+\n+                            // Skip the digits, for chars that encode to more than 1 utf-8 byte\n+                            // exclude as many digits as it is greater than 1 byte\n+                            //\n+                            // So for a 3 byte character, exclude 2 digits\n+                            let required_skips =\n+                                digits_len.saturating_sub(len_utf8.saturating_sub(1));\n+\n+                            // skip '{' and '}' also\n+                            for pos in (next_pos..).take(required_skips + 2) {\n+                                skips.push(pos)\n                             }\n+\n+                            s.nth(digits_len);\n                         } else if next_c.is_digit(16) {\n                             skips.push(next_pos);\n                             // We suggest adding `{` and `}` when appropriate, accept it here as if"}, {"sha": "753d91ce58e6619a98687aea49be80c36d50e26e", "filename": "src/test/ui/fmt/unicode-escape-spans.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/f5e390e8631a759579674b0899087a51bb073dd3/src%2Ftest%2Fui%2Ffmt%2Funicode-escape-spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5e390e8631a759579674b0899087a51bb073dd3/src%2Ftest%2Fui%2Ffmt%2Funicode-escape-spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Funicode-escape-spans.rs?ref=f5e390e8631a759579674b0899087a51bb073dd3", "patch": "@@ -0,0 +1,19 @@\n+fn main() {\n+    // 1 byte in UTF-8\n+    format!(\"\\u{000041}{a}\"); //~ ERROR cannot find value\n+    format!(\"\\u{0041}{a}\"); //~ ERROR cannot find value\n+    format!(\"\\u{41}{a}\"); //~ ERROR cannot find value\n+    format!(\"\\u{0}{a}\"); //~ ERROR cannot find value\n+\n+    // 2 bytes\n+    format!(\"\\u{0df}{a}\"); //~ ERROR cannot find value\n+    format!(\"\\u{df}{a}\"); //~ ERROR cannot find value\n+\n+    // 3 bytes\n+    format!(\"\\u{00211d}{a}\"); //~ ERROR cannot find value\n+    format!(\"\\u{211d}{a}\"); //~ ERROR cannot find value\n+\n+    // 4 bytes\n+    format!(\"\\u{1f4a3}{a}\"); //~ ERROR cannot find value\n+    format!(\"\\u{10ffff}{a}\"); //~ ERROR cannot find value\n+}"}, {"sha": "1d8473f01b822af6e5d0df044463726e7e2c7e60", "filename": "src/test/ui/fmt/unicode-escape-spans.stderr", "status": "added", "additions": 63, "deletions": 0, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/f5e390e8631a759579674b0899087a51bb073dd3/src%2Ftest%2Fui%2Ffmt%2Funicode-escape-spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f5e390e8631a759579674b0899087a51bb073dd3/src%2Ftest%2Fui%2Ffmt%2Funicode-escape-spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Funicode-escape-spans.stderr?ref=f5e390e8631a759579674b0899087a51bb073dd3", "patch": "@@ -0,0 +1,63 @@\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:3:25\n+   |\n+LL |     format!(\"\\u{000041}{a}\");\n+   |                         ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:4:23\n+   |\n+LL |     format!(\"\\u{0041}{a}\");\n+   |                       ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:5:21\n+   |\n+LL |     format!(\"\\u{41}{a}\");\n+   |                     ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:6:20\n+   |\n+LL |     format!(\"\\u{0}{a}\");\n+   |                    ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:9:22\n+   |\n+LL |     format!(\"\\u{0df}{a}\");\n+   |                      ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:10:21\n+   |\n+LL |     format!(\"\\u{df}{a}\");\n+   |                     ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:13:25\n+   |\n+LL |     format!(\"\\u{00211d}{a}\");\n+   |                         ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:14:23\n+   |\n+LL |     format!(\"\\u{211d}{a}\");\n+   |                       ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:17:24\n+   |\n+LL |     format!(\"\\u{1f4a3}{a}\");\n+   |                        ^ not found in this scope\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/unicode-escape-spans.rs:18:25\n+   |\n+LL |     format!(\"\\u{10ffff}{a}\");\n+   |                         ^ not found in this scope\n+\n+error: aborting due to 10 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}