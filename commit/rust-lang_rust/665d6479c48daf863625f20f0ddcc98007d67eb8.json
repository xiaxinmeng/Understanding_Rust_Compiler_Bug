{"sha": "665d6479c48daf863625f20f0ddcc98007d67eb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2NWQ2NDc5YzQ4ZGFmODYzNjI1ZjIwZjBkZGNjOTgwMDdkNjdlYjg=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-01T18:20:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-01T18:20:25Z"}, "message": "Rollup merge of #65997 - spastorino:fix-init_locking-rustdoc, r=Mark-Simulacrum\n\nFix outdated rustdoc of Once::init_locking function\n\nr? @Mark-Simulacrum\n\nrelated to https://github.com/rust-lang/rust/pull/65979", "tree": {"sha": "48846f412a03b1b8061dfd9b6dd0092f51c9d18b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48846f412a03b1b8061dfd9b6dd0092f51c9d18b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/665d6479c48daf863625f20f0ddcc98007d67eb8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdvHdpCRBK7hj4Ov3rIwAAdHIIAHyeu2XB56EMg5jo5dfftTmP\nIp6bR2LvM03KW+mNJjJW607DxP6h2kMF4Mn8CMN2xtmBAJi1YQ5N/tU/n2IcNfws\nj8lG9pifmyY8c1L8G5UdN3FjwGs0VUJY2fdaon1a5hVsw/IIXpQ5HvNUhzlTEl/+\nL013aGXJyDz3oQVTdnefjJEjZM83MwAaY5EOqC/JnTkV7IF6XLnplIZ6+9EIkMjE\n9lx/e84foiwK55Bhp1TdNBaTw1RJbMbcHf3A/o1yOzz7+Zes2mYzn12yemADYzET\ntNr2w3JqLXW3gmU+0N+/T77uDiMrF2+mWWnS4U90pMyJml+HT3cCdkU5u7oomDc=\n=fVM7\n-----END PGP SIGNATURE-----\n", "payload": "tree 48846f412a03b1b8061dfd9b6dd0092f51c9d18b\nparent 1ea66850af013e03295c1ad5e46802dfea4a53bd\nparent 18391b62f3a919f39e14f385b95cd312b1e82b62\nauthor Tyler Mandry <tmandry@gmail.com> 1572632425 -0700\ncommitter GitHub <noreply@github.com> 1572632425 -0700\n\nRollup merge of #65997 - spastorino:fix-init_locking-rustdoc, r=Mark-Simulacrum\n\nFix outdated rustdoc of Once::init_locking function\n\nr? @Mark-Simulacrum\n\nrelated to https://github.com/rust-lang/rust/pull/65979\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/665d6479c48daf863625f20f0ddcc98007d67eb8", "html_url": "https://github.com/rust-lang/rust/commit/665d6479c48daf863625f20f0ddcc98007d67eb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/665d6479c48daf863625f20f0ddcc98007d67eb8/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ea66850af013e03295c1ad5e46802dfea4a53bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ea66850af013e03295c1ad5e46802dfea4a53bd", "html_url": "https://github.com/rust-lang/rust/commit/1ea66850af013e03295c1ad5e46802dfea4a53bd"}, {"sha": "18391b62f3a919f39e14f385b95cd312b1e82b62", "url": "https://api.github.com/repos/rust-lang/rust/commits/18391b62f3a919f39e14f385b95cd312b1e82b62", "html_url": "https://github.com/rust-lang/rust/commit/18391b62f3a919f39e14f385b95cd312b1e82b62"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "6a19f52897e5de97d976aaae88e5b954060b81f5", "filename": "src/librustc_data_structures/sync.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/665d6479c48daf863625f20f0ddcc98007d67eb8/src%2Flibrustc_data_structures%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/665d6479c48daf863625f20f0ddcc98007d67eb8/src%2Flibrustc_data_structures%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fsync.rs?ref=665d6479c48daf863625f20f0ddcc98007d67eb8", "patch": "@@ -492,10 +492,10 @@ impl<T> Once<T> {\n         assert!(self.try_set(value).is_none());\n     }\n \n-    /// Tries to initialize the inner value by calling the closure while ensuring that no-one else\n-    /// can access the value in the mean time by holding a lock for the duration of the closure.\n-    /// If the value was already initialized the closure is not called and `false` is returned,\n-    /// otherwise if the value from the closure initializes the inner value, `true` is returned\n+    /// Initializes the inner value if it wasn't already done by calling the provided closure. It\n+    /// ensures that no-one else can access the value in the mean time by holding a lock for the\n+    /// duration of the closure.\n+    /// A reference to the inner value is returned.\n     #[inline]\n     pub fn init_locking<F: FnOnce() -> T>(&self, f: F) -> &T {\n         {"}]}