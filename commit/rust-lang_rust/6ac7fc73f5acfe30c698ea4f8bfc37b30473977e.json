{"sha": "6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYzdmYzczZjVhY2ZlMzBjNjk4ZWE0ZjhiZmMzN2IzMDQ3Mzk3N2U=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-10-28T18:07:33Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2014-10-29T20:06:13Z"}, "message": "Update infrastructure for fail -> panic\n\nThis includes updating the language items and marking what needs to\nchange after a snapshot.\n\nIf you do not use the standard library, the language items you need to\nimplement have changed. For example:\n\n```rust\n #[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n```\n\nis now\n\n```rust\n #[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n```\n\nRelated, lesser-implemented language items `fail` and\n`fail_bounds_check` have become `panic` and `panic_bounds_check`, as\nwell. These are implemented by `libcore`, so it is unlikely (though\npossible!) that these two renamings will affect you.\n\n[breaking-change]\n\nFix test suite", "tree": {"sha": "a7b9c45aa38fbf458ea2afb6ddfc70ae782b1302", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a7b9c45aa38fbf458ea2afb6ddfc70ae782b1302"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "html_url": "https://github.com/rust-lang/rust/commit/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7828c3dd2858d8f3a0448484d8093e22719dbda0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7828c3dd2858d8f3a0448484d8093e22719dbda0", "html_url": "https://github.com/rust-lang/rust/commit/7828c3dd2858d8f3a0448484d8093e22719dbda0"}], "stats": {"total": 164, "additions": 104, "deletions": 60}, "files": [{"sha": "4d6dde7f57fb97662cebf4bfa433f83279b25edc", "filename": "src/doc/guide-unsafe.md", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Fdoc%2Fguide-unsafe.md", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Fdoc%2Fguide-unsafe.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide-unsafe.md?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -462,7 +462,7 @@ fn start(_argc: int, _argv: *const *const u8) -> int {\n // provided by libstd.\n #[lang = \"stack_exhausted\"] extern fn stack_exhausted() {}\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n-#[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n+#[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n # // fn main() {} tricked you, rustdoc!\n ```\n \n@@ -485,7 +485,7 @@ pub extern fn main(argc: int, argv: *const *const u8) -> int {\n \n #[lang = \"stack_exhausted\"] extern fn stack_exhausted() {}\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n-#[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n+#[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n # // fn main() {} tricked you, rustdoc!\n ```\n \n@@ -505,7 +505,7 @@ failure mechanisms of the compiler. This is often mapped to GCC's\n personality function (see the\n [libstd implementation](std/rt/unwind/index.html) for more\n information), but crates which do not trigger a panic can be assured\n-that this function is never called. The final function, `fail_fmt`, is\n+that this function is never called. The final function, `panic_fmt`, is\n also used by the failure mechanisms of the compiler.\n \n ## Using libcore\n@@ -565,8 +565,8 @@ pub extern fn dot_product(a: *const u32, a_len: u32,\n     return ret;\n }\n \n-#[lang = \"fail_fmt\"]\n-extern fn fail_fmt(args: &core::fmt::Arguments,\n+#[lang = \"panic_fmt\"]\n+extern fn panic_fmt(args: &core::fmt::Arguments,\n                        file: &str,\n                        line: uint) -> ! {\n     loop {}\n@@ -579,9 +579,9 @@ extern fn fail_fmt(args: &core::fmt::Arguments,\n ```\n \n Note that there is one extra lang item here which differs from the examples\n-above, `fail_fmt`. This must be defined by consumers of libcore because the\n-core library declares failure, but it does not define it. The `fail_fmt`\n-lang item is this crate's definition of failure, and it must be guaranteed to\n+above, `panic_fmt`. This must be defined by consumers of libcore because the\n+core library declares panics, but it does not define it. The `panic_fmt`\n+lang item is this crate's definition of panic, and it must be guaranteed to\n never return.\n \n As can be seen in this example, the core library is intended to provide the\n@@ -686,7 +686,7 @@ fn main(argc: int, argv: *const *const u8) -> int {\n \n #[lang = \"stack_exhausted\"] extern fn stack_exhausted() {}\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n-#[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n+#[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n ```\n \n Note the use of `abort`: the `exchange_malloc` lang item is assumed to"}, {"sha": "62c9d907cb2276b0c23939967f1e2c76ece41d7e", "filename": "src/libcore/panicking.rs", "status": "modified", "additions": 47, "deletions": 0, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Flibcore%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Flibcore%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpanicking.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -33,6 +33,49 @@\n use fmt;\n use intrinsics;\n \n+// NOTE(stage0): remove after a snapshot\n+#[cfg(stage0)]\n+#[cold] #[inline(never)] // this is the slow path, always\n+#[lang=\"fail\"]\n+pub fn panic(expr_file_line: &(&'static str, &'static str, uint)) -> ! {\n+    let (expr, file, line) = *expr_file_line;\n+    let ref file_line = (file, line);\n+    format_args!(|args| -> () {\n+        panic_fmt(args, file_line);\n+    }, \"{}\", expr);\n+\n+    unsafe { intrinsics::abort() }\n+}\n+\n+// NOTE(stage0): remove after a snapshot\n+#[cfg(stage0)]\n+#[cold] #[inline(never)]\n+#[lang=\"fail_bounds_check\"]\n+fn panic_bounds_check(file_line: &(&'static str, uint),\n+                     index: uint, len: uint) -> ! {\n+    format_args!(|args| -> () {\n+        panic_fmt(args, file_line);\n+    }, \"index out of bounds: the len is {} but the index is {}\", len, index);\n+    unsafe { intrinsics::abort() }\n+}\n+\n+// NOTE(stage0): remove after a snapshot\n+#[cfg(stage0)]\n+#[cold] #[inline(never)]\n+pub fn panic_fmt(fmt: &fmt::Arguments, file_line: &(&'static str, uint)) -> ! {\n+    #[allow(ctypes)]\n+    extern {\n+        #[lang = \"fail_fmt\"]\n+        fn panic_impl(fmt: &fmt::Arguments, file: &'static str,\n+                        line: uint) -> !;\n+\n+    }\n+    let (file, line) = *file_line;\n+    unsafe { panic_impl(fmt, file, line) }\n+}\n+\n+// NOTE(stage0): remove cfg after a snapshot\n+#[cfg(not(stage0))]\n #[cold] #[inline(never)] // this is the slow path, always\n #[lang=\"panic\"]\n pub fn panic(expr_file_line: &(&'static str, &'static str, uint)) -> ! {\n@@ -45,6 +88,8 @@ pub fn panic(expr_file_line: &(&'static str, &'static str, uint)) -> ! {\n     unsafe { intrinsics::abort() }\n }\n \n+// NOTE(stage0): remove cfg after a snapshot\n+#[cfg(not(stage0))]\n #[cold] #[inline(never)]\n #[lang=\"panic_bounds_check\"]\n fn panic_bounds_check(file_line: &(&'static str, uint),\n@@ -55,6 +100,8 @@ fn panic_bounds_check(file_line: &(&'static str, uint),\n     unsafe { intrinsics::abort() }\n }\n \n+// NOTE(stage0): remove cfg after a snapshot\n+#[cfg(not(stage0))]\n #[cold] #[inline(never)]\n pub fn panic_fmt(fmt: &fmt::Arguments, file_line: &(&'static str, uint)) -> ! {\n     #[allow(ctypes)]"}, {"sha": "911ae42e142d87e867c5a572471a05817a29cfa5", "filename": "src/librustc/middle/trans/controlflow.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -11,7 +11,7 @@\n use llvm::*;\n use driver::config::FullDebugInfo;\n use middle::def;\n-use middle::lang_items::{FailFnLangItem, FailBoundsCheckFnLangItem};\n+use middle::lang_items::{PanicFnLangItem, PanicBoundsCheckFnLangItem};\n use middle::trans::_match;\n use middle::trans::adt;\n use middle::trans::base::*;\n@@ -498,7 +498,7 @@ pub fn trans_fail<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     let expr_file_line_const = C_struct(ccx, &[v_str, filename, line], false);\n     let expr_file_line = consts::const_addr_of(ccx, expr_file_line_const, ast::MutImmutable);\n     let args = vec!(expr_file_line);\n-    let did = langcall(bcx, Some(sp), \"\", FailFnLangItem);\n+    let did = langcall(bcx, Some(sp), \"\", PanicFnLangItem);\n     let bcx = callee::trans_lang_call(bcx,\n                                       did,\n                                       args.as_slice(),\n@@ -525,7 +525,7 @@ pub fn trans_fail_bounds_check<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     let file_line_const = C_struct(ccx, &[filename, line], false);\n     let file_line = consts::const_addr_of(ccx, file_line_const, ast::MutImmutable);\n     let args = vec!(file_line, index, len);\n-    let did = langcall(bcx, Some(sp), \"\", FailBoundsCheckFnLangItem);\n+    let did = langcall(bcx, Some(sp), \"\", PanicBoundsCheckFnLangItem);\n     let bcx = callee::trans_lang_call(bcx,\n                                       did,\n                                       args.as_slice(),"}, {"sha": "8279b7d9654e4bbc24016d96225b605ffff891a7", "filename": "src/librustrt/unwind.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Flibrustrt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Flibrustrt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Funwind.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -497,6 +497,14 @@ pub extern fn rust_begin_unwind(msg: &fmt::Arguments,\n     begin_unwind_fmt(msg, &(file, line))\n }\n \n+// NOTE(stage0): remove after a snapshot\n+#[cfg(not(test))]\n+#[lang = \"fail_fmt\"]\n+pub extern fn rust_fail_begin_unwind(msg: &fmt::Arguments,\n+                                file: &'static str, line: uint) -> ! {\n+    rust_begin_unwind(msg, file, line)\n+}\n+\n /// The entry point for unwinding with a formatted message.\n ///\n /// This is designed to reduce the amount of code required at the call"}, {"sha": "ea2461ccfa8efc280ce2a96e30c59ddca818fcaf", "filename": "src/test/auxiliary/lang-item-public.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fauxiliary%2Flang-item-public.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flang-item-public.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -14,8 +14,8 @@\n #[lang=\"sized\"]\n pub trait Sized for Sized? {}\n \n-#[lang=\"fail\"]\n-fn fail(_: &(&'static str, &'static str, uint)) -> ! { loop {} }\n+#[lang=\"panic\"]\n+fn panic(_: &(&'static str, &'static str, uint)) -> ! { loop {} }\n \n #[lang = \"stack_exhausted\"]\n extern fn stack_exhausted() {}"}, {"sha": "097a52b89417946d67c6883dc00bf4c9fcb8ad07", "filename": "src/test/compile-fail/binop-fail-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fcompile-fail%2Fbinop-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fcompile-fail%2Fbinop-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbinop-fail-3.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn foo() -> ! { fail!(\"quux\"); }\n+fn foo() -> ! { panic!(\"quux\"); }\n fn main() {\n     foo() //~ ERROR the type of this value must be known in this context\n     =="}, {"sha": "86ff29a52b034e18da707401d2c380c8d83bacb0", "filename": "src/test/compile-fail/issue-5500.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-5500.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -9,6 +9,6 @@\n // except according to those terms.\n \n fn main() {\n-    &fail!()\n+    &panic!()\n     //~^ ERROR mismatched types: expected `()`, found `&<generic #2>` (expected (), found &-ptr)\n }"}, {"sha": "baac192cbf0227fd3f8accf8b81ad1a92a9a7981", "filename": "src/test/compile-fail/weak-lang-item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fweak-lang-item.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // aux-build:weak-lang-items.rs\n-// error-pattern: language item required, but not found: `fail_fmt`\n+// error-pattern: language item required, but not found: `panic_fmt`\n // error-pattern: language item required, but not found: `stack_exhausted`\n // error-pattern: language item required, but not found: `eh_personality`\n "}, {"sha": "197ed59c07f4400afaf57716322369b01d1215b8", "filename": "src/test/run-fail/assert-macro-explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-explicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-explicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-macro-explicit.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'assertion failed: false'\n+// error-pattern:panicked at 'assertion failed: false'\n \n fn main() {\n     assert!(false);"}, {"sha": "223c60d6ae43898d6f77ecc1f6b14fad52fce66d", "filename": "src/test/run-fail/assert-macro-fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-macro-fmt.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'test-assert-fmt 42 rust'\n+// error-pattern:panicked at 'test-assert-fmt 42 rust'\n \n fn main() {\n     assert!(false, \"test-assert-fmt {} {}\", 42i, \"rust\");"}, {"sha": "e68aef10de891c5134b967609739564b924ccb69", "filename": "src/test/run-fail/assert-macro-owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-macro-owned.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'test-assert-owned'\n+// error-pattern:panicked at 'test-assert-owned'\n \n fn main() {\n     assert!(false, \"test-assert-owned\".to_string());"}, {"sha": "59be468e0cb900510d6c3b13a98143af81633e52", "filename": "src/test/run-fail/assert-macro-static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fassert-macro-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fassert-macro-static.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'test-assert-static'\n+// error-pattern:panicked at 'test-assert-static'\n \n fn main() {\n     assert!(false, \"test-assert-static\");"}, {"sha": "6b000866d3ab942cb1cf5cd172151a8328d0996b", "filename": "src/test/run-fail/by-value-self-objects-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fby-value-self-objects-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fby-value-self-objects-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fby-value-self-objects-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:explicit failure\n+// error-pattern:explicit panic\n \n trait Foo {\n     fn foo(self, x: int);"}, {"sha": "8cf018fb7702dc44ccf92760a2191e891777be95", "filename": "src/test/run-fail/expr-fn-fail.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-fn-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-fn-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-fn-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern:explicit panic\n \n-\n-\n-// error-pattern:explicit failure\n fn f() -> ! { panic!() }\n \n fn main() { f(); }"}, {"sha": "987bee55c606d617d30a0070f197628f7e0a66e4", "filename": "src/test/run-fail/expr-if-fail-fn.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-if-fail-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-if-fail-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-if-fail-fn.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern:explicit panic\n \n-\n-\n-// error-pattern:explicit failure\n fn f() -> ! { panic!() }\n \n fn g() -> int { let x = if true { f() } else { 10 }; return x; }"}, {"sha": "f04c94a3bf47f326285419abd5effa965776e4da", "filename": "src/test/run-fail/expr-if-fail.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-if-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-if-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-if-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern:explicit panic\n \n-\n-\n-// error-pattern:explicit failure\n fn main() { let _x = if false { 0i } else if true { panic!() } else { 10i }; }"}, {"sha": "069c1d5ed35574fdd6c54c06318d5b0bfa661b91", "filename": "src/test/run-fail/expr-match-fail-fn.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-match-fail-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-match-fail-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-match-fail-fn.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,10 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern:explicit panic\n \n-\n-\n-// error-pattern:explicit failure\n fn f() -> ! { panic!() }\n \n fn g() -> int { let x = match true { true => { f() } false => { 10 } }; return x; }"}, {"sha": "d5c005b7029a5b11326ee3521da5cb05af36a128", "filename": "src/test/run-fail/expr-match-fail.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-match-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fexpr-match-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexpr-match-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// error-pattern:explicit panic\n \n-\n-\n-// error-pattern:explicit failure\n fn main() { let _x = match true { false => { 0i } true => { panic!() } }; }"}, {"sha": "e25390a798628f7051cd2b669338ae4b270357eb", "filename": "src/test/run-fail/fail-macro-any-wrapped.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-any-wrapped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-any-wrapped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-any-wrapped.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'Box<Any>'\n+// error-pattern:panicked at 'Box<Any>'\n \n fn main() {\n     panic!(box 612_i64);"}, {"sha": "b73c66c4f21659473e29238ca4d8db546e8a29d1", "filename": "src/test/run-fail/fail-macro-any.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-any.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-any.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-any.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,8 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'Box<Any>'\n-\n+// error-pattern:panicked at 'Box<Any>'\n \n fn main() {\n     panic!(box 413i as Box<::std::any::Any+Send>);"}, {"sha": "a8565549a03ed9ed8a4395c7fa4b791764f76677", "filename": "src/test/run-fail/fail-macro-explicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-explicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-explicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-explicit.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'explicit failure'\n+// error-pattern:panicked at 'explicit panic'\n \n fn main() {\n     panic!();"}, {"sha": "ac50f02cf33c3ca7721eab998ee00cb156d93c60", "filename": "src/test/run-fail/fail-macro-fmt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-fmt.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'test-fail-fmt 42 rust'\n+// error-pattern:panicked at 'test-fail-fmt 42 rust'\n \n fn main() {\n     panic!(\"test-fail-fmt {} {}\", 42i, \"rust\");"}, {"sha": "2f695c4e4b70cfebba5d361a55af784eb3d96bee", "filename": "src/test/run-fail/fail-macro-owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-owned.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'test-fail-owned'\n+// error-pattern:panicked at 'test-fail-owned'\n \n fn main() {\n     panic!(\"test-fail-owned\");"}, {"sha": "c62162da09b7c79a95936f9a48f2bceb677c3807", "filename": "src/test/run-fail/fail-macro-static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-macro-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-macro-static.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:failed at 'test-fail-static'\n+// error-pattern:panicked at 'test-fail-static'\n \n fn main() {\n     panic!(\"test-fail-static\");"}, {"sha": "8b013199369a31789d69555c9d411ad4bbb12824", "filename": "src/test/run-fail/fail-non-utf8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-non-utf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-non-utf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-non-utf8.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -12,7 +12,7 @@\n // Previously failed formating invalid utf8.\n // cc #16877\n \n-// error-pattern:failed at 'hello\ufffd'\n+// error-pattern:panicked at 'hello\ufffd'\n \n struct Foo;\n impl std::fmt::Show for Foo {"}, {"sha": "3f8abc41ff74a472cb3b0a53318be28d2dc38291", "filename": "src/test/run-fail/fail-task-name-none.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-none.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-none.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-none.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:task '<unnamed>' failed at 'test'\n+// error-pattern:task '<unnamed>' panicked at 'test'\n \n use std::task;\n "}, {"sha": "0a303475a29ff1705b1aed7bdeb9fa94f43036c2", "filename": "src/test/run-fail/fail-task-name-owned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-owned.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:task 'owned name' failed at 'test'\n+// error-pattern:task 'owned name' panicked at 'test'\n \n use std::task::TaskBuilder;\n "}, {"sha": "73fca2465909304619b726bde793285722998773", "filename": "src/test/run-fail/fail-task-name-send-str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-send-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-send-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-send-str.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:task 'send name' failed at 'test'\n+// error-pattern:task 'send name' panicked at 'test'\n \n fn main() {\n     let r: Result<int,_> ="}, {"sha": "21c019e1a7422f00b3a701665427afc8153d75eb", "filename": "src/test/run-fail/fail-task-name-static.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ffail-task-name-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-task-name-static.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:task 'static name' failed at 'test'\n+// error-pattern:task 'static name' panicked at 'test'\n \n fn main() {\n     let r: Result<int,_> ="}, {"sha": "939845a7b349a0d9353a0d6b3fae82f9bd54d251", "filename": "src/test/run-fail/glob-use-std.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fglob-use-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fglob-use-std.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -14,7 +14,7 @@\n //\n // Expanded pretty printing causes resolve conflicts.\n \n-// error-pattern:fail works\n+// error-pattern:panic works\n #![feature(globs)]\n \n use std::*;"}, {"sha": "8dbfc06152a0feccdbebb7e3b57d842e75706eec", "filename": "src/test/run-fail/issue-12920.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fissue-12920.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fissue-12920.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-12920.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:explicit failure\n+// error-pattern:explicit panic\n \n pub fn main() {\n     panic!(); println!(\"{}\", 1i);"}, {"sha": "2b20540501ec043554dc9eea5d6ab98851eaca42", "filename": "src/test/run-fail/issue-2444.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fissue-2444.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fissue-2444.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:explicit failure\n+// error-pattern:explicit panic\n \n use std::sync::Arc;\n "}, {"sha": "b750501c265d57088abb82dfffef7f0143792b15", "filename": "src/test/run-fail/main-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fmain-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fmain-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmain-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:task '<main>' failed at\n+// error-pattern:task '<main>' panicked at\n \n fn main() {\n     panic!()"}, {"sha": "1b7cace14b079e7f8f49d8ec1f22d01676d9344a", "filename": "src/test/run-fail/match-bot-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fmatch-bot-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fmatch-bot-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmatch-bot-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern:explicit failure\n+// error-pattern:explicit panic\n \n #![allow(unreachable_code)]\n #![allow(unused_variable)]"}, {"sha": "0b261676cb2df24621081c3e5b778529c208c35a", "filename": "src/test/run-fail/native-failure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fnative-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Fnative-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fnative-failure.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // ignore-android (FIXME #11419)\n-// error-pattern:explicit failure\n+// error-pattern:explicit panic\n \n extern crate native;\n "}, {"sha": "cd2ec834d82acdd29be61e284d50fca05acfd859", "filename": "src/test/run-fail/test-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ftest-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Ftest-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftest-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // check-stdout\n-// error-pattern:task 'test_foo' failed at\n+// error-pattern:task 'test_foo' panicked at\n // compile-flags: --test\n // ignore-pretty: does not work well with `--test`\n "}, {"sha": "07c9a21c5c1107066cdefcfbe7900c82c6df0eea", "filename": "src/test/run-fail/unique-fail.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Funique-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-fail%2Funique-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funique-fail.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -8,5 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// error-pattern: fail\n+// error-pattern: panic\n fn main() { box panic!(); }"}, {"sha": "1183475610584d0cab9ec404dd6bd1d13b1ff28b", "filename": "src/test/run-make/no-duplicate-libs/bar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Fbar.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -19,4 +19,4 @@ pub extern fn bar() {}\n \n #[lang = \"stack_exhausted\"] fn stack_exhausted() {}\n #[lang = \"eh_personality\"] fn eh_personality() {}\n-#[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n+#[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }"}, {"sha": "61a2a51da08644e51bc09f7878e06e94af25053d", "filename": "src/test/run-make/no-duplicate-libs/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fno-duplicate-libs%2Ffoo.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -19,4 +19,4 @@ pub extern fn foo() {}\n \n #[lang = \"stack_exhausted\"] fn stack_exhausted() {}\n #[lang = \"eh_personality\"] fn eh_personality() {}\n-#[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n+#[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }"}, {"sha": "2877aa6bd3be1a317b0d8f41596a3f5c4d19e9ca", "filename": "src/test/run-pass/smallest-hello-world.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ac7fc73f5acfe30c698ea4f8bfc37b30473977e/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmallest-hello-world.rs?ref=6ac7fc73f5acfe30c698ea4f8bfc37b30473977e", "patch": "@@ -22,7 +22,7 @@ extern \"rust-intrinsic\" { fn transmute<T, U>(t: T) -> U; }\n \n #[lang = \"stack_exhausted\"] extern fn stack_exhausted() {}\n #[lang = \"eh_personality\"] extern fn eh_personality() {}\n-#[lang = \"fail_fmt\"] fn fail_fmt() -> ! { loop {} }\n+#[lang = \"panic_fmt\"] fn panic_fmt() -> ! { loop {} }\n \n #[start]\n #[no_stack_check]"}]}