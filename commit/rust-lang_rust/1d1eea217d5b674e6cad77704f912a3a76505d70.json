{"sha": "1d1eea217d5b674e6cad77704f912a3a76505d70", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkMWVlYTIxN2Q1YjY3NGU2Y2FkNzc3MDRmOTEyYTNhNzY1MDVkNzA=", "commit": {"author": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-10T21:10:26Z"}, "committer": {"name": "Emil Lauridsen", "email": "mine809@gmail.com", "date": "2020-01-10T21:10:26Z"}, "message": "Slightly more robust cargo watcher root search", "tree": {"sha": "fadc5665683d934acea2bc21c0ff2bbde5f255c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fadc5665683d934acea2bc21c0ff2bbde5f255c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1d1eea217d5b674e6cad77704f912a3a76505d70", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1d1eea217d5b674e6cad77704f912a3a76505d70", "html_url": "https://github.com/rust-lang/rust/commit/1d1eea217d5b674e6cad77704f912a3a76505d70", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1d1eea217d5b674e6cad77704f912a3a76505d70/comments", "author": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kiljacken", "id": 209321, "node_id": "MDQ6VXNlcjIwOTMyMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/209321?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kiljacken", "html_url": "https://github.com/kiljacken", "followers_url": "https://api.github.com/users/kiljacken/followers", "following_url": "https://api.github.com/users/kiljacken/following{/other_user}", "gists_url": "https://api.github.com/users/kiljacken/gists{/gist_id}", "starred_url": "https://api.github.com/users/kiljacken/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kiljacken/subscriptions", "organizations_url": "https://api.github.com/users/kiljacken/orgs", "repos_url": "https://api.github.com/users/kiljacken/repos", "events_url": "https://api.github.com/users/kiljacken/events{/privacy}", "received_events_url": "https://api.github.com/users/kiljacken/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "url": "https://api.github.com/repos/rust-lang/rust/commits/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a", "html_url": "https://github.com/rust-lang/rust/commit/19eb7fa1db7da8417314ddfafe7addbbd9c3b46a"}], "stats": {"total": 20, "additions": 16, "deletions": 4}, "files": [{"sha": "36b5242d13c526a73c472d44a7963331542d813e", "filename": "crates/ra_lsp_server/src/world.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1d1eea217d5b674e6cad77704f912a3a76505d70/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d1eea217d5b674e6cad77704f912a3a76505d70/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fworld.rs?ref=1d1eea217d5b674e6cad77704f912a3a76505d70", "patch": "@@ -74,7 +74,7 @@ impl WorldState {\n         lru_capacity: Option<usize>,\n         exclude_globs: &[Glob],\n         watch: Watch,\n-        options: Options,\n+        mut options: Options,\n         feature_flags: FeatureFlags,\n     ) -> WorldState {\n         let mut change = AnalysisChange::new();\n@@ -132,8 +132,20 @@ impl WorldState {\n         change.set_crate_graph(crate_graph);\n \n         // FIXME: Figure out the multi-workspace situation\n-        let check_watcher =\n-            CheckWatcher::new(&options.cargo_watch, folder_roots.first().cloned().unwrap());\n+        let check_watcher = {\n+            let first_workspace = workspaces.first().unwrap();\n+            let cargo_project_root = match first_workspace {\n+                ProjectWorkspace::Cargo { cargo, .. } => cargo.workspace_root.clone(),\n+                ProjectWorkspace::Json { .. } => {\n+                    log::warn!(\n+                        \"Cargo check watching only supported for cargo workspaces, disabling\"\n+                    );\n+                    options.cargo_watch.enable = false;\n+                    PathBuf::new()\n+                }\n+            };\n+            CheckWatcher::new(&options.cargo_watch, cargo_project_root)\n+        };\n \n         let mut analysis_host = AnalysisHost::new(lru_capacity, feature_flags);\n         analysis_host.apply_change(change);"}, {"sha": "18c2f11b72c758352b19e446f3bf6eb22546a20e", "filename": "crates/ra_project_model/src/cargo_workspace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1d1eea217d5b674e6cad77704f912a3a76505d70/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1d1eea217d5b674e6cad77704f912a3a76505d70/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Fcargo_workspace.rs?ref=1d1eea217d5b674e6cad77704f912a3a76505d70", "patch": "@@ -21,7 +21,7 @@ use crate::Result;\n pub struct CargoWorkspace {\n     packages: Arena<Package, PackageData>,\n     targets: Arena<Target, TargetData>,\n-    pub(crate) workspace_root: PathBuf,\n+    pub workspace_root: PathBuf,\n }\n \n #[derive(Deserialize, Clone, Debug, PartialEq, Eq)]"}]}