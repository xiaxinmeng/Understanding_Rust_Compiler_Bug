{"sha": "519125640035c66f906feb3455891ae9b41b299d", "node_id": "C_kwDOAAsO6NoAKDUxOTEyNTY0MDAzNWM2NmY5MDZmZWIzNDU1ODkxYWU5YjQxYjI5OWQ", "commit": {"author": {"name": "wtj", "email": "zhangwt1997@gmail.com", "date": "2022-10-13T09:00:36Z"}, "committer": {"name": "wtj", "email": "zhangwt1997@gmail.com", "date": "2022-10-13T16:10:04Z"}, "message": "fix a typo", "tree": {"sha": "f88c49ab82baa59546e95db1d5f3e86462de60dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f88c49ab82baa59546e95db1d5f3e86462de60dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519125640035c66f906feb3455891ae9b41b299d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519125640035c66f906feb3455891ae9b41b299d", "html_url": "https://github.com/rust-lang/rust/commit/519125640035c66f906feb3455891ae9b41b299d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519125640035c66f906feb3455891ae9b41b299d/comments", "author": {"login": "whentojump", "id": 35722712, "node_id": "MDQ6VXNlcjM1NzIyNzEy", "avatar_url": "https://avatars.githubusercontent.com/u/35722712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whentojump", "html_url": "https://github.com/whentojump", "followers_url": "https://api.github.com/users/whentojump/followers", "following_url": "https://api.github.com/users/whentojump/following{/other_user}", "gists_url": "https://api.github.com/users/whentojump/gists{/gist_id}", "starred_url": "https://api.github.com/users/whentojump/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whentojump/subscriptions", "organizations_url": "https://api.github.com/users/whentojump/orgs", "repos_url": "https://api.github.com/users/whentojump/repos", "events_url": "https://api.github.com/users/whentojump/events{/privacy}", "received_events_url": "https://api.github.com/users/whentojump/received_events", "type": "User", "site_admin": false}, "committer": {"login": "whentojump", "id": 35722712, "node_id": "MDQ6VXNlcjM1NzIyNzEy", "avatar_url": "https://avatars.githubusercontent.com/u/35722712?v=4", "gravatar_id": "", "url": "https://api.github.com/users/whentojump", "html_url": "https://github.com/whentojump", "followers_url": "https://api.github.com/users/whentojump/followers", "following_url": "https://api.github.com/users/whentojump/following{/other_user}", "gists_url": "https://api.github.com/users/whentojump/gists{/gist_id}", "starred_url": "https://api.github.com/users/whentojump/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/whentojump/subscriptions", "organizations_url": "https://api.github.com/users/whentojump/orgs", "repos_url": "https://api.github.com/users/whentojump/repos", "events_url": "https://api.github.com/users/whentojump/events{/privacy}", "received_events_url": "https://api.github.com/users/whentojump/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4891d57f7aab37b5d6a84f2901c0bb8903111d53", "url": "https://api.github.com/repos/rust-lang/rust/commits/4891d57f7aab37b5d6a84f2901c0bb8903111d53", "html_url": "https://github.com/rust-lang/rust/commit/4891d57f7aab37b5d6a84f2901c0bb8903111d53"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "11053a8f6c45293a1b306c1c573ceed88a370efe", "filename": "compiler/rustc_codegen_llvm/src/back/write.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/519125640035c66f906feb3455891ae9b41b299d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519125640035c66f906feb3455891ae9b41b299d/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fback%2Fwrite.rs?ref=519125640035c66f906feb3455891ae9b41b299d", "patch": "@@ -537,7 +537,7 @@ pub(crate) fn link(\n     mut modules: Vec<ModuleCodegen<ModuleLlvm>>,\n ) -> Result<ModuleCodegen<ModuleLlvm>, FatalError> {\n     use super::lto::{Linker, ModuleBuffer};\n-    // Sort the modules by name to ensure to ensure deterministic behavior.\n+    // Sort the modules by name to ensure deterministic behavior.\n     modules.sort_by(|a, b| a.name.cmp(&b.name));\n     let (first, elements) =\n         modules.split_first().expect(\"Bug! modules must contain at least one module.\");"}]}