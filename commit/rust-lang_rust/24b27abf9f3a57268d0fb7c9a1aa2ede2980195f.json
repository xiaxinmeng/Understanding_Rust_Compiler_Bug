{"sha": "24b27abf9f3a57268d0fb7c9a1aa2ede2980195f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0YjI3YWJmOWYzYTU3MjY4ZDBmYjdjOWExYWEyZWRlMjk4MDE5NWY=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-12T20:31:37Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-12T20:31:37Z"}, "message": "Add a doc comment on the difference between Name and NameRef ast nodes", "tree": {"sha": "a017fbf3780dfea221c721fbb6ce870a7aa7abfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a017fbf3780dfea221c721fbb6ce870a7aa7abfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f", "html_url": "https://github.com/rust-lang/rust/commit/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a5ab9f5ddc2f60a9229904c412ac943e894c4b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5ab9f5ddc2f60a9229904c412ac943e894c4b7", "html_url": "https://github.com/rust-lang/rust/commit/2a5ab9f5ddc2f60a9229904c412ac943e894c4b7"}], "stats": {"total": 34, "additions": 32, "deletions": 2}, "files": [{"sha": "7b236cd5291babbf7f50441cd958173ea41b6354", "filename": "crates/ra_syntax/src/ast/generated/nodes.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated%2Fnodes.rs?ref=24b27abf9f3a57268d0fb7c9a1aa2ede2980195f", "patch": "@@ -1790,7 +1790,20 @@ impl Visibility {\n     pub fn crate_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![crate]) }\n }\n /// Single identifier.\n-/// // TODO: clarify the difference between Name and NameRef\n+/// Note(@matklad): `Name` is for things that install a new name into the scope,\n+/// `NameRef` is a usage of a name. Most of the time, this definition/reference\n+/// distinction can be determined purely syntactically, ie in\n+/// ```\n+/// fn foo() { foo() }\n+/// ```\n+/// the first foo is `Name`, the second one is `NameRef`.\n+/// The notable exception are patterns, where in\n+/// ``\n+/// let x = 92\n+/// ```\n+/// `x` can be semantically either a name or a name ref, depeding on\n+/// wether there's an `x` constant in scope.\n+/// We use `Name` for patterns, and disambiguate semantically (see `NameClass` in ide_db).\n ///\n /// ```\n /// let \u2770 foo \u2771 = bar;\n@@ -1807,6 +1820,8 @@ impl Name {\n     pub fn ident_token(&self) -> Option<SyntaxToken> { support::token(&self.syntax, T![ident]) }\n }\n /// Reference to a name.\n+/// See the explanation on the difference between `Name` and `NameRef`\n+/// in `Name` ast node docs.\n ///\n /// ```\n /// let foo = \u2770 bar \u2771(\u2770 Baz(\u2770 bruh \u2771) \u2771;"}, {"sha": "79e5a608d676c26be3bd1aa3860c063b77007241", "filename": "xtask/src/ast_src.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f/xtask%2Fsrc%2Fast_src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24b27abf9f3a57268d0fb7c9a1aa2ede2980195f/xtask%2Fsrc%2Fast_src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fast_src.rs?ref=24b27abf9f3a57268d0fb7c9a1aa2ede2980195f", "patch": "@@ -1522,7 +1522,20 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n         struct Visibility { T![pub], T![super], T![self], T![crate] }\n \n         /// Single identifier.\n-        /// // TODO: clarify the difference between Name and NameRef\n+        /// Note(@matklad): `Name` is for things that install a new name into the scope,\n+        /// `NameRef` is a usage of a name. Most of the time, this definition/reference\n+        /// distinction can be determined purely syntactically, ie in\n+        /// ```\n+        /// fn foo() { foo() }\n+        /// ```\n+        /// the first foo is `Name`, the second one is `NameRef`.\n+        /// The notable exception are patterns, where in\n+        /// ``\n+        /// let x = 92\n+        /// ```\n+        /// `x` can be semantically either a name or a name ref, depeding on\n+        /// wether there's an `x` constant in scope.\n+        /// We use `Name` for patterns, and disambiguate semantically (see `NameClass` in ide_db).\n         ///\n         /// ```\n         /// let \u2770 foo \u2771 = bar;\n@@ -1534,6 +1547,8 @@ pub(crate) const AST_SRC: AstSrc = AstSrc {\n         struct Name { T![ident] }\n \n         /// Reference to a name.\n+        /// See the explanation on the difference between `Name` and `NameRef`\n+        /// in `Name` ast node docs.\n         ///\n         /// ```\n         /// let foo = \u2770 bar \u2771(\u2770 Baz(\u2770 bruh \u2771) \u2771;"}]}