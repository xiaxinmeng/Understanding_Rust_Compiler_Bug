{"sha": "05489e7ec8ee4cdf83b819dac3de83ef6515c98a", "node_id": "C_kwDOAAsO6NoAKDA1NDg5ZTdlYzhlZTRjZGY4M2I4MTlkYWMzZGU4M2VmNjUxNWM5OGE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-18T01:08:58Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-04-18T01:08:58Z"}, "message": "check Allocation invariant during printing", "tree": {"sha": "1c93cf2d2e7009c9126cc90df527cfa30fac6a83", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c93cf2d2e7009c9126cc90df527cfa30fac6a83"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05489e7ec8ee4cdf83b819dac3de83ef6515c98a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05489e7ec8ee4cdf83b819dac3de83ef6515c98a", "html_url": "https://github.com/rust-lang/rust/commit/05489e7ec8ee4cdf83b819dac3de83ef6515c98a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05489e7ec8ee4cdf83b819dac3de83ef6515c98a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29cc8ec2d1b959190c9664b1071add7ae327c59c", "url": "https://api.github.com/repos/rust-lang/rust/commits/29cc8ec2d1b959190c9664b1071add7ae327c59c", "html_url": "https://github.com/rust-lang/rust/commit/29cc8ec2d1b959190c9664b1071add7ae327c59c"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "b7f695da544f1db26a260a1c26d2e3a63cf42b64", "filename": "compiler/rustc_middle/src/mir/pretty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/05489e7ec8ee4cdf83b819dac3de83ef6515c98a/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05489e7ec8ee4cdf83b819dac3de83ef6515c98a/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fpretty.rs?ref=05489e7ec8ee4cdf83b819dac3de83ef6515c98a", "patch": "@@ -851,6 +851,7 @@ fn write_allocation_bytes<'tcx, Tag: Provenance, Extra>(\n         }\n         if let Some(&tag) = alloc.relocations().get(&i) {\n             // Memory with a relocation must be defined\n+            assert!(alloc.init_mask().is_range_initialized(i, i + ptr_size).is_ok());\n             let j = i.bytes_usize();\n             let offset = alloc\n                 .inspect_with_uninit_and_ptr_outside_interpreter(j..j + ptr_size.bytes_usize());"}]}