{"sha": "1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFkYjExNDQyNzdhYmJmMWZmYzE0ZDRlOWExNDNjZjg3ZDFlZjZkNDE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-05T13:25:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-05T13:25:55Z"}, "message": "Auto merge of #45046 - kennytm:rollup, r=kennytm\n\nRollup of 9 pull requests\n\n- Successful merges: #44664, #44935, #44972, #44980, #44987, #44997, #45006, #45017, #45024\n- Failed merges:", "tree": {"sha": "5af0e3d7aca785eede0d2a1b7f0164cd2b5ee47d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5af0e3d7aca785eede0d2a1b7f0164cd2b5ee47d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "html_url": "https://github.com/rust-lang/rust/commit/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abef7e1fd26e6828bbba457173a76d150b1378d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/abef7e1fd26e6828bbba457173a76d150b1378d8", "html_url": "https://github.com/rust-lang/rust/commit/abef7e1fd26e6828bbba457173a76d150b1378d8"}, {"sha": "5440733971d1abf0f42fe05d4345468bd0f78787", "url": "https://api.github.com/repos/rust-lang/rust/commits/5440733971d1abf0f42fe05d4345468bd0f78787", "html_url": "https://github.com/rust-lang/rust/commit/5440733971d1abf0f42fe05d4345468bd0f78787"}], "stats": {"total": 98, "additions": 74, "deletions": 24}, "files": [{"sha": "a86742d7bd4ff56818e673a615a49d22c99b5a92", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 31, "deletions": 3, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -1,4 +1,5 @@\n # Contributing to Rust\n+[contributing-to-rust]: #contributing-to-rust\n \n Thank you for your interest in contributing to Rust! There are many ways to\n contribute, and we appreciate all of them. This document is a bit long, so here's\n@@ -18,18 +19,20 @@ hop on [#rust-internals][pound-rust-internals].\n \n As a reminder, all contributors are expected to follow our [Code of Conduct][coc].\n \n-[pound-rust-internals]: http://chat.mibbit.com/?server=irc.mozilla.org&channel=%23rust-internals\n+[pound-rust-internals]: https://chat.mibbit.com/?server=irc.mozilla.org&channel=%23rust-internals\n [internals]: https://internals.rust-lang.org\n [coc]: https://www.rust-lang.org/conduct.html\n \n ## Feature Requests\n+[feature-requests]: #feature-requests\n \n To request a change to the way that the Rust language works, please open an\n issue in the [RFCs repository](https://github.com/rust-lang/rfcs/issues/new)\n rather than this one. New features and other significant language changes\n must go through the RFC process.\n \n ## Bug Reports\n+[bug-reports]: #bug-reports\n \n While bugs are unfortunate, they're a reality in software. We can't fix what we\n don't know about, so please report liberally. If you're not sure if something\n@@ -80,6 +83,7 @@ $ RUST_BACKTRACE=1 rustc ...\n ```\n \n ## The Build System\n+[the-build-system]: #the-build-system\n \n Rust's build system allows you to bootstrap the compiler, run tests &\n benchmarks, generate documentation, install a fresh build of Rust, and more.\n@@ -94,6 +98,7 @@ system internals, try asking in [`#rust-internals`][pound-rust-internals].\n [bootstrap]: https://github.com/rust-lang/rust/tree/master/src/bootstrap/\n \n ### Configuration\n+[configuration]: #configuration\n \n Before you can start building the compiler you need to configure the build for\n your system. In most cases, that will just mean using the defaults provided\n@@ -125,6 +130,11 @@ file. If you still have a `config.mk` file in your directory - from\n `./configure` - you may need to delete it for `config.toml` to work.\n \n ### Building\n+[building]: #building\n+\n+Dependencies\n+- [build dependencies](README.md#building-from-source)\n+- `gdb` 6.2.0 minimum, 7.1 or later recommended for test builds\n \n The build system uses the `x.py` script to control the build process. This script\n is used to build, test, and document various parts of the compiler. You can\n@@ -194,6 +204,7 @@ Note: Previously `./configure` and `make` were used to build this project.\n They are still available, but `x.py` is the recommended build system.\n \n ### Useful commands\n+[useful-commands]: #useful-commands\n \n Some common invocations of `x.py` are:\n \n@@ -234,6 +245,7 @@ Some common invocations of `x.py` are:\n   code.\n \n ### Using your local build\n+[using-local-build]: #using-local-build\n \n If you use Rustup to manage your rust install, it has a feature called [\"custom\n toolchains\"][toolchain-link] that you can use to access your newly-built compiler\n@@ -262,6 +274,7 @@ stage 1. `python x.py build --stage 1 src/libstd src/tools/rustdoc` will build\n rustdoc and libstd, which will allow rustdoc to be run with that toolchain.)\n \n ## Pull Requests\n+[pull-requests]: #pull-requests\n \n Pull requests are the primary mechanism we use to change Rust. GitHub itself\n has some [great documentation][pull-requests] on using the Pull Request feature.\n@@ -326,20 +339,32 @@ it can be found\n [here](https://github.com/rust-lang/rust-wiki-backup/blob/master/Note-testsuite.md).\n \n ### External Dependencies\n+[external-dependencies]: #external-dependencies\n \n Currently building Rust will also build the following external projects:\n \n * [clippy](https://github.com/rust-lang-nursery/rust-clippy)\n * [miri](https://github.com/solson/miri)\n \n If your changes break one of these projects, you need to fix them by opening\n-a pull request against the broken project. When you have opened a pull request,\n-you can disable the tool via `src/tools/toolstate.toml`.\n+a pull request against the broken project asking to put the fix on a branch.\n+Then you can disable the tool building via `src/tools/toolstate.toml`.\n+Once the branch containing your fix is likely to be merged, you can point\n+the affected submodule at this branch.\n+\n+Don't forget to also add your changes with\n+\n+```\n+git add path/to/submodule\n+```\n+\n+outside the submodule.\n \n It can also be more convenient during development to set `submodules = false`\n in the `config.toml` to prevent `x.py` from resetting to the original branch.\n \n ## Writing Documentation\n+[writing-documentation]: #writing-documentation\n \n Documentation improvements are very welcome. The source of `doc.rust-lang.org`\n is located in `src/doc` in the tree, and standard API documentation is generated\n@@ -370,6 +395,7 @@ reference to `doc/reference.html`. The CSS might be messed up, but you can\n verify that the HTML is right.\n \n ## Issue Triage\n+[issue-triage]: #issue-triage\n \n Sometimes, an issue will stay open, even though the bug has been fixed. And\n sometimes, the original bug may go stale because something has changed in the\n@@ -437,6 +463,7 @@ If you're looking for somewhere to start, check out the [E-easy][eeasy] tag.\n [rfcbot]: https://github.com/dikaiosune/rust-dashboard/blob/master/RFCBOT.md\n \n ## Out-of-tree Contributions\n+[out-of-tree-contributions]: #out-of-tree-contributions\n \n There are a number of other ways to contribute to Rust that don't deal with\n this repository.\n@@ -456,6 +483,7 @@ valuable!\n [community-library]: https://github.com/rust-lang/rfcs/labels/A-community-library\n \n ## Helpful Links and Information\n+[helpful-info]: #helpful-info\n \n For people new to Rust, and just starting to contribute, or even for\n more seasoned developers, some useful places to look for information"}, {"sha": "95d543b8bb33f0d38754c9709c9f473ba881a081", "filename": "README.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -6,13 +6,15 @@ standard library, and documentation.\n [Rust]: https://www.rust-lang.org\n \n ## Quick Start\n+[quick-start]: #quick-start\n \n Read [\"Installation\"] from [The Book].\n \n [\"Installation\"]: https://doc.rust-lang.org/book/second-edition/ch01-01-installation.html\n [The Book]: https://doc.rust-lang.org/book/index.html\n \n ## Building from Source\n+[building-from-source]: #building-from-source\n \n 1. Make sure you have installed the dependencies:\n \n@@ -52,6 +54,7 @@ Read [\"Installation\"] from [The Book].\n [Cargo]: https://github.com/rust-lang/cargo\n \n ### Building on Windows\n+[building-on-windows]: #building-on-windows\n \n There are two prominent ABIs in use on Windows: the native (MSVC) ABI used by\n Visual Studio, and the GNU ABI used by the GCC toolchain. Which version of Rust\n@@ -61,6 +64,7 @@ for interop with GNU software built using the MinGW/MSYS2 toolchain use the GNU\n build.\n \n #### MinGW\n+[windows-mingw]: #windows-mingw\n \n [MSYS2][msys2] can be used to easily build Rust on Windows:\n \n@@ -101,6 +105,7 @@ build.\n    ```\n \n #### MSVC\n+[windows-msvc]: #windows-msvc\n \n MSVC builds of Rust additionally require an installation of Visual Studio 2013\n (or later) so `rustc` can use its linker. Make sure to check the \u201cC++ tools\u201d\n@@ -124,6 +129,7 @@ python x.py build\n ```\n \n #### Specifying an ABI\n+[specifying-an-abi]: #specifying-an-abi\n \n Each specific ABI can also be used from either environment (for example, using\n the GNU ABI in powershell) by using an explicit build triple. The available\n@@ -141,6 +147,7 @@ in Building From Source), and modifying the `build` option under the `[build]`\n section.\n \n ### Configure and Make\n+[configure-and-make]: #configure-and-make\n \n While it's not the recommended build system, this project also provides a\n configure script and makefile (the latter of which just invokes `x.py`).\n@@ -155,6 +162,7 @@ When using the configure script, the generated `config.mk` file may override the\n `config.mk` file.\n \n ## Building Documentation\n+[building-documentation]: #building-documentation\n \n If you\u2019d like to build the documentation, it\u2019s almost the same:\n \n@@ -167,6 +175,7 @@ the ABI used. I.e., if the ABI was `x86_64-pc-windows-msvc`, the directory will\n `build\\x86_64-pc-windows-msvc\\doc`.\n \n ## Notes\n+[notes]: #notes\n \n Since the Rust compiler is written in Rust, it must be built by a\n precompiled \"snapshot\" version of itself (made in an earlier state of\n@@ -192,6 +201,7 @@ There is more advice about hacking on Rust in [CONTRIBUTING.md].\n [CONTRIBUTING.md]: https://github.com/rust-lang/rust/blob/master/CONTRIBUTING.md\n \n ## Getting Help\n+[getting-help]: #getting-help\n \n The Rust community congregates in a few places:\n \n@@ -204,6 +214,7 @@ The Rust community congregates in a few places:\n [users.rust-lang.org]: https://users.rust-lang.org/\n \n ## Contributing\n+[contributing]: #contributing\n \n To contribute to Rust, please see [CONTRIBUTING](CONTRIBUTING.md).\n \n@@ -217,6 +228,7 @@ Rust. And a good place to ask for help would be [#rust-beginners].\n [#rust-beginners]: irc://irc.mozilla.org/rust-beginners\n \n ## License\n+[license]: #license\n \n Rust is primarily distributed under the terms of both the MIT license\n and the Apache License (Version 2.0), with portions covered by various"}, {"sha": "08e79609ce88583fa7286157dfe497486a09fabe", "filename": "src/doc/book", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fbook?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -1 +1 @@\n-Subproject commit d09c9e8144ed32170b7596abb145ade8b097acaf\n+Subproject commit 08e79609ce88583fa7286157dfe497486a09fabe"}, {"sha": "0ee3f7265e9d09746d901cef6f1f300baff1d923", "filename": "src/doc/nomicon", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -1 +1 @@\n-Subproject commit a4322ccb289a43cc238d4536982f184a3eec9ba7\n+Subproject commit 0ee3f7265e9d09746d901cef6f1f300baff1d923"}, {"sha": "36adc6ae504c6e0343ab5d7b3871f0a2a71236da", "filename": "src/doc/reference", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -1 +1 @@\n-Subproject commit 266d429a48468371d2d90669f6a30dd659bb4bdb\n+Subproject commit 36adc6ae504c6e0343ab5d7b3871f0a2a71236da"}, {"sha": "4cb6e8405f398f61e3bd6f334c9081108f750e5a", "filename": "src/libcore/ops/deref.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibcore%2Fops%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibcore%2Fops%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fderef.rs?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -40,7 +40,7 @@\n /// [book]: ../../book/second-edition/ch15-02-deref.html\n /// [`DerefMut`]: trait.DerefMut.html\n /// [more]: #more-on-deref-coercion\n-/// [ref-deref-op]: ../../reference/expressions.html#the-dereference-operator\n+/// [ref-deref-op]: ../../reference/expressions/operator-expr.html#the-dereference-operator\n /// [ref-deref-trait]: ../../reference/the-deref-trait.html\n /// [type coercions]: ../../reference/type-coercions.html\n ///\n@@ -127,7 +127,7 @@ impl<'a, T: ?Sized> Deref for &'a mut T {\n /// [book]: ../../book/second-edition/ch15-02-deref.html\n /// [`Deref`]: trait.Deref.html\n /// [more]: #more-on-deref-coercion\n-/// [ref-deref-op]: ../../reference/expressions.html#the-dereference-operator\n+/// [ref-deref-op]: ../../reference/expressions/operator-expr.html#the-dereference-operator\n /// [ref-deref-trait]: ../../reference/the-deref-trait.html\n /// [type coercions]: ../../reference/type-coercions.html\n ///"}, {"sha": "e0efdbcd4c7a08d4592f3d675e820b2ea195b59c", "filename": "src/libcore/ops/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibcore%2Fops%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibcore%2Fops%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Fmod.rs?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -150,7 +150,7 @@\n //! [`Sub`]: trait.Sub.html\n //! [`Mul`]: trait.Mul.html\n //! [`clone`]: ../clone/trait.Clone.html#tymethod.clone\n-//! [operator precedence]: ../../reference/expressions.html#operator-precedence\n+//! [operator precedence]: ../../reference/expressions/operator-expr.html#operator-precedence\n \n #![stable(feature = \"rust1\", since = \"1.0.0\")]\n "}, {"sha": "3ac2949b83e46fa74be882a84639efd3342b84f5", "filename": "src/librustc/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibrustc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibrustc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2FREADME.md?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -153,7 +153,7 @@ take:\n     - LLVM then runs its various optimizations, which produces a number of `.o` files\n       (one for each \"codegen unit\").\n 6. **Linking**\n-    - Finally, those `.o` files are linke together.\n+    - Finally, those `.o` files are linked together.\n \n Glossary\n ========"}, {"sha": "9321121fe1550f70830c8dce278c35cdfb1b360d", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -145,11 +145,11 @@ impl<'a, 'tcx> BitDenotation for Borrows<'a, 'tcx> {\n         });\n         match stmt.kind {\n             mir::StatementKind::EndRegion(region_scope) => {\n-                let borrow_indexes = self.region_map.get(&ReScope(region_scope)).unwrap_or_else(|| {\n-                    panic!(\"could not find BorrowIndexs for region scope {:?}\", region_scope);\n-                });\n-\n-                for idx in borrow_indexes { sets.kill(&idx); }\n+                if let Some(borrow_indexes) = self.region_map.get(&ReScope(region_scope)) {\n+                    for idx in borrow_indexes { sets.kill(&idx); }\n+                } else {\n+                    // (if there is no entry, then there are no borrows to be tracked)\n+                }\n             }\n \n             mir::StatementKind::Assign(_, ref rhs) => {"}, {"sha": "1d62853e906a0c3e8b786f4cf499901f77f14d2b", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -19,10 +19,10 @@ use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n /// A mutual exclusion primitive useful for protecting shared data\n ///\n /// This mutex will block threads waiting for the lock to become available. The\n-/// mutex can also be statically initialized or created via a `new`\n+/// mutex can also be statically initialized or created via a [`new`]\n /// constructor. Each mutex has a type parameter which represents the data that\n /// it is protecting. The data can only be accessed through the RAII guards\n-/// returned from `lock` and `try_lock`, which guarantees that the data is only\n+/// returned from [`lock`] and [`try_lock`], which guarantees that the data is only\n /// ever accessed when the mutex is locked.\n ///\n /// # Poisoning\n@@ -33,16 +33,24 @@ use sys_common::poison::{self, TryLockError, TryLockResult, LockResult};\n /// data by default as it is likely tainted (some invariant is not being\n /// upheld).\n ///\n-/// For a mutex, this means that the `lock` and `try_lock` methods return a\n-/// `Result` which indicates whether a mutex has been poisoned or not. Most\n-/// usage of a mutex will simply `unwrap()` these results, propagating panics\n+/// For a mutex, this means that the [`lock`] and [`try_lock`] methods return a\n+/// [`Result`] which indicates whether a mutex has been poisoned or not. Most\n+/// usage of a mutex will simply [`unwrap()`] these results, propagating panics\n /// among threads to ensure that a possibly invalid invariant is not witnessed.\n ///\n /// A poisoned mutex, however, does not prevent all access to the underlying\n-/// data. The `PoisonError` type has an `into_inner` method which will return\n+/// data. The [`PoisonError`] type has an [`into_inner`] method which will return\n /// the guard that would have otherwise been returned on a successful lock. This\n /// allows access to the data, despite the lock being poisoned.\n ///\n+/// [`new`]: #method.new\n+/// [`lock`]: #method.lock\n+/// [`try_lock`]: #method.try_lock\n+/// [`Result`]: ../../std/result/enum.Result.html\n+/// [`unwrap()`]: ../../std/result/enum.Result.html#method.unwrap\n+/// [`PoisonError`]: ../../std/sync/struct.PoisonError.html\n+/// [`into_inner`]: ../../std/sync/struct.PoisonError.html#method.into_inner\n+///\n /// # Examples\n ///\n /// ```\n@@ -226,7 +234,7 @@ impl<T: ?Sized> Mutex<T> {\n \n     /// Attempts to acquire this lock.\n     ///\n-    /// If the lock could not be acquired at this time, then `Err` is returned.\n+    /// If the lock could not be acquired at this time, then [`Err`] is returned.\n     /// Otherwise, an RAII guard is returned. The lock will be unlocked when the\n     /// guard is dropped.\n     ///\n@@ -238,6 +246,8 @@ impl<T: ?Sized> Mutex<T> {\n     /// this call will return failure if the mutex would otherwise be\n     /// acquired.\n     ///\n+    /// [`Err`]: ../../std/result/enum.Result.html#variant.Err\n+    ///\n     /// # Examples\n     ///\n     /// ```"}, {"sha": "86571f921f03a68e58157d8aaacf95274dde3923", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -1927,7 +1927,7 @@ pub enum ItemKind {\n     ///\n     /// E.g. `trait Foo { .. }` or `trait Foo<T> { .. }`\n     Trait(Unsafety, Generics, TyParamBounds, Vec<TraitItem>),\n-    // Default trait implementation.\n+    /// Auto trait implementation.\n     ///\n     /// E.g. `impl Trait for .. {}` or `impl<T> Trait<T> for .. {}`\n     DefaultImpl(Unsafety, TraitRef),"}, {"sha": "1dac0433f1479895adffff29ef05d94e25e59655", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db1144277abbf1ffc14d4e9a143cf87d1ef6d41/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=1db1144277abbf1ffc14d4e9a143cf87d1ef6d41", "patch": "@@ -378,7 +378,7 @@ declare_features! (\n     // #[doc(cfg(...))]\n     (active, doc_cfg, \"1.21.0\", Some(43781)),\n     // #[doc(masked)]\n-    (active, doc_masked, \"1.21.0\", None),\n+    (active, doc_masked, \"1.21.0\", Some(44027)),\n \n     // allow `#[must_use]` on functions and comparison operators (RFC 1940)\n     (active, fn_must_use, \"1.21.0\", Some(43302)),"}]}