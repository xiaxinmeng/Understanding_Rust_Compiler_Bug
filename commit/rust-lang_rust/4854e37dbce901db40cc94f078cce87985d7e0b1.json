{"sha": "4854e37dbce901db40cc94f078cce87985d7e0b1", "node_id": "C_kwDOAAsO6NoAKDQ4NTRlMzdkYmNlOTAxZGI0MGNjOTRmMDc4Y2NlODc5ODVkN2UwYjE", "commit": {"author": {"name": "philipp", "email": "descpl@yahoo.de", "date": "2022-10-15T12:59:27Z"}, "committer": {"name": "philipp", "email": "descpl@yahoo.de", "date": "2022-10-15T15:47:07Z"}, "message": "Documentation BTreeMap::append's behavior for already existing keys", "tree": {"sha": "c2eff112b0ad2b2d322146198a05279ec2b89375", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2eff112b0ad2b2d322146198a05279ec2b89375"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4854e37dbce901db40cc94f078cce87985d7e0b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4854e37dbce901db40cc94f078cce87985d7e0b1", "html_url": "https://github.com/rust-lang/rust/commit/4854e37dbce901db40cc94f078cce87985d7e0b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4854e37dbce901db40cc94f078cce87985d7e0b1/comments", "author": {"login": "phimuemue", "id": 157728, "node_id": "MDQ6VXNlcjE1NzcyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/157728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phimuemue", "html_url": "https://github.com/phimuemue", "followers_url": "https://api.github.com/users/phimuemue/followers", "following_url": "https://api.github.com/users/phimuemue/following{/other_user}", "gists_url": "https://api.github.com/users/phimuemue/gists{/gist_id}", "starred_url": "https://api.github.com/users/phimuemue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phimuemue/subscriptions", "organizations_url": "https://api.github.com/users/phimuemue/orgs", "repos_url": "https://api.github.com/users/phimuemue/repos", "events_url": "https://api.github.com/users/phimuemue/events{/privacy}", "received_events_url": "https://api.github.com/users/phimuemue/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phimuemue", "id": 157728, "node_id": "MDQ6VXNlcjE1NzcyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/157728?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phimuemue", "html_url": "https://github.com/phimuemue", "followers_url": "https://api.github.com/users/phimuemue/followers", "following_url": "https://api.github.com/users/phimuemue/following{/other_user}", "gists_url": "https://api.github.com/users/phimuemue/gists{/gist_id}", "starred_url": "https://api.github.com/users/phimuemue/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phimuemue/subscriptions", "organizations_url": "https://api.github.com/users/phimuemue/orgs", "repos_url": "https://api.github.com/users/phimuemue/repos", "events_url": "https://api.github.com/users/phimuemue/events{/privacy}", "received_events_url": "https://api.github.com/users/phimuemue/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b15e2c129e732fb3f1ff3c707d76341047a66af0", "url": "https://api.github.com/repos/rust-lang/rust/commits/b15e2c129e732fb3f1ff3c707d76341047a66af0", "html_url": "https://github.com/rust-lang/rust/commit/b15e2c129e732fb3f1ff3c707d76341047a66af0"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "c4c75e46a2a3b687574c14327e129332c54f40c0", "filename": "library/alloc/src/collections/btree/map.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4854e37dbce901db40cc94f078cce87985d7e0b1/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4854e37dbce901db40cc94f078cce87985d7e0b1/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap.rs?ref=4854e37dbce901db40cc94f078cce87985d7e0b1", "patch": "@@ -1093,6 +1093,9 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n \n     /// Moves all elements from `other` into `self`, leaving `other` empty.\n     ///\n+    /// If a key from `other` is already present in `self`, the respective\n+    /// value from `self` will be overwritten with the respective value from `other`.\n+    ///\n     /// # Examples\n     ///\n     /// ```\n@@ -1101,10 +1104,10 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     /// let mut a = BTreeMap::new();\n     /// a.insert(1, \"a\");\n     /// a.insert(2, \"b\");\n-    /// a.insert(3, \"c\");\n+    /// a.insert(3, \"c\"); // Note: Key (3) also present in b.\n     ///\n     /// let mut b = BTreeMap::new();\n-    /// b.insert(3, \"d\");\n+    /// b.insert(3, \"d\"); // Note: Key (3) also present in a.\n     /// b.insert(4, \"e\");\n     /// b.insert(5, \"f\");\n     ///\n@@ -1115,7 +1118,7 @@ impl<K, V, A: Allocator + Clone> BTreeMap<K, V, A> {\n     ///\n     /// assert_eq!(a[&1], \"a\");\n     /// assert_eq!(a[&2], \"b\");\n-    /// assert_eq!(a[&3], \"d\");\n+    /// assert_eq!(a[&3], \"d\"); // Note: \"c\" has been overwritten.\n     /// assert_eq!(a[&4], \"e\");\n     /// assert_eq!(a[&5], \"f\");\n     /// ```"}]}