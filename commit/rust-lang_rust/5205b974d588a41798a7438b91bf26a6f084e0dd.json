{"sha": "5205b974d588a41798a7438b91bf26a6f084e0dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMDViOTc0ZDU4OGE0MTc5OGE3NDM4YjkxYmYyNmE2ZjA4NGUwZGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-15T07:55:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-15T07:55:58Z"}, "message": "Auto merge of #75539 - ehuss:fix-crate-version-rustdoc-bootstrap, r=Mark-Simulacrum\n\nFix crate-version with rustdoc in bootstrap.\n\nCargo will now automatically use the `--crate-version` flag (see https://github.com/rust-lang/cargo/pull/8509). Cargo has special handling to avoid passing the flag if it is passed in via RUSTDOCFLAGS, but the `rustdoc` wrapper circumvents that check. This causes a problem because rustdoc will fail if the flag is passed in twice. Fix this by using RUSTDOCFLAGS.\n\nThis will be necessary when 1.47 is promoted to beta, but should be safe to do now.", "tree": {"sha": "7d27b3577fc58808de36e2c6efe3742ebd10dc11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d27b3577fc58808de36e2c6efe3742ebd10dc11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5205b974d588a41798a7438b91bf26a6f084e0dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5205b974d588a41798a7438b91bf26a6f084e0dd", "html_url": "https://github.com/rust-lang/rust/commit/5205b974d588a41798a7438b91bf26a6f084e0dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5205b974d588a41798a7438b91bf26a6f084e0dd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7aac25850b68ead13831e7c4605dcc7d07e4e9b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7aac25850b68ead13831e7c4605dcc7d07e4e9b", "html_url": "https://github.com/rust-lang/rust/commit/f7aac25850b68ead13831e7c4605dcc7d07e4e9b"}, {"sha": "85a9cfaa3110f204242df8536636b73318ced145", "url": "https://api.github.com/repos/rust-lang/rust/commits/85a9cfaa3110f204242df8536636b73318ced145", "html_url": "https://github.com/rust-lang/rust/commit/85a9cfaa3110f204242df8536636b73318ced145"}], "stats": {"total": 18, "additions": 7, "deletions": 11}, "files": [{"sha": "ab846adf9423b655320f33c9c0f38cb2e73ccfaa", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5205b974d588a41798a7438b91bf26a6f084e0dd/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5205b974d588a41798a7438b91bf26a6f084e0dd/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=5205b974d588a41798a7438b91bf26a6f084e0dd", "patch": "@@ -48,12 +48,6 @@ fn main() {\n         cmd.arg(arg);\n     }\n \n-    // Bootstrap's Cargo-command builder sets this variable to the current Rust version; let's pick\n-    // it up so we can make rustdoc print this into the docs\n-    if let Some(version) = env::var_os(\"RUSTDOC_CRATE_VERSION\") {\n-        cmd.arg(\"--crate-version\").arg(version);\n-    }\n-\n     // Needed to be able to run all rustdoc tests.\n     if let Some(ref x) = env::var_os(\"RUSTDOC_RESOURCE_SUFFIX\") {\n         // This \"unstable-options\" can be removed when `--resource-suffix` is stabilized"}, {"sha": "709b202052e577dcc6376539d2ede9cc2f42bc47", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5205b974d588a41798a7438b91bf26a6f084e0dd/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5205b974d588a41798a7438b91bf26a6f084e0dd/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=5205b974d588a41798a7438b91bf26a6f084e0dd", "patch": "@@ -745,7 +745,6 @@ impl<'a> Builder<'a> {\n             .env(\"RUSTDOC_LIBDIR\", self.rustc_libdir(compiler))\n             .env(\"CFG_RELEASE_CHANNEL\", &self.config.channel)\n             .env(\"RUSTDOC_REAL\", self.rustdoc(compiler))\n-            .env(\"RUSTDOC_CRATE_VERSION\", self.rust_version())\n             .env(\"RUSTC_BOOTSTRAP\", \"1\")\n             .arg(\"-Winvalid_codeblock_attributes\");\n         if self.config.deny_warnings {\n@@ -1271,7 +1270,11 @@ impl<'a> Builder<'a> {\n         }\n \n         // For `cargo doc` invocations, make rustdoc print the Rust version into the docs\n-        cargo.env(\"RUSTDOC_CRATE_VERSION\", self.rust_version());\n+        // This replaces spaces with newlines because RUSTDOCFLAGS does not\n+        // support arguments with regular spaces. Hopefully someday Cargo will\n+        // have space support.\n+        let rust_version = self.rust_version().replace(' ', \"\\n\");\n+        rustdocflags.arg(\"--crate-version\").arg(&rust_version);\n \n         // Environment variables *required* throughout the build\n         //\n@@ -1448,14 +1451,14 @@ impl Rustflags {\n \n     fn env(&mut self, env: &str) {\n         if let Ok(s) = env::var(env) {\n-            for part in s.split_whitespace() {\n+            for part in s.split(' ') {\n                 self.arg(part);\n             }\n         }\n     }\n \n     fn arg(&mut self, arg: &str) -> &mut Self {\n-        assert_eq!(arg.split_whitespace().count(), 1);\n+        assert_eq!(arg.split(' ').count(), 1);\n         if !self.0.is_empty() {\n             self.0.push_str(\" \");\n         }"}, {"sha": "ac833a55d4c53bbf2224fa0adf7fffba6b76de73", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5205b974d588a41798a7438b91bf26a6f084e0dd/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5205b974d588a41798a7438b91bf26a6f084e0dd/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=5205b974d588a41798a7438b91bf26a6f084e0dd", "patch": "@@ -599,7 +599,6 @@ impl Step for RustdocTheme {\n             .env(\"RUSTDOC_LIBDIR\", builder.sysroot_libdir(self.compiler, self.compiler.host))\n             .env(\"CFG_RELEASE_CHANNEL\", &builder.config.channel)\n             .env(\"RUSTDOC_REAL\", builder.rustdoc(self.compiler))\n-            .env(\"RUSTDOC_CRATE_VERSION\", builder.rust_version())\n             .env(\"RUSTC_BOOTSTRAP\", \"1\");\n         if let Some(linker) = builder.linker(self.compiler.host, true) {\n             cmd.env(\"RUSTC_TARGET_LINKER\", linker);"}]}