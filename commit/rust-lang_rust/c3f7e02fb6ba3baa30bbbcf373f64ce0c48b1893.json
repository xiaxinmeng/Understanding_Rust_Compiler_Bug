{"sha": "c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZjdlMDJmYjZiYTNiYWEzMGJiYmNmMzczZjY0Y2UwYzQ4YjE4OTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T13:27:07Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-06-27T13:27:07Z"}, "message": "rename to `shrink_to_tcx_lifetime`", "tree": {"sha": "eeace46f4d820bd07e1bb25930cadb511ea2c5a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eeace46f4d820bd07e1bb25930cadb511ea2c5a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "html_url": "https://github.com/rust-lang/rust/commit/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2f7757bc5682935555850375af66285d4bcd22f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2f7757bc5682935555850375af66285d4bcd22f", "html_url": "https://github.com/rust-lang/rust/commit/c2f7757bc5682935555850375af66285d4bcd22f"}], "stats": {"total": 26, "additions": 13, "deletions": 13}, "files": [{"sha": "7d05d0a2656f3552aaa52deb1a1fcae88e02377e", "filename": "src/librustc/traits/query/type_op/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Feq.rs?ref=c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "patch": "@@ -48,7 +48,7 @@ impl<'gcx: 'tcx, 'tcx> super::QueryTypeOp<'gcx, 'tcx> for Eq<'tcx> {\n         tcx.type_op_eq(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, ()>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, ()>> {\n         v"}, {"sha": "d89d31726cb531f60b82be974c5497b0f37a15fc", "filename": "src/librustc/traits/query/type_op/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fmod.rs?ref=c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "patch": "@@ -72,7 +72,7 @@ pub trait QueryTypeOp<'gcx: 'tcx, 'tcx>: fmt::Debug + Sized {\n     /// `QueryResult` is. This operation would (maybe) be nicer with\n     /// something like HKTs or GATs, since then we could make\n     /// `QueryResult` parametric and `'gcx` and `'tcx` etc.\n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         lifted_query_result: &'a CanonicalizedQueryResult<'gcx, Self::QueryResult>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self::QueryResult>>;\n \n@@ -91,7 +91,7 @@ pub trait QueryTypeOp<'gcx: 'tcx, 'tcx>: fmt::Debug + Sized {\n                 let (canonical_self, canonical_var_values) =\n                     infcx.canonicalize_hr_query_hack(&query_key);\n                 let canonical_result = Self::perform_query(infcx.tcx, canonical_self)?;\n-                let canonical_result = Self::cast_to_tcx_lifetime(&canonical_result);\n+                let canonical_result = Self::shrink_to_tcx_lifetime(&canonical_result);\n \n                 let param_env = Self::param_env(&query_key);\n "}, {"sha": "e4d27bccba3f912c2576efb5b932d8ea77a7e349", "filename": "src/librustc/traits/query/type_op/normalize.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fnormalize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fnormalize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fnormalize.rs?ref=c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "patch": "@@ -55,10 +55,10 @@ where\n         T::type_op_method(tcx, canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, T>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, T>> {\n-        T::cast_to_tcx_lifetime(v)\n+        T::shrink_to_tcx_lifetime(v)\n     }\n }\n \n@@ -70,7 +70,7 @@ pub trait Normalizable<'gcx, 'tcx>: fmt::Debug + TypeFoldable<'tcx> + Lift<'gcx>\n \n     /// Convert from the `'gcx` (lifted) form of `Self` into the `tcx`\n     /// form of `Self`.\n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, Self>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self>>;\n }\n@@ -86,7 +86,7 @@ where\n         tcx.type_op_normalize_ty(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, Self>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self>> {\n         v\n@@ -104,7 +104,7 @@ where\n         tcx.type_op_normalize_predicate(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, Self>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self>> {\n         v\n@@ -122,7 +122,7 @@ where\n         tcx.type_op_normalize_poly_fn_sig(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, Self>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self>> {\n         v\n@@ -140,7 +140,7 @@ where\n         tcx.type_op_normalize_fn_sig(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, Self>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self>> {\n         v"}, {"sha": "cfaed689126efeed6e673f452b0587ab2f3f510e", "filename": "src/librustc/traits/query/type_op/outlives.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Foutlives.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Foutlives.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Foutlives.rs?ref=c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "patch": "@@ -64,7 +64,7 @@ where\n         tcx.dropck_outlives(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         lifted_query_result: &'a CanonicalizedQueryResult<'gcx, Self::QueryResult>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, Self::QueryResult>> {\n         lifted_query_result"}, {"sha": "f54710c4805a1c8638d949b6bd8219a6fd82f545", "filename": "src/librustc/traits/query/type_op/prove_predicate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fprove_predicate.rs?ref=c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "patch": "@@ -46,7 +46,7 @@ impl<'gcx: 'tcx, 'tcx> super::QueryTypeOp<'gcx, 'tcx> for ProvePredicate<'tcx> {\n         tcx.type_op_prove_predicate(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, ()>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, ()>> {\n         v"}, {"sha": "e1589e1a9b68f2f1fd760ec44602bdfbb3f3e737", "filename": "src/librustc/traits/query/type_op/subtype.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fsubtype.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fsubtype.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fsubtype.rs?ref=c3f7e02fb6ba3baa30bbbcf373f64ce0c48b1893", "patch": "@@ -52,7 +52,7 @@ impl<'gcx: 'tcx, 'tcx> super::QueryTypeOp<'gcx, 'tcx> for Subtype<'tcx> {\n         tcx.type_op_subtype(canonicalized)\n     }\n \n-    fn cast_to_tcx_lifetime(\n+    fn shrink_to_tcx_lifetime(\n         v: &'a CanonicalizedQueryResult<'gcx, ()>,\n     ) -> &'a Canonical<'tcx, QueryResult<'tcx, ()>> {\n         v"}]}