{"sha": "e07e42433f9f8e2845d4941c59dc64918d467228", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwN2U0MjQzM2Y5ZjhlMjg0NWQ0OTQxYzU5ZGM2NDkxOGQ0NjcyMjg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-31T12:26:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-31T12:49:33Z"}, "message": "replace DUMMY_SP by proper span", "tree": {"sha": "6ed1b4086f1e6df67c64f140be020d9c66743eec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ed1b4086f1e6df67c64f140be020d9c66743eec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e07e42433f9f8e2845d4941c59dc64918d467228", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e07e42433f9f8e2845d4941c59dc64918d467228", "html_url": "https://github.com/rust-lang/rust/commit/e07e42433f9f8e2845d4941c59dc64918d467228", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e07e42433f9f8e2845d4941c59dc64918d467228/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57078384809fffafac4e90e18cc37a91a1dd5200", "url": "https://api.github.com/repos/rust-lang/rust/commits/57078384809fffafac4e90e18cc37a91a1dd5200", "html_url": "https://github.com/rust-lang/rust/commit/57078384809fffafac4e90e18cc37a91a1dd5200"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "7a1393468cec67da859b5c67a8b1ae9111b76274", "filename": "src/librustc_mir/transform/validate.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e07e42433f9f8e2845d4941c59dc64918d467228/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e07e42433f9f8e2845d4941c59dc64918d467228/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fvalidate.rs?ref=e07e42433f9f8e2845d4941c59dc64918d467228", "patch": "@@ -54,12 +54,10 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n         // `Operand::Copy` is only supposed to be used with `Copy` types.\n         if let Operand::Copy(place) = operand {\n             let ty = place.ty(&self.body.local_decls, self.tcx).ty;\n+            let span = self.body.source_info(location).span;\n \n-            if !ty.is_copy_modulo_regions(self.tcx, self.param_env, DUMMY_SP) {\n-                self.fail(\n-                    DUMMY_SP,\n-                    format!(\"`Operand::Copy` with non-`Copy` type {} at {:?}\", ty, location),\n-                );\n+            if !ty.is_copy_modulo_regions(self.tcx, self.param_env, span) {\n+                self.fail(span, format!(\"`Operand::Copy` with non-`Copy` type {}\", ty));\n             }\n         }\n "}]}