{"sha": "1ae1a19ba6156479969f493c8e05871539e69b52", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZTFhMTliYTYxNTY0Nzk5NjlmNDkzYzhlMDU4NzE1MzllNjliNTI=", "commit": {"author": {"name": "Adam Ransom", "email": "v0id.gmr@gmail.com", "date": "2017-03-21T12:35:57Z"}, "committer": {"name": "Adam Ransom", "email": "v0id.gmr@gmail.com", "date": "2017-03-22T10:27:35Z"}, "message": "Refactor checking if a `Lifetime` is static\n\nSimply move the test for `keywords::StaticLifetime` into the\n`Lifetime` impl, to match how elision is checked.", "tree": {"sha": "cf5bde48c7ef89fee39f74034f34e0a289ed8b7f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf5bde48c7ef89fee39f74034f34e0a289ed8b7f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ae1a19ba6156479969f493c8e05871539e69b52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ae1a19ba6156479969f493c8e05871539e69b52", "html_url": "https://github.com/rust-lang/rust/commit/1ae1a19ba6156479969f493c8e05871539e69b52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ae1a19ba6156479969f493c8e05871539e69b52/comments", "author": {"login": "adamransom", "id": 1046872, "node_id": "MDQ6VXNlcjEwNDY4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1046872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamransom", "html_url": "https://github.com/adamransom", "followers_url": "https://api.github.com/users/adamransom/followers", "following_url": "https://api.github.com/users/adamransom/following{/other_user}", "gists_url": "https://api.github.com/users/adamransom/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamransom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamransom/subscriptions", "organizations_url": "https://api.github.com/users/adamransom/orgs", "repos_url": "https://api.github.com/users/adamransom/repos", "events_url": "https://api.github.com/users/adamransom/events{/privacy}", "received_events_url": "https://api.github.com/users/adamransom/received_events", "type": "User", "site_admin": false}, "committer": {"login": "adamransom", "id": 1046872, "node_id": "MDQ6VXNlcjEwNDY4NzI=", "avatar_url": "https://avatars.githubusercontent.com/u/1046872?v=4", "gravatar_id": "", "url": "https://api.github.com/users/adamransom", "html_url": "https://github.com/adamransom", "followers_url": "https://api.github.com/users/adamransom/followers", "following_url": "https://api.github.com/users/adamransom/following{/other_user}", "gists_url": "https://api.github.com/users/adamransom/gists{/gist_id}", "starred_url": "https://api.github.com/users/adamransom/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/adamransom/subscriptions", "organizations_url": "https://api.github.com/users/adamransom/orgs", "repos_url": "https://api.github.com/users/adamransom/repos", "events_url": "https://api.github.com/users/adamransom/events{/privacy}", "received_events_url": "https://api.github.com/users/adamransom/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c4f2c64c6759a82f143e23964a46a65c67509c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c4f2c64c6759a82f143e23964a46a65c67509c9", "html_url": "https://github.com/rust-lang/rust/commit/8c4f2c64c6759a82f143e23964a46a65c67509c9"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "8239fd7d13c117fe6aab9c8961c22da6f2883ab4", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ae1a19ba6156479969f493c8e05871539e69b52/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae1a19ba6156479969f493c8e05871539e69b52/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=1ae1a19ba6156479969f493c8e05871539e69b52", "patch": "@@ -100,6 +100,10 @@ impl Lifetime {\n     pub fn is_elided(&self) -> bool {\n         self.name == keywords::Invalid.name()\n     }\n+\n+    pub fn is_static(&self) -> bool {\n+        self.name == keywords::StaticLifetime.name()\n+    }\n }\n \n /// A lifetime definition, eg `'a: 'b+'c+'d`"}, {"sha": "10ee760a6a615cd1cf97af844225a5645d2400dc", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1ae1a19ba6156479969f493c8e05871539e69b52/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ae1a19ba6156479969f493c8e05871539e69b52/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=1ae1a19ba6156479969f493c8e05871539e69b52", "patch": "@@ -434,7 +434,7 @@ impl<'a, 'tcx> Visitor<'tcx> for LifetimeContext<'a, 'tcx> {\n             self.resolve_elided_lifetimes(slice::ref_slice(lifetime_ref));\n             return;\n         }\n-        if lifetime_ref.name == keywords::StaticLifetime.name() {\n+        if lifetime_ref.is_static() {\n             self.insert_lifetime(lifetime_ref, Region::Static);\n             return;\n         }\n@@ -1434,7 +1434,7 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n             let lifetime_i = &lifetimes[i];\n \n             for lifetime in lifetimes {\n-                if lifetime.lifetime.name == keywords::StaticLifetime.name() {\n+                if lifetime.lifetime.is_static() {\n                     let lifetime = lifetime.lifetime;\n                     let mut err = struct_span_err!(self.sess, lifetime.span, E0262,\n                                   \"invalid lifetime parameter name: `{}`\", lifetime.name);"}]}