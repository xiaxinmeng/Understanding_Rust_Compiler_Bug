{"sha": "3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiY2Y2OTczYjY1ZWNkMWIwOWZmNWIwMGRmMGRkNDFmNmQ1OTM4ZGM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-05-29T00:33:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-29T00:33:11Z"}, "message": "Rollup merge of #72466 - lzutao:stabilize_str-strip, r=dtolnay\n\nStabilize str_strip feature\n\nThis PR stabilizes these APIs:\n\n```rust\nimpl str {\n    /// Returns a string slice with the prefix removed.\n    ///\n    /// If the string starts with the pattern `prefix`, `Some` is returned with the substring where\n    /// the prefix is removed. Unlike `trim_start_matches`, this method removes the prefix exactly\n    /// once.\n    pub fn strip_prefix<'a, P: Pattern<'a>>(&'a self, prefix: P) -> Option<&'a str>;\n\n    /// Returns a string slice with the suffix removed.\n    ///\n    /// If the string ends with the pattern `suffix`, `Some` is returned with the substring where\n    /// the suffix is removed. Unlike `trim_end_matches`, this method removes the suffix exactly\n    /// once.\n    pub fn strip_suffix<'a, P>(&'a self, suffix: P) -> Option<&'a str>\n    where\n        P: Pattern<'a>,\n        <P as Pattern<'a>>::Searcher: ReverseSearcher<'a>;\n}\n```\n\nCloses  #67302", "tree": {"sha": "c5cc4b7f87f386b684551c27577a28368372b48c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5cc4b7f87f386b684551c27577a28368372b48c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0FhICRBK7hj4Ov3rIwAAdHIIAGmnHZe9h7JGXueuat0ErO49\nT992ctAyrXmSvbyIBElEdlAvvC6Xcw+y+myXAurXxSEq92LUiC9uzFQwo9W0RDdb\nOGVr5aHxk/xp13jU5Dxw2FIbVTGzsFPZhvU0TLtvlidO0JqQFtQvZQeaNHgpD1vK\nTtPzft3nwhOlc4vvZb3apTq76dB+t9+i0hGDbaJ1cTbR2tmU5lqgvfW1ixfG3gj1\nlLftkLKHHeBJ0CPjoCcLqUjS1a6VYh86CuGFfoD3X2jyjQF1nrERrL3iND0U+Jyx\nJAKrzzNQMfHYbndOpFDROdat4tVZHWpNpxdiTq+5xLiX+GlAuwK4UwrBEKSHWXY=\n=pWEQ\n-----END PGP SIGNATURE-----\n", "payload": "tree c5cc4b7f87f386b684551c27577a28368372b48c\nparent b18c55b1794ec4e456e3d64abf91f353ca27787e\nparent 2df69baa55fc762b43df9bbae2a867c3e3200a13\nauthor Dylan DPC <dylan.dpc@gmail.com> 1590712391 +0200\ncommitter GitHub <noreply@github.com> 1590712391 +0200\n\nRollup merge of #72466 - lzutao:stabilize_str-strip, r=dtolnay\n\nStabilize str_strip feature\n\nThis PR stabilizes these APIs:\n\n```rust\nimpl str {\n    /// Returns a string slice with the prefix removed.\n    ///\n    /// If the string starts with the pattern `prefix`, `Some` is returned with the substring where\n    /// the prefix is removed. Unlike `trim_start_matches`, this method removes the prefix exactly\n    /// once.\n    pub fn strip_prefix<'a, P: Pattern<'a>>(&'a self, prefix: P) -> Option<&'a str>;\n\n    /// Returns a string slice with the suffix removed.\n    ///\n    /// If the string ends with the pattern `suffix`, `Some` is returned with the substring where\n    /// the suffix is removed. Unlike `trim_end_matches`, this method removes the suffix exactly\n    /// once.\n    pub fn strip_suffix<'a, P>(&'a self, suffix: P) -> Option<&'a str>\n    where\n        P: Pattern<'a>,\n        <P as Pattern<'a>>::Searcher: ReverseSearcher<'a>;\n}\n```\n\nCloses  #67302\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "html_url": "https://github.com/rust-lang/rust/commit/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b18c55b1794ec4e456e3d64abf91f353ca27787e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b18c55b1794ec4e456e3d64abf91f353ca27787e", "html_url": "https://github.com/rust-lang/rust/commit/b18c55b1794ec4e456e3d64abf91f353ca27787e"}, {"sha": "2df69baa55fc762b43df9bbae2a867c3e3200a13", "url": "https://api.github.com/repos/rust-lang/rust/commits/2df69baa55fc762b43df9bbae2a867c3e3200a13", "html_url": "https://github.com/rust-lang/rust/commit/2df69baa55fc762b43df9bbae2a867c3e3200a13"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "b514e0f6d9cff61cf653435b6f556175d44a602c", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "patch": "@@ -4052,15 +4052,13 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(str_strip)]\n-    ///\n     /// assert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\n     /// assert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\n     /// assert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n     /// ```\n     #[must_use = \"this returns the remaining substring as a new slice, \\\n                   without modifying the original\"]\n-    #[unstable(feature = \"str_strip\", reason = \"newly added\", issue = \"67302\")]\n+    #[stable(feature = \"str_strip\", since = \"1.45.0\")]\n     pub fn strip_prefix<'a, P: Pattern<'a>>(&'a self, prefix: P) -> Option<&'a str> {\n         prefix.strip_prefix_of(self)\n     }\n@@ -4082,14 +4080,13 @@ impl str {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(str_strip)]\n     /// assert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\n     /// assert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\n     /// assert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n     /// ```\n     #[must_use = \"this returns the remaining substring as a new slice, \\\n                   without modifying the original\"]\n-    #[unstable(feature = \"str_strip\", reason = \"newly added\", issue = \"67302\")]\n+    #[stable(feature = \"str_strip\", since = \"1.45.0\")]\n     pub fn strip_suffix<'a, P>(&'a self, suffix: P) -> Option<&'a str>\n     where\n         P: Pattern<'a>,"}, {"sha": "044239b047a4ef665a0c015a9108301399b69fc9", "filename": "src/librustc_trait_selection/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/src%2Flibrustc_trait_selection%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/src%2Flibrustc_trait_selection%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Flib.rs?ref=3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "patch": "@@ -16,7 +16,6 @@\n #![feature(in_band_lifetimes)]\n #![feature(crate_visibility_modifier)]\n #![feature(or_patterns)]\n-#![feature(str_strip)]\n #![feature(option_zip)]\n #![recursion_limit = \"512\"] // For rustdoc\n "}, {"sha": "3e1f423865b1d671ab54203f674c819bba9dc399", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=3bcf6973b65ecd1b09ff5b00df0dd41f6d5938dc", "patch": "@@ -1,6 +1,5 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![feature(rustc_private)]\n-#![feature(str_strip)]\n \n // FIXME: switch to something more ergonomic here, once available.\n // (Currently there is no way to opt into sysroot crates without `extern crate`.)"}]}