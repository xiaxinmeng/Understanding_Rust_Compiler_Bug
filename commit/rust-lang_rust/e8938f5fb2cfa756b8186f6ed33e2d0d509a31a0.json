{"sha": "e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4OTM4ZjVmYjJjZmE3NTZiODE4NmY2ZWQzM2UyZDBkNTA5YTMxYTA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-18T19:47:44Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-03-18T19:49:48Z"}, "message": "rustc: Unify over alt expressions", "tree": {"sha": "d88b3f565612451d002dc19917b2c05582331e53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d88b3f565612451d002dc19917b2c05582331e53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0", "html_url": "https://github.com/rust-lang/rust/commit/e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dee1ac161a22a4bc1e49c5dac3c7bbba1ff97f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dee1ac161a22a4bc1e49c5dac3c7bbba1ff97f0", "html_url": "https://github.com/rust-lang/rust/commit/6dee1ac161a22a4bc1e49c5dac3c7bbba1ff97f0"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "52dc2eede14100d48c925625413612a3468659a9", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=e8938f5fb2cfa756b8186f6ed33e2d0d509a31a0", "patch": "@@ -1401,6 +1401,20 @@ fn demand_expr_full(&@fn_ctxt fcx, @ty.t expected, @ast.expr e,\n             e_1 = ast.expr_chan(es_1, ast.ann_type(t, none[vec[@ty.t]]));\n         }\n \n+        case (ast.expr_alt(?discrim, ?arms_0, ?ann)) {\n+            auto t = expected;\n+            let vec[ast.arm] arms_1 = vec();\n+            for (ast.arm arm_0 in arms_0) {\n+                auto block_1 = demand_block(fcx, expected, arm_0.block);\n+                t = demand(fcx, e.span, t, block_ty(block_1));\n+                auto arm_1 = rec(pat=arm_0.pat, block=block_1,\n+                                 index=arm_0.index);\n+                arms_1 += vec(arm_1);\n+            }\n+            e_1 = ast.expr_alt(discrim, arms_1,\n+                               ast.ann_type(t, none[vec[@ty.t]]));\n+        }\n+\n         case (_) {\n             fcx.ccx.sess.span_unimpl(e.span,\n                 \"type unification for expression variant\");"}]}