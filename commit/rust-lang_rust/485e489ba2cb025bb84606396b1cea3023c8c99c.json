{"sha": "485e489ba2cb025bb84606396b1cea3023c8c99c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NWU0ODliYTJjYjAyNWJiODQ2MDYzOTZiMWNlYTMwMjNjOGM5OWM=", "commit": {"author": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-01-27T00:03:20Z"}, "committer": {"name": "Kevin Atkinson", "email": "kevina@cs.utah.edu", "date": "2012-02-04T03:28:11Z"}, "message": "Implement basic quasi-quoter.  No anti-quotes yet.", "tree": {"sha": "b1aac45bf7543db123777c4605f74cc060fbd270", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1aac45bf7543db123777c4605f74cc060fbd270"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/485e489ba2cb025bb84606396b1cea3023c8c99c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/485e489ba2cb025bb84606396b1cea3023c8c99c", "html_url": "https://github.com/rust-lang/rust/commit/485e489ba2cb025bb84606396b1cea3023c8c99c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/485e489ba2cb025bb84606396b1cea3023c8c99c/comments", "author": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kevina", "id": 1271492, "node_id": "MDQ6VXNlcjEyNzE0OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1271492?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kevina", "html_url": "https://github.com/kevina", "followers_url": "https://api.github.com/users/kevina/followers", "following_url": "https://api.github.com/users/kevina/following{/other_user}", "gists_url": "https://api.github.com/users/kevina/gists{/gist_id}", "starred_url": "https://api.github.com/users/kevina/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kevina/subscriptions", "organizations_url": "https://api.github.com/users/kevina/orgs", "repos_url": "https://api.github.com/users/kevina/repos", "events_url": "https://api.github.com/users/kevina/events{/privacy}", "received_events_url": "https://api.github.com/users/kevina/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98450d0dade3c9a1b91a3384426cc4e824b82052", "url": "https://api.github.com/repos/rust-lang/rust/commits/98450d0dade3c9a1b91a3384426cc4e824b82052", "html_url": "https://github.com/rust-lang/rust/commit/98450d0dade3c9a1b91a3384426cc4e824b82052"}], "stats": {"total": 47, "additions": 40, "deletions": 7}, "files": [{"sha": "bfb26382a84d0b4cca5dd6b7243356b031976ba5", "filename": "src/comp/rustc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/485e489ba2cb025bb84606396b1cea3023c8c99c/src%2Fcomp%2Frustc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/485e489ba2cb025bb84606396b1cea3023c8c99c/src%2Fcomp%2Frustc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Frustc.rc?ref=485e489ba2cb025bb84606396b1cea3023c8c99c", "patch": "@@ -74,6 +74,7 @@ mod syntax {\n     mod ext {\n         mod base;\n         mod expand;\n+        mod qquote;\n         mod build;\n \n         mod fmt;"}, {"sha": "5c81da6f492f19c009bb36a205dd88ddcd323006", "filename": "src/comp/syntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/485e489ba2cb025bb84606396b1cea3023c8c99c/src%2Fcomp%2Fsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/485e489ba2cb025bb84606396b1cea3023c8c99c/src%2Fcomp%2Fsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fexpand.rs?ref=485e489ba2cb025bb84606396b1cea3023c8c99c", "patch": "@@ -8,6 +8,7 @@ import vec;\n import syntax::ast::{crate, expr_, expr_mac, mac_invoc, mac_qq};\n import syntax::fold::*;\n import syntax::ext::base::*;\n+import syntax::ext::qquote::expand_qquote;\n import syntax::parse::parser::parse_expr_from_source_str;\n \n import codemap::span;\n@@ -53,13 +54,6 @@ fn expand_expr(exts: hashmap<str, syntax_extension>, cx: ext_ctxt,\n         };\n }\n \n-fn expand_qquote(cx: ext_ctxt, sp: span, e: @ast::expr) -> ast::expr_ {\n-    import syntax::ext::build::*;\n-    let str = codemap::span_to_snippet(sp, cx.session().parse_sess.cm);\n-    let expr = mk_str(cx, e.span, str);\n-    ret expr.node;\n-}\n-\n // FIXME: this is a terrible kludge to inject some macros into the default\n // compilation environment. When the macro-definition system is substantially\n // more mature, these should move from here, into a compiled part of libcore"}, {"sha": "e1912ce0087dd5bd3dd451deee7ff0e8d3577753", "filename": "src/comp/syntax/ext/qquote.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/485e489ba2cb025bb84606396b1cea3023c8c99c/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/485e489ba2cb025bb84606396b1cea3023c8c99c/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Fqquote.rs?ref=485e489ba2cb025bb84606396b1cea3023c8c99c", "patch": "@@ -0,0 +1,38 @@\n+import driver::session;\n+\n+import option::{none, some};\n+\n+import syntax::ast::{crate, expr_, expr_mac, mac_invoc, mac_qq};\n+import syntax::fold::*;\n+import syntax::ext::base::*;\n+import syntax::ext::build::*;\n+import syntax::parse::parser::parse_expr_from_source_str;\n+\n+import codemap::span;\n+\n+fn expand_qquote(cx: ext_ctxt, sp: span, _e: @ast::expr) -> ast::expr_ {\n+    let str = codemap::span_to_snippet(sp, cx.session().parse_sess.cm);\n+    let session_call = bind mk_call_(cx,sp,\n+                                     mk_access(cx,sp,[\"ext_cx\"], \"session\"),\n+                                     []);\n+    let call = mk_call(cx,sp,\n+                       [\"syntax\", \"parse\", \"parser\",\n+                        \"parse_expr_from_source_str\"],\n+                       [mk_str(cx,sp, \"<anon>\"),\n+                        mk_unary(cx,sp, ast::box(ast::imm),\n+                                 mk_str(cx,sp, str)),\n+                        mk_access_(cx,sp,\n+                                   mk_access_(cx,sp, session_call(), \"opts\"),\n+                                   \"cfg\"),\n+                        mk_access_(cx,sp, session_call(), \"parse_sess\")]\n+                      );\n+    ret call.node;\n+}\n+\n+// Local Variables:\n+// mode: rust\n+// fill-column: 78;\n+// indent-tabs-mode: nil\n+// c-basic-offset: 4\n+// buffer-file-coding-system: utf-8-unix\n+// End:"}]}