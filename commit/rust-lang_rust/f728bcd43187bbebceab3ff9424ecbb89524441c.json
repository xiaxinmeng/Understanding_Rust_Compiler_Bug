{"sha": "f728bcd43187bbebceab3ff9424ecbb89524441c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MjhiY2Q0MzE4N2JiZWJjZWFiM2ZmOTQyNGVjYmI4OTUyNDQ0MWM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-19T07:49:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-19T07:49:48Z"}, "message": "Auto merge of #5066 - JohnTitor:split-up-1447, r=llogiq\n\nSplit up `if_same_then_else` ui test\n\nPart of #2038\n\nchangelog: none", "tree": {"sha": "bfd0a37d897feaa31d54dfc308f70c917bbd5988", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfd0a37d897feaa31d54dfc308f70c917bbd5988"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f728bcd43187bbebceab3ff9424ecbb89524441c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f728bcd43187bbebceab3ff9424ecbb89524441c", "html_url": "https://github.com/rust-lang/rust/commit/f728bcd43187bbebceab3ff9424ecbb89524441c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f728bcd43187bbebceab3ff9424ecbb89524441c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0a7003ecf0e80b3237068df0210767120aca4d25", "url": "https://api.github.com/repos/rust-lang/rust/commits/0a7003ecf0e80b3237068df0210767120aca4d25", "html_url": "https://github.com/rust-lang/rust/commit/0a7003ecf0e80b3237068df0210767120aca4d25"}, {"sha": "dfab83fe11bf933ec26a45349780ef08c016d43a", "url": "https://api.github.com/repos/rust-lang/rust/commits/dfab83fe11bf933ec26a45349780ef08c016d43a", "html_url": "https://github.com/rust-lang/rust/commit/dfab83fe11bf933ec26a45349780ef08c016d43a"}], "stats": {"total": 559, "additions": 279, "deletions": 280}, "files": [{"sha": "67b4c311085eb5f1fd90c4e6ddcec05ebc830868", "filename": "tests/ui/if_same_then_else.rs", "status": "modified", "additions": 3, "deletions": 134, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.rs?ref=f728bcd43187bbebceab3ff9424ecbb89524441c", "patch": "@@ -1,14 +1,11 @@\n #![warn(clippy::if_same_then_else)]\n #![allow(\n     clippy::blacklisted_name,\n-    clippy::collapsible_if,\n-    clippy::cognitive_complexity,\n     clippy::eq_op,\n-    clippy::needless_return,\n     clippy::never_loop,\n     clippy::no_effect,\n-    clippy::zero_divided_by_zero,\n-    clippy::unused_unit\n+    clippy::unused_unit,\n+    clippy::zero_divided_by_zero\n )]\n \n struct Foo {\n@@ -19,7 +16,7 @@ fn foo() -> bool {\n     unimplemented!()\n }\n \n-fn if_same_then_else() -> Result<&'static str, ()> {\n+fn if_same_then_else() {\n     if true {\n         Foo { bar: 42 };\n         0..10;\n@@ -94,27 +91,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n         42\n     };\n \n-    if true {\n-        for _ in &[42] {\n-            let foo: &Option<_> = &Some::<u8>(42);\n-            if true {\n-                break;\n-            } else {\n-                continue;\n-            }\n-        }\n-    } else {\n-        //~ ERROR same body as `if` block\n-        for _ in &[42] {\n-            let foo: &Option<_> = &Some::<u8>(42);\n-            if true {\n-                break;\n-            } else {\n-                continue;\n-            }\n-        }\n-    }\n-\n     if true {\n         let bar = if true { 42 } else { 43 };\n \n@@ -149,113 +125,6 @@ fn if_same_then_else() -> Result<&'static str, ()> {\n             _ => 4,\n         };\n     }\n-\n-    if true {\n-        if let Some(a) = Some(42) {}\n-    } else {\n-        //~ ERROR same body as `if` block\n-        if let Some(a) = Some(42) {}\n-    }\n-\n-    if true {\n-        if let (1, .., 3) = (1, 2, 3) {}\n-    } else {\n-        //~ ERROR same body as `if` block\n-        if let (1, .., 3) = (1, 2, 3) {}\n-    }\n-\n-    if true {\n-        if let (1, .., 3) = (1, 2, 3) {}\n-    } else {\n-        if let (.., 3) = (1, 2, 3) {}\n-    }\n-\n-    if true {\n-        if let (1, .., 3) = (1, 2, 3) {}\n-    } else {\n-        if let (.., 4) = (1, 2, 3) {}\n-    }\n-\n-    if true {\n-        if let (1, .., 3) = (1, 2, 3) {}\n-    } else {\n-        if let (.., 1, 3) = (1, 2, 3) {}\n-    }\n-\n-    if true {\n-        if let Some(42) = None {}\n-    } else {\n-        if let Option::Some(42) = None {}\n-    }\n-\n-    if true {\n-        if let Some(42) = None::<u8> {}\n-    } else {\n-        if let Some(42) = None {}\n-    }\n-\n-    if true {\n-        if let Some(42) = None::<u8> {}\n-    } else {\n-        if let Some(42) = None::<u32> {}\n-    }\n-\n-    if true {\n-        if let Some(a) = Some(42) {}\n-    } else {\n-        if let Some(a) = Some(43) {}\n-    }\n-\n-    // Same NaNs\n-    let _ = if true {\n-        std::f32::NAN\n-    } else {\n-        //~ ERROR same body as `if` block\n-        std::f32::NAN\n-    };\n-\n-    if true {\n-        Ok(\"foo\")?;\n-    } else {\n-        //~ ERROR same body as `if` block\n-        Ok(\"foo\")?;\n-    }\n-\n-    if true {\n-        let foo = \"\";\n-        return Ok(&foo[0..]);\n-    } else if false {\n-        let foo = \"bar\";\n-        return Ok(&foo[0..]);\n-    } else {\n-        let foo = \"\";\n-        return Ok(&foo[0..]);\n-    }\n-\n-    if true {\n-        let foo = \"\";\n-        return Ok(&foo[0..]);\n-    } else if false {\n-        let foo = \"bar\";\n-        return Ok(&foo[0..]);\n-    } else if true {\n-        let foo = \"\";\n-        return Ok(&foo[0..]);\n-    } else {\n-        let foo = \"\";\n-        return Ok(&foo[0..]);\n-    }\n-\n-    // False positive `if_same_then_else`: `let (x, y)` vs. `let (y, x)`; see issue #3559.\n-    if true {\n-        let foo = \"\";\n-        let (x, y) = (1, 2);\n-        return Ok(&foo[x..y]);\n-    } else {\n-        let foo = \"\";\n-        let (y, x) = (1, 2);\n-        return Ok(&foo[x..y]);\n-    }\n }\n \n // Issue #2423. This was causing an ICE."}, {"sha": "d9fdf06fa8b732b669f5d3c931b062f4196fcf4b", "filename": "tests/ui/if_same_then_else.stderr", "status": "modified", "additions": 11, "deletions": 146, "changes": 157, "blob_url": "https://github.com/rust-lang/rust/blob/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.stderr?ref=f728bcd43187bbebceab3ff9424ecbb89524441c", "patch": "@@ -1,5 +1,5 @@\n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:31:12\n+  --> $DIR/if_same_then_else.rs:28:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -13,7 +13,7 @@ LL | |     }\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/if_same_then_else.rs:23:13\n+  --> $DIR/if_same_then_else.rs:20:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -26,7 +26,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:69:12\n+  --> $DIR/if_same_then_else.rs:66:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -36,7 +36,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:67:21\n+  --> $DIR/if_same_then_else.rs:64:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -45,7 +45,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:76:12\n+  --> $DIR/if_same_then_else.rs:73:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -55,7 +55,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:74:21\n+  --> $DIR/if_same_then_else.rs:71:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -64,7 +64,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:92:12\n+  --> $DIR/if_same_then_else.rs:89:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -74,7 +74,7 @@ LL | |     };\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:90:21\n+  --> $DIR/if_same_then_else.rs:87:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -83,33 +83,7 @@ LL | |     } else {\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:106:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         for _ in &[42] {\n-LL | |             let foo: &Option<_> = &Some::<u8>(42);\n-...  |\n-LL | |         }\n-LL | |     }\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:97:13\n-   |\n-LL |       if true {\n-   |  _____________^\n-LL | |         for _ in &[42] {\n-LL | |             let foo: &Option<_> = &Some::<u8>(42);\n-LL | |             if true {\n-...  |\n-LL | |         }\n-LL | |     } else {\n-   | |_____^\n-\n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:125:12\n+  --> $DIR/if_same_then_else.rs:101:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -122,7 +96,7 @@ LL | |     }\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:118:13\n+  --> $DIR/if_same_then_else.rs:94:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -134,114 +108,5 @@ LL | |         bar + 1;\n LL | |     } else {\n    | |_____^\n \n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:155:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         if let Some(a) = Some(42) {}\n-LL | |     }\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:153:13\n-   |\n-LL |       if true {\n-   |  _____________^\n-LL | |         if let Some(a) = Some(42) {}\n-LL | |     } else {\n-   | |_____^\n-\n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:162:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         if let (1, .., 3) = (1, 2, 3) {}\n-LL | |     }\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:160:13\n-   |\n-LL |       if true {\n-   |  _____________^\n-LL | |         if let (1, .., 3) = (1, 2, 3) {}\n-LL | |     } else {\n-   | |_____^\n-\n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:212:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         std::f32::NAN\n-LL | |     };\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:210:21\n-   |\n-LL |       let _ = if true {\n-   |  _____________________^\n-LL | |         std::f32::NAN\n-LL | |     } else {\n-   | |_____^\n-\n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:219:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         //~ ERROR same body as `if` block\n-LL | |         Ok(\"foo\")?;\n-LL | |     }\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:217:13\n-   |\n-LL |       if true {\n-   |  _____________^\n-LL | |         Ok(\"foo\")?;\n-LL | |     } else {\n-   | |_____^\n-\n-error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:244:12\n-   |\n-LL |       } else {\n-   |  ____________^\n-LL | |         let foo = \"\";\n-LL | |         return Ok(&foo[0..]);\n-LL | |     }\n-   | |_____^\n-   |\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:241:20\n-   |\n-LL |       } else if true {\n-   |  ____________________^\n-LL | |         let foo = \"\";\n-LL | |         return Ok(&foo[0..]);\n-LL | |     } else {\n-   | |_____^\n-\n-error: this `if` has the same condition as a previous `if`\n-  --> $DIR/if_same_then_else.rs:241:15\n-   |\n-LL |     } else if true {\n-   |               ^^^^\n-   |\n-   = note: `#[deny(clippy::ifs_same_cond)]` on by default\n-note: same as this\n-  --> $DIR/if_same_then_else.rs:235:8\n-   |\n-LL |     if true {\n-   |        ^^^^\n-\n-error: aborting due to 12 previous errors\n+error: aborting due to 5 previous errors\n "}, {"sha": "8e61bf3830be447fbe9b1118bb5aad5d4c53a359", "filename": "tests/ui/if_same_then_else2.rs", "status": "added", "additions": 140, "deletions": 0, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.rs?ref=f728bcd43187bbebceab3ff9424ecbb89524441c", "patch": "@@ -0,0 +1,140 @@\n+#![warn(clippy::if_same_then_else)]\n+#![allow(\n+    clippy::blacklisted_name,\n+    clippy::cognitive_complexity,\n+    clippy::collapsible_if,\n+    clippy::ifs_same_cond,\n+    clippy::needless_return\n+)]\n+\n+fn if_same_then_else2() -> Result<&'static str, ()> {\n+    if true {\n+        for _ in &[42] {\n+            let foo: &Option<_> = &Some::<u8>(42);\n+            if true {\n+                break;\n+            } else {\n+                continue;\n+            }\n+        }\n+    } else {\n+        //~ ERROR same body as `if` block\n+        for _ in &[42] {\n+            let foo: &Option<_> = &Some::<u8>(42);\n+            if true {\n+                break;\n+            } else {\n+                continue;\n+            }\n+        }\n+    }\n+\n+    if true {\n+        if let Some(a) = Some(42) {}\n+    } else {\n+        //~ ERROR same body as `if` block\n+        if let Some(a) = Some(42) {}\n+    }\n+\n+    if true {\n+        if let (1, .., 3) = (1, 2, 3) {}\n+    } else {\n+        //~ ERROR same body as `if` block\n+        if let (1, .., 3) = (1, 2, 3) {}\n+    }\n+\n+    if true {\n+        if let (1, .., 3) = (1, 2, 3) {}\n+    } else {\n+        if let (.., 3) = (1, 2, 3) {}\n+    }\n+\n+    if true {\n+        if let (1, .., 3) = (1, 2, 3) {}\n+    } else {\n+        if let (.., 4) = (1, 2, 3) {}\n+    }\n+\n+    if true {\n+        if let (1, .., 3) = (1, 2, 3) {}\n+    } else {\n+        if let (.., 1, 3) = (1, 2, 3) {}\n+    }\n+\n+    if true {\n+        if let Some(42) = None {}\n+    } else {\n+        if let Option::Some(42) = None {}\n+    }\n+\n+    if true {\n+        if let Some(42) = None::<u8> {}\n+    } else {\n+        if let Some(42) = None {}\n+    }\n+\n+    if true {\n+        if let Some(42) = None::<u8> {}\n+    } else {\n+        if let Some(42) = None::<u32> {}\n+    }\n+\n+    if true {\n+        if let Some(a) = Some(42) {}\n+    } else {\n+        if let Some(a) = Some(43) {}\n+    }\n+\n+    // Same NaNs\n+    let _ = if true {\n+        std::f32::NAN\n+    } else {\n+        //~ ERROR same body as `if` block\n+        std::f32::NAN\n+    };\n+\n+    if true {\n+        Ok(\"foo\")?;\n+    } else {\n+        //~ ERROR same body as `if` block\n+        Ok(\"foo\")?;\n+    }\n+\n+    if true {\n+        let foo = \"\";\n+        return Ok(&foo[0..]);\n+    } else if false {\n+        let foo = \"bar\";\n+        return Ok(&foo[0..]);\n+    } else {\n+        let foo = \"\";\n+        return Ok(&foo[0..]);\n+    }\n+\n+    if true {\n+        let foo = \"\";\n+        return Ok(&foo[0..]);\n+    } else if false {\n+        let foo = \"bar\";\n+        return Ok(&foo[0..]);\n+    } else if true {\n+        let foo = \"\";\n+        return Ok(&foo[0..]);\n+    } else {\n+        let foo = \"\";\n+        return Ok(&foo[0..]);\n+    }\n+\n+    // False positive `if_same_then_else`: `let (x, y)` vs. `let (y, x)`; see issue #3559.\n+    if true {\n+        let foo = \"\";\n+        let (x, y) = (1, 2);\n+        return Ok(&foo[x..y]);\n+    } else {\n+        let foo = \"\";\n+        let (y, x) = (1, 2);\n+        return Ok(&foo[x..y]);\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "c6da3c6be6455a0f263a6412f0cd0482128e4403", "filename": "tests/ui/if_same_then_else2.stderr", "status": "added", "additions": 125, "deletions": 0, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f728bcd43187bbebceab3ff9424ecbb89524441c/tests%2Fui%2Fif_same_then_else2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else2.stderr?ref=f728bcd43187bbebceab3ff9424ecbb89524441c", "patch": "@@ -0,0 +1,125 @@\n+error: this `if` has identical blocks\n+  --> $DIR/if_same_then_else2.rs:20:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         for _ in &[42] {\n+LL | |             let foo: &Option<_> = &Some::<u8>(42);\n+...  |\n+LL | |         }\n+LL | |     }\n+   | |_____^\n+   |\n+   = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n+note: same as this\n+  --> $DIR/if_same_then_else2.rs:11:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         for _ in &[42] {\n+LL | |             let foo: &Option<_> = &Some::<u8>(42);\n+LL | |             if true {\n+...  |\n+LL | |         }\n+LL | |     } else {\n+   | |_____^\n+\n+error: this `if` has identical blocks\n+  --> $DIR/if_same_then_else2.rs:34:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         if let Some(a) = Some(42) {}\n+LL | |     }\n+   | |_____^\n+   |\n+note: same as this\n+  --> $DIR/if_same_then_else2.rs:32:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         if let Some(a) = Some(42) {}\n+LL | |     } else {\n+   | |_____^\n+\n+error: this `if` has identical blocks\n+  --> $DIR/if_same_then_else2.rs:41:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         if let (1, .., 3) = (1, 2, 3) {}\n+LL | |     }\n+   | |_____^\n+   |\n+note: same as this\n+  --> $DIR/if_same_then_else2.rs:39:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         if let (1, .., 3) = (1, 2, 3) {}\n+LL | |     } else {\n+   | |_____^\n+\n+error: this `if` has identical blocks\n+  --> $DIR/if_same_then_else2.rs:91:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         std::f32::NAN\n+LL | |     };\n+   | |_____^\n+   |\n+note: same as this\n+  --> $DIR/if_same_then_else2.rs:89:21\n+   |\n+LL |       let _ = if true {\n+   |  _____________________^\n+LL | |         std::f32::NAN\n+LL | |     } else {\n+   | |_____^\n+\n+error: this `if` has identical blocks\n+  --> $DIR/if_same_then_else2.rs:98:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         //~ ERROR same body as `if` block\n+LL | |         Ok(\"foo\")?;\n+LL | |     }\n+   | |_____^\n+   |\n+note: same as this\n+  --> $DIR/if_same_then_else2.rs:96:13\n+   |\n+LL |       if true {\n+   |  _____________^\n+LL | |         Ok(\"foo\")?;\n+LL | |     } else {\n+   | |_____^\n+\n+error: this `if` has identical blocks\n+  --> $DIR/if_same_then_else2.rs:123:12\n+   |\n+LL |       } else {\n+   |  ____________^\n+LL | |         let foo = \"\";\n+LL | |         return Ok(&foo[0..]);\n+LL | |     }\n+   | |_____^\n+   |\n+note: same as this\n+  --> $DIR/if_same_then_else2.rs:120:20\n+   |\n+LL |       } else if true {\n+   |  ____________________^\n+LL | |         let foo = \"\";\n+LL | |         return Ok(&foo[0..]);\n+LL | |     } else {\n+   | |_____^\n+\n+error: aborting due to 6 previous errors\n+"}]}