{"sha": "742abd011b651452282a73acbd979559c52fac2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0MmFiZDAxMWI2NTE0NTIyODJhNzNhY2JkOTc5NTU5YzUyZmFjMmM=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-09T13:56:24Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-08-09T13:56:24Z"}, "message": "Implement intrinsic arith_offset", "tree": {"sha": "5b3d87de31d2f89c151d7da58308359feb110d82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b3d87de31d2f89c151d7da58308359feb110d82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/742abd011b651452282a73acbd979559c52fac2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/742abd011b651452282a73acbd979559c52fac2c", "html_url": "https://github.com/rust-lang/rust/commit/742abd011b651452282a73acbd979559c52fac2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/742abd011b651452282a73acbd979559c52fac2c/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea", "html_url": "https://github.com/rust-lang/rust/commit/e1ac09a3f042c0afec8ed3398e9b3b3912fc75ea"}], "stats": {"total": 8, "additions": 8, "deletions": 0}, "files": [{"sha": "0131c920aa00c95d291f4da47d138406f6a06c3f", "filename": "src/abi.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/742abd011b651452282a73acbd979559c52fac2c/src%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/742abd011b651452282a73acbd979559c52fac2c/src%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi.rs?ref=742abd011b651452282a73acbd979559c52fac2c", "patch": "@@ -379,6 +379,14 @@ pub fn codegen_call<'a, 'tcx: 'a>(\n                 \"assume\" => {\n                     assert_eq!(args.len(), 1);\n                 }\n+                \"arith_offset\" => {\n+                    assert_eq!(args.len(), 2);\n+                    let base = args[0].load_value(fx);\n+                    let offset = args[1].load_value(fx);\n+                    let res = fx.bcx.ins().iadd(base, offset);\n+                    let res = CValue::ByVal(res, ret.layout());\n+                    ret.write_cvalue(fx, res);\n+                }\n                 \"likely\" | \"unlikely\" => {\n                     assert_eq!(args.len(), 1);\n                     ret.write_cvalue(fx, args[0]);"}]}