{"sha": "cf69238b82661f5fcb6488e31ef27977f5d2cb81", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNjkyMzhiODI2NjFmNWZjYjY0ODhlMzFlZjI3OTc3ZjVkMmNiODE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-29T11:55:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-03-29T11:55:41Z"}, "message": "Auto merge of #40540 - cramertj:check-bodies-as-query, r=nikomatsakis\n\nOn-demandify the typechecking of item bodies\n\nr? @nikomatsakis", "tree": {"sha": "0581c4a2c914bf2b77f8f4e5fed05839cb3cdc92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0581c4a2c914bf2b77f8f4e5fed05839cb3cdc92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf69238b82661f5fcb6488e31ef27977f5d2cb81", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf69238b82661f5fcb6488e31ef27977f5d2cb81", "html_url": "https://github.com/rust-lang/rust/commit/cf69238b82661f5fcb6488e31ef27977f5d2cb81", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf69238b82661f5fcb6488e31ef27977f5d2cb81/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abf5592510156e08b4de3830afaabbc0b65ce054", "url": "https://api.github.com/repos/rust-lang/rust/commits/abf5592510156e08b4de3830afaabbc0b65ce054", "html_url": "https://github.com/rust-lang/rust/commit/abf5592510156e08b4de3830afaabbc0b65ce054"}, {"sha": "3b10b4e95fa5a91cf9c6bdd3162b6dff069a5444", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b10b4e95fa5a91cf9c6bdd3162b6dff069a5444", "html_url": "https://github.com/rust-lang/rust/commit/3b10b4e95fa5a91cf9c6bdd3162b6dff069a5444"}], "stats": {"total": 28, "additions": 22, "deletions": 6}, "files": [{"sha": "4a183191cef29c70c82920b26f1873cf04e37c73", "filename": "src/librustc/ty/maps.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf69238b82661f5fcb6488e31ef27977f5d2cb81/src%2Flibrustc%2Fty%2Fmaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf69238b82661f5fcb6488e31ef27977f5d2cb81/src%2Flibrustc%2Fty%2Fmaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmaps.rs?ref=cf69238b82661f5fcb6488e31ef27977f5d2cb81", "patch": "@@ -13,6 +13,7 @@ use hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use middle::const_val::ConstVal;\n use middle::privacy::AccessLevels;\n use mir;\n+use session::CompileResult;\n use ty::{self, CrateInherentImpls, Ty, TyCtxt};\n \n use rustc_data_structures::indexed_vec::IndexVec;\n@@ -202,6 +203,13 @@ impl<'tcx> QueryDescription for queries::privacy_access_levels<'tcx> {\n     }\n }\n \n+impl<'tcx> QueryDescription for queries::typeck_item_bodies<'tcx> {\n+    fn describe(_: TyCtxt, _: CrateNum) -> String {\n+        format!(\"type-checking all item bodies\")\n+    }\n+}\n+\n+\n macro_rules! define_maps {\n     (<$tcx:tt>\n      $($(#[$attr:meta])*\n@@ -409,6 +417,8 @@ define_maps! { <'tcx>\n     pub coerce_unsized_info: ItemSignature(DefId)\n         -> ty::adjustment::CoerceUnsizedInfo,\n \n+    pub typeck_item_bodies: typeck_item_bodies_dep_node(CrateNum) -> CompileResult,\n+\n     pub typeck_tables: TypeckTables(DefId) -> &'tcx ty::TypeckTables<'tcx>,\n \n     pub coherent_trait: coherent_trait_dep_node((CrateNum, DefId)) -> (),\n@@ -444,3 +454,7 @@ fn crate_inherent_impls_dep_node(_: CrateNum) -> DepNode<DefId> {\n fn mir_shim(instance: ty::InstanceDef) -> DepNode<DefId> {\n     instance.dep_node()\n }\n+\n+fn typeck_item_bodies_dep_node(_: CrateNum) -> DepNode<DefId> {\n+    DepNode::TypeckBodiesKrate\n+}"}, {"sha": "416147fd8d4cb4dd659df3ff333396968e156c95", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/cf69238b82661f5fcb6488e31ef27977f5d2cb81/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf69238b82661f5fcb6488e31ef27977f5d2cb81/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=cf69238b82661f5fcb6488e31ef27977f5d2cb81", "patch": "@@ -84,7 +84,7 @@ use astconv::AstConv;\n use dep_graph::DepNode;\n use fmt_macros::{Parser, Piece, Position};\n use hir::def::{Def, CtorKind};\n-use hir::def_id::{DefId, LOCAL_CRATE};\n+use hir::def_id::{CrateNum, DefId, LOCAL_CRATE};\n use rustc::infer::{self, InferCtxt, InferOk, RegionVariableOrigin, TypeTrace};\n use rustc::infer::type_variable::{self, TypeVariableOrigin};\n use rustc::ty::subst::{Kind, Subst, Substs};\n@@ -541,19 +541,21 @@ pub fn check_item_types<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> CompileResult\n }\n \n pub fn check_item_bodies<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) -> CompileResult {\n-    return tcx.sess.track_errors(|| {\n-        tcx.dep_graph.with_task(DepNode::TypeckBodiesKrate, tcx, (), check_item_bodies_task);\n-    });\n+    ty::queries::typeck_item_bodies::get(tcx, DUMMY_SP, LOCAL_CRATE)\n+}\n \n-    fn check_item_bodies_task<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, (): ()) {\n+fn typeck_item_bodies<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>, crate_num: CrateNum) -> CompileResult {\n+    debug_assert!(crate_num == LOCAL_CRATE);\n+    tcx.sess.track_errors(|| {\n         tcx.visit_all_bodies_in_krate(|body_owner_def_id, _body_id| {\n             tcx.item_tables(body_owner_def_id);\n         });\n-    }\n+    })\n }\n \n pub fn provide(providers: &mut Providers) {\n     *providers = Providers {\n+        typeck_item_bodies,\n         typeck_tables,\n         closure_type,\n         closure_kind,"}]}