{"sha": "63ce733fe272e6ead8f9536754f002c93883651a", "node_id": "C_kwDOAAsO6NoAKDYzY2U3MzNmZTI3MmU2ZWFkOGY5NTM2NzU0ZjAwMmM5Mzg4MzY1MWE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-01-25T16:54:45Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-03-13T18:19:59Z"}, "message": "Rename method.", "tree": {"sha": "bf846dc215b1afa7734710666ed8fdd3b6fcbdc4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf846dc215b1afa7734710666ed8fdd3b6fcbdc4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63ce733fe272e6ead8f9536754f002c93883651a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63ce733fe272e6ead8f9536754f002c93883651a", "html_url": "https://github.com/rust-lang/rust/commit/63ce733fe272e6ead8f9536754f002c93883651a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63ce733fe272e6ead8f9536754f002c93883651a/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e3f091f2b48933694ef3fecaf586f7d7dde523d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3f091f2b48933694ef3fecaf586f7d7dde523d", "html_url": "https://github.com/rust-lang/rust/commit/9e3f091f2b48933694ef3fecaf586f7d7dde523d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "140298f166fb9b789b4b35f1c9169a1437a48131", "filename": "compiler/rustc_mir_transform/src/remove_zsts.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/63ce733fe272e6ead8f9536754f002c93883651a/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ce733fe272e6ead8f9536754f002c93883651a/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fremove_zsts.rs?ref=63ce733fe272e6ead8f9536754f002c93883651a", "patch": "@@ -1,4 +1,4 @@\n-//! Removes assignments to ZST places.\n+//! Removes operations on ZST places, and convert ZST operands to constants.\n \n use crate::MirPass;\n use rustc_middle::mir::interpret::ConstValue;\n@@ -53,7 +53,7 @@ fn maybe_zst(ty: Ty<'_>) -> bool {\n }\n \n impl<'tcx> Replacer<'_, 'tcx> {\n-    fn is_zst(&self, ty: Ty<'tcx>) -> bool {\n+    fn known_to_be_zst(&self, ty: Ty<'tcx>) -> bool {\n         if !maybe_zst(ty) {\n             return false;\n         }\n@@ -64,7 +64,7 @@ impl<'tcx> Replacer<'_, 'tcx> {\n     }\n \n     fn make_zst(&self, ty: Ty<'tcx>) -> Constant<'tcx> {\n-        debug_assert!(self.is_zst(ty));\n+        debug_assert!(self.known_to_be_zst(ty));\n         Constant {\n             span: rustc_span::DUMMY_SP,\n             user_ty: None,\n@@ -83,12 +83,12 @@ impl<'tcx> MutVisitor<'tcx> for Replacer<'_, 'tcx> {\n             VarDebugInfoContents::Const(_) => {}\n             VarDebugInfoContents::Place(place) => {\n                 let place_ty = place.ty(self.local_decls, self.tcx).ty;\n-                if self.is_zst(place_ty) {\n+                if self.known_to_be_zst(place_ty) {\n                     var_debug_info.value = VarDebugInfoContents::Const(self.make_zst(place_ty))\n                 }\n             }\n             VarDebugInfoContents::Composite { ty, fragments: _ } => {\n-                if self.is_zst(ty) {\n+                if self.known_to_be_zst(ty) {\n                     var_debug_info.value = VarDebugInfoContents::Const(self.make_zst(ty))\n                 }\n             }\n@@ -100,7 +100,7 @@ impl<'tcx> MutVisitor<'tcx> for Replacer<'_, 'tcx> {\n             return;\n         }\n         let op_ty = operand.ty(self.local_decls, self.tcx);\n-        if self.is_zst(op_ty)\n+        if self.known_to_be_zst(op_ty)\n             && self.tcx.consider_optimizing(|| {\n                 format!(\"RemoveZsts - Operand: {:?} Location: {:?}\", operand, loc)\n             })\n@@ -114,7 +114,7 @@ impl<'tcx> MutVisitor<'tcx> for Replacer<'_, 'tcx> {\n             statement.kind\n         {\n             let place_ty = place.ty(self.local_decls, self.tcx).ty;\n-            if self.is_zst(place_ty)\n+            if self.known_to_be_zst(place_ty)\n                 && self.tcx.consider_optimizing(|| {\n                     format!(\n                         \"RemoveZsts - Place: {:?} SourceInfo: {:?}\","}]}