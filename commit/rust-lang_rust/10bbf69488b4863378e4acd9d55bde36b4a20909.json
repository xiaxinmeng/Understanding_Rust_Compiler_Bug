{"sha": "10bbf69488b4863378e4acd9d55bde36b4a20909", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwYmJmNjk0ODhiNDg2MzM3OGU0YWNkOWQ1NWJkZTM2YjRhMjA5MDk=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-31T03:51:00Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-01T03:50:27Z"}, "message": "rustc_trans: replace `EnterPatterns` alias with an unboxed closure", "tree": {"sha": "677b67f3551322a38b0529b72f82c287df9bc1f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/677b67f3551322a38b0529b72f82c287df9bc1f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/10bbf69488b4863378e4acd9d55bde36b4a20909", "comment_count": 7, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/10bbf69488b4863378e4acd9d55bde36b4a20909", "html_url": "https://github.com/rust-lang/rust/commit/10bbf69488b4863378e4acd9d55bde36b4a20909", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/10bbf69488b4863378e4acd9d55bde36b4a20909/comments", "author": null, "committer": null, "parents": [{"sha": "c8cf3a307b94349cd4948a860d62730945e8d805", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8cf3a307b94349cd4948a860d62730945e8d805", "html_url": "https://github.com/rust-lang/rust/commit/c8cf3a307b94349cd4948a860d62730945e8d805"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "fc68d1d3258e13391a7d44a88c274c7c2cf75ad7", "filename": "src/librustc_trans/trans/_match.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/10bbf69488b4863378e4acd9d55bde36b4a20909/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/10bbf69488b4863378e4acd9d55bde36b4a20909/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2F_match.rs?ref=10bbf69488b4863378e4acd9d55bde36b4a20909", "patch": "@@ -410,15 +410,15 @@ fn expand_nested_bindings<'a, 'p, 'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     }).collect()\n }\n \n-type EnterPatterns<'a, 'p> = |&[&'p ast::Pat]|: 'a -> Option<Vec<&'p ast::Pat>>;\n-\n-fn enter_match<'a, 'b, 'p, 'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n-                                       dm: &DefMap,\n-                                       m: &[Match<'a, 'p, 'blk, 'tcx>],\n-                                       col: uint,\n-                                       val: ValueRef,\n-                                       e: EnterPatterns<'b, 'p>)\n-                                       -> Vec<Match<'a, 'p, 'blk, 'tcx>> {\n+fn enter_match<'a, 'b, 'p, 'blk, 'tcx, F>(bcx: Block<'blk, 'tcx>,\n+                                          dm: &DefMap,\n+                                          m: &[Match<'a, 'p, 'blk, 'tcx>],\n+                                          col: uint,\n+                                          val: ValueRef,\n+                                          mut e: F)\n+                                          -> Vec<Match<'a, 'p, 'blk, 'tcx>> where\n+    F: FnMut(&[&'p ast::Pat]) -> Option<Vec<&'p ast::Pat>>,\n+{\n     debug!(\"enter_match(bcx={}, m={}, col={}, val={})\",\n            bcx.to_str(),\n            m.repr(bcx.tcx()),"}]}