{"sha": "d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NTc0MmIxZWI0MmYwZjVjMWJlNDJmYzY4YTg4YzE0NDRiNGZiNTc=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-05-29T04:37:45Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-05-29T04:37:45Z"}, "message": "Fix missing note on type mismatch error diagnostics", "tree": {"sha": "51050df5907ff56ef4d8e48703739ffc84670003", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51050df5907ff56ef4d8e48703739ffc84670003"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "html_url": "https://github.com/rust-lang/rust/commit/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f208f207d647336f453b1374e2b2f96fc0548f76", "url": "https://api.github.com/repos/rust-lang/rust/commits/f208f207d647336f453b1374e2b2f96fc0548f76", "html_url": "https://github.com/rust-lang/rust/commit/f208f207d647336f453b1374e2b2f96fc0548f76"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "866df2958a02a319640a189e68ddca2fa5c81a11", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "patch": "@@ -54,7 +54,7 @@ impl<'tcx> TyS<'tcx> {\n     /// ADTs with no type arguments.\n     pub fn is_simple_text(&self) -> bool {\n         match self.kind() {\n-            Adt(_, substs) => substs.types().next().is_none(),\n+            Adt(_, substs) => substs.types().next().is_none() && substs.consts().next().is_none(),\n             Ref(_, ty, _) => ty.is_simple_text(),\n             _ => self.is_simple_ty(),\n         }"}, {"sha": "741137afe4588f06e99cc194fe3e58a33f5ba7a0", "filename": "src/test/ui/const-generics/defaults/mismatch.full.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.full.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.full.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.full.stderr?ref=d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "patch": "@@ -5,6 +5,9 @@ LL |     let e: Example::<13> = ();\n    |            -------------   ^^ expected struct `Example`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example`\n+           found unit type `()`\n \n error[E0308]: mismatched types\n   --> $DIR/mismatch.rs:14:34\n@@ -40,12 +43,15 @@ LL |     let e: Example3::<7> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:22:28\n+  --> $DIR/mismatch.rs:20:28\n    |\n LL |     let e: Example4::<7> = ();\n    |            -------------   ^^ expected struct `Example4`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example4<7_usize>`\n+           found unit type `()`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "741137afe4588f06e99cc194fe3e58a33f5ba7a0", "filename": "src/test/ui/const-generics/defaults/mismatch.min.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.min.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.min.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.min.stderr?ref=d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "patch": "@@ -5,6 +5,9 @@ LL |     let e: Example::<13> = ();\n    |            -------------   ^^ expected struct `Example`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example`\n+           found unit type `()`\n \n error[E0308]: mismatched types\n   --> $DIR/mismatch.rs:14:34\n@@ -40,12 +43,15 @@ LL |     let e: Example3::<7> = ();\n            found unit type `()`\n \n error[E0308]: mismatched types\n-  --> $DIR/mismatch.rs:22:28\n+  --> $DIR/mismatch.rs:20:28\n    |\n LL |     let e: Example4::<7> = ();\n    |            -------------   ^^ expected struct `Example4`, found `()`\n    |            |\n    |            expected due to this\n+   |\n+   = note: expected struct `Example4<7_usize>`\n+           found unit type `()`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "cfc8594f17cfa1a423bf9b048c481aca23a90cce", "filename": "src/test/ui/const-generics/defaults/mismatch.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d75742b1eb42f0f5c1be42fc68a88c1444b4fb57/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdefaults%2Fmismatch.rs?ref=d75742b1eb42f0f5c1be42fc68a88c1444b4fb57", "patch": "@@ -17,8 +17,6 @@ fn main() {\n     //~^ Error: mismatched types\n     let e: Example3::<7> = ();\n     //~^ Error: mismatched types\n-    // FIXME(const_generics_defaults): There should be a note for the error below, but it is\n-    // missing.\n     let e: Example4::<7> = ();\n     //~^ Error: mismatched types\n }"}]}