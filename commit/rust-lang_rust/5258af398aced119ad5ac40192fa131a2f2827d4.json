{"sha": "5258af398aced119ad5ac40192fa131a2f2827d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyNThhZjM5OGFjZWQxMTlhZDVhYzQwMTkyZmExMzFhMmYyODI3ZDQ=", "commit": {"author": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-08T07:31:15Z"}, "committer": {"name": "Phlosioneer", "email": "mattmdrr2@gmail.com", "date": "2018-03-19T05:39:38Z"}, "message": "Make Wrapping::pow use wrapping_pow, add example", "tree": {"sha": "2ba013cb45820a59e7492790808b6b855422026d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ba013cb45820a59e7492790808b6b855422026d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5258af398aced119ad5ac40192fa131a2f2827d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5258af398aced119ad5ac40192fa131a2f2827d4", "html_url": "https://github.com/rust-lang/rust/commit/5258af398aced119ad5ac40192fa131a2f2827d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5258af398aced119ad5ac40192fa131a2f2827d4/comments", "author": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Phlosioneer", "id": 4657718, "node_id": "MDQ6VXNlcjQ2NTc3MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4657718?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Phlosioneer", "html_url": "https://github.com/Phlosioneer", "followers_url": "https://api.github.com/users/Phlosioneer/followers", "following_url": "https://api.github.com/users/Phlosioneer/following{/other_user}", "gists_url": "https://api.github.com/users/Phlosioneer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Phlosioneer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Phlosioneer/subscriptions", "organizations_url": "https://api.github.com/users/Phlosioneer/orgs", "repos_url": "https://api.github.com/users/Phlosioneer/repos", "events_url": "https://api.github.com/users/Phlosioneer/events{/privacy}", "received_events_url": "https://api.github.com/users/Phlosioneer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "612c4a95bce4c4dc0cddc5ab374fcb262039aede", "url": "https://api.github.com/repos/rust-lang/rust/commits/612c4a95bce4c4dc0cddc5ab374fcb262039aede", "html_url": "https://github.com/rust-lang/rust/commit/612c4a95bce4c4dc0cddc5ab374fcb262039aede"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "fb79ddd09517293884ad915270f7809db408bcaa", "filename": "src/libcore/num/wrapping.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/5258af398aced119ad5ac40192fa131a2f2827d4/src%2Flibcore%2Fnum%2Fwrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5258af398aced119ad5ac40192fa131a2f2827d4/src%2Flibcore%2Fnum%2Fwrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fwrapping.rs?ref=5258af398aced119ad5ac40192fa131a2f2827d4", "patch": "@@ -606,10 +606,23 @@ macro_rules! wrapping_int_impl {\n             /// let x: Wrapping<i32> = Wrapping(2); // or any other integer type\n             ///\n             /// assert_eq!(x.pow(4), Wrapping(16));\n+            /// ```\n+            ///\n+            /// Results that are too large are wrapped:\n+            ///\n+            /// ```\n+            /// #![feature(wrapping_int_impl)]\n+            /// use std::num::Wrapping;\n+            ///\n+            /// // 5 ^ 4 = 625, which is too big for a u8\n+            /// let x: Wrapping<u8> = Wrapping(5);\n+            ///\n+            /// assert_eq!(x.pow(4).0, 113);\n+            /// ```\n             #[inline]\n             #[unstable(feature = \"wrapping_int_impl\", issue = \"32463\")]\n             pub fn pow(self, exp: u32) -> Self {\n-                Wrapping(self.0.pow(exp))\n+                Wrapping(self.0.wrapping_pow(exp))\n             }\n         }\n     )*)\n@@ -651,6 +664,3 @@ mod shift_max {\n     pub const u64: u32 = i64;\n     pub use self::platform::usize;\n }\n-\n-\n-"}]}