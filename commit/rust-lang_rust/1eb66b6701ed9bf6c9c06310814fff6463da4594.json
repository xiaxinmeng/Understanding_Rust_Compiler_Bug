{"sha": "1eb66b6701ed9bf6c9c06310814fff6463da4594", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYjY2YjY3MDFlZDliZjZjOWMwNjMxMDgxNGZmZjY0NjNkYTQ1OTQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T15:09:13Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-19T15:09:13Z"}, "message": "Handle \"offset\" intrinsic on integer pointers.", "tree": {"sha": "389f914f1d053a932f53ae9464b6cc1af1c0b952", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/389f914f1d053a932f53ae9464b6cc1af1c0b952"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eb66b6701ed9bf6c9c06310814fff6463da4594", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eb66b6701ed9bf6c9c06310814fff6463da4594", "html_url": "https://github.com/rust-lang/rust/commit/1eb66b6701ed9bf6c9c06310814fff6463da4594", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eb66b6701ed9bf6c9c06310814fff6463da4594/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "668f2b6fd475af40e1b19d49f04ee5feab83a68f", "url": "https://api.github.com/repos/rust-lang/rust/commits/668f2b6fd475af40e1b19d49f04ee5feab83a68f", "html_url": "https://github.com/rust-lang/rust/commit/668f2b6fd475af40e1b19d49f04ee5feab83a68f"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "52463c1af55ca7803b4e4b454e6b0b421815b494", "filename": "src/interpreter.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/1eb66b6701ed9bf6c9c06310814fff6463da4594/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eb66b6701ed9bf6c9c06310814fff6463da4594/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=1eb66b6701ed9bf6c9c06310814fff6463da4594", "patch": "@@ -342,11 +342,21 @@ impl<'a, 'tcx: 'a, 'arena> Interpreter<'a, 'tcx, 'arena> {\n                 let ptr_arg    = try!(self.eval_operand(&args[0]));\n                 let offset_arg = try!(self.eval_operand(&args[1]));\n \n-                let ptr    = try!(self.memory.read_ptr(ptr_arg));\n                 let offset = try!(self.memory.read_int(offset_arg, self.memory.pointer_size));\n \n-                let result_ptr = ptr.offset(offset as isize * pointee_size);\n-                try!(self.memory.write_ptr(dest, result_ptr));\n+                match self.memory.read_ptr(ptr_arg) {\n+                    Ok(ptr) => {\n+                        let result_ptr = ptr.offset(offset as isize * pointee_size);\n+                        try!(self.memory.write_ptr(dest, result_ptr));\n+                    }\n+                    Err(EvalError::ReadBytesAsPointer) => {\n+                        let psize = self.memory.pointer_size;\n+                        let addr = try!(self.memory.read_int(ptr_arg, psize));\n+                        let result_addr = addr + offset * pointee_size as i64;\n+                        try!(self.memory.write_int(dest, result_addr, psize));\n+                    }\n+                    Err(e) => return Err(e),\n+                }\n             }\n \n             \"size_of\" => {"}]}