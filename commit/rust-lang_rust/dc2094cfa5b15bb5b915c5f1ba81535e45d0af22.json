{"sha": "dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMjA5NGNmYTViMTViYjViOTE1YzVmMWJhODE1MzVlNDVkMGFmMjI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-14T13:57:10Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-14T13:57:10Z"}, "message": "Minor, push allocations down", "tree": {"sha": "d818819843fb2611e71da676aed25e269da64491", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d818819843fb2611e71da676aed25e269da64491"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "html_url": "https://github.com/rust-lang/rust/commit/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebb4d29d694f60f746a2b7b43980ba89cc9dc807", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebb4d29d694f60f746a2b7b43980ba89cc9dc807", "html_url": "https://github.com/rust-lang/rust/commit/ebb4d29d694f60f746a2b7b43980ba89cc9dc807"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "c6e56e8c2652fbabc5b2d2dc8c54fb4700f22107", "filename": "baseline.tst", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/baseline.tst", "raw_url": "https://github.com/rust-lang/rust/raw/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/baseline.tst", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/baseline.tst?ref=dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "patch": "@@ -0,0 +1,12 @@\n+   24ms - SourceRootConfig::partition\n+   24ms - SourceRootConfig::partition\n+   31ms - SourceRootConfig::partition\n+   30ms - SourceRootConfig::partition\n+   35ms - SourceRootConfig::partition\n+   28ms - SourceRootConfig::partition\n+   32ms - SourceRootConfig::partition\n+   26ms - SourceRootConfig::partition\n+   30ms - SourceRootConfig::partition\n+   26ms - SourceRootConfig::partition\n+   32ms - SourceRootConfig::partition\n+   31ms - SourceRootConfig::partition"}, {"sha": "e5e2ef53075d52960b310f7a4e7f7114817594cb", "filename": "crates/vfs/src/file_set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/crates%2Fvfs%2Fsrc%2Ffile_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Ffile_set.rs?ref=dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "patch": "@@ -62,7 +62,7 @@ impl FileSetConfig {\n         let mut res = vec![FileSet::default(); self.len()];\n         for (file_id, path) in vfs.iter() {\n             let root = self.classify(&path, &mut scratch_space);\n-            res[root].insert(file_id, path)\n+            res[root].insert(file_id, path.clone())\n         }\n         res\n     }"}, {"sha": "cdf6f1fd021a154215d9824442901f4bfd3a9706", "filename": "crates/vfs/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/crates%2Fvfs%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc2094cfa5b15bb5b915c5f1ba81535e45d0af22/crates%2Fvfs%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fvfs%2Fsrc%2Flib.rs?ref=dc2094cfa5b15bb5b915c5f1ba81535e45d0af22", "patch": "@@ -90,12 +90,12 @@ impl Vfs {\n     pub fn file_contents(&self, file_id: FileId) -> &[u8] {\n         self.get(file_id).as_deref().unwrap()\n     }\n-    pub fn iter(&self) -> impl Iterator<Item = (FileId, VfsPath)> + '_ {\n+    pub fn iter(&self) -> impl Iterator<Item = (FileId, &VfsPath)> + '_ {\n         (0..self.data.len())\n             .map(|it| FileId(it as u32))\n             .filter(move |&file_id| self.get(file_id).is_some())\n             .map(move |file_id| {\n-                let path = self.interner.lookup(file_id).clone();\n+                let path = self.interner.lookup(file_id);\n                 (file_id, path)\n             })\n     }"}]}