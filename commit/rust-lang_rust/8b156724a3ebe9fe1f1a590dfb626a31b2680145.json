{"sha": "8b156724a3ebe9fe1f1a590dfb626a31b2680145", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiMTU2NzI0YTNlYmU5ZmUxZjFhNTkwZGZiNjI2YTMxYjI2ODAxNDU=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-15T08:44:22Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2014-11-16T01:41:55Z"}, "message": "Remove use of deprecated function", "tree": {"sha": "76bdf1cff00653a2c09b40711451da2189299860", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76bdf1cff00653a2c09b40711451da2189299860"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b156724a3ebe9fe1f1a590dfb626a31b2680145", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b156724a3ebe9fe1f1a590dfb626a31b2680145", "html_url": "https://github.com/rust-lang/rust/commit/8b156724a3ebe9fe1f1a590dfb626a31b2680145", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b156724a3ebe9fe1f1a590dfb626a31b2680145/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68bd495f0b2355e390c5dc382e17d056c113d069", "url": "https://api.github.com/repos/rust-lang/rust/commits/68bd495f0b2355e390c5dc382e17d056c113d069", "html_url": "https://github.com/rust-lang/rust/commit/68bd495f0b2355e390c5dc382e17d056c113d069"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "2ce6c0e6e71cd7647c6b1463d268d5e426757819", "filename": "src/libstd/num/mod.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8b156724a3ebe9fe1f1a590dfb626a31b2680145/src%2Flibstd%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b156724a3ebe9fe1f1a590dfb626a31b2680145/src%2Flibstd%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fmod.rs?ref=8b156724a3ebe9fe1f1a590dfb626a31b2680145", "patch": "@@ -751,8 +751,9 @@ mod tests {\n \n     #[test]\n     fn test_pow() {\n-        fn naive_pow<T: One + Mul<T, T>>(base: T, exp: uint) -> T {\n-            range(0, exp).fold(one::<T>(), |acc, _| acc * base)\n+        fn naive_pow<T: Int>(base: T, exp: uint) -> T {\n+            let one: T = Int::one();\n+            range(0, exp).fold(one, |acc, _| acc * base)\n         }\n         macro_rules! assert_pow(\n             (($num:expr, $exp:expr) => $expected:expr) => {{"}]}