{"sha": "1afc943c9174162888631c2ec02af33370a77115", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZmM5NDNjOTE3NDE2Mjg4ODYzMWMyZWMwMmFmMzMzNzBhNzcxMTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-09T23:59:29Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-10T00:47:44Z"}, "message": "rustc: Rename native_abi_c_stack_cdecl to native_abi_cdecl", "tree": {"sha": "6369343a9eb3630f973467be9bbbd125ad3efc11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6369343a9eb3630f973467be9bbbd125ad3efc11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1afc943c9174162888631c2ec02af33370a77115", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1afc943c9174162888631c2ec02af33370a77115", "html_url": "https://github.com/rust-lang/rust/commit/1afc943c9174162888631c2ec02af33370a77115", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1afc943c9174162888631c2ec02af33370a77115/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10c35959e74b26a9c83915e56c2225afbf177d5a", "url": "https://api.github.com/repos/rust-lang/rust/commits/10c35959e74b26a9c83915e56c2225afbf177d5a", "html_url": "https://github.com/rust-lang/rust/commit/10c35959e74b26a9c83915e56c2225afbf177d5a"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "82dfb83935473a6589c7030cf832a05fe88bc0b1", "filename": "src/comp/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Fcreader.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -51,7 +51,7 @@ fn visit_view_item(e: env, i: @ast::view_item) {\n fn visit_item(e: env, i: @ast::item) {\n     alt i.node {\n       ast::item_native_mod(m) {\n-        if m.abi != ast::native_abi_c_stack_cdecl &&\n+        if m.abi != ast::native_abi_cdecl &&\n                 m.abi != ast::native_abi_stdcall {\n             ret;\n         }"}, {"sha": "156761eff4e1a49ad955063bdf7a96a42b7d968f", "filename": "src/comp/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftydecode.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -260,7 +260,7 @@ fn parse_ty(st: @pstate, sd: str_def) -> ty::t {\n         let abi;\n         alt next(st) as char {\n           'i' { abi = ast::native_abi_rust_intrinsic; }\n-          'C' { abi = ast::native_abi_c_stack_cdecl; }\n+          'C' { abi = ast::native_abi_cdecl; }\n           'S' { abi = ast::native_abi_stdcall; }\n         }\n         let func = parse_ty_fn(st, sd);"}, {"sha": "15c0b4d9e29c41354a8dc3b5e45f977a85d729f8", "filename": "src/comp/metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmetadata%2Ftyencode.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -143,7 +143,7 @@ fn enc_sty(w: io::writer, cx: @ctxt, st: ty::sty) {\n         w.write_char('N');\n         alt abi {\n           native_abi_rust_intrinsic. { w.write_char('i'); }\n-          native_abi_c_stack_cdecl. { w.write_char('C'); }\n+          native_abi_cdecl. { w.write_char('C'); }\n           native_abi_stdcall. { w.write_char('S'); }\n         }\n         enc_ty_fn(w, cx, args, out, return_val, []);"}, {"sha": "b98f7d528b1cf9c769cd4312b661d1120d5b3767", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -5597,7 +5597,7 @@ fn native_fn_ty_param_count(cx: @crate_ctxt, id: ast::node_id) -> uint {\n pure fn native_abi_requires_pair(abi: ast::native_abi) -> bool {\n     alt abi {\n         ast::native_abi_rust_intrinsic. { ret true; }\n-        ast::native_abi_c_stack_cdecl. |\n+        ast::native_abi_cdecl. |\n         ast::native_abi_stdcall. { ret false; }\n     }\n }\n@@ -5641,7 +5641,7 @@ fn register_native_fn(ccx: @crate_ctxt, sp: span, path: [str], name: str,\n         uses_retptr = true;\n         cast_to_i32 = false;\n       }\n-      ast::native_abi_c_stack_cdecl. {\n+      ast::native_abi_cdecl. {\n         let llfn = decl_cdecl_fn(ccx.llmod, name, T_fn([], ccx.int_type));\n         ccx.item_ids.insert(id, llfn);\n         ccx.item_symbols.insert(id, name);"}, {"sha": "e61a50c235e753822b2bc03ed9bf40798563ed2f", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -552,7 +552,7 @@ mod collect {\n           some(ast_map::node_item(item)) { tpt = ty_of_item(cx, item); }\n           some(ast_map::node_native_item(native_item)) {\n             tpt = ty_of_native_item(cx, native_item,\n-                                    ast::native_abi_c_stack_cdecl);\n+                                    ast::native_abi_cdecl);\n           }\n           _ { cx.tcx.sess.fatal(\"internal error \" + std::int::str(id.node)); }\n         }"}, {"sha": "ebac944d64a56be96250f21109715398de45e7d6", "filename": "src/comp/syntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fast.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -427,7 +427,7 @@ type _mod = {view_items: [@view_item], items: [@item]};\n \n tag native_abi {\n     native_abi_rust_intrinsic;\n-    native_abi_c_stack_cdecl;\n+    native_abi_cdecl;\n     native_abi_stdcall;\n }\n "}, {"sha": "b5b5f15b5955822612c35fa5e98f41b44e83d632", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -2003,13 +2003,13 @@ fn parse_native_mod_items(p: parser, native_name: str, abi: ast::native_abi,\n \n fn parse_item_native_mod(p: parser, attrs: [ast::attribute]) -> @ast::item {\n     let lo = p.get_last_lo_pos();\n-    let abi = ast::native_abi_c_stack_cdecl;\n+    let abi = ast::native_abi_cdecl;\n     if !is_word(p, \"mod\") {\n         let t = parse_str(p);\n         if str::eq(t, \"rust-intrinsic\") {\n             abi = ast::native_abi_rust_intrinsic;\n         } else if str::eq(t, \"c-stack-cdecl\") {\n-            abi = ast::native_abi_c_stack_cdecl;\n+            abi = ast::native_abi_cdecl;\n         } else if str::eq(t, \"c-stack-stdcall\") {\n             abi = ast::native_abi_stdcall;\n         } else {"}, {"sha": "853ac67d93c6ab4b69e353e6c2012b3ef19375f6", "filename": "src/comp/syntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afc943c9174162888631c2ec02af33370a77115/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fprint%2Fpprust.rs?ref=1afc943c9174162888631c2ec02af33370a77115", "patch": "@@ -404,7 +404,7 @@ fn print_item(s: ps, &&item: @ast::item) {\n           ast::native_abi_rust_intrinsic. {\n             word_nbsp(s, \"\\\"rust-intrinsic\\\"\");\n           }\n-          ast::native_abi_c_stack_cdecl. {\n+          ast::native_abi_cdecl. {\n             word_nbsp(s, \"\\\"c-stack-cdecl\\\"\");\n           }\n           ast::native_abi_stdcall. {"}]}