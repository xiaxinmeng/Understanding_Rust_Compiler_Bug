{"sha": "d5a8f03a350e8a392f0aa1c05707b503f549e90b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1YThmMDNhMzUwZThhMzkyZjBhYTFjMDU3MDdiNTAzZjU0OWU5MGI=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-07-03T08:29:14Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-07-03T15:29:54Z"}, "message": "Take generic args into account for bounded type", "tree": {"sha": "b929578c336008e0433a0f444b2786da7cb9e730", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b929578c336008e0433a0f444b2786da7cb9e730"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5a8f03a350e8a392f0aa1c05707b503f549e90b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5a8f03a350e8a392f0aa1c05707b503f549e90b", "html_url": "https://github.com/rust-lang/rust/commit/d5a8f03a350e8a392f0aa1c05707b503f549e90b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5a8f03a350e8a392f0aa1c05707b503f549e90b/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "url": "https://api.github.com/repos/rust-lang/rust/commits/754bfb1dc89ed9a98b2f1b7d77b035e809b14031", "html_url": "https://github.com/rust-lang/rust/commit/754bfb1dc89ed9a98b2f1b7d77b035e809b14031"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "34341594c1985ef41a7a48b84198fad986c59233", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/d5a8f03a350e8a392f0aa1c05707b503f549e90b/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5a8f03a350e8a392f0aa1c05707b503f549e90b/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=d5a8f03a350e8a392f0aa1c05707b503f549e90b", "patch": "@@ -703,6 +703,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                     }\n                     for segment in path.segments {\n                         segment.ident.name.hash(&mut self.s);\n+                        self.hash_generic_args(segment.generic_args().args);\n                     }\n                 },\n                 QPath::TypeRelative(ref ty, ref segment) => {\n@@ -711,13 +712,7 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n                 },\n             },\n             TyKind::OpaqueDef(_, arg_list) => {\n-                for arg in *arg_list {\n-                    match arg {\n-                        GenericArg::Lifetime(ref l) => self.hash_lifetime(l),\n-                        GenericArg::Type(ref ty) => self.hash_ty(&ty),\n-                        GenericArg::Const(ref ca) => self.hash_body(ca.value.body),\n-                    }\n-                }\n+                self.hash_generic_args(arg_list);\n             },\n             TyKind::TraitObject(_, lifetime) => {\n                 self.hash_lifetime(lifetime);\n@@ -735,4 +730,14 @@ impl<'a, 'tcx> SpanlessHash<'a, 'tcx> {\n         self.hash_expr(&self.cx.tcx.hir().body(body_id).value);\n         self.maybe_typeck_tables = old_maybe_typeck_tables;\n     }\n+\n+    fn hash_generic_args(&mut self, arg_list: &[GenericArg<'_>]) {\n+        for arg in arg_list {\n+            match arg {\n+                GenericArg::Lifetime(ref l) => self.hash_lifetime(l),\n+                GenericArg::Type(ref ty) => self.hash_ty(&ty),\n+                GenericArg::Const(ref ca) => self.hash_body(ca.value.body),\n+            }\n+        }\n+    }\n }"}, {"sha": "9f1700567d1c45f98461237c7cacc5fed57a6865", "filename": "tests/ui/type_repetition_in_bounds.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5a8f03a350e8a392f0aa1c05707b503f549e90b/tests%2Fui%2Ftype_repetition_in_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5a8f03a350e8a392f0aa1c05707b503f549e90b/tests%2Fui%2Ftype_repetition_in_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_repetition_in_bounds.rs?ref=d5a8f03a350e8a392f0aa1c05707b503f549e90b", "patch": "@@ -18,6 +18,7 @@ where\n     unimplemented!();\n }\n \n+// Threshold test (see #4380)\n trait LintBounds\n where\n     Self: Clone,\n@@ -35,4 +36,18 @@ where\n {\n }\n \n+// Generic distinction (see #4323)\n+pub struct Foo<A>(A);\n+pub struct Bar<A, B> {\n+    a: Foo<A>,\n+    b: Foo<B>,\n+}\n+\n+impl<A, B> Unpin for Bar<A, B>\n+where\n+    Foo<A>: Unpin,\n+    Foo<B>: Unpin,\n+{\n+}\n+\n fn main() {}"}, {"sha": "148c19c7d0701dc2910de718d175a03122d26e03", "filename": "tests/ui/type_repetition_in_bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5a8f03a350e8a392f0aa1c05707b503f549e90b/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d5a8f03a350e8a392f0aa1c05707b503f549e90b/tests%2Fui%2Ftype_repetition_in_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype_repetition_in_bounds.stderr?ref=d5a8f03a350e8a392f0aa1c05707b503f549e90b", "patch": "@@ -12,7 +12,7 @@ LL | #![deny(clippy::type_repetition_in_bounds)]\n    = help: consider combining the bounds: `T: Copy + Clone`\n \n error: this type has already been used as a bound predicate\n-  --> $DIR/type_repetition_in_bounds.rs:24:5\n+  --> $DIR/type_repetition_in_bounds.rs:25:5\n    |\n LL |     Self: Copy + Default + Ord,\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^"}]}