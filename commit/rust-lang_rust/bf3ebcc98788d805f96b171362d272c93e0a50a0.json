{"sha": "bf3ebcc98788d805f96b171362d272c93e0a50a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmM2ViY2M5ODc4OGQ4MDVmOTZiMTcxMzYyZDI3MmM5M2UwYTUwYTA=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-20T12:20:33Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-20T12:20:33Z"}, "message": "Make gathering generator interior types O(n log n)", "tree": {"sha": "691ffc563972355272002a02923c028942c34efa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/691ffc563972355272002a02923c028942c34efa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf3ebcc98788d805f96b171362d272c93e0a50a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf3ebcc98788d805f96b171362d272c93e0a50a0", "html_url": "https://github.com/rust-lang/rust/commit/bf3ebcc98788d805f96b171362d272c93e0a50a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf3ebcc98788d805f96b171362d272c93e0a50a0/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e70cc2733b9902ae660f60fce7ba0bb5191a0d0c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e70cc2733b9902ae660f60fce7ba0bb5191a0d0c", "html_url": "https://github.com/rust-lang/rust/commit/e70cc2733b9902ae660f60fce7ba0bb5191a0d0c"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "7b25a3739c3dd6c90b1f1e8e459b77580477d2c4", "filename": "src/librustc_typeck/check/generator_interior.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bf3ebcc98788d805f96b171362d272c93e0a50a0/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf3ebcc98788d805f96b171362d272c93e0a50a0/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fgenerator_interior.rs?ref=bf3ebcc98788d805f96b171362d272c93e0a50a0", "patch": "@@ -23,9 +23,7 @@ use util::nodemap::FxHashMap;\n struct InteriorVisitor<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     fcx: &'a FnCtxt<'a, 'gcx, 'tcx>,\n     cache: FxHashMap<NodeId, Option<Span>>,\n-\n-    // FIXME: Use an ordered hash map here\n-    types: Vec<Ty<'tcx>>,\n+    types: FxHashMap<Ty<'tcx>, usize>,\n     region_maps: Rc<RegionMaps>,\n }\n \n@@ -46,9 +44,9 @@ impl<'a, 'gcx, 'tcx> InteriorVisitor<'a, 'gcx, 'tcx> {\n                        expr, scope, ty, span);\n             }\n \n-            if !self.types.contains(&ty) {\n-                self.types.push(ty);\n-            }\n+            // Map the type to the number of types added before it\n+            let entries = self.types.len();\n+            self.types.entry(&ty).or_insert(entries);\n         } else {\n             debug!(\"no type in expr = {:?}, span = {:?}\", expr, expr.map(|e| e.span));\n         }\n@@ -62,13 +60,21 @@ pub fn resolve_interior<'a, 'gcx, 'tcx>(fcx: &'a FnCtxt<'a, 'gcx, 'tcx>,\n     let body = fcx.tcx.hir.body(body_id);\n     let mut visitor = InteriorVisitor {\n         fcx,\n-        types: Vec::new(),\n+        types: FxHashMap(),\n         cache: FxHashMap(),\n         region_maps: fcx.tcx.region_maps(def_id),\n     };\n     intravisit::walk_body(&mut visitor, body);\n \n-    let tuple = fcx.tcx.intern_tup(&visitor.types, false);\n+    let mut types: Vec<_> = visitor.types.drain().collect();\n+\n+    // Sort types by insertion order\n+    types.sort_by_key(|t| t.1);\n+\n+    // Extract type components\n+    let types: Vec<_> = types.into_iter().map(|t| t.0).collect();\n+\n+    let tuple = fcx.tcx.intern_tup(&types, false);\n \n     debug!(\"Types in generator {:?}, span = {:?}\", tuple, body.value.span);\n "}]}