{"sha": "0bc15ed7c0878f9f314bdd1e02175574637602a5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYzE1ZWQ3YzA4NzhmOWYzMTRiZGQxZTAyMTc1NTc0NjM3NjAyYTU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-06-07T23:05:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-07T23:05:38Z"}, "message": "Rollup merge of #51186 - pnkfelix:remove-unneccessary-nll-stderr-files, r=oli-obk\n\nRemove two redundant .nll.stderr files\n\nIt turns out that the diagnostics generated from NLL for these cases are now exactly the same as that produced by AST borrowck, and thus we can just fallback on those `.stderr` files that already exist for AST-borrowck.\n\nBravo!\n\n(it is a good idea to remove these files, because it slightly reduces the amount of time humans will spend reviewing the .nll.stderr fileset...)\n\n((it *might* be worthwhile trying to change the `compiletest` code to even issue a warning when two such files have equivalent contents... but I am not going so far as to try to implement that right now...))", "tree": {"sha": "3a682527278f4dfad62c7ee88545ccf60397b73a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3a682527278f4dfad62c7ee88545ccf60397b73a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0bc15ed7c0878f9f314bdd1e02175574637602a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbGbpCCRBK7hj4Ov3rIwAAdHIIAI/H/gK0H7YBsi+yWUEbQLBe\nvWF8pOaMWbC+LZYHEgbDQp3fYHn9Qy0BgyRmJ5v7NRLFtqyUXg8bkWG/uCQpIdT4\nw3UzmmIVhl7SS9CQXAon9hrJqaMFFifoaAeNxrBNJb6oq/7MPTYpYySvAZcrWH2k\nMBlYXgC1ty1bDrPwrhglvFdJX31ZUwx4X1igblYOfxZ5CRdjLLbB9Ic0Q/p4LIBN\n3M2GwRQDcb8tVKCUPlRXPW/H8EnwL/43GsWn8uw3OqoCokTXDjrKKBdGQROYSrZn\nw5wkQuHibS4QVz4JT6aMXWeFnrtwMaehKtezYvqgLGvIczi7egybigkIWajCCVo=\n=0MjQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 3a682527278f4dfad62c7ee88545ccf60397b73a\nparent c131bdcaff68d35f96e954baac4340206779335f\nparent 50224ec1a90eff7a3c475fcd1a19c99e10ee5b26\nauthor kennytm <kennytm@gmail.com> 1528412738 +0800\ncommitter GitHub <noreply@github.com> 1528412738 +0800\n\nRollup merge of #51186 - pnkfelix:remove-unneccessary-nll-stderr-files, r=oli-obk\n\nRemove two redundant .nll.stderr files\n\nIt turns out that the diagnostics generated from NLL for these cases are now exactly the same as that produced by AST borrowck, and thus we can just fallback on those `.stderr` files that already exist for AST-borrowck.\n\nBravo!\n\n(it is a good idea to remove these files, because it slightly reduces the amount of time humans will spend reviewing the .nll.stderr fileset...)\n\n((it *might* be worthwhile trying to change the `compiletest` code to even issue a warning when two such files have equivalent contents... but I am not going so far as to try to implement that right now...))\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0bc15ed7c0878f9f314bdd1e02175574637602a5", "html_url": "https://github.com/rust-lang/rust/commit/0bc15ed7c0878f9f314bdd1e02175574637602a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0bc15ed7c0878f9f314bdd1e02175574637602a5/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c131bdcaff68d35f96e954baac4340206779335f", "url": "https://api.github.com/repos/rust-lang/rust/commits/c131bdcaff68d35f96e954baac4340206779335f", "html_url": "https://github.com/rust-lang/rust/commit/c131bdcaff68d35f96e954baac4340206779335f"}, {"sha": "50224ec1a90eff7a3c475fcd1a19c99e10ee5b26", "url": "https://api.github.com/repos/rust-lang/rust/commits/50224ec1a90eff7a3c475fcd1a19c99e10ee5b26", "html_url": "https://github.com/rust-lang/rust/commit/50224ec1a90eff7a3c475fcd1a19c99e10ee5b26"}], "stats": {"total": 45, "additions": 0, "deletions": 45}, "files": [{"sha": "48f23486a317c0cf5685fc7646fe34e4c36d1735", "filename": "src/test/ui/generator/pattern-borrow.nll.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c131bdcaff68d35f96e954baac4340206779335f/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c131bdcaff68d35f96e954baac4340206779335f/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpattern-borrow.nll.stderr?ref=c131bdcaff68d35f96e954baac4340206779335f", "patch": "@@ -1,11 +0,0 @@\n-error[E0626]: borrow may still be in use when generator yields\n-  --> $DIR/pattern-borrow.rs:19:24\n-   |\n-LL |         if let Test::A(ref _a) = test { //~ ERROR borrow may still be in use when generator yields\n-   |                        ^^^^^^\n-LL |             yield ();\n-   |             -------- possible yield occurs here\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0626`."}, {"sha": "a85972fcd7a1c05b6e24577a7352cf3ba92a7ca4", "filename": "src/test/ui/issue-45697.nll.stderr", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/c131bdcaff68d35f96e954baac4340206779335f/src%2Ftest%2Fui%2Fissue-45697.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c131bdcaff68d35f96e954baac4340206779335f/src%2Ftest%2Fui%2Fissue-45697.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-45697.nll.stderr?ref=c131bdcaff68d35f96e954baac4340206779335f", "patch": "@@ -1,34 +0,0 @@\n-error[E0506]: cannot assign to `*y.pointer` because it is borrowed (Ast)\n-  --> $DIR/issue-45697.rs:30:9\n-   |\n-LL |         let z = copy_borrowed_ptr(&mut y);\n-   |                                        - borrow of `*y.pointer` occurs here\n-LL |         *y.pointer += 1;\n-   |         ^^^^^^^^^^^^^^^ assignment to borrowed `*y.pointer` occurs here\n-\n-error[E0503]: cannot use `*y.pointer` because it was mutably borrowed (Mir)\n-  --> $DIR/issue-45697.rs:30:9\n-   |\n-LL |         let z = copy_borrowed_ptr(&mut y);\n-   |                                   ------ borrow of `y` occurs here\n-LL |         *y.pointer += 1;\n-   |         ^^^^^^^^^^^^^^^ use of borrowed `y`\n-...\n-LL |         *z.pointer += 1;\n-   |         --------------- borrow later used here\n-\n-error[E0506]: cannot assign to `*y.pointer` because it is borrowed (Mir)\n-  --> $DIR/issue-45697.rs:30:9\n-   |\n-LL |         let z = copy_borrowed_ptr(&mut y);\n-   |                                   ------ borrow of `*y.pointer` occurs here\n-LL |         *y.pointer += 1;\n-   |         ^^^^^^^^^^^^^^^ assignment to borrowed `*y.pointer` occurs here\n-...\n-LL |         *z.pointer += 1;\n-   |         --------------- borrow later used here\n-\n-error: aborting due to 3 previous errors\n-\n-Some errors occurred: E0503, E0506.\n-For more information about an error, try `rustc --explain E0503`."}]}