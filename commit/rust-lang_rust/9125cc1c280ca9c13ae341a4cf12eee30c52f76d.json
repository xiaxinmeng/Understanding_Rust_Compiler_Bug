{"sha": "9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "node_id": "C_kwDOAAsO6NoAKDkxMjVjYzFjMjgwY2E5YzEzYWUzNDFhNGNmMTJlZWUzMGM1MmY3NmQ", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-29T22:26:28Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-29T22:37:35Z"}, "message": "Resolve clippy::clone_on_copy\n\n    error: using `clone` on type `std::option::Option<u128>` which implements the `Copy` trait\n       --> src/shims/tls.rs:307:24\n        |\n    307 |         let last_key = this.machine.tls.dtors_running[&active_thread].last_dtor_key.clone();\n        |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `this.machine.tls.dtors_running[&active_thread].last_dtor_key`\n        |\n        = note: `-D clippy::clone-on-copy` implied by `-D clippy::all`\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n    error: using `clone` on type `stacked_borrows::Item` which implements the `Copy` trait\n       --> src/stacked_borrows.rs:317:21\n        |\n    317 |                     item.clone(),\n        |                     ^^^^^^^^^^^^ help: try dereferencing it: `*item`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy", "tree": {"sha": "0dc26948ab703b3d655b12bb8ae709127ed13722", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dc26948ab703b3d655b12bb8ae709127ed13722"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmJsaLYACgkQ+boUO5X/\nbYJZOg/+McQGfXy1Mq11lM8Y8PNIZdeVlOiDJQmV1DUY5Z4fM/NokpBhu5F2nmb+\n40qM6JsHSaQK7vznPpom3TaOgAddpdD2c0Dr3AS+WZ0SpSE5TzdmTRsZ+IU444zR\nvMX15mCdxMaWWLnrerdiVRzg40AODJ+ZZegKWhIeWOxfA+YW/k7vXBKpuctpBecj\ne2VvY291Xlv9aQQk93endbtGbRF6RlGMkyd8Fs9Ik7pvwCd2dSQ8klP/GqF5h+Kj\nxzK3GAPOOZPtemwniyBseco8v9cYwW5Mry9PtjldvBiUbBBoHyFWBTBJ5QXlPZWE\nEkO1le73sR0Ql858PkExUW85ZlSsZfbYKUHK9TyRj88v7twpELGQAB12bhjHXtD6\nv/HEM1i4OzJhdAWU7PscEkTb9qFk/NmJBEmPjZazje/qTFzNdMvoBLUmP1g7OIOi\nfm9N+vhc7Z6ft0oeA0RezOfdz/3J8h8OFsPkdO3a6MKmWL/XUm6jKIyGrn5mbj8A\ncLwRgxFUV7vPbW9fWYNoak9jO8vU4CBjFWePHKpRio7nDD4ZmbpaV5sVGd0zh3nv\ndNqO3EwHqFGwdtnP9CDCbrwsLb+P66FuP+OAgPx0j+yHF5WerWQDePxspP58huES\nOInQTmWri5M7RQtfk6577fjK754Yn8FYjCnczusf/50xZgt2daY=\n=4Vyr\n-----END PGP SIGNATURE-----", "payload": "tree 0dc26948ab703b3d655b12bb8ae709127ed13722\nparent 03897452039a749c717b8bf3b7f9bb030035e88d\nauthor David Tolnay <dtolnay@gmail.com> 1651271188 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1651271855 -0700\n\nResolve clippy::clone_on_copy\n\n    error: using `clone` on type `std::option::Option<u128>` which implements the `Copy` trait\n       --> src/shims/tls.rs:307:24\n        |\n    307 |         let last_key = this.machine.tls.dtors_running[&active_thread].last_dtor_key.clone();\n        |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try removing the `clone` call: `this.machine.tls.dtors_running[&active_thread].last_dtor_key`\n        |\n        = note: `-D clippy::clone-on-copy` implied by `-D clippy::all`\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n\n    error: using `clone` on type `stacked_borrows::Item` which implements the `Copy` trait\n       --> src/stacked_borrows.rs:317:21\n        |\n    317 |                     item.clone(),\n        |                     ^^^^^^^^^^^^ help: try dereferencing it: `*item`\n        |\n        = help: for further information visit https://rust-lang.github.io/rust-clippy/master/index.html#clone_on_copy\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "html_url": "https://github.com/rust-lang/rust/commit/9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "03897452039a749c717b8bf3b7f9bb030035e88d", "url": "https://api.github.com/repos/rust-lang/rust/commits/03897452039a749c717b8bf3b7f9bb030035e88d", "html_url": "https://github.com/rust-lang/rust/commit/03897452039a749c717b8bf3b7f9bb030035e88d"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "083dff0e61e8a339d0d58c7a76debe2139e44ed2", "filename": "src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "patch": "@@ -10,7 +10,6 @@\n #![allow(clippy::cast_lossless)]\n // TODO: Uncategorized. Some of these we'll want to fix, some keep ignored.\n #![allow(\n-    clippy::clone_on_copy,\n     clippy::collapsible_else_if,\n     clippy::collapsible_if,\n     clippy::comparison_chain,"}, {"sha": "31a3e12b41bd28c144de0030d046bf0dd946620b", "filename": "src/shims/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "patch": "@@ -304,7 +304,7 @@ trait EvalContextPrivExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         assert!(this.has_terminated(active_thread), \"running TLS dtors for non-terminated thread\");\n         // Fetch next dtor after `key`.\n-        let last_key = this.machine.tls.dtors_running[&active_thread].last_dtor_key.clone();\n+        let last_key = this.machine.tls.dtors_running[&active_thread].last_dtor_key;\n         let dtor = match this.machine.tls.fetch_tls_dtor(last_key, active_thread) {\n             dtor @ Some(_) => dtor,\n             // We ran each dtor once, start over from the beginning."}, {"sha": "d6caba81713cfa64429b0d04b4879615c5be4554", "filename": "src/stacked_borrows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/src%2Fstacked_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9125cc1c280ca9c13ae341a4cf12eee30c52f76d/src%2Fstacked_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstacked_borrows.rs?ref=9125cc1c280ca9c13ae341a4cf12eee30c52f76d", "patch": "@@ -314,7 +314,7 @@ impl<'tcx> Stack {\n         if let SbTag::Tagged(id) = item.tag {\n             if global.tracked_pointer_tags.contains(&id) {\n                 register_diagnostic(NonHaltingDiagnostic::PoppedPointerTag(\n-                    item.clone(),\n+                    *item,\n                     provoking_access,\n                 ));\n             }"}]}