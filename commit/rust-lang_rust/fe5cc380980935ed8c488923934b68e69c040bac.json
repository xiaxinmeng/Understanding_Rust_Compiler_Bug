{"sha": "fe5cc380980935ed8c488923934b68e69c040bac", "node_id": "C_kwDOAAsO6NoAKGZlNWNjMzgwOTgwOTM1ZWQ4YzQ4ODkyMzkzNGI2OGU2OWMwNDBiYWM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-26T01:47:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-26T01:47:34Z"}, "message": "Auto merge of #98989 - dpaoliello:rawdylibbin, r=michaelwoerister\n\nEnable raw-dylib for bin crates\n\nFixes #93842\n\nWhen `raw-dylib` is used in a `bin` crate, we need to collect all of the `raw-dylib` functions, generate the import library and add that to the linker command line.\n\nI also changed the tests so that 1) the C++ dlls are created after the Rust dlls, thus there is no chance of accidentally using them in the Rust linking process and 2) disabled generating import libraries when building with MSVC.", "tree": {"sha": "b8a6b4527167dca1c10ed95491d4e776cdbdc266", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8a6b4527167dca1c10ed95491d4e776cdbdc266"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe5cc380980935ed8c488923934b68e69c040bac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe5cc380980935ed8c488923934b68e69c040bac", "html_url": "https://github.com/rust-lang/rust/commit/fe5cc380980935ed8c488923934b68e69c040bac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe5cc380980935ed8c488923934b68e69c040bac/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5528ce64368630668c8bb0d3d827a9bd66ec21a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5528ce64368630668c8bb0d3d827a9bd66ec21a", "html_url": "https://github.com/rust-lang/rust/commit/c5528ce64368630668c8bb0d3d827a9bd66ec21a"}, {"sha": "fef3b3e27dae698088849d637893f7221057bad7", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef3b3e27dae698088849d637893f7221057bad7", "html_url": "https://github.com/rust-lang/rust/commit/fef3b3e27dae698088849d637893f7221057bad7"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "21f62a6b0096a20cdb76b3e7bafbfafb9d325bb9", "filename": "src/archive.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fe5cc380980935ed8c488923934b68e69c040bac/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe5cc380980935ed8c488923934b68e69c040bac/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=fe5cc380980935ed8c488923934b68e69c040bac", "patch": "@@ -4,7 +4,6 @@ use std::path::{Path, PathBuf};\n use rustc_codegen_ssa::back::archive::ArchiveBuilder;\n use rustc_session::Session;\n \n-use rustc_data_structures::temp_dir::MaybeTempDir;\n use rustc_session::cstore::DllImport;\n \n struct ArchiveConfig<'a> {\n@@ -177,7 +176,16 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         any_members\n     }\n \n-    fn inject_dll_import_lib(&mut self, _lib_name: &str, _dll_imports: &[DllImport], _tmpdir: &MaybeTempDir) {\n+    fn sess(&self) -> &Session {\n+        self.config.sess\n+    }\n+\n+    fn create_dll_import_lib(\n+        _sess: &Session,\n+        _lib_name: &str,\n+        _dll_imports: &[DllImport],\n+        _tmpdir: &Path,\n+    ) -> PathBuf {\n         unimplemented!();\n     }\n }"}]}