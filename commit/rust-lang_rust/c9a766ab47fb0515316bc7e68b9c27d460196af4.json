{"sha": "c9a766ab47fb0515316bc7e68b9c27d460196af4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5YTc2NmFiNDdmYjA1MTUzMTZiYzdlNjhiOWMyN2Q0NjAxOTZhZjQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-25T21:21:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-25T21:21:03Z"}, "message": "Rollup merge of #62887 - estebank:issue-62881, r=petrochenkov\n\nMake the parser TokenStream more resilient after mismatched delimiter recovery\n\nFix #62881, fix #62895.", "tree": {"sha": "92ba0655bff139a033668268b20f252b9f3aa0d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92ba0655bff139a033668268b20f252b9f3aa0d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9a766ab47fb0515316bc7e68b9c27d460196af4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdOh0/CRBK7hj4Ov3rIwAAdHIIADp60vbx6R8FJP5lPceDRoHa\nQFsSPjyxMmPE/thMCE4o9bxk20SKGVgRvtyKr+BwS23S6QL8CxNqNwJQxnCZNSby\nsESAybXehuFhxjGABq+NFnJH3Z7Qt4znoqSWkUuFD3gUOuu70AhPQO3BEm5twMY2\n76RQhE/sGHyVHbEt360zKYxHa/A2NgNmr9NDDYckDpgC7sEnhqiX57zXJCukYZOi\nHv8hGJWHEgHFhmnXc0LHuPqYYebUtslmwU9PQcJkvMj7qbcV+bo2C/8/gnyXKTzq\nrbwrLI3vFNLPOceewBQtVFTfJXmftyAN9V6wbi/0K3D8eE3vzRj0ajI2G5YXiE8=\n=3mBh\n-----END PGP SIGNATURE-----\n", "payload": "tree 92ba0655bff139a033668268b20f252b9f3aa0d2\nparent a534c37b37acba1a39835e25e942efe6f57fbb45\nparent fe2b5bbe6d151ae4713b3bddb4b386f94757435c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564089663 +0200\ncommitter GitHub <noreply@github.com> 1564089663 +0200\n\nRollup merge of #62887 - estebank:issue-62881, r=petrochenkov\n\nMake the parser TokenStream more resilient after mismatched delimiter recovery\n\nFix #62881, fix #62895.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9a766ab47fb0515316bc7e68b9c27d460196af4", "html_url": "https://github.com/rust-lang/rust/commit/c9a766ab47fb0515316bc7e68b9c27d460196af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9a766ab47fb0515316bc7e68b9c27d460196af4/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a534c37b37acba1a39835e25e942efe6f57fbb45", "url": "https://api.github.com/repos/rust-lang/rust/commits/a534c37b37acba1a39835e25e942efe6f57fbb45", "html_url": "https://github.com/rust-lang/rust/commit/a534c37b37acba1a39835e25e942efe6f57fbb45"}, {"sha": "fe2b5bbe6d151ae4713b3bddb4b386f94757435c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe2b5bbe6d151ae4713b3bddb4b386f94757435c", "html_url": "https://github.com/rust-lang/rust/commit/fe2b5bbe6d151ae4713b3bddb4b386f94757435c"}], "stats": {"total": 110, "additions": 109, "deletions": 1}, "files": [{"sha": "a5b6f0d683629342ee2573c018e77ec72ce347c7", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=c9a766ab47fb0515316bc7e68b9c27d460196af4", "patch": "@@ -7671,14 +7671,27 @@ impl<'a> Parser<'a> {\n         let ret = f(self);\n         let last_token = if self.token_cursor.stack.len() == prev {\n             &mut self.token_cursor.frame.last_token\n+        } else if self.token_cursor.stack.get(prev).is_none() {\n+            // This can happen due to a bad interaction of two unrelated recovery mechanisms with\n+            // mismatched delimiters *and* recovery lookahead on the likely typo `pub ident(`\n+            // (#62881).\n+            return Ok((ret?, TokenStream::new(vec![])));\n         } else {\n             &mut self.token_cursor.stack[prev].last_token\n         };\n \n         // Pull out the tokens that we've collected from the call to `f` above.\n         let mut collected_tokens = match *last_token {\n             LastToken::Collecting(ref mut v) => mem::take(v),\n-            LastToken::Was(_) => panic!(\"our vector went away?\"),\n+            LastToken::Was(ref was) => {\n+                let msg = format!(\"our vector went away? - found Was({:?})\", was);\n+                debug!(\"collect_tokens: {}\", msg);\n+                self.sess.span_diagnostic.delay_span_bug(self.token.span, &msg);\n+                // This can happen due to a bad interaction of two unrelated recovery mechanisms\n+                // with mismatched delimiters *and* recovery lookahead on the likely typo\n+                // `pub ident(` (#62895, different but similar to the case above).\n+                return Ok((ret?, TokenStream::new(vec![])));\n+            }\n         };\n \n         // If we're not at EOF our current token wasn't actually consumed by"}, {"sha": "1782c2e375df556e67280e46908340fb2dd8c33a", "filename": "src/test/ui/parser/issue-62881.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62881.rs?ref=c9a766ab47fb0515316bc7e68b9c27d460196af4", "patch": "@@ -0,0 +1,6 @@\n+fn main() {}\n+\n+fn f() -> isize { fn f() -> isize {} pub f<\n+//~^ ERROR missing `fn` or `struct` for function or struct definition\n+//~| ERROR mismatched types\n+//~ ERROR this file contains an un-closed delimiter"}, {"sha": "85c3575fd92885dfae2255072ccbc19b81de9c92", "filename": "src/test/ui/parser/issue-62881.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62881.stderr?ref=c9a766ab47fb0515316bc7e68b9c27d460196af4", "patch": "@@ -0,0 +1,29 @@\n+error: this file contains an un-closed delimiter\n+  --> $DIR/issue-62881.rs:6:53\n+   |\n+LL | fn f() -> isize { fn f() -> isize {} pub f<\n+   |                 - un-closed delimiter\n+...\n+LL |\n+   |                                                     ^\n+\n+error: missing `fn` or `struct` for function or struct definition\n+  --> $DIR/issue-62881.rs:3:41\n+   |\n+LL | fn f() -> isize { fn f() -> isize {} pub f<\n+   |                                         ^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-62881.rs:3:29\n+   |\n+LL | fn f() -> isize { fn f() -> isize {} pub f<\n+   |                      -      ^^^^^ expected isize, found ()\n+   |                      |\n+   |                      this function's body doesn't return\n+   |\n+   = note: expected type `isize`\n+              found type `()`\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "53f17405d79f4aa8ec07b069f532fc31fd0df807", "filename": "src/test/ui/parser/issue-62895.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62895.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62895.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62895.rs?ref=c9a766ab47fb0515316bc7e68b9c27d460196af4", "patch": "@@ -0,0 +1,11 @@\n+fn main() {}\n+\n+fn v() -> isize { //~ ERROR mismatched types\n+mod _ { //~ ERROR expected identifier\n+pub fn g() -> isizee { //~ ERROR cannot find type `isizee` in this scope\n+mod _ { //~ ERROR expected identifier\n+pub    g() -> is //~ ERROR missing `fn` for function definition\n+(), w20);\n+}\n+(), w20); //~ ERROR expected item, found `;`\n+}"}, {"sha": "7def7b562ca593b3dd99a95a159884204c8a69a3", "filename": "src/test/ui/parser/issue-62895.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62895.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c9a766ab47fb0515316bc7e68b9c27d460196af4/src%2Ftest%2Fui%2Fparser%2Fissue-62895.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-62895.stderr?ref=c9a766ab47fb0515316bc7e68b9c27d460196af4", "patch": "@@ -0,0 +1,49 @@\n+error: expected identifier, found reserved identifier `_`\n+  --> $DIR/issue-62895.rs:4:5\n+   |\n+LL | mod _ {\n+   |     ^ expected identifier, found reserved identifier\n+\n+error: expected identifier, found reserved identifier `_`\n+  --> $DIR/issue-62895.rs:6:5\n+   |\n+LL | mod _ {\n+   |     ^ expected identifier, found reserved identifier\n+\n+error: missing `fn` for function definition\n+  --> $DIR/issue-62895.rs:7:4\n+   |\n+LL | pub    g() -> is\n+   |    ^^^^\n+help: add `fn` here to parse `g` as a public function\n+   |\n+LL | pub fn g() -> is\n+   |     ^^\n+\n+error: expected item, found `;`\n+  --> $DIR/issue-62895.rs:10:9\n+   |\n+LL | (), w20);\n+   |         ^ help: remove this semicolon\n+\n+error[E0412]: cannot find type `isizee` in this scope\n+  --> $DIR/issue-62895.rs:5:15\n+   |\n+LL | pub fn g() -> isizee {\n+   |               ^^^^^^ help: a builtin type with a similar name exists: `isize`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-62895.rs:3:11\n+   |\n+LL | fn v() -> isize {\n+   |    -      ^^^^^ expected isize, found ()\n+   |    |\n+   |    this function's body doesn't return\n+   |\n+   = note: expected type `isize`\n+              found type `()`\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors have detailed explanations: E0308, E0412.\n+For more information about an error, try `rustc --explain E0308`."}]}