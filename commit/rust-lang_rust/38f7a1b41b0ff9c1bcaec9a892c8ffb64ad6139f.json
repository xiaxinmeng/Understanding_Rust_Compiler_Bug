{"sha": "38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZjdhMWI0MWIwZmY5YzFiY2FlYzlhODkyYzhmZmI2NGFkNjEzOWY=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-03T01:27:12Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-06T00:53:44Z"}, "message": "rustc: Pass --enable-long-section-names to gcc\n\nThis was quite a curious bug on windows, and the details can be found in the\ncomment I added to src/librustc/back/link.rs", "tree": {"sha": "ddb952d1e048b97812493a3c8484e10f4353f8f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddb952d1e048b97812493a3c8484e10f4353f8f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "comment_count": 20, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "html_url": "https://github.com/rust-lang/rust/commit/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0459ee77d0c764cc27950465cb19053e1456cc95", "url": "https://api.github.com/repos/rust-lang/rust/commits/0459ee77d0c764cc27950465cb19053e1456cc95", "html_url": "https://github.com/rust-lang/rust/commit/0459ee77d0c764cc27950465cb19053e1456cc95"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "fc7044ed88ad53ac064e2b7d5fb65a99d9f5b858", "filename": "src/liblibc/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Fliblibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Fliblibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliblibc%2Flib.rs?ref=38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "patch": "@@ -75,6 +75,8 @@\n #![allow(missing_doc)]\n #![allow(uppercase_variables)]\n \n+#![feature(link_args)] // NOTE: remove after stage0\n+\n #[cfg(test)] extern crate std;\n #[cfg(test)] extern crate test;\n #[cfg(test)] extern crate native;\n@@ -197,6 +199,11 @@ pub use funcs::posix88::unistd::{rmdir, unlink, write};\n #[link(name = \"m\")]\n extern {}\n \n+// NOTE: remove this after a stage0 snap\n+#[cfg(stage0, windows)]\n+#[link_args = \"-Wl,--enable-long-section-names\"]\n+extern {}\n+\n /// A wrapper for a nullable pointer. Don't use this except for interacting\n /// with libc. Basically Option, but without the dependance on libstd.\n // If/when libprim happens, this can be removed in favor of that"}, {"sha": "19ec2d465c2dac74af5c07bcbd4c01e3fa89d3c3", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "patch": "@@ -1127,6 +1127,33 @@ fn link_args(sess: &Session,\n         // DWARF stack unwinding will not work.\n         // This behavior may be overridden by --link-args \"-static-libgcc\"\n         args.push(~\"-shared-libgcc\");\n+\n+        // And here, we see obscure linker flags #45. On windows, it has been\n+        // found to be necessary to have this flag to compile liblibc.\n+        //\n+        // First a bit of background. On Windows, the file format is not ELF,\n+        // but COFF (at least according to LLVM). COFF doesn't officially allow\n+        // for section names over 8 characters, apparently. Our metadata\n+        // section, \".note.rustc\", you'll note is over 8 characters.\n+        //\n+        // On more recent versions of gcc on mingw, apparently the section name\n+        // is *not* truncated, but rather stored elsewhere in a separate lookup\n+        // table. On older versions of gcc, they apparently always truncated the\n+        // section names (at least in some cases). Truncating the section name\n+        // actually creates \"invalid\" objects [1] [2], but only for some\n+        // introspection tools, not in terms of whether it can be loaded.\n+        //\n+        // Long story shory, passing this flag forces the linker to *not*\n+        // truncate section names (so we can find the metadata section after\n+        // it's compiled). The real kicker is that rust compiled just fine on\n+        // windows for quite a long time *without* this flag, so I have no idea\n+        // why it suddenly started failing for liblibc. Regardless, we\n+        // definitely don't want section name truncation, so we're keeping this\n+        // flag for windows.\n+        //\n+        // [1] - https://sourceware.org/bugzilla/show_bug.cgi?id=13130\n+        // [2] - https://code.google.com/p/go/issues/detail?id=2139\n+        args.push(~\"-Wl,--enable-long-section-names\");\n     }\n \n     if sess.targ_cfg.os == abi::OsAndroid {"}, {"sha": "8658950f1744364dd2398e77d29a2a155ec34606", "filename": "src/test/run-make/lto-smoke-c/Makefile", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke-c%2FMakefile?ref=38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "patch": "@@ -4,6 +4,9 @@ ifneq ($(shell uname),Darwin)\n \tEXTRAFLAGS := -lm -lrt -ldl -lpthread\n endif\n \n+# Apparently older versions of GCC segfault if -g is passed...\n+CC := $(CC:-g=)\n+\n all:\n \t$(RUSTC) foo.rs -Z lto\n \tln -s $(call STATICLIB,foo-*) $(call STATICLIB,foo)"}, {"sha": "1bb1901670035c4ad6c04084ca4fc81af281faaa", "filename": "src/test/run-make/lto-smoke-c/foo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Ftest%2Frun-make%2Flto-smoke-c%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f/src%2Ftest%2Frun-make%2Flto-smoke-c%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Flto-smoke-c%2Ffoo.rs?ref=38f7a1b41b0ff9c1bcaec9a892c8ffb64ad6139f", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[crate_type = \"staticlib\"];\n+#![crate_type = \"staticlib\"]\n \n #[no_mangle]\n pub extern \"C\" fn foo() {}"}]}