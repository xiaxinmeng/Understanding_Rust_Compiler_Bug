{"sha": "b68ef1231daf6eb1abeb06a30dc89af1254b833d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2OGVmMTIzMWRhZjZlYjFhYmViMDZhMzBkYzg5YWYxMjU0YjgzM2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-21T15:17:21Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-07-21T15:17:21Z"}, "message": "More Rustic API for Env", "tree": {"sha": "6c134b0dc7c2d2cb33d08fd8f73bff594453b4ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c134b0dc7c2d2cb33d08fd8f73bff594453b4ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b68ef1231daf6eb1abeb06a30dc89af1254b833d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b68ef1231daf6eb1abeb06a30dc89af1254b833d", "html_url": "https://github.com/rust-lang/rust/commit/b68ef1231daf6eb1abeb06a30dc89af1254b833d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b68ef1231daf6eb1abeb06a30dc89af1254b833d/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb613c74da3b82529ed269817b388a3a37dff1fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb613c74da3b82529ed269817b388a3a37dff1fc", "html_url": "https://github.com/rust-lang/rust/commit/eb613c74da3b82529ed269817b388a3a37dff1fc"}], "stats": {"total": 28, "additions": 8, "deletions": 20}, "files": [{"sha": "2aafb99654917096833e0d5e85044c651bc036c3", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=b68ef1231daf6eb1abeb06a30dc89af1254b833d", "patch": "@@ -222,7 +222,7 @@ impl From<Fixture> for FileMeta {\n                 .edition\n                 .as_ref()\n                 .map_or(Edition::Edition2018, |v| Edition::from_str(&v).unwrap()),\n-            env: Env::from(f.env.iter()),\n+            env: f.env.into_iter().collect(),\n         }\n     }\n }"}, {"sha": "6f2e5cfc76e72dde42ebfea049fb6c1387ffbc0c", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=b68ef1231daf6eb1abeb06a30dc89af1254b833d", "patch": "@@ -6,7 +6,7 @@\n //! actual IO. See `vfs` and `project_model` in the `rust-analyzer` crate for how\n //! actual IO is done and lowered to input.\n \n-use std::{fmt, ops, str::FromStr, sync::Arc};\n+use std::{fmt, iter::FromIterator, ops, str::FromStr, sync::Arc};\n \n use ra_cfg::CfgOptions;\n use ra_syntax::SmolStr;\n@@ -298,18 +298,9 @@ impl fmt::Display for Edition {\n     }\n }\n \n-impl<'a, T> From<T> for Env\n-where\n-    T: Iterator<Item = (&'a String, &'a String)>,\n-{\n-    fn from(iter: T) -> Self {\n-        let mut result = Self::default();\n-\n-        for (k, v) in iter {\n-            result.entries.insert(k.to_owned(), v.to_owned());\n-        }\n-\n-        result\n+impl FromIterator<(String, String)> for Env {\n+    fn from_iter<T: IntoIterator<Item = (String, String)>>(iter: T) -> Self {\n+        Env { entries: FromIterator::from_iter(iter) }\n     }\n }\n "}, {"sha": "c7e0f4b58fbeca0088ffc4530ece1dc72d699445", "filename": "crates/ra_ide/src/mock_analysis.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmock_analysis.rs?ref=b68ef1231daf6eb1abeb06a30dc89af1254b833d", "patch": "@@ -2,7 +2,7 @@\n use std::sync::Arc;\n \n use ra_cfg::CfgOptions;\n-use ra_db::{CrateName, Env, FileSet, SourceRoot, VfsPath};\n+use ra_db::{CrateName, FileSet, SourceRoot, VfsPath};\n use test_utils::{\n     extract_annotations, extract_range_or_offset, Fixture, RangeOrOffset, CURSOR_MARKER,\n };\n@@ -110,7 +110,7 @@ impl MockAnalysis {\n                 data.edition.and_then(|it| it.parse().ok()).unwrap_or(Edition::Edition2018);\n \n             let file_id = FileId(i as u32 + 1);\n-            let env = Env::from(data.env.iter());\n+            let env = data.env.into_iter().collect();\n             if path == \"/lib.rs\" || path == \"/main.rs\" {\n                 root_crate = Some(crate_graph.add_crate_root(\n                     file_id,"}, {"sha": "6da4d7928afb80d005c1ea2554d618efaaaa3861", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b68ef1231daf6eb1abeb06a30dc89af1254b833d/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=b68ef1231daf6eb1abeb06a30dc89af1254b833d", "patch": "@@ -258,10 +258,7 @@ impl ProjectWorkspace {\n                         let file_path = &krate.root_module;\n                         let file_id = load(&file_path)?;\n \n-                        let mut env = Env::default();\n-                        for (k, v) in &krate.env {\n-                            env.set(k, v.clone());\n-                        }\n+                        let env = krate.env.clone().into_iter().collect();\n                         let proc_macro = krate\n                             .proc_macro_dylib_path\n                             .clone()"}]}