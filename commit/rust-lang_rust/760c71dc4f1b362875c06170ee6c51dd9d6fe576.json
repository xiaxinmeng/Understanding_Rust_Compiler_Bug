{"sha": "760c71dc4f1b362875c06170ee6c51dd9d6fe576", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MGM3MWRjNGYxYjM2Mjg3NWMwNjE3MGVlNmM1MWRkOWQ2ZmU1NzY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-05-28T00:03:04Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-06-02T01:48:07Z"}, "message": "syntax: Add an each_view_item method on traits", "tree": {"sha": "30d307644fdce80463dff099e2d450c3eb8629e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30d307644fdce80463dff099e2d450c3eb8629e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/760c71dc4f1b362875c06170ee6c51dd9d6fe576", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/760c71dc4f1b362875c06170ee6c51dd9d6fe576", "html_url": "https://github.com/rust-lang/rust/commit/760c71dc4f1b362875c06170ee6c51dd9d6fe576", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/760c71dc4f1b362875c06170ee6c51dd9d6fe576/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "231aea6d6e464f2676eba4ce4c30f2126fe262b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/231aea6d6e464f2676eba4ce4c30f2126fe262b7", "html_url": "https://github.com/rust-lang/rust/commit/231aea6d6e464f2676eba4ce4c30f2126fe262b7"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "fb517317a4f329ce13ec6c329dd3ddaeb9e4be31", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/760c71dc4f1b362875c06170ee6c51dd9d6fe576/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/760c71dc4f1b362875c06170ee6c51dd9d6fe576/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=760c71dc4f1b362875c06170ee6c51dd9d6fe576", "patch": "@@ -560,6 +560,21 @@ pub fn walk_pat(pat: @pat, it: &fn(@pat) -> bool) -> bool {\n     }\n }\n \n+pub trait EachViewItem {\n+    pub fn each_view_item(&self, f: @fn(@ast::view_item) -> bool) -> bool;\n+}\n+\n+impl EachViewItem for ast::crate {\n+    fn each_view_item(&self, f: @fn(@ast::view_item) -> bool) -> bool {\n+        let broke = @mut false;\n+        let vtor: visit::vt<()> = visit::mk_simple_visitor(@visit::SimpleVisitor {\n+            visit_view_item: |vi| { *broke = f(vi); }, ..*visit::default_simple_visitor()\n+        });\n+        visit::visit_crate(self, (), vtor);\n+        true\n+    }\n+}\n+\n pub fn view_path_id(p: @view_path) -> node_id {\n     match p.node {\n       view_path_simple(_, _, id) |"}]}