{"sha": "de336e17e4800299aa21d7531c351d7ec1eab6b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMzM2ZTE3ZTQ4MDAyOTlhYTIxZDc1MzFjMzUxZDdlYzFlYWI2Yjk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-04-30T18:54:04Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-06-30T16:52:32Z"}, "message": "Fix trap_unreachable_ret_value", "tree": {"sha": "3d25d204cc80430ac93e7352429fa2661c365b0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d25d204cc80430ac93e7352429fa2661c365b0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de336e17e4800299aa21d7531c351d7ec1eab6b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de336e17e4800299aa21d7531c351d7ec1eab6b9", "html_url": "https://github.com/rust-lang/rust/commit/de336e17e4800299aa21d7531c351d7ec1eab6b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de336e17e4800299aa21d7531c351d7ec1eab6b9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5262fec06d5cc1971ffdeaf63553c270dad69b85", "url": "https://api.github.com/repos/rust-lang/rust/commits/5262fec06d5cc1971ffdeaf63553c270dad69b85", "html_url": "https://github.com/rust-lang/rust/commit/5262fec06d5cc1971ffdeaf63553c270dad69b85"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "4b7f64ce0a91138e4d1a312d9a4d61e44e397ab6", "filename": "src/trap.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de336e17e4800299aa21d7531c351d7ec1eab6b9/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de336e17e4800299aa21d7531c351d7ec1eab6b9/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=de336e17e4800299aa21d7531c351d7ec1eab6b9", "patch": "@@ -56,7 +56,9 @@ pub(crate) fn trap_unreachable_ret_value<'tcx>(\n     dest_layout: TyAndLayout<'tcx>,\n     msg: impl AsRef<str>,\n ) -> CValue<'tcx> {\n-    trap_unreachable(fx, msg);\n+    codegen_print(fx, msg.as_ref());\n+    let true_ = fx.bcx.ins().iconst(types::I32, 1);\n+    fx.bcx.ins().trapnz(true_, TrapCode::UnreachableCodeReached);\n     CValue::by_ref(Pointer::const_addr(fx, 0), dest_layout)\n }\n "}]}