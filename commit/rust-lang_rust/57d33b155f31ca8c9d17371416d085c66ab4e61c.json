{"sha": "57d33b155f31ca8c9d17371416d085c66ab4e61c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3ZDMzYjE1NWYzMWNhOGM5ZDE3MzcxNDE2ZDA4NWM2NmFiNGU2MWM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-05T05:52:47Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-10-15T03:23:27Z"}, "message": "Remove custom `PartialEq` impls for `LocalInternedString`.\n\nThis is on-trend with the recent changes simplifying\n`LocalInternedString` and reducing its use.", "tree": {"sha": "bc2fec898b9135a9d417eb7c968ed060b98415fb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bc2fec898b9135a9d417eb7c968ed060b98415fb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57d33b155f31ca8c9d17371416d085c66ab4e61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57d33b155f31ca8c9d17371416d085c66ab4e61c", "html_url": "https://github.com/rust-lang/rust/commit/57d33b155f31ca8c9d17371416d085c66ab4e61c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57d33b155f31ca8c9d17371416d085c66ab4e61c/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20cc75272619cc452e3ae6c131e61974f6aa9929", "url": "https://api.github.com/repos/rust-lang/rust/commits/20cc75272619cc452e3ae6c131e61974f6aa9929", "html_url": "https://github.com/rust-lang/rust/commit/20cc75272619cc452e3ae6c131e61974f6aa9929"}], "stats": {"total": 28, "additions": 2, "deletions": 26}, "files": [{"sha": "5f79050c5b8c33a718f73e698ff0cd78953d3d50", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57d33b155f31ca8c9d17371416d085c66ab4e61c/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d33b155f31ca8c9d17371416d085c66ab4e61c/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=57d33b155f31ca8c9d17371416d085c66ab4e61c", "patch": "@@ -769,7 +769,7 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n             }\n \n             if let Some(allowed) = allow_features.as_ref() {\n-                if allowed.iter().find(|f| *f == name.as_str()).is_none() {\n+                if allowed.iter().find(|&f| f == &name.as_str() as &str).is_none() {\n                     span_err!(span_handler, mi.span(), E0725,\n                               \"the feature `{}` is not in the list of allowed features\",\n                               name);"}, {"sha": "95588d84f3879a0a996785a9990dc9f5bccb831b", "filename": "src/libsyntax/parse/literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/57d33b155f31ca8c9d17371416d085c66ab4e61c/src%2Flibsyntax%2Fparse%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d33b155f31ca8c9d17371416d085c66ab4e61c/src%2Flibsyntax%2Fparse%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fliteral.rs?ref=57d33b155f31ca8c9d17371416d085c66ab4e61c", "patch": "@@ -204,7 +204,7 @@ impl LitKind {\n         let (kind, symbol, suffix) = match *self {\n             LitKind::Str(symbol, ast::StrStyle::Cooked) => {\n                 // Don't re-intern unless the escaped string is different.\n-                let s = &symbol.as_str();\n+                let s: &str = &symbol.as_str();\n                 let escaped = s.escape_default().to_string();\n                 let symbol = if escaped == *s { symbol } else { Symbol::intern(&escaped) };\n                 (token::Str, symbol, None)"}, {"sha": "c57a933721f8d81b92f111f81aae42aad58a50ed", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/57d33b155f31ca8c9d17371416d085c66ab4e61c/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57d33b155f31ca8c9d17371416d085c66ab4e61c/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=57d33b155f31ca8c9d17371416d085c66ab4e61c", "patch": "@@ -1201,30 +1201,6 @@ impl<T: std::ops::Deref<Target = str>> std::cmp::PartialEq<T> for LocalInternedS\n     }\n }\n \n-impl std::cmp::PartialEq<LocalInternedString> for str {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        self == other.string\n-    }\n-}\n-\n-impl<'a> std::cmp::PartialEq<LocalInternedString> for &'a str {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        *self == other.string\n-    }\n-}\n-\n-impl std::cmp::PartialEq<LocalInternedString> for String {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        self == other.string\n-    }\n-}\n-\n-impl<'a> std::cmp::PartialEq<LocalInternedString> for &'a String {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        *self == other.string\n-    }\n-}\n-\n impl !Send for LocalInternedString {}\n impl !Sync for LocalInternedString {}\n "}]}