{"sha": "c1766c6372e5bebf8e1198172abef0519d62ffe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxNzY2YzYzNzJlNWJlYmY4ZTExOTgxNzJhYmVmMDUxOWQ2MmZmZTk=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-19T07:47:18Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-19T07:47:18Z"}, "message": "fix static_ptr_ty for foreign statics, and more comments in check_unsafety", "tree": {"sha": "846aae3d8161510755526f7e01d33f8ed81007d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/846aae3d8161510755526f7e01d33f8ed81007d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1766c6372e5bebf8e1198172abef0519d62ffe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1766c6372e5bebf8e1198172abef0519d62ffe9", "html_url": "https://github.com/rust-lang/rust/commit/c1766c6372e5bebf8e1198172abef0519d62ffe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1766c6372e5bebf8e1198172abef0519d62ffe9/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb33f956c3a4b05b4eb8bd2ccce4c9ba11862919", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb33f956c3a4b05b4eb8bd2ccce4c9ba11862919", "html_url": "https://github.com/rust-lang/rust/commit/cb33f956c3a4b05b4eb8bd2ccce4c9ba11862919"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a2a7ff827ca74ad7f3529542dfe94ecf26c2afeb", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c1766c6372e5bebf8e1198172abef0519d62ffe9/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1766c6372e5bebf8e1198172abef0519d62ffe9/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=c1766c6372e5bebf8e1198172abef0519d62ffe9", "patch": "@@ -529,8 +529,11 @@ impl<'tcx> TyCtxt<'tcx> {\n         // Make sure that any constants in the static's type are evaluated.\n         let static_ty = self.normalize_erasing_regions(ty::ParamEnv::empty(), self.type_of(def_id));\n \n+        // Make sure that accesses to unsafe statics end up using raw pointers.\n         if self.is_mutable_static(def_id) {\n             self.mk_mut_ptr(static_ty)\n+        } else if self.is_foreign_item(def_id) {\n+            self.mk_imm_ptr(static_ty)\n         } else {\n             self.mk_imm_ref(self.lifetimes.re_erased, static_ty)\n         }"}, {"sha": "3d68b862df2d096138b5e9d30ac6c6c275869824", "filename": "compiler/rustc_mir/src/transform/check_unsafety.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c1766c6372e5bebf8e1198172abef0519d62ffe9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1766c6372e5bebf8e1198172abef0519d62ffe9/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_unsafety.rs?ref=c1766c6372e5bebf8e1198172abef0519d62ffe9", "patch": "@@ -204,6 +204,9 @@ impl<'a, 'tcx> Visitor<'tcx> for UnsafetyChecker<'a, 'tcx> {\n             if let [] = proj_base {\n                 let decl = &self.body.local_decls[place.local];\n                 if decl.internal {\n+                    // If the projection root is an artifical local that we introduced when\n+                    // desugaring `static`, give a more specific error message\n+                    // (avoid the general \"raw pointer\" clause below, that would only be confusing).\n                     if let Some(box LocalInfo::StaticRef { def_id, .. }) = decl.local_info {\n                         if self.tcx.is_mutable_static(def_id) {\n                             self.require_unsafe("}]}