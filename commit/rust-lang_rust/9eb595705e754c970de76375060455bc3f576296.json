{"sha": "9eb595705e754c970de76375060455bc3f576296", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllYjU5NTcwNWU3NTRjOTcwZGU3NjM3NTA2MDQ1NWJjM2Y1NzYyOTY=", "commit": {"author": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-07-08T19:32:11Z"}, "committer": {"name": "Jacob Hughes", "email": "j@jacobhughes.me", "date": "2020-09-23T01:55:32Z"}, "message": "Update src/librustc_typeck/astconv.rs\n\nCo-authored-by: varkor <github@varkor.com>", "tree": {"sha": "f3d84af078a81c171c9bf3730649e51486b9a91a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3d84af078a81c171c9bf3730649e51486b9a91a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9eb595705e754c970de76375060455bc3f576296", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb595705e754c970de76375060455bc3f576296", "html_url": "https://github.com/rust-lang/rust/commit/9eb595705e754c970de76375060455bc3f576296", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9eb595705e754c970de76375060455bc3f576296/comments", "author": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exrook", "id": 534850, "node_id": "MDQ6VXNlcjUzNDg1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/534850?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exrook", "html_url": "https://github.com/exrook", "followers_url": "https://api.github.com/users/exrook/followers", "following_url": "https://api.github.com/users/exrook/following{/other_user}", "gists_url": "https://api.github.com/users/exrook/gists{/gist_id}", "starred_url": "https://api.github.com/users/exrook/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exrook/subscriptions", "organizations_url": "https://api.github.com/users/exrook/orgs", "repos_url": "https://api.github.com/users/exrook/repos", "events_url": "https://api.github.com/users/exrook/events{/privacy}", "received_events_url": "https://api.github.com/users/exrook/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41eec9065aef513cc41d8e2297c4f469fd7029b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/41eec9065aef513cc41d8e2297c4f469fd7029b7", "html_url": "https://github.com/rust-lang/rust/commit/41eec9065aef513cc41d8e2297c4f469fd7029b7"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "46b8b2e14c7363daef2709978e325d58066ae5d9", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9eb595705e754c970de76375060455bc3f576296/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9eb595705e754c970de76375060455bc3f576296/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=9eb595705e754c970de76375060455bc3f576296", "patch": "@@ -366,7 +366,13 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                             param.def_id,\n                             Some(arg.id()),\n                             arg.span(),\n-                            |_, _| (),\n+                            |_, _| {\n+                                // Default generic parameters may not be marked\n+                                // with stability attributes, i.e. when the\n+                                // default parameter was defined at the same time\n+                                // as the rest of the type. As such, we ignore missing\n+                                // stability attributes.\n+                            },\n                         )\n                     }\n                     if let (hir::TyKind::Infer, false) = (&ty.kind, self.allow_ty_infer()) {"}]}