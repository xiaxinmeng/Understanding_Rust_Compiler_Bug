{"sha": "41cbbb656a9d29305fd03fb09d261cbfa0766f7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxY2JiYjY1NmE5ZDI5MzA1ZmQwM2ZiMDlkMjYxY2JmYTA3NjZmN2E=", "commit": {"author": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2013-12-24T07:44:58Z"}, "committer": {"name": "Jeff Olson", "email": "olson.jeffery@gmail.com", "date": "2013-12-24T07:44:58Z"}, "message": "extra: impl IterBytes for uuid::Uuid", "tree": {"sha": "c9fd50c2c6f4bc413a541d07fa124a2f4447bd52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9fd50c2c6f4bc413a541d07fa124a2f4447bd52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41cbbb656a9d29305fd03fb09d261cbfa0766f7a", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41cbbb656a9d29305fd03fb09d261cbfa0766f7a", "html_url": "https://github.com/rust-lang/rust/commit/41cbbb656a9d29305fd03fb09d261cbfa0766f7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41cbbb656a9d29305fd03fb09d261cbfa0766f7a/comments", "author": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "committer": {"login": "olsonjeffery", "id": 10408, "node_id": "MDQ6VXNlcjEwNDA4", "avatar_url": "https://avatars.githubusercontent.com/u/10408?v=4", "gravatar_id": "", "url": "https://api.github.com/users/olsonjeffery", "html_url": "https://github.com/olsonjeffery", "followers_url": "https://api.github.com/users/olsonjeffery/followers", "following_url": "https://api.github.com/users/olsonjeffery/following{/other_user}", "gists_url": "https://api.github.com/users/olsonjeffery/gists{/gist_id}", "starred_url": "https://api.github.com/users/olsonjeffery/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/olsonjeffery/subscriptions", "organizations_url": "https://api.github.com/users/olsonjeffery/orgs", "repos_url": "https://api.github.com/users/olsonjeffery/repos", "events_url": "https://api.github.com/users/olsonjeffery/events{/privacy}", "received_events_url": "https://api.github.com/users/olsonjeffery/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "619c4fce891f31ec234a3ac162d40d3def95956e", "url": "https://api.github.com/repos/rust-lang/rust/commits/619c4fce891f31ec234a3ac162d40d3def95956e", "html_url": "https://github.com/rust-lang/rust/commit/619c4fce891f31ec234a3ac162d40d3def95956e"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "cf40a59a8c507f6e45fce5398981e8c923ef4d54", "filename": "src/libextra/uuid.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/41cbbb656a9d29305fd03fb09d261cbfa0766f7a/src%2Flibextra%2Fuuid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41cbbb656a9d29305fd03fb09d261cbfa0766f7a/src%2Flibextra%2Fuuid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fuuid.rs?ref=41cbbb656a9d29305fd03fb09d261cbfa0766f7a", "patch": "@@ -65,6 +65,7 @@ use std::rand;\n use std::rand::Rng;\n use std::cmp::Eq;\n use std::cast::{transmute,transmute_copy};\n+use std::to_bytes::{IterBytes, Cb};\n \n use serialize::{Encoder, Encodable, Decoder, Decodable};\n \n@@ -104,6 +105,11 @@ pub struct Uuid {\n     /// The 128-bit number stored in 16 bytes\n     bytes: UuidBytes\n }\n+impl IterBytes for Uuid {\n+    fn iter_bytes(&self, _: bool, f: Cb) -> bool {\n+        f(self.bytes.slice_from(0))\n+    }\n+}\n \n /// A UUID stored as fields (identical to UUID, used only for conversions)\n struct UuidFields {\n@@ -796,6 +802,17 @@ mod test {\n         let u2 = Decodable::decode(&mut ebml::reader::Decoder(doc));\n         assert_eq!(u, u2);\n     }\n+\n+    #[test]\n+    fn test_iterbytes_impl_for_uuid() {\n+        use std::hashmap::HashSet;\n+        let mut set = HashSet::new();\n+        let id1 = Uuid::new_v4();\n+        let id2 = Uuid::new_v4();\n+        set.insert(id1);\n+        assert!(set.contains(&id1));\n+        assert!(!set.contains(&id2));\n+    }\n }\n \n #[cfg(test)]"}]}