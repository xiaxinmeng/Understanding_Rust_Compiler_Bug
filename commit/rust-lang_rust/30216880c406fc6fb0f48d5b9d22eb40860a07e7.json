{"sha": "30216880c406fc6fb0f48d5b9d22eb40860a07e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMjE2ODgwYzQwNmZjNmZiMGY0OGQ1YjlkMjJlYjQwODYwYTA3ZTc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-17T17:14:13Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-17T17:14:13Z"}, "message": "Minor API cleanup", "tree": {"sha": "bbb36eca603d78d233f985b0d26a2386609f79d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbb36eca603d78d233f985b0d26a2386609f79d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30216880c406fc6fb0f48d5b9d22eb40860a07e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30216880c406fc6fb0f48d5b9d22eb40860a07e7", "html_url": "https://github.com/rust-lang/rust/commit/30216880c406fc6fb0f48d5b9d22eb40860a07e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30216880c406fc6fb0f48d5b9d22eb40860a07e7/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4368a3bcebca131dd5c7ccecc54e64b3c5bd0c78", "url": "https://api.github.com/repos/rust-lang/rust/commits/4368a3bcebca131dd5c7ccecc54e64b3c5bd0c78", "html_url": "https://github.com/rust-lang/rust/commit/4368a3bcebca131dd5c7ccecc54e64b3c5bd0c78"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "f17734e41b98372e8e2784924a9a4458d17dac44", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/30216880c406fc6fb0f48d5b9d22eb40860a07e7/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30216880c406fc6fb0f48d5b9d22eb40860a07e7/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=30216880c406fc6fb0f48d5b9d22eb40860a07e7", "patch": "@@ -1284,14 +1284,12 @@ impl Impl {\n         impls.for_trait(trait_.id).map(Self::from).collect()\n     }\n \n+    // FIXME: the return type is wrong. This should be a hir version of\n+    // `TraitRef` (ie, resolved `TypeRef`).\n     pub fn target_trait(self, db: &dyn HirDatabase) -> Option<TypeRef> {\n         db.impl_data(self.id).target_trait.clone()\n     }\n \n-    pub fn target_type(self, db: &dyn HirDatabase) -> TypeRef {\n-        db.impl_data(self.id).target_type.clone()\n-    }\n-\n     pub fn target_ty(self, db: &dyn HirDatabase) -> Type {\n         let impl_data = db.impl_data(self.id);\n         let resolver = self.id.resolver(db.upcast());"}]}