{"sha": "43a3348fd94568b78db7755bb5196fc73fa65214", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzYTMzNDhmZDk0NTY4Yjc4ZGI3NzU1YmI1MTk2ZmM3M2ZhNjUyMTQ=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-12-26T17:26:53Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2020-02-14T22:40:02Z"}, "message": "Arena allocate the result of mir_borrowck", "tree": {"sha": "b42be70d3aa49d2f040d7f6fbef3410faa77c0a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b42be70d3aa49d2f040d7f6fbef3410faa77c0a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43a3348fd94568b78db7755bb5196fc73fa65214", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43a3348fd94568b78db7755bb5196fc73fa65214", "html_url": "https://github.com/rust-lang/rust/commit/43a3348fd94568b78db7755bb5196fc73fa65214", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43a3348fd94568b78db7755bb5196fc73fa65214/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "378b5b4ca06d027d9dfff807fe0fff4bc5e62806", "url": "https://api.github.com/repos/rust-lang/rust/commits/378b5b4ca06d027d9dfff807fe0fff4bc5e62806", "html_url": "https://github.com/rust-lang/rust/commit/378b5b4ca06d027d9dfff807fe0fff4bc5e62806"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "33cbf6ede0a0124853f3af2c68b8218c541ef557", "filename": "src/librustc/arena.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc%2Farena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc%2Farena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Farena.rs?ref=43a3348fd94568b78db7755bb5196fc73fa65214", "patch": "@@ -35,7 +35,8 @@ macro_rules! arena_types {\n                 rustc::mir::Promoted,\n                 rustc::mir::BodyAndCache<$tcx>\n             >,\n-            [] tables: rustc::ty::TypeckTables<$tcx>,\n+            [decode] tables: rustc::ty::TypeckTables<$tcx>,\n+            [decode] borrowck_result: rustc::mir::BorrowCheckResult<$tcx>,\n             [] const_allocs: rustc::mir::interpret::Allocation,\n             [] vtable_method: Option<(\n                 rustc_hir::def_id::DefId,"}, {"sha": "5e279975d152d21d4a3f5f137ba3be771749584f", "filename": "src/librustc/query/mod.rs", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fquery%2Fmod.rs?ref=43a3348fd94568b78db7755bb5196fc73fa65214", "patch": "@@ -419,13 +419,6 @@ rustc_queries! {\n         query typeck_tables_of(key: DefId) -> &'tcx ty::TypeckTables<'tcx> {\n             desc { |tcx| \"type-checking `{}`\", tcx.def_path_str(key) }\n             cache_on_disk_if { key.is_local() }\n-            load_cached(tcx, id) {\n-                let typeck_tables: Option<ty::TypeckTables<'tcx>> = tcx\n-                    .queries.on_disk_cache\n-                    .try_load_query_result(tcx, id);\n-\n-                typeck_tables.map(|tables| &*tcx.arena.alloc(tables))\n-            }\n         }\n         query diagnostic_only_typeck_tables_of(key: DefId) -> &'tcx ty::TypeckTables<'tcx> {\n             cache_on_disk_if { key.is_local() }\n@@ -456,9 +449,13 @@ rustc_queries! {\n     BorrowChecking {\n         /// Borrow-checks the function body. If this is a closure, returns\n         /// additional requirements that the closure's creator must verify.\n-        query mir_borrowck(key: DefId) -> mir::BorrowCheckResult<'tcx> {\n+        query mir_borrowck(key: DefId) -> &'tcx mir::BorrowCheckResult<'tcx> {\n             desc { |tcx| \"borrow-checking `{}`\", tcx.def_path_str(key) }\n-            cache_on_disk_if(tcx, _) { key.is_local() && tcx.is_closure(key) }\n+            cache_on_disk_if(tcx, opt_result) {\n+                key.is_local()\n+                    && (tcx.is_closure(key)\n+                        || opt_result.map_or(false, |r| !r.concrete_opaque_types.is_empty()))\n+            }\n         }\n     }\n "}, {"sha": "07d3a12fb20d8c7026077e350dc7d451f7481a76", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=43a3348fd94568b78db7755bb5196fc73fa65214", "patch": "@@ -90,7 +90,7 @@ pub fn provide(providers: &mut Providers<'_>) {\n     *providers = Providers { mir_borrowck, ..*providers };\n }\n \n-fn mir_borrowck(tcx: TyCtxt<'_>, def_id: DefId) -> BorrowCheckResult<'_> {\n+fn mir_borrowck(tcx: TyCtxt<'_>, def_id: DefId) -> &BorrowCheckResult<'_> {\n     let (input_body, promoted) = tcx.mir_validated(def_id);\n     debug!(\"run query mir_borrowck: {}\", tcx.def_path_str(def_id));\n \n@@ -101,7 +101,7 @@ fn mir_borrowck(tcx: TyCtxt<'_>, def_id: DefId) -> BorrowCheckResult<'_> {\n     });\n     debug!(\"mir_borrowck done\");\n \n-    opt_closure_req\n+    tcx.arena.alloc(opt_closure_req)\n }\n \n fn do_mir_borrowck<'a, 'tcx>("}, {"sha": "67dbf8a2b6d24c9ae84fe6a152f983a3b1bab46b", "filename": "src/librustc_mir/borrow_check/type_check/mod.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43a3348fd94568b78db7755bb5196fc73fa65214/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ftype_check%2Fmod.rs?ref=43a3348fd94568b78db7755bb5196fc73fa65214", "patch": "@@ -2512,7 +2512,8 @@ impl<'a, 'tcx> TypeChecker<'a, 'tcx> {\n         substs: SubstsRef<'tcx>,\n         location: Location,\n     ) -> ty::InstantiatedPredicates<'tcx> {\n-        if let Some(closure_region_requirements) = tcx.mir_borrowck(def_id).closure_requirements {\n+        if let Some(ref closure_region_requirements) = tcx.mir_borrowck(def_id).closure_requirements\n+        {\n             let closure_constraints = QueryRegionConstraints {\n                 outlives: closure_region_requirements.apply_requirements(tcx, def_id, substs),\n "}]}