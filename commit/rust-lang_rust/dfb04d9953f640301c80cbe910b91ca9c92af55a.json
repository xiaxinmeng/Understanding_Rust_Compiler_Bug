{"sha": "dfb04d9953f640301c80cbe910b91ca9c92af55a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRmYjA0ZDk5NTNmNjQwMzAxYzgwY2JlOTEwYjkxY2E5YzkyYWY1NWE=", "commit": {"author": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2013-09-06T02:03:04Z"}, "committer": {"name": "David Creswick", "email": "dcrewi@gyrae.net", "date": "2013-09-06T04:15:33Z"}, "message": "Convert between BigInts and BigUints", "tree": {"sha": "3e41826e0fc2c46004d00cd149dc6d5c61e1194f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e41826e0fc2c46004d00cd149dc6d5c61e1194f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dfb04d9953f640301c80cbe910b91ca9c92af55a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dfb04d9953f640301c80cbe910b91ca9c92af55a", "html_url": "https://github.com/rust-lang/rust/commit/dfb04d9953f640301c80cbe910b91ca9c92af55a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dfb04d9953f640301c80cbe910b91ca9c92af55a/comments", "author": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dcrewi", "id": 1852207, "node_id": "MDQ6VXNlcjE4NTIyMDc=", "avatar_url": "https://avatars.githubusercontent.com/u/1852207?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dcrewi", "html_url": "https://github.com/dcrewi", "followers_url": "https://api.github.com/users/dcrewi/followers", "following_url": "https://api.github.com/users/dcrewi/following{/other_user}", "gists_url": "https://api.github.com/users/dcrewi/gists{/gist_id}", "starred_url": "https://api.github.com/users/dcrewi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dcrewi/subscriptions", "organizations_url": "https://api.github.com/users/dcrewi/orgs", "repos_url": "https://api.github.com/users/dcrewi/repos", "events_url": "https://api.github.com/users/dcrewi/events{/privacy}", "received_events_url": "https://api.github.com/users/dcrewi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d84a7b5ae3b3a820fb0a26292632856ceb959b3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d84a7b5ae3b3a820fb0a26292632856ceb959b3e", "html_url": "https://github.com/rust-lang/rust/commit/d84a7b5ae3b3a820fb0a26292632856ceb959b3e"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "e873bf3d0568704feca70c345c8c45ef2e9b2a94", "filename": "src/libextra/num/bigint.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/dfb04d9953f640301c80cbe910b91ca9c92af55a/src%2Flibextra%2Fnum%2Fbigint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dfb04d9953f640301c80cbe910b91ca9c92af55a/src%2Flibextra%2Fnum%2Fbigint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fnum%2Fbigint.rs?ref=dfb04d9953f640301c80cbe910b91ca9c92af55a", "patch": "@@ -589,6 +589,12 @@ impl BigUint {\n         }\n     }\n \n+    /// Converts this BigUint into a positively-signed BigInt.\n+    #[inline]\n+    pub fn to_bigint(&self) -> BigInt {\n+        BigInt::from_biguint(Plus, self.clone())\n+    }\n+\n     #[inline]\n     fn shl_unit(&self, n_unit: uint) -> BigUint {\n         if n_unit == 0 || self.is_zero() { return (*self).clone(); }\n@@ -1102,6 +1108,16 @@ impl BigInt {\n             Minus => 0\n         }\n     }\n+\n+    /// Converts this BigInt into a BigUint. Negative BigInts are\n+    /// converted to zero-valued BigUints.\n+    #[inline]\n+    pub fn to_biguint(&self) -> BigUint {\n+        match self.sign {\n+            Plus => self.data.clone(),\n+            _ => Zero::zero()\n+        }\n+    }\n }\n \n #[cfg(test)]\n@@ -1281,6 +1297,16 @@ mod biguint_tests {\n         assert_eq!(BigUint::new(~[0, 0, -1]).to_uint(), uint::max_value);\n     }\n \n+    #[test]\n+    fn test_convert_to_bigint() {\n+        fn check(n: BigUint, ans: BigInt) {\n+            assert_eq!(n.to_bigint(), ans);\n+            assert_eq!(n.to_bigint().to_biguint(), n);\n+        }\n+        check(Zero::zero(), Zero::zero());\n+        check(BigUint::from_uint(637), BigInt::from_uint(637));\n+    }\n+\n     static sum_triples: &'static [(&'static [BigDigit],\n                                    &'static [BigDigit],\n                                    &'static [BigDigit])] = &[\n@@ -1700,6 +1726,21 @@ mod bigint_tests {\n         ).to_uint() == 0);\n     }\n \n+    #[test]\n+    fn test_convert_to_biguint() {\n+        fn check(n: BigInt, ans_1: BigUint, ans_2: BigInt) {\n+            assert_eq!(n.to_biguint(), ans_1);\n+            assert_eq!(n.to_biguint().to_bigint(), ans_2);\n+        }\n+        let zero: BigInt = Zero::zero();\n+        let unsigned_zero: BigUint = Zero::zero();\n+        let positive: BigInt = BigInt::from_uint(637);\n+        let negative = -positive;\n+        check(zero.clone(), unsigned_zero.clone(), zero.clone());\n+        check(positive.clone(), BigUint::from_uint(637), positive);\n+        check(negative, unsigned_zero, zero);\n+    }\n+\n     static sum_triples: &'static [(&'static [BigDigit],\n                                    &'static [BigDigit],\n                                    &'static [BigDigit])] = &["}]}