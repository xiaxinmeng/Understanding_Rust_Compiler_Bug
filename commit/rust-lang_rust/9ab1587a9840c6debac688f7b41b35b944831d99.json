{"sha": "9ab1587a9840c6debac688f7b41b35b944831d99", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlhYjE1ODdhOTg0MGM2ZGViYWM2ODhmN2I0MWIzNWI5NDQ4MzFkOTk=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-16T02:17:07Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-07-16T02:17:07Z"}, "message": "Don't apologise if its not our fault in warnings", "tree": {"sha": "7d3671123ab31a95a348a9b9921dc775411a653b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d3671123ab31a95a348a9b9921dc775411a653b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ab1587a9840c6debac688f7b41b35b944831d99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ab1587a9840c6debac688f7b41b35b944831d99", "html_url": "https://github.com/rust-lang/rust/commit/9ab1587a9840c6debac688f7b41b35b944831d99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ab1587a9840c6debac688f7b41b35b944831d99/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a6f96d704d01d4301fa9e9b6f632318e4c57c4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a6f96d704d01d4301fa9e9b6f632318e4c57c4", "html_url": "https://github.com/rust-lang/rust/commit/e4a6f96d704d01d4301fa9e9b6f632318e4c57c4"}], "stats": {"total": 30, "additions": 25, "deletions": 5}, "files": [{"sha": "c296b3cda00037ea9b031e99b335249e751f71e4", "filename": "src/lib.rs", "status": "modified", "additions": 25, "deletions": 5, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/9ab1587a9840c6debac688f7b41b35b944831d99/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9ab1587a9840c6debac688f7b41b35b944831d99/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=9ab1587a9840c6debac688f7b41b35b944831d99", "patch": "@@ -125,13 +125,13 @@ impl fmt::Display for ErrorKind {\n         match *self {\n             ErrorKind::LineOverflow => {\n                 write!(fmt, \"line exceeded maximum length\")\n-            },\n+            }\n             ErrorKind::TrailingWhitespace => {\n                 write!(fmt, \"left behind trailing whitespace\")\n-            },\n+            }\n             ErrorKind::BadIssue(issue) => {\n                 write!(fmt, \"found {}\", issue)\n-            },\n+            }\n         }\n     }\n }\n@@ -142,6 +142,24 @@ struct FormattingError {\n     kind: ErrorKind,\n }\n \n+impl FormattingError {\n+    fn msg_prefix(&self) -> &str {\n+        match self.kind {\n+            ErrorKind::LineOverflow |\n+            ErrorKind::TrailingWhitespace => \"Rustfmt failed at\",\n+            ErrorKind::BadIssue(_) => \"WARNING:\",\n+        }\n+    }\n+\n+    fn msg_suffix(&self) -> &str {\n+        match self.kind {\n+            ErrorKind::LineOverflow |\n+            ErrorKind::TrailingWhitespace => \"(sorry)\",\n+            ErrorKind::BadIssue(_) => \"\",\n+        }\n+    }\n+}\n+\n struct FormatReport {\n     // Maps stringified file paths to their associated formatting errors\n     file_error_map: HashMap<String, Vec<FormattingError>>,\n@@ -153,10 +171,12 @@ impl fmt::Display for FormatReport {\n         for (file, errors) in self.file_error_map.iter() {\n             for error in errors {\n                 try!(write!(fmt,\n-                            \"Rustfmt failed at {}:{}: {} (sorry)\\n\",\n+                            \"{} {}:{}: {} {}\\n\",\n+                            error.msg_prefix(),\n                             file,\n                             error.line,\n-                            error.kind));\n+                            error.kind,\n+                            error.msg_suffix()));\n             }\n         }\n         Ok(())"}]}