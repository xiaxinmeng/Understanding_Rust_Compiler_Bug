{"sha": "d442c015d6d688460a182947e797f4bf69876044", "node_id": "C_kwDOAAsO6NoAKGQ0NDJjMDE1ZDZkNjg4NDYwYTE4Mjk0N2U3OTdmNGJmNjk4NzYwNDQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-04T18:53:50Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-12-04T18:53:50Z"}, "message": "Don't ICE in ExprUseVisitor on FRU for non-existent struct", "tree": {"sha": "21114349ca0ebd3f9497869960a0f547a1af1612", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/21114349ca0ebd3f9497869960a0f547a1af1612"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d442c015d6d688460a182947e797f4bf69876044", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d442c015d6d688460a182947e797f4bf69876044", "html_url": "https://github.com/rust-lang/rust/commit/d442c015d6d688460a182947e797f4bf69876044", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d442c015d6d688460a182947e797f4bf69876044/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26b24cd7558c02c433ef9f621894cb6a2f31898d", "url": "https://api.github.com/repos/rust-lang/rust/commits/26b24cd7558c02c433ef9f621894cb6a2f31898d", "html_url": "https://github.com/rust-lang/rust/commit/26b24cd7558c02c433ef9f621894cb6a2f31898d"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "03b174c77955fb400eab47aa6071b3cec6bef94a", "filename": "compiler/rustc_hir_typeck/src/expr_use_visitor.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d442c015d6d688460a182947e797f4bf69876044/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d442c015d6d688460a182947e797f4bf69876044/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fexpr_use_visitor.rs?ref=d442c015d6d688460a182947e797f4bf69876044", "patch": "@@ -523,6 +523,11 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n         // Consume the expressions supplying values for each field.\n         for field in fields {\n             self.consume_expr(field.expr);\n+\n+            // The struct path probably didn't resolve\n+            if self.mc.typeck_results.opt_field_index(field.hir_id).is_none() {\n+                self.tcx().sess.delay_span_bug(field.span, \"couldn't resolve index for field\");\n+            }\n         }\n \n         let with_expr = match *opt_with {\n@@ -542,7 +547,7 @@ impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx> {\n                 for (f_index, with_field) in adt.non_enum_variant().fields.iter().enumerate() {\n                     let is_mentioned = fields\n                         .iter()\n-                        .any(|f| self.mc.typeck_results.field_index(f.hir_id) == f_index);\n+                        .any(|f| self.mc.typeck_results.opt_field_index(f.hir_id) == Some(f_index));\n                     if !is_mentioned {\n                         let field_place = self.mc.cat_projection(\n                             &*with_expr,"}, {"sha": "c9fdca4577279d244effc4bff1dad0b11a90f36a", "filename": "src/test/ui/structs/unresolved-struct-with-fru.rs", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d442c015d6d688460a182947e797f4bf69876044/src%2Ftest%2Fui%2Fstructs%2Funresolved-struct-with-fru.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d442c015d6d688460a182947e797f4bf69876044/src%2Ftest%2Fui%2Fstructs%2Funresolved-struct-with-fru.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Funresolved-struct-with-fru.rs?ref=d442c015d6d688460a182947e797f4bf69876044", "patch": "@@ -0,0 +1,12 @@\n+struct S {\n+    a: u32,\n+}\n+\n+fn main() {\n+    let s1 = S { a: 1 };\n+\n+    let _ = || {\n+        let s2 = Oops { a: 2, ..s1 };\n+        //~^ ERROR cannot find struct, variant or union type `Oops` in this scope\n+    };\n+}"}, {"sha": "a5796a222256d89dfacdf425574d8ee11390d9e0", "filename": "src/test/ui/structs/unresolved-struct-with-fru.stderr", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d442c015d6d688460a182947e797f4bf69876044/src%2Ftest%2Fui%2Fstructs%2Funresolved-struct-with-fru.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d442c015d6d688460a182947e797f4bf69876044/src%2Ftest%2Fui%2Fstructs%2Funresolved-struct-with-fru.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstructs%2Funresolved-struct-with-fru.stderr?ref=d442c015d6d688460a182947e797f4bf69876044", "patch": "@@ -0,0 +1,9 @@\n+error[E0422]: cannot find struct, variant or union type `Oops` in this scope\n+  --> $DIR/unresolved-struct-with-fru.rs:9:18\n+   |\n+LL |         let s2 = Oops { a: 2, ..s1 };\n+   |                  ^^^^ not found in this scope\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0422`."}]}