{"sha": "944c6b6d760d392552fc60ec4e3ba3ad84598350", "node_id": "C_kwDOAAsO6NoAKDk0NGM2YjZkNzYwZDM5MjU1MmZjNjBlYzRlM2JhM2FkODQ1OTgzNTA", "commit": {"author": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2022-08-17T11:59:46Z"}, "committer": {"name": "Christopher Durham", "email": "cad97@cad97.com", "date": "2022-08-17T11:59:46Z"}, "message": "New ui tests for new soft feature gates", "tree": {"sha": "183e981c6f5656668f0e073b1984755537e3f35b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183e981c6f5656668f0e073b1984755537e3f35b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/944c6b6d760d392552fc60ec4e3ba3ad84598350", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/944c6b6d760d392552fc60ec4e3ba3ad84598350", "html_url": "https://github.com/rust-lang/rust/commit/944c6b6d760d392552fc60ec4e3ba3ad84598350", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/944c6b6d760d392552fc60ec4e3ba3ad84598350/comments", "author": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CAD97", "id": 5992217, "node_id": "MDQ6VXNlcjU5OTIyMTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5992217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CAD97", "html_url": "https://github.com/CAD97", "followers_url": "https://api.github.com/users/CAD97/followers", "following_url": "https://api.github.com/users/CAD97/following{/other_user}", "gists_url": "https://api.github.com/users/CAD97/gists{/gist_id}", "starred_url": "https://api.github.com/users/CAD97/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CAD97/subscriptions", "organizations_url": "https://api.github.com/users/CAD97/orgs", "repos_url": "https://api.github.com/users/CAD97/repos", "events_url": "https://api.github.com/users/CAD97/events{/privacy}", "received_events_url": "https://api.github.com/users/CAD97/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "767239f7403a3808e534da02ca388632eac2bc18", "url": "https://api.github.com/repos/rust-lang/rust/commits/767239f7403a3808e534da02ca388632eac2bc18", "html_url": "https://github.com/rust-lang/rust/commit/767239f7403a3808e534da02ca388632eac2bc18"}], "stats": {"total": 131, "additions": 131, "deletions": 0}, "files": [{"sha": "49f1cba7151efb1f35e476c697727251b19c49b7", "filename": "src/test/ui/feature-gates/soft-syntax-gates-with-errors.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-with-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-with-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-with-errors.rs?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,30 @@\n+// check-fail\n+// This file is used to test the behavior of the early-pass syntax warnings.\n+// If macro syntax is stabilized, replace with a different unstable syntax.\n+\n+macro a() {}\n+//~^ ERROR: `macro` is experimental\n+\n+#[cfg(FALSE)]\n+macro b() {}\n+\n+macro_rules! identity {\n+    ($($x:tt)*) => ($($x)*);\n+}\n+\n+identity! {\n+    macro c() {}\n+    //~^ ERROR: `macro` is experimental\n+}\n+\n+#[cfg(FALSE)]\n+identity! {\n+    macro d() {} // No error\n+}\n+\n+identity! {\n+    #[cfg(FALSE)]\n+    macro e() {}\n+}\n+\n+fn main() {}"}, {"sha": "49550d811ba5201a426450cc4e572ab603dbf219", "filename": "src/test/ui/feature-gates/soft-syntax-gates-with-errors.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-with-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-with-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-with-errors.stderr?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,21 @@\n+error[E0658]: `macro` is experimental\n+  --> $DIR/soft-syntax-gates-with-errors.rs:5:1\n+   |\n+LL | macro a() {}\n+   | ^^^^^^^^^^^^\n+   |\n+   = note: see issue #39412 <https://github.com/rust-lang/rust/issues/39412> for more information\n+   = help: add `#![feature(decl_macro)]` to the crate attributes to enable\n+\n+error[E0658]: `macro` is experimental\n+  --> $DIR/soft-syntax-gates-with-errors.rs:16:5\n+   |\n+LL |     macro c() {}\n+   |     ^^^^^^^^^^^^\n+   |\n+   = note: see issue #39412 <https://github.com/rust-lang/rust/issues/39412> for more information\n+   = help: add `#![feature(decl_macro)]` to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "ca4ad2320f657401255f3e751ed6fd4f842e4296", "filename": "src/test/ui/feature-gates/soft-syntax-gates-without-errors.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-without-errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-without-errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-without-errors.rs?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,26 @@\n+// check-pass\n+// This file is used to test the behavior of the early-pass syntax warnings.\n+// If macro syntax is stabilized, replace with a different unstable syntax.\n+\n+#[cfg(FALSE)]\n+macro b() {}\n+//~^ WARN: `macro` is experimental\n+//~| WARN: unstable syntax\n+\n+macro_rules! identity {\n+    ($($x:tt)*) => ($($x)*);\n+}\n+\n+#[cfg(FALSE)]\n+identity! {\n+    macro d() {} // No error\n+}\n+\n+identity! {\n+    #[cfg(FALSE)]\n+    macro e() {}\n+    //~^ WARN: `macro` is experimental\n+    //~| WARN: unstable syntax\n+}\n+\n+fn main() {}"}, {"sha": "3d9c22e548710a16102fd9609c5865a871de23e9", "filename": "src/test/ui/feature-gates/soft-syntax-gates-without-errors.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-without-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-without-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Fsoft-syntax-gates-without-errors.stderr?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,24 @@\n+warning: `macro` is experimental\n+  --> $DIR/soft-syntax-gates-without-errors.rs:6:1\n+   |\n+LL | macro b() {}\n+   | ^^^^^^^^^^^^\n+   |\n+   = note: see issue #39412 <https://github.com/rust-lang/rust/issues/39412> for more information\n+   = help: add `#![feature(decl_macro)]` to the crate attributes to enable\n+   = warning: unstable syntax can change at any point in the future, causing a hard error!\n+   = note: for more information, see issue #65860 <https://github.com/rust-lang/rust/issues/65860>\n+\n+warning: `macro` is experimental\n+  --> $DIR/soft-syntax-gates-without-errors.rs:21:5\n+   |\n+LL |     macro e() {}\n+   |     ^^^^^^^^^^^^\n+   |\n+   = note: see issue #39412 <https://github.com/rust-lang/rust/issues/39412> for more information\n+   = help: add `#![feature(decl_macro)]` to the crate attributes to enable\n+   = warning: unstable syntax can change at any point in the future, causing a hard error!\n+   = note: for more information, see issue #65860 <https://github.com/rust-lang/rust/issues/65860>\n+\n+warning: 2 warnings emitted\n+"}, {"sha": "31ac556b9447c857a6d928617f1074ac9c842faa", "filename": "src/test/ui/suggestions/many-type-ascription.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Fmany-type-ascription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Fmany-type-ascription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmany-type-ascription.rs?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    let _ = 0: i32; //~ ERROR: type ascription is experimental\n+    let _ = 0: i32; // (error only emitted once)\n+}"}, {"sha": "3706bbae9df9fbd3e38b18efc3908be43b372fbf", "filename": "src/test/ui/suggestions/many-type-ascription.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Fmany-type-ascription.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Fmany-type-ascription.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fmany-type-ascription.stderr?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,12 @@\n+error[E0658]: type ascription is experimental\n+  --> $DIR/many-type-ascription.rs:2:13\n+   |\n+LL |     let _ = 0: i32;\n+   |             ^^^^^^\n+   |\n+   = note: see issue #23416 <https://github.com/rust-lang/rust/issues/23416> for more information\n+   = help: add `#![feature(type_ascription)]` to the crate attributes to enable\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0658`."}, {"sha": "99ab2f3c858b9c6ec6aede6a352778ecc2dbdf1a", "filename": "src/test/ui/suggestions/type-ascription-and-other-error.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-and-other-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-and-other-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-and-other-error.rs?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    not rust; //~ ERROR\n+    let _ = 0: i32; // (error hidden by existing error)\n+    #[cfg(FALSE)]\n+    let _ = 0: i32; // (warning hidden by existing error)\n+}"}, {"sha": "eadf634bb14fd0bd24bed98fc998099474ba48e0", "filename": "src/test/ui/suggestions/type-ascription-and-other-error.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-and-other-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/944c6b6d760d392552fc60ec4e3ba3ad84598350/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-and-other-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftype-ascription-and-other-error.stderr?ref=944c6b6d760d392552fc60ec4e3ba3ad84598350", "patch": "@@ -0,0 +1,8 @@\n+error: expected one of `!`, `.`, `::`, `;`, `?`, `{`, `}`, or an operator, found `rust`\n+  --> $DIR/type-ascription-and-other-error.rs:2:9\n+   |\n+LL |     not rust;\n+   |         ^^^^ expected one of 8 possible tokens\n+\n+error: aborting due to previous error\n+"}]}