{"sha": "07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Y2M3ZDk5NjBhMWJjNzY3ZGMwNTFiOWZhZTBjN2FkMmI1Y2Q5N2Y=", "commit": {"author": {"name": "Johannes Oertel", "email": "johannes.oertel@uni-due.de", "date": "2015-04-24T15:30:41Z"}, "committer": {"name": "Johannes Oertel", "email": "johannes.oertel@uni-due.de", "date": "2015-04-24T21:06:41Z"}, "message": "Change name of unit test sub-module to \"tests\".\n\nChanges the style guidelines regarding unit tests to recommend using a\nsub-module named \"tests\" instead of \"test\" for unit tests as \"test\"\nmight clash with imports of libtest.", "tree": {"sha": "f600607447973dbc1af596efff62d8bd873bbe45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f600607447973dbc1af596efff62d8bd873bbe45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "html_url": "https://github.com/rust-lang/rust/commit/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/comments", "author": {"login": "jooert", "id": 1774713, "node_id": "MDQ6VXNlcjE3NzQ3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1774713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jooert", "html_url": "https://github.com/jooert", "followers_url": "https://api.github.com/users/jooert/followers", "following_url": "https://api.github.com/users/jooert/following{/other_user}", "gists_url": "https://api.github.com/users/jooert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jooert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jooert/subscriptions", "organizations_url": "https://api.github.com/users/jooert/orgs", "repos_url": "https://api.github.com/users/jooert/repos", "events_url": "https://api.github.com/users/jooert/events{/privacy}", "received_events_url": "https://api.github.com/users/jooert/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jooert", "id": 1774713, "node_id": "MDQ6VXNlcjE3NzQ3MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1774713?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jooert", "html_url": "https://github.com/jooert", "followers_url": "https://api.github.com/users/jooert/followers", "following_url": "https://api.github.com/users/jooert/following{/other_user}", "gists_url": "https://api.github.com/users/jooert/gists{/gist_id}", "starred_url": "https://api.github.com/users/jooert/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jooert/subscriptions", "organizations_url": "https://api.github.com/users/jooert/orgs", "repos_url": "https://api.github.com/users/jooert/repos", "events_url": "https://api.github.com/users/jooert/events{/privacy}", "received_events_url": "https://api.github.com/users/jooert/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2214860d4a979fe24d935277a74bd4d67e9bdb9f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2214860d4a979fe24d935277a74bd4d67e9bdb9f", "html_url": "https://github.com/rust-lang/rust/commit/2214860d4a979fe24d935277a74bd4d67e9bdb9f"}], "stats": {"total": 118, "additions": 59, "deletions": 59}, "files": [{"sha": "dbbe9fc3ac6da92602304f64de31b07afa01e80a", "filename": "src/doc/style/testing/unit.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Fdoc%2Fstyle%2Ftesting%2Funit.md", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Fdoc%2Fstyle%2Ftesting%2Funit.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fstyle%2Ftesting%2Funit.md?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1,10 +1,10 @@\n % Unit testing\n \n-Unit tests should live in a `test` submodule at the bottom of the module they\n-test. Mark the `test` submodule with `#[cfg(test)]` so it is only compiled when\n+Unit tests should live in a `tests` submodule at the bottom of the module they\n+test. Mark the `tests` submodule with `#[cfg(test)]` so it is only compiled when\n testing.\n \n-The `test` module should contain:\n+The `tests` module should contain:\n \n * Imports needed only for testing.\n * Functions marked with `#[test]` striving for full coverage of the parent module's\n@@ -17,7 +17,7 @@ For example:\n // Excerpt from std::str\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     #[test]\n     fn test_eq() {\n         assert!((eq(&\"\".to_owned(), &\"\".to_owned())));"}, {"sha": "45f87a6740597c6ac892c8732b3df881b16d7b42", "filename": "src/doc/trpl/testing.md", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Fdoc%2Ftrpl%2Ftesting.md", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Fdoc%2Ftrpl%2Ftesting.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ftesting.md?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -219,10 +219,10 @@ fn it_works() {\n This is a very common use of `assert_eq!`: call some function with\n some known arguments and compare it to the expected output.\n \n-# The `test` module\n+# The `tests` module\n \n There is one way in which our existing example is not idiomatic: it's\n-missing the test module. The idiomatic way of writing our example\n+missing the `tests` module. The idiomatic way of writing our example\n looks like this:\n \n ```{rust,ignore}\n@@ -231,7 +231,7 @@ pub fn add_two(a: i32) -> i32 {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::add_two;\n \n     #[test]\n@@ -241,7 +241,7 @@ mod test {\n }\n ```\n \n-There's a few changes here. The first is the introduction of a `mod test` with\n+There's a few changes here. The first is the introduction of a `mod tests` with\n a `cfg` attribute. The module allows us to group all of our tests together, and\n to also define helper functions if needed, that don't become a part of the rest\n of our crate. The `cfg` attribute only compiles our test code if we're\n@@ -260,7 +260,7 @@ pub fn add_two(a: i32) -> i32 {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     #[test]\n@@ -279,7 +279,7 @@ $ cargo test\n      Running target/adder-91b3e234d4ed382a\n \n running 1 test\n-test test::it_works ... ok\n+test tests::it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n \n@@ -292,7 +292,7 @@ test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n \n It works!\n \n-The current convention is to use the `test` module to hold your \"unit-style\"\n+The current convention is to use the `tests` module to hold your \"unit-style\"\n tests. Anything that just tests one small bit of functionality makes sense to\n go here. But what about \"integration-style\" tests instead? For that, we have\n the `tests` directory\n@@ -325,7 +325,7 @@ $ cargo test\n      Running target/adder-91b3e234d4ed382a\n \n running 1 test\n-test test::it_works ... ok\n+test tests::it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n \n@@ -346,7 +346,7 @@ test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured\n Now we have three sections: our previous test is also run, as well as our new\n one.\n \n-That's all there is to the `tests` directory. The `test` module isn't needed\n+That's all there is to the `tests` directory. The `tests` module isn't needed\n here, since the whole thing is focused on tests.\n \n Let's finally check out that third section: documentation tests.\n@@ -382,7 +382,7 @@ pub fn add_two(a: i32) -> i32 {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     #[test]\n@@ -405,7 +405,7 @@ $ cargo test\n      Running target/adder-91b3e234d4ed382a\n \n running 1 test\n-test test::it_works ... ok\n+test tests::it_works ... ok\n \n test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured\n "}, {"sha": "9d1d8a7ac24b8a16a8eb7b8422d7d6f65f36ce66", "filename": "src/liballoc/heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Fliballoc%2Fheap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Fliballoc%2Fheap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fheap.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -384,7 +384,7 @@ mod imp {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     extern crate test;\n     use self::test::Bencher;\n     use boxed::Box;"}, {"sha": "c73a6f9b324a3698aa7b16063ee31aa4e958a702", "filename": "src/libcollections/linked_list.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibcollections%2Flinked_list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibcollections%2Flinked_list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flinked_list.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -933,7 +933,7 @@ impl<A: Hash> Hash for LinkedList<A> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::clone::Clone;\n     use std::iter::{Iterator, IntoIterator};\n     use std::option::Option::{Some, None, self};"}, {"sha": "61369b30dea1797c25d954883c5f988fee433de7", "filename": "src/libcollections/vec_deque.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec_deque.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1772,7 +1772,7 @@ impl<T: fmt::Debug> fmt::Debug for VecDeque<T> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use core::iter::{Iterator, self};\n     use core::option::Option::Some;\n "}, {"sha": "0ea9f8afb4e532c140a89d882beaf68b59da42d3", "filename": "src/libcoretest/num/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibcoretest%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibcoretest%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fnum%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -45,7 +45,7 @@ pub fn test_num<T>(ten: T, two: T) where\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use core::option::Option;\n     use core::option::Option::{Some, None};\n     use core::num::Float;"}, {"sha": "bcb827cb471cacac023c650ae81a78d147ec83d7", "filename": "src/librand/chacha.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fchacha.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fchacha.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fchacha.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -202,7 +202,7 @@ impl Rand for ChaChaRng {\n \n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::prelude::v1::*;\n \n     use core::iter::order;"}, {"sha": "f46d35a33db1a034b2b6190faedf084180b26fa0", "filename": "src/librand/distributions/exponential.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fdistributions%2Fexponential.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fdistributions%2Fexponential.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fdistributions%2Fexponential.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -82,7 +82,7 @@ impl IndependentSample<f64> for Exp {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::prelude::v1::*;\n \n     use distributions::{Sample, IndependentSample};"}, {"sha": "2951563934b3c412d273bf4ef91394806fbb41ee", "filename": "src/librand/distributions/gamma.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fdistributions%2Fgamma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fdistributions%2Fgamma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fdistributions%2Fgamma.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -276,7 +276,7 @@ impl IndependentSample<f64> for StudentT {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::prelude::v1::*;\n \n     use distributions::{Sample, IndependentSample};"}, {"sha": "22fe46a8bd83a20e9f78a1a81ec2f47fcfc28c37", "filename": "src/librand/isaac.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fisaac.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Fisaac.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Fisaac.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -510,7 +510,7 @@ impl Rand for Isaac64Rng {\n \n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::prelude::v1::*;\n \n     use core::iter::order;"}, {"sha": "bb0b13c43756b474cd1603a2d07b329dbdfadd7d", "filename": "src/librand/reseeding.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Freseeding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrand%2Freseeding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrand%2Freseeding.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -120,7 +120,7 @@ impl Default for ReseedWithDefault {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::prelude::v1::*;\n \n     use core::iter::{order, repeat};"}, {"sha": "050ccd6471288ae759c4570657b68f624eec40ea", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1111,7 +1111,7 @@ impl fmt::Display for CrateType {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n \n     use session::config::{build_configuration, optgroups, build_session_options};\n     use session::build_session;"}, {"sha": "37e3efb4d83fe112a39c11be151adffb76fdb93a", "filename": "src/librustc_back/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_back%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_back%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ffs.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -41,7 +41,7 @@ pub fn realpath(original: &Path) -> io::Result<PathBuf> {\n }\n \n #[cfg(all(not(windows), test))]\n-mod test {\n+mod tests {\n     use tempdir::TempDir;\n     use std::fs::{self, File};\n     use super::realpath;"}, {"sha": "1daeb1cb223e279670efd5d089a07ef87b19a1a3", "filename": "src/librustc_back/rpath.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_back%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_back%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Frpath.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -171,7 +171,7 @@ fn minimize_rpaths(rpaths: &[String]) -> Vec<String> {\n }\n \n #[cfg(all(unix, test))]\n-mod test {\n+mod tests {\n     use super::{RPathConfig};\n     use super::{minimize_rpaths, rpaths_to_flags, get_rpath_relative_to_output};\n     use std::path::{Path, PathBuf};"}, {"sha": "17fd0b81536258d5c229c229c34533bc1789558e", "filename": "src/librustc_data_structures/graph/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -36,7 +36,7 @@ use std::usize;\n use snapshot_vec::{SnapshotVec, SnapshotVecDelegate};\n \n #[cfg(test)]\n-mod test;\n+mod tests;\n \n pub struct Graph<N,E> {\n     nodes: SnapshotVec<Node<N>> ,"}, {"sha": "33b2edd2e106d22ec0dd98f4b17a7067dc38f43f", "filename": "src/librustc_data_structures/graph/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Fgraph%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Fgraph%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fgraph%2Ftests.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "previous_filename": "src/librustc_data_structures/graph/test.rs"}, {"sha": "a899bbacc03016f8c624d68c8d18758f90b57c12", "filename": "src/librustc_data_structures/unify/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Funify%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Funify%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Funify%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -14,7 +14,7 @@ use std::marker::PhantomData;\n use snapshot_vec as sv;\n \n #[cfg(test)]\n-mod test;\n+mod tests;\n \n /// This trait is implemented by any type that can serve as a type\n /// variable. We call such variables *unification keys*. For example,"}, {"sha": "dbe3cfc7a48a9b2e7c7f749a1f7c5f0f7d77adcb", "filename": "src/librustc_data_structures/unify/tests.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Funify%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustc_data_structures%2Funify%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Funify%2Ftests.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "previous_filename": "src/librustc_data_structures/unify/test.rs"}, {"sha": "93aa74d7005f6d8989cbae865218d8d421165596", "filename": "src/librustdoc/html/toc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustdoc%2Fhtml%2Ftoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibrustdoc%2Fhtml%2Ftoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftoc.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -198,7 +198,7 @@ impl fmt::Display for Toc {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::{TocBuilder, Toc, TocEntry};\n \n     #[test]"}, {"sha": "ef72cbc96e18f54a67652f83bae7e427618304aa", "filename": "src/libstd/dynamic_lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fdynamic_lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fdynamic_lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdynamic_lib.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -117,7 +117,7 @@ impl DynamicLibrary {\n }\n \n #[cfg(all(test, not(target_os = \"ios\")))]\n-mod test {\n+mod tests {\n     use super::*;\n     use prelude::v1::*;\n     use libc;"}, {"sha": "a9dab8191fd9c90dfa43d3a562e1fc532e6fab84", "filename": "src/libstd/io/stdio.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fstdio.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -418,7 +418,7 @@ pub fn _print(args: fmt::Arguments) {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use thread;\n     use super::*;\n "}, {"sha": "d797e757a483ecf687d686327ed876a64c987223", "filename": "src/libstd/io/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fio%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fio%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Futil.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -102,7 +102,7 @@ impl Write for Sink {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use io::prelude::*;"}, {"sha": "a04bb6705b32167c9329bbce4c1b2d94f065d3d5", "filename": "src/libstd/rand/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Frand%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Frand%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Fos.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -346,7 +346,7 @@ mod imp {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use sync::mpsc::channel;"}, {"sha": "d19bc5b617f8462e62f0ddc5f1c618ccd74d6d0a", "filename": "src/libstd/rand/reader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Frand%2Freader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Frand%2Freader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frand%2Freader.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -63,7 +63,7 @@ impl<R: Read> Rng for ReaderRng<R> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use super::ReaderRng;"}, {"sha": "72cbe2b533bb7fc6b62cf366861085d55945e186", "filename": "src/libstd/rt/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Frt%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Frt%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fbacktrace.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -38,7 +38,7 @@ pub fn log_enabled() -> bool {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n     use sys_common;\n     macro_rules! t { ($a:expr, $b:expr) => ({"}, {"sha": "2d281eb4e249ca2be556107d114a100b9c6523f1", "filename": "src/libstd/sync/future.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Ffuture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Ffuture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Ffuture.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -155,7 +155,7 @@ impl<A:Send+'static> Future<A> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n     use sync::mpsc::channel;\n     use sync::Future;"}, {"sha": "74e85db1a06ff1eba3517292ea35281c167ee984", "filename": "src/libstd/sync/mpsc/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1065,7 +1065,7 @@ impl error::Error for TryRecvError {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use std::env;"}, {"sha": "58f16a83ba9353d164ec01515f5fd52b6ba391d8", "filename": "src/libstd/sync/mpsc/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -346,7 +346,7 @@ impl Iterator for Packets {\n \n #[cfg(test)]\n #[allow(unused_imports)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use thread;"}, {"sha": "4dd84364fa80ef0634832e194cf4242e04cd9272", "filename": "src/libstd/sync/mpsc/spsc_queue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -241,7 +241,7 @@ impl<T> Drop for Queue<T> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use sync::Arc;"}, {"sha": "caf011c54f27a1c82b7b766f2a71c5d0bef5441c", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -361,7 +361,7 @@ pub fn guard_poison<'a, T>(guard: &MutexGuard<'a, T>) -> &'a poison::Flag {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use sync::mpsc::channel;"}, {"sha": "2ce974c1271aad77cb09b89ddb404caa829075d0", "filename": "src/libstd/sync/once.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fonce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsync%2Fonce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fonce.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -121,7 +121,7 @@ impl Once {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use thread;"}, {"sha": "00238500c3a85ae77b83230edd26fb3e8e89da5d", "filename": "src/libstd/sys/common/remutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsys%2Fcommon%2Fremutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fsys%2Fcommon%2Fremutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fremutex.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -151,7 +151,7 @@ impl<'a, T> Drop for ReentrantMutexGuard<'a, T> {\n \n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n     use sys_common::remutex::{ReentrantMutex, ReentrantMutexGuard};\n     use cell::RefCell;"}, {"sha": "9168a716d43801a4304287a81018c18bbb0c48ea", "filename": "src/libstd/thread/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibstd%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -722,7 +722,7 @@ fn _assert_sync_and_send() {\n ////////////////////////////////////////////////////////////////////////////////\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use prelude::v1::*;\n \n     use any::Any;"}, {"sha": "94dc36b16ba0f53b0282a7410f29db059c95ee50", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1869,7 +1869,7 @@ pub struct MacroDef {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use serialize;\n     use super::*;\n "}, {"sha": "720b2095a908af8274da5de043e156d8e589d88d", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -632,7 +632,7 @@ pub fn lit_is_str(lit: &Lit) -> bool {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use ast::*;\n     use super::*;\n "}, {"sha": "5e0cb647c8b41072ff2242d9c4dc9fcc7208f454", "filename": "src/libsyntax/codemap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fcodemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fcodemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fcodemap.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -949,7 +949,7 @@ pub struct MalformedCodemapPositions {\n //\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n     use std::rc::Rc;\n "}, {"sha": "4ea2d4e5c686c8b53115fcf1c2f2aa187c7adedd", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1553,7 +1553,7 @@ impl<'a, 'v> Visitor<'v> for MacroExterminator<'a> {\n \n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::{pattern_bindings, expand_crate};\n     use super::{PatIdentFinder, IdentRenamer, PatIdentRenamer, ExpansionConfig};\n     use ast;"}, {"sha": "c857d4403cbf86b30204307e173d03c91b478f98", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1343,7 +1343,7 @@ pub fn noop_fold_stmt<T: Folder>(Spanned {node, span}: Stmt, folder: &mut T)\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use std::io;\n     use ast;\n     use util::parser_testing::{string_to_crate, matches_codepattern};"}, {"sha": "1577b50ad760caad882cbbcc98abc894293669e9", "filename": "src/libsyntax/parse/lexer/comments.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fcomments.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -383,7 +383,7 @@ pub fn gather_comments_and_literals(span_diagnostic: &diagnostic::SpanHandler,\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     #[test] fn test_block_doc_comment_1() {"}, {"sha": "d13ab65d72b2bcd9fb580fd7d1455df01b5bb2c8", "filename": "src/libsyntax/parse/lexer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Flexer%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -1501,7 +1501,7 @@ fn ident_continue(c: Option<char>) -> bool {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     use codemap::{BytePos, CodeMap, Span, NO_EXPANSION};"}, {"sha": "dee3e5fee74df918b50fdca691266b75c1979092", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -761,7 +761,7 @@ pub fn integer_lit(s: &str, suffix: Option<&str>, sd: &SpanHandler, sp: Span) ->\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n     use std::rc::Rc;\n     use codemap::{Span, BytePos, Pos, Spanned, NO_EXPANSION};"}, {"sha": "538aa3843277ae0ef91978b24aa820859b062613", "filename": "src/libsyntax/parse/token.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Ftoken.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fparse%2Ftoken.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Ftoken.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -746,7 +746,7 @@ pub fn fresh_mark() -> ast::Mrk {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n     use ast;\n     use ext::mtwt;"}, {"sha": "980ce720026c32e5e4c380df1711163aee2f1b2e", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -3008,7 +3008,7 @@ impl<'a> State<'a> {\n fn repeat(s: &str, n: usize) -> String { iter::repeat(s).take(n).collect() }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     use ast;"}, {"sha": "d016eb39239f68a64e0154ad5f491b671e5234b6", "filename": "src/libsyntax/util/parser_testing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Futil%2Fparser_testing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Futil%2Fparser_testing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser_testing.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -142,7 +142,7 @@ pub fn is_whitespace(c: char) -> bool {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     #[test] fn eqmodws() {"}, {"sha": "5353d12b67813fe483dee91c92409ab2da067a5b", "filename": "src/libsyntax/util/small_vector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibsyntax%2Futil%2Fsmall_vector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fsmall_vector.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -204,7 +204,7 @@ impl<T> MoveMap<T> for SmallVector<T> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::*;\n \n     #[test]"}, {"sha": "2b8c24741ae7ccb0e2c6b94c61f2f628aed8dbad", "filename": "src/libterm/terminfo/parm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibterm%2Fterminfo%2Fparm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibterm%2Fterminfo%2Fparm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fterminfo%2Fparm.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -573,7 +573,7 @@ fn format(val: Param, op: FormatOp, flags: Flags) -> Result<Vec<u8> ,String> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n     use super::{expand,Param,Words,Variables,Number};\n     use std::result::Result::Ok;\n "}, {"sha": "ef42d8c2506b38ecd8d2b9624f2ce8d84063ea1e", "filename": "src/libterm/terminfo/parser/compiled.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibterm%2Fterminfo%2Fparser%2Fcompiled.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Flibterm%2Fterminfo%2Fparser%2Fcompiled.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fterminfo%2Fparser%2Fcompiled.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -345,7 +345,7 @@ pub fn msys_terminfo() -> Box<TermInfo> {\n }\n \n #[cfg(test)]\n-mod test {\n+mod tests {\n \n     use super::{boolnames, boolfnames, numnames, numfnames, stringnames, stringfnames};\n "}, {"sha": "7f0a341f147154499f9ac1b28a9608e072121a29", "filename": "src/test/run-pass/issue-16597.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f/src%2Ftest%2Frun-pass%2Fissue-16597.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-16597.rs?ref=07cc7d9960a1bc767dc051b9fae0c7ad2b5cd97f", "patch": "@@ -11,7 +11,7 @@\n // compile-flags:--test\n // ignore-pretty turns out the pretty-printer doesn't handle gensym'd things...\n \n-mod test {\n+mod tests {\n     use super::*;\n \n     #[test]"}]}