{"sha": "1aa5d0cace3a72ae23f32ece5bb18085b36b5258", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhYTVkMGNhY2UzYTcyYWUyM2YzMmVjZTViYjE4MDg1YjM2YjUyNTg=", "commit": {"author": {"name": "Kyle Strand", "email": "kyle.strand@rms.com", "date": "2019-09-05T16:22:11Z"}, "committer": {"name": "Kyle Strand", "email": "kyle.strand@rms.com", "date": "2019-09-05T16:22:11Z"}, "message": "Restore 'must_use' for 'clamp'; fix warning for tests", "tree": {"sha": "42fbc5be89ccb967a4d303bc6b54ae1d632bee63", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/42fbc5be89ccb967a4d303bc6b54ae1d632bee63"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1aa5d0cace3a72ae23f32ece5bb18085b36b5258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1aa5d0cace3a72ae23f32ece5bb18085b36b5258", "html_url": "https://github.com/rust-lang/rust/commit/1aa5d0cace3a72ae23f32ece5bb18085b36b5258", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1aa5d0cace3a72ae23f32ece5bb18085b36b5258/comments", "author": null, "committer": null, "parents": [{"sha": "54cb728ab8b89ef31578455031519101a93dadc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/54cb728ab8b89ef31578455031519101a93dadc7", "html_url": "https://github.com/rust-lang/rust/commit/54cb728ab8b89ef31578455031519101a93dadc7"}], "stats": {"total": 18, "additions": 8, "deletions": 10}, "files": [{"sha": "72a8f31cec18b000dc19ea78dc9684a2e57b8d95", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1aa5d0cace3a72ae23f32ece5bb18085b36b5258/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aa5d0cace3a72ae23f32ece5bb18085b36b5258/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=1aa5d0cace3a72ae23f32ece5bb18085b36b5258", "patch": "@@ -1015,8 +1015,7 @@ impl f32 {\n     /// assert!((2.0f32).clamp(-2.0, 1.0) == 1.0);\n     /// assert!((std::f32::NAN).clamp(-2.0, 1.0).is_nan());\n     /// ```\n-    // The tests below invoke `clamp` without a return value in order to cause a `panic`.\n-    // #[must_use = \"method returns a new number and does not mutate the original value\"]\n+    #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]\n     pub fn clamp(self, min: f32, max: f32) -> f32 {\n@@ -1631,18 +1630,18 @@ mod tests {\n     #[test]\n     #[should_panic]\n     fn test_clamp_min_greater_than_max() {\n-        1.0f32.clamp(3.0, 1.0);\n+        let _ = 1.0f32.clamp(3.0, 1.0);\n     }\n \n     #[test]\n     #[should_panic]\n     fn test_clamp_min_is_nan() {\n-        1.0f32.clamp(NAN, 1.0);\n+        let _ = 1.0f32.clamp(NAN, 1.0);\n     }\n \n     #[test]\n     #[should_panic]\n     fn test_clamp_max_is_nan() {\n-        1.0f32.clamp(3.0, NAN);\n+        let _ = 1.0f32.clamp(3.0, NAN);\n     }\n }"}, {"sha": "762a87e257279b1cd8152de534222173ef70a9a4", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1aa5d0cace3a72ae23f32ece5bb18085b36b5258/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1aa5d0cace3a72ae23f32ece5bb18085b36b5258/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=1aa5d0cace3a72ae23f32ece5bb18085b36b5258", "patch": "@@ -936,8 +936,7 @@ impl f64 {\n     /// assert!((2.0f64).clamp(-2.0, 1.0) == 1.0);\n     /// assert!((std::f64::NAN).clamp(-2.0, 1.0).is_nan());\n     /// ```\n-    // The tests below invoke `clamp` without a return value in order to cause a `panic`.\n-    // #[must_use = \"method returns a new number and does not mutate the original value\"]\n+    #[must_use = \"method returns a new number and does not mutate the original value\"]\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]\n     pub fn clamp(self, min: f64, max: f64) -> f64 {\n@@ -1571,18 +1570,18 @@ mod tests {\n     #[test]\n     #[should_panic]\n     fn test_clamp_min_greater_than_max() {\n-        1.0f64.clamp(3.0, 1.0);\n+        let _ = 1.0f64.clamp(3.0, 1.0);\n     }\n \n     #[test]\n     #[should_panic]\n     fn test_clamp_min_is_nan() {\n-        1.0f64.clamp(NAN, 1.0);\n+        let _ = 1.0f64.clamp(NAN, 1.0);\n     }\n \n     #[test]\n     #[should_panic]\n     fn test_clamp_max_is_nan() {\n-        1.0f64.clamp(3.0, NAN);\n+        let _ = 1.0f64.clamp(3.0, NAN);\n     }\n }"}]}