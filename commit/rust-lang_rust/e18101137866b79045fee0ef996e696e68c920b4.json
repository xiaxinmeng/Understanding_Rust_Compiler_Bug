{"sha": "e18101137866b79045fee0ef996e696e68c920b4", "node_id": "C_kwDOAAsO6NoAKGUxODEwMTEzNzg2NmI3OTA0NWZlZTBlZjk5NmU2OTZlNjhjOTIwYjQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-04T12:07:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-04T12:07:07Z"}, "message": "Auto merge of #7929 - flip1995:rustup, r=flip1995\n\nRustup\n\nr? `@ghost`\n\nchangelog: none", "tree": {"sha": "c185d02c1a0e21eba9a9bd77c4f1e030782f28de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c185d02c1a0e21eba9a9bd77c4f1e030782f28de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e18101137866b79045fee0ef996e696e68c920b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e18101137866b79045fee0ef996e696e68c920b4", "html_url": "https://github.com/rust-lang/rust/commit/e18101137866b79045fee0ef996e696e68c920b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e18101137866b79045fee0ef996e696e68c920b4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "150a65982b1c9a1740fdcbd3f83f07eb68877a4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/150a65982b1c9a1740fdcbd3f83f07eb68877a4a", "html_url": "https://github.com/rust-lang/rust/commit/150a65982b1c9a1740fdcbd3f83f07eb68877a4a"}, {"sha": "c7f54624b24637f140b0de06fb6dfae149f288c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7f54624b24637f140b0de06fb6dfae149f288c3", "html_url": "https://github.com/rust-lang/rust/commit/c7f54624b24637f140b0de06fb6dfae149f288c3"}], "stats": {"total": 118, "additions": 57, "deletions": 61}, "files": [{"sha": "602877bb9d6831dfd824f6d0e8a4fdf143e96b59", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -22,12 +22,12 @@ path = \"src/driver.rs\"\n \n [dependencies]\n clippy_lints = { version = \"0.1\", path = \"clippy_lints\" }\n-semver = \"0.11\"\n+semver = \"1.0\"\n rustc_tools_util = { version = \"0.2\", path = \"rustc_tools_util\" }\n tempfile = { version = \"3.2\", optional = true }\n \n [dev-dependencies]\n-cargo_metadata = \"0.12\"\n+cargo_metadata = \"0.14\"\n compiletest_rs = { version = \"0.7.1\", features = [\"tmp\"] }\n tester = \"0.9\"\n regex = \"1.5\""}, {"sha": "281480b8d94914c2d1835a1fb7d2d1fb62620b18", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -9,7 +9,7 @@ keywords = [\"clippy\", \"lint\", \"plugin\"]\n edition = \"2021\"\n \n [dependencies]\n-cargo_metadata = \"0.12\"\n+cargo_metadata = \"0.14\"\n clippy_utils = { path = \"../clippy_utils\" }\n if_chain = \"1.0\"\n itertools = \"0.10\"\n@@ -21,7 +21,7 @@ serde_json = { version = \"1.0\", optional = true }\n toml = \"0.5\"\n unicode-normalization = \"0.1\"\n unicode-script = { version = \"0.5\", default-features = false }\n-semver = \"0.11\"\n+semver = \"1.0\"\n rustc-semver = \"1.1\"\n # NOTE: cargo requires serde feat in its url dep\n # see <https://github.com/rust-lang/rust/pull/63587#issuecomment-522343864>"}, {"sha": "d3234b5758a575b2066f57cb673959ef5420ed3b", "filename": "clippy_lints/src/vec.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/clippy_lints%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/clippy_lints%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fvec.rs?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -63,13 +63,7 @@ impl<'tcx> LateLintPass<'tcx> for UselessVec {\n             if is_copy(cx, vec_type(cx.typeck_results().expr_ty_adjusted(arg)));\n             then {\n                 // report the error around the `vec!` not inside `<std macros>:`\n-                let span = arg.span\n-                    .ctxt()\n-                    .outer_expn_data()\n-                    .call_site\n-                    .ctxt()\n-                    .outer_expn_data()\n-                    .call_site;\n+                let span = arg.span.ctxt().outer_expn_data().call_site;\n                 self.check_vec_macro(cx, &vec_args, Mutability::Not, span);\n             }\n         }"}, {"sha": "09554c08987b1ae66902243826bcfec6b063c91f", "filename": "rust-toolchain", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/rust-toolchain", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/rust-toolchain", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-toolchain?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -1,3 +1,3 @@\n [toolchain]\n-channel = \"nightly-2021-10-21\"\n+channel = \"nightly-2021-11-04\"\n components = [\"llvm-tools-preview\", \"rustc-dev\", \"rust-src\"]"}, {"sha": "c8239897f3abb5b7032d8f574aeae103599b1e71", "filename": "tests/ui/crashes/ice-6252.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fcrashes%2Fice-6252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-6252.stderr?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -6,12 +6,12 @@ LL |     _n: PhantomData,\n    |\n help: consider importing one of these items\n    |\n+LL | use core::marker::PhantomData;\n+   |\n LL | use serde::__private::PhantomData;\n    |\n LL | use std::marker::PhantomData;\n    |\n-LL | use core::marker::PhantomData;\n-   |\n \n error[E0412]: cannot find type `VAL` in this scope\n   --> $DIR/ice-6252.rs:10:63"}, {"sha": "90a6eef75261f505c6fd517b1280c548581f2d8e", "filename": "tests/ui/iter_count.fixed", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fiter_count.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fiter_count.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_count.fixed?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -33,6 +33,7 @@ impl HasIter {\n     }\n }\n \n+#[allow(unused_must_use)]\n fn main() {\n     let mut vec = vec![0, 1, 2, 3];\n     let mut boxed_slice: Box<[u8]> = Box::new([0, 1, 2, 3]);\n@@ -50,7 +51,7 @@ fn main() {\n     linked_list.push_back(1);\n     binary_heap.push(1);\n \n-    let _ = &vec[..].len();\n+    &vec[..].len();\n     vec.len();\n     boxed_slice.len();\n     vec_deque.len();\n@@ -62,13 +63,13 @@ fn main() {\n     binary_heap.len();\n \n     vec.len();\n-    let _ = &vec[..].len();\n+    &vec[..].len();\n     vec_deque.len();\n     hash_map.len();\n     b_tree_map.len();\n     linked_list.len();\n \n-    let _ = &vec[..].len();\n+    &vec[..].len();\n     vec.len();\n     vec_deque.len();\n     hash_set.len();"}, {"sha": "6681a480a28c817472eb5bdb1976bb5a948cd61b", "filename": "tests/ui/iter_count.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fiter_count.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fiter_count.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_count.rs?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -33,6 +33,7 @@ impl HasIter {\n     }\n }\n \n+#[allow(unused_must_use)]\n fn main() {\n     let mut vec = vec![0, 1, 2, 3];\n     let mut boxed_slice: Box<[u8]> = Box::new([0, 1, 2, 3]);\n@@ -50,7 +51,7 @@ fn main() {\n     linked_list.push_back(1);\n     binary_heap.push(1);\n \n-    let _ = &vec[..].iter().count();\n+    &vec[..].iter().count();\n     vec.iter().count();\n     boxed_slice.iter().count();\n     vec_deque.iter().count();\n@@ -62,13 +63,13 @@ fn main() {\n     binary_heap.iter().count();\n \n     vec.iter_mut().count();\n-    let _ = &vec[..].iter_mut().count();\n+    &vec[..].iter_mut().count();\n     vec_deque.iter_mut().count();\n     hash_map.iter_mut().count();\n     b_tree_map.iter_mut().count();\n     linked_list.iter_mut().count();\n \n-    let _ = &vec[..].into_iter().count();\n+    &vec[..].into_iter().count();\n     vec.into_iter().count();\n     vec_deque.into_iter().count();\n     hash_set.into_iter().count();"}, {"sha": "2e3d7fc35de9c0de17d3f712bbc87a892c90dbad", "filename": "tests/ui/iter_count.stderr", "status": "modified", "additions": 31, "deletions": 31, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fiter_count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fiter_count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_count.stderr?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -1,151 +1,151 @@\n error: called `.iter().count()` on a `slice`\n-  --> $DIR/iter_count.rs:53:14\n+  --> $DIR/iter_count.rs:54:6\n    |\n-LL |     let _ = &vec[..].iter().count();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n+LL |     &vec[..].iter().count();\n+   |      ^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n    |\n    = note: `-D clippy::iter-count` implied by `-D warnings`\n \n error: called `.iter().count()` on a `Vec`\n-  --> $DIR/iter_count.rs:54:5\n+  --> $DIR/iter_count.rs:55:5\n    |\n LL |     vec.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^ help: try: `vec.len()`\n \n error: called `.iter().count()` on a `slice`\n-  --> $DIR/iter_count.rs:55:5\n+  --> $DIR/iter_count.rs:56:5\n    |\n LL |     boxed_slice.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `boxed_slice.len()`\n \n error: called `.iter().count()` on a `VecDeque`\n-  --> $DIR/iter_count.rs:56:5\n+  --> $DIR/iter_count.rs:57:5\n    |\n LL |     vec_deque.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec_deque.len()`\n \n error: called `.iter().count()` on a `HashSet`\n-  --> $DIR/iter_count.rs:57:5\n+  --> $DIR/iter_count.rs:58:5\n    |\n LL |     hash_set.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_set.len()`\n \n error: called `.iter().count()` on a `HashMap`\n-  --> $DIR/iter_count.rs:58:5\n+  --> $DIR/iter_count.rs:59:5\n    |\n LL |     hash_map.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_map.len()`\n \n error: called `.iter().count()` on a `BTreeMap`\n-  --> $DIR/iter_count.rs:59:5\n+  --> $DIR/iter_count.rs:60:5\n    |\n LL |     b_tree_map.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_map.len()`\n \n error: called `.iter().count()` on a `BTreeSet`\n-  --> $DIR/iter_count.rs:60:5\n+  --> $DIR/iter_count.rs:61:5\n    |\n LL |     b_tree_set.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_set.len()`\n \n error: called `.iter().count()` on a `LinkedList`\n-  --> $DIR/iter_count.rs:61:5\n+  --> $DIR/iter_count.rs:62:5\n    |\n LL |     linked_list.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `linked_list.len()`\n \n error: called `.iter().count()` on a `BinaryHeap`\n-  --> $DIR/iter_count.rs:62:5\n+  --> $DIR/iter_count.rs:63:5\n    |\n LL |     binary_heap.iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `binary_heap.len()`\n \n error: called `.iter_mut().count()` on a `Vec`\n-  --> $DIR/iter_count.rs:64:5\n+  --> $DIR/iter_count.rs:65:5\n    |\n LL |     vec.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.len()`\n \n error: called `.iter_mut().count()` on a `slice`\n-  --> $DIR/iter_count.rs:65:14\n+  --> $DIR/iter_count.rs:66:6\n    |\n-LL |     let _ = &vec[..].iter_mut().count();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n+LL |     &vec[..].iter_mut().count();\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n \n error: called `.iter_mut().count()` on a `VecDeque`\n-  --> $DIR/iter_count.rs:66:5\n+  --> $DIR/iter_count.rs:67:5\n    |\n LL |     vec_deque.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec_deque.len()`\n \n error: called `.iter_mut().count()` on a `HashMap`\n-  --> $DIR/iter_count.rs:67:5\n+  --> $DIR/iter_count.rs:68:5\n    |\n LL |     hash_map.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_map.len()`\n \n error: called `.iter_mut().count()` on a `BTreeMap`\n-  --> $DIR/iter_count.rs:68:5\n+  --> $DIR/iter_count.rs:69:5\n    |\n LL |     b_tree_map.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_map.len()`\n \n error: called `.iter_mut().count()` on a `LinkedList`\n-  --> $DIR/iter_count.rs:69:5\n+  --> $DIR/iter_count.rs:70:5\n    |\n LL |     linked_list.iter_mut().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `linked_list.len()`\n \n error: called `.into_iter().count()` on a `slice`\n-  --> $DIR/iter_count.rs:71:14\n+  --> $DIR/iter_count.rs:72:6\n    |\n-LL |     let _ = &vec[..].into_iter().count();\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n+LL |     &vec[..].into_iter().count();\n+   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec[..].len()`\n \n error: called `.into_iter().count()` on a `Vec`\n-  --> $DIR/iter_count.rs:72:5\n+  --> $DIR/iter_count.rs:73:5\n    |\n LL |     vec.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec.len()`\n \n error: called `.into_iter().count()` on a `VecDeque`\n-  --> $DIR/iter_count.rs:73:5\n+  --> $DIR/iter_count.rs:74:5\n    |\n LL |     vec_deque.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `vec_deque.len()`\n \n error: called `.into_iter().count()` on a `HashSet`\n-  --> $DIR/iter_count.rs:74:5\n+  --> $DIR/iter_count.rs:75:5\n    |\n LL |     hash_set.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_set.len()`\n \n error: called `.into_iter().count()` on a `HashMap`\n-  --> $DIR/iter_count.rs:75:5\n+  --> $DIR/iter_count.rs:76:5\n    |\n LL |     hash_map.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `hash_map.len()`\n \n error: called `.into_iter().count()` on a `BTreeMap`\n-  --> $DIR/iter_count.rs:76:5\n+  --> $DIR/iter_count.rs:77:5\n    |\n LL |     b_tree_map.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_map.len()`\n \n error: called `.into_iter().count()` on a `BTreeSet`\n-  --> $DIR/iter_count.rs:77:5\n+  --> $DIR/iter_count.rs:78:5\n    |\n LL |     b_tree_set.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `b_tree_set.len()`\n \n error: called `.into_iter().count()` on a `LinkedList`\n-  --> $DIR/iter_count.rs:78:5\n+  --> $DIR/iter_count.rs:79:5\n    |\n LL |     linked_list.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `linked_list.len()`\n \n error: called `.into_iter().count()` on a `BinaryHeap`\n-  --> $DIR/iter_count.rs:79:5\n+  --> $DIR/iter_count.rs:80:5\n    |\n LL |     binary_heap.into_iter().count();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `binary_heap.len()`"}, {"sha": "bb93cbbd5e1904d196e29c39d453db59db8c04ff", "filename": "tests/ui/nonminimal_bool.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fnonminimal_bool.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e18101137866b79045fee0ef996e696e68c920b4/tests%2Fui%2Fnonminimal_bool.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnonminimal_bool.stderr?ref=e18101137866b79045fee0ef996e696e68c920b4", "patch": "@@ -50,10 +50,10 @@ LL |     let _ = a == b && c == 5 && a == b;\n    |\n help: try\n    |\n-LL |     let _ = a == b && c == 5;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b || c != 5);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a == b && c == 5;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:28:13\n@@ -63,10 +63,10 @@ LL |     let _ = a == b || c == 5 || a == b;\n    |\n help: try\n    |\n-LL |     let _ = a == b || c == 5;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b && c != 5);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a == b || c == 5;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:29:13\n@@ -76,10 +76,10 @@ LL |     let _ = a == b && c == 5 && b == a;\n    |\n help: try\n    |\n-LL |     let _ = a == b && c == 5;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a != b || c != 5);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a == b && c == 5;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:30:13\n@@ -89,10 +89,10 @@ LL |     let _ = a != b || !(a != b || c == d);\n    |\n help: try\n    |\n-LL |     let _ = a != b || c != d;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a == b && c == d);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a != b || c != d;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: this boolean expression can be simplified\n   --> $DIR/nonminimal_bool.rs:31:13\n@@ -102,10 +102,10 @@ LL |     let _ = a != b && !(a != b && c == d);\n    |\n help: try\n    |\n-LL |     let _ = a != b && c != d;\n-   |             ~~~~~~~~~~~~~~~~\n LL |     let _ = !(a == b || c == d);\n    |             ~~~~~~~~~~~~~~~~~~~\n+LL |     let _ = a != b && c != d;\n+   |             ~~~~~~~~~~~~~~~~\n \n error: aborting due to 12 previous errors\n "}]}