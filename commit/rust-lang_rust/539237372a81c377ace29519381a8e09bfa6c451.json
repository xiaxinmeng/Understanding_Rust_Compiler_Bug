{"sha": "539237372a81c377ace29519381a8e09bfa6c451", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzOTIzNzM3MmE4MWMzNzdhY2UyOTUxOTM4MWE4ZTA5YmZhNmM0NTE=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-08-28T03:30:41Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2014-08-28T04:05:31Z"}, "message": "Forbid ~str and ~[]\n\nThis corrects a rebasing error. Also adds a test so it won't happen again.", "tree": {"sha": "5179883701d69bd6a4699f8c36c6e95a0a822358", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5179883701d69bd6a4699f8c36c6e95a0a822358"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/539237372a81c377ace29519381a8e09bfa6c451", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/539237372a81c377ace29519381a8e09bfa6c451", "html_url": "https://github.com/rust-lang/rust/commit/539237372a81c377ace29519381a8e09bfa6c451", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/539237372a81c377ace29519381a8e09bfa6c451/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6", "html_url": "https://github.com/rust-lang/rust/commit/f2b87e9ff0ffa1e08556bf8f41058f1caeb99ac6"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "fca7a6288923caaecc95b8d616c80b7a417d38b9", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 13, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/539237372a81c377ace29519381a8e09bfa6c451/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/539237372a81c377ace29519381a8e09bfa6c451/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=539237372a81c377ace29519381a8e09bfa6c451", "patch": "@@ -1427,14 +1427,10 @@ impl<'a> Parser<'a> {\n         } else if self.token == token::TILDE {\n             // OWNED POINTER\n             self.bump();\n-            let span = self.last_span;\n+            let last_span = self.last_span;\n             match self.token {\n-                token::IDENT(ref ident, _)\n-                        if \"str\" == token::get_ident(*ident).get() => {\n-                    // This is OK (for now).\n-                }\n-                token::LBRACKET => {}   // Also OK.\n-                _ => self.obsolete(span, ObsoleteOwnedType)\n+                token::LBRACKET => self.obsolete(last_span, ObsoleteOwnedVector),\n+                _ => self.obsolete(last_span, ObsoleteOwnedType)\n             }\n             TyUniq(self.parse_ty(false))\n         } else if self.token == token::BINOP(token::STAR) {\n@@ -2563,13 +2559,10 @@ impl<'a> Parser<'a> {\n           }\n           token::TILDE => {\n             self.bump();\n-            let span = self.last_span;\n+            let last_span = self.last_span;\n             match self.token {\n-                token::LIT_STR(_) => {\n-                    // This is OK (for now).\n-                }\n-                token::LBRACKET => {}   // Also OK.\n-                _ => self.obsolete(span, ObsoleteOwnedExpr)\n+                token::LBRACKET => self.obsolete(last_span, ObsoleteOwnedVector),\n+                _ => self.obsolete(last_span, ObsoleteOwnedExpr)\n             }\n \n             let e = self.parse_prefix_expr();"}, {"sha": "fa59798c1d5661441018bd27e6974038ec85a81c", "filename": "src/test/compile-fail/obsolete-tilde.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/539237372a81c377ace29519381a8e09bfa6c451/src%2Ftest%2Fcompile-fail%2Fobsolete-tilde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/539237372a81c377ace29519381a8e09bfa6c451/src%2Ftest%2Fcompile-fail%2Fobsolete-tilde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobsolete-tilde.rs?ref=539237372a81c377ace29519381a8e09bfa6c451", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that ~ pointers give an obsolescence message.\n+\n+fn foo(x: ~int) {} //~ ERROR obsolete syntax: `~` notation for owned pointers\n+fn bar(x: ~str) {} //~ ERROR obsolete syntax: `~` notation for owned pointers\n+fn baz(x: ~[int]) {} //~ ERROR obsolete syntax: `~[T]` is no longer a type\n+\n+fn main() {\n+    let x = ~4i; //~ ERROR obsolete syntax: `~` notation for owned pointer allocation\n+    let y = ~\"hello\"; //~ ERROR obsolete syntax: `~` notation for owned pointer allocation\n+    let z = ~[1i, 2, 3]; //~ ERROR obsolete syntax: `~[T]` is no longer a type\n+}"}]}