{"sha": "d57d3f300a2e36c0889e35e5954c620387232fa0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1N2QzZjMwMGEyZTM2YzA4ODllMzVlNTk1NGM2MjAzODcyMzJmYTA=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-05-23T19:26:20Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-27T17:45:35Z"}, "message": "Using unsized_local feature is not needed in these tests", "tree": {"sha": "7eb5040d493fb8cf8cb7d22c0f1884d00eea62f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eb5040d493fb8cf8cb7d22c0f1884d00eea62f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d57d3f300a2e36c0889e35e5954c620387232fa0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl+YXL8ACgkQgTGiTgx5\n769VaxAAu5Yur0PvIwcLWGwuoTb6NBs1nNh79m0rswuW083q2AZz86fJ8tPJqhWn\nVnCVF2rSCvYeZ+wgDBYhp7TxRMhga9PshyH6CUCCYWtjaSjMBIS21NmUU/jfeJoI\ngKigveBjoaK4WK2wZ3PNJ8yhkrlebXceQfH7mqhwMX7YHx+saqx5FJln4hWslhT+\nOq8YDdLJlVXLQHWvvUF5/JklZWuminsgvuOOt6QE3p0A/2ixcLoPRDfodmFoM29q\ned8DZYGwao0mW2FQNDAOkEhaC4Oj8iWKc3SJ0wTWdRDag4jwiqooANTYU3YKd0pD\n3E74iQwygyox0joOpzSAZiHshy8k1i6C6vfw7wkDwZ+oD5xQuwyXVQUcIl6iCjSS\nMZZo/z0H2t+MmtV35fn/ZZF/A/t8zupu49gUa0LArNEFOA1yY2zKKK7T4PAWgyNd\n+XmdB7kuzKjgHWlwjWH3RZKmDTDUGtnOgsSYLIJ5QnVPs9sX+i3W4+Xaf6hpIz89\nsRsQrR9MVr2BeQbw24azuPd81i1FwMjcDpWb4RNQlpyg5ZzOTgsumivXVgqFwp2M\ntEkzd9Kt3IP4lTWO7tRHr5bfgue+juvgnkAMHtm5vNorVQlw5aMGIVZNIe0GNU4+\nMeEpG3ZumU+37zJld0+elFtlaNpT4fyU1d29PFd7gOmyxLySqrQ=\n=yogA\n-----END PGP SIGNATURE-----", "payload": "tree 7eb5040d493fb8cf8cb7d22c0f1884d00eea62f5\nparent e049ba08086fadfb942e549cf73f6806d147b0a0\nauthor Santiago Pastorino <spastorino@gmail.com> 1590261980 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1603820735 -0300\n\nUsing unsized_local feature is not needed in these tests\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d57d3f300a2e36c0889e35e5954c620387232fa0", "html_url": "https://github.com/rust-lang/rust/commit/d57d3f300a2e36c0889e35e5954c620387232fa0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d57d3f300a2e36c0889e35e5954c620387232fa0/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e049ba08086fadfb942e549cf73f6806d147b0a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e049ba08086fadfb942e549cf73f6806d147b0a0", "html_url": "https://github.com/rust-lang/rust/commit/e049ba08086fadfb942e549cf73f6806d147b0a0"}], "stats": {"total": 39, "additions": 9, "deletions": 30}, "files": [{"sha": "1729b9ffa867091033d9ecb1a5ade7e4154ac50f", "filename": "src/test/ui/unsized-locals/unsized-exprs.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs.rs?ref=d57d3f300a2e36c0889e35e5954c620387232fa0", "patch": "@@ -1,5 +1,4 @@\n-#![feature(unsized_tuple_coercion, unsized_locals, unsized_fn_params)]\n-//~^ WARN the feature `unsized_locals` is incomplete\n+#![feature(unsized_tuple_coercion, unsized_fn_params)]\n \n struct A<X: ?Sized>(X);\n "}, {"sha": "9fb401aec2cfa33991a1598fdf600c71d452e7b7", "filename": "src/test/ui/unsized-locals/unsized-exprs.stderr", "status": "modified", "additions": 4, "deletions": 13, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs.stderr?ref=d57d3f300a2e36c0889e35e5954c620387232fa0", "patch": "@@ -1,14 +1,5 @@\n-warning: the feature `unsized_locals` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/unsized-exprs.rs:1:36\n-   |\n-LL | #![feature(unsized_tuple_coercion, unsized_locals, unsized_fn_params)]\n-   |                                    ^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-   = note: see issue #48055 <https://github.com/rust-lang/rust/issues/48055> for more information\n-\n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n-  --> $DIR/unsized-exprs.rs:23:26\n+  --> $DIR/unsized-exprs.rs:22:26\n    |\n LL |     udrop::<(i32, [u8])>((42, *foo()));\n    |                          ^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -18,7 +9,7 @@ LL |     udrop::<(i32, [u8])>((42, *foo()));\n    = note: tuples must have a statically known size to be initialized\n \n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n-  --> $DIR/unsized-exprs.rs:25:22\n+  --> $DIR/unsized-exprs.rs:24:22\n    |\n LL |     udrop::<A<[u8]>>(A { 0: *foo() });\n    |                      ^^^^^^^^^^^^^^^ doesn't have a size known at compile-time\n@@ -28,7 +19,7 @@ LL |     udrop::<A<[u8]>>(A { 0: *foo() });\n    = note: structs must have a statically known size to be initialized\n \n error[E0277]: the size for values of type `[u8]` cannot be known at compilation time\n-  --> $DIR/unsized-exprs.rs:27:22\n+  --> $DIR/unsized-exprs.rs:26:22\n    |\n LL |     udrop::<A<[u8]>>(A(*foo()));\n    |                      ^ doesn't have a size known at compile-time\n@@ -37,6 +28,6 @@ LL |     udrop::<A<[u8]>>(A(*foo()));\n    = note: required because it appears within the type `A<[u8]>`\n    = note: the return type of a function must have a statically known size\n \n-error: aborting due to 3 previous errors; 1 warning emitted\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "127d8717e580602033c9bd810f4ba4d55e95d0ba", "filename": "src/test/ui/unsized-locals/unsized-exprs2.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.rs?ref=d57d3f300a2e36c0889e35e5954c620387232fa0", "patch": "@@ -1,5 +1,4 @@\n-#![feature(unsized_tuple_coercion, unsized_locals, unsized_fn_params)]\n-//~^ WARN the feature `unsized_locals` is incomplete\n+#![feature(unsized_tuple_coercion, unsized_fn_params)]\n \n struct A<X: ?Sized>(X);\n "}, {"sha": "88269f237afb7d613601da9f3479a849691e71f1", "filename": "src/test/ui/unsized-locals/unsized-exprs2.stderr", "status": "modified", "additions": 2, "deletions": 11, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-exprs2.stderr?ref=d57d3f300a2e36c0889e35e5954c620387232fa0", "patch": "@@ -1,21 +1,12 @@\n-warning: the feature `unsized_locals` is incomplete and may not be safe to use and/or cause compiler crashes\n-  --> $DIR/unsized-exprs2.rs:1:36\n-   |\n-LL | #![feature(unsized_tuple_coercion, unsized_locals, unsized_fn_params)]\n-   |                                    ^^^^^^^^^^^^^^\n-   |\n-   = note: `#[warn(incomplete_features)]` on by default\n-   = note: see issue #48055 <https://github.com/rust-lang/rust/issues/48055> for more information\n-\n error[E0508]: cannot move out of type `[u8]`, a non-copy slice\n-  --> $DIR/unsized-exprs2.rs:23:5\n+  --> $DIR/unsized-exprs2.rs:22:5\n    |\n LL |     udrop::<[u8]>(foo()[..]);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n    |     |\n    |     cannot move out of here\n    |     move occurs because value has type `[u8]`, which does not implement the `Copy` trait\n \n-error: aborting due to previous error; 1 warning emitted\n+error: aborting due to previous error\n \n For more information about this error, try `rustc --explain E0508`."}, {"sha": "2c31ade7a387310d4692887aa855ce4dc151ff48", "filename": "src/test/ui/unsized-locals/unsized-index.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d57d3f300a2e36c0889e35e5954c620387232fa0/src%2Ftest%2Fui%2Funsized-locals%2Funsized-index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized-locals%2Funsized-index.rs?ref=d57d3f300a2e36c0889e35e5954c620387232fa0", "patch": "@@ -5,8 +5,7 @@\n // Tightening the bound now could be a breaking change. Although no crater\n // regression were observed (https://github.com/rust-lang/rust/pull/59527),\n // let's be conservative and just add a test for this.\n-#![allow(incomplete_features)]\n-#![feature(unsized_locals, unsized_fn_params)]\n+#![feature(unsized_fn_params)]\n \n use std::ops;\n "}]}