{"sha": "a64575c3bd81f6f169eff22a4884984c9c5b36c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE2NDU3NWMzYmQ4MWY2ZjE2OWVmZjIyYTQ4ODQ5ODRjOWM1YjM2YzA=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-02-14T01:42:26Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2018-02-14T01:46:29Z"}, "message": "Fix default Steps without paths.\n\nSome Steps are by-default run but don't have any paths associated with\nthem. We need to have at least one PathSet per each Step, though, so we\nadd an empty one on calls to `never()`.", "tree": {"sha": "461fa914c3f4a89502f0663e4a41f87fc613d031", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/461fa914c3f4a89502f0663e4a41f87fc613d031"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a64575c3bd81f6f169eff22a4884984c9c5b36c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a64575c3bd81f6f169eff22a4884984c9c5b36c0", "html_url": "https://github.com/rust-lang/rust/commit/a64575c3bd81f6f169eff22a4884984c9c5b36c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a64575c3bd81f6f169eff22a4884984c9c5b36c0/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f104b120595d21e8aef311bc0057b3f854cddfc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/f104b120595d21e8aef311bc0057b3f854cddfc0", "html_url": "https://github.com/rust-lang/rust/commit/f104b120595d21e8aef311bc0057b3f854cddfc0"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "c00138d85e149d2e9bcaa9f666521554a16934e2", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a64575c3bd81f6f169eff22a4884984c9c5b36c0/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a64575c3bd81f6f169eff22a4884984c9c5b36c0/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=a64575c3bd81f6f169eff22a4884984c9c5b36c0", "patch": "@@ -95,7 +95,7 @@ pub struct RunConfig<'a> {\n     pub builder: &'a Builder<'a>,\n     pub host: Interned<String>,\n     pub target: Interned<String>,\n-    pub path: &'a Path,\n+    pub path: PathBuf,\n }\n \n struct StepDescription {\n@@ -114,6 +114,10 @@ struct PathSet {\n }\n \n impl PathSet {\n+    fn empty() -> PathSet {\n+        PathSet { set: BTreeSet::new() }\n+    }\n+\n     fn one<P: Into<PathBuf>>(path: P) -> PathSet {\n         let mut set = BTreeSet::new();\n         set.insert(path.into());\n@@ -124,8 +128,8 @@ impl PathSet {\n         self.set.iter().any(|p| p.ends_with(needle))\n     }\n \n-    fn path(&self) -> &Path {\n-        self.set.iter().next().unwrap()\n+    fn path(&self, builder: &Builder) -> PathBuf {\n+        self.set.iter().next().unwrap_or(&builder.build.src).to_path_buf()\n     }\n }\n \n@@ -174,7 +178,7 @@ impl StepDescription {\n             for target in targets {\n                 let run = RunConfig {\n                     builder,\n-                    path: pathset.path(),\n+                    path: pathset.path(builder),\n                     host: *host,\n                     target: *target,\n                 };\n@@ -278,7 +282,8 @@ impl<'a> ShouldRun<'a> {\n     }\n \n     // allows being more explicit about why should_run in Step returns the value passed to it\n-    pub fn never(self) -> ShouldRun<'a> {\n+    pub fn never(mut self) -> ShouldRun<'a> {\n+        self.paths.insert(PathSet::empty());\n         self\n     }\n "}]}