{"sha": "0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiODAzM2FkOGQzMjBjMDVlYzI0ZGU1YjQ1MzgwOTlmNmMzYjJlNGQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-10T16:39:25Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-07-28T14:18:38Z"}, "message": "Improve comments about const panic handling\n\nCo-authored-by: Ralf Jung <post@ralfj.de>", "tree": {"sha": "22633844c613061ded1b3c9f8a795ea0aa69c217", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22633844c613061ded1b3c9f8a795ea0aa69c217"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "html_url": "https://github.com/rust-lang/rust/commit/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e6356188f14b2c05957a4671e7a8e857fa5f429", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6356188f14b2c05957a4671e7a8e857fa5f429", "html_url": "https://github.com/rust-lang/rust/commit/4e6356188f14b2c05957a4671e7a8e857fa5f429"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "8a90686b9003f5c391cd1e7a077969ab1a12a42c", "filename": "compiler/rustc_mir/src/const_eval/machine.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fconst_eval%2Fmachine.rs?ref=0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "patch": "@@ -31,6 +31,8 @@ impl<'mir, 'tcx> InterpCx<'mir, 'tcx, CompileTimeInterpreter<'mir, 'tcx>> {\n         instance: ty::Instance<'tcx>,\n         args: &[OpTy<'tcx>],\n     ) -> InterpResult<'tcx, Option<ty::Instance<'tcx>>> {\n+        // The list of functions we handle here must be in sync with\n+        // `is_lang_panic_fn` in `transform/check_consts/mod.rs`.\n         let def_id = instance.def_id();\n         if Some(def_id) == self.tcx.lang_items().panic_fn()\n             || Some(def_id) == self.tcx.lang_items().panic_str()"}, {"sha": "7e22ed22db4fe3915bf4b5f27154cb51c5027e30", "filename": "compiler/rustc_mir/src/transform/check_consts/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fmod.rs?ref=0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "patch": "@@ -74,6 +74,9 @@ impl ConstCx<'mir, 'tcx> {\n \n /// Returns `true` if this `DefId` points to one of the official `panic` lang items.\n pub fn is_lang_panic_fn(tcx: TyCtxt<'tcx>, def_id: DefId) -> bool {\n+    // We can allow calls to these functions because `hook_panic_fn` in\n+    // `const_eval/machine.rs` ensures the calls are handled specially.\n+    // Keep in sync with what that function handles!\n     Some(def_id) == tcx.lang_items().panic_fn()\n         || Some(def_id) == tcx.lang_items().panic_str()\n         || Some(def_id) == tcx.lang_items().begin_panic_fn()"}, {"sha": "2ec6b4d15ffd10ab6849f93e1959dddbdf0d4629", "filename": "library/core/src/panicking.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/library%2Fcore%2Fsrc%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b8033ad8d320c05ec24de5b4538099f6c3b2e4d/library%2Fcore%2Fsrc%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fpanicking.rs?ref=0b8033ad8d320c05ec24de5b4538099f6c3b2e4d", "patch": "@@ -100,8 +100,8 @@ pub const fn const_panic_fmt(fmt: fmt::Arguments<'_>) -> ! {\n     if let Some(msg) = fmt.as_str() {\n         panic_str(msg);\n     } else {\n-        // SAFETY: This is only evaluated at compile time, which handles this\n-        // fine (in case it turns out this branch turns out to be reachable\n+        // SAFETY: This is only evaluated at compile time, which reliably\n+        // handles this UB (in case this branch turns out to be reachable\n         // somehow).\n         unsafe { crate::hint::unreachable_unchecked() };\n     }"}]}