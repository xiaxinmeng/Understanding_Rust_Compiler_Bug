{"sha": "5b0acfd049ca205a5a43adde9882f59a97107afd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViMGFjZmQwNDljYTIwNWE1YTQzYWRkZTk4ODJmNTlhOTcxMDdhZmQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-02-04T20:10:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-04T20:10:33Z"}, "message": "Rollup merge of #79805 - m-ou-se:iterator-reduce, r=KodrAus\n\nRename Iterator::fold_first to reduce and stabilize it\n\nThis stabilizes `#![feature(iterator_fold_self)]`.\n\nThe name for this function (originally `fold_first`) was still an open question, but the discussion on [the tracking issue](https://github.com/rust-lang/rust/issues/68125) seems to have converged to `reduce`.", "tree": {"sha": "d6dbae48c54a49e4cc1182b1d01400f5b34bce0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6dbae48c54a49e4cc1182b1d01400f5b34bce0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b0acfd049ca205a5a43adde9882f59a97107afd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgHFS5CRBK7hj4Ov3rIwAAdHIIAJAQCns8fQZuDeLAbrEkAk44\n8Oj+n4AIXFC/KhzR1Ul+eWvbOLT/C202fGs2xqtPF26BuQqHJF3WKjKJR4uyH+f3\nd09ipYGsPCpY10T22cc5ciFssCT0EgBxMonrcrM4swVujStt6V9yxGJ6DqjE1gM4\n9zEhHc2V4Azu1jSg3yHHy7gBxtf9hTC/m/FjK33mnnwlq7JVa2/NMTofH0VJl2UP\nAt3d73VHROgU31xA95X0razeG7Lsi2i9nqENHNE7qmT6F+6DT1el4TZA9hms+V/r\nMppioCMTwSQ7INDjfZYcvdxUA0WPMSR53qBjIIwCSIHYU8Kn2y0xjLMil9lelbU=\n=f+ZW\n-----END PGP SIGNATURE-----\n", "payload": "tree d6dbae48c54a49e4cc1182b1d01400f5b34bce0f\nparent d20d09712550c820c2d67a9b3ed2a3f9debb9393\nparent 24e09401696e6b2689ae4c78d9a24504a17f1e3a\nauthor Mara Bos <m-ou.se@m-ou.se> 1612469433 +0100\ncommitter GitHub <noreply@github.com> 1612469433 +0100\n\nRollup merge of #79805 - m-ou-se:iterator-reduce, r=KodrAus\n\nRename Iterator::fold_first to reduce and stabilize it\n\nThis stabilizes `#![feature(iterator_fold_self)]`.\n\nThe name for this function (originally `fold_first`) was still an open question, but the discussion on [the tracking issue](https://github.com/rust-lang/rust/issues/68125) seems to have converged to `reduce`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b0acfd049ca205a5a43adde9882f59a97107afd", "html_url": "https://github.com/rust-lang/rust/commit/5b0acfd049ca205a5a43adde9882f59a97107afd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b0acfd049ca205a5a43adde9882f59a97107afd/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d20d09712550c820c2d67a9b3ed2a3f9debb9393", "url": "https://api.github.com/repos/rust-lang/rust/commits/d20d09712550c820c2d67a9b3ed2a3f9debb9393", "html_url": "https://github.com/rust-lang/rust/commit/d20d09712550c820c2d67a9b3ed2a3f9debb9393"}, {"sha": "24e09401696e6b2689ae4c78d9a24504a17f1e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/24e09401696e6b2689ae4c78d9a24504a17f1e3a", "html_url": "https://github.com/rust-lang/rust/commit/24e09401696e6b2689ae4c78d9a24504a17f1e3a"}], "stats": {"total": 37, "additions": 22, "deletions": 15}, "files": [{"sha": "ddf52caed088a452414802dc9470169e2e33a217", "filename": "compiler/rustc_ast/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b0acfd049ca205a5a43adde9882f59a97107afd/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0acfd049ca205a5a43adde9882f59a97107afd/compiler%2Frustc_ast%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast%2Fsrc%2Flib.rs?ref=5b0acfd049ca205a5a43adde9882f59a97107afd", "patch": "@@ -14,7 +14,6 @@\n #![feature(const_fn_transmute)]\n #![feature(const_panic)]\n #![feature(crate_visibility_modifier)]\n-#![feature(iterator_fold_self)]\n #![feature(label_break_value)]\n #![feature(nll)]\n #![feature(or_patterns)]"}, {"sha": "6487b23a6a60af7312e7894e6022545c2cecd51c", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5b0acfd049ca205a5a43adde9882f59a97107afd/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0acfd049ca205a5a43adde9882f59a97107afd/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=5b0acfd049ca205a5a43adde9882f59a97107afd", "patch": "@@ -358,7 +358,7 @@ impl GenericArgs<'_> {\n             .iter()\n             .filter(|arg| !arg.is_synthetic())\n             .map(|arg| arg.span())\n-            .fold_first(|span1, span2| span1.to(span2))\n+            .reduce(|span1, span2| span1.to(span2))\n     }\n \n     /// Returns span encompassing arguments and their surrounding `<>` or `()`"}, {"sha": "c69a9b063aeca618cd943422ae4e94ff8ecd409d", "filename": "compiler/rustc_hir/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5b0acfd049ca205a5a43adde9882f59a97107afd/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0acfd049ca205a5a43adde9882f59a97107afd/compiler%2Frustc_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Flib.rs?ref=5b0acfd049ca205a5a43adde9882f59a97107afd", "patch": "@@ -6,7 +6,6 @@\n #![feature(const_fn)] // For the unsizing cast on `&[]`\n #![feature(const_panic)]\n #![feature(in_band_lifetimes)]\n-#![feature(iterator_fold_self)]\n #![feature(once_cell)]\n #![feature(or_patterns)]\n #![recursion_limit = \"256\"]"}, {"sha": "6b42d456205cdd263637a0c29877e855d7644d90", "filename": "library/core/src/iter/traits/iterator.rs", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5b0acfd049ca205a5a43adde9882f59a97107afd/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b0acfd049ca205a5a43adde9882f59a97107afd/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Ftraits%2Fiterator.rs?ref=5b0acfd049ca205a5a43adde9882f59a97107afd", "patch": "@@ -2028,7 +2028,8 @@ pub trait Iterator {\n         self.try_fold((), call(f))\n     }\n \n-    /// An iterator method that applies a function, producing a single, final value.\n+    /// Folds every element into an accumulator by applying an operation,\n+    /// returning the final result.\n     ///\n     /// `fold()` takes two arguments: an initial value, and a closure with two\n     /// arguments: an 'accumulator', and an element. The closure returns the value that\n@@ -2049,6 +2050,9 @@ pub trait Iterator {\n     /// may not terminate for infinite iterators, even on traits for which a\n     /// result is determinable in finite time.\n     ///\n+    /// Note: [`reduce()`] can be used to use the first element as the initial\n+    /// value, if the accumulator type and item type is the same.\n+    ///\n     /// # Note to Implementors\n     ///\n     /// Several of the other (forward) methods have default implementations in\n@@ -2104,6 +2108,8 @@ pub trait Iterator {\n     /// // they're the same\n     /// assert_eq!(result, result2);\n     /// ```\n+    ///\n+    /// [`reduce()`]: Iterator::reduce\n     #[doc(alias = \"reduce\")]\n     #[doc(alias = \"inject\")]\n     #[inline]\n@@ -2120,10 +2126,15 @@ pub trait Iterator {\n         accum\n     }\n \n-    /// The same as [`fold()`], but uses the first element in the\n-    /// iterator as the initial value, folding every subsequent element into it.\n-    /// If the iterator is empty, return [`None`]; otherwise, return the result\n-    /// of the fold.\n+    /// Reduces the elements to a single one, by repeatedly applying a reducing\n+    /// operation.\n+    ///\n+    /// If the iterator is empty, returns [`None`]; otherwise, returns the\n+    /// result of the reduction.\n+    ///\n+    /// For iterators with at least one element, this is the same as [`fold()`]\n+    /// with the first element of the iterator as the initial value, folding\n+    /// every subsequent element into it.\n     ///\n     /// [`fold()`]: Iterator::fold\n     ///\n@@ -2132,13 +2143,11 @@ pub trait Iterator {\n     /// Find the maximum value:\n     ///\n     /// ```\n-    /// #![feature(iterator_fold_self)]\n-    ///\n     /// fn find_max<I>(iter: I) -> Option<I::Item>\n     ///     where I: Iterator,\n     ///           I::Item: Ord,\n     /// {\n-    ///     iter.fold_first(|a, b| {\n+    ///     iter.reduce(|a, b| {\n     ///         if a >= b { a } else { b }\n     ///     })\n     /// }\n@@ -2149,8 +2158,8 @@ pub trait Iterator {\n     /// assert_eq!(find_max(b.iter()), None);\n     /// ```\n     #[inline]\n-    #[unstable(feature = \"iterator_fold_self\", issue = \"68125\")]\n-    fn fold_first<F>(mut self, f: F) -> Option<Self::Item>\n+    #[stable(feature = \"iterator_fold_self\", since = \"1.51.0\")]\n+    fn reduce<F>(mut self, f: F) -> Option<Self::Item>\n     where\n         Self: Sized,\n         F: FnMut(Self::Item, Self::Item) -> Self::Item,\n@@ -2647,7 +2656,7 @@ pub trait Iterator {\n             move |x, y| cmp::max_by(x, y, &mut compare)\n         }\n \n-        self.fold_first(fold(compare))\n+        self.reduce(fold(compare))\n     }\n \n     /// Returns the element that gives the minimum value from the\n@@ -2707,7 +2716,7 @@ pub trait Iterator {\n             move |x, y| cmp::min_by(x, y, &mut compare)\n         }\n \n-        self.fold_first(fold(compare))\n+        self.reduce(fold(compare))\n     }\n \n     /// Reverses an iterator's direction."}]}