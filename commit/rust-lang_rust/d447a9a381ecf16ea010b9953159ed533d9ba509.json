{"sha": "d447a9a381ecf16ea010b9953159ed533d9ba509", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0NDdhOWEzODFlY2YxNmVhMDEwYjk5NTMxNTllZDUzM2Q5YmE1MDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-15T12:59:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-15T12:59:49Z"}, "message": "Merge #6240\n\n6240: Document auto_import as a feature r=Veykril a=Veykril\n\nCloses #6225\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "a0b82dd504b2c9398cf3e01628f359f56bfafbc6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0b82dd504b2c9398cf3e01628f359f56bfafbc6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d447a9a381ecf16ea010b9953159ed533d9ba509", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfiEfFCRBK7hj4Ov3rIwAAdHIIAIOTP1UfjhZ5Zm2PLkORN7NN\nlMWqNZFwjj4wzLxf6YpV+l5paj89L1ovv165HIoqii7Cm6axResUnx5yvR2UBYx+\ny1DEQNIiQ7XAnB7KZQSGrVm/Ih7G0M3gLXynbR7GmL5Hsr1KUbxEh17VHf5y9cvl\njzsaKUUBSS+J/kp3e7GUZXUfANBD9f1atzcfLh2sF8tOrWyUzqxnZFvsBaFWT5DK\nABk4k3UmercHG2rF3ScOdBaYJ6OsmC/ehS4Igib6BsP81xQEwfVTiyhaJUalKCGx\n3V7sn5r40o4qdPCFJ/MYANCkNheTxzilqv2Q6eureCaKW6M1jS253MC4xCAJS7w=\n=XlWU\n-----END PGP SIGNATURE-----\n", "payload": "tree a0b82dd504b2c9398cf3e01628f359f56bfafbc6\nparent 7dd09a7b34d7c9cc2739a1106b3e383b7d9044ff\nparent f8a7cc678db857ac177e177020e2bc051822f9a5\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602766789 +0000\ncommitter GitHub <noreply@github.com> 1602766789 +0000\n\nMerge #6240\n\n6240: Document auto_import as a feature r=Veykril a=Veykril\n\nCloses #6225\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d447a9a381ecf16ea010b9953159ed533d9ba509", "html_url": "https://github.com/rust-lang/rust/commit/d447a9a381ecf16ea010b9953159ed533d9ba509", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d447a9a381ecf16ea010b9953159ed533d9ba509/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7dd09a7b34d7c9cc2739a1106b3e383b7d9044ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/7dd09a7b34d7c9cc2739a1106b3e383b7d9044ff", "html_url": "https://github.com/rust-lang/rust/commit/7dd09a7b34d7c9cc2739a1106b3e383b7d9044ff"}, {"sha": "f8a7cc678db857ac177e177020e2bc051822f9a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8a7cc678db857ac177e177020e2bc051822f9a5", "html_url": "https://github.com/rust-lang/rust/commit/f8a7cc678db857ac177e177020e2bc051822f9a5"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "4a7059c83da853f5d7d665fb518e984b036b8d05", "filename": "crates/assists/src/handlers/auto_import.rs", "status": "modified", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/d447a9a381ecf16ea010b9953159ed533d9ba509/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d447a9a381ecf16ea010b9953159ed533d9ba509/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Fauto_import.rs?ref=d447a9a381ecf16ea010b9953159ed533d9ba509", "patch": "@@ -6,6 +6,61 @@ use crate::{\n     AssistContext, AssistId, AssistKind, Assists, GroupLabel,\n };\n \n+// Feature: Import Insertion\n+//\n+// Using the `auto-import` assist it is possible to insert missing imports for unresolved items.\n+// When inserting an import it will do so in a structured manner by keeping imports grouped,\n+// separated by a newline in the following order:\n+//\n+// - `std` and `core`\n+// - External Crates\n+// - Current Crate, paths prefixed by `crate`\n+// - Current Module, paths prefixed by `self`\n+// - Super Module, paths prefixed by `super`\n+//\n+// Example:\n+// ```rust\n+// use std::fs::File;\n+//\n+// use itertools::Itertools;\n+// use syntax::ast;\n+//\n+// use crate::utils::insert_use;\n+//\n+// use self::auto_import;\n+//\n+// use super::AssistContext;\n+// ```\n+//\n+// .Merge Behaviour\n+//\n+// It is possible to configure how use-trees are merged with the `importMergeBehaviour` setting.\n+// It has the following configurations:\n+//\n+// - `full`: This setting will cause auto-import to always completely merge use-trees that share the\n+//  same path prefix while also merging inner trees that share the same path-prefix. This kind of\n+//  nesting is only supported in Rust versions later than 1.24.\n+// - `last`: This setting will cause auto-import to merge use-trees as long as the resulting tree\n+//  will only contain a nesting of single segment paths at the very end.\n+// - `none`: This setting will cause auto-import to never merge use-trees keeping them as simple\n+//  paths.\n+//\n+// In `VS Code` the configuration for this is `rust-analyzer.assist.importMergeBehaviour`.\n+//\n+// .Import Prefix\n+//\n+// The style of imports in the same crate is configurable through the `importPrefix` setting.\n+// It has the following configurations:\n+//\n+// - `by_crate`: This setting will force paths to be always absolute, starting with the `crate`\n+//  prefix, unless the item is defined outside of the current crate.\n+// - `by_self`: This setting will force paths that are relative to the current module to always\n+//  start with `self`. This will result in paths that always start with either `crate`, `self`,\n+//  `super` or an extern crate identifier.\n+// - `plain`: This setting does not impose any restrictions in imports.\n+//\n+// In `VS Code` the configuration for this is `rust-analyzer.assist.importPrefix`.\n+\n // Assist: auto_import\n //\n // If the name is unresolved, provides all possible imports for it."}]}