{"sha": "47fe696d8f247d91c67068c25bb91767713aeb60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZmU2OTZkOGYyNDdkOTFjNjcwNjhjMjViYjkxNzY3NzEzYWViNjA=", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-06-08T08:07:52Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-06-08T08:07:52Z"}, "message": "use non_erasable_generics", "tree": {"sha": "ef27edfa785daaf6f581c77c69b8218cd9608b40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef27edfa785daaf6f581c77c69b8218cd9608b40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47fe696d8f247d91c67068c25bb91767713aeb60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47fe696d8f247d91c67068c25bb91767713aeb60", "html_url": "https://github.com/rust-lang/rust/commit/47fe696d8f247d91c67068c25bb91767713aeb60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47fe696d8f247d91c67068c25bb91767713aeb60/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "21078c140fcb83c4232a8e7c6ad6707c3f10cdcb", "url": "https://api.github.com/repos/rust-lang/rust/commits/21078c140fcb83c4232a8e7c6ad6707c3f10cdcb", "html_url": "https://github.com/rust-lang/rust/commit/21078c140fcb83c4232a8e7c6ad6707c3f10cdcb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "bfb4c0cb538dec29ad8ec51ae8a3c125a0836d8b", "filename": "compiler/rustc_middle/src/ty/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/47fe696d8f247d91c67068c25bb91767713aeb60/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47fe696d8f247d91c67068c25bb91767713aeb60/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fdiagnostics.rs?ref=47fe696d8f247d91c67068c25bb91767713aeb60", "patch": "@@ -54,7 +54,7 @@ impl<'tcx> TyS<'tcx> {\n     /// ADTs with no type arguments.\n     pub fn is_simple_text(&self) -> bool {\n         match self.kind() {\n-            Adt(_, substs) => substs.types().next().is_none() && substs.consts().next().is_none(),\n+            Adt(_, substs) => substs.non_erasable_generics().next().is_none(),\n             Ref(_, ty, _) => ty.is_simple_text(),\n             _ => self.is_simple_ty(),\n         }"}]}