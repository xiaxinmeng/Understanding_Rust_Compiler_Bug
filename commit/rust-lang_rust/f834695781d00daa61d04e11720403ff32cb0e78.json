{"sha": "f834695781d00daa61d04e11720403ff32cb0e78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4MzQ2OTU3ODFkMDBkYWE2MWQwNGUxMTcyMDQwM2ZmMzJjYjBlNzg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-23T08:58:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-23T08:58:24Z"}, "message": "Auto merge of #63521 - newpavlov:redox_builder, r=pietroalbini\n\nRe-enable Redox builder (take 2)\n\nCloses: #63160", "tree": {"sha": "218129b5d456e040429c2c71d923909805e9c8a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/218129b5d456e040429c2c71d923909805e9c8a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f834695781d00daa61d04e11720403ff32cb0e78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f834695781d00daa61d04e11720403ff32cb0e78", "html_url": "https://github.com/rust-lang/rust/commit/f834695781d00daa61d04e11720403ff32cb0e78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f834695781d00daa61d04e11720403ff32cb0e78/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0507d49755b9f506da8770af757704eb5c2b54d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0507d49755b9f506da8770af757704eb5c2b54d7", "html_url": "https://github.com/rust-lang/rust/commit/0507d49755b9f506da8770af757704eb5c2b54d7"}, {"sha": "2ff1f45ead012271823aa8c9693717b493b72fa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ff1f45ead012271823aa8c9693717b493b72fa6", "html_url": "https://github.com/rust-lang/rust/commit/2ff1f45ead012271823aa8c9693717b493b72fa6"}], "stats": {"total": 48, "additions": 22, "deletions": 26}, "files": [{"sha": "d96f92505adece74aebdabb3d50bad93937feb15", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f834695781d00daa61d04e11720403ff32cb0e78/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/f834695781d00daa61d04e11720403ff32cb0e78/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=f834695781d00daa61d04e11720403ff32cb0e78", "patch": "@@ -1580,9 +1580,9 @@ checksum = \"b294d6fa9ee409a054354afc4352b0b9ef7ca222c69b8812cbea9e7d2bf3783f\"\n \n [[package]]\n name = \"libc\"\n-version = \"0.2.60\"\n+version = \"0.2.61\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d44e80633f007889c7eff624b709ab43c92d708caad982295768a7b13ca3b5eb\"\n+checksum = \"c665266eb592905e8503ba3403020f4b8794d26263f412ca33171600eca9a6fa\"\n dependencies = [\n  \"rustc-std-workspace-core\",\n ]"}, {"sha": "105791194628b3130866d55f5293fb1b6431756d", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f834695781d00daa61d04e11720403ff32cb0e78/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/f834695781d00daa61d04e11720403ff32cb0e78/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=f834695781d00daa61d04e11720403ff32cb0e78", "patch": "@@ -104,9 +104,7 @@ ENV TARGETS=$TARGETS,armv5te-unknown-linux-musleabi\n ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabihf\n ENV TARGETS=$TARGETS,aarch64-unknown-linux-musl\n ENV TARGETS=$TARGETS,sparc64-unknown-linux-gnu\n-# FIXME: temporarily disable the redox builder,\n-# see: https://github.com/rust-lang/rust/issues/63160\n-# ENV TARGETS=$TARGETS,x86_64-unknown-redox\n+ENV TARGETS=$TARGETS,x86_64-unknown-redox\n ENV TARGETS=$TARGETS,thumbv6m-none-eabi\n ENV TARGETS=$TARGETS,thumbv7m-none-eabi\n ENV TARGETS=$TARGETS,thumbv7em-none-eabi\n@@ -132,7 +130,7 @@ ENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n     CC_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-gcc \\\n     AR_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-ar \\\n     CXX_thumbv7neon_unknown_linux_gnueabihf=arm-linux-gnueabihf-g++\n-    \n+\n ENV RUST_CONFIGURE_ARGS \\\n       --musl-root-armv5te=/musl-armv5te \\\n       --musl-root-arm=/musl-arm \\"}, {"sha": "e6a742bd45d0bb0e8041f89f544ac21c898fe871", "filename": "src/libstd/sys/unix/process/process_unix.rs", "status": "modified", "additions": 12, "deletions": 13, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/f834695781d00daa61d04e11720403ff32cb0e78/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f834695781d00daa61d04e11720403ff32cb0e78/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess%2Fprocess_unix.rs?ref=f834695781d00daa61d04e11720403ff32cb0e78", "patch": "@@ -178,23 +178,22 @@ impl Command {\n             cvt_r(|| libc::dup2(fd, libc::STDERR_FILENO))?;\n         }\n \n-        if cfg!(not(any(target_os = \"l4re\"))) {\n+        #[cfg(not(target_os = \"l4re\"))]\n+        {\n             if let Some(u) = self.get_gid() {\n                 cvt(libc::setgid(u as gid_t))?;\n             }\n             if let Some(u) = self.get_uid() {\n+                // When dropping privileges from root, the `setgroups` call\n+                // will remove any extraneous groups. If we don't call this,\n+                // then even though our uid has dropped, we may still have\n+                // groups that enable us to do super-user things. This will\n+                // fail if we aren't root, so don't bother checking the\n+                // return value, this is just done as an optimistic\n+                // privilege dropping function.\n                 //FIXME: Redox kernel does not support setgroups yet\n-                if cfg!(not(target_os = \"redox\")) {\n-                    // When dropping privileges from root, the `setgroups` call\n-                    // will remove any extraneous groups. If we don't call this,\n-                    // then even though our uid has dropped, we may still have\n-                    // groups that enable us to do super-user things. This will\n-                    // fail if we aren't root, so don't bother checking the\n-                    // return value, this is just done as an optimistic\n-                    // privilege dropping function.\n-                    let _ = libc::setgroups(0, ptr::null());\n-                }\n-\n+                #[cfg(not(target_os = \"redox\"))]\n+                let _ = libc::setgroups(0, ptr::null());\n                 cvt(libc::setuid(u as uid_t))?;\n             }\n         }\n@@ -203,7 +202,7 @@ impl Command {\n         }\n \n         // emscripten has no signal support.\n-        #[cfg(not(any(target_os = \"emscripten\")))]\n+        #[cfg(not(target_os = \"emscripten\"))]\n         {\n             use crate::mem::MaybeUninit;\n             // Reset signal handling so the child process starts in a"}, {"sha": "5e0f19fe553d92c30394706dfc525433d856403d", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f834695781d00daa61d04e11720403ff32cb0e78/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f834695781d00daa61d04e11720403ff32cb0e78/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=f834695781d00daa61d04e11720403ff32cb0e78", "patch": "@@ -965,12 +965,11 @@ fn use_color(opts: &TestOpts) -> bool {\n \n #[cfg(any(\n     target_os = \"cloudabi\",\n-    target_os = \"redox\",\n     all(target_arch = \"wasm32\", not(target_os = \"emscripten\")),\n     all(target_vendor = \"fortanix\", target_env = \"sgx\")\n ))]\n fn stdout_isatty() -> bool {\n-    // FIXME: Implement isatty on Redox and SGX\n+    // FIXME: Implement isatty on SGX\n     false\n }\n #[cfg(unix)]\n@@ -1193,15 +1192,15 @@ fn get_concurrency() -> usize {\n         }\n     }\n \n-    #[cfg(target_os = \"redox\")]\n+    #[cfg(target_os = \"vxworks\")]\n     fn num_cpus() -> usize {\n-        // FIXME: Implement num_cpus on Redox\n+        // FIXME: Implement num_cpus on vxWorks\n         1\n     }\n \n-    #[cfg(target_os = \"vxworks\")]\n+    #[cfg(target_os = \"redox\")]\n     fn num_cpus() -> usize {\n-        // FIXME: Implement num_cpus on vxWorks\n+        // FIXME: Implement num_cpus on Redox\n         1\n     }\n \n@@ -1221,7 +1220,7 @@ fn get_concurrency() -> usize {\n         target_os = \"ios\",\n         target_os = \"linux\",\n         target_os = \"macos\",\n-        target_os = \"solaris\"\n+        target_os = \"solaris\",\n     ))]\n     fn num_cpus() -> usize {\n         unsafe { libc::sysconf(libc::_SC_NPROCESSORS_ONLN) as usize }"}]}