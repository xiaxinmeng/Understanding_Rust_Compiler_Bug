{"sha": "fc460b1e423c2c510a10539f8289af548685676c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNDYwYjFlNDIzYzJjNTEwYTEwNTM5ZjgyODlhZjU0ODY4NTY3NmM=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-04-20T19:42:36Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-04-20T19:42:36Z"}, "message": "Migrate to Result<T, io::Error> -> io::Result<T>", "tree": {"sha": "6611fc8cd75c5f80ff766617260ae47584910297", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6611fc8cd75c5f80ff766617260ae47584910297"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc460b1e423c2c510a10539f8289af548685676c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc460b1e423c2c510a10539f8289af548685676c", "html_url": "https://github.com/rust-lang/rust/commit/fc460b1e423c2c510a10539f8289af548685676c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc460b1e423c2c510a10539f8289af548685676c/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8ca817456ed60b0163d3f81c58f6db9e6372e5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8ca817456ed60b0163d3f81c58f6db9e6372e5f", "html_url": "https://github.com/rust-lang/rust/commit/d8ca817456ed60b0163d3f81c58f6db9e6372e5f"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "e24944af4b9a0e2938ec5a4d17ab338d603180c2", "filename": "crates/ra_proc_macro/src/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fc460b1e423c2c510a10539f8289af548685676c/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc460b1e423c2c510a10539f8289af548685676c/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro%2Fsrc%2Fprocess.rs?ref=fc460b1e423c2c510a10539f8289af548685676c", "patch": "@@ -48,7 +48,7 @@ impl Process {\n     fn run(\n         process_path: PathBuf,\n         args: impl IntoIterator<Item = impl AsRef<OsStr>>,\n-    ) -> Result<Process, io::Error> {\n+    ) -> io::Result<Process> {\n         let child = Command::new(&process_path)\n             .args(args)\n             .stdin(Stdio::piped())\n@@ -59,7 +59,7 @@ impl Process {\n         Ok(Process { path: process_path, child })\n     }\n \n-    fn restart(&mut self) -> Result<(), io::Error> {\n+    fn restart(&mut self) -> io::Result<()> {\n         let _ = self.child.kill();\n         self.child = Command::new(&self.path)\n             .stdin(Stdio::piped())\n@@ -196,7 +196,7 @@ fn send_request(\n     mut writer: &mut impl Write,\n     mut reader: &mut impl BufRead,\n     req: Request,\n-) -> Result<Option<Response>, io::Error> {\n+) -> io::Result<Option<Response>> {\n     req.write(&mut writer)?;\n     Ok(Response::read(&mut reader)?)\n }"}]}