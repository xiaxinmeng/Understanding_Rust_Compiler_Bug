{"sha": "91bfa4b154a9776a57f25071f03e68d4f9f5ef35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYmZhNGIxNTRhOTc3NmE1N2YyNTA3MWYwM2U2OGQ0ZjlmNWVmMzU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-05T17:11:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-05T17:11:09Z"}, "message": "Merge #9496\n\n9496: fix: make the logs line buffered r=lnicola a=mahdi-frms\n\nfixes #9432\r\nNot quite sure if that's what you want, but storing the log message in buffers eliminated the tiny write syscalls for me.\r\nI just changed the Logger struct.\n\nCo-authored-by: mahdi-frms <mahdif1380@outlook.com>", "tree": {"sha": "b3aac9d7575673149e1842922d16f9f6e6743aa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3aac9d7575673149e1842922d16f9f6e6743aa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91bfa4b154a9776a57f25071f03e68d4f9f5ef35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg4z0tCRBK7hj4Ov3rIwAAGVsIAB698YC/pyDLT4zO6EY9fF0h\ncDoiqLbH9pnrcksOF65q4EbK2hoYDeyYFGdye6dsY9LIJbLfDxY0E/nzPoRnDtFy\nH5adyWIEurWYRWv7rm6cBKb35Hx9YqjOE3zTHMdcqNJdizbMeddj0lsp7fV8FeV/\nMHI3sGWPJRmP+2KG0lFRR7Jl4+xtMhvoIwutzKJ1StRHR0ancB7B4P3Cuirncjci\nMwCMNKdr8nW7rKoINGerwxff4DcUeNN0AfB0qL9jHua7564EOTUX5FIytdi/hiL/\nou/+cbwNEwHYXefwwOOLythMYzJR7GfGHCy9fGR+wHLl536Rgr/pIFQh+1W+774=\n=V0VK\n-----END PGP SIGNATURE-----\n", "payload": "tree b3aac9d7575673149e1842922d16f9f6e6743aa4\nparent 8b8eac5bf9d0b8d9c0fa4499179cfff88de1f5e4\nparent 60e304c7b6f56b389c9f3ca723f206d9c3f3e735\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1625505069 +0000\ncommitter GitHub <noreply@github.com> 1625505069 +0000\n\nMerge #9496\n\n9496: fix: make the logs line buffered r=lnicola a=mahdi-frms\n\nfixes #9432\r\nNot quite sure if that's what you want, but storing the log message in buffers eliminated the tiny write syscalls for me.\r\nI just changed the Logger struct.\n\nCo-authored-by: mahdi-frms <mahdif1380@outlook.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91bfa4b154a9776a57f25071f03e68d4f9f5ef35", "html_url": "https://github.com/rust-lang/rust/commit/91bfa4b154a9776a57f25071f03e68d4f9f5ef35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91bfa4b154a9776a57f25071f03e68d4f9f5ef35/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b8eac5bf9d0b8d9c0fa4499179cfff88de1f5e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b8eac5bf9d0b8d9c0fa4499179cfff88de1f5e4", "html_url": "https://github.com/rust-lang/rust/commit/8b8eac5bf9d0b8d9c0fa4499179cfff88de1f5e4"}, {"sha": "60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "url": "https://api.github.com/repos/rust-lang/rust/commits/60e304c7b6f56b389c9f3ca723f206d9c3f3e735", "html_url": "https://github.com/rust-lang/rust/commit/60e304c7b6f56b389c9f3ca723f206d9c3f3e735"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "f8f57b2aa7ce956465a39acfe84a47130b7a2939", "filename": "crates/rust-analyzer/src/bin/logger.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/91bfa4b154a9776a57f25071f03e68d4f9f5ef35/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91bfa4b154a9776a57f25071f03e68d4f9f5ef35/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Flogger.rs?ref=91bfa4b154a9776a57f25071f03e68d4f9f5ef35", "patch": "@@ -48,31 +48,31 @@ impl Log for Logger {\n             return;\n         }\n \n-        let should_flush = match &self.file {\n+        match &self.file {\n             Some(w) => {\n+                let mut writer = w.lock();\n                 let _ = writeln!(\n-                    w.lock(),\n+                    writer,\n                     \"[{} {}] {}\",\n                     record.level(),\n                     record.module_path().unwrap_or_default(),\n                     record.args(),\n                 );\n-                self.no_buffering\n+\n+                if self.no_buffering {\n+                    let _ = writer.flush();\n+                }\n             }\n             None => {\n-                eprintln!(\n-                    \"[{} {}] {}\",\n+                let message = format!(\n+                    \"[{} {}] {}\\n\",\n                     record.level(),\n                     record.module_path().unwrap_or_default(),\n                     record.args(),\n                 );\n-                true // flush stderr unconditionally\n+                eprint!(\"{}\", message);\n             }\n         };\n-\n-        if should_flush {\n-            self.flush();\n-        }\n     }\n \n     fn flush(&self) {"}]}