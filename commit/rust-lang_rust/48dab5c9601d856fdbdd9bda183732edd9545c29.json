{"sha": "48dab5c9601d856fdbdd9bda183732edd9545c29", "node_id": "C_kwDOAAsO6NoAKDQ4ZGFiNWM5NjAxZDg1NmZkYmRkOWJkYTE4MzczMmVkZDk1NDVjMjk", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-12-01T01:53:39Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-12-21T03:50:06Z"}, "message": "Test for issue-86035", "tree": {"sha": "aa212288a900c5389c481220e3540389e378be04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa212288a900c5389c481220e3540389e378be04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48dab5c9601d856fdbdd9bda183732edd9545c29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48dab5c9601d856fdbdd9bda183732edd9545c29", "html_url": "https://github.com/rust-lang/rust/commit/48dab5c9601d856fdbdd9bda183732edd9545c29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48dab5c9601d856fdbdd9bda183732edd9545c29/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b0799608b670be5fd6d4303489689c3d52c99c", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b0799608b670be5fd6d4303489689c3d52c99c", "html_url": "https://github.com/rust-lang/rust/commit/99b0799608b670be5fd6d4303489689c3d52c99c"}], "stats": {"total": 97, "additions": 97, "deletions": 0}, "files": [{"sha": "2a25d60acff7bf9556cdf6d26a3a50910f4c5667", "filename": "src/test/ui/imports/auxiliary/overlapping_pub_trait_source.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Foverlapping_pub_trait_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Foverlapping_pub_trait_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Foverlapping_pub_trait_source.rs?ref=48dab5c9601d856fdbdd9bda183732edd9545c29", "patch": "@@ -0,0 +1,13 @@\n+/* This crate declares an item as both `prelude::*` and `m::Tr`.\n+ * The compiler should always suggest `m::Tr`. */\n+\n+pub struct S;\n+\n+pub mod prelude {\n+    pub use crate::m::Tr as _;\n+}\n+\n+pub mod m {\n+    pub trait Tr { fn method(&self); }\n+    impl Tr for crate::S { fn method(&self) {} }\n+}"}, {"sha": "d73c9a795b673c04e4d31f10960b5ea172a00908", "filename": "src/test/ui/imports/auxiliary/unnamed_pub_trait_source.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Funnamed_pub_trait_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Funnamed_pub_trait_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fauxiliary%2Funnamed_pub_trait_source.rs?ref=48dab5c9601d856fdbdd9bda183732edd9545c29", "patch": "@@ -0,0 +1,13 @@\n+/* This crate declares an item that is unnamed.\n+ * Its only public path is through `prelude::*`. */\n+\n+pub struct S;\n+\n+mod m {\n+    pub trait Tr { fn method(&self); }\n+    impl Tr for crate::S { fn method(&self) {} }\n+}\n+\n+pub mod prelude {\n+    pub use crate::m::Tr as _;\n+}"}, {"sha": "a28c3b6cd4606c3ee43f1c9c33460f4f5702fcc5", "filename": "src/test/ui/imports/overlapping_pub_trait.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Foverlapping_pub_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Foverlapping_pub_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Foverlapping_pub_trait.rs?ref=48dab5c9601d856fdbdd9bda183732edd9545c29", "patch": "@@ -0,0 +1,15 @@\n+// aux-build:overlapping_pub_trait_source.rs\n+\n+/*\n+ * This crate declares two public paths, `m::Tr` and `prelude::_`. Make sure we prefer the former.\n+ */\n+extern crate overlapping_pub_trait_source;\n+\n+fn main() {\n+    //~^ HELP the following trait is implemented but not in scope; perhaps add a `use` for it:\n+    //~| SUGGESTION overlapping_pub_trait_source::prelude::_\n+    use overlapping_pub_trait_source::S;\n+    S.method();\n+    //~^ ERROR no method named `method` found for struct `S` in the current scope [E0599]\n+    //~| HELP items from traits can only be used if the trait is in scope\n+}"}, {"sha": "36ea9ae006e0151be1fcba153ac60f943377437f", "filename": "src/test/ui/imports/overlapping_pub_trait.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Foverlapping_pub_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Foverlapping_pub_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Foverlapping_pub_trait.stderr?ref=48dab5c9601d856fdbdd9bda183732edd9545c29", "patch": "@@ -0,0 +1,20 @@\n+error[E0599]: no method named `method` found for struct `S` in the current scope\n+  --> $DIR/overlapping_pub_trait.rs:12:7\n+   |\n+LL |     S.method();\n+   |       ^^^^^^ method not found in `S`\n+   |\n+  ::: $DIR/auxiliary/overlapping_pub_trait_source.rs:11:23\n+   |\n+LL |     pub trait Tr { fn method(&self); }\n+   |                       ------ the method is available for `S` here\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+help: the following trait is implemented but not in scope; perhaps add a `use` for it:\n+   |\n+LL | use overlapping_pub_trait_source::prelude::_;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}, {"sha": "79f7ebfbd4aace1b019ee9819ad2fbf06db0f030", "filename": "src/test/ui/imports/unnamed_pub_trait.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Funnamed_pub_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Funnamed_pub_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funnamed_pub_trait.rs?ref=48dab5c9601d856fdbdd9bda183732edd9545c29", "patch": "@@ -0,0 +1,16 @@\n+// aux-build:unnamed_pub_trait_source.rs\n+\n+/*\n+ * This crate declares an unnameable public path for our item. Make sure we don't suggest\n+ * importing it by name, and instead we suggest importing it by glob.\n+ */\n+extern crate unnamed_pub_trait_source;\n+\n+fn main() {\n+    //~^ HELP the following trait is implemented but not in scope; perhaps add a `use` for it:\n+    //~| SUGGESTION unnamed_pub_trait_source::prelude::_\n+    use unnamed_pub_trait_source::S;\n+    S.method();\n+    //~^ ERROR no method named `method` found for struct `S` in the current scope [E0599]\n+    //~| HELP items from traits can only be used if the trait is in scope\n+}"}, {"sha": "75ccbcd384e65920412366cbc51f636d58506b1e", "filename": "src/test/ui/imports/unnamed_pub_trait.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Funnamed_pub_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48dab5c9601d856fdbdd9bda183732edd9545c29/src%2Ftest%2Fui%2Fimports%2Funnamed_pub_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Funnamed_pub_trait.stderr?ref=48dab5c9601d856fdbdd9bda183732edd9545c29", "patch": "@@ -0,0 +1,20 @@\n+error[E0599]: no method named `method` found for struct `S` in the current scope\n+  --> $DIR/unnamed_pub_trait.rs:13:7\n+   |\n+LL |     S.method();\n+   |       ^^^^^^ method not found in `S`\n+   |\n+  ::: $DIR/auxiliary/unnamed_pub_trait_source.rs:7:23\n+   |\n+LL |     pub trait Tr { fn method(&self); }\n+   |                       ------ the method is available for `S` here\n+   |\n+   = help: items from traits can only be used if the trait is in scope\n+help: the following trait is implemented but not in scope; perhaps add a `use` for it:\n+   |\n+LL | use unnamed_pub_trait_source::prelude::_;\n+   |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0599`."}]}