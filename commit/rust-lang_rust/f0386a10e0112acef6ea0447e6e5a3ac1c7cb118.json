{"sha": "f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMzg2YTEwZTAxMTJhY2VmNmVhMDQ0N2U2ZTVhM2FjMWM3Y2IxMTg=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-09-07T12:16:18Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-09-07T12:16:18Z"}, "message": "Add \"bool\" lang item", "tree": {"sha": "a0fdcadd8673c943f5728c2dc1e3a3b07f53a4ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0fdcadd8673c943f5728c2dc1e3a3b07f53a4ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "html_url": "https://github.com/rust-lang/rust/commit/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4894123d21ed4b153a2e5c32c0870cb2d97f9b46", "url": "https://api.github.com/repos/rust-lang/rust/commits/4894123d21ed4b153a2e5c32c0870cb2d97f9b46", "html_url": "https://github.com/rust-lang/rust/commit/4894123d21ed4b153a2e5c32c0870cb2d97f9b46"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "ddca07b27a53f1833f8fb12127d17a3815b42336", "filename": "src/libcore/bool/mod.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibcore%2Fbool%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibcore%2Fbool%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fbool%2Fmod.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -0,0 +1,7 @@\n+//! impl bool {}\n+\n+#![stable(feature = \"core_bool\", since = \"1.39.0\")]\n+\n+#[cfg(not(boostrap_stdarch_ignore_this))]\n+#[lang = \"bool\"]\n+impl bool {}"}, {"sha": "03b6aa68d3c27ed84ce374a84632092931e32209", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -198,6 +198,7 @@ pub mod borrow;\n pub mod any;\n pub mod array;\n pub mod ascii;\n+pub mod bool;\n pub mod sync;\n pub mod cell;\n pub mod char;"}, {"sha": "0aa708033c1a78a1f6de73eba7e6f106f5403b7d", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -246,6 +246,7 @@ pub fn collect<'tcx>(tcx: TyCtxt<'tcx>) -> LanguageItems {\n \n language_item_table! {\n //  Variant name,                Name,                 Method name,             Target;\n+    BoolImplItem,                \"bool\",               bool_impl,               Target::Impl;\n     CharImplItem,                \"char\",               char_impl,               Target::Impl;\n     StrImplItem,                 \"str\",                str_impl,                Target::Impl;\n     SliceImplItem,               \"slice\",              slice_impl,              Target::Impl;"}, {"sha": "c8838311e8dbf7a73b06336a47c08d7bf07bc870", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -578,6 +578,10 @@ impl<'a, 'tcx> ProbeContext<'a, 'tcx> {\n             ty::Param(p) => {\n                 self.assemble_inherent_candidates_from_param(p);\n             }\n+            ty::Bool => {\n+                let lang_def_id = lang_items.bool_impl();\n+                self.assemble_inherent_impl_for_primitive(lang_def_id);\n+            }\n             ty::Char => {\n                 let lang_def_id = lang_items.char_impl();\n                 self.assemble_inherent_impl_for_primitive(lang_def_id);"}, {"sha": "e7c2126cfd7277e9c414ef8dca3c459c12b140ee", "filename": "src/librustc_typeck/coherence/inherent_impls.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Finherent_impls.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -67,6 +67,14 @@ impl ItemLikeVisitor<'v> for InherentCollect<'tcx> {\n             ty::Dynamic(ref data, ..) if data.principal_def_id().is_some() => {\n                 self.check_def_id(item, data.principal_def_id().unwrap());\n             }\n+            ty::Bool => {\n+                self.check_primitive_impl(def_id,\n+                                          lang_items.bool_impl(),\n+                                          None,\n+                                          \"bool\",\n+                                          \"bool\",\n+                                          item.span);\n+            }\n             ty::Char => {\n                 self.check_primitive_impl(def_id,\n                                           lang_items.char_impl(),"}, {"sha": "38eff43bad2be9cd0dbb1328d13661cc913054ab", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -3977,7 +3977,7 @@ fn build_deref_target_impls(cx: &DocContext<'_>,\n             F32 => tcx.lang_items().f32_impl(),\n             F64 => tcx.lang_items().f64_impl(),\n             Char => tcx.lang_items().char_impl(),\n-            Bool => None,\n+            Bool => tcx.lang_items().bool_impl(),\n             Str => tcx.lang_items().str_impl(),\n             Slice => tcx.lang_items().slice_impl(),\n             Array => tcx.lang_items().slice_impl(),"}, {"sha": "d6073cdc1e11dff52e45f79346524d0a3096b029", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -679,6 +679,7 @@ fn primitive_impl(cx: &DocContext<'_>, path_str: &str) -> Option<DefId> {\n         \"f32\" => tcx.lang_items().f32_impl(),\n         \"f64\" => tcx.lang_items().f64_impl(),\n         \"str\" => tcx.lang_items().str_impl(),\n+        \"bool\" => tcx.lang_items().bool_impl(),\n         \"char\" => tcx.lang_items().char_impl(),\n         _ => None,\n     }"}, {"sha": "28c64d0b9638e3d4142eb195ad42e1fe272f9551", "filename": "src/librustdoc/passes/collect_trait_impls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0386a10e0112acef6ea0447e6e5a3ac1c7cb118/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_trait_impls.rs?ref=f0386a10e0112acef6ea0447e6e5a3ac1c7cb118", "patch": "@@ -53,6 +53,7 @@ pub fn collect_trait_impls(krate: Crate, cx: &DocContext<'_>) -> Crate {\n         lang_items.f64_impl(),\n         lang_items.f32_runtime_impl(),\n         lang_items.f64_runtime_impl(),\n+        lang_items.bool_impl(),\n         lang_items.char_impl(),\n         lang_items.str_impl(),\n         lang_items.slice_impl(),"}]}