{"sha": "0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNGVhM2NiZjdlOGUyYWNlNmY3M2JiNTcwNTVmNTJjOTkxM2NhZmU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-12-05T20:17:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-05T20:17:46Z"}, "message": "Merge #2483\n\n2483: Simplify test r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "b0978346224588b9c3186cc6bc895d9b25b2bb51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0978346224588b9c3186cc6bc895d9b25b2bb51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd6WXqCRBK7hj4Ov3rIwAAdHIIAJIxi/50wjnkaS6xHJlLsEQv\nUbrKy1RGWFPR0sC1BIiRIqSKx8URFkfqvLHFvnxy/8bvrZphk1MjCb54yXFJrmjm\nBnTBHowNqKc9wSWS5x3xgg9pKedIY8Ycc5LXWMxou7OdNGe/f2+oAT6DR7pAyn1V\niZ3CsKdTRzHVMz5IpBr73IOe17lQvKTs9idUSj42An2oBbnv183HTDKkLmtMEiQr\numKoQFwaXnY0M0G0Ghv1Hh21D42mdsZcDxX5Z3USS7kpZlcnelIo5MkcyBiqgbue\n8Oxq2Ctclmh8FGbieTFCUbrJOlu128NX8aDnwWOfPMT4+94RIphrYfQiJNMlBqg=\n=6nqL\n-----END PGP SIGNATURE-----\n", "payload": "tree b0978346224588b9c3186cc6bc895d9b25b2bb51\nparent 6e10a9f57815ad865a570816436adfdf0de1cdf0\nparent b84ce79f911014dfed6bc9d31d6699bc123d3561\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1575577066 +0000\ncommitter GitHub <noreply@github.com> 1575577066 +0000\n\nMerge #2483\n\n2483: Simplify test r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe", "html_url": "https://github.com/rust-lang/rust/commit/0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6e10a9f57815ad865a570816436adfdf0de1cdf0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6e10a9f57815ad865a570816436adfdf0de1cdf0", "html_url": "https://github.com/rust-lang/rust/commit/6e10a9f57815ad865a570816436adfdf0de1cdf0"}, {"sha": "b84ce79f911014dfed6bc9d31d6699bc123d3561", "url": "https://api.github.com/repos/rust-lang/rust/commits/b84ce79f911014dfed6bc9d31d6699bc123d3561", "html_url": "https://github.com/rust-lang/rust/commit/b84ce79f911014dfed6bc9d31d6699bc123d3561"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "9f373a8f41c31972571956a9ebe7e23f7d2717cc", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=0d4ea3cbf7e8e2ace6f73bb57055f52c9913cafe", "patch": "@@ -11,8 +11,8 @@ use std::fmt::Write;\n use std::sync::Arc;\n \n use hir_def::{\n-    body::BodySourceMap, db::DefDatabase, nameres::CrateDefMap, AssocItemId, DefWithBodyId,\n-    LocalModuleId, Lookup, ModuleDefId,\n+    body::BodySourceMap, child_from_source::ChildFromSource, db::DefDatabase, nameres::CrateDefMap,\n+    AssocItemId, DefWithBodyId, LocalModuleId, Lookup, ModuleDefId,\n };\n use hir_expand::InFile;\n use insta::assert_snapshot;\n@@ -31,18 +31,15 @@ use crate::{db::HirDatabase, display::HirDisplay, test_db::TestDB, InferenceResu\n fn type_at_pos(db: &TestDB, pos: FilePosition) -> String {\n     let file = db.parse(pos.file_id).ok().unwrap();\n     let expr = algo::find_node_at_offset::<ast::Expr>(file.syntax(), pos.offset).unwrap();\n-\n+    let fn_def = expr.syntax().ancestors().find_map(ast::FnDef::cast).unwrap();\n     let module = db.module_for_file(pos.file_id);\n-    let crate_def_map = db.crate_def_map(module.krate);\n-    for decl in crate_def_map[module.local_id].scope.declarations() {\n-        if let ModuleDefId::FunctionId(func) = decl {\n-            let (_body, source_map) = db.body_with_source_map(func.into());\n-            if let Some(expr_id) = source_map.node_expr(InFile::new(pos.file_id.into(), &expr)) {\n-                let infer = db.infer(func.into());\n-                let ty = &infer[expr_id];\n-                return ty.display(db).to_string();\n-            }\n-        }\n+    let func = module.child_from_source(db, InFile::new(pos.file_id.into(), fn_def)).unwrap();\n+\n+    let (_body, source_map) = db.body_with_source_map(func.into());\n+    if let Some(expr_id) = source_map.node_expr(InFile::new(pos.file_id.into(), &expr)) {\n+        let infer = db.infer(func.into());\n+        let ty = &infer[expr_id];\n+        return ty.display(db).to_string();\n     }\n     panic!(\"Can't find expression\")\n }"}]}