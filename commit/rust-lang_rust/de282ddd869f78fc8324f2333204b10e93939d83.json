{"sha": "de282ddd869f78fc8324f2333204b10e93939d83", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMjgyZGRkODY5Zjc4ZmM4MzI0ZjIzMzMyMDRiMTBlOTM5MzlkODM=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2020-08-14T12:47:06Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2020-08-14T12:52:07Z"}, "message": "Only print chalk programs with CHALK_PRINT", "tree": {"sha": "ae0925036789c6035e35fdeeb816dec5b2b44244", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae0925036789c6035e35fdeeb816dec5b2b44244"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de282ddd869f78fc8324f2333204b10e93939d83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de282ddd869f78fc8324f2333204b10e93939d83", "html_url": "https://github.com/rust-lang/rust/commit/de282ddd869f78fc8324f2333204b10e93939d83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de282ddd869f78fc8324f2333204b10e93939d83/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36052ce1a1c19379d67600b49d42f2e09e0450a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/36052ce1a1c19379d67600b49d42f2e09e0450a7", "html_url": "https://github.com/rust-lang/rust/commit/36052ce1a1c19379d67600b49d42f2e09e0450a7"}], "stats": {"total": 25, "additions": 15, "deletions": 10}, "files": [{"sha": "1c3abb18f04e69c049106a6eee527c369f91b102", "filename": "crates/hir_ty/src/traits.rs", "status": "modified", "additions": 15, "deletions": 10, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/de282ddd869f78fc8324f2333204b10e93939d83/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de282ddd869f78fc8324f2333204b10e93939d83/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits.rs?ref=de282ddd869f78fc8324f2333204b10e93939d83", "patch": "@@ -167,21 +167,22 @@ fn solve(\n         remaining > 0\n     };\n \n-    let solution = if is_chalk_debug() {\n-        let logging_db = LoggingRustIrDatabase::new(context);\n-        let solve = || {\n+    let mut solve = || {\n+        if is_chalk_print() {\n+            let logging_db = LoggingRustIrDatabase::new(context);\n             let solution = solver.solve_limited(&logging_db, goal, should_continue);\n             log::debug!(\"chalk program:\\n{}\", logging_db);\n             solution\n-        };\n-\n-        // don't set the TLS for Chalk unless Chalk debugging is active, to make\n-        // extra sure we only use it for debugging\n-        chalk::tls::set_current_program(db, solve)\n-    } else {\n-        solver.solve_limited(&context, goal, should_continue)\n+        } else {\n+            solver.solve_limited(&context, goal, should_continue)\n+        }\n     };\n \n+    // don't set the TLS for Chalk unless Chalk debugging is active, to make\n+    // extra sure we only use it for debugging\n+    let solution =\n+        if is_chalk_debug() { chalk::tls::set_current_program(db, solve) } else { solve() };\n+\n     log::debug!(\"solve({:?}) => {:?}\", goal, solution);\n \n     solution\n@@ -191,6 +192,10 @@ fn is_chalk_debug() -> bool {\n     std::env::var(\"CHALK_DEBUG\").is_ok()\n }\n \n+fn is_chalk_print() -> bool {\n+    std::env::var(\"CHALK_PRINT\").is_ok()\n+}\n+\n fn solution_from_chalk(\n     db: &dyn HirDatabase,\n     solution: chalk_solve::Solution<Interner>,"}]}