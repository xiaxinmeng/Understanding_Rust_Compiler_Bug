{"sha": "5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViZmUwOGZjNzE4Y2Q4ZWNmYWE1Njk2MjYxYjVlZWEwN2EyYTVkOTY=", "commit": {"author": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-12T11:55:35Z"}, "committer": {"name": "ljedrz", "email": "ljedrz@gmail.com", "date": "2018-10-12T11:55:35Z"}, "message": "rustc/driver: simplify profile::trace::cons", "tree": {"sha": "d591a8ed7d1a1bc1b79a5a7e35dc8df150189cd5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d591a8ed7d1a1bc1b79a5a7e35dc8df150189cd5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96", "html_url": "https://github.com/rust-lang/rust/commit/5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96/comments", "author": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ljedrz", "id": 3750347, "node_id": "MDQ6VXNlcjM3NTAzNDc=", "avatar_url": "https://avatars.githubusercontent.com/u/3750347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ljedrz", "html_url": "https://github.com/ljedrz", "followers_url": "https://api.github.com/users/ljedrz/followers", "following_url": "https://api.github.com/users/ljedrz/following{/other_user}", "gists_url": "https://api.github.com/users/ljedrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/ljedrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ljedrz/subscriptions", "organizations_url": "https://api.github.com/users/ljedrz/orgs", "repos_url": "https://api.github.com/users/ljedrz/repos", "events_url": "https://api.github.com/users/ljedrz/events{/privacy}", "received_events_url": "https://api.github.com/users/ljedrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71d3a715721137ffc10becc10978fe038ee131ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/71d3a715721137ffc10becc10978fe038ee131ac", "html_url": "https://github.com/rust-lang/rust/commit/71d3a715721137ffc10becc10978fe038ee131ac"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "7896195a7428e80b8127c427083b4fe4ac56e7d9", "filename": "src/librustc_driver/profile/trace.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fprofile%2Ftrace.rs?ref=5bfe08fc718cd8ecfaa5696261b5eea07a2a5d96", "patch": "@@ -43,18 +43,18 @@ pub struct QueryMetric {\n     pub dur_total: Duration,\n }\n \n+fn cons(s: &str) -> String {\n+    let first = s.split(|d| d == '(' || d == '{').next();\n+    assert!(first.is_some() && first != Some(\"\"));\n+    first.unwrap().to_owned()\n+}\n+\n pub fn cons_of_query_msg(q: &trace::Query) -> String {\n-    let s = format!(\"{:?}\", q.msg);\n-    let cons: Vec<&str> = s.split(|d| d == '(' || d == '{').collect();\n-    assert!(cons.len() > 0 && cons[0] != \"\");\n-    cons[0].to_string()\n+    cons(&format!(\"{:?}\", q.msg))\n }\n \n pub fn cons_of_key(k: &DepNode) -> String {\n-    let s = format!(\"{:?}\", k);\n-    let cons: Vec<&str> = s.split(|d| d == '(' || d == '{').collect();\n-    assert!(cons.len() > 0 && cons[0] != \"\");\n-    cons[0].to_string()\n+    cons(&format!(\"{:?}\", k))\n }\n \n // First return value is text; second return value is a CSS class"}]}