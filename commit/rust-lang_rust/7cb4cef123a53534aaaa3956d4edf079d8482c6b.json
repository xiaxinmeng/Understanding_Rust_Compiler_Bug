{"sha": "7cb4cef123a53534aaaa3956d4edf079d8482c6b", "node_id": "C_kwDOAAsO6NoAKDdjYjRjZWYxMjNhNTM1MzRhYWFhMzk1NmQ0ZWRmMDc5ZDg0ODJjNmI", "commit": {"author": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-16T12:29:43Z"}, "committer": {"name": "kyoto7250", "email": "50972773+kyoto7250@users.noreply.github.com", "date": "2022-06-16T12:38:47Z"}, "message": "feat(fix): ignore todo! and unimplemented! in if_same_then_else", "tree": {"sha": "d10f0cce77e774e2435a6ca45756ce613d033485", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d10f0cce77e774e2435a6ca45756ce613d033485"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cb4cef123a53534aaaa3956d4edf079d8482c6b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb4cef123a53534aaaa3956d4edf079d8482c6b", "html_url": "https://github.com/rust-lang/rust/commit/7cb4cef123a53534aaaa3956d4edf079d8482c6b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cb4cef123a53534aaaa3956d4edf079d8482c6b/comments", "author": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kyoto7250", "id": 50972773, "node_id": "MDQ6VXNlcjUwOTcyNzcz", "avatar_url": "https://avatars.githubusercontent.com/u/50972773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kyoto7250", "html_url": "https://github.com/kyoto7250", "followers_url": "https://api.github.com/users/kyoto7250/followers", "following_url": "https://api.github.com/users/kyoto7250/following{/other_user}", "gists_url": "https://api.github.com/users/kyoto7250/gists{/gist_id}", "starred_url": "https://api.github.com/users/kyoto7250/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kyoto7250/subscriptions", "organizations_url": "https://api.github.com/users/kyoto7250/orgs", "repos_url": "https://api.github.com/users/kyoto7250/repos", "events_url": "https://api.github.com/users/kyoto7250/events{/privacy}", "received_events_url": "https://api.github.com/users/kyoto7250/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9306e9a4df2e6f8ed577fff3c82006c532ca51d2", "html_url": "https://github.com/rust-lang/rust/commit/9306e9a4df2e6f8ed577fff3c82006c532ca51d2"}], "stats": {"total": 135, "additions": 106, "deletions": 29}, "files": [{"sha": "a771656c20f25197ff6d2f1727393741f99e3efe", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 36, "deletions": 15, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/7cb4cef123a53534aaaa3956d4edf079d8482c6b/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb4cef123a53534aaaa3956d4edf079d8482c6b/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=7cb4cef123a53534aaaa3956d4edf079d8482c6b", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::{span_lint_and_note, span_lint_and_then};\n+use clippy_utils::macros::macro_backtrace;\n use clippy_utils::source::{first_line_of_span, indent_of, reindent_multiline, snippet, snippet_opt};\n use clippy_utils::{\n     eq_expr_value, get_enclosing_block, hash_expr, hash_stmt, if_sequence, is_else_clause, is_lint_allowed,\n@@ -7,14 +8,16 @@ use clippy_utils::{\n use core::iter;\n use rustc_errors::Applicability;\n use rustc_hir::intravisit;\n-use rustc_hir::{BinOpKind, Block, Expr, ExprKind, HirId, Stmt, StmtKind};\n+use rustc_hir::{BinOpKind, Block, Expr, ExprKind, HirId, QPath, Stmt, StmtKind};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::hygiene::walk_chain;\n use rustc_span::source_map::SourceMap;\n-use rustc_span::{sym, BytePos, Span, Symbol};\n+use rustc_span::{BytePos, Span, Symbol};\n use std::borrow::Cow;\n \n+const ACCEPTABLE_MACRO: [&str; 2] = [\"todo\", \"unimplemented\"];\n+\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for consecutive `if`s with the same condition.\n@@ -195,7 +198,12 @@ fn lint_if_same_then_else(cx: &LateContext<'_>, conds: &[&Expr<'_>], blocks: &[&\n         .array_windows::<2>()\n         .enumerate()\n         .fold(true, |all_eq, (i, &[lhs, rhs])| {\n-            if eq.eq_block(lhs, rhs) && !contains_let(conds[i]) && conds.get(i + 1).map_or(true, |e| !contains_let(e)) {\n+            if eq.eq_block(lhs, rhs)\n+                && !contains_acceptable_macro(cx, lhs)\n+                && !contains_acceptable_macro(cx, rhs)\n+                && !contains_let(conds[i])\n+                && conds.get(i + 1).map_or(true, |e| !contains_let(e))\n+            {\n                 span_lint_and_note(\n                     cx,\n                     IF_SAME_THEN_ELSE,\n@@ -365,19 +373,33 @@ fn eq_stmts(\n         .all(|b| get_stmt(b).map_or(false, |s| eq.eq_stmt(s, stmt)))\n }\n \n-fn block_contains_todo_macro(cx: &LateContext<'_>, block: &Block<'_>) -> bool {\n-    dbg!(block);\n-    if let Some(macro_def_id) = block.span.ctxt().outer_expn_data().macro_def_id {\n-        dbg!(macro_def_id);\n-        if let Some(diagnostic_name) = cx.tcx.get_diagnostic_name(macro_def_id) {\n-            dbg!(diagnostic_name);\n-            diagnostic_name == sym::todo_macro\n-        } else {\n-            false\n+fn contains_acceptable_macro(cx: &LateContext<'_>, block: &Block<'_>) -> bool {\n+    for stmt in block.stmts {\n+        match stmt.kind {\n+            StmtKind::Semi(semi_expr) if acceptable_macro(cx, semi_expr) => return true,\n+            _ => {},\n         }\n-    } else {\n-        false\n     }\n+\n+    if let Some(block_expr) = block.expr\n+        && acceptable_macro(cx, block_expr)\n+    {\n+        return true\n+    }\n+\n+    false\n+}\n+\n+fn acceptable_macro(cx: &LateContext<'_>, expr: &Expr<'_>) -> bool {\n+    if let ExprKind::Call(call_expr, _)  = expr.kind\n+        && let ExprKind::Path(QPath::Resolved(None, path)) = call_expr.kind\n+        && macro_backtrace(path.span).any(|macro_call| {\n+            ACCEPTABLE_MACRO.contains(&cx.tcx.item_name(macro_call.def_id).as_str())\n+    }) {\n+        return true;\n+    }\n+\n+    false\n }\n \n fn scan_block_for_eq(cx: &LateContext<'_>, _conds: &[&Expr<'_>], block: &Block<'_>, blocks: &[&Block<'_>]) -> BlockEq {\n@@ -413,7 +435,6 @@ fn scan_block_for_eq(cx: &LateContext<'_>, _conds: &[&Expr<'_>], block: &Block<'\n             moved_locals,\n         };\n     }\n-\n     let end_search_start = block.stmts[start_end_eq..]\n         .iter()\n         .rev()"}, {"sha": "2598c2ab426d31fbf46d770da687bff9f2bcda2e", "filename": "tests/ui/if_same_then_else.rs", "status": "modified", "additions": 60, "deletions": 4, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/7cb4cef123a53534aaaa3956d4edf079d8482c6b/tests%2Fui%2Fif_same_then_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb4cef123a53534aaaa3956d4edf079d8482c6b/tests%2Fui%2Fif_same_then_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.rs?ref=7cb4cef123a53534aaaa3956d4edf079d8482c6b", "patch": "@@ -6,7 +6,9 @@\n     clippy::no_effect,\n     clippy::unused_unit,\n     clippy::zero_divided_by_zero,\n-    clippy::branches_sharing_code\n+    clippy::branches_sharing_code,\n+    dead_code,\n+    unreachable_code\n )]\n \n struct Foo {\n@@ -126,9 +128,6 @@ fn if_same_then_else() {\n             _ => 4,\n         };\n     }\n-\n-    // Issue #8836\n-    if true { todo!() } else { todo!() }\n }\n \n // Issue #2423. This was causing an ICE.\n@@ -158,4 +157,61 @@ mod issue_5698 {\n     }\n }\n \n+mod issue_8836 {\n+    fn do_not_lint() {\n+        if true {\n+            todo!()\n+        } else {\n+            todo!()\n+        }\n+        if true {\n+            todo!();\n+        } else {\n+            todo!();\n+        }\n+        if true {\n+            unimplemented!()\n+        } else {\n+            unimplemented!()\n+        }\n+        if true {\n+            unimplemented!();\n+        } else {\n+            unimplemented!();\n+        }\n+\n+        if true {\n+            println!(\"FOO\");\n+            todo!();\n+        } else {\n+            println!(\"FOO\");\n+            todo!();\n+        }\n+\n+        if true {\n+            println!(\"FOO\");\n+            unimplemented!();\n+        } else {\n+            println!(\"FOO\");\n+            unimplemented!();\n+        }\n+\n+        if true {\n+            println!(\"FOO\");\n+            todo!()\n+        } else {\n+            println!(\"FOO\");\n+            todo!()\n+        }\n+\n+        if true {\n+            println!(\"FOO\");\n+            unimplemented!()\n+        } else {\n+            println!(\"FOO\");\n+            unimplemented!()\n+        }\n+    }\n+}\n+\n fn main() {}"}, {"sha": "2cdf442486a306334ea93c052ac421fe84a6b936", "filename": "tests/ui/if_same_then_else.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/7cb4cef123a53534aaaa3956d4edf079d8482c6b/tests%2Fui%2Fif_same_then_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7cb4cef123a53534aaaa3956d4edf079d8482c6b/tests%2Fui%2Fif_same_then_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_same_then_else.stderr?ref=7cb4cef123a53534aaaa3956d4edf079d8482c6b", "patch": "@@ -1,5 +1,5 @@\n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:21:13\n+  --> $DIR/if_same_then_else.rs:23:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -13,7 +13,7 @@ LL | |     } else {\n    |\n    = note: `-D clippy::if-same-then-else` implied by `-D warnings`\n note: same as this\n-  --> $DIR/if_same_then_else.rs:29:12\n+  --> $DIR/if_same_then_else.rs:31:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -26,7 +26,7 @@ LL | |     }\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:65:21\n+  --> $DIR/if_same_then_else.rs:67:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -35,7 +35,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:67:12\n+  --> $DIR/if_same_then_else.rs:69:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -45,7 +45,7 @@ LL | |     };\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:72:21\n+  --> $DIR/if_same_then_else.rs:74:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -54,7 +54,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:74:12\n+  --> $DIR/if_same_then_else.rs:76:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -64,7 +64,7 @@ LL | |     };\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:88:21\n+  --> $DIR/if_same_then_else.rs:90:21\n    |\n LL |       let _ = if true {\n    |  _____________________^\n@@ -73,7 +73,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:90:12\n+  --> $DIR/if_same_then_else.rs:92:12\n    |\n LL |       } else {\n    |  ____________^\n@@ -83,7 +83,7 @@ LL | |     };\n    | |_____^\n \n error: this `if` has identical blocks\n-  --> $DIR/if_same_then_else.rs:95:13\n+  --> $DIR/if_same_then_else.rs:97:13\n    |\n LL |       if true {\n    |  _____________^\n@@ -96,7 +96,7 @@ LL | |     } else {\n    | |_____^\n    |\n note: same as this\n-  --> $DIR/if_same_then_else.rs:102:12\n+  --> $DIR/if_same_then_else.rs:104:12\n    |\n LL |       } else {\n    |  ____________^"}]}