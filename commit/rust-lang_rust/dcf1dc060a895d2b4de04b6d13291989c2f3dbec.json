{"sha": "dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZjFkYzA2MGE4OTVkMmI0ZGUwNGI2ZDEzMjkxOTg5YzJmM2RiZWM=", "commit": {"author": {"name": "Birunthan Mohanathas", "email": "birunthan@mohanathas.com", "date": "2013-06-27T17:47:45Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-28T03:20:42Z"}, "message": "Rename #[no_drop_flag] to #[unsafe_no_drop_flag]", "tree": {"sha": "681f3df43cea6e8b59c85f6c7b7c9b1a164b7b6e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/681f3df43cea6e8b59c85f6c7b7c9b1a164b7b6e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "html_url": "https://github.com/rust-lang/rust/commit/dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/comments", "author": {"login": "poiru", "id": 1319028, "node_id": "MDQ6VXNlcjEzMTkwMjg=", "avatar_url": "https://avatars.githubusercontent.com/u/1319028?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poiru", "html_url": "https://github.com/poiru", "followers_url": "https://api.github.com/users/poiru/followers", "following_url": "https://api.github.com/users/poiru/following{/other_user}", "gists_url": "https://api.github.com/users/poiru/gists{/gist_id}", "starred_url": "https://api.github.com/users/poiru/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poiru/subscriptions", "organizations_url": "https://api.github.com/users/poiru/orgs", "repos_url": "https://api.github.com/users/poiru/repos", "events_url": "https://api.github.com/users/poiru/events{/privacy}", "received_events_url": "https://api.github.com/users/poiru/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "779ee2a2dd06235470cf5b6bea90b78619dc0654", "url": "https://api.github.com/repos/rust-lang/rust/commits/779ee2a2dd06235470cf5b6bea90b78619dc0654", "html_url": "https://github.com/rust-lang/rust/commit/779ee2a2dd06235470cf5b6bea90b78619dc0654"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "29d81f37da7d4331b410f9cee2c83cd93d6dac63", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "patch": "@@ -3904,7 +3904,7 @@ impl DtorKind {\n pub fn ty_dtor(cx: ctxt, struct_id: def_id) -> DtorKind {\n     match cx.destructor_for_type.find(&struct_id) {\n         Some(&method_def_id) => {\n-            let flag = !has_attr(cx, struct_id, \"no_drop_flag\");\n+            let flag = !has_attr(cx, struct_id, \"unsafe_no_drop_flag\");\n \n             TraitDtor(method_def_id, flag)\n         }"}, {"sha": "1e5ac305df37ec818ca03b7f383d1116a859a85b", "filename": "src/libstd/unstable/atomics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Flibstd%2Funstable%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Flibstd%2Funstable%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fatomics.rs?ref=dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "patch": "@@ -62,7 +62,7 @@ pub struct AtomicPtr<T> {\n /**\n  * An owned atomic pointer. Ensures that only a single reference to the data is held at any time.\n  */\n-#[no_drop_flag]\n+#[unsafe_no_drop_flag]\n pub struct AtomicOption<T> {\n     priv p: *mut c_void\n }"}, {"sha": "fe1087a04389a1519ac652cd6f938d70d191273e", "filename": "src/libstd/util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Flibstd%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Flibstd%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Futil.rs?ref=dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "patch": "@@ -76,7 +76,7 @@ pub fn replace<T>(dest: &mut T, mut src: T) -> T {\n \n /// A non-copyable dummy type.\n #[deriving(Eq, TotalEq, Ord, TotalOrd)]\n-#[no_drop_flag]\n+#[unsafe_no_drop_flag]\n pub struct NonCopyable;\n \n impl Drop for NonCopyable {\n@@ -171,7 +171,7 @@ mod tests {\n     fn test_noncopyable() {\n         assert_eq!(size_of::<NonCopyable>(), 0);\n \n-        // verify that `#[no_drop_flag]` works as intended on a zero-size struct\n+        // verify that `#[unsafe_no_drop_flag]` works as intended on a zero-size struct\n \n         static mut did_run: bool = false;\n "}, {"sha": "87c476d781e7eb409b93d12cc7a93402d7caf004", "filename": "src/test/run-pass/attr-no-drop-flag-size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dcf1dc060a895d2b4de04b6d13291989c2f3dbec/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-no-drop-flag-size.rs?ref=dcf1dc060a895d2b4de04b6d13291989c2f3dbec", "patch": "@@ -10,7 +10,7 @@\n \n use std::sys::size_of;\n \n-#[no_drop_flag]\n+#[unsafe_no_drop_flag]\n struct Test<T> {\n     a: T\n }"}]}