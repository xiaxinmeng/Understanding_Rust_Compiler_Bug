{"sha": "d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMjA5YzQ0YTYyMGZhNjNkMmU5NWQwNzUyZWYyNGY4ZjBkNzNjZWI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-22T10:47:31Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-08-22T15:08:49Z"}, "message": "Replace TyForeign with ForeignTy", "tree": {"sha": "dbb3d386ca81e6f80b565efdfa0b9c2bbab675e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbb3d386ca81e6f80b565efdfa0b9c2bbab675e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "html_url": "https://github.com/rust-lang/rust/commit/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "05cfb3f5b553f96f299919e19be10bccb240a6a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/05cfb3f5b553f96f299919e19be10bccb240a6a7", "html_url": "https://github.com/rust-lang/rust/commit/05cfb3f5b553f96f299919e19be10bccb240a6a7"}], "stats": {"total": 28, "additions": 14, "deletions": 14}, "files": [{"sha": "65146f2de8441ea0ee74b37e2d4f4b8674e6dec7", "filename": "src/librustc/hir/def.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc%2Fhir%2Fdef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc%2Fhir%2Fdef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fdef.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -53,7 +53,7 @@ pub enum Def {\n     Existential(DefId),\n     /// `type Foo = Bar;`\n     TyAlias(DefId),\n-    TyForeign(DefId),\n+    ForeignTy(DefId),\n     TraitAlias(DefId),\n     AssociatedTy(DefId),\n     /// `existential type Foo: Bar;`\n@@ -272,7 +272,7 @@ impl Def {\n             Def::AssociatedTy(id) | Def::TyParam(id) | Def::Struct(id) | Def::StructCtor(id, ..) |\n             Def::Union(id) | Def::Trait(id) | Def::Method(id) | Def::Const(id) |\n             Def::AssociatedConst(id) | Def::Macro(id, ..) |\n-            Def::Existential(id) | Def::AssociatedExistential(id) | Def::TyForeign(id) => {\n+            Def::Existential(id) | Def::AssociatedExistential(id) | Def::ForeignTy(id) => {\n                 id\n             }\n \n@@ -311,7 +311,7 @@ impl Def {\n             Def::StructCtor(.., CtorKind::Fictive) => bug!(\"impossible struct constructor\"),\n             Def::Union(..) => \"union\",\n             Def::Trait(..) => \"trait\",\n-            Def::TyForeign(..) => \"foreign type\",\n+            Def::ForeignTy(..) => \"foreign type\",\n             Def::Method(..) => \"method\",\n             Def::Const(..) => \"constant\",\n             Def::AssociatedConst(..) => \"associated constant\","}, {"sha": "c3112da4f8c3ac2daff485cadf967152a04c291c", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -453,7 +453,7 @@ impl<'hir> Map<'hir> {\n                 match item.node {\n                     ForeignItemKind::Fn(..) => Some(Def::Fn(def_id)),\n                     ForeignItemKind::Static(_, m) => Some(Def::Static(def_id, m)),\n-                    ForeignItemKind::Type => Some(Def::TyForeign(def_id)),\n+                    ForeignItemKind::Type => Some(Def::ForeignTy(def_id)),\n                 }\n             }\n             NodeTraitItem(item) => {"}, {"sha": "e82ef8bbdae554ca4910129dcaedfe4b8b5bc6da", "filename": "src/librustc/ich/impls_hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc%2Fich%2Fimpls_hir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_hir.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -1012,7 +1012,7 @@ impl_stable_hash_for!(enum hir::def::Def {\n     PrimTy(prim_ty),\n     TyParam(def_id),\n     SelfTy(trait_def_id, impl_def_id),\n-    TyForeign(def_id),\n+    ForeignTy(def_id),\n     Fn(def_id),\n     Const(def_id),\n     Static(def_id, is_mutbl),"}, {"sha": "f1e7e3de67d049b15b8d3f2c4bc82cec6e00e3f5", "filename": "src/librustc_metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_metadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_metadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fdecoder.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -429,7 +429,7 @@ impl<'tcx> EntryKind<'tcx> {\n             EntryKind::Trait(_) => Def::Trait(did),\n             EntryKind::Enum(..) => Def::Enum(did),\n             EntryKind::MacroDef(_) => Def::Macro(did, MacroKind::Bang),\n-            EntryKind::ForeignType => Def::TyForeign(did),\n+            EntryKind::ForeignType => Def::ForeignTy(did),\n \n             EntryKind::ForeignMod |\n             EntryKind::GlobalAsm |"}, {"sha": "80f6c263e199969648d80321edbe79fb49ad4612", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -656,7 +656,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                 (Def::Static(self.definitions.local_def_id(item.id), m), ValueNS)\n             }\n             ForeignItemKind::Ty => {\n-                (Def::TyForeign(self.definitions.local_def_id(item.id)), TypeNS)\n+                (Def::ForeignTy(self.definitions.local_def_id(item.id)), TypeNS)\n             }\n             ForeignItemKind::Macro(_) => unreachable!(),\n         };\n@@ -692,7 +692,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                                              span);\n                 self.define(parent, ident, TypeNS, (module, vis, DUMMY_SP, expansion));\n             }\n-            Def::Variant(..) | Def::TyAlias(..) | Def::TyForeign(..) => {\n+            Def::Variant(..) | Def::TyAlias(..) | Def::ForeignTy(..) => {\n                 self.define(parent, ident, TypeNS, (def, vis, DUMMY_SP, expansion));\n             }\n             Def::Fn(..) | Def::Static(..) | Def::Const(..) | Def::VariantCtor(..) => {"}, {"sha": "3241459f64fd8e9c1a51484ad81dca3ba426c2ec", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -539,7 +539,7 @@ impl<'a> PathSource<'a> {\n                 Def::Trait(..) | Def::TyAlias(..) | Def::AssociatedTy(..) |\n                 Def::PrimTy(..) | Def::TyParam(..) | Def::SelfTy(..) |\n                 Def::Existential(..) |\n-                Def::TyForeign(..) => true,\n+                Def::ForeignTy(..) => true,\n                 _ => false,\n             },\n             PathSource::Trait(AliasPossibility::No) => match def {"}, {"sha": "9facd39ebea214cbff7c878cf59f3850b2386d26", "filename": "src/librustc_save_analysis/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_save_analysis%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_save_analysis%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Flib.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -747,7 +747,7 @@ impl<'l, 'tcx: 'l> SaveContext<'l, 'tcx> {\n             HirDef::Union(def_id) |\n             HirDef::Enum(def_id) |\n             HirDef::TyAlias(def_id) |\n-            HirDef::TyForeign(def_id) |\n+            HirDef::ForeignTy(def_id) |\n             HirDef::TraitAlias(def_id) |\n             HirDef::AssociatedExistential(def_id) |\n             HirDef::AssociatedTy(def_id) |"}, {"sha": "a528c8e9b4f96d26932851085cf648d88b9a6b9f", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -1387,7 +1387,7 @@ impl<'o, 'gcx: 'tcx, 'tcx> dyn AstConv<'gcx, 'tcx>+'o {\n                 )\n             }\n             Def::Enum(did) | Def::TyAlias(did) | Def::Struct(did) |\n-            Def::Union(did) | Def::TyForeign(did) => {\n+            Def::Union(did) | Def::ForeignTy(did) => {\n                 assert_eq!(opt_self_ty, None);\n                 self.prohibit_generics(path.segments.split_last().unwrap().1);\n                 self.ast_path_to_ty(span, did, path.segments.last().unwrap())"}, {"sha": "75d7488d26a75ac67b9ae9c7474293511f1f15bb", "filename": "src/librustdoc/clean/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustdoc%2Fclean%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustdoc%2Fclean%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Finline.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -83,7 +83,7 @@ pub fn try_inline(cx: &DocContext, def: Def, name: ast::Name, visited: &mut FxHa\n             ret.extend(build_impls(cx, did, true));\n             clean::EnumItem(build_enum(cx, did))\n         }\n-        Def::TyForeign(did) => {\n+        Def::ForeignTy(did) => {\n             record_extern_fqn(cx, did, clean::TypeKind::Foreign);\n             ret.extend(build_impls(cx, did, false));\n             clean::ForeignTypeItem"}, {"sha": "a8bfb3efd33ed9d25bb3a7eaa2aeeedb0f3f555d", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -3731,7 +3731,7 @@ pub fn register_def(cx: &DocContext, def: Def) -> DefId {\n         Def::Struct(i) => (i, TypeKind::Struct),\n         Def::Union(i) => (i, TypeKind::Union),\n         Def::Mod(i) => (i, TypeKind::Module),\n-        Def::TyForeign(i) => (i, TypeKind::Foreign),\n+        Def::ForeignTy(i) => (i, TypeKind::Foreign),\n         Def::Const(i) => (i, TypeKind::Const),\n         Def::Static(i, _) => (i, TypeKind::Static),\n         Def::Variant(i) => (cx.tcx.parent_def_id(i).expect(\"cannot get parent def id\"),"}, {"sha": "15a94b8adfcb27d335d51fdd91630913f8bb73ec", "filename": "src/librustdoc/visit_ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustdoc%2Fvisit_ast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0209c44a620fa63d2e95d0752ef24f8f0d73ceb/src%2Flibrustdoc%2Fvisit_ast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fvisit_ast.rs?ref=d0209c44a620fa63d2e95d0752ef24f8f0d73ceb", "patch": "@@ -267,7 +267,7 @@ impl<'a, 'tcx, 'rcx, 'cstore> RustdocVisitor<'a, 'tcx, 'rcx, 'cstore> {\n                 Def::Struct(did) |\n                 Def::Union(did) |\n                 Def::Enum(did) |\n-                Def::TyForeign(did) |\n+                Def::ForeignTy(did) |\n                 Def::TyAlias(did) if !self_is_hidden => {\n                     self.cx.access_levels.borrow_mut().map.insert(did, AccessLevel::Public);\n                 },"}]}