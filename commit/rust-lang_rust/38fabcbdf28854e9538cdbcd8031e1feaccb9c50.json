{"sha": "38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4ZmFiY2JkZjI4ODU0ZTk1MzhjZGJjZDgwMzFlMWZlYWNjYjljNTA=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-27T15:17:45Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2018-12-27T16:03:53Z"}, "message": "tests: fix formatting and update test output\n\nfix script one last time\u2122", "tree": {"sha": "d0f0c220ad163527f654906f9dd5ac9628c3b329", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d0f0c220ad163527f654906f9dd5ac9628c3b329"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "html_url": "https://github.com/rust-lang/rust/commit/38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84ee884cc4146f60c5a66a3d670b0f6cc0c0aab9", "url": "https://api.github.com/repos/rust-lang/rust/commits/84ee884cc4146f60c5a66a3d670b0f6cc0c0aab9", "html_url": "https://github.com/rust-lang/rust/commit/84ee884cc4146f60c5a66a3d670b0f6cc0c0aab9"}], "stats": {"total": 83, "additions": 42, "deletions": 41}, "files": [{"sha": "b69e86ad3ac50f9df6700f96c433101321edfef3", "filename": "ci/base-tests.sh", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -35,13 +35,10 @@ cd ..\n ./util/dev update_lints --check\n cargo +nightly fmt --all -- --check\n \n-\n-\n-\n # make sure tests are formatted\n \n # some lints are sensitive to formatting, exclude some files\n-tests_need_reformatting=false\n+tests_need_reformatting=\"false\"\n # switch to nightly\n rustup default nightly\n # avoid loop spam and allow cmds with exit status != 0\n@@ -51,13 +48,13 @@ for file in `find tests -not -path \"tests/ui/methods.rs\" -not -path \"tests/ui/fo\n   rustfmt ${file} --check\n   if [ $? -ne 0 ]; then\n     echo \"${file} needs reformatting!\"\n-    tests_need_reformatting=true\n+    tests_need_reformatting=\"true\"\n   fi\n done\n \n set -ex # reset\n \n-if [ ${tests_need_reformatting} ] ; then\n+if [ \"${tests_need_reformatting}\" == \"true\" ] ; then\n     echo \"Tests need reformatting!\"\n     exit 2\n fi"}, {"sha": "dba19dfd0238444fa326fcdc079b6fab2b1d9523", "filename": "tests/ui/cast_alignment.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fcast_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fcast_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -9,7 +9,6 @@\n \n //! Test casts for alignment issues\n \n-\n #![feature(rustc_private)]\n extern crate libc;\n "}, {"sha": "1db26c197257abe85f8bcba438b7c5b82f2eead1", "filename": "tests/ui/cast_alignment.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fcast_alignment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fcast_alignment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_alignment.stderr?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -1,15 +1,15 @@\n error: casting from `*const u8` to a more-strictly-aligned pointer (`*const u16`)\n-  --> $DIR/cast_alignment.rs:22:5\n+  --> $DIR/cast_alignment.rs:21:5\n    |\n-22 |     (&1u8 as *const u8) as *const u16;\n+21 |     (&1u8 as *const u8) as *const u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::cast-ptr-alignment` implied by `-D warnings`\n \n error: casting from `*mut u8` to a more-strictly-aligned pointer (`*mut u16`)\n-  --> $DIR/cast_alignment.rs:23:5\n+  --> $DIR/cast_alignment.rs:22:5\n    |\n-23 |     (&mut 1u8 as *mut u8) as *mut u16;\n+22 |     (&mut 1u8 as *mut u8) as *mut u16;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 2 previous errors"}, {"sha": "46ead9bf0c578f019ec1af5affff38d9f3305e03", "filename": "tests/ui/implicit_return.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fimplicit_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fimplicit_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -56,8 +56,7 @@ fn test_loop_with_nests() -> bool {\n     loop {\n         if true {\n             break true;\n-        }\n-        else {\n+        } else {\n             let _ = true;\n         }\n     }"}, {"sha": "3c124eb3357486e06541a03b06f180b6c79c26a2", "filename": "tests/ui/implicit_return.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fimplicit_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fimplicit_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fimplicit_return.stderr?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -49,15 +49,15 @@ error: missing return statement\n    |             ^^^^^^^^^^ help: change `break` to `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:68:18\n+  --> $DIR/implicit_return.rs:67:18\n    |\n-68 |     let _ = || { true };\n+67 |     let _ = || { true };\n    |                  ^^^^ help: add `return` as shown: `return true`\n \n error: missing return statement\n-  --> $DIR/implicit_return.rs:69:16\n+  --> $DIR/implicit_return.rs:68:16\n    |\n-69 |     let _ = || true;\n+68 |     let _ = || true;\n    |                ^^^^ help: add `return` as shown: `return true`\n \n error: aborting due to 10 previous errors"}, {"sha": "efb8904dc97110737904721e17c9d7a3b478b507", "filename": "tests/ui/new_without_default.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -143,14 +143,18 @@ pub struct Allow(Foo);\n \n impl Allow {\n     #[allow(clippy::new_without_default)]\n-    pub fn new() -> Self { unimplemented!() }\n+    pub fn new() -> Self {\n+        unimplemented!()\n+    }\n }\n \n pub struct AllowDerive;\n \n impl AllowDerive {\n     #[allow(clippy::new_without_default_derive)]\n-    pub fn new() -> Self { unimplemented!() }\n+    pub fn new() -> Self {\n+        unimplemented!()\n+    }\n }\n \n fn main() {}"}, {"sha": "e1e0413fceacd8b7512ba7262cee18d95b9ccd81", "filename": "tests/ui/partialeq_ne_impl.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fpartialeq_ne_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fpartialeq_ne_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpartialeq_ne_impl.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -23,9 +23,13 @@ impl PartialEq for Foo {\n struct Bar;\n \n impl PartialEq for Bar {\n-    fn eq(&self, _: &Bar) -> bool { true }\n+    fn eq(&self, _: &Bar) -> bool {\n+        true\n+    }\n     #[allow(clippy::partialeq_ne_impl)]\n-    fn ne(&self, _: &Bar) -> bool { false }\n+    fn ne(&self, _: &Bar) -> bool {\n+        false\n+    }\n }\n \n fn main() {}"}, {"sha": "60569372e5d71af0780a9cd2f77d8a5b4ba3b4ea", "filename": "tests/ui/redundant_field_names.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fredundant_field_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fredundant_field_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_field_names.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -70,8 +70,7 @@ fn main() {\n }\n \n fn issue_3476() {\n-    fn foo<T>() {\n-    }\n+    fn foo<T>() {}\n \n     struct S {\n         foo: fn(),"}, {"sha": "4e72152724978ef241e697fee74ed888fcaca5b0", "filename": "tests/ui/unused_io_amount.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Funused_io_amount.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Funused_io_amount.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -12,7 +12,6 @@\n \n use std::io;\n \n-\n fn try_macro<T: io::Read + io::Write>(s: &mut T) -> io::Result<()> {\n     try!(s.write(b\"test\"));\n     let mut buf = [0u8; 4];"}, {"sha": "200e441025ef606a9bb47f65ecdbddc83bca3449", "filename": "tests/ui/unused_io_amount.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Funused_io_amount.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Funused_io_amount.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_io_amount.stderr?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -1,42 +1,42 @@\n error: handle written amount returned or use `Write::write_all` instead\n-  --> $DIR/unused_io_amount.rs:17:5\n+  --> $DIR/unused_io_amount.rs:16:5\n    |\n-17 |     try!(s.write(b\"test\"));\n+16 |     try!(s.write(b\"test\"));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::unused-io-amount` implied by `-D warnings`\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:19:5\n+  --> $DIR/unused_io_amount.rs:18:5\n    |\n-19 |     try!(s.read(&mut buf));\n+18 |     try!(s.read(&mut buf));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n \n error: handle written amount returned or use `Write::write_all` instead\n-  --> $DIR/unused_io_amount.rs:24:5\n+  --> $DIR/unused_io_amount.rs:23:5\n    |\n-24 |     s.write(b\"test\")?;\n+23 |     s.write(b\"test\")?;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:26:5\n+  --> $DIR/unused_io_amount.rs:25:5\n    |\n-26 |     s.read(&mut buf)?;\n+25 |     s.read(&mut buf)?;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: handle written amount returned or use `Write::write_all` instead\n-  --> $DIR/unused_io_amount.rs:31:5\n+  --> $DIR/unused_io_amount.rs:30:5\n    |\n-31 |     s.write(b\"test\").unwrap();\n+30 |     s.write(b\"test\").unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: handle read amount returned or use `Read::read_exact` instead\n-  --> $DIR/unused_io_amount.rs:33:5\n+  --> $DIR/unused_io_amount.rs:32:5\n    |\n-33 |     s.read(&mut buf).unwrap();\n+32 |     s.read(&mut buf).unwrap();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 6 previous errors"}, {"sha": "884761675fce5c1999ddd2db8ec8143b0ef5da3d", "filename": "tests/ui/vec_box_sized.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fvec_box_sized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fvec_box_sized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec_box_sized.rs?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -1,17 +1,17 @@\n struct SizedStruct {\n-\t_a: i32,\n+    _a: i32,\n }\n \n struct UnsizedStruct {\n-\t_a: [i32],\n+    _a: [i32],\n }\n \n struct StructWithVecBox {\n-\tsized_type: Vec<Box<SizedStruct>>,\n+    sized_type: Vec<Box<SizedStruct>>,\n }\n \n struct StructWithVecBoxButItsUnsized {\n-\tunsized_type: Vec<Box<UnsizedStruct>>,\n+    unsized_type: Vec<Box<UnsizedStruct>>,\n }\n \n fn main() {}"}, {"sha": "f085fdad42950d534bc039263672b7d697a297be", "filename": "tests/ui/vec_box_sized.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fvec_box_sized.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/38fabcbdf28854e9538cdbcd8031e1feaccb9c50/tests%2Fui%2Fvec_box_sized.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fvec_box_sized.stderr?ref=38fabcbdf28854e9538cdbcd8031e1feaccb9c50", "patch": "@@ -1,5 +1,5 @@\n error: `Vec<T>` is already on the heap, the boxing is unnecessary.\n-  --> $DIR/vec_box_sized.rs:10:14\n+  --> $DIR/vec_box_sized.rs:10:17\n    |\n 10 |     sized_type: Vec<Box<SizedStruct>>,\n    |                 ^^^^^^^^^^^^^^^^^^^^^ help: try: `Vec<SizedStruct>`"}]}