{"sha": "beda104a2b828616ce5691577bf0d8750c641ce0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlZGExMDRhMmI4Mjg2MTZjZTU2OTE1NzdiZjBkODc1MGM2NDFjZTA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-16T11:12:51Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-16T11:12:51Z"}, "message": "Disable local debuginfo for now", "tree": {"sha": "ac10fdf7efefe05fd47ca8c76d35a71e981d3876", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac10fdf7efefe05fd47ca8c76d35a71e981d3876"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beda104a2b828616ce5691577bf0d8750c641ce0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beda104a2b828616ce5691577bf0d8750c641ce0", "html_url": "https://github.com/rust-lang/rust/commit/beda104a2b828616ce5691577bf0d8750c641ce0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beda104a2b828616ce5691577bf0d8750c641ce0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74ca55d23091565444ce64fe4c8dbd6fc0783f56", "url": "https://api.github.com/repos/rust-lang/rust/commits/74ca55d23091565444ce64fe4c8dbd6fc0783f56", "html_url": "https://github.com/rust-lang/rust/commit/74ca55d23091565444ce64fe4c8dbd6fc0783f56"}], "stats": {"total": 37, "additions": 20, "deletions": 17}, "files": [{"sha": "bb3f26f9fee9d58009cbdec8bb732c1f86ffae83", "filename": "src/debuginfo/mod.rs", "status": "modified", "additions": 20, "deletions": 17, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/beda104a2b828616ce5691577bf0d8750c641ce0/src%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beda104a2b828616ce5691577bf0d8750c641ce0/src%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Fmod.rs?ref=beda104a2b828616ce5691577bf0d8750c641ce0", "patch": "@@ -270,24 +270,27 @@ impl<'a, 'tcx> FunctionDebugContext<'a, 'tcx> {\n                 length: end as u64,\n             });\n \n-        let value_labels_ranges = context.build_value_labels_ranges(isa).unwrap();\n-\n-        for (local, _local_decl) in self.mir.local_decls.iter_enumerated() {\n-            let var_id = self.define_local(format!(\"{:?}\", local), &self.mir.local_decls[local].ty);\n-\n-            let location = place_location(\n-                self,\n-                context,\n-                &local_map,\n-                &value_labels_ranges,\n-                Place {\n-                    base: PlaceBase::Local(local),\n-                    projection: ty::List::empty(),\n-                },\n-            );\n+        // FIXME make it more reliable and implement scopes before re-enabling this.\n+        if false {\n+            let value_labels_ranges = context.build_value_labels_ranges(isa).unwrap();\n+\n+            for (local, _local_decl) in self.mir.local_decls.iter_enumerated() {\n+                let var_id = self.define_local(format!(\"{:?}\", local), &self.mir.local_decls[local].ty);\n+\n+                let location = place_location(\n+                    self,\n+                    context,\n+                    &local_map,\n+                    &value_labels_ranges,\n+                    Place {\n+                        base: PlaceBase::Local(local),\n+                        projection: ty::List::empty(),\n+                    },\n+                );\n \n-            let var_entry = self.debug_context.dwarf.unit.get_mut(var_id);\n-            var_entry.set(gimli::DW_AT_location, location);\n+                let var_entry = self.debug_context.dwarf.unit.get_mut(var_id);\n+                var_entry.set(gimli::DW_AT_location, location);\n+            }\n         }\n \n         // FIXME create locals for all entries in mir.var_debug_info"}]}