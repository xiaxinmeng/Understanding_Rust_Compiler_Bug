{"sha": "df7fd119d2ad54667cfe46a60db6f7fb799d4e90", "node_id": "C_kwDOAAsO6NoAKGRmN2ZkMTE5ZDJhZDU0NjY3Y2ZlNDZhNjBkYjZmN2ZiNzk5ZDRlOTA", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-08-30T15:18:01Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-09-27T11:31:51Z"}, "message": "Use if let chain.", "tree": {"sha": "19dd5fdf84317627355aa4ac1a37a8a5935782d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19dd5fdf84317627355aa4ac1a37a8a5935782d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/df7fd119d2ad54667cfe46a60db6f7fb799d4e90", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/df7fd119d2ad54667cfe46a60db6f7fb799d4e90", "html_url": "https://github.com/rust-lang/rust/commit/df7fd119d2ad54667cfe46a60db6f7fb799d4e90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/df7fd119d2ad54667cfe46a60db6f7fb799d4e90/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e65c96e4adcae72d694bf083ed191c409126e5ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/e65c96e4adcae72d694bf083ed191c409126e5ce", "html_url": "https://github.com/rust-lang/rust/commit/e65c96e4adcae72d694bf083ed191c409126e5ce"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "fe963a0ea3aa6efc845d82034f649803fdee0339", "filename": "compiler/rustc_builtin_macros/src/format.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/df7fd119d2ad54667cfe46a60db6f7fb799d4e90/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/df7fd119d2ad54667cfe46a60db6f7fb799d4e90/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fformat.rs?ref=df7fd119d2ad54667cfe46a60db6f7fb799d4e90", "patch": "@@ -236,10 +236,8 @@ pub fn make_format_args(\n         if let Some(note) = err.note {\n             e.note(&note);\n         }\n-        if let Some((label, span)) = err.secondary_label {\n-            if is_literal {\n-                e.span_label(fmt_span.from_inner(InnerSpan::new(span.start, span.end)), label);\n-            }\n+        if let Some((label, span)) = err.secondary_label && is_literal {\n+            e.span_label(fmt_span.from_inner(InnerSpan::new(span.start, span.end)), label);\n         }\n         if err.should_be_replaced_with_positional_argument {\n             let captured_arg_span ="}]}