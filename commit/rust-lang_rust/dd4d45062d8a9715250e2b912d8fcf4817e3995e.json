{"sha": "dd4d45062d8a9715250e2b912d8fcf4817e3995e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNGQ0NTA2MmQ4YTk3MTUyNTBlMmI5MTJkOGZjZjQ4MTdlMzk5NWU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-08T02:45:22Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-03-08T02:45:22Z"}, "message": "Make debug!, etc. macros not require a format string\n\nThe one thing `log` can still do is polymorphically log anything,\nbut debug!, etc. require a format string. With this patch\nyou can equivalently write `debug!(foo)` or `debug!(\"%?\", foo)`", "tree": {"sha": "4558cf30895e7bfcd210afc16351f4f69eeceb2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4558cf30895e7bfcd210afc16351f4f69eeceb2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd4d45062d8a9715250e2b912d8fcf4817e3995e", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd4d45062d8a9715250e2b912d8fcf4817e3995e", "html_url": "https://github.com/rust-lang/rust/commit/dd4d45062d8a9715250e2b912d8fcf4817e3995e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd4d45062d8a9715250e2b912d8fcf4817e3995e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7140d7c52bdf55daf0b978a19706d20c3bf7ee92", "url": "https://api.github.com/repos/rust-lang/rust/commits/7140d7c52bdf55daf0b978a19706d20c3bf7ee92", "html_url": "https://github.com/rust-lang/rust/commit/7140d7c52bdf55daf0b978a19706d20c3bf7ee92"}], "stats": {"total": 50, "additions": 42, "deletions": 8}, "files": [{"sha": "16f087085cc86d262c49960f918557c3912f3ec6", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/dd4d45062d8a9715250e2b912d8fcf4817e3995e/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd4d45062d8a9715250e2b912d8fcf4817e3995e/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=dd4d45062d8a9715250e2b912d8fcf4817e3995e", "patch": "@@ -409,14 +409,38 @@ pub fn core_macros() -> ~str {\n ~\"pub mod macros {\n     macro_rules! ignore (($($x:tt)*) => (()))\n \n-    macro_rules! error ( ($( $arg:expr ),+) => (\n-        log(::core::error, fmt!( $($arg),+ )) ))\n-    macro_rules! warn ( ($( $arg:expr ),+) => (\n-        log(::core::warn, fmt!( $($arg),+ )) ))\n-    macro_rules! info ( ($( $arg:expr ),+) => (\n-        log(::core::info, fmt!( $($arg),+ )) ))\n-    macro_rules! debug ( ($( $arg:expr ),+) => (\n-        log(::core::debug, fmt!( $($arg),+ )) ))\n+    macro_rules! error (\n+        ($arg:expr) => (\n+            log(::core::error, fmt!( \\\"%?\\\", $arg ))\n+        );\n+        ($( $arg:expr ),+) => (\n+            log(::core::error, fmt!( $($arg),+ ))\n+        )\n+    )\n+    macro_rules! warn (\n+        ($arg:expr) => (\n+            log(::core::warn, fmt!( \\\"%?\\\", $arg ))\n+        );\n+        ($( $arg:expr ),+) => (\n+            log(::core::warn, fmt!( $($arg),+ ))\n+        )\n+    )\n+    macro_rules! info (\n+        ($arg:expr) => (\n+            log(::core::info, fmt!( \\\"%?\\\", $arg ))\n+        );\n+        ($( $arg:expr ),+) => (\n+            log(::core::info, fmt!( $($arg),+ ))\n+        )\n+    )\n+    macro_rules! debug (\n+        ($arg:expr) => (\n+            log(::core::debug, fmt!( \\\"%?\\\", $arg ))\n+        );\n+        ($( $arg:expr ),+) => (\n+            log(::core::debug, fmt!( $($arg),+ ))\n+        )\n+    )\n \n     macro_rules! fail(\n         ($msg: expr) => ("}, {"sha": "3588016b8ba289ce2f6b4f95ce38575eac19212d", "filename": "src/test/run-pass/log-poly.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd4d45062d8a9715250e2b912d8fcf4817e3995e/src%2Ftest%2Frun-pass%2Flog-poly.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd4d45062d8a9715250e2b912d8fcf4817e3995e/src%2Ftest%2Frun-pass%2Flog-poly.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flog-poly.rs?ref=dd4d45062d8a9715250e2b912d8fcf4817e3995e", "patch": "@@ -0,0 +1,10 @@\n+enum Numbers {\n+    Three\n+}\n+\n+fn main() {\n+    debug!(1);\n+    info!(2.0);\n+    warn!(Three);\n+    error!(~[4]);\n+}"}]}