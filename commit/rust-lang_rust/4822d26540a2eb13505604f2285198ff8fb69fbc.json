{"sha": "4822d26540a2eb13505604f2285198ff8fb69fbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4MjJkMjY1NDBhMmViMTM1MDU2MDRmMjI4NTE5OGZmOGZiNjlmYmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-11-26T13:18:03Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-26T13:18:03Z"}, "message": "Merge #2406\n\n2406: Add hygiene information to SourceAnalyzer r=matklad a=edwin0cheng\n\nThis should fix https://github.com/rust-analyzer/rust-analyzer/pull/2392#issuecomment-557964686\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>", "tree": {"sha": "89d0c72996be70f99835f500cec24a8f80165a36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89d0c72996be70f99835f500cec24a8f80165a36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4822d26540a2eb13505604f2285198ff8fb69fbc", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd3SYLCRBK7hj4Ov3rIwAAdHIIABwzD4R63bejyIAHir7zD6QE\nZXUmcBbJAPPQoiiiBew1mwJYDzVvTX5sbCvFjpdRcyNI9Qkd43YH+MPjz8ml+CMy\n3WP44h4Q7a0lqqZ5ZG8w2/oZpoU5JnjU5T7uLQALTxL+hUmezZU+uV1ih+L5bbnZ\ny8QX4otZlE2A4R9rJXqGPzYfoHHQcF2wtCh5n3MLAaaslsPNbXWTG/KEcXRHGlln\nwOolKI3YH6z80aITU4nHh8XG6gyT6YO45sK5MIcl8H2ZtadJ4a7ug1N9PQf+pqUM\n1dC3g6ormd4YzmNQI6c3Y5I2sg6R+VXlk3syMje6a/VUggfsKtfesUujrllRLV8=\n=0A/i\n-----END PGP SIGNATURE-----\n", "payload": "tree 89d0c72996be70f99835f500cec24a8f80165a36\nparent 36dca8de93c07be62724f973aa4c8a045941d218\nparent 0623164c1d1ec461570c7d3d330d7c90fb00cf6e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1574774283 +0000\ncommitter GitHub <noreply@github.com> 1574774283 +0000\n\nMerge #2406\n\n2406: Add hygiene information to SourceAnalyzer r=matklad a=edwin0cheng\n\nThis should fix https://github.com/rust-analyzer/rust-analyzer/pull/2392#issuecomment-557964686\n\nCo-authored-by: Edwin Cheng <edwin0cheng@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4822d26540a2eb13505604f2285198ff8fb69fbc", "html_url": "https://github.com/rust-lang/rust/commit/4822d26540a2eb13505604f2285198ff8fb69fbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4822d26540a2eb13505604f2285198ff8fb69fbc/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36dca8de93c07be62724f973aa4c8a045941d218", "url": "https://api.github.com/repos/rust-lang/rust/commits/36dca8de93c07be62724f973aa4c8a045941d218", "html_url": "https://github.com/rust-lang/rust/commit/36dca8de93c07be62724f973aa4c8a045941d218"}, {"sha": "0623164c1d1ec461570c7d3d330d7c90fb00cf6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/0623164c1d1ec461570c7d3d330d7c90fb00cf6e", "html_url": "https://github.com/rust-lang/rust/commit/0623164c1d1ec461570c7d3d330d7c90fb00cf6e"}], "stats": {"total": 47, "additions": 34, "deletions": 13}, "files": [{"sha": "82cb66583037694ba37817d56d5f5d7994976b6c", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=4822d26540a2eb13505604f2285198ff8fb69fbc", "patch": "@@ -14,7 +14,8 @@ use hir_def::{\n     DefWithBodyId,\n };\n use hir_expand::{\n-    name::AsName, AstId, HirFileId, MacroCallId, MacroCallLoc, MacroFileKind, Source,\n+    hygiene::Hygiene, name::AsName, AstId, HirFileId, MacroCallId, MacroCallLoc, MacroFileKind,\n+    Source,\n };\n use ra_syntax::{\n     ast::{self, AstNode},\n@@ -240,10 +241,10 @@ impl SourceAnalyzer {\n     pub fn resolve_macro_call(\n         &self,\n         db: &impl HirDatabase,\n-        macro_call: &ast::MacroCall,\n+        macro_call: Source<&ast::MacroCall>,\n     ) -> Option<MacroDef> {\n-        // This must be a normal source file rather than macro file.\n-        let path = macro_call.path().and_then(Path::from_ast)?;\n+        let hygiene = Hygiene::new(db, macro_call.file_id);\n+        let path = macro_call.value.path().and_then(|ast| Path::from_src(ast, &hygiene))?;\n         self.resolver.resolve_path_as_macro(db, &path).map(|it| it.into())\n     }\n \n@@ -445,7 +446,7 @@ impl SourceAnalyzer {\n         db: &impl HirDatabase,\n         macro_call: Source<&ast::MacroCall>,\n     ) -> Option<Expansion> {\n-        let def = self.resolve_macro_call(db, macro_call.value)?.id;\n+        let def = self.resolve_macro_call(db, macro_call)?.id;\n         let ast_id = AstId::new(\n             macro_call.file_id,\n             db.ast_id_map(macro_call.file_id).ast_id(macro_call.value),"}, {"sha": "6810a26dbbd1336b0968667d198ca6b470fb6659", "filename": "crates/ra_hir_def/src/path.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_hir_def%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fpath.rs?ref=4822d26540a2eb13505604f2285198ff8fb69fbc", "patch": "@@ -97,7 +97,7 @@ impl Path {\n \n     /// Converts an `ast::Path` to `Path`. Works with use trees.\n     /// It correctly handles `$crate` based path from macro call.\n-    pub(crate) fn from_src(mut path: ast::Path, hygiene: &Hygiene) -> Option<Path> {\n+    pub fn from_src(mut path: ast::Path, hygiene: &Hygiene) -> Option<Path> {\n         let mut kind = PathKind::Plain;\n         let mut segments = Vec::new();\n         loop {"}, {"sha": "d559dc4d0e9632dcf9e2af9d8b38d52d1742da0e", "filename": "crates/ra_ide_api/src/call_info.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcall_info.rs?ref=4822d26540a2eb13505604f2285198ff8fb69fbc", "patch": "@@ -18,12 +18,9 @@ pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<Cal\n     // Find the calling expression and it's NameRef\n     let calling_node = FnCallNode::with_node(&syntax, position.offset)?;\n     let name_ref = calling_node.name_ref()?;\n+    let name_ref = hir::Source::new(position.file_id.into(), name_ref.syntax());\n \n-    let analyzer = hir::SourceAnalyzer::new(\n-        db,\n-        hir::Source::new(position.file_id.into(), name_ref.syntax()),\n-        None,\n-    );\n+    let analyzer = hir::SourceAnalyzer::new(db, name_ref, None);\n     let (mut call_info, has_self) = match &calling_node {\n         FnCallNode::CallExpr(expr) => {\n             //FIXME: Type::as_callable is broken\n@@ -44,7 +41,7 @@ pub(crate) fn call_info(db: &RootDatabase, position: FilePosition) -> Option<Cal\n             (CallInfo::with_fn(db, function), function.has_self_param(db))\n         }\n         FnCallNode::MacroCallExpr(expr) => {\n-            let macro_def = analyzer.resolve_macro_call(db, &expr)?;\n+            let macro_def = analyzer.resolve_macro_call(db, name_ref.with_value(&expr))?;\n             (CallInfo::with_macro(db, macro_def)?, false)\n         }\n     };"}, {"sha": "abc602244cab961785eafc592590da1ad064e64a", "filename": "crates/ra_ide_api/src/expand_macro.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fexpand_macro.rs?ref=4822d26540a2eb13505604f2285198ff8fb69fbc", "patch": "@@ -269,4 +269,27 @@ fn some_thing() -> u32 {\n         assert_eq!(res.name, \"foo\");\n         assert_snapshot!(res.expansion, @r###\"bar!()\"###);\n     }\n+\n+    #[test]\n+    fn macro_expand_with_dollar_crate() {\n+        let res = check_expand_macro(\n+            r#\"\n+        //- /lib.rs\n+        #[macro_export]\n+        macro_rules! bar {\n+            () => {0};\n+        }\n+        macro_rules! foo {\n+            () => {$crate::bar!()};\n+        }        \n+\n+        fn main() {        \n+            let res = fo<|>o!();\n+        }\n+        \"#,\n+        );\n+\n+        assert_eq!(res.name, \"foo\");\n+        assert_snapshot!(res.expansion, @r###\"0\"###);\n+    }\n }"}, {"sha": "227737ad24dae91a165232658b59426143c5724d", "filename": "crates/ra_ide_api/src/references/classify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4822d26540a2eb13505604f2285198ff8fb69fbc/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Freferences%2Fclassify.rs?ref=4822d26540a2eb13505604f2285198ff8fb69fbc", "patch": "@@ -152,7 +152,7 @@ pub(crate) fn classify_name_ref(\n \n     if let Some(macro_call) = parent.ancestors().find_map(ast::MacroCall::cast) {\n         tested_by!(goto_definition_works_for_macros);\n-        if let Some(macro_def) = analyzer.resolve_macro_call(db, &macro_call) {\n+        if let Some(macro_def) = analyzer.resolve_macro_call(db, name_ref.with_value(&macro_call)) {\n             let kind = NameKind::Macro(macro_def);\n             return Some(NameDefinition { kind, container, visibility });\n         }"}]}