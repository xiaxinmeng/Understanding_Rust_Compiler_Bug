{"sha": "66bc12564a5c7494cb17ac816255ac87b6f4016b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YmMxMjU2NGE1Yzc0OTRjYjE3YWM4MTYyNTVhYzg3YjZmNDAxNmI=", "commit": {"author": {"name": "clippered", "email": "clarke_overkill@yahoo.com", "date": "2017-11-06T10:34:30Z"}, "committer": {"name": "clippered", "email": "clarke_overkill@yahoo.com", "date": "2017-11-06T10:34:30Z"}, "message": "put back negative tests but allow float_cmp", "tree": {"sha": "a3c14fa402af76d5b99d384df24830d5297007cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3c14fa402af76d5b99d384df24830d5297007cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66bc12564a5c7494cb17ac816255ac87b6f4016b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66bc12564a5c7494cb17ac816255ac87b6f4016b", "html_url": "https://github.com/rust-lang/rust/commit/66bc12564a5c7494cb17ac816255ac87b6f4016b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66bc12564a5c7494cb17ac816255ac87b6f4016b/comments", "author": {"login": "clippered", "id": 5051900, "node_id": "MDQ6VXNlcjUwNTE5MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5051900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clippered", "html_url": "https://github.com/clippered", "followers_url": "https://api.github.com/users/clippered/followers", "following_url": "https://api.github.com/users/clippered/following{/other_user}", "gists_url": "https://api.github.com/users/clippered/gists{/gist_id}", "starred_url": "https://api.github.com/users/clippered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clippered/subscriptions", "organizations_url": "https://api.github.com/users/clippered/orgs", "repos_url": "https://api.github.com/users/clippered/repos", "events_url": "https://api.github.com/users/clippered/events{/privacy}", "received_events_url": "https://api.github.com/users/clippered/received_events", "type": "User", "site_admin": false}, "committer": {"login": "clippered", "id": 5051900, "node_id": "MDQ6VXNlcjUwNTE5MDA=", "avatar_url": "https://avatars.githubusercontent.com/u/5051900?v=4", "gravatar_id": "", "url": "https://api.github.com/users/clippered", "html_url": "https://github.com/clippered", "followers_url": "https://api.github.com/users/clippered/followers", "following_url": "https://api.github.com/users/clippered/following{/other_user}", "gists_url": "https://api.github.com/users/clippered/gists{/gist_id}", "starred_url": "https://api.github.com/users/clippered/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/clippered/subscriptions", "organizations_url": "https://api.github.com/users/clippered/orgs", "repos_url": "https://api.github.com/users/clippered/repos", "events_url": "https://api.github.com/users/clippered/events{/privacy}", "received_events_url": "https://api.github.com/users/clippered/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ddaf8580d58b859701a94695368120023ba0ef34", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddaf8580d58b859701a94695368120023ba0ef34", "html_url": "https://github.com/rust-lang/rust/commit/ddaf8580d58b859701a94695368120023ba0ef34"}], "stats": {"total": 65, "additions": 35, "deletions": 30}, "files": [{"sha": "adf2ab70368a901aac30c614e7f43f74eac75cbd", "filename": "tests/ui/float_cmp_const.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/66bc12564a5c7494cb17ac816255ac87b6f4016b/tests%2Fui%2Ffloat_cmp_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66bc12564a5c7494cb17ac816255ac87b6f4016b/tests%2Fui%2Ffloat_cmp_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp_const.rs?ref=66bc12564a5c7494cb17ac816255ac87b6f4016b", "patch": "@@ -2,6 +2,7 @@\n \n \n #![warn(float_cmp_const)]\n+#![allow(float_cmp)]\n #![allow(unused, no_effect, unnecessary_operation)]\n \n const ONE: f32 = 1.0;\n@@ -35,6 +36,10 @@ fn main() {\n     ONE != ::std::f32::INFINITY;\n     ONE == ::std::f32::NEG_INFINITY;\n \n-    // Note: float_cmp will warn as expected on cases where there are no float constants\n-    //       e.g. v == 1.0\n+    // no errors, but will warn float_cmp if '#![allow(float_cmp)]' above is removed\n+    let w = 1.1;\n+    v == w;\n+    v != w;\n+    v == 1.0;\n+    v != 1.0;\n }"}, {"sha": "fe277de28dd552ddede7bcfd19f0b7696839e9f6", "filename": "tests/ui/float_cmp_const.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/66bc12564a5c7494cb17ac816255ac87b6f4016b/tests%2Fui%2Ffloat_cmp_const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66bc12564a5c7494cb17ac816255ac87b6f4016b/tests%2Fui%2Ffloat_cmp_const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp_const.stderr?ref=66bc12564a5c7494cb17ac816255ac87b6f4016b", "patch": "@@ -1,85 +1,85 @@\n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:16:5\n+  --> $DIR/float_cmp_const.rs:17:5\n    |\n-16 |     1f32 == ONE;\n+17 |     1f32 == ONE;\n    |     ^^^^^^^^^^^ help: consider comparing them within some error: `(1f32 - ONE).abs() < error`\n    |\n    = note: `-D float-cmp-const` implied by `-D warnings`\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:16:5\n+  --> $DIR/float_cmp_const.rs:17:5\n    |\n-16 |     1f32 == ONE;\n+17 |     1f32 == ONE;\n    |     ^^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:17:5\n+  --> $DIR/float_cmp_const.rs:18:5\n    |\n-17 |     TWO == ONE;\n+18 |     TWO == ONE;\n    |     ^^^^^^^^^^ help: consider comparing them within some error: `(TWO - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:17:5\n+  --> $DIR/float_cmp_const.rs:18:5\n    |\n-17 |     TWO == ONE;\n+18 |     TWO == ONE;\n    |     ^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:18:5\n+  --> $DIR/float_cmp_const.rs:19:5\n    |\n-18 |     TWO != ONE;\n+19 |     TWO != ONE;\n    |     ^^^^^^^^^^ help: consider comparing them within some error: `(TWO - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:18:5\n+  --> $DIR/float_cmp_const.rs:19:5\n    |\n-18 |     TWO != ONE;\n+19 |     TWO != ONE;\n    |     ^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:19:5\n+  --> $DIR/float_cmp_const.rs:20:5\n    |\n-19 |     ONE + ONE == TWO;\n+20 |     ONE + ONE == TWO;\n    |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(ONE + ONE - TWO).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:19:5\n+  --> $DIR/float_cmp_const.rs:20:5\n    |\n-19 |     ONE + ONE == TWO;\n+20 |     ONE + ONE == TWO;\n    |     ^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:20:5\n+  --> $DIR/float_cmp_const.rs:21:5\n    |\n-20 |     1 as f32 == ONE;\n+21 |     1 as f32 == ONE;\n    |     ^^^^^^^^^^^^^^^ help: consider comparing them within some error: `(1 as f32 - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:20:5\n+  --> $DIR/float_cmp_const.rs:21:5\n    |\n-20 |     1 as f32 == ONE;\n+21 |     1 as f32 == ONE;\n    |     ^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:23:5\n+  --> $DIR/float_cmp_const.rs:24:5\n    |\n-23 |     v == ONE;\n+24 |     v == ONE;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(v - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:23:5\n+  --> $DIR/float_cmp_const.rs:24:5\n    |\n-23 |     v == ONE;\n+24 |     v == ONE;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64 constant\n-  --> $DIR/float_cmp_const.rs:24:5\n+  --> $DIR/float_cmp_const.rs:25:5\n    |\n-24 |     v != ONE;\n+25 |     v != ONE;\n    |     ^^^^^^^^ help: consider comparing them within some error: `(v - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp_const.rs:24:5\n+  --> $DIR/float_cmp_const.rs:25:5\n    |\n-24 |     v != ONE;\n+25 |     v != ONE;\n    |     ^^^^^^^^\n "}]}