{"sha": "d1dec9cd233bf28f2bab14126c3d9df93683ae17", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZGVjOWNkMjMzYmYyOGYyYmFiMTQxMjZjM2Q5ZGY5MzY4M2FlMTc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-14T14:38:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-14T14:38:22Z"}, "message": "don't ICE when callee has the wrong number of arguments", "tree": {"sha": "59539b669c8c2dc83d8199bcfdbb4711796da59c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/59539b669c8c2dc83d8199bcfdbb4711796da59c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1dec9cd233bf28f2bab14126c3d9df93683ae17", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1dec9cd233bf28f2bab14126c3d9df93683ae17", "html_url": "https://github.com/rust-lang/rust/commit/d1dec9cd233bf28f2bab14126c3d9df93683ae17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1dec9cd233bf28f2bab14126c3d9df93683ae17/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "893843fd455aa515a5d05cc8e70a970a84dab35d", "url": "https://api.github.com/repos/rust-lang/rust/commits/893843fd455aa515a5d05cc8e70a970a84dab35d", "html_url": "https://github.com/rust-lang/rust/commit/893843fd455aa515a5d05cc8e70a970a84dab35d"}], "stats": {"total": 60, "additions": 58, "deletions": 2}, "files": [{"sha": "7fe0ae0a97c4c4d223c49d7a07294b9a2113a96c", "filename": "src/helpers.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d1dec9cd233bf28f2bab14126c3d9df93683ae17/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1dec9cd233bf28f2bab14126c3d9df93683ae17/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=d1dec9cd233bf28f2bab14126c3d9df93683ae17", "patch": "@@ -181,11 +181,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n         let mut callee_args = this.frame().body.args_iter();\n         for arg in args {\n             let callee_arg = this.local_place(\n-                callee_args.next().expect(\"callee has fewer arguments than expected\"),\n+                callee_args.next().ok_or_else(||\n+                    err_ub_format!(\"callee has fewer arguments than expected\")\n+                )?\n             )?;\n             this.write_immediate(*arg, &callee_arg)?;\n         }\n-        assert_eq!(callee_args.next(), None, \"callee has more arguments than expected\");\n+        if callee_args.next().is_some() {\n+            throw_ub_format!(\"callee has more arguments than expected\");\n+        }\n \n         Ok(())\n     }"}, {"sha": "e2dfa33af8989ffe9b91296b61ff15be523668d2", "filename": "tests/compile-fail/concurrency/too_few_args.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d1dec9cd233bf28f2bab14126c3d9df93683ae17/tests%2Fcompile-fail%2Fconcurrency%2Ftoo_few_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1dec9cd233bf28f2bab14126c3d9df93683ae17/tests%2Fcompile-fail%2Fconcurrency%2Ftoo_few_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fconcurrency%2Ftoo_few_args.rs?ref=d1dec9cd233bf28f2bab14126c3d9df93683ae17", "patch": "@@ -0,0 +1,26 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+// error-pattern: callee has fewer arguments than expected\n+\n+//! The thread function must have exactly one argument.\n+\n+#![feature(rustc_private)]\n+\n+extern crate libc;\n+\n+use std::{mem, ptr};\n+\n+extern \"C\" fn thread_start() -> *mut libc::c_void {\n+    panic!()\n+}\n+\n+fn main() {\n+    unsafe {\n+        let mut native: libc::pthread_t = mem::zeroed();\n+        let attr: libc::pthread_attr_t = mem::zeroed();\n+        // assert_eq!(libc::pthread_attr_init(&mut attr), 0); FIXME: this function is not yet implemented.\n+        let thread_start: extern \"C\" fn() -> *mut libc::c_void = thread_start;\n+        let thread_start: extern \"C\" fn(*mut libc::c_void) -> *mut libc::c_void = mem::transmute(thread_start);\n+        assert_eq!(libc::pthread_create(&mut native, &attr, thread_start, ptr::null_mut()), 0);\n+        assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n+    }\n+}"}, {"sha": "0ef12b07073fbd453c188f80f3b298d6b3bf0f54", "filename": "tests/compile-fail/concurrency/too_many_args.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/d1dec9cd233bf28f2bab14126c3d9df93683ae17/tests%2Fcompile-fail%2Fconcurrency%2Ftoo_many_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1dec9cd233bf28f2bab14126c3d9df93683ae17/tests%2Fcompile-fail%2Fconcurrency%2Ftoo_many_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fconcurrency%2Ftoo_many_args.rs?ref=d1dec9cd233bf28f2bab14126c3d9df93683ae17", "patch": "@@ -0,0 +1,26 @@\n+// ignore-windows: Concurrency on Windows is not supported yet.\n+// error-pattern: callee has more arguments than expected\n+\n+//! The thread function must have exactly one argument.\n+\n+#![feature(rustc_private)]\n+\n+extern crate libc;\n+\n+use std::{mem, ptr};\n+\n+extern \"C\" fn thread_start(_null: *mut libc::c_void, _x: i32) -> *mut libc::c_void {\n+    panic!()\n+}\n+\n+fn main() {\n+    unsafe {\n+        let mut native: libc::pthread_t = mem::zeroed();\n+        let attr: libc::pthread_attr_t = mem::zeroed();\n+        // assert_eq!(libc::pthread_attr_init(&mut attr), 0); FIXME: this function is not yet implemented.\n+        let thread_start: extern \"C\" fn(*mut libc::c_void, i32) -> *mut libc::c_void = thread_start;\n+        let thread_start: extern \"C\" fn(*mut libc::c_void) -> *mut libc::c_void = mem::transmute(thread_start);\n+        assert_eq!(libc::pthread_create(&mut native, &attr, thread_start, ptr::null_mut()), 0);\n+        assert_eq!(libc::pthread_join(native, ptr::null_mut()), 0);\n+    }\n+}"}]}