{"sha": "7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMDMxYjA5MDdlOTBmYzA4M2U0ZjFmN2M2YTdmNjJlOTgzMjVhOWE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-03T17:46:13Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-03T17:46:13Z"}, "message": "Auto merge of #52973 - davidtwco:issue-52663-lifetimes-not-included-in-span, r=pnkfelix\n\nNLL mentions lifetimes that are not included in printed span(s).\n\nPart of #52663.\n\nr? @pnkfelix", "tree": {"sha": "badeb06007c6e6aa69a1a553bb78fbbb42c0f2c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/badeb06007c6e6aa69a1a553bb78fbbb42c0f2c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "html_url": "https://github.com/rust-lang/rust/commit/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "59fa6bd6c14eebd213884da08a33639b4c848bb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/59fa6bd6c14eebd213884da08a33639b4c848bb3", "html_url": "https://github.com/rust-lang/rust/commit/59fa6bd6c14eebd213884da08a33639b4c848bb3"}, {"sha": "2488cb6b1027bf88e33dfdc7ce89472f5dc54714", "url": "https://api.github.com/repos/rust-lang/rust/commits/2488cb6b1027bf88e33dfdc7ce89472f5dc54714", "html_url": "https://github.com/rust-lang/rust/commit/2488cb6b1027bf88e33dfdc7ce89472f5dc54714"}], "stats": {"total": 108, "additions": 103, "deletions": 5}, "files": [{"sha": "79165276430d34b2a20dcd8eb575036bb50d44b9", "filename": "src/librustc_mir/borrow_check/nll/region_infer/error_reporting/region_name.rs", "status": "modified", "additions": 50, "deletions": 4, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fregion_infer%2Ferror_reporting%2Fregion_name.rs?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -15,10 +15,10 @@ use rustc::hir::def_id::DefId;\n use rustc::infer::InferCtxt;\n use rustc::mir::Mir;\n use rustc::ty::subst::{Substs, UnpackedKind};\n-use rustc::ty::{self, RegionVid, Ty, TyCtxt};\n+use rustc::ty::{self, RegionKind, RegionVid, Ty, TyCtxt};\n use rustc::util::ppaux::with_highlight_region;\n use rustc_errors::DiagnosticBuilder;\n-use syntax::ast::Name;\n+use syntax::ast::{Name, DUMMY_NODE_ID};\n use syntax::symbol::keywords;\n use syntax_pos::symbol::InternedString;\n \n@@ -90,14 +90,21 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         diag: &mut DiagnosticBuilder<'_>,\n     ) -> Option<InternedString> {\n         let error_region = self.to_error_region(fr)?;\n+\n         debug!(\"give_region_a_name: error_region = {:?}\", error_region);\n         match error_region {\n-            ty::ReEarlyBound(ebr) => Some(ebr.name),\n+            ty::ReEarlyBound(ebr) => {\n+                self.highlight_named_span(tcx, error_region, &ebr.name, diag);\n+                Some(ebr.name)\n+            },\n \n             ty::ReStatic => Some(keywords::StaticLifetime.name().as_interned_str()),\n \n             ty::ReFree(free_region) => match free_region.bound_region {\n-                ty::BoundRegion::BrNamed(_, name) => Some(name),\n+                ty::BoundRegion::BrNamed(_, name) => {\n+                    self.highlight_named_span(tcx, error_region, &name, diag);\n+                    Some(name)\n+                },\n \n                 ty::BoundRegion::BrEnv => {\n                     let closure_span = tcx.hir.span_if_local(mir_def_id).unwrap();\n@@ -123,6 +130,45 @@ impl<'tcx> RegionInferenceContext<'tcx> {\n         }\n     }\n \n+    /// Highlight a named span to provide context for error messages that\n+    /// mention that span, for example:\n+    ///\n+    /// ```\n+    ///  |\n+    ///  | fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+    ///  |                --  -- lifetime `'b` defined here\n+    ///  |                |\n+    ///  |                lifetime `'a` defined here\n+    ///  |\n+    ///  |     with_signature(cell, t, |cell, t| require(cell, t));\n+    ///  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must\n+    ///  |                                                         outlive `'a`\n+    /// ```\n+    fn highlight_named_span(\n+        &self,\n+        tcx: TyCtxt<'_, '_, 'tcx>,\n+        error_region: &RegionKind,\n+        name: &InternedString,\n+        diag: &mut DiagnosticBuilder<'_>,\n+    ) {\n+        let cm = tcx.sess.codemap();\n+\n+        let scope = error_region.free_region_binding_scope(tcx);\n+        let node = tcx.hir.as_local_node_id(scope).unwrap_or(DUMMY_NODE_ID);\n+\n+        let mut sp = cm.def_span(tcx.hir.span(node));\n+        if let Some(param) = tcx.hir.get_generics(scope).and_then(|generics| {\n+            generics.get_named(name)\n+        }) {\n+            sp = param.span;\n+        }\n+\n+        diag.span_label(\n+            sp,\n+            format!(\"lifetime `{}` defined here\", name),\n+        );\n+    }\n+\n     /// Find an argument that contains `fr` and label it with a fully\n     /// elaborated type, returning something like `'1`. Result looks\n     /// like:"}, {"sha": "c1e12978c5179c057186d2390b66e71cbafab4d3", "filename": "src/test/ui/impl-trait/static-return-lifetime-infered.nll.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fstatic-return-lifetime-infered.nll.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -21,6 +21,8 @@ LL |         self.x.iter().map(|a| a.0)\n error: unsatisfied lifetime constraints\n   --> $DIR/static-return-lifetime-infered.rs:21:9\n    |\n+LL |     fn iter_values<'a>(&'a self) -> impl Iterator<Item=u32> {\n+   |                    -- lifetime `'a` defined here\n LL |         self.x.iter().map(|a| a.0)\n    |         ^^^^^^^^^^^^^ requires that `'a` must outlive `'static`\n "}, {"sha": "48dad040f9d0cd64c1ea84a737836d9789f4c3bd", "filename": "src/test/ui/issue-10291.nll.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fissue-10291.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fissue-10291.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-10291.nll.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -7,6 +7,8 @@ LL |         x //~ ERROR E0312\n error: unsatisfied lifetime constraints\n   --> $DIR/issue-10291.rs:12:5\n    |\n+LL | fn test<'x>(x: &'x isize) {\n+   |         -- lifetime `'x` defined here\n LL |     drop::<Box<for<'z> FnMut(&'z isize) -> &'z isize>>(Box::new(|z| {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ requires that `'x` must outlive `'static`\n "}, {"sha": "4e1efc96490bd718e8641bbda2b75ea008baf8ad", "filename": "src/test/ui/issue-52213.nll.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fissue-52213.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fissue-52213.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-52213.nll.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -7,6 +7,11 @@ LL |     match (&t,) { //~ ERROR cannot infer an appropriate lifetime\n error: unsatisfied lifetime constraints\n   --> $DIR/issue-52213.rs:13:11\n    |\n+LL | fn transmute_lifetime<'a, 'b, T>(t: &'a (T,)) -> &'b T {\n+   |                       --  -- lifetime `'b` defined here\n+   |                       |\n+   |                       lifetime `'a` defined here\n+LL |     match (&t,) { //~ ERROR cannot infer an appropriate lifetime\n LL |         ((u,),) => u,\n    |           ^ requires that `'a` must outlive `'b`\n "}, {"sha": "116ff6ef023561e0ddb121071585b1ed92baac7c", "filename": "src/test/ui/nll/closure-requirements/region-lbr-named-does-not-outlive-static.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fregion-lbr-named-does-not-outlive-static.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -7,6 +7,8 @@ LL |     &*x\n error: unsatisfied lifetime constraints\n   --> $DIR/region-lbr-named-does-not-outlive-static.rs:19:5\n    |\n+LL | fn foo<'a>(x: &'a u32) -> &'static u32 {\n+   |        -- lifetime `'a` defined here\n LL |     &*x\n    |     ^^^ requires that `'a` must outlive `'static`\n "}, {"sha": "cdc407985fe63681ff63dc5be93a97a7772b654c", "filename": "src/test/ui/nll/mir_check_cast_closure.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_closure.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -7,6 +7,10 @@ LL |     g\n error: unsatisfied lifetime constraints\n   --> $DIR/mir_check_cast_closure.rs:16:28\n    |\n+LL | fn bar<'a, 'b>() -> fn(&'a u32, &'b u32) -> &'a u32 {\n+   |        --  -- lifetime `'b` defined here\n+   |        |\n+   |        lifetime `'a` defined here\n LL |     let g: fn(_, _) -> _ = |_x, y| y;\n    |                            ^^^^^^^^^ cast requires that `'b` must outlive `'a`\n "}, {"sha": "02ecd05e5f931baf5892a7779ef9ba383384147b", "filename": "src/test/ui/nll/mir_check_cast_unsize.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmir_check_cast_unsize.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -8,7 +8,9 @@ error: unsatisfied lifetime constraints\n   --> $DIR/mir_check_cast_unsize.rs:17:46\n    |\n LL |   fn bar<'a>(x: &'a u32) -> &'static dyn Debug {\n-   |  ______________________________________________^\n+   |  ________--____________________________________^\n+   | |        |\n+   | |        lifetime `'a` defined here\n LL | |     //~^ ERROR unsatisfied lifetime constraints\n LL | |     x\n LL | |     //~^ WARNING not reporting region error due to nll"}, {"sha": "2b0e682f85161e3c0e90be2f09a44bc8ed597869", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-closure.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-closure.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -52,6 +52,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-one-region-closure.rs:55:5\n    |\n+LL | fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                          --  -- lifetime `'b` defined here\n+   |                          |\n+   |                          lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n@@ -101,6 +106,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-one-region-closure.rs:67:5\n    |\n+LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                           --  -- lifetime `'b` defined here\n+   |                           |\n+   |                           lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n@@ -150,6 +160,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-one-region-closure.rs:89:5\n    |\n+LL | fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                        --  -- lifetime `'b` defined here\n+   |                        |\n+   |                        lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n "}, {"sha": "739bde4a481c57b1208252190af701dd207e8a3a", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-closure.stderr", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-closure.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -51,6 +51,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-one-region-trait-bound-closure.rs:47:5\n    |\n+LL | fn no_relationships_late<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                          --  -- lifetime `'b` defined here\n+   |                          |\n+   |                          lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n@@ -91,6 +96,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-one-region-trait-bound-closure.rs:58:5\n    |\n+LL | fn no_relationships_early<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                           --  -- lifetime `'b` defined here\n+   |                           |\n+   |                           lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n \n@@ -131,6 +141,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-one-region-trait-bound-closure.rs:79:5\n    |\n+LL | fn projection_outlives<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                        --  -- lifetime `'b` defined here\n+   |                        |\n+   |                        lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n "}, {"sha": "6838e0f3b3d01505b3cc6be6855f8382825f0152", "filename": "src/test/ui/nll/ty-outlives/projection-two-region-trait-bound-closure.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7e031b0907e90fc083e4f1f7c6a7f62e98325a9a/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-two-region-trait-bound-closure.stderr?ref=7e031b0907e90fc083e4f1f7c6a7f62e98325a9a", "patch": "@@ -259,6 +259,11 @@ LL | | }\n error: unsatisfied lifetime constraints\n   --> $DIR/projection-two-region-trait-bound-closure.rs:108:5\n    |\n+LL | fn two_regions<'a, 'b, T>(cell: Cell<&'a ()>, t: T)\n+   |                --  -- lifetime `'b` defined here\n+   |                |\n+   |                lifetime `'a` defined here\n+...\n LL |     with_signature(cell, t, |cell, t| require(cell, t));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ argument requires that `'b` must outlive `'a`\n "}]}