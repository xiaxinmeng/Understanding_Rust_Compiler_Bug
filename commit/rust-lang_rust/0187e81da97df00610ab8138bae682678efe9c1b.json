{"sha": "0187e81da97df00610ab8138bae682678efe9c1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxODdlODFkYTk3ZGYwMDYxMGFiODEzOGJhZTY4MjY3OGVmZTljMWI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-10-12T14:04:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-12T14:04:15Z"}, "message": "Rollup merge of #54958 - RalfJung:static-assert, r=oli-obk\n\nadd a macro for static (compile-time) assertions\n\nCc @oli-obk", "tree": {"sha": "7a96268cd9c69b77c55cf1b59f67d79a340bd611", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a96268cd9c69b77c55cf1b59f67d79a340bd611"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0187e81da97df00610ab8138bae682678efe9c1b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbwKnfCRBK7hj4Ov3rIwAAdHIIAJOjRIKdoe5nfF9kTh1ooaKM\ng1znkNjH5LJ9oGvMWcmPKowy9B2knyTn/gBz+iHFgCO7Ox03fhyeogaoKdcu0oeo\naz+dakkW9ILpa7l2qAh1ujz76j1or5Jsr5pOw9KO716o+THZm6Z6/V42VTwJUpYi\nXZOYe2F8xH162W8tcoaY6bDKsPkDP1B/BQTw3JQtx7RdaObO4XCxp4+h24RaBw8Q\nuM10SCyu8Z2wgyGsp3BIJuuYR37F9qYhExI+R9x6A0+rnIXQEjF9VmV8TJxwuFi7\n0tTJ7dMVV8UPQNy4vdhCkPNvrUluLBb3/vTlPzYnSiUE8zc4pXPZ0HCmy/I+I+4=\n=vY1q\n-----END PGP SIGNATURE-----\n", "payload": "tree 7a96268cd9c69b77c55cf1b59f67d79a340bd611\nparent 8e3f18918091bbd5f45c7a0bc86702532a25dde0\nparent a332387b87f850fd3ac8474ff3fc9c83fd70167b\nauthor kennytm <kennytm@gmail.com> 1539353055 +0800\ncommitter GitHub <noreply@github.com> 1539353055 +0800\n\nRollup merge of #54958 - RalfJung:static-assert, r=oli-obk\n\nadd a macro for static (compile-time) assertions\n\nCc @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0187e81da97df00610ab8138bae682678efe9c1b", "html_url": "https://github.com/rust-lang/rust/commit/0187e81da97df00610ab8138bae682678efe9c1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0187e81da97df00610ab8138bae682678efe9c1b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8e3f18918091bbd5f45c7a0bc86702532a25dde0", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e3f18918091bbd5f45c7a0bc86702532a25dde0", "html_url": "https://github.com/rust-lang/rust/commit/8e3f18918091bbd5f45c7a0bc86702532a25dde0"}, {"sha": "a332387b87f850fd3ac8474ff3fc9c83fd70167b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a332387b87f850fd3ac8474ff3fc9c83fd70167b", "html_url": "https://github.com/rust-lang/rust/commit/a332387b87f850fd3ac8474ff3fc9c83fd70167b"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "897e9cc2a381f2305c96a59bc15b3508833637d6", "filename": "src/librustc/macros.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0187e81da97df00610ab8138bae682678efe9c1b/src%2Flibrustc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0187e81da97df00610ab8138bae682678efe9c1b/src%2Flibrustc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmacros.rs?ref=0187e81da97df00610ab8138bae682678efe9c1b", "patch": "@@ -62,6 +62,16 @@ macro_rules! span_bug {\n     })\n }\n \n+#[macro_export]\n+macro_rules! static_assert {\n+    ($name:ident: $test:expr) => {\n+        // Use the bool to access an array such that if the bool is false, the access\n+        // is out-of-bounds.\n+        #[allow(dead_code)]\n+        static $name: () = [()][!$test as usize];\n+    }\n+}\n+\n #[macro_export]\n macro_rules! __impl_stable_hash_field {\n     ($field:ident, $ctx:expr, $hasher:expr) => ($field.hash_stable($ctx, $hasher));"}, {"sha": "a90f03f536ad52d62cb4d7d419a92f14c997e4d7", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0187e81da97df00610ab8138bae682678efe9c1b/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0187e81da97df00610ab8138bae682678efe9c1b/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=0187e81da97df00610ab8138bae682678efe9c1b", "patch": "@@ -167,8 +167,7 @@ newtype_index! {\n impl_stable_hash_for!(struct ::middle::region::FirstStatementIndex { private });\n \n // compilation error if size of `ScopeData` is not the same as a `u32`\n-#[allow(dead_code)]\n-static ASSERT: () = [()][!(mem::size_of::<ScopeData>() == 4) as usize];\n+static_assert!(ASSERT_SCOPE_DATA: mem::size_of::<ScopeData>() == 4);\n \n impl Scope {\n     /// Returns a item-local id associated with this scope."}, {"sha": "ab1df2d4c3bb9f3eaece7df32fef18c18ff1da4b", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0187e81da97df00610ab8138bae682678efe9c1b/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0187e81da97df00610ab8138bae682678efe9c1b/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=0187e81da97df00610ab8138bae682678efe9c1b", "patch": "@@ -829,12 +829,9 @@ impl<'tcx> CommonTypes<'tcx> {\n     fn new(interners: &CtxtInterners<'tcx>) -> CommonTypes<'tcx> {\n         // Ensure our type representation does not grow\n         #[cfg(target_pointer_width = \"64\")]\n-        #[allow(dead_code)]\n-        static ASSERT_TY_KIND: () =\n-            [()][!(::std::mem::size_of::<ty::TyKind<'_>>() <= 24) as usize];\n+        static_assert!(ASSERT_TY_KIND: ::std::mem::size_of::<ty::TyKind<'_>>() <= 24);\n         #[cfg(target_pointer_width = \"64\")]\n-        #[allow(dead_code)]\n-        static ASSERT_TYS: () = [()][!(::std::mem::size_of::<ty::TyS<'_>>() <= 32) as usize];\n+        static_assert!(ASSERT_TYS: ::std::mem::size_of::<ty::TyS<'_>>() <= 32);\n \n         let mk = |sty| CtxtInterners::intern_ty(interners, interners, sty);\n         let mk_region = |r| {"}]}