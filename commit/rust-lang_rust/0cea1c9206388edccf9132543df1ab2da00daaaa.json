{"sha": "0cea1c9206388edccf9132543df1ab2da00daaaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZWExYzkyMDYzODhlZGNjZjkxMzI1NDNkZjFhYjJkYTAwZGFhYWE=", "commit": {"author": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-26T13:03:28Z"}, "committer": {"name": "Albin Hedman", "email": "albin9604@gmail.com", "date": "2020-12-26T13:03:28Z"}, "message": "Added reference to tracking issue #80377", "tree": {"sha": "50e1a573ead0bb0d1c91bcc8f1be31cfecb72d40", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50e1a573ead0bb0d1c91bcc8f1be31cfecb72d40"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cea1c9206388edccf9132543df1ab2da00daaaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cea1c9206388edccf9132543df1ab2da00daaaa", "html_url": "https://github.com/rust-lang/rust/commit/0cea1c9206388edccf9132543df1ab2da00daaaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cea1c9206388edccf9132543df1ab2da00daaaa/comments", "author": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "usbalbin", "id": 10927717, "node_id": "MDQ6VXNlcjEwOTI3NzE3", "avatar_url": "https://avatars.githubusercontent.com/u/10927717?v=4", "gravatar_id": "", "url": "https://api.github.com/users/usbalbin", "html_url": "https://github.com/usbalbin", "followers_url": "https://api.github.com/users/usbalbin/followers", "following_url": "https://api.github.com/users/usbalbin/following{/other_user}", "gists_url": "https://api.github.com/users/usbalbin/gists{/gist_id}", "starred_url": "https://api.github.com/users/usbalbin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/usbalbin/subscriptions", "organizations_url": "https://api.github.com/users/usbalbin/orgs", "repos_url": "https://api.github.com/users/usbalbin/repos", "events_url": "https://api.github.com/users/usbalbin/events{/privacy}", "received_events_url": "https://api.github.com/users/usbalbin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e27765ddfbeb524629ecb78c430fbe9c765232b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e27765ddfbeb524629ecb78c430fbe9c765232b", "html_url": "https://github.com/rust-lang/rust/commit/5e27765ddfbeb524629ecb78c430fbe9c765232b"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "e721d1243e88be6693fb2b41dd342905967a3223", "filename": "library/core/src/ptr/const_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cea1c9206388edccf9132543df1ab2da00daaaa/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cea1c9206388edccf9132543df1ab2da00daaaa/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fconst_ptr.rs?ref=0cea1c9206388edccf9132543df1ab2da00daaaa", "patch": "@@ -725,7 +725,7 @@ impl<T: ?Sized> *const T {\n     ///\n     /// [`ptr::read`]: crate::ptr::read()\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n     #[inline]\n     pub const unsafe fn read(self) -> T\n     where\n@@ -764,7 +764,7 @@ impl<T: ?Sized> *const T {\n     ///\n     /// [`ptr::read_unaligned`]: crate::ptr::read_unaligned()\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n     #[inline]\n     pub const unsafe fn read_unaligned(self) -> T\n     where"}, {"sha": "807f114ea466c123ae1d073f20334f491476096c", "filename": "library/core/src/ptr/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cea1c9206388edccf9132543df1ab2da00daaaa/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cea1c9206388edccf9132543df1ab2da00daaaa/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmod.rs?ref=0cea1c9206388edccf9132543df1ab2da00daaaa", "patch": "@@ -685,7 +685,7 @@ pub unsafe fn replace<T>(dst: *mut T, mut src: T) -> T {\n /// [valid]: self#safety\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"none\")]\n+#[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n pub const unsafe fn read<T>(src: *const T) -> T {\n     // `copy_nonoverlapping` takes care of debug_assert.\n     let mut tmp = MaybeUninit::<T>::uninit();\n@@ -785,7 +785,7 @@ pub const unsafe fn read<T>(src: *const T) -> T {\n /// ```\n #[inline]\n #[stable(feature = \"ptr_unaligned\", since = \"1.17.0\")]\n-#[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"none\")]\n+#[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n pub const unsafe fn read_unaligned<T>(src: *const T) -> T {\n     // `copy_nonoverlapping` takes care of debug_assert.\n     let mut tmp = MaybeUninit::<T>::uninit();"}, {"sha": "1788956894393c06ed30f3c8f53f84622476d654", "filename": "library/core/src/ptr/mut_ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0cea1c9206388edccf9132543df1ab2da00daaaa/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0cea1c9206388edccf9132543df1ab2da00daaaa/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fmut_ptr.rs?ref=0cea1c9206388edccf9132543df1ab2da00daaaa", "patch": "@@ -832,7 +832,7 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// [`ptr::read`]: crate::ptr::read()\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n     #[inline]\n     pub const unsafe fn read(self) -> T\n     where\n@@ -871,7 +871,7 @@ impl<T: ?Sized> *mut T {\n     ///\n     /// [`ptr::read_unaligned`]: crate::ptr::read_unaligned()\n     #[stable(feature = \"pointer_methods\", since = \"1.26.0\")]\n-    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"none\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_read\", issue = \"80377\")]\n     #[inline]\n     pub const unsafe fn read_unaligned(self) -> T\n     where"}]}