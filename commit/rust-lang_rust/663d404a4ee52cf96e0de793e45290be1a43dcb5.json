{"sha": "663d404a4ee52cf96e0de793e45290be1a43dcb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2M2Q0MDRhNGVlNTJjZjk2ZTBkZTc5M2U0NTI5MGJlMWE0M2RjYjU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-02-04T14:05:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-04T14:05:25Z"}, "message": "Merge #7555\n\n7555: Expander: store a LocalModuleId, not ModuleId r=jonas-schievink a=jonas-schievink\n\nIt already stores the DefMap containing the module, so having\r\na full ModuleId is unnecessary and makes it easier to mix things up\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "11c5bf2a11bb069da40e656774656009824cf16e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/11c5bf2a11bb069da40e656774656009824cf16e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/663d404a4ee52cf96e0de793e45290be1a43dcb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgG/8lCRBK7hj4Ov3rIwAAdHIIABks6XzioTyOqX43Nr1WX138\nBUuACQmju2ehuCbsciD7WSDV34QPGb18RQyODnf534wdFinHXBv46uD1xE+ScaM6\n7m2NpTPEsLm20ZHpxJKTq9wm6mgrBtaW0b+GFECKeqluA/1St9fyukT81nbVL6dl\nRJpDwZmMJk0J1Pp7q/moO/67I2DHdIr7O6DiXckVn21q/6wbbbWn60JVXlwNdJCs\njJVW/Jeku5/fcHwR0a2gOu1Rcs0K5pxaFxQEdGgnANSWL4H05ITt8zPm91ePnFKx\nwFs6BTCst9UzrglWgxj12oS4ve4uEkbR2uqTALaZfFxFtOOeohc/Z0tsDHlIcS8=\n=QwsU\n-----END PGP SIGNATURE-----\n", "payload": "tree 11c5bf2a11bb069da40e656774656009824cf16e\nparent 1bae5509ad64a560c4597a021ab467ba063d12c0\nparent cacaebcb33f1b712fbece87c69fa0ad843648f78\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1612447525 +0000\ncommitter GitHub <noreply@github.com> 1612447525 +0000\n\nMerge #7555\n\n7555: Expander: store a LocalModuleId, not ModuleId r=jonas-schievink a=jonas-schievink\n\nIt already stores the DefMap containing the module, so having\r\na full ModuleId is unnecessary and makes it easier to mix things up\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/663d404a4ee52cf96e0de793e45290be1a43dcb5", "html_url": "https://github.com/rust-lang/rust/commit/663d404a4ee52cf96e0de793e45290be1a43dcb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/663d404a4ee52cf96e0de793e45290be1a43dcb5/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1bae5509ad64a560c4597a021ab467ba063d12c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/1bae5509ad64a560c4597a021ab467ba063d12c0", "html_url": "https://github.com/rust-lang/rust/commit/1bae5509ad64a560c4597a021ab467ba063d12c0"}, {"sha": "cacaebcb33f1b712fbece87c69fa0ad843648f78", "url": "https://api.github.com/repos/rust-lang/rust/commits/cacaebcb33f1b712fbece87c69fa0ad843648f78", "html_url": "https://github.com/rust-lang/rust/commit/cacaebcb33f1b712fbece87c69fa0ad843648f78"}], "stats": {"total": 25, "additions": 11, "deletions": 14}, "files": [{"sha": "9a432f7d126df014e2cd1f2865aad88232b5e18e", "filename": "crates/hir_def/src/body.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/663d404a4ee52cf96e0de793e45290be1a43dcb5/crates%2Fhir_def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/663d404a4ee52cf96e0de793e45290be1a43dcb5/crates%2Fhir_def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody.rs?ref=663d404a4ee52cf96e0de793e45290be1a43dcb5", "patch": "@@ -33,7 +33,7 @@ use crate::{\n     nameres::DefMap,\n     path::{ModPath, Path},\n     src::HasSource,\n-    AsMacroCall, DefWithBodyId, HasModule, Lookup, ModuleId,\n+    AsMacroCall, DefWithBodyId, HasModule, LocalModuleId, Lookup, ModuleId,\n };\n \n /// A subset of Expander that only deals with cfg attributes. We only need it to\n@@ -49,7 +49,7 @@ pub(crate) struct Expander {\n     def_map: Arc<DefMap>,\n     current_file_id: HirFileId,\n     ast_id_map: Arc<AstIdMap>,\n-    module: ModuleId,\n+    module: LocalModuleId,\n     recursion_limit: usize,\n }\n \n@@ -94,7 +94,7 @@ impl Expander {\n             def_map: crate_def_map,\n             current_file_id,\n             ast_id_map,\n-            module,\n+            module: module.local_id,\n             recursion_limit: 0,\n         }\n     }\n@@ -197,10 +197,7 @@ impl Expander {\n     }\n \n     fn resolve_path_as_macro(&self, db: &dyn DefDatabase, path: &ModPath) -> Option<MacroDefId> {\n-        self.def_map\n-            .resolve_path(db, self.module.local_id, path, BuiltinShadowMode::Other)\n-            .0\n-            .take_macros()\n+        self.def_map.resolve_path(db, self.module, path, BuiltinShadowMode::Other).0.take_macros()\n     }\n \n     fn ast_id<N: AstNode>(&self, item: &N) -> AstId<N> {"}, {"sha": "28b11cddeee401f46212bd69e64c328b21dee07e", "filename": "crates/hir_def/src/body/lower.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/663d404a4ee52cf96e0de793e45290be1a43dcb5/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/663d404a4ee52cf96e0de793e45290be1a43dcb5/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fbody%2Flower.rs?ref=663d404a4ee52cf96e0de793e45290be1a43dcb5", "patch": "@@ -698,15 +698,15 @@ impl ExprCollector<'_> {\n \n     fn collect_block(&mut self, block: ast::BlockExpr) -> ExprId {\n         let ast_id = self.expander.ast_id(&block);\n-        let block_loc = BlockLoc { ast_id, module: self.expander.module };\n+        let block_loc =\n+            BlockLoc { ast_id, module: self.expander.def_map.module_id(self.expander.module) };\n         let block_id = self.db.intern_block(block_loc);\n         let opt_def_map = self.db.block_def_map(block_id);\n         let has_def_map = opt_def_map.is_some();\n         let def_map = opt_def_map.unwrap_or_else(|| self.expander.def_map.clone());\n-        let module =\n-            if has_def_map { def_map.module_id(def_map.root()) } else { self.expander.module };\n+        let module = if has_def_map { def_map.root() } else { self.expander.module };\n         let prev_def_map = mem::replace(&mut self.expander.def_map, def_map);\n-        let prev_module = mem::replace(&mut self.expander.module, module);\n+        let prev_local_module = mem::replace(&mut self.expander.module, module);\n \n         self.collect_stmts_items(block.statements());\n         let statements =\n@@ -719,7 +719,7 @@ impl ExprCollector<'_> {\n         );\n \n         self.expander.def_map = prev_def_map;\n-        self.expander.module = prev_module;\n+        self.expander.module = prev_local_module;\n         expr_id\n     }\n \n@@ -812,7 +812,7 @@ impl ExprCollector<'_> {\n                 }\n                 Either::Right(e) => {\n                     let mac = MacroDefId {\n-                        krate: self.expander.module.krate,\n+                        krate: self.expander.def_map.krate(),\n                         ast_id: Some(self.expander.ast_id(&e)),\n                         kind: MacroDefKind::Declarative,\n                         local_inner: false,\n@@ -852,7 +852,7 @@ impl ExprCollector<'_> {\n                     // decide that, we need to try resolving the name.\n                     let (resolved, _) = self.expander.def_map.resolve_path(\n                         self.db,\n-                        self.expander.module.local_id,\n+                        self.expander.module,\n                         &name.clone().into(),\n                         BuiltinShadowMode::Other,\n                     );"}]}