{"sha": "c95fa8cbe22d782cd7bc007dfe06aba9ceddff78", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5NWZhOGNiZTIyZDc4MmNkN2JjMDA3ZGZlMDZhYmE5Y2VkZGZmNzg=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-07T03:33:33Z"}, "committer": {"name": "Seiichi Uchida", "email": "seiichi.uchida@dena.com", "date": "2018-06-07T03:33:33Z"}, "message": "Return None when the formatting of macro failed in format_snippet", "tree": {"sha": "b0a6857cad7dbee9dc06bea8df7e0e6e100a30e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b0a6857cad7dbee9dc06bea8df7e0e6e100a30e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c95fa8cbe22d782cd7bc007dfe06aba9ceddff78", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c95fa8cbe22d782cd7bc007dfe06aba9ceddff78", "html_url": "https://github.com/rust-lang/rust/commit/c95fa8cbe22d782cd7bc007dfe06aba9ceddff78", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c95fa8cbe22d782cd7bc007dfe06aba9ceddff78/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1477ca1de6ff7b0d5ad0fe190ed9ae7fe65f1f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1477ca1de6ff7b0d5ad0fe190ed9ae7fe65f1f5", "html_url": "https://github.com/rust-lang/rust/commit/d1477ca1de6ff7b0d5ad0fe190ed9ae7fe65f1f5"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "8d4cbb51b5a43be338822bcda0e1672ccaee2cea", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c95fa8cbe22d782cd7bc007dfe06aba9ceddff78/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c95fa8cbe22d782cd7bc007dfe06aba9ceddff78/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=c95fa8cbe22d782cd7bc007dfe06aba9ceddff78", "patch": "@@ -689,6 +689,7 @@ fn format_snippet(snippet: &str, config: &Config) -> Option<String> {\n     config.set().hide_parse_errors(true);\n     match format_input(input, &config, Some(&mut out)) {\n         // `format_input()` returns an empty string on parsing error.\n+        Ok((summary, _)) if summary.has_macro_formatting_failure() => None,\n         Ok(..) if out.is_empty() && !snippet.is_empty() => None,\n         Ok(..) => String::from_utf8(out).ok(),\n         Err(..) => None,"}]}