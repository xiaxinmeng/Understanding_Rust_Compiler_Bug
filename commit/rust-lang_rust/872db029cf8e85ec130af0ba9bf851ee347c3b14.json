{"sha": "872db029cf8e85ec130af0ba9bf851ee347c3b14", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MmRiMDI5Y2Y4ZTg1ZWMxMzBhZjBiYTliZjg1MWVlMzQ3YzNiMTQ=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-01T13:31:25Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-04-01T13:31:25Z"}, "message": "Improve CONTRIBUTING.md\n\n* Incremental compilation is on by default\n* Restructured the label overview to go from easy to more difficult labels.", "tree": {"sha": "99239ca50303ae573f89f45f8c9896400da0293e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99239ca50303ae573f89f45f8c9896400da0293e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872db029cf8e85ec130af0ba9bf851ee347c3b14", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQItBAABCAAXBQJawN+GEBxkZXZAcGhhbnNjaC5uZXQACgkQk/szRZ0xHl6Wzw//\nbpVoObU0VF2GHCoY8ZmTMNqK4NrZqdnJhfhibRfeF20vSyD6kJssXE45Llw8TxEK\nQ673tBgKxZPKHKdsJtcgpS+uIvLew7gLX4MF+bXrObM9yId3D4cJ+GS0AKSTwYJQ\nqxrmdKaLRHXytAfszWCda4GlLalo3nllcbcPollgLscUj5L9IJjCOLrRe4awnAEg\njv066xfDK3kj0ioMmJ2dv6ziThguh5FFII2mXsW5iNRvBrofiZJdHNfpu0BTTuRY\nOsHpYTr1nOl/VDFZ/+qFSG2u1ZTTaELu0y62ZkERt1AhsgenQFUJm6Nc0uRRFxQz\nC9mjS2LYGmhreeHq/5NSvqDSQMSDS3cRXsFPRlU0vXHc66zlNLiyYRxnf/f9uma+\nQGR663PJikm8Nx2iJqhtowKWiIDt63BF7BIl0qIM9J9iCSlRvIQ7A/UQZFCjcLHV\n35bjIEkW9dZN8WA/sj4YbC0Jq5222sNpAqNE1Yg0pkfJt/vOnM8JdLujLb/d93g4\nBpCaedR/N+/SiDTgebAQpRBlQhRcPqK326fMqtGiqwGQRRcrdgmYmGTB+ObD1iGo\nz6oH0Jfk0Qolvo7PAjl/jBPiXSgchh6o3elvuAP3yuPJ1Ugl0UqnIckdG80rZ3Wy\n/ZI3s4SGhU4QLp8d/CI+IBj5hpmpy6PRFrfVgQfg6cg=\n=ELGL\n-----END PGP SIGNATURE-----", "payload": "tree 99239ca50303ae573f89f45f8c9896400da0293e\nparent 4ef7238b3e6b45596a32eb669a07d85d83ff0f1c\nauthor Philipp Hansch <dev@phansch.net> 1522589485 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1522589485 +0200\n\nImprove CONTRIBUTING.md\n\n* Incremental compilation is on by default\n* Restructured the label overview to go from easy to more difficult labels.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872db029cf8e85ec130af0ba9bf851ee347c3b14", "html_url": "https://github.com/rust-lang/rust/commit/872db029cf8e85ec130af0ba9bf851ee347c3b14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872db029cf8e85ec130af0ba9bf851ee347c3b14/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c", "html_url": "https://github.com/rust-lang/rust/commit/4ef7238b3e6b45596a32eb669a07d85d83ff0f1c"}], "stats": {"total": 47, "additions": 23, "deletions": 24}, "files": [{"sha": "ebdb88a3ba9d60d22ce55d4fa1b71ceeda234716", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 23, "deletions": 24, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/872db029cf8e85ec130af0ba9bf851ee347c3b14/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/872db029cf8e85ec130af0ba9bf851ee347c3b14/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=872db029cf8e85ec130af0ba9bf851ee347c3b14", "patch": "@@ -15,41 +15,41 @@ High level approach:\n \n All issues on Clippy are mentored, if you want help with a bug just ask @Manishearth, @llogiq, @mcarton or @oli-obk.\n \n-Some issues are easier than others. The [good first issue](https://github.com/rust-lang-nursery/rust-clippy/labels/good%20first%20issue)\n+Some issues are easier than others. The [`good first issue`](https://github.com/rust-lang-nursery/rust-clippy/labels/good%20first%20issue)\n label can be used to find the easy issues. If you want to work on an issue, please leave a comment\n so that we can assign it to you!\n \n-Issues marked [T-AST](https://github.com/rust-lang-nursery/rust-clippy/labels/T-AST) involve simple\n+Issues marked [`T-AST`](https://github.com/rust-lang-nursery/rust-clippy/labels/T-AST) involve simple\n matching of the syntax tree structure, and are generally easier than\n-[T-middle](https://github.com/rust-lang-nursery/rust-clippy/labels/T-middle) issues, which involve types\n+[`T-middle`](https://github.com/rust-lang-nursery/rust-clippy/labels/T-middle) issues, which involve types\n and resolved paths.\n \n-Issues marked [E-medium](https://github.com/rust-lang-nursery/rust-clippy/labels/E-medium) are generally\n-pretty easy too, though it's recommended you work on an E-easy issue first. They are mostly classified\n-as `E-medium`, since they might be somewhat involved code wise, but not difficult per-se.\n-\n-[Llogiq's blog post on lints](https://llogiq.github.io/2015/06/04/workflows.html) is a nice primer\n-to lint-writing, though it does get into advanced stuff. Most lints consist of an implementation of\n-`LintPass` with one or more of its default methods overridden. See the existing lints for examples\n-of this.\n-\n-T-AST issues will generally need you to match against a predefined syntax structure. To figure out\n+[`T-AST`](https://github.com/rust-lang-nursery/rust-clippy/labels/T-AST) issues will generally need you to match against a predefined syntax structure. To figure out\n how this syntax structure is encoded in the AST, it is recommended to run `rustc -Z ast-json` on an\n example of the structure and compare with the\n [nodes in the AST docs](http://manishearth.github.io/rust-internals-docs/syntax/ast/). Usually\n the lint will end up to be a nested series of matches and ifs,\n [like so](https://github.com/rust-lang-nursery/rust-clippy/blob/de5ccdfab68a5e37689f3c950ed1532ba9d652a0/src/misc.rs#L34).\n \n-T-middle issues can be more involved and require verifying types. The\n+[`E-medium`](https://github.com/rust-lang-nursery/rust-clippy/labels/E-medium) issues are generally\n+pretty easy too, though it's recommended you work on an E-easy issue first. They are mostly classified\n+as `E-medium`, since they might be somewhat involved code wise, but not difficult per-se.\n+\n+[`T-middle`](https://github.com/rust-lang-nursery/rust-clippy/labels/T-middle) issues can\n+be more involved and require verifying types. The\n [`ty`](http://manishearth.github.io/rust-internals-docs/rustc/ty) module contains a\n lot of methods that are useful, though one of the most useful would be `expr_ty` (gives the type of\n an AST expression). `match_def_path()` in Clippy's `utils` module can also be useful.\n \n ### Writing code\n \n-Compiling clippy can take almost a minute or more depending on your machine.\n-You can set the environment flag `CARGO_INCREMENTAL=1` to cut down that time to\n-almost a third on average, depending on the influence your change has.\n+Compiling clippy from scratch can take almost a minute or more depending on your machine.\n+However, since Rust 1.24.0 incremental compilation is enabled by default and compile times for small changes should be quick.\n+\n+[Llogiq's blog post on lints](https://llogiq.github.io/2015/06/04/workflows.html) is a nice primer\n+to lint-writing, though it does get into advanced stuff. Most lints consist of an implementation of\n+`LintPass` with one or more of its default methods overridden. See the existing lints for examples\n+of this.\n \n Please document your lint with a doc comment akin to the following:\n \n@@ -61,8 +61,13 @@ Please document your lint with a doc comment akin to the following:\n /// **Known problems:** None. (Or describe where it could go wrong.)\n ///\n /// **Example:**\n+///\n /// ```rust\n-/// Insert a short example if you have one.\n+/// // Bad\n+/// Insert a short example of code that triggers the lint\n+///\n+/// // Good\n+/// Insert a short example of improved code that doesn't trigger the lint\n /// ```\n ```\n \n@@ -80,12 +85,6 @@ If you don't want to wait for all tests to finish, you can also execute a single\n TESTNAME=ui/empty_line_after_outer_attr cargo test --test compile-test\n ```\n \n-And you can also combine this with `CARGO_INCREMENTAL`:\n-\n-```bash\n-CARGO_INCREMENTAL=1 TESTNAME=ui/doc cargo test --test compile-test\n-```\n-\n ### Testing manually\n \n Manually testing against an example file is useful if you have added some"}]}