{"sha": "114593d638c55f1754d675a6f2ff38a973a0d8ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNDU5M2Q2MzhjNTVmMTc1NGQ2NzVhNmYyZmYzOGE5NzNhMGQ4YWU=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-02-02T09:37:40Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-02-12T08:55:30Z"}, "message": "Make the prema-unstable char::escape_debug_ext method crate-private", "tree": {"sha": "4bab4ba59b506017a22c831895e42194ee95cf11", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bab4ba59b506017a22c831895e42194ee95cf11"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/114593d638c55f1754d675a6f2ff38a973a0d8ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/114593d638c55f1754d675a6f2ff38a973a0d8ae", "html_url": "https://github.com/rust-lang/rust/commit/114593d638c55f1754d675a6f2ff38a973a0d8ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/114593d638c55f1754d675a6f2ff38a973a0d8ae/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92cce78d066676f49524c07f72c7cdbf49cc0de8", "url": "https://api.github.com/repos/rust-lang/rust/commits/92cce78d066676f49524c07f72c7cdbf49cc0de8", "html_url": "https://github.com/rust-lang/rust/commit/92cce78d066676f49524c07f72c7cdbf49cc0de8"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "3c600d9ad4347d12341e290673cdd832251b7b06", "filename": "src/libcore/char/methods.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/114593d638c55f1754d675a6f2ff38a973a0d8ae/src%2Flibcore%2Fchar%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/114593d638c55f1754d675a6f2ff38a973a0d8ae/src%2Flibcore%2Fchar%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar%2Fmethods.rs?ref=114593d638c55f1754d675a6f2ff38a973a0d8ae", "patch": "@@ -189,10 +189,8 @@ impl char {\n     /// An extended version of `escape_debug` that optionally permits escaping\n     /// Extended Grapheme codepoints. This allows us to format characters like\n     /// nonspacing marks better when they're at the start of a string.\n-    #[doc(hidden)]\n-    #[unstable(feature = \"str_internals\", issue = \"0\")]\n     #[inline]\n-    pub fn escape_debug_ext(self, escape_grapheme_extended: bool) -> EscapeDebug {\n+    pub(crate) fn escape_debug_ext(self, escape_grapheme_extended: bool) -> EscapeDebug {\n         let init_state = match self {\n             '\\t' => EscapeDefaultState::Backslash('t'),\n             '\\r' => EscapeDefaultState::Backslash('r'),"}]}