{"sha": "b0a9acd783aec3449f5d8d772bc1bd4e59276cc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwYTlhY2Q3ODNhZWMzNDQ5ZjVkOGQ3NzJiYzFiZDRlNTkyNzZjYzg=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-06-22T06:02:26Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-08-13T13:37:09Z"}, "message": "Parse `!` as TyEmpty (except in fn return type)", "tree": {"sha": "0f04999bb837aabc015e3724a92939508328b4e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f04999bb837aabc015e3724a92939508328b4e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0a9acd783aec3449f5d8d772bc1bd4e59276cc8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0a9acd783aec3449f5d8d772bc1bd4e59276cc8", "html_url": "https://github.com/rust-lang/rust/commit/b0a9acd783aec3449f5d8d772bc1bd4e59276cc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0a9acd783aec3449f5d8d772bc1bd4e59276cc8/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba7330c1cc50e210f8e48c8c8a38c794caa087e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba7330c1cc50e210f8e48c8c8a38c794caa087e0", "html_url": "https://github.com/rust-lang/rust/commit/ba7330c1cc50e210f8e48c8c8a38c794caa087e0"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "e3803591295af91869b6936122704d89cf0c76fa", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b0a9acd783aec3449f5d8d772bc1bd4e59276cc8/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0a9acd783aec3449f5d8d772bc1bd4e59276cc8/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b0a9acd783aec3449f5d8d772bc1bd4e59276cc8", "patch": "@@ -1399,6 +1399,8 @@ impl<'a> Parser<'a> {\n             } else {\n                 TyKind::Tup(ts)\n             }\n+        } else if self.eat(&token::Not) {\n+            TyKind::Empty\n         } else if self.check(&token::BinOp(token::Star)) {\n             // STAR POINTER (bare pointer?)\n             self.bump();"}]}