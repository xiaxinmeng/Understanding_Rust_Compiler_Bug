{"sha": "0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhOGQ0ZGI0ZDhmZjcwZDUwZDkyOTc0ZjNiMzRmYWRhNTFjYzhkY2Y=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-11T07:23:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-11T07:23:56Z"}, "message": "Rollup merge of #75353 - estebank:tiny, r=jyn514\n\nTiny cleanup, remove unnecessary `unwrap`\n\nRemove unnecessary `unwrap`.", "tree": {"sha": "1bdf510a7c82e91d2cbe8256382c2d4023c6d7f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bdf510a7c82e91d2cbe8256382c2d4023c6d7f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfMkeMCRBK7hj4Ov3rIwAAdHIIAK8/F4c6nM24q5WVLZvyWtYT\n/JaOEApwidrjt87rUEct7NyWuTz296IPc3Sa+7xy1JKmSUD6WfW/KZpK9M0L1WhY\nWmspS0hJ6uh5rgo47bmIpAIcoXwXj1RTsfJOtwgfETVrzxF+nU44tRaLQWgNz+nM\nuuK+1Ykp3VRHyqttDPlilAbocxkp6ErzOk507g99drCAZNkUM3TJdf0IkjVPU3j1\nREVTFBz0p9NkUWdHuodMA+eaPRKZOjJaqrvztj9cMEqaVkUnFYPHf06TnTxCLrla\nCDi71zqt3NA80vlMLDFr28Nxilr/JbsE01DoIybflTtjpgNkj0mbyOtr3QPMGK8=\n=Vb+y\n-----END PGP SIGNATURE-----\n", "payload": "tree 1bdf510a7c82e91d2cbe8256382c2d4023c6d7f1\nparent e51a839030931638d8cb3e2b573ed812602d297d\nparent 7e0180906b0fe738596bff512c96c3f36afaf6b7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1597130636 +0900\ncommitter GitHub <noreply@github.com> 1597130636 +0900\n\nRollup merge of #75353 - estebank:tiny, r=jyn514\n\nTiny cleanup, remove unnecessary `unwrap`\n\nRemove unnecessary `unwrap`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf", "html_url": "https://github.com/rust-lang/rust/commit/0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e51a839030931638d8cb3e2b573ed812602d297d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e51a839030931638d8cb3e2b573ed812602d297d", "html_url": "https://github.com/rust-lang/rust/commit/e51a839030931638d8cb3e2b573ed812602d297d"}, {"sha": "7e0180906b0fe738596bff512c96c3f36afaf6b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0180906b0fe738596bff512c96c3f36afaf6b7", "html_url": "https://github.com/rust-lang/rust/commit/7e0180906b0fe738596bff512c96c3f36afaf6b7"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "c57c0e51941854c0cdc5e5ceda2da66241295c1a", "filename": "src/librustc_resolve/late/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flate%2Fdiagnostics.rs?ref=0a8d4db4d8ff70d50d92974f3b34fada51cc8dcf", "patch": "@@ -392,15 +392,15 @@ impl<'a> LateResolutionVisitor<'a, '_, '_> {\n     /// return the span of whole call and the span for all arguments expect the first one (`self`).\n     fn call_has_self_arg(&self, source: PathSource<'_>) -> Option<(Span, Option<Span>)> {\n         let mut has_self_arg = None;\n-        if let PathSource::Expr(parent) = source {\n-            match &parent?.kind {\n+        if let PathSource::Expr(Some(parent)) = source {\n+            match &parent.kind {\n                 ExprKind::Call(_, args) if !args.is_empty() => {\n                     let mut expr_kind = &args[0].kind;\n                     loop {\n                         match expr_kind {\n                             ExprKind::Path(_, arg_name) if arg_name.segments.len() == 1 => {\n                                 if arg_name.segments[0].ident.name == kw::SelfLower {\n-                                    let call_span = parent.unwrap().span;\n+                                    let call_span = parent.span;\n                                     let tail_args_span = if args.len() > 1 {\n                                         Some(Span::new(\n                                             args[1].span.lo(),"}]}