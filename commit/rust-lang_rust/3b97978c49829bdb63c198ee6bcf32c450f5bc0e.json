{"sha": "3b97978c49829bdb63c198ee6bcf32c450f5bc0e", "node_id": "C_kwDOAAsO6NoAKDNiOTc5NzhjNDk4MjliZGI2M2MxOThlZTZiY2YzMmM0NTBmNWJjMGU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-28T06:30:41Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-04-28T19:17:18Z"}, "message": "fix: Fix proc-macro-srv path config not working", "tree": {"sha": "d532a0571db1dcda6ae5a7941427a1ff0d1d691e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d532a0571db1dcda6ae5a7941427a1ff0d1d691e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b97978c49829bdb63c198ee6bcf32c450f5bc0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b97978c49829bdb63c198ee6bcf32c450f5bc0e", "html_url": "https://github.com/rust-lang/rust/commit/3b97978c49829bdb63c198ee6bcf32c450f5bc0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b97978c49829bdb63c198ee6bcf32c450f5bc0e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "237ffa3997250b8569ced477a5072310eb48c847", "url": "https://api.github.com/repos/rust-lang/rust/commits/237ffa3997250b8569ced477a5072310eb48c847", "html_url": "https://github.com/rust-lang/rust/commit/237ffa3997250b8569ced477a5072310eb48c847"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "c24bdab78a9cce19d9f468e03bfd878f6bb54988", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 41, "deletions": 6, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/3b97978c49829bdb63c198ee6bcf32c450f5bc0e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b97978c49829bdb63c198ee6bcf32c450f5bc0e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=3b97978c49829bdb63c198ee6bcf32c450f5bc0e", "patch": "@@ -1102,12 +1102,8 @@ impl Config {\n     }\n \n     pub fn proc_macro_srv(&self) -> Option<AbsPathBuf> {\n-        self.data\n-            .procMacro_server\n-            .clone()\n-            .map(AbsPathBuf::try_from)?\n-            .ok()\n-            .map(|path| self.root_path.join(path))\n+        let path = self.data.procMacro_server.clone()?;\n+        Some(AbsPathBuf::try_from(path).unwrap_or_else(|path| self.root_path.join(&path)))\n     }\n \n     pub fn dummy_replacements(&self) -> &FxHashMap<Box<str>, Box<[Box<str>]>> {\n@@ -2424,4 +2420,43 @@ mod tests {\n     fn remove_ws(text: &str) -> String {\n         text.replace(char::is_whitespace, \"\")\n     }\n+\n+    #[test]\n+    fn proc_macro_srv_null() {\n+        let mut config =\n+            Config::new(AbsPathBuf::try_from(project_root()).unwrap(), Default::default(), vec![]);\n+        config\n+            .update(serde_json::json!({\n+                \"procMacro_server\": null,\n+            }))\n+            .unwrap();\n+        assert_eq!(config.proc_macro_srv(), None);\n+    }\n+\n+    #[test]\n+    fn proc_macro_srv_abs() {\n+        let mut config =\n+            Config::new(AbsPathBuf::try_from(project_root()).unwrap(), Default::default(), vec![]);\n+        config\n+            .update(serde_json::json!({\n+                \"procMacro\": {\"server\": project_root().display().to_string()}\n+            }))\n+            .unwrap();\n+        assert_eq!(config.proc_macro_srv(), Some(AbsPathBuf::try_from(project_root()).unwrap()));\n+    }\n+\n+    #[test]\n+    fn proc_macro_srv_rel() {\n+        let mut config =\n+            Config::new(AbsPathBuf::try_from(project_root()).unwrap(), Default::default(), vec![]);\n+        config\n+            .update(serde_json::json!({\n+                \"procMacro\": {\"server\": \"./server\"}\n+            }))\n+            .unwrap();\n+        assert_eq!(\n+            config.proc_macro_srv(),\n+            Some(AbsPathBuf::try_from(project_root().join(\"./server\")).unwrap())\n+        );\n+    }\n }"}, {"sha": "87ec040d7b8f082f877e68b56276524c0de11c74", "filename": "crates/rust-analyzer/src/reload.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3b97978c49829bdb63c198ee6bcf32c450f5bc0e/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b97978c49829bdb63c198ee6bcf32c450f5bc0e/crates%2Frust-analyzer%2Fsrc%2Freload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freload.rs?ref=3b97978c49829bdb63c198ee6bcf32c450f5bc0e", "patch": "@@ -426,6 +426,11 @@ impl GlobalState {\n \n                         tracing::info!(\"Using proc-macro server at {}\", path.display(),);\n                         ProcMacroServer::spawn(path.clone()).map_err(|err| {\n+                            tracing::error!(\n+                                \"Failed to run proc-macro server from path {}, error: {:?}\",\n+                                path.display(),\n+                                err\n+                            );\n                             anyhow::anyhow!(\n                                 \"Failed to run proc-macro server from path {}, error: {:?}\",\n                                 path.display(),"}]}