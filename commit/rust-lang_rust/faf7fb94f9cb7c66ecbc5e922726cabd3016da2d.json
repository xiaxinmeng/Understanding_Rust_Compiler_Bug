{"sha": "faf7fb94f9cb7c66ecbc5e922726cabd3016da2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZjdmYjk0ZjljYjdjNjZlY2JjNWU5MjI3MjZjYWJkMzAxNmRhMmQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-08-12T11:25:08Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-12T11:25:08Z"}, "message": "Rollup merge of #87941 - GuillaumeGomez:fix-rustdoc-js-tool, r=notriddle\n\nFix/improve rustdoc-js tool\n\nThis tool is run when testing `src/test/rustdoc-js*`.\n\nr? `@notriddle`", "tree": {"sha": "d9ff7f4bf2d42280cd28a391bf1a2973824205d2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9ff7f4bf2d42280cd28a391bf1a2973824205d2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faf7fb94f9cb7c66ecbc5e922726cabd3016da2d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhFQUVCRBK7hj4Ov3rIwAAVXAIAKz2ihDhBENMDAOodSVJJUIP\ncIqFptnOySQwGTQYT7YDaukQ6D2KfltyWPFsStG73CBaLSrhezIZ3mlVLXJflSQa\nmLzt9wMhS7Zrvzq90D7x1W5IsFUgAmkSpBTGSH8j438PH2PKX/kw+gPLalYKlcMg\nZahM2vMjaSqlsZnvQbFoL9oJmWzLGtqwWMox6cwONTREfXGFvsYxOx81oeIGtPqf\n1olQyBXZn0DrDt0EJvUiOBO1K/Va/+PkAg0PtppjMdSD3TMpIgC8OvF0Y/pWyjtX\nUfoxSdk4yw4pJfSGCeQ2QYi3THESDwaeESsjQ8sg6D2LupSNAPeEzglaDh2mksg=\n=H5Zb\n-----END PGP SIGNATURE-----\n", "payload": "tree d9ff7f4bf2d42280cd28a391bf1a2973824205d2\nparent 3d733f6785efbda9fa6196c4077df5b31273f1b9\nparent cc319f88a7481e951064f87114584d7daebb0d5f\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1628767508 +0200\ncommitter GitHub <noreply@github.com> 1628767508 +0200\n\nRollup merge of #87941 - GuillaumeGomez:fix-rustdoc-js-tool, r=notriddle\n\nFix/improve rustdoc-js tool\n\nThis tool is run when testing `src/test/rustdoc-js*`.\n\nr? `@notriddle`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faf7fb94f9cb7c66ecbc5e922726cabd3016da2d", "html_url": "https://github.com/rust-lang/rust/commit/faf7fb94f9cb7c66ecbc5e922726cabd3016da2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faf7fb94f9cb7c66ecbc5e922726cabd3016da2d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d733f6785efbda9fa6196c4077df5b31273f1b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d733f6785efbda9fa6196c4077df5b31273f1b9", "html_url": "https://github.com/rust-lang/rust/commit/3d733f6785efbda9fa6196c4077df5b31273f1b9"}, {"sha": "cc319f88a7481e951064f87114584d7daebb0d5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc319f88a7481e951064f87114584d7daebb0d5f", "html_url": "https://github.com/rust-lang/rust/commit/cc319f88a7481e951064f87114584d7daebb0d5f"}], "stats": {"total": 33, "additions": 19, "deletions": 14}, "files": [{"sha": "bb9cd00f3f5829196df0a2a93d12274d82702f8a", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/faf7fb94f9cb7c66ecbc5e922726cabd3016da2d/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/faf7fb94f9cb7c66ecbc5e922726cabd3016da2d/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=faf7fb94f9cb7c66ecbc5e922726cabd3016da2d", "patch": "@@ -20,15 +20,17 @@ function getNextStep(content, pos, stop) {\n // will blow up. Template strings are not tested and might also be\n // broken.\n function extractFunction(content, functionName) {\n-    var indent = 0;\n+    var level = 0;\n     var splitter = \"function \" + functionName + \"(\";\n+    var stop;\n+    var pos, start;\n \n     while (true) {\n-        var start = content.indexOf(splitter);\n+        start = content.indexOf(splitter);\n         if (start === -1) {\n             break;\n         }\n-        var pos = start;\n+        pos = start;\n         while (pos < content.length && content[pos] !== ')') {\n             pos += 1;\n         }\n@@ -44,30 +46,33 @@ function extractFunction(content, functionName) {\n         }\n         while (pos < content.length) {\n             // Eat single-line comments\n-            if (content[pos] === '/' && pos > 0 && content[pos-1] === '/') {\n+            if (content[pos] === '/' && pos > 0 && content[pos - 1] === '/') {\n                 do {\n                     pos += 1;\n                 } while (pos < content.length && content[pos] !== '\\n');\n \n+            // Eat multiline comment.\n+            } else if (content[pos] === '*' && pos > 0 && content[pos - 1] === '/') {\n+                do {\n+                    pos += 1;\n+                } while (pos < content.length && content[pos] !== '/' && content[pos - 1] !== '*');\n+\n             // Eat quoted strings\n             } else if (content[pos] === '\"' || content[pos] === \"'\" || content[pos] === \"`\") {\n-                var stop = content[pos];\n-                var is_escaped = false;\n+                stop = content[pos];\n                 do {\n                     if (content[pos] === '\\\\') {\n-                        pos += 2;\n-                    } else {\n                         pos += 1;\n                     }\n-                } while (pos < content.length &&\n-                         (content[pos] !== stop || content[pos - 1] === '\\\\'));\n+                    pos += 1;\n+                } while (pos < content.length && content[pos] !== stop);\n \n-            // Otherwise, check for indent\n+            // Otherwise, check for block level.\n             } else if (content[pos] === '{') {\n-                indent += 1;\n+                level += 1;\n             } else if (content[pos] === '}') {\n-                indent -= 1;\n-                if (indent === 0) {\n+                level -= 1;\n+                if (level === 0) {\n                     return content.slice(start, pos + 1);\n                 }\n             }"}]}