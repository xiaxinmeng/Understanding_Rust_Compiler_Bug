{"sha": "a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2", "node_id": "C_kwDOAAsO6NoAKGE0ZjA4YzExN2Y3YmI1ZWIzZDc3YWE1ZTk2YjMwNWE2ZDE4ZmZlYzI", "commit": {"author": {"name": "crauzer", "email": "filip.quitko@gmail.com", "date": "2021-10-06T21:24:47Z"}, "committer": {"name": "crauzer", "email": "filip.quitko@gmail.com", "date": "2021-10-06T21:24:47Z"}, "message": "Fix stdx::to_snake_case", "tree": {"sha": "837e035c7c44d8f47f2f3bbc2ffa9dda8cc07929", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/837e035c7c44d8f47f2f3bbc2ffa9dda8cc07929"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2", "html_url": "https://github.com/rust-lang/rust/commit/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2/comments", "author": {"login": "Crauzer", "id": 18646077, "node_id": "MDQ6VXNlcjE4NjQ2MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/18646077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Crauzer", "html_url": "https://github.com/Crauzer", "followers_url": "https://api.github.com/users/Crauzer/followers", "following_url": "https://api.github.com/users/Crauzer/following{/other_user}", "gists_url": "https://api.github.com/users/Crauzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Crauzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Crauzer/subscriptions", "organizations_url": "https://api.github.com/users/Crauzer/orgs", "repos_url": "https://api.github.com/users/Crauzer/repos", "events_url": "https://api.github.com/users/Crauzer/events{/privacy}", "received_events_url": "https://api.github.com/users/Crauzer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Crauzer", "id": 18646077, "node_id": "MDQ6VXNlcjE4NjQ2MDc3", "avatar_url": "https://avatars.githubusercontent.com/u/18646077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Crauzer", "html_url": "https://github.com/Crauzer", "followers_url": "https://api.github.com/users/Crauzer/followers", "following_url": "https://api.github.com/users/Crauzer/following{/other_user}", "gists_url": "https://api.github.com/users/Crauzer/gists{/gist_id}", "starred_url": "https://api.github.com/users/Crauzer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Crauzer/subscriptions", "organizations_url": "https://api.github.com/users/Crauzer/orgs", "repos_url": "https://api.github.com/users/Crauzer/repos", "events_url": "https://api.github.com/users/Crauzer/events{/privacy}", "received_events_url": "https://api.github.com/users/Crauzer/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1161fa45af0444166df8382ae4b0c9c6407e585b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1161fa45af0444166df8382ae4b0c9c6407e585b", "html_url": "https://github.com/rust-lang/rust/commit/1161fa45af0444166df8382ae4b0c9c6407e585b"}], "stats": {"total": 50, "additions": 38, "deletions": 12}, "files": [{"sha": "88d607194f756995aca3986ed65836e9ea985d28", "filename": "crates/hir_ty/src/diagnostics/decl_check/case_conv.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdiagnostics%2Fdecl_check%2Fcase_conv.rs?ref=a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2", "patch": "@@ -161,6 +161,7 @@ mod tests {\n         check(to_lower_snake_case, \"lowerCamelCase\", expect![[\"lower_camel_case\"]]);\n         check(to_lower_snake_case, \"a\", expect![[\"\"]]);\n         check(to_lower_snake_case, \"abc\", expect![[\"\"]]);\n+        check(to_lower_snake_case, \"foo__bar\", expect![[\"foo_bar\"]]);\n     }\n \n     #[test]\n@@ -192,5 +193,7 @@ mod tests {\n         check(to_upper_snake_case, \"A\", expect![[\"\"]]);\n         check(to_upper_snake_case, \"ABC\", expect![[\"\"]]);\n         check(to_upper_snake_case, \"X86_64\", expect![[\"\"]]);\n+        check(to_upper_snake_case, \"FOO_BAr\", expect![[\"FOO_BAR\"]]);\n+        check(to_upper_snake_case, \"FOO__BAR\", expect![[\"FOO_BAR\"]]);\n     }\n }"}, {"sha": "ee23f579345cf413ad34ea9da6ea9b499c0b5bb7", "filename": "crates/stdx/src/lib.rs", "status": "modified", "additions": 35, "deletions": 12, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2/crates%2Fstdx%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2/crates%2Fstdx%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fstdx%2Fsrc%2Flib.rs?ref=a4f08c117f7bb5eb3d77aa5e96b305a6d18ffec2", "patch": "@@ -1,4 +1,5 @@\n //! Missing batteries for standard libraries.\n+use std::iter;\n use std::{cmp::Ordering, ops, time::Instant};\n \n mod macros;\n@@ -37,22 +38,44 @@ pub fn to_lower_snake_case(s: &str) -> String {\n pub fn to_upper_snake_case(s: &str) -> String {\n     to_snake_case(s, char::to_ascii_uppercase)\n }\n-fn to_snake_case<F: Fn(&char) -> char>(s: &str, change_case: F) -> String {\n-    let mut buf = String::with_capacity(s.len());\n-    let mut prev = false;\n-    for c in s.chars() {\n-        // `&& prev` is required to not insert `_` before the first symbol.\n-        if c.is_ascii_uppercase() && prev {\n-            // This check is required to not translate `Weird_Case` into `weird__case`.\n-            if !buf.ends_with('_') {\n-                buf.push('_');\n+\n+// Code partially taken from rust/compiler/rustc_lint/src/nonstandard_style.rs\n+// commit: 9626f2b\n+fn to_snake_case<F: Fn(&char) -> char>(mut s: &str, change_case: F) -> String {\n+    let mut words = vec![];\n+\n+    // Preserve leading underscores\n+    s = s.trim_start_matches(|c: char| {\n+        if c == '_' {\n+            words.push(String::new());\n+            true\n+        } else {\n+            false\n+        }\n+    });\n+\n+    for s in s.split('_') {\n+        let mut last_upper = false;\n+        let mut buf = String::new();\n+\n+        if s.is_empty() {\n+            continue;\n+        }\n+\n+        for ch in s.chars() {\n+            if !buf.is_empty() && buf != \"'\" && ch.is_uppercase() && !last_upper {\n+                words.push(buf);\n+                buf = String::new();\n             }\n+\n+            last_upper = ch.is_uppercase();\n+            buf.extend(iter::once(change_case(&ch)));\n         }\n-        prev = true;\n \n-        buf.push(change_case(&c));\n+        words.push(buf);\n     }\n-    buf\n+\n+    words.join(\"_\")\n }\n \n pub fn replace(buf: &mut String, from: char, to: &str) {"}]}