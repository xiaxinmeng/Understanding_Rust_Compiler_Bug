{"sha": "3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZTFkOWM1MjQ0NWNiNWNiYjViZDk0MjRlYzFmOGQ2Y2M2NWEyOWY=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-12-10T21:00:10Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-12-14T20:26:40Z"}, "message": "Do the same things for fulldeps tests", "tree": {"sha": "0aee3f1951d6ade117cf4c59ef0db61621cd0ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0aee3f1951d6ade117cf4c59ef0db61621cd0ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "html_url": "https://github.com/rust-lang/rust/commit/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f5b201affc48dcf0b637caa9596c11d83e1db94", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f5b201affc48dcf0b637caa9596c11d83e1db94", "html_url": "https://github.com/rust-lang/rust/commit/1f5b201affc48dcf0b637caa9596c11d83e1db94"}], "stats": {"total": 132, "additions": 126, "deletions": 6}, "files": [{"sha": "21b8057431b869220d84dc183e8bd8ea27825514", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-attrs.rs", "status": "renamed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.rs?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -14,14 +14,11 @@\n #![feature(plugin)]\n #![plugin(lint_plugin_test)]\n #![forbid(test_lint)]\n-//~^ NOTE lint level defined here\n-//~| NOTE `forbid` level set here\n \n fn lintme() { } //~ ERROR item is named 'lintme'\n \n #[allow(test_lint)]\n //~^ ERROR allow(test_lint) overruled by outer forbid(test_lint)\n-//~| NOTE overruled by previous forbid\n pub fn main() {\n     lintme();\n }", "previous_filename": "src/test/compile-fail-fulldeps/lint-plugin-forbid-attrs.rs"}, {"sha": "459be9db578aff5dbcf03294871f4822ef92dce1", "filename": "src/test/ui-fulldeps/lint-plugin-forbid-attrs.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Flint-plugin-forbid-attrs.stderr?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -0,0 +1,23 @@\n+error: item is named 'lintme'\n+  --> $DIR/lint-plugin-forbid-attrs.rs:18:1\n+   |\n+18 | fn lintme() { } //~ ERROR item is named 'lintme'\n+   | ^^^^^^^^^^^^^^^\n+   |\n+note: lint level defined here\n+  --> $DIR/lint-plugin-forbid-attrs.rs:16:11\n+   |\n+16 | #![forbid(test_lint)]\n+   |           ^^^^^^^^^\n+\n+error[E0453]: allow(test_lint) overruled by outer forbid(test_lint)\n+  --> $DIR/lint-plugin-forbid-attrs.rs:20:9\n+   |\n+16 | #![forbid(test_lint)]\n+   |           --------- `forbid` level set here\n+...\n+20 | #[allow(test_lint)]\n+   |         ^^^^^^^^^ overruled by previous forbid\n+\n+error: aborting due to 2 previous errors\n+"}, {"sha": "3274f0324e1cbd25b10c52a5e0fb6549687c4e01", "filename": "src/test/ui-fulldeps/proc-macro/auxiliary/derive-panic.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-panic.rs?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "previous_filename": "src/test/compile-fail-fulldeps/proc-macro/auxiliary/derive-panic.rs"}, {"sha": "328f398efd5c6c9e6bd7640b1b678bb1198b7539", "filename": "src/test/ui-fulldeps/proc-macro/load-panic.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.rs?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -15,7 +15,6 @@ extern crate derive_panic;\n \n #[derive(A)]\n //~^ ERROR: proc-macro derive panicked\n-//~| HELP: message: nope!\n struct Foo;\n \n fn main() {}", "previous_filename": "src/test/compile-fail-fulldeps/proc-macro/load-panic.rs"}, {"sha": "1be1609d45b2b2ded2fadcc3ca8d55b5183836fc", "filename": "src/test/ui-fulldeps/proc-macro/load-panic.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fload-panic.stderr?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -0,0 +1,8 @@\n+error: proc-macro derive panicked\n+  --> $DIR/load-panic.rs:16:10\n+   |\n+16 | #[derive(A)]\n+   |          ^\n+   |\n+   = help: message: nope!\n+"}, {"sha": "f2ea6f778cd2628df6725555d467433a8b57a178", "filename": "src/test/ui-fulldeps/proc-macro/signature.rs", "status": "renamed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fsignature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fsignature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fsignature.rs?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -16,7 +16,5 @@ extern crate proc_macro;\n #[proc_macro_derive(A)]\n pub unsafe extern fn foo(a: i32, b: u32) -> u32 {\n     //~^ ERROR: mismatched types\n-    //~| NOTE: expected normal fn, found unsafe fn\n-    //~| NOTE: expected type `fn(proc_macro::TokenStream) -> proc_macro::TokenStream`\n     loop {}\n }", "previous_filename": "src/test/compile-fail-fulldeps/proc-macro/signature.rs"}, {"sha": "2beb0aac8626e89f8cbc9519e44c4db3dc5a9aad", "filename": "src/test/ui-fulldeps/proc-macro/signature.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fsignature.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fsignature.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fsignature.stderr?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -0,0 +1,14 @@\n+error[E0308]: mismatched types\n+  --> $DIR/signature.rs:17:1\n+   |\n+17 | / pub unsafe extern fn foo(a: i32, b: u32) -> u32 {\n+18 | |     //~^ ERROR: mismatched types\n+19 | |     loop {}\n+20 | | }\n+   | |_^ expected normal fn, found unsafe fn\n+   |\n+   = note: expected type `fn(proc_macro::TokenStream) -> proc_macro::TokenStream`\n+              found type `unsafe extern \"C\" fn(i32, u32) -> u32 {foo}`\n+\n+error: aborting due to previous error\n+"}, {"sha": "bfc6f923f9d2eb0b196ebd6d8c8b52fee321dfa1", "filename": "src/test/ui-fulldeps/update-all-references.sh", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fupdate-all-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fupdate-all-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fupdate-all-references.sh?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -0,0 +1,31 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# A script to update the references for all tests. The idea is that\n+# you do a run, which will generate files in the build directory\n+# containing the (normalized) actual output of the compiler. You then\n+# run this script, which will copy those files over. If you find\n+# yourself manually editing a foo.stderr file, you're doing it wrong.\n+#\n+# See all `update-references.sh`, if you just want to update a single test.\n+\n+if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" != \"\" ]]; then\n+    echo \"usage: $0 <build-directory>\"\n+    echo \"\"\n+    echo \"For example:\"\n+    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui\"\n+fi\n+\n+BUILD_DIR=$PWD/$1\n+MY_DIR=$(dirname $0)\n+cd $MY_DIR\n+find . -name '*.rs' | xargs ./update-references.sh $BUILD_DIR"}, {"sha": "b9ded7d1e951cefcda20b1f3c2be8d83167a1986", "filename": "src/test/ui-fulldeps/update-references.sh", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh", "raw_url": "https://github.com/rust-lang/rust/raw/3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fupdate-references.sh?ref=3fe1d9c52445cb5cbb5bd9424ec1f8d6cc65a29f", "patch": "@@ -0,0 +1,50 @@\n+#!/usr/bin/env bash\n+#\n+# Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# A script to update the references for particular tests. The idea is\n+# that you do a run, which will generate files in the build directory\n+# containing the (normalized) actual output of the compiler. This\n+# script will then copy that output and replace the \"expected output\"\n+# files. You can then commit the changes.\n+#\n+# If you find yourself manually editing a foo.stderr file, you're\n+# doing it wrong.\n+\n+if [[ \"$1\" == \"--help\" || \"$1\" == \"-h\" || \"$1\" == \"\" || \"$2\" == \"\" ]]; then\n+    echo \"usage: $0 <build-directory> <relative-path-to-rs-files>\"\n+    echo \"\"\n+    echo \"For example:\"\n+    echo \"   $0 ../../../build/x86_64-apple-darwin/test/ui *.rs */*.rs\"\n+fi\n+\n+MYDIR=$(dirname $0)\n+\n+BUILD_DIR=\"$1\"\n+shift\n+\n+while [[ \"$1\" != \"\" ]]; do\n+    STDERR_NAME=\"${1/%.rs/.stderr}\"\n+    STDOUT_NAME=\"${1/%.rs/.stdout}\"\n+    shift\n+    if [ -f $BUILD_DIR/$STDOUT_NAME ] && \\\n+           ! (diff $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME >& /dev/null); then\n+        echo updating $MYDIR/$STDOUT_NAME\n+        cp $BUILD_DIR/$STDOUT_NAME $MYDIR/$STDOUT_NAME\n+    fi\n+    if [ -f $BUILD_DIR/$STDERR_NAME ] && \\\n+           ! (diff $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME >& /dev/null); then\n+        echo updating $MYDIR/$STDERR_NAME\n+        cp $BUILD_DIR/$STDERR_NAME $MYDIR/$STDERR_NAME\n+    fi\n+done\n+\n+"}]}