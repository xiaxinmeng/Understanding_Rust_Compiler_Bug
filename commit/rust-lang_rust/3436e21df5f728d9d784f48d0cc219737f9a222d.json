{"sha": "3436e21df5f728d9d784f48d0cc219737f9a222d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0MzZlMjFkZjVmNzI4ZDlkNzg0ZjQ4ZDBjYzIxOTczN2Y5YTIyMmQ=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2020-12-23T21:36:23Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-01-16T23:40:47Z"}, "message": "Remove PredicateKind", "tree": {"sha": "1edea033bbc8ab5c1c57ddb2dce437ee087e356d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1edea033bbc8ab5c1c57ddb2dce437ee087e356d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3436e21df5f728d9d784f48d0cc219737f9a222d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3436e21df5f728d9d784f48d0cc219737f9a222d", "html_url": "https://github.com/rust-lang/rust/commit/3436e21df5f728d9d784f48d0cc219737f9a222d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3436e21df5f728d9d784f48d0cc219737f9a222d/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "38e293cf5d30a1609020c034d66e5aac3b844073", "url": "https://api.github.com/repos/rust-lang/rust/commits/38e293cf5d30a1609020c034d66e5aac3b844073", "html_url": "https://github.com/rust-lang/rust/commit/38e293cf5d30a1609020c034d66e5aac3b844073"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d2a3bd3921d277203f4695cc781544a259210951", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3436e21df5f728d9d784f48d0cc219737f9a222d/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3436e21df5f728d9d784f48d0cc219737f9a222d/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=3436e21df5f728d9d784f48d0cc219737f9a222d", "patch": "@@ -115,7 +115,7 @@ impl<'tcx> LateLintPass<'tcx> for NeedlessPassByValue {\n             .filter(|p| !p.is_global())\n             .filter_map(|obligation| {\n                 // Note that we do not want to deal with qualified predicates here.\n-                let ty::PredicateKind::ForAll(binder) = obligation.predicate.kind();\n+                let binder = obligation.predicate.kind();\n                 match binder.skip_binder() {\n                     ty::PredicateAtom::Trait(pred, _) if !binder.has_escaping_bound_vars() => {\n                         if pred.def_id() == sized_trait {"}]}