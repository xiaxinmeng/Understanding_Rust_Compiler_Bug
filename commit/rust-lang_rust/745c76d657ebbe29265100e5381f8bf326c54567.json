{"sha": "745c76d657ebbe29265100e5381f8bf326c54567", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0NWM3NmQ2NTdlYmJlMjkyNjUxMDBlNTM4MWY4YmYzMjZjNTQ1Njc=", "commit": {"author": {"name": "Alessandro Decina", "email": "alessandro.d@gmail.com", "date": "2019-07-15T23:47:08Z"}, "committer": {"name": "Alessandro Decina", "email": "alessandro.d@gmail.com", "date": "2019-07-15T23:47:08Z"}, "message": "Normalize the trait_ref", "tree": {"sha": "7f4dadea94654ac4cef081f8f09b0cf5bbde2fab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f4dadea94654ac4cef081f8f09b0cf5bbde2fab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/745c76d657ebbe29265100e5381f8bf326c54567", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/745c76d657ebbe29265100e5381f8bf326c54567", "html_url": "https://github.com/rust-lang/rust/commit/745c76d657ebbe29265100e5381f8bf326c54567", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/745c76d657ebbe29265100e5381f8bf326c54567/comments", "author": {"login": "alessandrod", "id": 62002, "node_id": "MDQ6VXNlcjYyMDAy", "avatar_url": "https://avatars.githubusercontent.com/u/62002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alessandrod", "html_url": "https://github.com/alessandrod", "followers_url": "https://api.github.com/users/alessandrod/followers", "following_url": "https://api.github.com/users/alessandrod/following{/other_user}", "gists_url": "https://api.github.com/users/alessandrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/alessandrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alessandrod/subscriptions", "organizations_url": "https://api.github.com/users/alessandrod/orgs", "repos_url": "https://api.github.com/users/alessandrod/repos", "events_url": "https://api.github.com/users/alessandrod/events{/privacy}", "received_events_url": "https://api.github.com/users/alessandrod/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alessandrod", "id": 62002, "node_id": "MDQ6VXNlcjYyMDAy", "avatar_url": "https://avatars.githubusercontent.com/u/62002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alessandrod", "html_url": "https://github.com/alessandrod", "followers_url": "https://api.github.com/users/alessandrod/followers", "following_url": "https://api.github.com/users/alessandrod/following{/other_user}", "gists_url": "https://api.github.com/users/alessandrod/gists{/gist_id}", "starred_url": "https://api.github.com/users/alessandrod/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alessandrod/subscriptions", "organizations_url": "https://api.github.com/users/alessandrod/orgs", "repos_url": "https://api.github.com/users/alessandrod/repos", "events_url": "https://api.github.com/users/alessandrod/events{/privacy}", "received_events_url": "https://api.github.com/users/alessandrod/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acfe99a98efc57133f9596a3df937ed886e83fbe", "url": "https://api.github.com/repos/rust-lang/rust/commits/acfe99a98efc57133f9596a3df937ed886e83fbe", "html_url": "https://github.com/rust-lang/rust/commit/acfe99a98efc57133f9596a3df937ed886e83fbe"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "ee0f9119544bf41f487cd50725ef7d643b27895e", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/745c76d657ebbe29265100e5381f8bf326c54567/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/745c76d657ebbe29265100e5381f8bf326c54567/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=745c76d657ebbe29265100e5381f8bf326c54567", "patch": "@@ -1143,6 +1143,11 @@ fn create_mono_items_for_default_impls<'tcx>(\n                    def_id_to_string(tcx, impl_def_id));\n \n             if let Some(trait_ref) = tcx.impl_trait_ref(impl_def_id) {\n+                let param_env = ty::ParamEnv::reveal_all();\n+                let trait_ref = tcx.normalize_erasing_regions(\n+                    param_env,\n+                    trait_ref,\n+                );\n                 let overridden_methods: FxHashSet<_> =\n                     impl_item_refs.iter()\n                                   .map(|iiref| iiref.ident.modern())\n@@ -1165,12 +1170,6 @@ fn create_mono_items_for_default_impls<'tcx>(\n                             }\n                         }\n                     });\n-\n-                    let param_env = ty::ParamEnv::reveal_all();\n-                    let substs = tcx.normalize_erasing_regions(\n-                        param_env,\n-                        substs,\n-                    );\n                     let instance = ty::Instance::resolve(tcx,\n                                                          param_env,\n                                                          method.def_id,"}]}