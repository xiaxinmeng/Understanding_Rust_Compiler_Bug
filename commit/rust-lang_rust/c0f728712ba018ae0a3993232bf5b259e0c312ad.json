{"sha": "c0f728712ba018ae0a3993232bf5b259e0c312ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZjcyODcxMmJhMDE4YWUwYTM5OTMyMzJiZjViMjU5ZTBjMzEyYWQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-18T23:59:34Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-19T18:40:16Z"}, "message": "Rewrite pre_postconditions to use walk instead of fold", "tree": {"sha": "6c223ab27d6b5703d4188e31b4a7faa41c7b0924", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6c223ab27d6b5703d4188e31b4a7faa41c7b0924"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0f728712ba018ae0a3993232bf5b259e0c312ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0f728712ba018ae0a3993232bf5b259e0c312ad", "html_url": "https://github.com/rust-lang/rust/commit/c0f728712ba018ae0a3993232bf5b259e0c312ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0f728712ba018ae0a3993232bf5b259e0c312ad/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2cd769e35898df0a84c797c610748a59034a9b93", "url": "https://api.github.com/repos/rust-lang/rust/commits/2cd769e35898df0a84c797c610748a59034a9b93", "html_url": "https://github.com/rust-lang/rust/commit/2cd769e35898df0a84c797c610748a59034a9b93"}], "stats": {"total": 22, "additions": 7, "deletions": 15}, "files": [{"sha": "9adbd55f4749b9f9d68536733d2f2a08f217dec0", "filename": "src/comp/middle/tstate/ck.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/c0f728712ba018ae0a3993232bf5b259e0c312ad/src%2Fcomp%2Fmiddle%2Ftstate%2Fck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f728712ba018ae0a3993232bf5b259e0c312ad/src%2Fcomp%2Fmiddle%2Ftstate%2Fck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fck.rs?ref=c0f728712ba018ae0a3993232bf5b259e0c312ad", "patch": "@@ -62,7 +62,7 @@ import bitvectors::promises;\n \n import annotate::annotate_crate;\n import collect_locals::mk_f_to_fn_info;\n-import pre_post_conditions::check_item_fn;\n+import pre_post_conditions::fn_pre_post;\n import states::find_pre_post_state_fn;\n \n fn check_states_expr(&fn_ctxt fcx, @expr e) -> () {\n@@ -199,19 +199,18 @@ fn check_crate(ty::node_type_table nt, ty::ctxt cx, @crate crate) -> @crate {\n     annotate_crate(ccx, *crate);\n \n     /* Compute the pre and postcondition for every subexpression */\n-    \n-    auto fld = new_identity_fold[crate_ctxt]();\n-    fld = @rec(fold_item_fn = bind check_item_fn(_,_,_,_,_,_,_) with *fld);\n-    auto with_pre_postconditions =\n-           fold_crate[crate_ctxt](ccx, fld, crate);\n+    auto do_pre_post = walk::default_visitor();\n+    do_pre_post = rec(visit_fn_pre = bind fn_pre_post(ccx, _, _, _)\n+                      with do_pre_post);\n+    walk::walk_crate(do_pre_post, *crate);\n     \n     auto fld1 = new_identity_fold[crate_ctxt]();\n \n     fld1 = @rec(fold_item_fn = bind check_item_fn_state(_,_,_,_,_,_,_),\n                 fold_obj     = bind check_obj_state(_,_,_,_)\n                 with *fld1);\n     \n-    ret fold_crate[crate_ctxt](ccx, fld1, with_pre_postconditions);\n+    ret fold_crate[crate_ctxt](ccx, fld1, crate);\n }\n \n //"}, {"sha": "ed52142f1ad7c09f4d14f04593a6157a8815fb96", "filename": "src/comp/middle/tstate/pre_post_conditions.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c0f728712ba018ae0a3993232bf5b259e0c312ad/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0f728712ba018ae0a3993232bf5b259e0c312ad/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftstate%2Fpre_post_conditions.rs?ref=c0f728712ba018ae0a3993232bf5b259e0c312ad", "patch": "@@ -679,18 +679,11 @@ fn find_pre_post_fn(&fn_ctxt fcx, &_fn f) -> () {\n     find_pre_post_block(fcx, f.body);\n }\n \n-fn check_item_fn(&crate_ctxt ccx, &span sp, &ident i, &_fn f,\n-                 &vec[ty_param] ty_params,\n-                 &def_id id, &ann a) -> @item {\n-    log(\"check_item_fn:\");\n-    log_fn(f, i, ty_params);\n-\n+fn fn_pre_post(crate_ctxt ccx, &_fn f, &ident i, &def_id id) -> () {\n     assert (ccx.fm.contains_key(id));\n     auto fcx = rec(enclosing=ccx.fm.get(id),\n                    id=id, name=i, ccx=ccx);\n     find_pre_post_fn(fcx, f);  \n-\n-    ret @respan(sp, item_fn(i, f, ty_params, id, a));\n }\n \n //"}]}