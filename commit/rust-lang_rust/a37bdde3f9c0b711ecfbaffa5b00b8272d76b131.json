{"sha": "a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzN2JkZGUzZjljMGI3MTFlY2ZiYWZmYTViMDBiODI3MmQ3NmIxMzE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-18T04:50:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-24T22:46:03Z"}, "message": "std::rt: Remove metrics for perf\n\nThese aren't used for anything at the moment and cause some TLS hits\non some perf-critical code paths. Will need to put better thought into\nit in the future.", "tree": {"sha": "6f6d5d93fdd6dbd4d4211845c629cd568d4d3c5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f6d5d93fdd6dbd4d4211845c629cd568d4d3c5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "html_url": "https://github.com/rust-lang/rust/commit/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0fff8b6549868b3355e3219e19db11ddf8e46c60", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fff8b6549868b3355e3219e19db11ddf8e46c60", "html_url": "https://github.com/rust-lang/rust/commit/0fff8b6549868b3355e3219e19db11ddf8e46c60"}], "stats": {"total": 115, "additions": 0, "deletions": 115}, "files": [{"sha": "bd83e2861567d25618088a75dd7aac66069d5821", "filename": "src/libstd/rt/comm.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/src%2Flibstd%2Frt%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/src%2Flibstd%2Frt%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fcomm.rs?ref=a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "patch": "@@ -144,16 +144,8 @@ impl<T> ChanOne<T> {\n             match oldstate {\n                 STATE_BOTH => {\n                     // Port is not waiting yet. Nothing to do\n-                    do Local::borrow::<Scheduler, ()> |sched| {\n-                        rtdebug!(\"non-rendezvous send\");\n-                        sched.metrics.non_rendezvous_sends += 1;\n-                    }\n                 }\n                 STATE_ONE => {\n-                    do Local::borrow::<Scheduler, ()> |sched| {\n-                        rtdebug!(\"rendezvous send\");\n-                        sched.metrics.rendezvous_sends += 1;\n-                    }\n                     // Port has closed. Need to clean up.\n                     let _packet: ~Packet<T> = cast::transmute(this.void_packet);\n                     recvr_active = false;\n@@ -251,7 +243,6 @@ impl<T> SelectInner for PortOne<T> {\n                 STATE_BOTH => {\n                     // Data has not been sent. Now we're blocked.\n                     rtdebug!(\"non-rendezvous recv\");\n-                    sched.metrics.non_rendezvous_recvs += 1;\n                     false\n                 }\n                 STATE_ONE => {\n@@ -267,7 +258,6 @@ impl<T> SelectInner for PortOne<T> {\n                     (*self.packet()).state.store(STATE_ONE, Relaxed);\n \n                     rtdebug!(\"rendezvous recv\");\n-                    sched.metrics.rendezvous_recvs += 1;\n \n                     // Channel is closed. Switch back and check the data.\n                     // NB: We have to drop back into the scheduler event loop here"}, {"sha": "b0c0fa5d708623d216bdfb58bdf6947da29ada29", "filename": "src/libstd/rt/metrics.rs", "status": "removed", "additions": 0, "deletions": 98, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/0fff8b6549868b3355e3219e19db11ddf8e46c60/src%2Flibstd%2Frt%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fff8b6549868b3355e3219e19db11ddf8e46c60/src%2Flibstd%2Frt%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmetrics.rs?ref=0fff8b6549868b3355e3219e19db11ddf8e46c60", "patch": "@@ -1,98 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use to_str::ToStr;\n-\n-pub struct SchedMetrics {\n-    // The number of times executing `run_sched_once`.\n-    turns: uint,\n-    // The number of turns that received a message.\n-    messages_received: uint,\n-    // The number of turns that ran a task from the queue.\n-    tasks_resumed_from_queue: uint,\n-    // The number of turns that found no work to perform.\n-    wasted_turns: uint,\n-    // The number of times the scheduler went to sleep.\n-    sleepy_times: uint,\n-    // Context switches from the scheduler into a task.\n-    context_switches_sched_to_task: uint,\n-    // Context switches from a task into the scheduler.\n-    context_switches_task_to_sched: uint,\n-    // Context switches from a task to a task.\n-    context_switches_task_to_task: uint,\n-    // Message sends that unblock the receiver\n-    rendezvous_sends: uint,\n-    // Message sends that do not unblock the receiver\n-    non_rendezvous_sends: uint,\n-    // Message receives that do not block the receiver\n-    rendezvous_recvs: uint,\n-    // Message receives that block the receiver\n-    non_rendezvous_recvs: uint,\n-    // JoinLatch releases that create tombstones\n-    release_tombstone: uint,\n-    // JoinLatch releases that do not create tombstones\n-    release_no_tombstone: uint,\n-}\n-\n-impl SchedMetrics {\n-    pub fn new() -> SchedMetrics {\n-        SchedMetrics {\n-            turns: 0,\n-            messages_received: 0,\n-            tasks_resumed_from_queue: 0,\n-            wasted_turns: 0,\n-            sleepy_times: 0,\n-            context_switches_sched_to_task: 0,\n-            context_switches_task_to_sched: 0,\n-            context_switches_task_to_task: 0,\n-            rendezvous_sends: 0,\n-            non_rendezvous_sends: 0,\n-            rendezvous_recvs: 0,\n-            non_rendezvous_recvs: 0,\n-            release_tombstone: 0,\n-            release_no_tombstone: 0\n-        }\n-    }\n-}\n-\n-impl ToStr for SchedMetrics {\n-    fn to_str(&self) -> ~str {\n-        fmt!(\"turns: %u\\n\\\n-              messages_received: %u\\n\\\n-              tasks_resumed_from_queue: %u\\n\\\n-              wasted_turns: %u\\n\\\n-              sleepy_times: %u\\n\\\n-              context_switches_sched_to_task: %u\\n\\\n-              context_switches_task_to_sched: %u\\n\\\n-              context_switches_task_to_task: %u\\n\\\n-              rendezvous_sends: %u\\n\\\n-              non_rendezvous_sends: %u\\n\\\n-              rendezvous_recvs: %u\\n\\\n-              non_rendezvous_recvs: %u\\n\\\n-              release_tombstone: %u\\n\\\n-              release_no_tombstone: %u\\n\\\n-              \",\n-             self.turns,\n-             self.messages_received,\n-             self.tasks_resumed_from_queue,\n-             self.wasted_turns,\n-             self.sleepy_times,\n-             self.context_switches_sched_to_task,\n-             self.context_switches_task_to_sched,\n-             self.context_switches_task_to_task,\n-             self.rendezvous_sends,\n-             self.non_rendezvous_sends,\n-             self.rendezvous_recvs,\n-             self.non_rendezvous_recvs,\n-             self.release_tombstone,\n-             self.release_no_tombstone\n-        )\n-    }\n-}\n\\ No newline at end of file"}, {"sha": "0d59d5780cc875c0b4f910ea00b013f63b3d3ce5", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "patch": "@@ -152,8 +152,6 @@ pub mod local_ptr;\n /// Bindings to pthread/windows thread-local storage.\n pub mod thread_local_storage;\n \n-pub mod metrics;\n-\n // FIXME #5248 shouldn't be pub\n /// Just stuff\n pub mod util;"}, {"sha": "7d59627ba399beba5837dd9fb37d635645e3344f", "filename": "src/libstd/rt/sched.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/src%2Flibstd%2Frt%2Fsched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a37bdde3f9c0b711ecfbaffa5b00b8272d76b131/src%2Flibstd%2Frt%2Fsched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fsched.rs?ref=a37bdde3f9c0b711ecfbaffa5b00b8272d76b131", "patch": "@@ -24,7 +24,6 @@ use rt::kill::BlockedTask;\n use rt::local_ptr;\n use rt::local::Local;\n use rt::rtio::{RemoteCallback, PausibleIdleCallback};\n-use rt::metrics::SchedMetrics;\n use borrow::{to_uint};\n use cell::Cell;\n use rand::{XorShiftRng, RngUtil};\n@@ -71,7 +70,6 @@ pub struct Scheduler {\n     /// An action performed after a context switch on behalf of the\n     /// code running before the context switch\n     cleanup_job: Option<CleanupJob>,\n-    metrics: SchedMetrics,\n     /// Should this scheduler run any task, or only pinned tasks?\n     run_anything: bool,\n     /// If the scheduler shouldn't run some tasks, a friend to send\n@@ -126,7 +124,6 @@ impl Scheduler {\n             stack_pool: StackPool::new(),\n             sched_task: None,\n             cleanup_job: None,\n-            metrics: SchedMetrics::new(),\n             run_anything: run_anything,\n             friend_handle: friend,\n             rng: XorShiftRng::new(),\n@@ -267,10 +264,8 @@ impl Scheduler {\n         // If we got here then there was no work to do.\n         // Generate a SchedHandle and push it to the sleeper list so\n         // somebody can wake us up later.\n-        sched.metrics.wasted_turns += 1;\n         if !sched.sleepy && !sched.no_sleep {\n             rtdebug!(\"scheduler has no work to do, going to sleep\");\n-            sched.metrics.sleepy_times += 1;\n             sched.sleepy = true;\n             let handle = sched.make_handle();\n             sched.sleeper_list.push(handle);"}]}