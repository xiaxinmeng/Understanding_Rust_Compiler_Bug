{"sha": "4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkMTBiZGM1YjlmZWNlZTM4YWJjYWQ3OGE4NmU1NTJhOTYxYjFhMGE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-16T07:49:08Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-02-23T09:07:53Z"}, "message": "std: Move intrinsics to std::intrinsics.\n\nIssue #1457", "tree": {"sha": "652d89a93931598a38fed6aa082b87acab38317e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/652d89a93931598a38fed6aa082b87acab38317e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "html_url": "https://github.com/rust-lang/rust/commit/4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf351e9f7d17777b1385093bfa7b6654e662d44", "url": "https://api.github.com/repos/rust-lang/rust/commits/edf351e9f7d17777b1385093bfa7b6654e662d44", "html_url": "https://github.com/rust-lang/rust/commit/edf351e9f7d17777b1385093bfa7b6654e662d44"}], "stats": {"total": 96, "additions": 49, "deletions": 47}, "files": [{"sha": "3cf89c3124c39360444c31dd85d1c76a2fff6101", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -37,8 +37,8 @@ use std::num;\n use std::kinds::marker;\n use std::rc::Rc;\n use std::rt::global_heap;\n-use std::unstable::intrinsics::{TyDesc, get_tydesc};\n-use std::unstable::intrinsics;\n+use std::intrinsics::{TyDesc, get_tydesc};\n+use std::intrinsics;\n use std::vec;\n \n // The way arena uses arrays is really deeply awful. The arrays are"}, {"sha": "ab106138ae1088bd40bf6c04dfe027f311c45bf5", "filename": "src/libgreen/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibgreen%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibgreen%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibgreen%2Fmacros.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -124,7 +124,7 @@ memory and partly incapable of presentation to others.\",\n     abort();\n \n     fn abort() -> ! {\n-        use std::unstable::intrinsics;\n+        use std::intrinsics;\n         unsafe { intrinsics::abort() }\n     }\n }"}, {"sha": "784d8650689a4d4d0f030794244dbcf75e44d8d1", "filename": "src/libnative/io/pipe_unix.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibnative%2Fio%2Fpipe_unix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibnative%2Fio%2Fpipe_unix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fpipe_unix.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -15,7 +15,7 @@ use std::libc;\n use std::mem;\n use std::rt::rtio;\n use std::sync::arc::UnsafeArc;\n-use std::unstable::intrinsics;\n+use std::intrinsics;\n \n use super::{IoResult, retry};\n use super::file::{keep_going, fd_t};"}, {"sha": "e5e9592eb5ab53c4e96aab5c44e58cfc27b05294", "filename": "src/libnative/io/pipe_win32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibnative%2Fio%2Fpipe_win32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibnative%2Fio%2Fpipe_win32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Fio%2Fpipe_win32.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -90,7 +90,7 @@ use std::os::win32::as_utf16_p;\n use std::ptr;\n use std::rt::rtio;\n use std::sync::arc::UnsafeArc;\n-use std::unstable::intrinsics;\n+use std::intrinsics;\n \n use super::IoResult;\n "}, {"sha": "4662742f25cb18b53559892b9c72eb9367b821a5", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -32,7 +32,7 @@ use std::io;\n use std::libc;\n use std::mem;\n use std::str;\n-use std::unstable::intrinsics;\n+use std::intrinsics;\n use std::vec;\n \n /// A unit struct which has the `fmt::Show` trait implemented. When"}, {"sha": "06ae20d60bce5c90d3435e4d94d550c05423bdf5", "filename": "src/libstd/any.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fany.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -25,8 +25,8 @@ use fmt;\n use option::{Option, Some, None};\n use result::{Result, Ok, Err};\n use to_str::ToStr;\n-use unstable::intrinsics::TypeId;\n-use unstable::intrinsics;\n+use intrinsics::TypeId;\n+use intrinsics;\n \n /// A type with no inhabitants\n pub enum Void { }"}, {"sha": "c2db0c78205088962da96ba7347a8b6e0234101a", "filename": "src/libstd/cast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcast.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -11,7 +11,7 @@\n //! Unsafe casting functions\n \n use mem;\n-use unstable::intrinsics;\n+use intrinsics;\n use ptr::copy_nonoverlapping_memory;\n \n /// Casts the value at `src` to U. The two types must have the same length."}, {"sha": "b386335a4289b842658febe8fbbab7ac8e1ccd96", "filename": "src/libstd/intrinsics.rs", "status": "renamed", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fintrinsics.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -41,9 +41,11 @@ A quick refresher on memory ordering:\n \n */\n \n+#[allow(missing_doc)];\n+\n // This is needed to prevent duplicate lang item definitions.\n #[cfg(test)]\n-pub use realstd::unstable::intrinsics::{TyDesc, Opaque, TyVisitor, TypeId};\n+pub use realstd::intrinsics::{TyDesc, Opaque, TyVisitor, TypeId};\n \n pub type GlueFn = extern \"Rust\" fn(*i8);\n ", "previous_filename": "src/libstd/unstable/intrinsics.rs"}, {"sha": "4695897448485deaba2db910b9acc33af6004fc1", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -196,7 +196,8 @@ pub mod reflect;\n // Private APIs\n #[unstable]\n pub mod unstable;\n-\n+#[experimental]\n+pub mod intrinsics;\n \n /* For internal use, not exported */\n "}, {"sha": "6b854daabda851d3abc8a207034c54131a1be80b", "filename": "src/libstd/local_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Flocal_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Flocal_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flocal_data.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -281,7 +281,7 @@ fn get_with<T:'static,\n }\n \n fn abort() -> ! {\n-    use std::unstable::intrinsics;\n+    use intrinsics;\n     unsafe { intrinsics::abort() }\n }\n "}, {"sha": "603f2b80eea7a28e6375f91ca3e73f38c83e390e", "filename": "src/libstd/mem.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmem.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -17,8 +17,8 @@\n \n use cast;\n use ptr;\n-use unstable::intrinsics;\n-use unstable::intrinsics::{bswap16, bswap32, bswap64};\n+use intrinsics;\n+use intrinsics::{bswap16, bswap32, bswap64};\n \n /// Returns the size of a type in bytes.\n #[inline]"}, {"sha": "7b1fe949199cd69595c3aee9de184491ad9b4ba6", "filename": "src/libstd/num/f32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff32.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -20,7 +20,7 @@ use num::{FPCategory, FPNaN, FPInfinite , FPZero, FPSubnormal, FPNormal};\n use num::{Zero, One, Bounded, strconv};\n use num;\n use to_str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n macro_rules! delegate(\n     ("}, {"sha": "d5a571cdd23716d3346032798a1d2fa26290e3ff", "filename": "src/libstd/num/f64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Ff64.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -21,7 +21,7 @@ use num::{FPCategory, FPNaN, FPInfinite , FPZero, FPSubnormal, FPNormal};\n use num::{Zero, One, Bounded, strconv};\n use num;\n use to_str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n pub use cmp::{min, max};\n "}, {"sha": "141626ed98a7548562ff183b340b0c3e07b5dcce", "filename": "src/libstd/num/i16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi16.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -20,7 +20,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n int_module!(i16, 16)\n "}, {"sha": "a43a6e6a288cdb2de7a3b66f2c0f5a1d8cdc3e2a", "filename": "src/libstd/num/i32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi32.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -20,7 +20,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n int_module!(i32, 32)\n "}, {"sha": "e8503d808a70320ef7f0ce4d7ae52dd237e93e6a", "filename": "src/libstd/num/i64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi64.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -22,7 +22,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n int_module!(i64, 64)\n "}, {"sha": "9f857ff40ff508cbf82723fdc34fd8bc1de818dd", "filename": "src/libstd/num/i8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fi8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fi8.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -20,7 +20,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n int_module!(i8, 8)\n "}, {"sha": "6d1a50b724fd267182f9a9e1d62723e24d69196d", "filename": "src/libstd/num/int.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fint.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -20,7 +20,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n #[cfg(target_word_size = \"32\")] int_module!(int, 32)\n #[cfg(target_word_size = \"64\")] int_module!(int, 64)"}, {"sha": "da0293b3418649265691af68fc8f080f788db2b9", "filename": "src/libstd/num/u16.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu16.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu16.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu16.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -21,7 +21,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n uint_module!(u16, i16, 16)\n "}, {"sha": "b103e18f7019f0a4ad1e8f98d027f3c00cddc419", "filename": "src/libstd/num/u32.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu32.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -21,7 +21,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n uint_module!(u32, i32, 32)\n "}, {"sha": "f7956f0128e5e76e14a6ce6c3f47132433c59e20", "filename": "src/libstd/num/u64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu64.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -23,7 +23,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n uint_module!(u64, i64, 64)\n "}, {"sha": "e6ce9c72e96b2f3de021067d262d409f6e8d7e0e", "filename": "src/libstd/num/u8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fu8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fu8.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -21,7 +21,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n uint_module!(u8, i8, 8)\n "}, {"sha": "a8c85787f7ec852bee7d0440fc104f581ebc0c7f", "filename": "src/libstd/num/uint.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fuint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fnum%2Fuint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fuint.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -21,7 +21,7 @@ use num::{CheckedDiv, Zero, One, strconv};\n use num::{ToStrRadix, FromStrRadix};\n use option::{Option, Some, None};\n use str;\n-use unstable::intrinsics;\n+use intrinsics;\n \n uint_module!(uint, int, ::int::BITS)\n "}, {"sha": "86264c1ca5507e9728006bfd4367b8919468fc5f", "filename": "src/libstd/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fptr.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -17,7 +17,7 @@ use cmp::Equiv;\n use iter::{range, Iterator};\n use mem;\n use option::{Option, Some, None};\n-use unstable::intrinsics;\n+use intrinsics;\n \n #[cfg(not(test))] use cmp::{Eq, Ord};\n "}, {"sha": "5ee840748e67cc8a8791ac5f41fd66352bf3cf71", "filename": "src/libstd/reflect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Freflect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Freflect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Freflect.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -16,7 +16,7 @@ Runtime type reflection\n \n #[allow(missing_doc)];\n \n-use unstable::intrinsics::{Disr, Opaque, TyDesc, TyVisitor};\n+use intrinsics::{Disr, Opaque, TyDesc, TyVisitor};\n use mem;\n use unstable::raw;\n "}, {"sha": "8e1a0714748541801ae2796d8d85e8dcd1ce8419", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -29,7 +29,7 @@ use result::{Ok, Err};\n use str::StrSlice;\n use to_str::ToStr;\n use vec::OwnedVector;\n-use unstable::intrinsics::{Disr, Opaque, TyDesc, TyVisitor, get_tydesc, visit_tydesc};\n+use intrinsics::{Disr, Opaque, TyDesc, TyVisitor, get_tydesc, visit_tydesc};\n use unstable::raw;\n \n macro_rules! try( ($me:expr, $e:expr) => ("}, {"sha": "191d57a58fc66dd892698e76126f9b67d85d07a1", "filename": "src/libstd/rt/global_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frt%2Fglobal_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frt%2Fglobal_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fglobal_heap.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -10,7 +10,7 @@\n \n use libc::{c_void, size_t, free, malloc, realloc};\n use ptr::{RawPtr, mut_null};\n-use unstable::intrinsics::abort;\n+use intrinsics::abort;\n use unstable::raw;\n use mem::size_of;\n "}, {"sha": "127859b42756b1d7fdd47fc7ed70f4ac38aecee0", "filename": "src/libstd/rt/unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Funwind.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -69,7 +69,7 @@ use rt::local::Local;\n use rt::task::Task;\n use str::Str;\n use task::TaskResult;\n-use unstable::intrinsics;\n+use intrinsics;\n \n use uw = self::libunwind;\n "}, {"sha": "408f51f2017e0c4c6ac113eb5c394f8387fb8ed0", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -143,7 +143,7 @@ memory and partly incapable of presentation to others.\",\n     abort();\n \n     fn abort() -> ! {\n-        use std::unstable::intrinsics;\n+        use intrinsics;\n         unsafe { intrinsics::abort() }\n     }\n }"}, {"sha": "b4d465c0397de4d87090e19d506d703167c163e3", "filename": "src/libstd/sync/atomics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fsync%2Fatomics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Fsync%2Fatomics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fatomics.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -21,7 +21,7 @@\n \n #[allow(missing_doc)];\n \n-use unstable::intrinsics;\n+use intrinsics;\n use cast;\n use std::kinds::marker;\n use option::{Option,Some,None};"}, {"sha": "d3dae938b34dcfc877f4aa24b7ac4f8bd9e1735b", "filename": "src/libstd/unstable/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Funstable%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Funstable%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fmod.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -16,7 +16,6 @@ use libc::uintptr_t;\n pub mod dynamic_lib;\n \n pub mod finally;\n-pub mod intrinsics;\n pub mod simd;\n #[cfg(not(test))]\n pub mod lang;"}, {"sha": "655c209fec8744605ee5e8c9add72be4f87a7421", "filename": "src/libstd/unstable/stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Funstable%2Fstack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Flibstd%2Funstable%2Fstack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Fstack.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -40,7 +40,7 @@ pub extern \"C\" fn rust_stack_exhausted() {\n     use rt::local::Local;\n     use rt::task::Task;\n     use str::Str;\n-    use unstable::intrinsics;\n+    use intrinsics;\n \n     unsafe {\n         // We're calling this function because the stack just ran out. We need"}, {"sha": "b6c35f48010ca1fcfd42e2035684246a2b0904fd", "filename": "src/test/auxiliary/typeid-intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fauxiliary%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fauxiliary%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftypeid-intrinsic.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::intrinsics;\n-use std::unstable::intrinsics::TypeId;\n+use std::intrinsics;\n+use std::intrinsics::TypeId;\n \n pub struct A;\n pub struct B(Option<A>);"}, {"sha": "b6c35f48010ca1fcfd42e2035684246a2b0904fd", "filename": "src/test/auxiliary/typeid-intrinsic2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fauxiliary%2Ftypeid-intrinsic2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fauxiliary%2Ftypeid-intrinsic2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftypeid-intrinsic2.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -8,8 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::intrinsics;\n-use std::unstable::intrinsics::TypeId;\n+use std::intrinsics;\n+use std::intrinsics::TypeId;\n \n pub struct A;\n pub struct B(Option<A>);"}, {"sha": "b77180e8e4ccf2da681a2421cefd5cb6c6883229", "filename": "src/test/bench/sudoku.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fbench%2Fsudoku.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fbench%2Fsudoku.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fsudoku.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -18,7 +18,7 @@ use std::io;\n use std::io::stdio::StdReader;\n use std::io::BufferedReader;\n use std::os;\n-use std::unstable::intrinsics::cttz16;\n+use std::intrinsics::cttz16;\n use std::vec;\n \n // Computes a single solution to a given 9x9 sudoku"}, {"sha": "12df0c71cc57e0952681964c314e00677029aac9", "filename": "src/test/compile-fail/forget-init-unsafe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fcompile-fail%2Fforget-init-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Fcompile-fail%2Fforget-init-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fforget-init-unsafe.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::intrinsics::{init, forget};\n+use std::intrinsics::{init, forget};\n \n // Test that the `forget` and `init` intrinsics are really unsafe\n pub fn main() {"}, {"sha": "6dffb53e4a319754c20e37b14992f6f887284cac", "filename": "src/test/run-make/volatile-intrinsics/main.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-make%2Fvolatile-intrinsics%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-make%2Fvolatile-intrinsics%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fvolatile-intrinsics%2Fmain.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::intrinsics::{volatile_load, volatile_store};\n+use std::intrinsics::{volatile_load, volatile_store};\n \n pub fn main() {\n     unsafe {"}, {"sha": "9e6293216bc116b18bac39236c8673b0553b241b", "filename": "src/test/run-pass/issue-6898.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Fissue-6898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Fissue-6898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-6898.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use std::unstable::intrinsics;\n+use std::intrinsics;\n \n /// Returns the size of a type\n pub fn size_of<T>() -> uint {"}, {"sha": "f81ddabf77c7ff1dded1e1d3518acb6a05273cd1", "filename": "src/test/run-pass/reflect-visit-type.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Freflect-visit-type.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -10,7 +10,7 @@\n \n #[feature(managed_boxes)];\n \n-use std::unstable::intrinsics::{TyDesc, get_tydesc, visit_tydesc, TyVisitor, Disr, Opaque};\n+use std::intrinsics::{TyDesc, get_tydesc, visit_tydesc, TyVisitor, Disr, Opaque};\n \n struct MyVisitor {\n     types: ~[~str],"}, {"sha": "b3835ad5cdfad32204c2abac1dbf4f4b32a5bd93", "filename": "src/test/run-pass/tydesc-name.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Ftydesc-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftydesc-name.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-fast: check-fast screws up repr paths\n \n-use std::unstable::intrinsics::get_tydesc;\n+use std::intrinsics::get_tydesc;\n \n struct Foo<T> {\n     x: T"}, {"sha": "b8356cc0e448e0939cbfc66874015098d4da0340", "filename": "src/test/run-pass/typeid-intrinsic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4d10bdc5b9fecee38abcad78a86e552a961b1a0a/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeid-intrinsic.rs?ref=4d10bdc5b9fecee38abcad78a86e552a961b1a0a", "patch": "@@ -16,8 +16,8 @@ extern crate other1 = \"typeid-intrinsic\";\n extern crate other2 = \"typeid-intrinsic2\";\n \n use std::hash_old::Hash;\n-use std::unstable::intrinsics;\n-use std::unstable::intrinsics::TypeId;\n+use std::intrinsics;\n+use std::intrinsics::TypeId;\n \n struct A;\n struct Test;"}]}