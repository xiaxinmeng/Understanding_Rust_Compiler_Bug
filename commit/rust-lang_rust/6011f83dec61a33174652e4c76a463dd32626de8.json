{"sha": "6011f83dec61a33174652e4c76a463dd32626de8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMTFmODNkZWM2MWEzMzE3NDY1MmU0Yzc2YTQ2M2RkMzI2MjZkZTg=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-03T19:26:44Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-04T20:32:40Z"}, "message": "std: minor cleanup", "tree": {"sha": "0ffda1ba63c66903cf226fde09bc5d278283360e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ffda1ba63c66903cf226fde09bc5d278283360e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6011f83dec61a33174652e4c76a463dd32626de8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6011f83dec61a33174652e4c76a463dd32626de8", "html_url": "https://github.com/rust-lang/rust/commit/6011f83dec61a33174652e4c76a463dd32626de8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6011f83dec61a33174652e4c76a463dd32626de8/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5d77d20ec2db9fbb3ba4b7a670e406bc2dc2206", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5d77d20ec2db9fbb3ba4b7a670e406bc2dc2206", "html_url": "https://github.com/rust-lang/rust/commit/b5d77d20ec2db9fbb3ba4b7a670e406bc2dc2206"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "4a6a9585b93741d3b2366a179591600bb3cbea38", "filename": "src/libstd/rt/borrowck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6011f83dec61a33174652e4c76a463dd32626de8/src%2Flibstd%2Frt%2Fborrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6011f83dec61a33174652e4c76a463dd32626de8/src%2Flibstd%2Frt%2Fborrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fborrowck.rs?ref=6011f83dec61a33174652e4c76a463dd32626de8", "patch": "@@ -77,7 +77,7 @@ unsafe fn fail_borrowed(box: *mut raw::Box<()>, file: *c_char, line: size_t) {\n         None => { // not recording borrows\n             let msg = \"borrowed\";\n             do msg.as_c_str |msg_p| {\n-                sys::begin_unwind_(msg_p as *c_char, file, line);\n+                sys::begin_unwind_(msg_p, file, line);\n             }\n         }\n         Some(borrow_list) => { // recording borrows\n@@ -93,7 +93,7 @@ unsafe fn fail_borrowed(box: *mut raw::Box<()>, file: *c_char, line: size_t) {\n                 }\n             }\n             do msg.as_c_str |msg_p| {\n-                sys::begin_unwind_(msg_p as *c_char, file, line)\n+                sys::begin_unwind_(msg_p, file, line)\n             }\n         }\n     }\n@@ -232,7 +232,7 @@ pub unsafe fn unrecord_borrow(a: *u8, old_ref_count: uint,\n             if br.box != a || br.file != file || br.line != line {\n                 let err = fmt!(\"wrong borrow found, br=%?\", br);\n                 do err.as_c_str |msg_p| {\n-                    sys::begin_unwind_(msg_p as *c_char, file, line)\n+                    sys::begin_unwind_(msg_p, file, line)\n                 }\n             }\n             borrow_list"}]}