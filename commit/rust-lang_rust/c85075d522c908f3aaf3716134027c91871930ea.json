{"sha": "c85075d522c908f3aaf3716134027c91871930ea", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4NTA3NWQ1MjJjOTA4ZjNhYWYzNzE2MTM0MDI3YzkxODcxOTMwZWE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-08-08T21:41:22Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-08T21:41:22Z"}, "message": "Rollup merge of #75248 - TimDiekmann:NonNull-as_mut_ptr, r=RalfJung\n\nAdd `as_mut_ptr` to `NonNull<[T]>`\n\nAdds `as_mut_ptr` to shortcut converting a `NonNull<[T]>` to `*mut T` as proposed in https://github.com/rust-lang/rust/issues/74265#issuecomment-669702969.\n\nr? @RalfJung", "tree": {"sha": "9dcaec438cb2e159d6542cc8dba8c8324723e475", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dcaec438cb2e159d6542cc8dba8c8324723e475"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c85075d522c908f3aaf3716134027c91871930ea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfLxwCCRBK7hj4Ov3rIwAAdHIIAAllCzYGjrpeIppoRCUB0NnL\nWrW3uNc1xyjYKW7H1s5/dkd/wHKXZlSswCDXbFXYPk2VprzaI93y9WyIIi3mn5Nh\nhcJPCpT83EbrMZF4CMxRnF+AUMwgkdBPuau6/Wrl3Kvqb8xup4eoAKhKXFvviHhZ\nFv3qeHy+Y3JE/Hpai7MU/erAzqrU06amvCnTJxWLimNq8JFetW0qfJrrCXpMF7zQ\nZGeod7bFBuBtQM3P5Nm1YamYzEaYoKbfZIs7Tv37xCVht3Qjb/3nyWzlCg49d/c5\nK5nv67iU3Up8qxCLrolJ7wtVprL1OlVBBgB/m1MFVm6XKopQrL+xCD7xuA0Y2/4=\n=KtXr\n-----END PGP SIGNATURE-----\n", "payload": "tree 9dcaec438cb2e159d6542cc8dba8c8324723e475\nparent ccffe18c3ebbb7abbaf267b2a98648a73946bff9\nparent a784729cde2f558bba91984eadf0f152b8a9d288\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1596922882 +0900\ncommitter GitHub <noreply@github.com> 1596922882 +0900\n\nRollup merge of #75248 - TimDiekmann:NonNull-as_mut_ptr, r=RalfJung\n\nAdd `as_mut_ptr` to `NonNull<[T]>`\n\nAdds `as_mut_ptr` to shortcut converting a `NonNull<[T]>` to `*mut T` as proposed in https://github.com/rust-lang/rust/issues/74265#issuecomment-669702969.\n\nr? @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c85075d522c908f3aaf3716134027c91871930ea", "html_url": "https://github.com/rust-lang/rust/commit/c85075d522c908f3aaf3716134027c91871930ea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c85075d522c908f3aaf3716134027c91871930ea/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ccffe18c3ebbb7abbaf267b2a98648a73946bff9", "url": "https://api.github.com/repos/rust-lang/rust/commits/ccffe18c3ebbb7abbaf267b2a98648a73946bff9", "html_url": "https://github.com/rust-lang/rust/commit/ccffe18c3ebbb7abbaf267b2a98648a73946bff9"}, {"sha": "a784729cde2f558bba91984eadf0f152b8a9d288", "url": "https://api.github.com/repos/rust-lang/rust/commits/a784729cde2f558bba91984eadf0f152b8a9d288", "html_url": "https://github.com/rust-lang/rust/commit/a784729cde2f558bba91984eadf0f152b8a9d288"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "5163b2d9d568b5472b059e08a3195b127b1ad29a", "filename": "library/core/src/ptr/non_null.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c85075d522c908f3aaf3716134027c91871930ea/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c85075d522c908f3aaf3716134027c91871930ea/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fptr%2Fnon_null.rs?ref=c85075d522c908f3aaf3716134027c91871930ea", "patch": "@@ -224,6 +224,24 @@ impl<T> NonNull<[T]> {\n         unsafe { NonNull::new_unchecked(self.as_ptr().as_mut_ptr()) }\n     }\n \n+    /// Returns a raw pointer to the slice's buffer.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```rust\n+    /// #![feature(slice_ptr_get, nonnull_slice_from_raw_parts)]\n+    /// use std::ptr::NonNull;\n+    ///\n+    /// let slice: NonNull<[i8]> = NonNull::slice_from_raw_parts(NonNull::dangling(), 3);\n+    /// assert_eq!(slice.as_mut_ptr(), 1 as *mut i8);\n+    /// ```\n+    #[inline]\n+    #[unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n+    #[rustc_const_unstable(feature = \"slice_ptr_get\", issue = \"74265\")]\n+    pub const fn as_mut_ptr(self) -> *mut T {\n+        self.as_non_null_ptr().as_ptr()\n+    }\n+\n     /// Returns a raw pointer to an element or subslice, without doing bounds\n     /// checking.\n     ///"}]}