{"sha": "4226930ddf54c4567b2eacc226d4eb897277afab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQyMjY5MzBkZGY1NGM0NTY3YjJlYWNjMjI2ZDRlYjg5NzI3N2FmYWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-11-29T01:53:59Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2016-11-29T01:59:24Z"}, "message": "Show `Trait` instead of `<Struct as Trait>` in E0323\n\nFor a given file\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\npub struct FooConstForMethod;\n\nimpl Foo for FooConstForMethod {\n    const bar: u64 = 1;\n}\n```\n\nshow\n\n```\nerror[E0323]: item `bar` is an associated const, which doesn't match its trait `Foo`\n```\n\ninstead of\n\n```\nerror[E0323]: item `bar` is an associated const, which doesn't match its trait `<FooConstForMethod as Foo>`\n```", "tree": {"sha": "b085f405e384ab735510ff23fd451b82c8fbbe85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b085f405e384ab735510ff23fd451b82c8fbbe85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4226930ddf54c4567b2eacc226d4eb897277afab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4226930ddf54c4567b2eacc226d4eb897277afab", "html_url": "https://github.com/rust-lang/rust/commit/4226930ddf54c4567b2eacc226d4eb897277afab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4226930ddf54c4567b2eacc226d4eb897277afab/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39c267a8d5ab141faaf5d4b33a20cac62cdc4507", "url": "https://api.github.com/repos/rust-lang/rust/commits/39c267a8d5ab141faaf5d4b33a20cac62cdc4507", "html_url": "https://github.com/rust-lang/rust/commit/39c267a8d5ab141faaf5d4b33a20cac62cdc4507"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "3c3f7e66e93e7dfc4d19c71495cbbf43b811e9ee", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4226930ddf54c4567b2eacc226d4eb897277afab/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4226930ddf54c4567b2eacc226d4eb897277afab/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=4226930ddf54c4567b2eacc226d4eb897277afab", "patch": "@@ -1090,7 +1090,7 @@ fn check_impl_items_against_trait<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n                     } else {\n                          let mut err = struct_span_err!(tcx.sess, impl_item.span, E0323,\n                                   \"item `{}` is an associated const, \\\n-                                  which doesn't match its trait `{:?}`\",\n+                                  which doesn't match its trait `{}`\",\n                                   ty_impl_item.name,\n                                   impl_trait_ref);\n                          err.span_label(impl_item.span, &format!(\"does not match trait\"));\n@@ -1128,7 +1128,7 @@ fn check_impl_items_against_trait<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n                     } else {\n                         let mut err = struct_span_err!(tcx.sess, impl_item.span, E0324,\n                                   \"item `{}` is an associated method, \\\n-                                  which doesn't match its trait `{:?}`\",\n+                                  which doesn't match its trait `{}`\",\n                                   ty_impl_item.name,\n                                   impl_trait_ref);\n                          err.span_label(impl_item.span, &format!(\"does not match trait\"));\n@@ -1146,7 +1146,7 @@ fn check_impl_items_against_trait<'a, 'tcx>(ccx: &CrateCtxt<'a, 'tcx>,\n                     } else {\n                         let mut err = struct_span_err!(tcx.sess, impl_item.span, E0325,\n                                   \"item `{}` is an associated type, \\\n-                                  which doesn't match its trait `{:?}`\",\n+                                  which doesn't match its trait `{}`\",\n                                   ty_impl_item.name,\n                                   impl_trait_ref);\n                          err.span_label(impl_item.span, &format!(\"does not match trait\"));"}, {"sha": "ff6b75cd40a5e929c4342c2376f97439acd3fbf0", "filename": "src/test/ui/span/impl-wrong-item-for-trait.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4226930ddf54c4567b2eacc226d4eb897277afab/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4226930ddf54c4567b2eacc226d4eb897277afab/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr?ref=4226930ddf54c4567b2eacc226d4eb897277afab", "patch": "@@ -1,4 +1,4 @@\n-error[E0323]: item `bar` is an associated const, which doesn't match its trait `<FooConstForMethod as Foo>`\n+error[E0323]: item `bar` is an associated const, which doesn't match its trait `Foo`\n   --> $DIR/impl-wrong-item-for-trait.rs:25:5\n    |\n 16 |     fn bar(&self);\n@@ -16,7 +16,7 @@ error[E0046]: not all trait items implemented, missing: `bar`\n 22 | impl Foo for FooConstForMethod {\n    | ^ missing `bar` in implementation\n \n-error[E0324]: item `MY_CONST` is an associated method, which doesn't match its trait `<FooMethodForConst as Foo>`\n+error[E0324]: item `MY_CONST` is an associated method, which doesn't match its trait `Foo`\n   --> $DIR/impl-wrong-item-for-trait.rs:37:5\n    |\n 17 |     const MY_CONST: u32;\n@@ -34,7 +34,7 @@ error[E0046]: not all trait items implemented, missing: `MY_CONST`\n 33 | impl Foo for FooMethodForConst {\n    | ^ missing `MY_CONST` in implementation\n \n-error[E0325]: item `bar` is an associated type, which doesn't match its trait `<FooTypeForMethod as Foo>`\n+error[E0325]: item `bar` is an associated type, which doesn't match its trait `Foo`\n   --> $DIR/impl-wrong-item-for-trait.rs:47:5\n    |\n 16 |     fn bar(&self);"}]}