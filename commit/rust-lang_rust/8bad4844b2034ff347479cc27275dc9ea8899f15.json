{"sha": "8bad4844b2034ff347479cc27275dc9ea8899f15", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYWQ0ODQ0YjIwMzRmZjM0NzQ3OWNjMjcyNzVkYzllYTg4OTlmMTU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T15:57:33Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-28T15:57:33Z"}, "message": "rename Scalar::{ptr_null -> null_ptr}", "tree": {"sha": "2d4519ff9da133a709bcd99cab27b19502a81cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d4519ff9da133a709bcd99cab27b19502a81cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bad4844b2034ff347479cc27275dc9ea8899f15", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bad4844b2034ff347479cc27275dc9ea8899f15", "html_url": "https://github.com/rust-lang/rust/commit/8bad4844b2034ff347479cc27275dc9ea8899f15", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bad4844b2034ff347479cc27275dc9ea8899f15/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2acf32d9adff836a3111c039e4e10a48ee5c79b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2acf32d9adff836a3111c039e4e10a48ee5c79b5", "html_url": "https://github.com/rust-lang/rust/commit/2acf32d9adff836a3111c039e4e10a48ee5c79b5"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "bf4ee8488238f2c0e1173041cd7d3058ea7c772f", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bad4844b2034ff347479cc27275dc9ea8899f15/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bad4844b2034ff347479cc27275dc9ea8899f15/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=8bad4844b2034ff347479cc27275dc9ea8899f15", "patch": "@@ -192,7 +192,7 @@ impl<'tcx, Tag> Scalar<Tag> {\n     }\n \n     #[inline]\n-    pub fn ptr_null(cx: &impl HasDataLayout) -> Self {\n+    pub fn null_ptr(cx: &impl HasDataLayout) -> Self {\n         Scalar::Raw { data: 0, size: cx.data_layout().pointer_size.bytes() as u8 }\n     }\n "}, {"sha": "79cae21b234a3b053af1ca17166bdd704c1f35d2", "filename": "src/librustc_mir/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8bad4844b2034ff347479cc27275dc9ea8899f15/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bad4844b2034ff347479cc27275dc9ea8899f15/src%2Flibrustc_mir%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fplace.rs?ref=8bad4844b2034ff347479cc27275dc9ea8899f15", "patch": "@@ -139,7 +139,7 @@ impl<Tag> MemPlace<Tag> {\n     /// Produces a Place that will error if attempted to be read from or written to\n     #[inline(always)]\n     fn null(cx: &impl HasDataLayout) -> Self {\n-        Self::from_scalar_ptr(Scalar::ptr_null(cx), Align::from_bytes(1).unwrap())\n+        Self::from_scalar_ptr(Scalar::null_ptr(cx), Align::from_bytes(1).unwrap())\n     }\n \n     #[inline(always)]"}]}