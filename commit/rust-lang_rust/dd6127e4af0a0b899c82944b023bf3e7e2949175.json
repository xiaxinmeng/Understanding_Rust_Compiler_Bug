{"sha": "dd6127e4af0a0b899c82944b023bf3e7e2949175", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNjEyN2U0YWYwYTBiODk5YzgyOTQ0YjAyM2JmM2U3ZTI5NDkxNzU=", "commit": {"author": {"name": "David Henningsson", "email": "diwic@ubuntu.com", "date": "2017-12-19T00:17:16Z"}, "committer": {"name": "David Henningsson", "email": "diwic@ubuntu.com", "date": "2017-12-21T03:43:27Z"}, "message": "Mir: Add Terminatorkind::Abort\n\nThe Abort Terminatorkind will cause an llvm.trap function call to be\nemitted.\n\nSigned-off-by: David Henningsson <diwic@ubuntu.com>", "tree": {"sha": "f9de5c811915d871b56ebaa1e38828645e6022b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f9de5c811915d871b56ebaa1e38828645e6022b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd6127e4af0a0b899c82944b023bf3e7e2949175", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd6127e4af0a0b899c82944b023bf3e7e2949175", "html_url": "https://github.com/rust-lang/rust/commit/dd6127e4af0a0b899c82944b023bf3e7e2949175", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd6127e4af0a0b899c82944b023bf3e7e2949175/comments", "author": {"login": "diwic", "id": 9721510, "node_id": "MDQ6VXNlcjk3MjE1MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/9721510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diwic", "html_url": "https://github.com/diwic", "followers_url": "https://api.github.com/users/diwic/followers", "following_url": "https://api.github.com/users/diwic/following{/other_user}", "gists_url": "https://api.github.com/users/diwic/gists{/gist_id}", "starred_url": "https://api.github.com/users/diwic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diwic/subscriptions", "organizations_url": "https://api.github.com/users/diwic/orgs", "repos_url": "https://api.github.com/users/diwic/repos", "events_url": "https://api.github.com/users/diwic/events{/privacy}", "received_events_url": "https://api.github.com/users/diwic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "diwic", "id": 9721510, "node_id": "MDQ6VXNlcjk3MjE1MTA=", "avatar_url": "https://avatars.githubusercontent.com/u/9721510?v=4", "gravatar_id": "", "url": "https://api.github.com/users/diwic", "html_url": "https://github.com/diwic", "followers_url": "https://api.github.com/users/diwic/followers", "following_url": "https://api.github.com/users/diwic/following{/other_user}", "gists_url": "https://api.github.com/users/diwic/gists{/gist_id}", "starred_url": "https://api.github.com/users/diwic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/diwic/subscriptions", "organizations_url": "https://api.github.com/users/diwic/orgs", "repos_url": "https://api.github.com/users/diwic/repos", "events_url": "https://api.github.com/users/diwic/events{/privacy}", "received_events_url": "https://api.github.com/users/diwic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdfb0071091d7257b20ee2a75041d868c23f1114", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdfb0071091d7257b20ee2a75041d868c23f1114", "html_url": "https://github.com/rust-lang/rust/commit/fdfb0071091d7257b20ee2a75041d868c23f1114"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "7517281b0b2d246d440f91f7088f83ab6f7cd822", "filename": "src/librustc/ich/impls_mir.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc%2Fich%2Fimpls_mir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_mir.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -150,6 +150,7 @@ for mir::TerminatorKind<'gcx> {\n                 targets.hash_stable(hcx, hasher);\n             }\n             mir::TerminatorKind::Resume |\n+            mir::TerminatorKind::Abort |\n             mir::TerminatorKind::Return |\n             mir::TerminatorKind::GeneratorDrop |\n             mir::TerminatorKind::Unreachable => {}"}, {"sha": "befab6d436bb658082bd14f2d061cd67ed2cc737", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -637,6 +637,10 @@ pub enum TerminatorKind<'tcx> {\n     /// continue. Emitted by build::scope::diverge_cleanup.\n     Resume,\n \n+    /// Indicates that the landing pad is finished and that the process\n+    /// should abort. Used to prevent unwinding for foreign items.\n+    Abort,\n+\n     /// Indicates a normal return. The return place should have\n     /// been filled in by now. This should occur at most once.\n     Return,\n@@ -759,7 +763,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n         match *self {\n             Goto { target: ref b } => slice::from_ref(b).into_cow(),\n             SwitchInt { targets: ref b, .. } => b[..].into_cow(),\n-            Resume | GeneratorDrop => (&[]).into_cow(),\n+            Resume | Abort | GeneratorDrop => (&[]).into_cow(),\n             Return => (&[]).into_cow(),\n             Unreachable => (&[]).into_cow(),\n             Call { destination: Some((_, t)), cleanup: Some(c), .. } => vec![t, c].into_cow(),\n@@ -794,7 +798,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n         match *self {\n             Goto { target: ref mut b } => vec![b],\n             SwitchInt { targets: ref mut b, .. } => b.iter_mut().collect(),\n-            Resume | GeneratorDrop => Vec::new(),\n+            Resume | Abort | GeneratorDrop => Vec::new(),\n             Return => Vec::new(),\n             Unreachable => Vec::new(),\n             Call { destination: Some((_, ref mut t)), cleanup: Some(ref mut c), .. } => vec![t, c],\n@@ -823,6 +827,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n         match *self {\n             TerminatorKind::Goto { .. } |\n             TerminatorKind::Resume |\n+            TerminatorKind::Abort |\n             TerminatorKind::Return |\n             TerminatorKind::Unreachable |\n             TerminatorKind::GeneratorDrop |\n@@ -918,6 +923,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n             Return => write!(fmt, \"return\"),\n             GeneratorDrop => write!(fmt, \"generator_drop\"),\n             Resume => write!(fmt, \"resume\"),\n+            Abort => write!(fmt, \"abort\"),\n             Yield { ref value, .. } => write!(fmt, \"_1 = suspend({:?})\", value),\n             Unreachable => write!(fmt, \"unreachable\"),\n             Drop { ref location, .. } => write!(fmt, \"drop({:?})\", location),\n@@ -970,7 +976,7 @@ impl<'tcx> TerminatorKind<'tcx> {\n     pub fn fmt_successor_labels(&self) -> Vec<Cow<'static, str>> {\n         use self::TerminatorKind::*;\n         match *self {\n-            Return | Resume | Unreachable | GeneratorDrop => vec![],\n+            Return | Resume | Abort | Unreachable | GeneratorDrop => vec![],\n             Goto { .. } => vec![\"\".into()],\n             SwitchInt { ref values, .. } => {\n                 values.iter()\n@@ -2102,6 +2108,7 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n             },\n             GeneratorDrop => GeneratorDrop,\n             Resume => Resume,\n+            Abort => Abort,\n             Return => Return,\n             Unreachable => Unreachable,\n             FalseEdges { real_target, ref imaginary_targets } =>\n@@ -2143,6 +2150,7 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n             },\n             Goto { .. } |\n             Resume |\n+            Abort |\n             Return |\n             GeneratorDrop |\n             Unreachable |"}, {"sha": "2a3f7384de2f2399eda593035652d2f62f62686c", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -432,6 +432,7 @@ macro_rules! make_mir_visitor {\n                     }\n \n                     TerminatorKind::Resume |\n+                    TerminatorKind::Abort |\n                     TerminatorKind::Return |\n                     TerminatorKind::GeneratorDrop |\n                     TerminatorKind::Unreachable => {"}, {"sha": "672ab8257ba28835b925d0565d125ccab8788e8e", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -557,6 +557,7 @@ impl<'cx, 'gcx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx\n                 });\n             }\n             TerminatorKind::Goto { target: _ }\n+            | TerminatorKind::Abort\n             | TerminatorKind::Unreachable\n             | TerminatorKind::FalseEdges { .. } => {\n                 // no data used, thus irrelevant to borrowck"}, {"sha": "901b73c610e3b0f6fe82d1fd7c71d7f15990379e", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -780,6 +780,7 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n         match term.kind {\n             TerminatorKind::Goto { .. }\n             | TerminatorKind::Resume\n+            | TerminatorKind::Abort\n             | TerminatorKind::Return\n             | TerminatorKind::GeneratorDrop\n             | TerminatorKind::Unreachable\n@@ -1082,6 +1083,9 @@ impl<'a, 'gcx, 'tcx> TypeChecker<'a, 'gcx, 'tcx> {\n             TerminatorKind::Resume => if !is_cleanup {\n                 span_mirbug!(self, block_data, \"resume on non-cleanup block!\")\n             },\n+            TerminatorKind::Abort => if !is_cleanup {\n+                span_mirbug!(self, block_data, \"abort on non-cleanup block!\")\n+            },\n             TerminatorKind::Return => if is_cleanup {\n                 span_mirbug!(self, block_data, \"return on cleanup block\")\n             },"}, {"sha": "cf121643a7e07ba4d38fd4e3e6e8b0821ad8831c", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -465,6 +465,7 @@ impl<'a, 'gcx, 'tcx> Borrows<'a, 'gcx, 'tcx> {\n                     }\n                 }\n             }\n+            mir::TerminatorKind::Abort |\n             mir::TerminatorKind::SwitchInt {..} |\n             mir::TerminatorKind::Drop {..} |\n             mir::TerminatorKind::DropAndReplace {..} |"}, {"sha": "1597ba8aaa0030ae967479cd20fcbcce811abed2", "filename": "src/librustc_mir/dataflow/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmod.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -771,6 +771,7 @@ impl<'a, 'tcx: 'a, D> DataflowAnalysis<'a, 'tcx, D> where D: BitDenotation\n         match bb_data.terminator().kind {\n             mir::TerminatorKind::Return |\n             mir::TerminatorKind::Resume |\n+            mir::TerminatorKind::Abort |\n             mir::TerminatorKind::GeneratorDrop |\n             mir::TerminatorKind::Unreachable => {}\n             mir::TerminatorKind::Goto { ref target } |"}, {"sha": "f35e52497ce4af13c74f7327b0abcdd016718830", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -334,6 +334,7 @@ impl<'b, 'a, 'gcx, 'tcx> Gatherer<'b, 'a, 'gcx, 'tcx> {\n         match term.kind {\n             TerminatorKind::Goto { target: _ } |\n             TerminatorKind::Resume |\n+            TerminatorKind::Abort |\n             TerminatorKind::GeneratorDrop |\n             TerminatorKind::FalseEdges { .. } |\n             TerminatorKind::Unreachable => { }"}, {"sha": "c8a0dbdd9030896549427ef41f9c392cfe318701", "filename": "src/librustc_mir/interpret/terminator/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fterminator%2Fmod.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -163,6 +163,7 @@ impl<'a, 'tcx, M: Machine<'tcx>> EvalContext<'a, 'tcx, M> {\n             GeneratorDrop => unimplemented!(),\n             DropAndReplace { .. } => unimplemented!(),\n             Resume => unimplemented!(),\n+            Abort => unimplemented!(),\n             FalseEdges { .. } => bug!(\"should have been eliminated by `simplify_branches` mir pass\"),\n             Unreachable => return err!(Unreachable),\n         }"}, {"sha": "62740a55dd6e2fcb5f12abe183b7e19ab518f0ec", "filename": "src/librustc_mir/monomorphize/collector.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fcollector.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -625,6 +625,7 @@ impl<'a, 'tcx> MirVisitor<'tcx> for MirNeighborCollector<'a, 'tcx> {\n             mir::TerminatorKind::Goto { .. } |\n             mir::TerminatorKind::SwitchInt { .. } |\n             mir::TerminatorKind::Resume |\n+            mir::TerminatorKind::Abort |\n             mir::TerminatorKind::Return |\n             mir::TerminatorKind::Unreachable |\n             mir::TerminatorKind::Assert { .. } => {}"}, {"sha": "e9ba5de3cc6941265982e30811eaf52813ae444f", "filename": "src/librustc_mir/transform/check_unsafety.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_unsafety.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -73,6 +73,7 @@ impl<'a, 'tcx> Visitor<'tcx> for UnsafetyChecker<'a, 'tcx> {\n             TerminatorKind::DropAndReplace { .. } |\n             TerminatorKind::GeneratorDrop |\n             TerminatorKind::Resume |\n+            TerminatorKind::Abort |\n             TerminatorKind::Return |\n             TerminatorKind::Unreachable |\n             TerminatorKind::FalseEdges { .. } => {"}, {"sha": "43ee75d1e2ba255b7515530b2cda076464262fdc", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -806,6 +806,7 @@ impl<'a, 'tcx> MutVisitor<'tcx> for Integrator<'a, 'tcx> {\n                     *kind = TerminatorKind::Goto { target: tgt }\n                 }\n             }\n+            TerminatorKind::Abort => { }\n             TerminatorKind::Unreachable => { }\n             TerminatorKind::FalseEdges { ref mut real_target, ref mut imaginary_targets } => {\n                 *real_target = self.update_target(*real_target);"}, {"sha": "f0871bb188d494582c63225592bf173f031f6a40", "filename": "src/librustc_mir/transform/qualify_consts.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_consts.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -324,6 +324,7 @@ impl<'a, 'tcx> Qualifier<'a, 'tcx, 'tcx> {\n                 TerminatorKind::SwitchInt {..} |\n                 TerminatorKind::DropAndReplace { .. } |\n                 TerminatorKind::Resume |\n+                TerminatorKind::Abort |\n                 TerminatorKind::GeneratorDrop |\n                 TerminatorKind::Yield { .. } |\n                 TerminatorKind::Unreachable |"}, {"sha": "23274cdedf2c743a070eeb7f8d2448c1304074dd", "filename": "src/librustc_mir/transform/remove_noop_landing_pads.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fremove_noop_landing_pads.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -76,6 +76,7 @@ impl RemoveNoopLandingPads {\n             TerminatorKind::GeneratorDrop |\n             TerminatorKind::Yield { .. } |\n             TerminatorKind::Return |\n+            TerminatorKind::Abort |\n             TerminatorKind::Unreachable |\n             TerminatorKind::Call { .. } |\n             TerminatorKind::Assert { .. } |"}, {"sha": "b379a174b23f61aba881f09c1861a369441bd5cb", "filename": "src/librustc_passes/mir_stats.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_passes%2Fmir_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_passes%2Fmir_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fmir_stats.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -113,6 +113,7 @@ impl<'a, 'tcx> mir_visit::Visitor<'tcx> for StatCollector<'a, 'tcx> {\n             TerminatorKind::Goto { .. } => \"TerminatorKind::Goto\",\n             TerminatorKind::SwitchInt { .. } => \"TerminatorKind::SwitchInt\",\n             TerminatorKind::Resume => \"TerminatorKind::Resume\",\n+            TerminatorKind::Abort => \"TerminatorKind::Abort\",\n             TerminatorKind::Return => \"TerminatorKind::Return\",\n             TerminatorKind::Unreachable => \"TerminatorKind::Unreachable\",\n             TerminatorKind::Drop { .. } => \"TerminatorKind::Drop\","}, {"sha": "31cbb07dbe64cee39128602dba067d638ac84441", "filename": "src/librustc_trans/mir/analyze.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fanalyze.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -236,6 +236,7 @@ pub fn cleanup_kinds<'a, 'tcx>(mir: &mir::Mir<'tcx>) -> IndexVec<mir::BasicBlock\n             match data.terminator().kind {\n                 TerminatorKind::Goto { .. } |\n                 TerminatorKind::Resume |\n+                TerminatorKind::Abort |\n                 TerminatorKind::Return |\n                 TerminatorKind::GeneratorDrop |\n                 TerminatorKind::Unreachable |"}, {"sha": "422b8210b3544f6cb7b3356593d233300ab76008", "filename": "src/librustc_trans/mir/block.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd6127e4af0a0b899c82944b023bf3e7e2949175/src%2Flibrustc_trans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fblock.rs?ref=dd6127e4af0a0b899c82944b023bf3e7e2949175", "patch": "@@ -180,6 +180,13 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n                 }\n             }\n \n+            mir::TerminatorKind::Abort => {\n+                // Call core::intrinsics::abort()\n+                let fnname = bcx.ccx.get_intrinsic(&(\"llvm.trap\"));\n+                bcx.call(fnname, &[], None);\n+                bcx.unreachable();\n+            }\n+\n             mir::TerminatorKind::Goto { target } => {\n                 funclet_br(self, bcx, target);\n             }"}]}