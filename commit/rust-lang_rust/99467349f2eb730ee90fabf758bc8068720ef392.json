{"sha": "99467349f2eb730ee90fabf758bc8068720ef392", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5NDY3MzQ5ZjJlYjczMGVlOTBmYWJmNzU4YmM4MDY4NzIwZWYzOTI=", "commit": {"author": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-13T15:30:08Z"}, "committer": {"name": "hyd-dev", "email": "yd-huang@outlook.com", "date": "2021-06-14T12:55:27Z"}, "message": "Do not return `DefId` that doesn't have exported symbol in `exported_symbols`", "tree": {"sha": "bf944e031916fff8bccbe39ad76d7cc22674065c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf944e031916fff8bccbe39ad76d7cc22674065c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99467349f2eb730ee90fabf758bc8068720ef392", "comment_count": 0, "verification": {"verified": false, "reason": "no_user", "signature": "-----BEGIN PGP SIGNATURE-----\n\niIsEABYIADMWIQRJ2jPMDdiQ+U4U42Z0+n/VuNoUuAUCYMdRvxUceWQtaHVhbmdA\nb3V0bG9vay5jb20ACgkQdPp/1bjaFLh4BgD/fnyB7rC5dQp7YYdTceQDzDP0S329\nHkpml9PYmEUltlEA/1M9xA0DaBwOocYMP4sZMGuy6NnyqxIPrtFV6Wt40k0J\n=MXo8\n-----END PGP SIGNATURE-----", "payload": "tree bf944e031916fff8bccbe39ad76d7cc22674065c\nparent d39f0c64b8b369188a73a655716ab56683a6537b\nauthor hyd-dev <yd-huang@outlook.com> 1623598208 +0800\ncommitter hyd-dev <yd-huang@outlook.com> 1623675327 +0800\n\nDo not return `DefId` that doesn't have exported symbol in `exported_symbols`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99467349f2eb730ee90fabf758bc8068720ef392", "html_url": "https://github.com/rust-lang/rust/commit/99467349f2eb730ee90fabf758bc8068720ef392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99467349f2eb730ee90fabf758bc8068720ef392/comments", "author": null, "committer": null, "parents": [{"sha": "d39f0c64b8b369188a73a655716ab56683a6537b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d39f0c64b8b369188a73a655716ab56683a6537b", "html_url": "https://github.com/rust-lang/rust/commit/d39f0c64b8b369188a73a655716ab56683a6537b"}], "stats": {"total": 63, "additions": 56, "deletions": 7}, "files": [{"sha": "d593f24c71ab44ae804bdd1373ff82727df393c5", "filename": "src/bin/miri.rs", "status": "modified", "additions": 22, "deletions": 7, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/99467349f2eb730ee90fabf758bc8068720ef392/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99467349f2eb730ee90fabf758bc8068720ef392/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=99467349f2eb730ee90fabf758bc8068720ef392", "patch": "@@ -19,7 +19,7 @@ use log::debug;\n \n use rustc_driver::Compilation;\n use rustc_errors::emitter::{ColorConfig, HumanReadableErrorType};\n-use rustc_hir::def_id::LOCAL_CRATE;\n+use rustc_hir::{self as hir, def_id::LOCAL_CRATE, Node};\n use rustc_interface::interface::Config;\n use rustc_middle::{\n     middle::exported_symbols::{ExportedSymbol, SymbolExportLevel},\n@@ -109,12 +109,27 @@ impl rustc_driver::Callbacks for MiriBeRustCompilerCalls {\n                         // https://github.com/rust-lang/rust/blob/2962e7c0089d5c136f4e9600b7abccfbbde4973d/compiler/rustc_codegen_ssa/src/back/symbol_export.rs#L62-L63\n                         // https://github.com/rust-lang/rust/blob/2962e7c0089d5c136f4e9600b7abccfbbde4973d/compiler/rustc_codegen_ssa/src/back/symbol_export.rs#L174\n                         tcx.reachable_set(()).iter().filter_map(|&local_def_id| {\n-                            tcx.codegen_fn_attrs(local_def_id)\n-                                .contains_extern_indicator()\n-                                .then_some((\n-                                    ExportedSymbol::NonGeneric(local_def_id.to_def_id()),\n-                                    SymbolExportLevel::C,\n-                                ))\n+                            // Do the same filtering that rustc does:\n+                            // https://github.com/rust-lang/rust/blob/2962e7c0089d5c136f4e9600b7abccfbbde4973d/compiler/rustc_codegen_ssa/src/back/symbol_export.rs#L84-L102\n+                            // Otherwise it may cause unexpected behaviours and ICEs\n+                            // (https://github.com/rust-lang/rust/issues/86261).\n+                            let is_reachable_non_generic = matches!(\n+                                tcx.hir().get(tcx.hir().local_def_id_to_hir_id(local_def_id)),\n+                                Node::Item(&hir::Item {\n+                                    kind: hir::ItemKind::Static(..) | hir::ItemKind::Fn(..),\n+                                    ..\n+                                }) | Node::ImplItem(&hir::ImplItem {\n+                                    kind: hir::ImplItemKind::Fn(..),\n+                                    ..\n+                                })\n+                                if !tcx.generics_of(local_def_id).requires_monomorphization(tcx)\n+                            );\n+                            (is_reachable_non_generic\n+                                && tcx.codegen_fn_attrs(local_def_id).contains_extern_indicator())\n+                            .then_some((\n+                                ExportedSymbol::NonGeneric(local_def_id.to_def_id()),\n+                                SymbolExportLevel::C,\n+                            ))\n                         }),\n                     )\n                 }"}, {"sha": "7f06fdf28dec5eb8beee17506a93be73ca692172", "filename": "test-cargo-miri/Cargo.lock", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2FCargo.lock?ref=99467349f2eb730ee90fabf758bc8068720ef392", "patch": "@@ -21,6 +21,7 @@ dependencies = [\n  \"issue_1691\",\n  \"issue_1705\",\n  \"issue_1760\",\n+ \"issue_rust_86261\",\n  \"rand\",\n  \"serde_derive\",\n ]\n@@ -102,6 +103,10 @@ dependencies = [\n name = \"issue_1760\"\n version = \"0.1.0\"\n \n+[[package]]\n+name = \"issue_rust_86261\"\n+version = \"0.1.0\"\n+\n [[package]]\n name = \"libc\"\n version = \"0.2.92\""}, {"sha": "39ce1757f0e4282854fb1d1046356742d0eca3ab", "filename": "test-cargo-miri/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2FCargo.toml?ref=99467349f2eb730ee90fabf758bc8068720ef392", "patch": "@@ -15,6 +15,7 @@ issue_1567 = { path = \"issue-1567\" }\n issue_1691 = { path = \"issue-1691\" }\n issue_1705 = { path = \"issue-1705\" }\n issue_1760 = { path = \"issue-1760\" }\n+issue_rust_86261 = { path = \"issue-rust-86261\" }\n \n [dev-dependencies]\n rand = { version = \"0.8\", features = [\"small_rng\"] }"}, {"sha": "a6b65ebb5318d71886e2c9a61baf2b5c15c02e7e", "filename": "test-cargo-miri/issue-rust-86261/Cargo.toml", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2Fissue-rust-86261%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2Fissue-rust-86261%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fissue-rust-86261%2FCargo.toml?ref=99467349f2eb730ee90fabf758bc8068720ef392", "patch": "@@ -0,0 +1,5 @@\n+[package]\n+name = \"issue_rust_86261\"\n+version = \"0.1.0\"\n+authors = [\"Miri Team\"]\n+edition = \"2018\""}, {"sha": "db725fdb64ed923fe27282e75dcb80405fa43fed", "filename": "test-cargo-miri/issue-rust-86261/src/lib.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2Fissue-rust-86261%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99467349f2eb730ee90fabf758bc8068720ef392/test-cargo-miri%2Fissue-rust-86261%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fissue-rust-86261%2Fsrc%2Flib.rs?ref=99467349f2eb730ee90fabf758bc8068720ef392", "patch": "@@ -0,0 +1,23 @@\n+#![allow(unused_imports, unused_attributes, no_mangle_generic_items)]\n+\n+// Regression test for https://github.com/rust-lang/rust/issues/86261:\n+// `#[no_mangle]` on a `use` item.\n+#[no_mangle]\n+use std::{thread,panic, io, boxed, any, string};\n+\n+// `#[no_mangle]` on a struct has a similar problem.\n+#[no_mangle]\n+pub struct NoMangleStruct;\n+\n+// If `#[no_mangle]` has effect on the `struct` above, calling `NoMangleStruct` will fail with\n+// \"multiple definitions of symbol `NoMangleStruct`\" error.\n+#[export_name = \"NoMangleStruct\"]\n+fn no_mangle_struct() {}\n+\n+// `#[no_mangle]` on a generic function can also cause ICEs.\n+#[no_mangle]\n+fn no_mangle_generic<T>() {}\n+\n+// Same as `no_mangle_struct()` but for the `no_mangle_generic()` generic function.\n+#[export_name = \"no_mangle_generic\"]\n+fn no_mangle_generic2() {}"}]}