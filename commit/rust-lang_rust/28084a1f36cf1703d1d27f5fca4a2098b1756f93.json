{"sha": "28084a1f36cf1703d1d27f5fca4a2098b1756f93", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MDg0YTFmMzZjZjE3MDNkMWQyN2Y1ZmNhNGEyMDk4YjE3NTZmOTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-04-02T22:32:06Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-02T22:32:06Z"}, "message": "Rollup merge of #70700 - jrvidal:include-macro-paths, r=Dylan-DPC\n\nExpand on platform details of `include_xxx` macros\n\nThis is a small detail that is not explicitly mentioned, but it left me scratching my head for a while until I looked into its implementation details. Maybe worth mentioning.", "tree": {"sha": "a567421651ba96a6f5bbdf4ec4b6e839b7fa7b6b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a567421651ba96a6f5bbdf4ec4b6e839b7fa7b6b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/28084a1f36cf1703d1d27f5fca4a2098b1756f93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJehmfmCRBK7hj4Ov3rIwAAdHIIAEPzG4PmPPNP3iNp24z6uzKF\nsBCqEWayLY65tWdWbxKwuG+KnIuHZi1AnRC2plUXMB6z7LX9QyRILiJ1wPRLTowX\ntKSFH2HSCA85pE9SIvtDUHsnQ/xrJjCfSD0U5aTX3BA2qAr6kdSzh/5pqR/HFswS\nabDKqT0NOtxSMLs9Ra9CcaxZX5JQGSkKKV6CkBMruavVIT/iKFisr1oerF+A23d2\nLBbHVSl8cuD8h4Mp9qfxVl3IHqiROH8Dm2ORhRXsQ+7t7DPOqWG6P2f6DZUXEPMI\nFtZ37DwWIYh7KEyi1g8VP1jbnYiav4O0Az8xRdjgWjjgOXkJ9M+Y5vZyvq9iYYE=\n=B0Ae\n-----END PGP SIGNATURE-----\n", "payload": "tree a567421651ba96a6f5bbdf4ec4b6e839b7fa7b6b\nparent c00a21c2e326fe9b7a6388a50e0a0a6167fb3aa0\nparent 65fcc3f1cdc623607a7529487a6b869b3a6c1943\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1585866726 +0200\ncommitter GitHub <noreply@github.com> 1585866726 +0200\n\nRollup merge of #70700 - jrvidal:include-macro-paths, r=Dylan-DPC\n\nExpand on platform details of `include_xxx` macros\n\nThis is a small detail that is not explicitly mentioned, but it left me scratching my head for a while until I looked into its implementation details. Maybe worth mentioning.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/28084a1f36cf1703d1d27f5fca4a2098b1756f93", "html_url": "https://github.com/rust-lang/rust/commit/28084a1f36cf1703d1d27f5fca4a2098b1756f93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/28084a1f36cf1703d1d27f5fca4a2098b1756f93/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c00a21c2e326fe9b7a6388a50e0a0a6167fb3aa0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c00a21c2e326fe9b7a6388a50e0a0a6167fb3aa0", "html_url": "https://github.com/rust-lang/rust/commit/c00a21c2e326fe9b7a6388a50e0a0a6167fb3aa0"}, {"sha": "65fcc3f1cdc623607a7529487a6b869b3a6c1943", "url": "https://api.github.com/repos/rust-lang/rust/commits/65fcc3f1cdc623607a7529487a6b869b3a6c1943", "html_url": "https://github.com/rust-lang/rust/commit/65fcc3f1cdc623607a7529487a6b869b3a6c1943"}], "stats": {"total": 16, "additions": 11, "deletions": 5}, "files": [{"sha": "9c885ef99a980010b97d0d37fd4ddad7b1c34a72", "filename": "src/libcore/macros/mod.rs", "status": "modified", "additions": 11, "deletions": 5, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/28084a1f36cf1703d1d27f5fca4a2098b1756f93/src%2Flibcore%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/28084a1f36cf1703d1d27f5fca4a2098b1756f93/src%2Flibcore%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmacros%2Fmod.rs?ref=28084a1f36cf1703d1d27f5fca4a2098b1756f93", "patch": "@@ -1070,8 +1070,10 @@ pub(crate) mod builtin {\n \n     /// Includes a utf8-encoded file as a string.\n     ///\n-    /// The file is located relative to the current file. (similarly to how\n-    /// modules are found)\n+    /// The file is located relative to the current file (similarly to how\n+    /// modules are found). The provided path is interpreted in a platform-specific\n+    /// way at compile time. So, for instance, an invocation with a Windows path\n+    /// containing backslashes `\\` would not compile correctly on Unix.\n     ///\n     /// This macro will yield an expression of type `&'static str` which is the\n     /// contents of the file.\n@@ -1108,8 +1110,10 @@ pub(crate) mod builtin {\n \n     /// Includes a file as a reference to a byte array.\n     ///\n-    /// The file is located relative to the current file. (similarly to how\n-    /// modules are found)\n+    /// The file is located relative to the current file (similarly to how\n+    /// modules are found). The provided path is interpreted in a platform-specific\n+    /// way at compile time. So, for instance, an invocation with a Windows path\n+    /// containing backslashes `\\` would not compile correctly on Unix.\n     ///\n     /// This macro will yield an expression of type `&'static [u8; N]` which is\n     /// the contents of the file.\n@@ -1202,7 +1206,9 @@ pub(crate) mod builtin {\n     /// Parses a file as an expression or an item according to the context.\n     ///\n     /// The file is located relative to the current file (similarly to how\n-    /// modules are found).\n+    /// modules are found). The provided path is interpreted in a platform-specific\n+    /// way at compile time. So, for instance, an invocation with a Windows path\n+    /// containing backslashes `\\` would not compile correctly on Unix.\n     ///\n     /// Using this macro is often a bad idea, because if the file is\n     /// parsed as an expression, it is going to be placed in the"}]}