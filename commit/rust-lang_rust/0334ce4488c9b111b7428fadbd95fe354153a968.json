{"sha": "0334ce4488c9b111b7428fadbd95fe354153a968", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMzRjZTQ0ODhjOWIxMTFiNzQyOGZhZGJkOTVmZTM1NDE1M2E5Njg=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-08-30T18:15:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-08-30T18:15:35Z"}, "message": "Rollup merge of #53727 - estebank:incorrect-deref-suggestion, r=nikomatsakis\n\nDo not suggest dereferencing in macro\n\nFix #52783.", "tree": {"sha": "c2f54945eeca781c0c2f26e0a4e1288801968740", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2f54945eeca781c0c2f26e0a4e1288801968740"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0334ce4488c9b111b7428fadbd95fe354153a968", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbiDRICRBK7hj4Ov3rIwAAdHIIAKPxYo8uZJR+J7kjNwC3rZEW\nXgRkzDsWxP3AbOo+0bh0RHFQfBgLuhziHNd4W5UIRpFSTcz01SjYruNlnYr4gB4I\nf0dmjyz8Z4sXdaGPnBSAlKDSVC5jRXC91UsNRZJxrPcsqWR+RlkJHKMPi1HR4Uxm\nb0TfDOZrAMxJRAK6UCTgPveyt6qzBsx86Wnx5Vfs+R4ssVcZliKtF11+9MAwUAdH\noPBZGMm5CfjmakjhpHfmxSNVQGU7WSRSx/bsvl15kwPuE0AmQXQEQFIfjfK7388a\nx+0ZvzbwiGBKbFxATcxIkBq6MtZwg7xRnGGV1jmjDh6xVvjMGt0U4AdYrKP4SDE=\n=H/D1\n-----END PGP SIGNATURE-----\n", "payload": "tree c2f54945eeca781c0c2f26e0a4e1288801968740\nparent 3ee762870f75ba73ea1cf8c17678ef7fc69e8ceb\nparent a2722f326138813d1d9cf0946523dd38d1f06b35\nauthor Pietro Albini <pietro@pietroalbini.org> 1535652935 +0200\ncommitter GitHub <noreply@github.com> 1535652935 +0200\n\nRollup merge of #53727 - estebank:incorrect-deref-suggestion, r=nikomatsakis\n\nDo not suggest dereferencing in macro\n\nFix #52783.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0334ce4488c9b111b7428fadbd95fe354153a968", "html_url": "https://github.com/rust-lang/rust/commit/0334ce4488c9b111b7428fadbd95fe354153a968", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0334ce4488c9b111b7428fadbd95fe354153a968/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ee762870f75ba73ea1cf8c17678ef7fc69e8ceb", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ee762870f75ba73ea1cf8c17678ef7fc69e8ceb", "html_url": "https://github.com/rust-lang/rust/commit/3ee762870f75ba73ea1cf8c17678ef7fc69e8ceb"}, {"sha": "a2722f326138813d1d9cf0946523dd38d1f06b35", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2722f326138813d1d9cf0946523dd38d1f06b35", "html_url": "https://github.com/rust-lang/rust/commit/a2722f326138813d1d9cf0946523dd38d1f06b35"}], "stats": {"total": 53, "additions": 36, "deletions": 17}, "files": [{"sha": "4e22ead8db987a0514b885a992a43eac35332084", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0334ce4488c9b111b7428fadbd95fe354153a968/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0334ce4488c9b111b7428fadbd95fe354153a968/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=0334ce4488c9b111b7428fadbd95fe354153a968", "patch": "@@ -351,11 +351,14 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                             if !self.infcx.type_moves_by_default(self.param_env,\n                                                                 checked,\n                                                                 sp) {\n-                                let sp = cm.call_span_if_macro(sp);\n-                                if let Ok(code) = cm.span_to_snippet(sp) {\n-                                    return Some((sp,\n-                                                 \"consider dereferencing the borrow\",\n-                                                 format!(\"*{}\", code)));\n+                                // do not suggest if the span comes from a macro (#52783)\n+                                if let (Ok(code),\n+                                        true) = (cm.span_to_snippet(sp), sp == expr.span) {\n+                                    return Some((\n+                                        sp,\n+                                        \"consider dereferencing the borrow\",\n+                                        format!(\"*{}\", code),\n+                                    ));\n                                 }\n                             }\n                         }"}, {"sha": "1776a71a6bb472b24e529409141a81f10c529a70", "filename": "src/test/ui/deref-suggestion.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0334ce4488c9b111b7428fadbd95fe354153a968/src%2Ftest%2Fui%2Fderef-suggestion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0334ce4488c9b111b7428fadbd95fe354153a968/src%2Ftest%2Fui%2Fderef-suggestion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderef-suggestion.rs?ref=0334ce4488c9b111b7428fadbd95fe354153a968", "patch": "@@ -15,20 +15,26 @@ macro_rules! borrow {\n fn foo(_: String) {}\n \n fn foo2(s: &String) {\n-    foo(s); //~ ERROR mismatched types\n+    foo(s);\n+    //~^ ERROR mismatched types\n }\n \n fn foo3(_: u32) {}\n fn foo4(u: &u32) {\n-    foo3(u); //~ ERROR mismatched types\n+    foo3(u);\n+    //~^ ERROR mismatched types\n }\n \n fn main() {\n     let s = String::new();\n     let r_s = &s;\n     foo2(r_s);\n-    foo(&\"aaa\".to_owned()); //~ ERROR mismatched types\n-    foo(&mut \"aaa\".to_owned()); //~ ERROR mismatched types\n+    foo(&\"aaa\".to_owned());\n+    //~^ ERROR mismatched types\n+    foo(&mut \"aaa\".to_owned());\n+    //~^ ERROR mismatched types\n     foo3(borrow!(0));\n     foo4(&0);\n+    assert_eq!(3i32, &3i32);\n+    //~^ ERROR mismatched types\n }"}, {"sha": "9811c5969dad69ebc7d00ab10c10603cf02f2249", "filename": "src/test/ui/deref-suggestion.stderr", "status": "modified", "additions": 18, "deletions": 8, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/0334ce4488c9b111b7428fadbd95fe354153a968/src%2Ftest%2Fui%2Fderef-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0334ce4488c9b111b7428fadbd95fe354153a968/src%2Ftest%2Fui%2Fderef-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderef-suggestion.stderr?ref=0334ce4488c9b111b7428fadbd95fe354153a968", "patch": "@@ -1,7 +1,7 @@\n error[E0308]: mismatched types\n   --> $DIR/deref-suggestion.rs:18:9\n    |\n-LL |     foo(s); //~ ERROR mismatched types\n+LL |     foo(s);\n    |         ^\n    |         |\n    |         expected struct `std::string::String`, found reference\n@@ -11,9 +11,9 @@ LL |     foo(s); //~ ERROR mismatched types\n               found type `&std::string::String`\n \n error[E0308]: mismatched types\n-  --> $DIR/deref-suggestion.rs:23:10\n+  --> $DIR/deref-suggestion.rs:24:10\n    |\n-LL |     foo3(u); //~ ERROR mismatched types\n+LL |     foo3(u);\n    |          ^\n    |          |\n    |          expected u32, found &u32\n@@ -23,9 +23,9 @@ LL |     foo3(u); //~ ERROR mismatched types\n               found type `&u32`\n \n error[E0308]: mismatched types\n-  --> $DIR/deref-suggestion.rs:30:9\n+  --> $DIR/deref-suggestion.rs:32:9\n    |\n-LL |     foo(&\"aaa\".to_owned()); //~ ERROR mismatched types\n+LL |     foo(&\"aaa\".to_owned());\n    |         ^^^^^^^^^^^^^^^^^\n    |         |\n    |         expected struct `std::string::String`, found reference\n@@ -35,9 +35,9 @@ LL |     foo(&\"aaa\".to_owned()); //~ ERROR mismatched types\n               found type `&std::string::String`\n \n error[E0308]: mismatched types\n-  --> $DIR/deref-suggestion.rs:31:9\n+  --> $DIR/deref-suggestion.rs:34:9\n    |\n-LL |     foo(&mut \"aaa\".to_owned()); //~ ERROR mismatched types\n+LL |     foo(&mut \"aaa\".to_owned());\n    |         ^^^^^^^^^^^^^^^^^^^^^\n    |         |\n    |         expected struct `std::string::String`, found mutable reference\n@@ -58,6 +58,16 @@ LL |     foo3(borrow!(0));\n    = note: expected type `u32`\n               found type `&{integer}`\n \n-error: aborting due to 5 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/deref-suggestion.rs:38:5\n+   |\n+LL |     assert_eq!(3i32, &3i32);\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^ expected i32, found &i32\n+   |\n+   = note: expected type `i32`\n+              found type `&i32`\n+   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}]}