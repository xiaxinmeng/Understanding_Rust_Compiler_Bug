{"sha": "afa6d85d61cbc33e20387d1ba686aae5fc2e0f20", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYTZkODVkNjFjYmMzM2UyMDM4N2QxYmE2ODZhYWU1ZmMyZTBmMjA=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-08T01:01:21Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-08T01:02:01Z"}, "message": "stdlib: Add a simple union-find data structure", "tree": {"sha": "b45eea7cf2e3afe7e51f051de260b9d6bb702342", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b45eea7cf2e3afe7e51f051de260b9d6bb702342"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20", "html_url": "https://github.com/rust-lang/rust/commit/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28a9d8f5203fc01c870ec15b44f8156ebc63168", "url": "https://api.github.com/repos/rust-lang/rust/commits/f28a9d8f5203fc01c870ec15b44f8156ebc63168", "html_url": "https://github.com/rust-lang/rust/commit/f28a9d8f5203fc01c870ec15b44f8156ebc63168"}], "stats": {"total": 43, "additions": 43, "deletions": 0}, "files": [{"sha": "7c955a92ae8e27fede0305cf691c941191ea24a2", "filename": "src/lib/UFind.rs", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20/src%2Flib%2FUFind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20/src%2Flib%2FUFind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2FUFind.rs?ref=afa6d85d61cbc33e20387d1ba686aae5fc2e0f20", "patch": "@@ -0,0 +1,41 @@\n+import option.none;\n+import option.some;\n+\n+// A very naive implementation of union-find with unsigned integer nodes.\n+\n+tag node {\n+    elem(uint, option.t[uint]);\n+}\n+type ufind = rec(mutable vec[mutable node] nodes);\n+\n+fn make() -> ufind {\n+    let vec[mutable node] v = vec(mutable elem(0u, none[uint]));\n+    _vec.pop[mutable node](v);  // FIXME: botch\n+    ret rec(mutable nodes=v);\n+}\n+\n+fn make_set(&ufind ufnd, uint n) {\n+    ufnd.nodes += vec(mutable elem(n, none[uint]));\n+}\n+\n+fn find(&ufind ufnd, uint n) -> uint {\n+    alt (ufnd.nodes.(n)) {\n+        case (elem(_, ?parent_opt)) {\n+            alt (parent_opt) {\n+                case (none[uint]) { ret n; }\n+                case (some[uint](?m)) {\n+                    // TODO: \"be\"\n+                    ret find(ufnd, m);\n+                }\n+            }\n+        }\n+    }\n+}\n+\n+fn union(&ufind ufnd, uint m, uint n) {\n+    auto m_root = find(ufnd, m);\n+    auto n_root = find(ufnd, n);\n+    auto ptr = some[uint](n_root);\n+    ufnd.nodes.(m_root) = elem(m_root, ptr);\n+}\n+"}, {"sha": "b530bd7f598f710fbde491fc9cdf9a07d0fa4f16", "filename": "src/lib/std.rc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20/src%2Flib%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/afa6d85d61cbc33e20387d1ba686aae5fc2e0f20/src%2Flib%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fstd.rc?ref=afa6d85d61cbc33e20387d1ba686aae5fc2e0f20", "patch": "@@ -47,6 +47,7 @@ auth _str.pop_char = impure;\n auth _vec.shift = impure;\n auth _vec.unshift = impure;\n auth _vec.pop = impure;\n+auth UFind.union = impure;\n \n auth dbg = unsafe;\n \n@@ -81,6 +82,7 @@ mod bitv;\n mod sort;\n mod sha1;\n mod ebml;\n+mod UFind;\n \n // Local Variables:\n // mode: rust;"}]}