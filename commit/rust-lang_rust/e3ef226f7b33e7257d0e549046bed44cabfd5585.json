{"sha": "e3ef226f7b33e7257d0e549046bed44cabfd5585", "node_id": "C_kwDOAAsO6NoAKGUzZWYyMjZmN2IzM2U3MjU3ZDBlNTQ5MDQ2YmVkNDRjYWJmZDU1ODU", "commit": {"author": {"name": "Yang Hau", "email": "yuanyanghau@gmail.com", "date": "2023-01-23T04:00:35Z"}, "committer": {"name": "Yang Hau", "email": "yuanyanghau@gmail.com", "date": "2023-01-23T04:00:35Z"}, "message": "Fix the typo", "tree": {"sha": "ad6356357faa52ddb2c7d9df71abfd65d49bd41a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad6356357faa52ddb2c7d9df71abfd65d49bd41a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3ef226f7b33e7257d0e549046bed44cabfd5585", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3ef226f7b33e7257d0e549046bed44cabfd5585", "html_url": "https://github.com/rust-lang/rust/commit/e3ef226f7b33e7257d0e549046bed44cabfd5585", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3ef226f7b33e7257d0e549046bed44cabfd5585/comments", "author": {"login": "howjmay", "id": 13924801, "node_id": "MDQ6VXNlcjEzOTI0ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/13924801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/howjmay", "html_url": "https://github.com/howjmay", "followers_url": "https://api.github.com/users/howjmay/followers", "following_url": "https://api.github.com/users/howjmay/following{/other_user}", "gists_url": "https://api.github.com/users/howjmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/howjmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/howjmay/subscriptions", "organizations_url": "https://api.github.com/users/howjmay/orgs", "repos_url": "https://api.github.com/users/howjmay/repos", "events_url": "https://api.github.com/users/howjmay/events{/privacy}", "received_events_url": "https://api.github.com/users/howjmay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "howjmay", "id": 13924801, "node_id": "MDQ6VXNlcjEzOTI0ODAx", "avatar_url": "https://avatars.githubusercontent.com/u/13924801?v=4", "gravatar_id": "", "url": "https://api.github.com/users/howjmay", "html_url": "https://github.com/howjmay", "followers_url": "https://api.github.com/users/howjmay/followers", "following_url": "https://api.github.com/users/howjmay/following{/other_user}", "gists_url": "https://api.github.com/users/howjmay/gists{/gist_id}", "starred_url": "https://api.github.com/users/howjmay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/howjmay/subscriptions", "organizations_url": "https://api.github.com/users/howjmay/orgs", "repos_url": "https://api.github.com/users/howjmay/repos", "events_url": "https://api.github.com/users/howjmay/events{/privacy}", "received_events_url": "https://api.github.com/users/howjmay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "582239ac3b32007613df04d7ffa78dc30f4c5645", "url": "https://api.github.com/repos/rust-lang/rust/commits/582239ac3b32007613df04d7ffa78dc30f4c5645", "html_url": "https://github.com/rust-lang/rust/commit/582239ac3b32007613df04d7ffa78dc30f4c5645"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fc7d6b781f2f5f50bc3abbc7ff73702e5e3bc774", "filename": "crates/core_simd/src/masks/to_bitmask.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3ef226f7b33e7257d0e549046bed44cabfd5585/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3ef226f7b33e7257d0e549046bed44cabfd5585/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcore_simd%2Fsrc%2Fmasks%2Fto_bitmask.rs?ref=e3ef226f7b33e7257d0e549046bed44cabfd5585", "patch": "@@ -72,7 +72,7 @@ impl_integer_intrinsic! {\n     impl ToBitMask<BitMask=u64> for Mask<_, 64>\n }\n \n-/// Returns the minimum numnber of bytes in a bitmask with `lanes` lanes.\n+/// Returns the minimum number of bytes in a bitmask with `lanes` lanes.\n #[cfg(feature = \"generic_const_exprs\")]\n pub const fn bitmask_len(lanes: usize) -> usize {\n     (lanes + 7) / 8"}]}