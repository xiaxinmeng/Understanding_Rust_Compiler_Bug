{"sha": "2ec7f6c8d54e821303ba5a3da31858dbe009e283", "node_id": "C_kwDOAAsO6NoAKDJlYzdmNmM4ZDU0ZTgyMTMwM2JhNWEzZGEzMTg1OGRiZTAwOWUyODM", "commit": {"author": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2023-03-18T07:23:30Z"}, "committer": {"name": "ozkanonur", "email": "work@onurozkan.dev", "date": "2023-03-18T15:54:52Z"}, "message": "refactor `fn bootstrap::builder::Builder::compiler_for`\n\n- check compiler stage before forcing for stage2.\n- check if download_rustc is not set before forcing for stage1.\n\nSigned-off-by: ozkanonur <work@onurozkan.dev>", "tree": {"sha": "8420a06d2081c0b2ca08d8963f38097cd8274d93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8420a06d2081c0b2ca08d8963f38097cd8274d93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2ec7f6c8d54e821303ba5a3da31858dbe009e283", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2ec7f6c8d54e821303ba5a3da31858dbe009e283", "html_url": "https://github.com/rust-lang/rust/commit/2ec7f6c8d54e821303ba5a3da31858dbe009e283", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2ec7f6c8d54e821303ba5a3da31858dbe009e283/comments", "author": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ozkanonur", "id": 39852038, "node_id": "MDQ6VXNlcjM5ODUyMDM4", "avatar_url": "https://avatars.githubusercontent.com/u/39852038?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ozkanonur", "html_url": "https://github.com/ozkanonur", "followers_url": "https://api.github.com/users/ozkanonur/followers", "following_url": "https://api.github.com/users/ozkanonur/following{/other_user}", "gists_url": "https://api.github.com/users/ozkanonur/gists{/gist_id}", "starred_url": "https://api.github.com/users/ozkanonur/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ozkanonur/subscriptions", "organizations_url": "https://api.github.com/users/ozkanonur/orgs", "repos_url": "https://api.github.com/users/ozkanonur/repos", "events_url": "https://api.github.com/users/ozkanonur/events{/privacy}", "received_events_url": "https://api.github.com/users/ozkanonur/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0058748944abb3282aba0e0a74823c6411703565", "url": "https://api.github.com/repos/rust-lang/rust/commits/0058748944abb3282aba0e0a74823c6411703565", "html_url": "https://github.com/rust-lang/rust/commit/0058748944abb3282aba0e0a74823c6411703565"}], "stats": {"total": 17, "additions": 9, "deletions": 8}, "files": [{"sha": "c68452db0aff6f75d407266d4befaac2a47fcbad", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2ec7f6c8d54e821303ba5a3da31858dbe009e283/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec7f6c8d54e821303ba5a3da31858dbe009e283/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2ec7f6c8d54e821303ba5a3da31858dbe009e283", "patch": "@@ -919,9 +919,9 @@ impl<'a> Builder<'a> {\n         host: TargetSelection,\n         target: TargetSelection,\n     ) -> Compiler {\n-        if self.build.force_use_stage2() {\n+        if self.build.force_use_stage2(stage) {\n             self.compiler(2, self.config.build)\n-        } else if self.build.force_use_stage1(Compiler { stage, host }, target) {\n+        } else if self.build.force_use_stage1(stage, target) {\n             self.compiler(1, self.config.build)\n         } else {\n             self.compiler(stage, host)"}, {"sha": "e4b4192cf0882aef36cc1774b0eef844cdfdbb6a", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/2ec7f6c8d54e821303ba5a3da31858dbe009e283/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2ec7f6c8d54e821303ba5a3da31858dbe009e283/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=2ec7f6c8d54e821303ba5a3da31858dbe009e283", "patch": "@@ -1198,19 +1198,20 @@ impl Build {\n     ///\n     /// When all of these conditions are met the build will lift artifacts from\n     /// the previous stage forward.\n-    fn force_use_stage1(&self, compiler: Compiler, target: TargetSelection) -> bool {\n+    fn force_use_stage1(&self, stage: u32, target: TargetSelection) -> bool {\n         !self.config.full_bootstrap\n-            && compiler.stage >= 2\n+            && !self.config.download_rustc()\n+            && stage >= 2\n             && (self.hosts.iter().any(|h| *h == target) || target == self.build)\n     }\n \n     /// Checks whether the `compiler` compiling for `target` should be forced to\n     /// use a stage2 compiler instead.\n     ///\n-    /// When we download the pre-compiled version of rustc it should be forced to\n-    /// use a stage2 compiler.\n-    fn force_use_stage2(&self) -> bool {\n-        self.config.download_rustc()\n+    /// When we download the pre-compiled version of rustc and compiler stage is >= 2,\n+    /// it should be forced to use a stage2 compiler.\n+    fn force_use_stage2(&self, stage: u32) -> bool {\n+        self.config.download_rustc() && stage >= 2\n     }\n \n     /// Given `num` in the form \"a.b.c\" return a \"release string\" which"}]}