{"sha": "ba72308588e50b7e8a514b7b83946e5ec3cf2e96", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhNzIzMDg1ODhlNTBiN2U4YTUxNGI3YjgzOTQ2ZTVlYzNjZjJlOTY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-19T18:00:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-19T18:00:20Z"}, "message": "simplify\n\nchangelog skip", "tree": {"sha": "d89117cd0c0cc7f79482086881b11d5eee6973c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d89117cd0c0cc7f79482086881b11d5eee6973c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba72308588e50b7e8a514b7b83946e5ec3cf2e96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba72308588e50b7e8a514b7b83946e5ec3cf2e96", "html_url": "https://github.com/rust-lang/rust/commit/ba72308588e50b7e8a514b7b83946e5ec3cf2e96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba72308588e50b7e8a514b7b83946e5ec3cf2e96/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a61691026a169a17f62de9de6ebab197faa7c703", "url": "https://api.github.com/repos/rust-lang/rust/commits/a61691026a169a17f62de9de6ebab197faa7c703", "html_url": "https://github.com/rust-lang/rust/commit/a61691026a169a17f62de9de6ebab197faa7c703"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "b5dec801479ff78d3ac38323bbcbdb120153453a", "filename": "crates/ide_assists/src/handlers/move_bounds.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ba72308588e50b7e8a514b7b83946e5ec3cf2e96/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba72308588e50b7e8a514b7b83946e5ec3cf2e96/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fmove_bounds.rs?ref=ba72308588e50b7e8a514b7b83946e5ec3cf2e96", "patch": "@@ -50,8 +50,8 @@ pub(crate) fn move_bounds_to_where_clause(acc: &mut Assists, ctx: &AssistContext\n \n             for type_param in type_param_list.type_params() {\n                 if let Some(tbl) = type_param.type_bound_list() {\n-                    if let Some(predicate) = build_predicate(type_param.clone()) {\n-                        where_clause.add_predicate(predicate.clone_for_update())\n+                    if let Some(predicate) = build_predicate(type_param) {\n+                        where_clause.add_predicate(predicate)\n                     }\n                     tbl.remove()\n                 }\n@@ -69,7 +69,7 @@ fn build_predicate(param: ast::TypeParam) -> Option<ast::WherePred> {\n         make::path_unqualified(segment)\n     };\n     let predicate = make::where_pred(path, param.type_bound_list()?.bounds());\n-    Some(predicate)\n+    Some(predicate.clone_for_update())\n }\n \n #[cfg(test)]"}]}