{"sha": "6a436aaabfa81d5f5030e128aea1705aa940d0b3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNDM2YWFhYmZhODFkNWY1MDMwZTEyOGFlYTE3MDVhYTk0MGQwYjM=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-04-03T15:19:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-03T15:19:38Z"}, "message": "Rollup merge of #83787 - digama0:patch-1, r=bjorn3\n\nMonomorphization doc fix\n\nOnly public items are monomorphization roots. This can be confirmed by noting that this program compiles:\n```rust\nfn foo<T>() { if true { foo::<Option<T>>() } }\nfn bar() { foo::<()>() }\n```\nSee also the [zulip thread](https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Why.20are.20non.20public.20items.20monomorphization.20roots.3F).", "tree": {"sha": "430145735fdf34fb34dcc1c80826489b5e5ef6c0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/430145735fdf34fb34dcc1c80826489b5e5ef6c0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a436aaabfa81d5f5030e128aea1705aa940d0b3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgaIeKCRBK7hj4Ov3rIwAAdHIIADGGDHkFRMyGglJuAoLW/1H9\nHX4AgzGiOCQs6vv7OQcpp0idu+WLvE2wCo6xj0vfavtrhuzcAweJiT98j9IvxjPQ\nUoEvMeK9BuVyRNmCH8voku90yUxeLuHORXDtMtrnkBPi6RhdtrrALTTZhkMJ6xuM\nqzc/YeZUZNCQ0L/7vRy+JXHRQn/62AZI/LLcvS1p/5PBVEU2ha3T11wzC0tbAEBv\nMO/tiOX1DSHUOSrescyRV7xPvf+040lAfgzKa3Yhqzx99CwJSVh06p2OVJcADNP0\n2RRSTGK8y1tGYJN5w7nIpfoDBBBJhPy9cKrPhkX75VzURal2fOtXLOp7pMBLWt8=\n=qa0w\n-----END PGP SIGNATURE-----\n", "payload": "tree 430145735fdf34fb34dcc1c80826489b5e5ef6c0\nparent 961fa632d678362b303678e6b36b93764fd63322\nparent 99f3e889b1dd3fca8a6ac8d32b6bdcc444dd333a\nauthor Yuki Okushi <jtitor@2k36.org> 1617463178 +0900\ncommitter GitHub <noreply@github.com> 1617463178 +0900\n\nRollup merge of #83787 - digama0:patch-1, r=bjorn3\n\nMonomorphization doc fix\n\nOnly public items are monomorphization roots. This can be confirmed by noting that this program compiles:\n```rust\nfn foo<T>() { if true { foo::<Option<T>>() } }\nfn bar() { foo::<()>() }\n```\nSee also the [zulip thread](https://rust-lang.zulipchat.com/#narrow/stream/131828-t-compiler/topic/Why.20are.20non.20public.20items.20monomorphization.20roots.3F).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a436aaabfa81d5f5030e128aea1705aa940d0b3", "html_url": "https://github.com/rust-lang/rust/commit/6a436aaabfa81d5f5030e128aea1705aa940d0b3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a436aaabfa81d5f5030e128aea1705aa940d0b3/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "961fa632d678362b303678e6b36b93764fd63322", "url": "https://api.github.com/repos/rust-lang/rust/commits/961fa632d678362b303678e6b36b93764fd63322", "html_url": "https://github.com/rust-lang/rust/commit/961fa632d678362b303678e6b36b93764fd63322"}, {"sha": "99f3e889b1dd3fca8a6ac8d32b6bdcc444dd333a", "url": "https://api.github.com/repos/rust-lang/rust/commits/99f3e889b1dd3fca8a6ac8d32b6bdcc444dd333a", "html_url": "https://github.com/rust-lang/rust/commit/99f3e889b1dd3fca8a6ac8d32b6bdcc444dd333a"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "1fda71d74bbf5a1a100f8a62527625fe5e8b4c46", "filename": "compiler/rustc_mir/src/monomorphize/collector.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6a436aaabfa81d5f5030e128aea1705aa940d0b3/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a436aaabfa81d5f5030e128aea1705aa940d0b3/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Fmonomorphize%2Fcollector.rs?ref=6a436aaabfa81d5f5030e128aea1705aa940d0b3", "patch": "@@ -59,11 +59,15 @@\n //!\n //! ### Discovering roots\n //!\n-//! The roots of the mono item graph correspond to the non-generic\n+//! The roots of the mono item graph correspond to the public non-generic\n //! syntactic items in the source code. We find them by walking the HIR of the\n-//! crate, and whenever we hit upon a function, method, or static item, we\n-//! create a mono item consisting of the items DefId and, since we only\n-//! consider non-generic items, an empty type-substitution set.\n+//! crate, and whenever we hit upon a public function, method, or static item,\n+//! we create a mono item consisting of the items DefId and, since we only\n+//! consider non-generic items, an empty type-substitution set. (In eager\n+//! collection mode, during incremental compilation, all non-generic functions\n+//! are considered as roots, as well as when the `-Clink-dead-code` option is\n+//! specified. Functions marked `#[no_mangle]` and functions called by inlinable\n+//! functions also always act as roots.)\n //!\n //! ### Finding neighbor nodes\n //! Given a mono item node, we can discover neighbors by inspecting its"}]}