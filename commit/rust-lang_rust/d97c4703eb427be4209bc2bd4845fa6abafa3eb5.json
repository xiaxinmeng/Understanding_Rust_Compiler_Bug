{"sha": "d97c4703eb427be4209bc2bd4845fa6abafa3eb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5N2M0NzAzZWI0MjdiZTQyMDliYzJiZDQ4NDVmYTZhYmFmYTNlYjU=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-22T00:09:20Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2020-08-23T21:53:53Z"}, "message": "linkcheckr: fix clippy::redundant_static_lifetimes and clippy::single_char_pattern", "tree": {"sha": "951be982f0f7a58fe7f7b9adb2339ffb9ea4d7e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/951be982f0f7a58fe7f7b9adb2339ffb9ea4d7e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d97c4703eb427be4209bc2bd4845fa6abafa3eb5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d97c4703eb427be4209bc2bd4845fa6abafa3eb5", "html_url": "https://github.com/rust-lang/rust/commit/d97c4703eb427be4209bc2bd4845fa6abafa3eb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d97c4703eb427be4209bc2bd4845fa6abafa3eb5/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c6362a19c9c80c25cbefd910427f3b99b0d6f2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c6362a19c9c80c25cbefd910427f3b99b0d6f2a", "html_url": "https://github.com/rust-lang/rust/commit/7c6362a19c9c80c25cbefd910427f3b99b0d6f2a"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "b7ceba1e28262ff6a7f36e72e8a6cc5a1ce32fc6", "filename": "src/tools/linkchecker/main.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d97c4703eb427be4209bc2bd4845fa6abafa3eb5/src%2Ftools%2Flinkchecker%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d97c4703eb427be4209bc2bd4845fa6abafa3eb5/src%2Ftools%2Flinkchecker%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Flinkchecker%2Fmain.rs?ref=d97c4703eb427be4209bc2bd4845fa6abafa3eb5", "patch": "@@ -172,10 +172,10 @@ fn check(cache: &mut Cache, root: &Path, file: &Path, errors: &mut bool) -> Opti\n         {\n             return;\n         }\n-        let mut parts = url.splitn(2, \"#\");\n+        let mut parts = url.splitn(2, '#');\n         let url = parts.next().unwrap();\n         let fragment = parts.next();\n-        let mut parts = url.splitn(2, \"?\");\n+        let mut parts = url.splitn(2, '?');\n         let url = parts.next().unwrap();\n \n         // Once we've plucked out the URL, parse it using our base url and\n@@ -258,7 +258,7 @@ fn check(cache: &mut Cache, root: &Path, file: &Path, errors: &mut bool) -> Opti\n                 }\n \n                 // These appear to be broken in mdbook right now?\n-                if fragment.starts_with(\"-\") {\n+                if fragment.starts_with('-') {\n                     return;\n                 }\n \n@@ -324,7 +324,7 @@ fn load_file(\n }\n \n fn maybe_redirect(source: &str) -> Option<String> {\n-    const REDIRECT: &'static str = \"<p>Redirecting to <a href=\";\n+    const REDIRECT: &str = \"<p>Redirecting to <a href=\";\n \n     let mut lines = source.lines();\n     let redirect_line = lines.nth(6)?;\n@@ -345,11 +345,11 @@ fn with_attrs_in_source<F: FnMut(&str, usize, &str)>(contents: &str, attr: &str,\n             // we can get away with using one pass.\n             let is_base = line[..j].ends_with(\"<base\");\n             line = rest;\n-            let pos_equals = match rest.find(\"=\") {\n+            let pos_equals = match rest.find('=') {\n                 Some(i) => i,\n                 None => continue,\n             };\n-            if rest[..pos_equals].trim_start_matches(\" \") != \"\" {\n+            if rest[..pos_equals].trim_start_matches(' ') != \"\" {\n                 continue;\n             }\n \n@@ -361,7 +361,7 @@ fn with_attrs_in_source<F: FnMut(&str, usize, &str)>(contents: &str, attr: &str,\n             };\n             let quote_delim = rest.as_bytes()[pos_quote] as char;\n \n-            if rest[..pos_quote].trim_start_matches(\" \") != \"\" {\n+            if rest[..pos_quote].trim_start_matches(' ') != \"\" {\n                 continue;\n             }\n             let rest = &rest[pos_quote + 1..];"}]}