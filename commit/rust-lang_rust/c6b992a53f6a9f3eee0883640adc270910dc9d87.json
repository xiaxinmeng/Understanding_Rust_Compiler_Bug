{"sha": "c6b992a53f6a9f3eee0883640adc270910dc9d87", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2Yjk5MmE1M2Y2YTlmM2VlZTA4ODM2NDBhZGMyNzA5MTBkYzlkODc=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2014-07-27T15:01:19Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "arielb1@mail.tau.ac.il", "date": "2014-07-27T15:01:19Z"}, "message": "Remove an unneeded FIXME in coherence.rs\n\nAlso, let f; f = ...; is just wrong.", "tree": {"sha": "44b85515b008d292727ad24bc3b1003f2a8e7dce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44b85515b008d292727ad24bc3b1003f2a8e7dce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c6b992a53f6a9f3eee0883640adc270910dc9d87", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b992a53f6a9f3eee0883640adc270910dc9d87", "html_url": "https://github.com/rust-lang/rust/commit/c6b992a53f6a9f3eee0883640adc270910dc9d87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c6b992a53f6a9f3eee0883640adc270910dc9d87/comments", "author": null, "committer": null, "parents": [{"sha": "e0d10bb69ab04ab041b39c71f7537d8c63ef9669", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0d10bb69ab04ab041b39c71f7537d8c63ef9669", "html_url": "https://github.com/rust-lang/rust/commit/e0d10bb69ab04ab041b39c71f7537d8c63ef9669"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "fdf9125e6e14d2cca5a46993ff394bf9d93569c8", "filename": "src/librustc/middle/typeck/coherence.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c6b992a53f6a9f3eee0883640adc270910dc9d87/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c6b992a53f6a9f3eee0883640adc270910dc9d87/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fcoherence.rs?ref=c6b992a53f6a9f3eee0883640adc270910dc9d87", "patch": "@@ -60,29 +60,25 @@ fn get_base_type(inference_context: &InferCtxt,\n                  span: Span,\n                  original_type: t)\n                  -> Option<t> {\n-    let resolved_type;\n-    match resolve_type(inference_context,\n-                       Some(span),\n-                       original_type,\n-                       resolve_ivar) {\n-        Ok(resulting_type) if !type_is_ty_var(resulting_type) => {\n-            resolved_type = resulting_type;\n-        }\n+    let resolved_type = match resolve_type(inference_context,\n+                                           Some(span),\n+                                           original_type,\n+                                           resolve_ivar) {\n+        Ok(resulting_type) if !type_is_ty_var(resulting_type) => resulting_type,\n         _ => {\n             inference_context.tcx.sess.span_fatal(span,\n                                                   \"the type of this value must be known in order \\\n                                                    to determine the base type\");\n         }\n-    }\n+    };\n \n     match get(resolved_type).sty {\n         ty_enum(..) | ty_struct(..) | ty_unboxed_closure(..) => {\n             debug!(\"(getting base type) found base type\");\n             Some(resolved_type)\n         }\n-        // FIXME(14865) I would prefere to use `_` here, but that causes a\n-        // compiler error.\n-        ty_uniq(_) | ty_rptr(_, _) | ty_trait(..) if ty::type_is_trait(resolved_type) => {\n+\n+        _ if ty::type_is_trait(resolved_type) => {\n             debug!(\"(getting base type) found base type (trait)\");\n             Some(resolved_type)\n         }"}]}