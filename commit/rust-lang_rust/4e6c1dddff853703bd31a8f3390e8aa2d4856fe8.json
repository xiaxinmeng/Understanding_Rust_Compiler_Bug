{"sha": "4e6c1dddff853703bd31a8f3390e8aa2d4856fe8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNmMxZGRkZmY4NTM3MDNiZDMxYThmMzM5MGU4YWEyZDQ4NTZmZTg=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-08-02T03:46:59Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2017-08-02T03:46:59Z"}, "message": "save-analysis: only emit public fields in value of a struct if the config permits", "tree": {"sha": "b6ae5d2e2e885cce83c42bf22e82e616f5474f1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ae5d2e2e885cce83c42bf22e82e616f5474f1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e6c1dddff853703bd31a8f3390e8aa2d4856fe8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e6c1dddff853703bd31a8f3390e8aa2d4856fe8", "html_url": "https://github.com/rust-lang/rust/commit/4e6c1dddff853703bd31a8f3390e8aa2d4856fe8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e6c1dddff853703bd31a8f3390e8aa2d4856fe8/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "640cfc852ae17d51a2f5e75fcae9a93431a3b38c", "url": "https://api.github.com/repos/rust-lang/rust/commits/640cfc852ae17d51a2f5e75fcae9a93431a3b38c", "html_url": "https://github.com/rust-lang/rust/commit/640cfc852ae17d51a2f5e75fcae9a93431a3b38c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "4cfd570adead41a3529762bb7ece34848f5fe969", "filename": "src/librustc_save_analysis/dump_visitor.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4e6c1dddff853703bd31a8f3390e8aa2d4856fe8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e6c1dddff853703bd31a8f3390e8aa2d4856fe8/src%2Flibrustc_save_analysis%2Fdump_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_save_analysis%2Fdump_visitor.rs?ref=4e6c1dddff853703bd31a8f3390e8aa2d4856fe8", "patch": "@@ -560,14 +560,20 @@ impl<'l, 'tcx: 'l, 'll, O: DumpOutput + 'll> DumpVisitor<'l, 'tcx, 'll, O> {\n         let (value, fields) =\n             if let ast::ItemKind::Struct(ast::VariantData::Struct(ref fields, _), _) = item.node\n         {\n+            let include_priv_fields = !self.save_ctxt.config.pub_only;\n             let fields_str = fields.iter()\n                                    .enumerate()\n-                                   .map(|(i, f)| f.ident.map(|i| i.to_string())\n-                                                  .unwrap_or(i.to_string()))\n+                                   .filter_map(|(i, f)| {\n+                                        if include_priv_fields || f.vis == ast::Visibility::Public {\n+                                            f.ident.map(|i| i.to_string()).or_else(|| Some(i.to_string()))\n+                                        } else {\n+                                            None\n+                                        }\n+                                   })\n                                    .collect::<Vec<_>>()\n                                    .join(\", \");\n-            (format!(\"{} {{ {} }}\", name, fields_str),\n-             fields.iter().map(|f| ::id_from_node_id(f.id, &self.save_ctxt)).collect())\n+            let value = format!(\"{} {{ {} }}\", name, fields_str);\n+            (value, fields.iter().map(|f| ::id_from_node_id(f.id, &self.save_ctxt)).collect())\n         } else {\n             (String::new(), vec![])\n         };"}]}