{"sha": "54b0e07061c83fca38642294adf25a3294fcf8d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0YjBlMDcwNjFjODNmY2EzODY0MjI5NGFkZjI1YTMyOTRmY2Y4ZDM=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-04-17T09:43:33Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-03T09:30:14Z"}, "message": "Add LLVM bin directory to PATH for running run-make tests.", "tree": {"sha": "82e8d4beff509ec2aedeaabbf441215a908c0891", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82e8d4beff509ec2aedeaabbf441215a908c0891"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54b0e07061c83fca38642294adf25a3294fcf8d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54b0e07061c83fca38642294adf25a3294fcf8d3", "html_url": "https://github.com/rust-lang/rust/commit/54b0e07061c83fca38642294adf25a3294fcf8d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54b0e07061c83fca38642294adf25a3294fcf8d3/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98bf62a109bd7d7071e5d3b8f35186cf33124722", "url": "https://api.github.com/repos/rust-lang/rust/commits/98bf62a109bd7d7071e5d3b8f35186cf33124722", "html_url": "https://github.com/rust-lang/rust/commit/98bf62a109bd7d7071e5d3b8f35186cf33124722"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "23b701af846141482c321cba134c8ffb9dc0a7ab", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/54b0e07061c83fca38642294adf25a3294fcf8d3/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54b0e07061c83fca38642294adf25a3294fcf8d3/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=54b0e07061c83fca38642294adf25a3294fcf8d3", "patch": "@@ -1019,7 +1019,7 @@ impl Step for Compiletest {\n \n             // Only pass correct values for these flags for the `run-make` suite as it\n             // requires that a C++ compiler was configured which isn't always the case.\n-            if !builder.config.dry_run && suite == \"run-make-fulldeps\" {\n+            if !builder.config.dry_run && mode == \"run-make\" {\n                 let llvm_components = output(Command::new(&llvm_config).arg(\"--components\"));\n                 let llvm_cxxflags = output(Command::new(&llvm_config).arg(\"--cxxflags\"));\n                 cmd.arg(\"--cc\").arg(builder.cc(target))\n@@ -1030,15 +1030,26 @@ impl Step for Compiletest {\n                 if let Some(ar) = builder.ar(target) {\n                     cmd.arg(\"--ar\").arg(ar);\n                 }\n+\n+                // Add the llvm/bin directory to PATH since it contains lots of\n+                // useful, platform-independent tools\n+                let llvm_bin_path = llvm_config.parent()\n+                    .expect(\"Expected llvm-config to be contained in directory\");\n+                assert!(llvm_bin_path.is_dir());\n+                let old_path = env::var_os(\"PATH\").unwrap_or_default();\n+                let new_path = env::join_paths(iter::once(llvm_bin_path.to_path_buf())\n+                                               .chain(env::split_paths(&old_path)))\n+                               .expect(\"\");\n+                cmd.env(\"PATH\", new_path);\n             }\n         }\n-        if suite == \"run-make-fulldeps\" && !builder.config.llvm_enabled {\n+        if mode == \"run-make\" && !builder.config.llvm_enabled {\n             builder.info(\n                 &format!(\"Ignoring run-make test suite as they generally don't work without LLVM\"));\n             return;\n         }\n \n-        if suite != \"run-make-fulldeps\" {\n+        if mode != \"run-make\" {\n             cmd.arg(\"--cc\").arg(\"\")\n                .arg(\"--cxx\").arg(\"\")\n                .arg(\"--cflags\").arg(\"\")"}, {"sha": "8cd1fde05d43966b33ae76a4df73205799e00a98", "filename": "src/test/run-make/cross-lang-lto/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54b0e07061c83fca38642294adf25a3294fcf8d3/src%2Ftest%2Frun-make%2Fcross-lang-lto%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/54b0e07061c83fca38642294adf25a3294fcf8d3/src%2Ftest%2Frun-make%2Fcross-lang-lto%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcross-lang-lto%2FMakefile?ref=54b0e07061c83fca38642294adf25a3294fcf8d3", "patch": "@@ -11,7 +11,7 @@ ifeq ($(UNAME),Darwin)\n endif\n \n \n-OBJDUMP=$(HOST_RPATH_DIR)/../../llvm/bin/llvm-objdump\n+OBJDUMP=llvm-objdump\n SECTION_HEADERS=$(OBJDUMP) -section-headers\n \n BUILD_LIB=$(RUSTC) lib.rs -Copt-level=2 -Z cross-lang-lto -Ccodegen-units=1"}]}