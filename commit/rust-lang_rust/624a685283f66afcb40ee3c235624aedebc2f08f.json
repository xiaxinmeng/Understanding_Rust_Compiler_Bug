{"sha": "624a685283f66afcb40ee3c235624aedebc2f08f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyNGE2ODUyODNmNjZhZmNiNDBlZTNjMjM1NjI0YWVkZWJjMmYwOGY=", "commit": {"author": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-03-22T01:04:13Z"}, "committer": {"name": "Marvin L\u00f6bel", "email": "loebel.marvin@gmail.com", "date": "2013-03-26T13:59:17Z"}, "message": "Moved float str buffer constants to the strconv module", "tree": {"sha": "dc110ba3ff7af4a215e78041aff5cc9185a54f54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc110ba3ff7af4a215e78041aff5cc9185a54f54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/624a685283f66afcb40ee3c235624aedebc2f08f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/624a685283f66afcb40ee3c235624aedebc2f08f", "html_url": "https://github.com/rust-lang/rust/commit/624a685283f66afcb40ee3c235624aedebc2f08f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/624a685283f66afcb40ee3c235624aedebc2f08f/comments", "author": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kimundi", "id": 2903206, "node_id": "MDQ6VXNlcjI5MDMyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2903206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kimundi", "html_url": "https://github.com/Kimundi", "followers_url": "https://api.github.com/users/Kimundi/followers", "following_url": "https://api.github.com/users/Kimundi/following{/other_user}", "gists_url": "https://api.github.com/users/Kimundi/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kimundi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kimundi/subscriptions", "organizations_url": "https://api.github.com/users/Kimundi/orgs", "repos_url": "https://api.github.com/users/Kimundi/repos", "events_url": "https://api.github.com/users/Kimundi/events{/privacy}", "received_events_url": "https://api.github.com/users/Kimundi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51eb7dc8a719f6ae05a563109b3bbccee319263e", "url": "https://api.github.com/repos/rust-lang/rust/commits/51eb7dc8a719f6ae05a563109b3bbccee319263e", "html_url": "https://github.com/rust-lang/rust/commit/51eb7dc8a719f6ae05a563109b3bbccee319263e"}], "stats": {"total": 21, "additions": 10, "deletions": 11}, "files": [{"sha": "e73a4a2ccaa499672e9d2e40c0745f84596fc201", "filename": "src/libcore/num/strconv.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/624a685283f66afcb40ee3c235624aedebc2f08f/src%2Flibcore%2Fnum%2Fstrconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/624a685283f66afcb40ee3c235624aedebc2f08f/src%2Flibcore%2Fnum%2Fstrconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fstrconv.rs?ref=624a685283f66afcb40ee3c235624aedebc2f08f", "patch": "@@ -130,6 +130,13 @@ impl_NumStrConv_Integer!(u16)\n impl_NumStrConv_Integer!(u32)\n impl_NumStrConv_Integer!(u64)\n \n+\n+// Special value strings as [u8] consts.\n+const inf_buf:          [u8*3] = ['i' as u8, 'n' as u8, 'f' as u8];\n+const positive_inf_buf: [u8*4] = ['+' as u8, 'i' as u8, 'n' as u8, 'f' as u8];\n+const negative_inf_buf: [u8*4] = ['-' as u8, 'i' as u8, 'n' as u8, 'f' as u8];\n+const nan_buf:          [u8*3] = ['N' as u8, 'a' as u8, 'N' as u8];\n+\n /**\n  * Converts a number to its string representation as a byte vector.\n  * This is meant to be a common base implementation for all numeric string\n@@ -479,15 +486,15 @@ pub fn from_str_bytes_common<T:NumCast+Zero+One+Ord+Copy+Div<T,T>+\n     }\n \n     if special {\n-        if buf == str::inf_buf || buf == str::positive_inf_buf {\n+        if buf == inf_buf || buf == positive_inf_buf {\n             return NumStrConv::inf();\n-        } else if buf == str::negative_inf_buf {\n+        } else if buf == negative_inf_buf {\n             if negative {\n                 return NumStrConv::neg_inf();\n             } else {\n                 return None;\n             }\n-        } else if buf == str::nan_buf {\n+        } else if buf == nan_buf {\n             return NumStrConv::NaN();\n         }\n     }"}, {"sha": "e91120e779044c0dc4e0b3a3c7224b9b96e58ec1", "filename": "src/libcore/str.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/624a685283f66afcb40ee3c235624aedebc2f08f/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/624a685283f66afcb40ee3c235624aedebc2f08f/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=624a685283f66afcb40ee3c235624aedebc2f08f", "patch": "@@ -1919,14 +1919,6 @@ static tag_five_b: uint = 248u;\n static max_five_b: uint = 67108864u;\n static tag_six_b: uint = 252u;\n \n-// Constants used for converting strs to floats\n-pub static inf_buf: [u8*3] = ['i' as u8, 'n' as u8, 'f' as u8];\n-pub static positive_inf_buf: [u8*4] = ['+' as u8, 'i' as u8,\n-                                       'n' as u8, 'f' as u8];\n-pub static negative_inf_buf: [u8*4] = ['-' as u8, 'i' as u8,\n-                                       'n' as u8, 'f' as u8];\n-pub static nan_buf: [u8*3] = ['N' as u8, 'a' as u8, 'N' as u8];\n-\n /**\n  * Work with the byte buffer of a string.\n  *"}]}