{"sha": "65ed80339b52bae26457f5c19dc9861bd7de643e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY1ZWQ4MDMzOWI1MmJhZTI2NDU3ZjVjMTlkYzk4NjFiZDdkZTY0M2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-08T11:28:53Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-08T11:28:53Z"}, "message": "auto merge of #7568 : alexcrichton/rust/check-lite, r=huonw\n\nA lot of cross-platform issues stem from rusti/rustpkg, so include these two test suites in the 'check-lite' target which is run on the cross-compile bots. It shouldn't be much of a performance hit because these suites are pretty fast to run.\r\n\r\nHopefully this will make snapshot/tarball creation easier in the future.", "tree": {"sha": "2cb9612e8c959423ead8171f688daa637efb2ed0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2cb9612e8c959423ead8171f688daa637efb2ed0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65ed80339b52bae26457f5c19dc9861bd7de643e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65ed80339b52bae26457f5c19dc9861bd7de643e", "html_url": "https://github.com/rust-lang/rust/commit/65ed80339b52bae26457f5c19dc9861bd7de643e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65ed80339b52bae26457f5c19dc9861bd7de643e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "48ad726f2abc90fe62cdf239bc1c9318261a6926", "url": "https://api.github.com/repos/rust-lang/rust/commits/48ad726f2abc90fe62cdf239bc1c9318261a6926", "html_url": "https://github.com/rust-lang/rust/commit/48ad726f2abc90fe62cdf239bc1c9318261a6926"}, {"sha": "d49acef07be04a2d32021dd1edadcf76582eda2c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d49acef07be04a2d32021dd1edadcf76582eda2c", "html_url": "https://github.com/rust-lang/rust/commit/d49acef07be04a2d32021dd1edadcf76582eda2c"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "6b6f515ce2b5af9295621783f6bec5323762e74b", "filename": "mk/tests.mk", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/65ed80339b52bae26457f5c19dc9861bd7de643e/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/65ed80339b52bae26457f5c19dc9861bd7de643e/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=65ed80339b52bae26457f5c19dc9861bd7de643e", "patch": "@@ -15,7 +15,7 @@\n \n # The names of crates that must be tested\n TEST_TARGET_CRATES = std extra\n-TEST_HOST_CRATES = syntax rustc rustdoc rust rustpkg\n+TEST_HOST_CRATES = syntax rustc rustdoc rust rustpkg rusti\n TEST_CRATES = $(TEST_TARGET_CRATES) $(TEST_HOST_CRATES)\n \n # Markdown files under doc/ that should have their code extracted and run\n@@ -157,6 +157,7 @@ check-test: cleantestlibs cleantmptestlogs all check-stage2-rfail\n \n check-lite: cleantestlibs cleantmptestlogs \\\n \tcheck-stage2-std check-stage2-extra check-stage2-rpass \\\n+\tcheck-stage2-rustpkg check-stage2-rusti \\\n \tcheck-stage2-rfail check-stage2-cfail\n \t$(Q)$(CFG_PYTHON) $(S)src/etc/check-summary.py tmp/*.log\n "}, {"sha": "473f2e5747911eea8e587cf59ee926a2a2a01c88", "filename": "src/librusti/rusti.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/65ed80339b52bae26457f5c19dc9861bd7de643e/src%2Flibrusti%2Frusti.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65ed80339b52bae26457f5c19dc9861bd7de643e/src%2Flibrusti%2Frusti.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrusti%2Frusti.rs?ref=65ed80339b52bae26457f5c19dc9861bd7de643e", "patch": "@@ -530,7 +530,8 @@ mod tests {\n \n     // FIXME: #7220 rusti on 32bit mac doesn't work.\n     // FIXME: #7641 rusti on 32bit linux cross compile doesn't work\n-    #[cfg(not(target_word_size=\"32\"))]\n+    // FIXME: #7115 re-enable once LLVM has been upgraded\n+    #[cfg(thiswillneverbeacfgflag)]\n     fn run_program(prog: &str) {\n         let mut r = repl();\n         for prog.split_iter('\\n').advance |cmd| {\n@@ -539,7 +540,6 @@ mod tests {\n             r = result.expect(fmt!(\"the command '%s' failed\", cmd));\n         }\n     }\n-    #[cfg(target_word_size=\"32\")]\n     fn run_program(_: &str) {}\n \n     #[test]"}]}