{"sha": "9839e5fa103d117cbdb936e8594ba832e1eeb320", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4MzllNWZhMTAzZDExN2NiZGI5MzZlODU5NGJhODMyZTFlZWIzMjA=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-22T14:05:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2018-03-22T14:05:12Z"}, "message": "Remove slow HashSet during miri stack frame creation", "tree": {"sha": "b472906ba535b8748513f28b1dc43d29752ba227", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b472906ba535b8748513f28b1dc43d29752ba227"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9839e5fa103d117cbdb936e8594ba832e1eeb320", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlqzuBgACgkQpp+NIls6\n19nBHw//VUZdPI8Dfq2pfiqYGndLnyp3dJO+6rRoE6aVHAPmu0BroiMoiz2JaSlK\nUdFNqFf3WcY+Bgqe7Ut/BXH7m5rDf7TkDfOcOc3vc8UAfNy3zOb5q/cm97WWLwCW\nVEId64v8s0DPAGgR3EnTXN6mAY2CpaXeVO/shFg4mKm+61we1nHARORwEealiGDJ\nNziVUik44hn/2sMRoo1lpyGtXqvF11ctH2zYTCmDqm57eDcjmEiAuKIQiWCjn2Jh\n8nXY9DYLSMwMSUxYNCz4QiJxiRENsbldygtpEgxDmE1rtu4lxvAaA5137HGgZwCl\naxCDCn7c19CzaGZowl5V6QV5h3PzMYEHgoYoxIKbKFUq0M7EGCWYYRSxQTIfdviy\nn3uX34UiTvrcYWpnpSvuNZgzVeOwQYXl664Oc1Mt3dnHYrsfE5X+k0dobyFkQpRl\nnoazjfFjWf89inSvFHOGjfaOij3ZkxfFSGUr7QF0rJ2S6vEGEVRHHQvEWTpCzEzc\n6yoncZyEO4vmhWZ3FF5KXjUGpKmpIajQATxezzhSxhs2UgMJsG9K1NZ3TvuiihA/\nuXqPcCz1hSN89pq85I9J/fOOe+rOZ3AkP/UcNt3zoC/+xIMdDoNEyy3r4cCLTvCw\nJD3Yi2GGQQu41O9rtcgteUPrsMQ1WQeYSk5cQyyeUMqwlotAMQQ=\n=yj2W\n-----END PGP SIGNATURE-----", "payload": "tree b472906ba535b8748513f28b1dc43d29752ba227\nparent b176285ba775f86301040fc624acb96b4499f562\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1521727512 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1521727512 +0100\n\nRemove slow HashSet during miri stack frame creation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9839e5fa103d117cbdb936e8594ba832e1eeb320", "html_url": "https://github.com/rust-lang/rust/commit/9839e5fa103d117cbdb936e8594ba832e1eeb320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9839e5fa103d117cbdb936e8594ba832e1eeb320/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b176285ba775f86301040fc624acb96b4499f562", "url": "https://api.github.com/repos/rust-lang/rust/commits/b176285ba775f86301040fc624acb96b4499f562", "html_url": "https://github.com/rust-lang/rust/commit/b176285ba775f86301040fc624acb96b4499f562"}], "stats": {"total": 40, "additions": 11, "deletions": 29}, "files": [{"sha": "ee8419404ca47528e850ff36ce3e616c06e29269", "filename": "src/librustc_mir/interpret/eval_context.rs", "status": "modified", "additions": 11, "deletions": 29, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9839e5fa103d117cbdb936e8594ba832e1eeb320/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9839e5fa103d117cbdb936e8594ba832e1eeb320/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Feval_context.rs?ref=9839e5fa103d117cbdb936e8594ba832e1eeb320", "patch": "@@ -1,4 +1,3 @@\n-use std::collections::HashSet;\n use std::fmt::Write;\n \n use rustc::hir::def_id::DefId;\n@@ -383,40 +382,23 @@ impl<'a, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M\n     ) -> EvalResult<'tcx> {\n         ::log_settings::settings().indentation += 1;\n \n-        /// Return the set of locals that have a storage annotation anywhere\n-        fn collect_storage_annotations<'mir, 'tcx>(mir: &'mir mir::Mir<'tcx>) -> HashSet<mir::Local> {\n-            use rustc::mir::StatementKind::*;\n-\n-            let mut set = HashSet::new();\n-            for block in mir.basic_blocks() {\n-                for stmt in block.statements.iter() {\n-                    match stmt.kind {\n-                        StorageLive(local) |\n-                        StorageDead(local) => {\n-                            set.insert(local);\n-                        }\n-                        _ => {}\n-                    }\n-                }\n-            }\n-            set\n-        }\n-\n         // Subtract 1 because `local_decls` includes the ReturnMemoryPointer, but we don't store a local\n         // `Value` for that.\n         let num_locals = mir.local_decls.len() - 1;\n \n-        let locals = {\n-            let annotated_locals = collect_storage_annotations(mir);\n-            let mut locals = vec![None; num_locals];\n-            for i in 0..num_locals {\n-                let local = mir::Local::new(i + 1);\n-                if !annotated_locals.contains(&local) {\n-                    locals[i] = Some(Value::ByVal(PrimVal::Undef));\n+        let mut locals = vec![Some(Value::ByVal(PrimVal::Undef)); num_locals];\n+        trace!(\"push_stack_frame: {:?}: num_bbs: {}\", span, mir.basic_blocks().len());\n+        for block in mir.basic_blocks() {\n+            for stmt in block.statements.iter() {\n+                use rustc::mir::StatementKind::{StorageDead, StorageLive};\n+                match stmt.kind {\n+                    StorageLive(local) | StorageDead(local) => if local.index() > 0 {\n+                        locals[local.index() - 1] = None;\n+                    },\n+                    _ => {}\n                 }\n             }\n-            locals\n-        };\n+        }\n \n         self.stack.push(Frame {\n             mir,"}]}