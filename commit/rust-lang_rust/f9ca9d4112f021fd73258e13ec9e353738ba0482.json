{"sha": "f9ca9d4112f021fd73258e13ec9e353738ba0482", "node_id": "C_kwDOAAsO6NoAKGY5Y2E5ZDQxMTJmMDIxZmQ3MzI1OGUxM2VjOWUzNTM3MzhiYTA0ODI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-12T17:36:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-12T17:36:00Z"}, "message": "Auto merge of #10149 - jyn514:duplicate-sysroot, r=flip1995\n\nDon't pass `--sysroot` twice if SYSROOT is set\n\nThis is useful for rust-lang/rust to allow setting a sysroot that's *only* for build scripts, different from the regular sysroot passed in RUSTFLAGS (since cargo doesn't apply RUSTFLAGS to build scripts or proc-macros).\n\nThat said, the exact motivation is not particularly important: this fixes a regression from\nhttps://github.com/rust-lang/rust-clippy/pull/9881/commits/5907e9155ed7f1312d108aa2110853472da3b029#r1060215684.\n\nNote that only RUSTFLAGS is tested in the new integration test; passing --sysroot through `clippy-driver` never worked as far as I can tell, and no one is using it, so I didn't fix it here.\n\nHelps with https://github.com/rust-lang/rust/pull/106394.\n\n---\n\nchangelog: other: `SYSROOT` and `--sysroot` can now be set at the same time\n[#10149](https://github.com/rust-lang/rust-clippy/pull/10149)\n<!-- changelog_checked -->", "tree": {"sha": "1aa029d8f2d3f6bac6524de25f77c1f877f4e5b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aa029d8f2d3f6bac6524de25f77c1f877f4e5b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9ca9d4112f021fd73258e13ec9e353738ba0482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9ca9d4112f021fd73258e13ec9e353738ba0482", "html_url": "https://github.com/rust-lang/rust/commit/f9ca9d4112f021fd73258e13ec9e353738ba0482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9ca9d4112f021fd73258e13ec9e353738ba0482/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "url": "https://api.github.com/repos/rust-lang/rust/commits/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba", "html_url": "https://github.com/rust-lang/rust/commit/decaba97cc0e682a7b44b3f06f10ad1a8ebe9cba"}, {"sha": "fe007179ec3560f86bd15686d60372f8307ca225", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe007179ec3560f86bd15686d60372f8307ca225", "html_url": "https://github.com/rust-lang/rust/commit/fe007179ec3560f86bd15686d60372f8307ca225"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "798782340ee7d1581425c994f73573cdcd01fb76", "filename": ".github/driver.sh", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f9ca9d4112f021fd73258e13ec9e353738ba0482/.github%2Fdriver.sh", "raw_url": "https://github.com/rust-lang/rust/raw/f9ca9d4112f021fd73258e13ec9e353738ba0482/.github%2Fdriver.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fdriver.sh?ref=f9ca9d4112f021fd73258e13ec9e353738ba0482", "patch": "@@ -17,6 +17,13 @@ test \"$sysroot\" = $desired_sysroot\n sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n test \"$sysroot\" = $desired_sysroot\n \n+# Check that the --sysroot argument is only passed once (SYSROOT is ignored)\n+(\n+    cd rustc_tools_util\n+    touch src/lib.rs\n+    SYSROOT=/tmp RUSTFLAGS=\"--sysroot=$(rustc --print sysroot)\" ../target/debug/cargo-clippy clippy --verbose\n+)\n+\n # Make sure this isn't set - clippy-driver should cope without it\n unset CARGO_MANIFEST_DIR\n "}, {"sha": "d521e8d883983da345bd4df530e242a97d67f186", "filename": "src/driver.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f9ca9d4112f021fd73258e13ec9e353738ba0482/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ca9d4112f021fd73258e13ec9e353738ba0482/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=f9ca9d4112f021fd73258e13ec9e353738ba0482", "patch": "@@ -256,11 +256,14 @@ pub fn main() {\n     LazyLock::force(&ICE_HOOK);\n     exit(rustc_driver::catch_with_exit_code(move || {\n         let mut orig_args: Vec<String> = env::args().collect();\n+        let has_sysroot_arg = arg_value(&orig_args, \"--sysroot\", |_| true).is_some();\n \n         let sys_root_env = std::env::var(\"SYSROOT\").ok();\n         let pass_sysroot_env_if_given = |args: &mut Vec<String>, sys_root_env| {\n             if let Some(sys_root) = sys_root_env {\n-                args.extend(vec![\"--sysroot\".into(), sys_root]);\n+                if !has_sysroot_arg {\n+                    args.extend(vec![\"--sysroot\".into(), sys_root]);\n+                }\n             };\n         };\n "}, {"sha": "a771d8b87c81a4bcec3b0ed4cd14829bcad2f191", "filename": "tests/integration.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f9ca9d4112f021fd73258e13ec9e353738ba0482/tests%2Fintegration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9ca9d4112f021fd73258e13ec9e353738ba0482/tests%2Fintegration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fintegration.rs?ref=f9ca9d4112f021fd73258e13ec9e353738ba0482", "patch": "@@ -1,3 +1,12 @@\n+//! This test is meant to only be run in CI. To run it locally use:\n+//!\n+//! `env INTEGRATION=rust-lang/log cargo test --test integration --features=integration`\n+//!\n+//! You can use a different `INTEGRATION` value to test different repositories.\n+//!\n+//! This test will clone the specified repository and run Clippy on it. The test succeeds, if\n+//! Clippy doesn't produce an ICE. Lint warnings are ignored by this test.\n+\n #![cfg(feature = \"integration\")]\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n #![warn(rust_2018_idioms, unused_lifetimes)]"}]}