{"sha": "220352781c2585f0efb07ab0e758b136514de5b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyMDM1Mjc4MWMyNTg1ZjBlZmIwN2FiMGU3NThiMTM2NTE0ZGU1Yjg=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-03T12:14:29Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-12-03T12:14:29Z"}, "message": "Auto merge of #79586 - jyn514:crate-name, r=davidtwco\n\nFix `unknown-crate` when using -Z self-profile with rustdoc\n\n... by removing a duplicate `crate_name` field in `interface::Config`,\nmaking it clear that rustdoc should be passing it to `config::Options` instead.\n\nUnblocks https://github.com/rust-lang/rustc-perf/issues/797.", "tree": {"sha": "7e78e7ce7dcd47ee50e84b93e2c01658f8cc66e9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e78e7ce7dcd47ee50e84b93e2c01658f8cc66e9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/220352781c2585f0efb07ab0e758b136514de5b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/220352781c2585f0efb07ab0e758b136514de5b8", "html_url": "https://github.com/rust-lang/rust/commit/220352781c2585f0efb07ab0e758b136514de5b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/220352781c2585f0efb07ab0e758b136514de5b8/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d015f0d92144f0e72735a918aee8510b0fe2cff5", "url": "https://api.github.com/repos/rust-lang/rust/commits/d015f0d92144f0e72735a918aee8510b0fe2cff5", "html_url": "https://github.com/rust-lang/rust/commit/d015f0d92144f0e72735a918aee8510b0fe2cff5"}, {"sha": "878cfb5a4abe70f6f813ae68216efe935ea40f5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/878cfb5a4abe70f6f813ae68216efe935ea40f5d", "html_url": "https://github.com/rust-lang/rust/commit/878cfb5a4abe70f6f813ae68216efe935ea40f5d"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "b3466f49b9f2582678d60c1044cfeac543dac745", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -223,7 +223,6 @@ fn run_compiler(\n             file_loader: None,\n             diagnostic_output,\n             stderr: None,\n-            crate_name: None,\n             lint_caps: Default::default(),\n             register_lints: None,\n             override_queries: None,\n@@ -307,7 +306,6 @@ fn run_compiler(\n         file_loader,\n         diagnostic_output,\n         stderr: None,\n-        crate_name: None,\n         lint_caps: Default::default(),\n         register_lints: None,\n         override_queries: None,"}, {"sha": "acd49d86c2c84e951c60d52b437085d653da8c25", "filename": "compiler/rustc_interface/src/interface.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_interface%2Fsrc%2Finterface.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_interface%2Fsrc%2Finterface.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Finterface.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -34,7 +34,6 @@ pub struct Compiler {\n     pub(crate) input_path: Option<PathBuf>,\n     pub(crate) output_dir: Option<PathBuf>,\n     pub(crate) output_file: Option<PathBuf>,\n-    pub(crate) crate_name: Option<String>,\n     pub(crate) register_lints: Option<Box<dyn Fn(&Session, &mut LintStore) + Send + Sync>>,\n     pub(crate) override_queries:\n         Option<fn(&Session, &mut ty::query::Providers, &mut ty::query::Providers)>,\n@@ -140,7 +139,6 @@ pub struct Config {\n     /// Set to capture stderr output during compiler execution\n     pub stderr: Option<Arc<Mutex<Vec<u8>>>>,\n \n-    pub crate_name: Option<String>,\n     pub lint_caps: FxHashMap<lint::LintId, lint::Level>,\n \n     /// This is a callback from the driver that is called when we're registering lints;\n@@ -185,7 +183,6 @@ pub fn create_compiler_and_run<R>(config: Config, f: impl FnOnce(&Compiler) -> R\n         input_path: config.input_path,\n         output_dir: config.output_dir,\n         output_file: config.output_file,\n-        crate_name: config.crate_name,\n         register_lints: config.register_lints,\n         override_queries: config.override_queries,\n     };"}, {"sha": "4c340b3fc1f58052918c870880a0e0ef55896c4f", "filename": "compiler/rustc_interface/src/queries.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fqueries.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -156,13 +156,11 @@ impl<'tcx> Queries<'tcx> {\n \n     pub fn crate_name(&self) -> Result<&Query<String>> {\n         self.crate_name.compute(|| {\n-            Ok(match self.compiler.crate_name {\n-                Some(ref crate_name) => crate_name.clone(),\n-                None => {\n-                    let parse_result = self.parse()?;\n-                    let krate = parse_result.peek();\n-                    find_crate_name(self.session(), &krate.attrs, &self.compiler.input)\n-                }\n+            Ok({\n+                let parse_result = self.parse()?;\n+                let krate = parse_result.peek();\n+                // parse `#[crate_name]` even if `--crate-name` was passed, to make sure it matches.\n+                find_crate_name(self.session(), &krate.attrs, &self.compiler.input)\n             })\n         })\n     }"}, {"sha": "1352ab53cab4fd2c9a6bf6a6e699478ee20a528a", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -1338,7 +1338,7 @@ pub fn build_session(\n \n         let profiler = SelfProfiler::new(\n             directory,\n-            sopts.crate_name.as_ref().map(|s| &s[..]),\n+            sopts.crate_name.as_deref(),\n             &sopts.debugging_opts.self_profile_events,\n         );\n         match profiler {"}, {"sha": "eecdc929ab6fdd09be9e5d46a0faa81e01015ae1", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -371,6 +371,7 @@ crate fn run_core(\n         error_format,\n         edition,\n         describe_lints,\n+        crate_name,\n         ..Options::default()\n     };\n \n@@ -384,7 +385,6 @@ crate fn run_core(\n         file_loader: None,\n         diagnostic_output: DiagnosticOutput::Default,\n         stderr: None,\n-        crate_name,\n         lint_caps,\n         register_lints: None,\n         override_queries: Some(|_sess, providers, _external_providers| {"}, {"sha": "37fe13c32ce745dfee79c88fb44610377b5bb538", "filename": "src/librustdoc/doctest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/src%2Flibrustdoc%2Fdoctest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/src%2Flibrustdoc%2Fdoctest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fdoctest.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -74,6 +74,7 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n         debugging_opts: config::DebuggingOptions { ..config::basic_debugging_options() },\n         edition: options.edition,\n         target_triple: options.target.clone(),\n+        crate_name: options.crate_name.clone(),\n         ..config::Options::default()\n     };\n \n@@ -90,7 +91,6 @@ crate fn run(options: Options) -> Result<(), ErrorReported> {\n         file_loader: None,\n         diagnostic_output: DiagnosticOutput::Default,\n         stderr: None,\n-        crate_name: options.crate_name.clone(),\n         lint_caps,\n         register_lints: None,\n         override_queries: None,"}, {"sha": "fdd7e8b24c5210e3887372b39aecabacdb859d77", "filename": "src/test/run-make-fulldeps/issue-19371/foo.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/220352781c2585f0efb07ab0e758b136514de5b8/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/220352781c2585f0efb07ab0e758b136514de5b8/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fissue-19371%2Ffoo.rs?ref=220352781c2585f0efb07ab0e758b136514de5b8", "patch": "@@ -56,7 +56,6 @@ fn compile(code: String, output: PathBuf, sysroot: PathBuf) {\n         file_loader: None,\n         diagnostic_output: DiagnosticOutput::Default,\n         stderr: None,\n-        crate_name: None,\n         lint_caps: Default::default(),\n         register_lints: None,\n         override_queries: None,"}]}