{"sha": "40c74a7eb709f3f072d35b4264c614a9a8f6c2f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwYzc0YTdlYjcwOWYzZjA3MmQzNWI0MjY0YzYxNGE5YThmNmMyZjk=", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-06-28T19:32:58Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2020-06-28T20:24:17Z"}, "message": "Edit cursor.prev() method docs in lexer\n\nFix missing punctuation", "tree": {"sha": "602d975f253d55119c19760bfe0b58c086a47cfb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/602d975f253d55119c19760bfe0b58c086a47cfb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/40c74a7eb709f3f072d35b4264c614a9a8f6c2f9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/40c74a7eb709f3f072d35b4264c614a9a8f6c2f9", "html_url": "https://github.com/rust-lang/rust/commit/40c74a7eb709f3f072d35b4264c614a9a8f6c2f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/40c74a7eb709f3f072d35b4264c614a9a8f6c2f9/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25687caa2e4e35b31c29e28998710670e9d54ee9", "url": "https://api.github.com/repos/rust-lang/rust/commits/25687caa2e4e35b31c29e28998710670e9d54ee9", "html_url": "https://github.com/rust-lang/rust/commit/25687caa2e4e35b31c29e28998710670e9d54ee9"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "c0045d3f79be1ffca53fd956aa0251a53d6a8692", "filename": "src/librustc_lexer/src/cursor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/40c74a7eb709f3f072d35b4264c614a9a8f6c2f9/src%2Flibrustc_lexer%2Fsrc%2Fcursor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/40c74a7eb709f3f072d35b4264c614a9a8f6c2f9/src%2Flibrustc_lexer%2Fsrc%2Fcursor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Fcursor.rs?ref=40c74a7eb709f3f072d35b4264c614a9a8f6c2f9", "patch": "@@ -23,8 +23,8 @@ impl<'a> Cursor<'a> {\n         }\n     }\n \n-    /// For debug assertions only\n-    /// Returns the last eaten symbol (or '\\0' in release builds).\n+    /// Returns the last eaten symbol (or `'\\0'` in release builds).\n+    /// (For debug assertions only.)\n     pub(crate) fn prev(&self) -> char {\n         #[cfg(debug_assertions)]\n         {"}]}