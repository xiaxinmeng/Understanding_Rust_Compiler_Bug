{"sha": "a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExN2EyZTNmODM5YTZjNWMwMGVlOGYwMGFjNGM3ZDkyZTJhZDYzNGI=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-02-27T19:03:23Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2018-02-28T15:31:27Z"}, "message": "Do not report _#nr lifetimes names in errors", "tree": {"sha": "9a4402725bbf518b3fa1797353bf169b31e1d858", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a4402725bbf518b3fa1797353bf169b31e1d858"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEmNHc6jmXzkUyxd4xiMlBzaHUZDIFAlqWy1EACgkQiMlBzaHU\nZDIIFxAAmThCYb8EBvs6biFSq8cc4Y323o9zBSj+1fvvVQek8ErcH2nM4urkJnEy\nmkIbzqFD7QFSHU4yxZWqow2aXF4H0wUA/lW05fZhmHA089eeBxbxfuZvd3LSm1Rk\nR4e3YJKfEZtBlr7HGM+bnUmUnduE2dxa8+iNobi9znqwelUfyJpfleY0rqaWrmSY\nYv8KG8OLgt7+7Kl2uYeKVhpmCjJKFiflPw3tVs91vg0bVWIX4oUkSfiIrdPbMEwG\n7+dRd9hgiTTyAArluq1Iv+GFjpgxZanYEXnn5OTusxDImXDmcLmMklq6QMxD1/8Y\nNgDmBEqwddvdzCs7yStUmmPb3EDEc7tD49Cb2H3+v+JjRi/aL5zp+Sk/ksCb0IpV\n9Pa/2oulCbAy8nV6i8g/KnDe+3GzOfaIgt95rSCPYcH2LUpW1zjRtw7kkdLvJOVX\nQhwapE1iA8T0K30UQNdo+HwLgHttQgGTft4zo1xgnooXsMPmnfWoRFyEEUXl4m6E\nau6VmcUfE90sAZJhkvLHbmC9QNZto2kcxxMBxpILrHImf9UV+xBOc6uEV6z4AfFY\ne6yR0m3JrOAYUjO/wx39J51BEDxckbx5OhdlLb53jDfdhfOaFUMcSrvxOvpujAGL\nLd6slkL2IaZSX4vVH2NDpidvli90xdhBDhQlVdqstitOjzWzpY0=\n=1PoS\n-----END PGP SIGNATURE-----", "payload": "tree 9a4402725bbf518b3fa1797353bf169b31e1d858\nparent 29f5c699b11a6a148f097f82eaa05202f8799bbc\nauthor Santiago Pastorino <spastorino@gmail.com> 1519758203 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1519831887 -0300\n\nDo not report _#nr lifetimes names in errors\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "html_url": "https://github.com/rust-lang/rust/commit/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "29f5c699b11a6a148f097f82eaa05202f8799bbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/29f5c699b11a6a148f097f82eaa05202f8799bbc", "html_url": "https://github.com/rust-lang/rust/commit/29f5c699b11a6a148f097f82eaa05202f8799bbc"}], "stats": {"total": 134, "additions": 128, "deletions": 6}, "files": [{"sha": "9d8b2b709b7d6cdc18a99fbec3400747ba101846", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 45, "deletions": 6, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "patch": "@@ -497,14 +497,34 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         _proper_span: Span,\n         _end_span: Option<Span>,\n     ) {\n+        debug!(\n+            \"report_unscoped_local_value_does_not_live_long_enough(\\\n+                {:?}, {:?}, {:?}, {:?}, {:?}, {:?}\\\n+            )\",\n+            context,\n+            name,\n+            scope_tree,\n+            borrow,\n+            drop_span,\n+            borrow_span\n+        );\n+\n         let mut err = self.tcx.path_does_not_live_long_enough(borrow_span,\n                                                               &format!(\"`{}`\", name),\n                                                               Origin::Mir);\n         err.span_label(borrow_span, \"borrowed value does not live long enough\");\n         err.span_label(drop_span, \"borrowed value only lives until here\");\n-        self.tcx.note_and_explain_region(scope_tree, &mut err,\n-                                         \"borrowed value must be valid for \",\n-                                         borrow.region, \"...\");\n+\n+        if !self.tcx.sess.nll() {\n+            self.tcx.note_and_explain_region(\n+                scope_tree,\n+                &mut err,\n+                \"borrowed value must be valid for \",\n+                borrow.region,\n+                \"...\",\n+            );\n+        }\n+\n         self.explain_why_borrow_contains_point(context, borrow, &mut err);\n         err.emit();\n     }\n@@ -519,14 +539,33 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         proper_span: Span,\n         _end_span: Option<Span>\n     ) {\n+        debug!(\n+            \"report_unscoped_temporary_value_does_not_live_long_enough(\\\n+                {:?}, {:?}, {:?}, {:?}, {:?}\\\n+            )\",\n+            context,\n+            scope_tree,\n+            borrow,\n+            drop_span,\n+            proper_span\n+        );\n+\n         let mut err = self.tcx.path_does_not_live_long_enough(proper_span,\n                                                               \"borrowed value\",\n                                                               Origin::Mir);\n         err.span_label(proper_span, \"temporary value does not live long enough\");\n         err.span_label(drop_span, \"temporary value only lives until here\");\n-        self.tcx.note_and_explain_region(scope_tree, &mut err,\n-                                         \"borrowed value must be valid for \",\n-                                         borrow.region, \"...\");\n+\n+        if !self.tcx.sess.nll() {\n+            self.tcx.note_and_explain_region(\n+                scope_tree,\n+                &mut err,\n+                \"borrowed value must be valid for \",\n+                borrow.region,\n+                \"...\",\n+            );\n+        }\n+\n         self.explain_why_borrow_contains_point(context, borrow, &mut err);\n         err.emit();\n     }"}, {"sha": "785a38da95980362949f8860eb3bed590f91214e", "filename": "src/test/ui/nll/borrowed-local-error.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-local-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-local-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-local-error.rs?ref=a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Znll-dump-cause\n+\n+#![feature(nll)]\n+\n+fn gimme(x: &(u32,)) -> &u32 {\n+    &x.0\n+}\n+\n+fn main() {\n+    let x = gimme({\n+        let v = (22,);\n+        &v\n+        //~^ ERROR `v` does not live long enough [E0597]\n+    });\n+    println!(\"{:?}\", x);\n+}"}, {"sha": "3bc1978554821af639a2e80917c29d6ab8587d94", "filename": "src/test/ui/nll/borrowed-local-error.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-local-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-local-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-local-error.stderr?ref=a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "patch": "@@ -0,0 +1,17 @@\n+error[E0597]: `v` does not live long enough\n+  --> $DIR/borrowed-local-error.rs:22:9\n+   |\n+LL |       let x = gimme({\n+   |  _____________-\n+LL | |         let v = (22,);\n+LL | |         &v\n+   | |         ^^ borrowed value does not live long enough\n+LL | |         //~^ ERROR `v` does not live long enough [E0597]\n+LL | |     });\n+   | |_____-- borrow later used here\n+   |       |\n+   |       borrowed value only lives until here\n+\n+error: aborting due to previous error\n+\n+If you want more information on this error, try using \"rustc --explain E0597\""}, {"sha": "e1a6112d173f9d469a03cadf9097bd158d3078bb", "filename": "src/test/ui/nll/borrowed-temporary-error.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.rs?ref=a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "patch": "@@ -0,0 +1,26 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -Znll-dump-cause\n+\n+#![feature(nll)]\n+\n+fn gimme(x: &(u32,)) -> &u32 {\n+    &x.0\n+}\n+\n+fn main() {\n+    let x = gimme({\n+        let v = 22;\n+        &(v,)\n+        //~^ ERROR borrowed value does not live long enough [E0597]\n+    });\n+    println!(\"{:?}\", x);\n+}"}, {"sha": "f5cb1dccc378639f066fd67c3b98d0c6bc86ba76", "filename": "src/test/ui/nll/borrowed-temporary-error.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-temporary-error.stderr?ref=a17a2e3f839a6c5c00ee8f00ac4c7d92e2ad634b", "patch": "@@ -0,0 +1,14 @@\n+error[E0597]: borrowed value does not live long enough\n+  --> $DIR/borrowed-temporary-error.rs:22:10\n+   |\n+LL |         &(v,)\n+   |          ^^^^ temporary value does not live long enough\n+LL |         //~^ ERROR borrowed value does not live long enough [E0597]\n+LL |     });\n+   |       - temporary value only lives until here\n+LL |     println!(\"{:?}\", x);\n+   |                      - borrow later used here\n+\n+error: aborting due to previous error\n+\n+If you want more information on this error, try using \"rustc --explain E0597\""}]}