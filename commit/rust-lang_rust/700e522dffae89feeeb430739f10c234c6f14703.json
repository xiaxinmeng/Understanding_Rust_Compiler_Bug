{"sha": "700e522dffae89feeeb430739f10c234c6f14703", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMGU1MjJkZmZhZTg5ZmVlZWI0MzA3MzlmMTBjMjM0YzZmMTQ3MDM=", "commit": {"author": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-16T19:23:46Z"}, "committer": {"name": "Roy Frostig", "email": "rfrostig@mozilla.com", "date": "2010-07-16T19:23:46Z"}, "message": "More renaming of GEP offsets in abi/trans.  This should settle it.  Also, fix some overenthusiastic renaming in previous commit.", "tree": {"sha": "6a14f2662acb417fc882be3b82bf1f719810a5f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a14f2662acb417fc882be3b82bf1f719810a5f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/700e522dffae89feeeb430739f10c234c6f14703", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/700e522dffae89feeeb430739f10c234c6f14703", "html_url": "https://github.com/rust-lang/rust/commit/700e522dffae89feeeb430739f10c234c6f14703", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/700e522dffae89feeeb430739f10c234c6f14703/comments", "author": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "committer": {"login": "froystig", "id": 123903, "node_id": "MDQ6VXNlcjEyMzkwMw==", "avatar_url": "https://avatars.githubusercontent.com/u/123903?v=4", "gravatar_id": "", "url": "https://api.github.com/users/froystig", "html_url": "https://github.com/froystig", "followers_url": "https://api.github.com/users/froystig/followers", "following_url": "https://api.github.com/users/froystig/following{/other_user}", "gists_url": "https://api.github.com/users/froystig/gists{/gist_id}", "starred_url": "https://api.github.com/users/froystig/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/froystig/subscriptions", "organizations_url": "https://api.github.com/users/froystig/orgs", "repos_url": "https://api.github.com/users/froystig/repos", "events_url": "https://api.github.com/users/froystig/events{/privacy}", "received_events_url": "https://api.github.com/users/froystig/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "348e434cee42cc2be0a4f5a6e6df8709d3490ff5", "url": "https://api.github.com/repos/rust-lang/rust/commits/348e434cee42cc2be0a4f5a6e6df8709d3490ff5", "html_url": "https://github.com/rust-lang/rust/commit/348e434cee42cc2be0a4f5a6e6df8709d3490ff5"}], "stats": {"total": 63, "additions": 37, "deletions": 26}, "files": [{"sha": "3f97f0dd0fd7d2cc4424920624a427e2e0e4b1f3", "filename": "src/boot/be/abi.ml", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/700e522dffae89feeeb430739f10c234c6f14703/src%2Fboot%2Fbe%2Fabi.ml", "raw_url": "https://github.com/rust-lang/rust/raw/700e522dffae89feeeb430739f10c234c6f14703/src%2Fboot%2Fbe%2Fabi.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fbe%2Fabi.ml?ref=700e522dffae89feeeb430739f10c234c6f14703", "patch": "@@ -45,15 +45,20 @@ let stk_field_valgrind_id = 0 + 1;;\n let stk_field_limit = stk_field_valgrind_id + 1;;\n let stk_field_data = stk_field_limit + 1;;\n \n-let obj_elt_vtbl = 0;;\n-let obj_elt_body_box = 1;;\n+(* Both obj and fn are two-word \"bindings\":  One word points to some\n+ * static dispatch information (vtbl or thunk), and the other points to\n+ * some bag of bound data (object-body or closure). *)\n \n+let binding_field_dispatch = 0;;\n+let binding_field_bound_data = 1;;\n+\n+let obj_field_vtbl = binding_field_dispatch;;\n+let obj_field_body_box = binding_field_bound_data;;\n let obj_body_elt_tydesc = 0;;\n let obj_body_elt_fields = 1;;\n \n-let fn_elt_thunk = 0;;\n-let fn_elt_closure = 1;;\n-\n+let fn_field_thunk = binding_field_dispatch;;\n+let fn_field_closure = binding_field_bound_data;;\n let closure_elt_rc = 0;;\n let closure_elt_target = 1;;\n let closure_elt_bound_args = 2;;"}, {"sha": "3d89d79572eaba9595c6a6c855070b60a8733061", "filename": "src/boot/me/trans.ml", "status": "modified", "additions": 27, "deletions": 21, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/700e522dffae89feeeb430739f10c234c6f14703/src%2Fboot%2Fme%2Ftrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/700e522dffae89feeeb430739f10c234c6f14703/src%2Fboot%2Fme%2Ftrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Ftrans.ml?ref=700e522dffae89feeeb430739f10c234c6f14703", "patch": "@@ -890,7 +890,7 @@ let trans_visitor\n     let sorted_idents = sorted_htab_keys fns in\n     let i = arr_idx sorted_idents id in\n     let fn_ty = Hashtbl.find fns id in\n-    let table_ptr = get_element_ptr obj_cell Abi.obj_elt_vtbl in\n+    let table_ptr = get_element_ptr obj_cell Abi.obj_field_vtbl in\n       (get_vtbl_entry_idx table_ptr i, fn_ty)\n   in\n \n@@ -1479,10 +1479,10 @@ let trans_visitor\n                  Abi.indirect_args_elt_closure)\n       in\n       let closure_target_cell =\n-        get_element_ptr closure_cell Abi.obj_elt_body_box\n+        get_element_ptr closure_cell Abi.fn_field_closure\n       in\n       let closure_target_fn_cell =\n-        get_element_ptr closure_target_cell Abi.obj_elt_vtbl\n+        get_element_ptr closure_target_cell Abi.fn_field_thunk\n       in\n \n         merge_bound_args\n@@ -2473,7 +2473,7 @@ let trans_visitor\n \n           Ast.TY_fn _ ->\n             note_drop_step ty \"drop_ty: fn path\";\n-            let binding = get_element_ptr cell Abi.obj_elt_body_box in\n+            let binding = get_element_ptr cell Abi.fn_field_closure in\n             let null_jmp = null_check binding in\n               (* Drop non-null bindings. *)\n               (* FIXME (issue #58): this is completely wrong, Closures need to\n@@ -2486,7 +2486,7 @@ let trans_visitor\n \n         | Ast.TY_obj _ ->\n             note_drop_step ty \"drop_ty: obj path\";\n-            let binding = get_element_ptr cell Abi.obj_elt_body_box in\n+            let binding = get_element_ptr cell Abi.obj_field_body_box in\n             let null_jmp = null_check binding in\n             let rc_jmp = drop_refcount_and_cmp binding in\n             let obj_box = deref binding in\n@@ -2607,7 +2607,9 @@ let trans_visitor\n         | Ast.TY_obj _ ->\n             if type_has_state ty\n             then\n-              let binding = get_element_ptr cell Abi.obj_elt_body_box in\n+              let binding =\n+                get_element_ptr cell Abi.binding_field_bound_data\n+              in\n                 sever_box binding;\n \n         | _ ->\n@@ -3094,13 +3096,17 @@ let trans_visitor\n           | Ast.TY_fn _\n           | Ast.TY_obj _ ->\n               begin\n-                let src_item = get_element_ptr src Abi.obj_elt_vtbl in\n-                let dst_item = get_element_ptr dst Abi.obj_elt_vtbl in\n+                let src_item =\n+                  get_element_ptr src Abi.binding_field_dispatch\n+                in\n+                let dst_item =\n+                  get_element_ptr dst Abi.binding_field_dispatch\n+                in\n                 let src_binding =\n-                  get_element_ptr src Abi.obj_elt_body_box\n+                  get_element_ptr src Abi.binding_field_bound_data\n                 in\n                 let dst_binding =\n-                  get_element_ptr dst Abi.obj_elt_body_box\n+                  get_element_ptr dst Abi.binding_field_bound_data\n                 in\n                   mov dst_item (Il.Cell src_item);\n                   let null_jmp = null_check src_binding in\n@@ -3197,7 +3203,7 @@ let trans_visitor\n                   deref_ty DEREF_none initializing dst_cell dst_ty\n                 in\n                 let caller_vtbl =\n-                  get_element_ptr caller_obj Abi.obj_elt_vtbl\n+                  get_element_ptr caller_obj Abi.obj_field_vtbl\n                 in\n                   mov caller_vtbl caller_vtbl_oper\n               end\n@@ -3235,10 +3241,10 @@ let trans_visitor\n     let fix = Hashtbl.find cx.ctxt_fn_fixups item.id in\n \n     let dst_pair_item_cell =\n-      get_element_ptr dst_cell Abi.obj_elt_vtbl\n+      get_element_ptr dst_cell Abi.fn_field_thunk\n     in\n     let dst_pair_binding_cell =\n-      get_element_ptr dst_cell Abi.obj_elt_body_box\n+      get_element_ptr dst_cell Abi.fn_field_closure\n     in\n       mov dst_pair_item_cell (crate_rel_imm fix);\n       mov dst_pair_binding_cell zero\n@@ -3472,12 +3478,12 @@ let trans_visitor\n \n     iflog (fun _ -> annotate \"set closure target code ptr\");\n     mov\n-      (get_element_ptr targ_cell Abi.fn_elt_thunk)\n+      (get_element_ptr targ_cell Abi.fn_field_thunk)\n       (reify_ptr target_fn_ptr);\n \n     iflog (fun _ -> annotate \"set closure target closure ptr\");\n     mov\n-      (get_element_ptr targ_cell Abi.fn_elt_closure)\n+      (get_element_ptr targ_cell Abi.fn_field_closure)\n       (reify_ptr target_binding_ptr);\n \n     iflog (fun _ -> annotate \"set closure bound args\");\n@@ -3511,10 +3517,10 @@ let trans_visitor\n     let target_binding_ptr = callee_binding_ptr flv cc in\n     let closure_rty = closure_referent_type bound_arg_slots in\n     let closure_sz = force_sz (Il.referent_ty_size word_bits closure_rty) in\n-    let fn_cell = get_element_ptr dst_cell Abi.obj_elt_vtbl in\n+    let fn_cell = get_element_ptr dst_cell Abi.fn_field_thunk in\n     let closure_cell =\n       ptr_cast\n-        (get_element_ptr dst_cell Abi.obj_elt_body_box)\n+        (get_element_ptr dst_cell Abi.fn_field_closure)\n         (Il.ScalarTy (Il.AddrTy (closure_rty)))\n     in\n       iflog (fun _ -> annotate \"assign glue-code to fn slot of pair\");\n@@ -3824,7 +3830,7 @@ let trans_visitor\n       | CALL_indirect ->\n           (* fptr is a pair [disp, binding*] *)\n           let pair_cell = need_cell (reify_ptr fptr) in\n-          let disp_cell = get_element_ptr pair_cell Abi.obj_elt_vtbl in\n+          let disp_cell = get_element_ptr pair_cell Abi.fn_field_thunk in\n             Il.Cell (crate_rel_to_ptr (Il.Cell disp_cell) Il.CodeTy)\n \n   and callee_binding_ptr\n@@ -3835,7 +3841,7 @@ let trans_visitor\n     then zero\n     else\n       let (pair_cell, _) = trans_lval pair_lval in\n-        Il.Cell (get_element_ptr pair_cell Abi.obj_elt_body_box)\n+        Il.Cell (get_element_ptr pair_cell Abi.fn_field_closure)\n \n   and call_ctrl flv : call_ctrl =\n     if lval_is_static cx flv\n@@ -4639,10 +4645,10 @@ let trans_visitor\n     let _ = iflog (fun _ -> annotate \"load destination obj pair ptr\") in\n     let dst_pair_cell = deref (ptr_at (fp_imm out_mem_disp) obj_ty) in\n     let dst_pair_item_cell =\n-      get_element_ptr dst_pair_cell Abi.obj_elt_vtbl\n+      get_element_ptr dst_pair_cell Abi.obj_field_vtbl\n     in\n     let dst_pair_state_cell =\n-      get_element_ptr dst_pair_cell Abi.obj_elt_body_box\n+      get_element_ptr dst_pair_cell Abi.obj_field_body_box\n     in\n \n       (* Load first cell of pair with vtbl ptr.*)"}]}