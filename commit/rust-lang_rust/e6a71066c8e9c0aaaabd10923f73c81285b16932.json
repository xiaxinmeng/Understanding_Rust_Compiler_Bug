{"sha": "e6a71066c8e9c0aaaabd10923f73c81285b16932", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YTcxMDY2YzhlOWMwYWFhYWJkMTA5MjNmNzNjODEyODViMTY5MzI=", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-10-08T12:18:22Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2020-10-08T13:43:02Z"}, "message": "Clippy dev subcommand to build and serve website", "tree": {"sha": "9ac7da85e5e237561896ac4bde9cdebdd6a662ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac7da85e5e237561896ac4bde9cdebdd6a662ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6a71066c8e9c0aaaabd10923f73c81285b16932", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAl9/F2YACgkQ+boUO5X/\nbYL+Uw//Unm+TpQ38Hm43mMoS3pDxYt6mjvDei0M/pvUyJ12S3b+Xkk2L4s/s7RR\n972NlHpUL/Iv0S2yhwws7atLGW8/lwJntvvi7x6pny0VA6wJZqiiUgSIvYU9Em2R\nKmHybkUSivlKwNZYPoxmzNdUvRFwRR12Ck+952ljQPp/sBsrnQzUh+Lt6mtcDjyY\n8Z/D8wlign2rWfG8TQWtPYnfmTSC3FEMNY4s/V/s3s3fzD/DX265cQ3R20yoR/Fo\nc1I9zL3vSlJy+n75fd6XzDKsT2OxgNrYN53+8YnHfn7wwtU07i1nofuHWzQQAhCQ\nTOr2fAtqeIv6BpOQRwRa8PuS7WwxkYRapYLL793DtiF3ZZ3BSLOLobhOGHw8mZT1\no8Et21Ui3dYFwCwSFAUffSCnxC6M7/DD/+0w5P2q4Q0/jFpVGwlyzwUkNqUdU8Wc\np0JUMzFXSBFSWVBopkmXYZt3Oa1Ufms7ilObO/9YJ6O7U/s13TFJXhhchShYHGVq\n5X6wRtqVSUh4H99eH9INr8WDNJaCCnb0WEj4mtFITqAZOvN13dp9pSYI0OTDoypW\nFK00ayvvqfY5jjpyrPX/pbT+PcX7jvkgZXiKv5FCTZE8omv6SPjEma0Unu+yNTtX\neCpkJTTPT1Q8qJAbi2HfUbaSPxwBl9yxwGgy9xIPHGiTEFj8xbc=\n=o38u\n-----END PGP SIGNATURE-----", "payload": "tree 9ac7da85e5e237561896ac4bde9cdebdd6a662ad\nparent 171ab9bf9f55fefd4905f2100154228e90da3bf4\nauthor David Tolnay <dtolnay@gmail.com> 1602159502 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1602164582 -0700\n\nClippy dev subcommand to build and serve website\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6a71066c8e9c0aaaabd10923f73c81285b16932", "html_url": "https://github.com/rust-lang/rust/commit/e6a71066c8e9c0aaaabd10923f73c81285b16932", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6a71066c8e9c0aaaabd10923f73c81285b16932/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "171ab9bf9f55fefd4905f2100154228e90da3bf4", "url": "https://api.github.com/repos/rust-lang/rust/commits/171ab9bf9f55fefd4905f2100154228e90da3bf4", "html_url": "https://github.com/rust-lang/rust/commit/171ab9bf9f55fefd4905f2100154228e90da3bf4"}], "stats": {"total": 89, "additions": 87, "deletions": 2}, "files": [{"sha": "b8a4a20114bb8b7f58f4c814afa434f49b9978be", "filename": "clippy_dev/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=e6a71066c8e9c0aaaabd10923f73c81285b16932", "patch": "@@ -8,6 +8,7 @@ edition = \"2018\"\n bytecount = \"0.6\"\n clap = \"2.33\"\n itertools = \"0.9\"\n+opener = \"0.4\"\n regex = \"1\"\n shell-escape = \"0.1\"\n walkdir = \"2\""}, {"sha": "43cb2954b74b34f9705631b3d803b2e5bbb1023e", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=e6a71066c8e9c0aaaabd10923f73c81285b16932", "patch": "@@ -13,6 +13,7 @@ use walkdir::WalkDir;\n pub mod fmt;\n pub mod new_lint;\n pub mod ra_setup;\n+pub mod serve;\n pub mod stderr_length_check;\n pub mod update_lints;\n "}, {"sha": "7a8cbd5251da9012f2dc4d2c82f5182ca06882cb", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=e6a71066c8e9c0aaaabd10923f73c81285b16932", "patch": "@@ -1,7 +1,7 @@\n #![cfg_attr(feature = \"deny-warnings\", deny(warnings))]\n \n use clap::{App, Arg, SubCommand};\n-use clippy_dev::{fmt, new_lint, ra_setup, stderr_length_check, update_lints};\n+use clippy_dev::{fmt, new_lint, ra_setup, serve, stderr_length_check, update_lints};\n \n fn main() {\n     let matches = App::new(\"Clippy developer tooling\")\n@@ -100,6 +100,19 @@ fn main() {\n                         .required(true),\n                 ),\n         )\n+        .subcommand(\n+            SubCommand::with_name(\"serve\")\n+                .about(\"Launch a local 'ALL the Clippy Lints' website in a browser\")\n+                .arg(\n+                    Arg::with_name(\"port\")\n+                        .long(\"port\")\n+                        .short(\"p\")\n+                        .help(\"Local port for the http server\")\n+                        .default_value(\"8000\")\n+                        .validator_os(serve::validate_port),\n+                )\n+                .arg(Arg::with_name(\"lint\").help(\"Which lint's page to load initially (optional)\")),\n+        )\n         .get_matches();\n \n     match matches.subcommand() {\n@@ -129,6 +142,11 @@ fn main() {\n             stderr_length_check::check();\n         },\n         (\"ra-setup\", Some(matches)) => ra_setup::run(matches.value_of(\"rustc-repo-path\")),\n+        (\"serve\", Some(matches)) => {\n+            let port = matches.value_of(\"port\").unwrap().parse().unwrap();\n+            let lint = matches.value_of(\"lint\");\n+            serve::run(port, lint);\n+        },\n         _ => {},\n     }\n }"}, {"sha": "a46c0e4d3f0a1525eb39ee56bee441eec6e710fd", "filename": "clippy_dev/src/serve.rs", "status": "added", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2Fsrc%2Fserve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6a71066c8e9c0aaaabd10923f73c81285b16932/clippy_dev%2Fsrc%2Fserve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fserve.rs?ref=e6a71066c8e9c0aaaabd10923f73c81285b16932", "patch": "@@ -0,0 +1,64 @@\n+use std::ffi::{OsStr, OsString};\n+use std::path::Path;\n+use std::process::Command;\n+use std::thread;\n+use std::time::{Duration, SystemTime};\n+\n+pub fn run(port: u16, lint: Option<&str>) -> ! {\n+    let mut url = Some(match lint {\n+        None => format!(\"http://localhost:{}\", port),\n+        Some(lint) => format!(\"http://localhost:{}/#{}\", port, lint),\n+    });\n+\n+    loop {\n+        if mtime(\"util/gh-pages/lints.json\") < mtime(\"clippy_lints/src\") {\n+            Command::new(\"python3\")\n+                .arg(\"util/export.py\")\n+                .spawn()\n+                .unwrap()\n+                .wait()\n+                .unwrap();\n+        }\n+        if let Some(url) = url.take() {\n+            thread::spawn(move || {\n+                Command::new(\"python3\")\n+                    .arg(\"-m\")\n+                    .arg(\"http.server\")\n+                    .arg(port.to_string())\n+                    .current_dir(\"util/gh-pages\")\n+                    .spawn()\n+                    .unwrap();\n+                // Give some time for python to start\n+                thread::sleep(Duration::from_millis(500));\n+                // Launch browser after first export.py has completed and http.server is up\n+                let _ = opener::open(url);\n+            });\n+        }\n+        thread::sleep(Duration::from_millis(1000));\n+    }\n+}\n+\n+fn mtime(path: impl AsRef<Path>) -> SystemTime {\n+    let path = path.as_ref();\n+    if path.is_dir() {\n+        path.read_dir()\n+            .into_iter()\n+            .flatten()\n+            .flatten()\n+            .map(|entry| mtime(&entry.path()))\n+            .max()\n+            .unwrap_or(SystemTime::UNIX_EPOCH)\n+    } else {\n+        path.metadata()\n+            .and_then(|metadata| metadata.modified())\n+            .unwrap_or(SystemTime::UNIX_EPOCH)\n+    }\n+}\n+\n+#[allow(clippy::missing_errors_doc)]\n+pub fn validate_port(arg: &OsStr) -> Result<(), OsString> {\n+    match arg.to_string_lossy().parse::<u16>() {\n+        Ok(_port) => Ok(()),\n+        Err(err) => Err(OsString::from(err.to_string())),\n+    }\n+}"}, {"sha": "2869c3bf7d44bf501bc727bdeecd3802d9a799f6", "filename": "doc/adding_lints.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6a71066c8e9c0aaaabd10923f73c81285b16932/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/e6a71066c8e9c0aaaabd10923f73c81285b16932/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=e6a71066c8e9c0aaaabd10923f73c81285b16932", "patch": "@@ -189,7 +189,8 @@ declare_clippy_lint! {\n \n * The section of lines prefixed with `///` constitutes the lint documentation\n   section. This is the default documentation style and will be displayed\n-  [like this][example_lint_page].\n+  [like this][example_lint_page]. To render and open this documentation locally\n+  in a browser, run `cargo dev serve`.\n * `FOO_FUNCTIONS` is the name of our lint. Be sure to follow the\n   [lint naming guidelines][lint_naming] here when naming your lint.\n   In short, the name should state the thing that is being checked for and"}]}