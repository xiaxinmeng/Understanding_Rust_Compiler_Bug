{"sha": "b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyY2RkZDI3YmQxYmEyNWYyMGNiNTYwOGQ3MzA1MzE3MGYyZWQ4M2I=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-29T10:52:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-02T15:04:31Z"}, "message": "better span for functions whose frame we push 'manually'", "tree": {"sha": "aa6cc41a48f1bbf3ab9a096ebc5d387a6e3bdc23", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa6cc41a48f1bbf3ab9a096ebc5d387a6e3bdc23"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "html_url": "https://github.com/rust-lang/rust/commit/b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4cf83433b1fb17e3d08fe68a12ee58c7960330cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cf83433b1fb17e3d08fe68a12ee58c7960330cc", "html_url": "https://github.com/rust-lang/rust/commit/4cf83433b1fb17e3d08fe68a12ee58c7960330cc"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "33bcfcc7380e2402eb2e381d240c534541721f62", "filename": "src/eval.rs", "status": "modified", "additions": 1, "deletions": 6, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/src%2Feval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/src%2Feval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval.rs?ref=b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "patch": "@@ -221,12 +221,7 @@ pub fn eval_main<'tcx>(tcx: TyCtxt<'tcx>, main_id: DefId, config: MiriConfig) ->\n             };\n             e.print_backtrace();\n             if let Some(frame) = ecx.stack().last() {\n-                let block = &frame.body.basic_blocks()[frame.block.unwrap()];\n-                let span = if frame.stmt < block.statements.len() {\n-                    block.statements[frame.stmt].source_info.span\n-                } else {\n-                    block.terminator().source_info.span\n-                };\n+                let span = frame.current_source_info().unwrap().span;\n \n                 let msg = format!(\"Miri evaluation error: {}\", msg);\n                 let mut err = ecx.tcx.sess.struct_span_err(span, msg.as_str());"}, {"sha": "7bd29e1741946b07164a93358e5fb729e12f22fa", "filename": "src/helpers.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "patch": "@@ -132,9 +132,13 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         // Push frame.\n         let mir = this.load_mir(f.def, None)?;\n+        let span = this.stack().last()\n+            .and_then(Frame::current_source_info)\n+            .map(|si| si.span)\n+            .unwrap_or(DUMMY_SP);\n         this.push_stack_frame(\n             f,\n-            DUMMY_SP, // There is no call site.\n+            span,\n             mir,\n             dest,\n             stack_pop,"}, {"sha": "3e82519f86b1458661965481b2a2edc31d845ec1", "filename": "src/shims/panic.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/src%2Fshims%2Fpanic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2cddd27bd1ba25f20cb5608d73053170f2ed83b/src%2Fshims%2Fpanic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fpanic.rs?ref=b2cddd27bd1ba25f20cb5608d73053170f2ed83b", "patch": "@@ -166,7 +166,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 // Forward to `panic_bounds_check` lang item.\n \n                 // First arg: Caller location.\n-                let location = this.alloc_caller_location_for_span(span)?;\n+                let location = this.alloc_caller_location_for_span(span);\n                 // Second arg: index.\n                 let index = this.read_scalar(this.eval_operand(index, None)?)?;\n                 // Third arg: len.\n@@ -190,7 +190,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 let msg = this.allocate_str(msg, MiriMemoryKind::Static.into());\n \n                 // Second arg: Caller location.\n-                let location = this.alloc_caller_location_for_span(span)?;\n+                let location = this.alloc_caller_location_for_span(span);\n \n                 // Call the lang item.\n                 let panic = this.tcx.lang_items().panic_fn().unwrap();"}]}