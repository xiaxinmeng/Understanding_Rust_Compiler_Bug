{"sha": "53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZDhlYzBlY2I2ZTE2ZTI1ZDc2NDZkNmY2YzE0M2FjMmQ4ZjE4MTk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-07T15:19:44Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-12T21:51:34Z"}, "message": "Prepare main.js for tests", "tree": {"sha": "5dfa498264e01dfc5da0502f201fc109557305db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5dfa498264e01dfc5da0502f201fc109557305db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819", "html_url": "https://github.com/rust-lang/rust/commit/53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f18c52b2233b8d1142fea29551e140fd15d3ae70", "url": "https://api.github.com/repos/rust-lang/rust/commits/f18c52b2233b8d1142fea29551e140fd15d3ae70", "html_url": "https://github.com/rust-lang/rust/commit/f18c52b2233b8d1142fea29551e140fd15d3ae70"}], "stats": {"total": 82, "additions": 39, "deletions": 43}, "files": [{"sha": "a9a5bd5de0552f6f4752917e0b4182d3356354ba", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 39, "deletions": 43, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=53d8ec0ecb6e16e25d7646d6f6c143ac2d8f1819", "patch": "@@ -353,35 +353,33 @@\n      * This code is an unmodified version of the code written by Marco de Wit\n      * and was found at http://stackoverflow.com/a/18514751/745719\n      */\n-    var levenshtein = (function() {\n-        var row2 = [];\n-        return function(s1, s2) {\n-            if (s1 === s2) {\n-                return 0;\n+    var levenshtein_row2 = [];\n+    function levenshtein(s1, s2) {\n+        if (s1 === s2) {\n+            return 0;\n+        }\n+        var s1_len = s1.length, s2_len = s2.length;\n+        if (s1_len && s2_len) {\n+            var i1 = 0, i2 = 0, a, b, c, c2, row = levenshtein_row2;\n+            while (i1 < s1_len) {\n+                row[i1] = ++i1;\n             }\n-            var s1_len = s1.length, s2_len = s2.length;\n-            if (s1_len && s2_len) {\n-                var i1 = 0, i2 = 0, a, b, c, c2, row = row2;\n-                while (i1 < s1_len) {\n-                    row[i1] = ++i1;\n-                }\n-                while (i2 < s2_len) {\n-                    c2 = s2.charCodeAt(i2);\n-                    a = i2;\n-                    ++i2;\n-                    b = i2;\n-                    for (i1 = 0; i1 < s1_len; ++i1) {\n-                        c = a + (s1.charCodeAt(i1) !== c2 ? 1 : 0);\n-                        a = row[i1];\n-                        b = b < a ? (b < c ? b + 1 : c) : (a < c ? a + 1 : c);\n-                        row[i1] = b;\n-                    }\n+            while (i2 < s2_len) {\n+                c2 = s2.charCodeAt(i2);\n+                a = i2;\n+                ++i2;\n+                b = i2;\n+                for (i1 = 0; i1 < s1_len; ++i1) {\n+                    c = a + (s1.charCodeAt(i1) !== c2 ? 1 : 0);\n+                    a = row[i1];\n+                    b = b < a ? (b < c ? b + 1 : c) : (a < c ? a + 1 : c);\n+                    row[i1] = b;\n                 }\n-                return b;\n             }\n-            return s1_len + s2_len;\n-        };\n-    })();\n+            return b;\n+        }\n+        return s1_len + s2_len;\n+    }\n \n     function initSearch(rawSearchIndex) {\n         var currentResults, index, searchIndex;\n@@ -400,12 +398,20 @@\n         /**\n          * Executes the query and builds an index of results\n          * @param  {[Object]} query     [The user query]\n-         * @param  {[type]} max         [The maximum results returned]\n          * @param  {[type]} searchWords [The list of search words to query\n          *                               against]\n          * @return {[type]}             [A search index of results]\n          */\n-        function execQuery(query, max, searchWords) {\n+        function execQuery(query, searchWords) {\n+            function itemTypeFromName(typename) {\n+                for (var i = 0; i < itemTypes.length; ++i) {\n+                    if (itemTypes[i] === typename) {\n+                        return i;\n+                    }\n+                }\n+                return -1;\n+            }\n+\n             var valLower = query.query.toLowerCase(),\n                 val = valLower,\n                 typeFilter = itemTypeFromName(query.type),\n@@ -1021,9 +1027,8 @@\n             return true;\n         }\n \n-        function getQuery() {\n-            var matches, type, query, raw =\n-                document.getElementsByClassName('search-input')[0].value;\n+        function getQuery(raw) {\n+            var matches, type, query;\n             query = raw;\n \n             matches = query.match(/^(fn|mod|struct|enum|trait|type|const|macro)\\s*:\\s*/i);\n@@ -1227,7 +1232,7 @@\n         }\n \n         function showResults(results) {\n-            var output, query = getQuery();\n+            var output, query = getQuery(document.getElementsByClassName('search-input')[0].value);\n \n             currentResults = query.id;\n             output = '<h1>Results for ' + escape(query.query) +\n@@ -1271,7 +1276,7 @@\n                 resultIndex;\n             var params = getQueryStringParams();\n \n-            query = getQuery();\n+            query = getQuery(document.getElementsByClassName('search-input')[0].value);\n             if (e) {\n                 e.preventDefault();\n             }\n@@ -1293,19 +1298,10 @@\n                 }\n             }\n \n-            results = execQuery(query, 20000, index);\n+            results = execQuery(query, index);\n             showResults(results);\n         }\n \n-        function itemTypeFromName(typename) {\n-            for (var i = 0; i < itemTypes.length; ++i) {\n-                if (itemTypes[i] === typename) {\n-                    return i;\n-                }\n-            }\n-            return -1;\n-        }\n-\n         function buildIndex(rawSearchIndex) {\n             searchIndex = [];\n             var searchWords = [];"}]}