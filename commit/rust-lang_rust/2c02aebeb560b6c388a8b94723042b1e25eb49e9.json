{"sha": "2c02aebeb560b6c388a8b94723042b1e25eb49e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMDJhZWJlYjU2MGI2YzM4OGE4Yjk0NzIzMDQyYjFlMjVlYjQ5ZTk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-04T21:23:58Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2019-08-04T21:23:58Z"}, "message": "Query less hints on file open", "tree": {"sha": "f42d4c2093085856e4c2ac345ca4f70e08bf656f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f42d4c2093085856e4c2ac345ca4f70e08bf656f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c02aebeb560b6c388a8b94723042b1e25eb49e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c02aebeb560b6c388a8b94723042b1e25eb49e9", "html_url": "https://github.com/rust-lang/rust/commit/2c02aebeb560b6c388a8b94723042b1e25eb49e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c02aebeb560b6c388a8b94723042b1e25eb49e9/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4912cc35afe96b1506e5cda1be34d3e2418bc702", "url": "https://api.github.com/repos/rust-lang/rust/commits/4912cc35afe96b1506e5cda1be34d3e2418bc702", "html_url": "https://github.com/rust-lang/rust/commit/4912cc35afe96b1506e5cda1be34d3e2418bc702"}], "stats": {"total": 52, "additions": 34, "deletions": 18}, "files": [{"sha": "5af3a69bcbfcd2aedf1746c1c73bc55c86eceab9", "filename": "editors/code/src/commands/inlay_hints.ts", "status": "modified", "additions": 34, "deletions": 18, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/2c02aebeb560b6c388a8b94723042b1e25eb49e9/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2c02aebeb560b6c388a8b94723042b1e25eb49e9/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts?ref=2c02aebeb560b6c388a8b94723042b1e25eb49e9", "patch": "@@ -21,32 +21,36 @@ const typeHintDecorationType = vscode.window.createTextEditorDecorationType({\n \n export class HintsUpdater {\n     private displayHints = true;\n+    private drawnDecorations = new Map<string, vscode.DecorationOptions[]>();\n \n-    public async loadHints(\n-        editor: vscode.TextEditor | undefined\n-    ): Promise<void> {\n-        if (\n-            this.displayHints &&\n-            editor !== undefined &&\n-            this.isRustDocument(editor.document)\n-        ) {\n-            await this.updateDecorationsFromServer(\n-                editor.document.uri.toString(),\n-                editor\n-            );\n+    public async loadHints(editor?: vscode.TextEditor): Promise<void> {\n+        if (this.displayHints) {\n+            const documentUri = this.getEditorDocumentUri(editor);\n+            if (documentUri !== null) {\n+                const latestDecorations = this.drawnDecorations.get(documentUri);\n+                if (latestDecorations === undefined) {\n+                    await this.updateDecorationsFromServer(\n+                        documentUri,\n+                        editor!\n+                    );\n+                } else {\n+                    await editor!.setDecorations(typeHintDecorationType, latestDecorations);\n+                }\n+            }\n         }\n     }\n \n     public async toggleHintsDisplay(displayHints: boolean): Promise<void> {\n         if (this.displayHints !== displayHints) {\n             this.displayHints = displayHints;\n+            this.drawnDecorations.clear();\n \n             if (displayHints) {\n                 return this.updateHints();\n             } else {\n                 const editor = vscode.window.activeTextEditor;\n-                if (editor != null) {\n-                    return editor.setDecorations(typeHintDecorationType, []);\n+                if (this.getEditorDocumentUri(editor) !== null) {\n+                    return editor!.setDecorations(typeHintDecorationType, []);\n                 }\n             }\n         }\n@@ -85,10 +89,15 @@ export class HintsUpdater {\n                 range: hint.range,\n                 renderOptions: { after: { contentText: `: ${hint.label}` } }\n             }));\n-            return editor.setDecorations(\n-                typeHintDecorationType,\n-                newDecorations\n-            );\n+\n+            this.drawnDecorations.set(documentUri, newDecorations);\n+\n+            if (this.getEditorDocumentUri(vscode.window.activeTextEditor) === documentUri) {\n+                return editor.setDecorations(\n+                    typeHintDecorationType,\n+                    newDecorations\n+                );\n+            }\n         }\n     }\n \n@@ -106,4 +115,11 @@ export class HintsUpdater {\n                 )\n             );\n     }\n+\n+    private getEditorDocumentUri(editor?: vscode.TextEditor): string | null {\n+        if (editor && this.isRustDocument(editor.document)) {\n+            return editor.document.uri.toString();\n+        }\n+        return null;\n+    }\n }"}]}