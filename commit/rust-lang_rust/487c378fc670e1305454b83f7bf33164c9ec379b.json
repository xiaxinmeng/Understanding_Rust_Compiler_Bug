{"sha": "487c378fc670e1305454b83f7bf33164c9ec379b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4N2MzNzhmYzY3MGUxMzA1NDU0YjgzZjdiZjMzMTY0YzllYzM3OWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-24T15:03:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-02-24T15:03:00Z"}, "message": "rustc_metadata: Load metadata for indirect macro-only dependencies", "tree": {"sha": "ed1b5c2a098e234242e9ea68f63079bbad5ac35c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed1b5c2a098e234242e9ea68f63079bbad5ac35c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/487c378fc670e1305454b83f7bf33164c9ec379b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/487c378fc670e1305454b83f7bf33164c9ec379b", "html_url": "https://github.com/rust-lang/rust/commit/487c378fc670e1305454b83f7bf33164c9ec379b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/487c378fc670e1305454b83f7bf33164c9ec379b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a328a0ade570608717b0df654306a5268c9f46", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a328a0ade570608717b0df654306a5268c9f46", "html_url": "https://github.com/rust-lang/rust/commit/d9a328a0ade570608717b0df654306a5268c9f46"}], "stats": {"total": 29, "additions": 5, "deletions": 24}, "files": [{"sha": "75bdb0ccdf44aeaab2249b44ec8b4f98d5b7e058", "filename": "src/librustc/middle/cstore.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc%2Fmiddle%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcstore.rs?ref=487c378fc670e1305454b83f7bf33164c9ec379b", "patch": "@@ -53,9 +53,6 @@ impl CrateSource {\n     HashStable\n )]\n pub enum DepKind {\n-    /// A dependency that is only used for its macros, none of which are visible from other crates.\n-    /// These are included in the metadata only as placeholders and are ignored when decoding.\n-    UnexportedMacrosOnly,\n     /// A dependency that is only used for its macros.\n     MacrosOnly,\n     /// A dependency that is always injected into the dependency list and so\n@@ -69,7 +66,7 @@ pub enum DepKind {\n impl DepKind {\n     pub fn macros_only(self) -> bool {\n         match self {\n-            DepKind::UnexportedMacrosOnly | DepKind::MacrosOnly => true,\n+            DepKind::MacrosOnly => true,\n             DepKind::Implicit | DepKind::Explicit => false,\n         }\n     }"}, {"sha": "877990d5cbbe68dc81edcf32dedb1233796cd191", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=487c378fc670e1305454b83f7bf33164c9ec379b", "patch": "@@ -463,7 +463,7 @@ impl<'a> CrateLoader<'a> {\n             self.load(&mut locator)\n                 .map(|r| (r, None))\n                 .or_else(|| {\n-                    dep_kind = DepKind::UnexportedMacrosOnly;\n+                    dep_kind = DepKind::MacrosOnly;\n                     self.load_proc_macro(&mut locator, path_kind)\n                 })\n                 .ok_or_else(move || LoadError::LocatorError(locator))?\n@@ -473,7 +473,7 @@ impl<'a> CrateLoader<'a> {\n             (LoadResult::Previous(cnum), None) => {\n                 let data = self.cstore.get_crate_data(cnum);\n                 if data.is_proc_macro_crate() {\n-                    dep_kind = DepKind::UnexportedMacrosOnly;\n+                    dep_kind = DepKind::MacrosOnly;\n                 }\n                 data.update_dep_kind(|data_dep_kind| cmp::max(data_dep_kind, dep_kind));\n                 Ok(cnum)\n@@ -547,9 +547,6 @@ impl<'a> CrateLoader<'a> {\n                     \"resolving dep crate {} hash: `{}` extra filename: `{}`\",\n                     dep.name, dep.hash, dep.extra_filename\n                 );\n-                if dep.kind == DepKind::UnexportedMacrosOnly {\n-                    return krate;\n-                }\n                 let dep_kind = match dep_kind {\n                     DepKind::MacrosOnly => DepKind::MacrosOnly,\n                     _ => dep.kind,\n@@ -853,7 +850,7 @@ impl<'a> CrateLoader<'a> {\n                     None => item.ident.name,\n                 };\n                 let dep_kind = if attr::contains_name(&item.attrs, sym::no_link) {\n-                    DepKind::UnexportedMacrosOnly\n+                    DepKind::MacrosOnly\n                 } else {\n                     DepKind::Explicit\n                 };"}, {"sha": "dec5eea4ee95705a6643ea6ece26cfd037e3de1a", "filename": "src/librustc_metadata/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 1, "deletions": 9, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=487c378fc670e1305454b83f7bf33164c9ec379b", "patch": "@@ -7,7 +7,7 @@ use crate::rmeta::{self, encoder};\n use rustc::hir::exports::Export;\n use rustc::hir::map::definitions::DefPathTable;\n use rustc::hir::map::{DefKey, DefPath, DefPathHash};\n-use rustc::middle::cstore::{CrateSource, CrateStore, DepKind, EncodedMetadata, NativeLibraryKind};\n+use rustc::middle::cstore::{CrateSource, CrateStore, EncodedMetadata, NativeLibraryKind};\n use rustc::middle::exported_symbols::ExportedSymbol;\n use rustc::middle::stability::DeprecationEntry;\n use rustc::session::{CrateDisambiguator, Session};\n@@ -392,14 +392,6 @@ pub fn provide(providers: &mut Providers<'_>) {\n }\n \n impl CStore {\n-    pub fn export_macros_untracked(&self, cnum: CrateNum) {\n-        let data = self.get_crate_data(cnum);\n-        let mut dep_kind = data.dep_kind.lock();\n-        if *dep_kind == DepKind::UnexportedMacrosOnly {\n-            *dep_kind = DepKind::MacrosOnly;\n-        }\n-    }\n-\n     pub fn struct_field_names_untracked(&self, def: DefId, sess: &Session) -> Vec<Spanned<Symbol>> {\n         self.get_crate_data(def.krate).get_struct_field_names(def.index, sess)\n     }"}, {"sha": "7474c80e0cd1f67a100503eb371ad94065fa0f6b", "filename": "src/librustc_resolve/imports.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc_resolve%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/487c378fc670e1305454b83f7bf33164c9ec379b/src%2Flibrustc_resolve%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fimports.rs?ref=487c378fc670e1305454b83f7bf33164c9ec379b", "patch": "@@ -1403,11 +1403,6 @@ impl<'a, 'b> ImportResolver<'a, 'b> {\n             if is_good_import || binding.is_macro_def() {\n                 let res = binding.res();\n                 if res != Res::Err {\n-                    if let Some(def_id) = res.opt_def_id() {\n-                        if !def_id.is_local() {\n-                            this.cstore().export_macros_untracked(def_id.krate);\n-                        }\n-                    }\n                     reexports.push(Export { ident, res, span: binding.span, vis: binding.vis });\n                 }\n             }"}]}