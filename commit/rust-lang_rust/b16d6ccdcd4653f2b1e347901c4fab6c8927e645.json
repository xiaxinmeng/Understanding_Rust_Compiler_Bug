{"sha": "b16d6ccdcd4653f2b1e347901c4fab6c8927e645", "node_id": "C_kwDOAAsO6NoAKGIxNmQ2Y2NkY2Q0NjUzZjJiMWUzNDc5MDFjNGZhYjZjODkyN2U2NDU", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-03-12T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2023-03-12T00:00:00Z"}, "message": "Document BinOp::is_checkable", "tree": {"sha": "784d4e943a2ef6e1c181339a9ccfe23fa1996fe5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/784d4e943a2ef6e1c181339a9ccfe23fa1996fe5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b16d6ccdcd4653f2b1e347901c4fab6c8927e645", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b16d6ccdcd4653f2b1e347901c4fab6c8927e645", "html_url": "https://github.com/rust-lang/rust/commit/b16d6ccdcd4653f2b1e347901c4fab6c8927e645", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b16d6ccdcd4653f2b1e347901c4fab6c8927e645/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "938afba8996fe058b91c61b23ef5d000cb9ac169", "url": "https://api.github.com/repos/rust-lang/rust/commits/938afba8996fe058b91c61b23ef5d000cb9ac169", "html_url": "https://github.com/rust-lang/rust/commit/938afba8996fe058b91c61b23ef5d000cb9ac169"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "b34651c3ea7972c77db1da4c8c395c57363c40d2", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b16d6ccdcd4653f2b1e347901c4fab6c8927e645/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b16d6ccdcd4653f2b1e347901c4fab6c8927e645/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=b16d6ccdcd4653f2b1e347901c4fab6c8927e645", "patch": "@@ -1999,6 +1999,9 @@ impl BorrowKind {\n }\n \n impl BinOp {\n+    /// The checkable operators are those whose overflow checking behavior is controlled by\n+    /// -Coverflow-checks option. The remaining operators have either no overflow conditions (e.g.,\n+    /// BitAnd, BitOr, BitXor) or are always checked for overflow (e.g., Div, Rem).\n     pub fn is_checkable(self) -> bool {\n         use self::BinOp::*;\n         matches!(self, Add | Sub | Mul | Shl | Shr)"}]}