{"sha": "3c6c1c99b41e2a3c9a31b0d4c73d660399255cba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjNmMxYzk5YjQxZTJhM2M5YTMxYjBkNGM3M2Q2NjAzOTkyNTVjYmE=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-29T11:23:07Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-03-29T11:23:07Z"}, "message": "Don't use snippets", "tree": {"sha": "acfbb796291221a9e6d8b6934d5073aa9ec034b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/acfbb796291221a9e6d8b6934d5073aa9ec034b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba", "html_url": "https://github.com/rust-lang/rust/commit/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c1092455e6b110a28ff27e76a7e21e48fd0a038", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c1092455e6b110a28ff27e76a7e21e48fd0a038", "html_url": "https://github.com/rust-lang/rust/commit/8c1092455e6b110a28ff27e76a7e21e48fd0a038"}], "stats": {"total": 33, "additions": 14, "deletions": 19}, "files": [{"sha": "442a209b976e18a50bf23aa98f32e044a8eb4372", "filename": "crates/ide_assists/src/handlers/extract_type_alias.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_type_alias.rs?ref=3c6c1c99b41e2a3c9a31b0d4c73d660399255cba", "patch": "@@ -13,10 +13,10 @@ use crate::{AssistContext, AssistId, AssistKind, Assists};\n // ```\n // ->\n // ```\n-// type ${0:Type} = (u8, u8, u8);\n+// type $0Type = (u8, u8, u8);\n //\n // struct S {\n-//     field: ${0:Type},\n+//     field: Type,\n // }\n // ```\n pub(crate) fn extract_type_alias(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n@@ -34,17 +34,12 @@ pub(crate) fn extract_type_alias(acc: &mut Assists, ctx: &AssistContext) -> Opti\n         target,\n         |builder| {\n             builder.edit_file(ctx.frange.file_id);\n+            builder.replace(target, \"Type\");\n             match ctx.config.snippet_cap {\n                 Some(cap) => {\n-                    builder.replace_snippet(cap, target, \"${0:Type}\");\n-                    builder.insert_snippet(\n-                        cap,\n-                        insert,\n-                        format!(\"type ${{0:Type}} = {};\\n\\n\", node),\n-                    );\n+                    builder.insert_snippet(cap, insert, format!(\"type $0Type = {};\\n\\n\", node));\n                 }\n                 None => {\n-                    builder.replace(target, \"Type\");\n                     builder.insert(insert, format!(\"type Type = {};\\n\\n\", node));\n                 }\n             }\n@@ -80,10 +75,10 @@ struct S {\n }\n             \",\n             r#\"\n-type ${0:Type} = u8;\n+type $0Type = u8;\n \n struct S {\n-    field: ${0:Type},\n+    field: Type,\n }\n             \"#,\n         );\n@@ -103,10 +98,10 @@ fn f() {\n             r#\"\n fn generic<T>() {}\n \n-type ${0:Type} = ();\n+type $0Type = ();\n \n fn f() {\n-    generic::<${0:Type}>();\n+    generic::<Type>();\n }\n             \"#,\n         );\n@@ -124,10 +119,10 @@ struct S {\n             \",\n             r#\"\n struct Vec<T> {}\n-type ${0:Type} = Vec<u8>;\n+type $0Type = Vec<u8>;\n \n struct S {\n-    v: Vec<Vec<${0:Type}>>,\n+    v: Vec<Vec<Type>>,\n }\n             \"#,\n         );\n@@ -143,10 +138,10 @@ struct S {\n }\n             \",\n             r#\"\n-type ${0:Type} = u8;\n+type $0Type = u8;\n \n struct S {\n-    field: (${0:Type},),\n+    field: (Type,),\n }\n             \"#,\n         );"}, {"sha": "03b7fb36623193d2a06115b24803623831b75985", "filename": "crates/ide_assists/src/tests/generated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c6c1c99b41e2a3c9a31b0d4c73d660399255cba/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Ftests%2Fgenerated.rs?ref=3c6c1c99b41e2a3c9a31b0d4c73d660399255cba", "patch": "@@ -338,10 +338,10 @@ struct S {\n }\n \"#####,\n         r#####\"\n-type ${0:Type} = (u8, u8, u8);\n+type $0Type = (u8, u8, u8);\n \n struct S {\n-    field: ${0:Type},\n+    field: Type,\n }\n \"#####,\n     )"}]}