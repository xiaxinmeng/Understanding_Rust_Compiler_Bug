{"sha": "20c8d8aabc74b2b045f96afcade2383796019ff4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwYzhkOGFhYmM3NGIyYjA0NWY5NmFmY2FkZTIzODM3OTYwMTlmZjQ=", "commit": {"author": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-04-24T18:01:06Z"}, "committer": {"name": "Ruben Schmidmeister", "email": "ruben.schmidmeister@icloud.com", "date": "2019-04-24T19:01:09Z"}, "message": "Split auto_detect tests into seperate fns", "tree": {"sha": "19a5682b8606ae4fa0ccf4c76036650a212f4f4c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19a5682b8606ae4fa0ccf4c76036650a212f4f4c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20c8d8aabc74b2b045f96afcade2383796019ff4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQEzBAABCAAdFiEEU0FXzFYkrmfOhhqxKTh7Wnqvhj8FAlzAsnUACgkQKTh7Wnqv\nhj8mpQf/TmQ3/n+NdL5Om0bII900Q3aIsB58VQtqqDlamsIOsi6Ty8ZOG1zThlUF\n2/+9FojxOt34z5LmARtDEkHNybZGbqQeuOs94JqD7u/pBlkFYqTt9A/eC5FNG+Nk\nc6thMYL92/3u3UEA+00sRE/bDGgGK3icUyyRdtCV1CK3xd0epW1D6RCs8Zu0LwP0\nxELJHVsYww4/jYW+x9D7WzMbtZRNVl9NYr9vGJWD6htG1Xk3QAALUd4FcsL0hfPx\nksjef+BIUOMVEKsUsaW7Ns3prkYrOBehQsWFJdWRiI6WOuQjRXbb3bn30rTP2HvC\nNCU0yhFg+FT/OZluRbLtLRzK4D0pkw==\n=fjqN\n-----END PGP SIGNATURE-----", "payload": "tree 19a5682b8606ae4fa0ccf4c76036650a212f4f4c\nparent 764cdf60fafe3f8866c75935c381fbf8bcc7f485\nauthor Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1556128866 +0200\ncommitter Ruben Schmidmeister <ruben.schmidmeister@icloud.com> 1556132469 +0200\n\nSplit auto_detect tests into seperate fns\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20c8d8aabc74b2b045f96afcade2383796019ff4", "html_url": "https://github.com/rust-lang/rust/commit/20c8d8aabc74b2b045f96afcade2383796019ff4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20c8d8aabc74b2b045f96afcade2383796019ff4/comments", "author": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bash", "id": 4602612, "node_id": "MDQ6VXNlcjQ2MDI2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/4602612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bash", "html_url": "https://github.com/bash", "followers_url": "https://api.github.com/users/bash/followers", "following_url": "https://api.github.com/users/bash/following{/other_user}", "gists_url": "https://api.github.com/users/bash/gists{/gist_id}", "starred_url": "https://api.github.com/users/bash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bash/subscriptions", "organizations_url": "https://api.github.com/users/bash/orgs", "repos_url": "https://api.github.com/users/bash/repos", "events_url": "https://api.github.com/users/bash/events{/privacy}", "received_events_url": "https://api.github.com/users/bash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "764cdf60fafe3f8866c75935c381fbf8bcc7f485", "url": "https://api.github.com/repos/rust-lang/rust/commits/764cdf60fafe3f8866c75935c381fbf8bcc7f485", "html_url": "https://github.com/rust-lang/rust/commit/764cdf60fafe3f8866c75935c381fbf8bcc7f485"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "dc80715044fd96bcc1b69b4773c573fc74f84c80", "filename": "src/formatting/newline_style.rs", "status": "modified", "additions": 20, "deletions": 13, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/20c8d8aabc74b2b045f96afcade2383796019ff4/src%2Fformatting%2Fnewline_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20c8d8aabc74b2b045f96afcade2383796019ff4/src%2Fformatting%2Fnewline_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting%2Fnewline_style.rs?ref=20c8d8aabc74b2b045f96afcade2383796019ff4", "patch": "@@ -79,25 +79,32 @@ mod tests {\n     use super::*;\n \n     #[test]\n-    fn test_newline_style_auto_detect() {\n-        let lf = \"One\\nTwo\\nThree\";\n-        let crlf = \"One\\r\\nTwo\\r\\nThree\";\n-        let none = \"One Two Three\";\n+    fn auto_detects_unix_newlines() {\n+        assert_eq!(\n+            EffectiveNewlineStyle::Unix,\n+            auto_detect_newline_style(\"One\\nTwo\\nThree\")\n+        );\n+    }\n \n-        assert_eq!(EffectiveNewlineStyle::Unix, auto_detect_newline_style(lf));\n+    #[test]\n+    fn auto_detects_windows_newlines() {\n         assert_eq!(\n             EffectiveNewlineStyle::Windows,\n-            auto_detect_newline_style(crlf)\n+            auto_detect_newline_style(\"One\\r\\nTwo\\r\\nThree\")\n         );\n+    }\n \n-        if cfg!(windows) {\n-            assert_eq!(\n-                EffectiveNewlineStyle::Windows,\n-                auto_detect_newline_style(none)\n-            );\n+    #[test]\n+    fn falls_back_to_native_newlines_if_no_newlines_are_found() {\n+        let expected_newline_style = if cfg!(windows) {\n+            EffectiveNewlineStyle::Windows\n         } else {\n-            assert_eq!(EffectiveNewlineStyle::Unix, auto_detect_newline_style(none));\n-        }\n+            EffectiveNewlineStyle::Unix\n+        };\n+        assert_eq!(\n+            expected_newline_style,\n+            auto_detect_newline_style(\"One Two Three\")\n+        );\n     }\n \n     #[test]"}]}