{"sha": "409b8e73434ed4eeef4c460f4f03687ca1c9623d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQwOWI4ZTczNDM0ZWQ0ZWVlZjRjNDYwZjRmMDM2ODdjYTFjOTYyM2Q=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-24T14:04:00Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-10-24T14:04:00Z"}, "message": "Revert \"Revert \"Automatically defines the `clippy` feature\"\"\n\nThis reverts commit e4dceef7e79c96c4ddeffd59a2c532bd239f98a6.", "tree": {"sha": "c5aa013233aed79477b61851e05a6fbc5c422b1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5aa013233aed79477b61851e05a6fbc5c422b1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/409b8e73434ed4eeef4c460f4f03687ca1c9623d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJYDhTrAAoJEF5CfHlMukXoiGgP/2msiSNuS2GK7B1jrnLUA8Fw\nxHeCIynsid/IiNzCIohk3fN5Mrnu6i6KpbQwcB6kMpHQMVDlnFRhaVcGxzbf0dNi\nPCzKd87B8flrwSQvmZMBg9+s+V0XblAEozlI1DuCE/EpOrhOVdpVNIub6qsquCYx\n8OAR1cW8bdD7gEwJ/tG3QhMcVcPlSzeCvRCUoNQ8mPUG/aEPl8KCaiQ9TIW2MZWp\n1Sdlvq8Y1uqzRQWIg9Izd2tLmaxqTiNqy2WLZ5NQjJdpdFs5HzmGEe/MSAWM71TT\nlSJSezFBaYHgIYWbbJ2063WpsFFuGBOBZaHTcKwSdB0EufrfGb98aKuUvZU6kjwi\nsmUkERuKOuXl1e9/yCqXIpwFwM5XkjQKT9FgDtTmryPCfJUine11UWnpIIgdCldZ\n94eZqy1pgn/5ZDjJRzcRd4eQQ0TZcNv3y2gA5Z/uJaYvyxNkL0HCrGHBZt6iiUYt\nPnOjnHe2Vb3ebF8feLOg00r2lDykyw1ubPrQ7XbnE53xg2bWrcGnHzNN+g+zUk1V\nagQOEjm7Ei6cRtdPe0opkIyTzy/rbJufKKOteF0Oli8caNklZdLGV15a32cCL1b3\nvSA/q4W380SIBZuu7H7VfqZCx8v+S1Eg7AcTvoaoeqEhJmZVE5tFQ2vsERM8Btat\nSMLAhnALN43/EXVbrwRE\n=fnb1\n-----END PGP SIGNATURE-----", "payload": "tree c5aa013233aed79477b61851e05a6fbc5c422b1d\nparent 492341593094d3b1a3ffa2e5d6e5820fb0dd7a83\nauthor mcarton <cartonmartin+git@gmail.com> 1477317840 +0200\ncommitter mcarton <cartonmartin+git@gmail.com> 1477317840 +0200\n\nRevert \"Revert \"Automatically defines the `clippy` feature\"\"\n\nThis reverts commit e4dceef7e79c96c4ddeffd59a2c532bd239f98a6.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/409b8e73434ed4eeef4c460f4f03687ca1c9623d", "html_url": "https://github.com/rust-lang/rust/commit/409b8e73434ed4eeef4c460f4f03687ca1c9623d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/409b8e73434ed4eeef4c460f4f03687ca1c9623d/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "492341593094d3b1a3ffa2e5d6e5820fb0dd7a83", "url": "https://api.github.com/repos/rust-lang/rust/commits/492341593094d3b1a3ffa2e5d6e5820fb0dd7a83", "html_url": "https://github.com/rust-lang/rust/commit/492341593094d3b1a3ffa2e5d6e5820fb0dd7a83"}], "stats": {"total": 33, "additions": 28, "deletions": 5}, "files": [{"sha": "fd75c7d07459f6554c6b2e5f0172c2b97d644f00", "filename": "CHANGELOG.md", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/409b8e73434ed4eeef4c460f4f03687ca1c9623d/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/409b8e73434ed4eeef4c460f4f03687ca1c9623d/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=409b8e73434ed4eeef4c460f4f03687ca1c9623d", "patch": "@@ -1,6 +1,12 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.97 \u2014 2016-10-24\n+* For convenience, `cargo clippy` defines a `cargo-clippy` feature. This was\n+  previously added for a short time under the name `clippy` but removed for\n+  compatibility.\n+* `cargo clippy --help` is more helping (and less helpful :smile:)\n+\n ## 0.0.96 \u2014 2016-10-22\n * Rustup to *rustc 1.14.0-nightly (f09420685 2016-10-20)*\n * New lint: [`iter_skip_next`]"}, {"sha": "385a69982388602c1c16ed06098f07108686ef9e", "filename": "README.md", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/409b8e73434ed4eeef4c460f4f03687ca1c9623d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/409b8e73434ed4eeef4c460f4f03687ca1c9623d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=409b8e73434ed4eeef4c460f4f03687ca1c9623d", "patch": "@@ -163,6 +163,14 @@ You can add options  to `allow`/`warn`/`deny`:\n \n Note: `deny` produces errors instead of warnings.\n \n+For convenience, `cargo clippy` automatically defines a `cargo-clippy`\n+features. This lets you set lints level and compile with or without clippy\n+transparently:\n+\n+```rust\n+#[cfg_attr(feature = \"cargo-clippy\", allow(needless_lifetimes))]\n+```\n+\n ## Link with clippy service\n \n `clippy-service` is a rust web initiative providing `rust-clippy` as a web service."}, {"sha": "fe1a453ff6289e74379ad3bbf3967af633eb3a13", "filename": "src/main.rs", "status": "modified", "additions": 14, "deletions": 5, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/409b8e73434ed4eeef4c460f4f03687ca1c9623d/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/409b8e73434ed4eeef4c460f4f03687ca1c9623d/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=409b8e73434ed4eeef4c460f4f03687ca1c9623d", "patch": "@@ -111,8 +111,7 @@ impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n \n use std::path::Path;\n \n-const CARGO_CLIPPY_HELP: &str = \"\\\n-Checks a package to catch common mistakes and improve your Rust code.\n+const CARGO_CLIPPY_HELP: &str = r#\"Checks a package to catch common mistakes and improve your Rust code.\n \n Usage:\n     cargo clippy [options] [--] [<opts>...]\n@@ -129,8 +128,13 @@ one of:\n     -W --warn OPT       Set lint warnings\n     -A --allow OPT      Set lint allowed\n     -D --deny OPT       Set lint denied\n-    -F --forbid OPT     Set lint forbidden\\\n-\";\n+    -F --forbid OPT     Set lint forbidden\n+\n+The feature `cargo-clippy` is automatically defined for convinence. You can use\n+it to allow or deny lints, eg.:\n+\n+    #[cfg_attr(feature = \"cargo-clippy\", allow(needless_lifetimes))]\n+\"#;\n \n pub fn main() {\n     use std::env;\n@@ -213,13 +217,16 @@ pub fn main() {\n \n         // this conditional check for the --sysroot flag is there so users can call `cargo-clippy` directly\n         // without having to pass --sysroot or anything\n-        let args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n+        let mut args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n             env::args().collect()\n         } else {\n             env::args().chain(Some(\"--sysroot\".to_owned())).chain(Some(sys_root)).collect()\n         };\n+\n         // this check ensures that dependencies are built but not linted and the final crate is\n         // linted but not built\n+        args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);\n+\n         let mut ccc = ClippyCompilerCalls::new(env::args().any(|s| s == \"-Zno-trans\"));\n         let (result, _) = rustc_driver::run_compiler(&args, &mut ccc, None, None);\n \n@@ -251,6 +258,8 @@ fn process<P, I>(old_args: I, dep_path: P, sysroot: &str) -> Result<(), i32>\n     args.push(String::from(\"--sysroot\"));\n     args.push(sysroot.to_owned());\n     args.push(\"-Zno-trans\".to_owned());\n+    args.push(\"--cfg\".to_owned());\n+    args.push(r#\"feature=\"cargo-clippy\"\"#.to_owned());\n \n     let path = std::env::current_exe().expect(\"current executable path invalid\");\n     let exit_status = std::process::Command::new(\"cargo\")"}]}