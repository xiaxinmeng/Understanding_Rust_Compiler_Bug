{"sha": "cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "node_id": "C_kwDOAAsO6NoAKGNmZDA2MjM0MTEyNWFlM2FiYmYyZTdhN2UzMGNmYjFlOGFjMGM2ZTM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-29T15:15:48Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2023-05-29T15:15:48Z"}, "message": "unique borrows are mutating uses", "tree": {"sha": "36843282387ee9dd7e8d11877933e04e366e7acb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36843282387ee9dd7e8d11877933e04e366e7acb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "html_url": "https://github.com/rust-lang/rust/commit/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99ff5afeb8717c096a4f153896e0c3856a3934ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/99ff5afeb8717c096a4f153896e0c3856a3934ad", "html_url": "https://github.com/rust-lang/rust/commit/99ff5afeb8717c096a4f153896e0c3856a3934ad"}], "stats": {"total": 26, "additions": 7, "deletions": 19}, "files": [{"sha": "b719a610e07c78f41e289dcc1bc435e871ce51c4", "filename": "compiler/rustc_borrowck/src/def_use.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdef_use.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -50,7 +50,6 @@ pub fn categorize(context: PlaceContext) -> Option<DefUse> {\n         PlaceContext::MutatingUse(MutatingUseContext::Borrow) |\n         PlaceContext::NonMutatingUse(NonMutatingUseContext::SharedBorrow) |\n         PlaceContext::NonMutatingUse(NonMutatingUseContext::ShallowBorrow) |\n-        PlaceContext::NonMutatingUse(NonMutatingUseContext::UniqueBorrow) |\n \n         // `PlaceMention` and `AscribeUserType` both evaluate the place, which must not\n         // contain dangling references."}, {"sha": "dc5121e1a2ae318d7d97bcddd186a2e11a32657d", "filename": "compiler/rustc_borrowck/src/type_check/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Ftype_check%2Fmod.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -766,8 +766,8 @@ impl<'a, 'b, 'tcx> TypeVerifier<'a, 'b, 'tcx> {\n             PlaceContext::MutatingUse(_) => ty::Invariant,\n             PlaceContext::NonUse(StorageDead | StorageLive | VarDebugInfo) => ty::Invariant,\n             PlaceContext::NonMutatingUse(\n-                Inspect | Copy | Move | PlaceMention | SharedBorrow | ShallowBorrow | UniqueBorrow\n-                | AddressOf | Projection,\n+                Inspect | Copy | Move | PlaceMention | SharedBorrow | ShallowBorrow | AddressOf\n+                | Projection,\n             ) => ty::Covariant,\n             PlaceContext::NonUse(AscribeUserTy(variance)) => variance,\n         }"}, {"sha": "22c1f05974ddde2fa0317b94d23d0c855bdc0e44", "filename": "compiler/rustc_codegen_ssa/src/mir/analyze.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -234,7 +234,6 @@ impl<'mir, 'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> Visitor<'tcx>\n             | PlaceContext::NonMutatingUse(\n                 NonMutatingUseContext::Inspect\n                 | NonMutatingUseContext::SharedBorrow\n-                | NonMutatingUseContext::UniqueBorrow\n                 | NonMutatingUseContext::ShallowBorrow\n                 | NonMutatingUseContext::AddressOf\n                 | NonMutatingUseContext::Projection,"}, {"sha": "57d939747aab389195440e33c733cfa9005bac17", "filename": "compiler/rustc_const_eval/src/transform/check_consts/check.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fcheck.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -412,9 +412,7 @@ impl<'tcx> Visitor<'tcx> for Checker<'_, 'tcx> {\n                         BorrowKind::Shallow => {\n                             PlaceContext::NonMutatingUse(NonMutatingUseContext::ShallowBorrow)\n                         }\n-                        BorrowKind::Unique => {\n-                            PlaceContext::NonMutatingUse(NonMutatingUseContext::UniqueBorrow)\n-                        }\n+                        BorrowKind::Unique => PlaceContext::MutatingUse(MutatingUseContext::Borrow),\n                         BorrowKind::Mut { .. } => {\n                             PlaceContext::MutatingUse(MutatingUseContext::Borrow)\n                         }"}, {"sha": "8d44e929afde3a432e8ea8aaf841f418e58fdd6a", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -650,8 +650,8 @@ macro_rules! make_mir_visitor {\n                             BorrowKind::Shallow => PlaceContext::NonMutatingUse(\n                                 NonMutatingUseContext::ShallowBorrow\n                             ),\n-                            BorrowKind::Unique => PlaceContext::NonMutatingUse(\n-                                NonMutatingUseContext::UniqueBorrow\n+                            BorrowKind::Unique => PlaceContext::MutatingUse(\n+                                MutatingUseContext::Borrow\n                             ),\n                             BorrowKind::Mut { .. } =>\n                                 PlaceContext::MutatingUse(MutatingUseContext::Borrow),\n@@ -1265,8 +1265,6 @@ pub enum NonMutatingUseContext {\n     SharedBorrow,\n     /// Shallow borrow.\n     ShallowBorrow,\n-    /// Unique borrow.\n-    UniqueBorrow,\n     /// AddressOf for *const pointer.\n     AddressOf,\n     /// PlaceMention statement.\n@@ -1345,9 +1343,7 @@ impl PlaceContext {\n         matches!(\n             self,\n             PlaceContext::NonMutatingUse(\n-                NonMutatingUseContext::SharedBorrow\n-                    | NonMutatingUseContext::ShallowBorrow\n-                    | NonMutatingUseContext::UniqueBorrow\n+                NonMutatingUseContext::SharedBorrow | NonMutatingUseContext::ShallowBorrow\n             ) | PlaceContext::MutatingUse(MutatingUseContext::Borrow)\n         )\n     }"}, {"sha": "6ae6bdc17d5012e7773c307eed96975a30a618e8", "filename": "compiler/rustc_mir_dataflow/src/impls/liveness.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fimpls%2Fliveness.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -199,8 +199,7 @@ impl DefUse {\n                 | NonMutatingUseContext::Move\n                 | NonMutatingUseContext::PlaceMention\n                 | NonMutatingUseContext::ShallowBorrow\n-                | NonMutatingUseContext::SharedBorrow\n-                | NonMutatingUseContext::UniqueBorrow,\n+                | NonMutatingUseContext::SharedBorrow,\n             ) => Some(DefUse::Use),\n \n             PlaceContext::MutatingUse(MutatingUseContext::Projection)"}, {"sha": "1ba1951afdef559713089a83b2400987b56fcb5a", "filename": "compiler/rustc_mir_transform/src/const_prop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fconst_prop.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -772,7 +772,6 @@ impl<'tcx> Visitor<'tcx> for CanConstProp {\n             // mutation.\n             | NonMutatingUse(NonMutatingUseContext::SharedBorrow)\n             | NonMutatingUse(NonMutatingUseContext::ShallowBorrow)\n-            | NonMutatingUse(NonMutatingUseContext::UniqueBorrow)\n             | NonMutatingUse(NonMutatingUseContext::AddressOf)\n             | MutatingUse(MutatingUseContext::Borrow)\n             | MutatingUse(MutatingUseContext::AddressOf) => {"}, {"sha": "3df459dfa79bd4dcfad618b02d40d288ffcb48b4", "filename": "compiler/rustc_mir_transform/src/copy_prop.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_transform%2Fsrc%2Fcopy_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_transform%2Fsrc%2Fcopy_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcopy_prop.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -130,7 +130,6 @@ impl<'tcx> MutVisitor<'tcx> for Replacer<'_, 'tcx> {\n             PlaceContext::NonMutatingUse(\n                 NonMutatingUseContext::SharedBorrow\n                 | NonMutatingUseContext::ShallowBorrow\n-                | NonMutatingUseContext::UniqueBorrow\n                 | NonMutatingUseContext::AddressOf,\n             ) => true,\n             // For debuginfo, merging locals is ok."}, {"sha": "7a0d3a025f3652c1608d5c997588e25b782ec6fc", "filename": "compiler/rustc_mir_transform/src/ssa.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_transform%2Fsrc%2Fssa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3/compiler%2Frustc_mir_transform%2Fsrc%2Fssa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fssa.rs?ref=cfd062341125ae3abbf2e7a7e30cfb1e8ac0c6e3", "patch": "@@ -216,7 +216,6 @@ impl<'tcx> Visitor<'tcx> for SsaVisitor<'_> {\n             PlaceContext::NonMutatingUse(\n                 NonMutatingUseContext::SharedBorrow\n                 | NonMutatingUseContext::ShallowBorrow\n-                | NonMutatingUseContext::UniqueBorrow\n                 | NonMutatingUseContext::AddressOf,\n             )\n             | PlaceContext::MutatingUse(_) => {"}]}