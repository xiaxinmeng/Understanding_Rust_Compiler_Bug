{"sha": "e68697b55e0b89c72ab52e7a8004cc1ceb7619ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2ODY5N2I1NWUwYjg5YzcyYWI1MmU3YTgwMDRjYzFjZWI3NjE5ZmY=", "commit": {"author": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-07-23T03:17:42Z"}, "committer": {"name": "gifnksm", "email": "makoto.nksm+github@gmail.com", "date": "2013-07-23T03:18:54Z"}, "message": "tutorial: Remove the sentence about mutable fields.", "tree": {"sha": "9cc4ba094a44d256e778a267f6d32fd6e61f146a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cc4ba094a44d256e778a267f6d32fd6e61f146a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e68697b55e0b89c72ab52e7a8004cc1ceb7619ff", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e68697b55e0b89c72ab52e7a8004cc1ceb7619ff", "html_url": "https://github.com/rust-lang/rust/commit/e68697b55e0b89c72ab52e7a8004cc1ceb7619ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e68697b55e0b89c72ab52e7a8004cc1ceb7619ff/comments", "author": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gifnksm", "id": 164213, "node_id": "MDQ6VXNlcjE2NDIxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/164213?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gifnksm", "html_url": "https://github.com/gifnksm", "followers_url": "https://api.github.com/users/gifnksm/followers", "following_url": "https://api.github.com/users/gifnksm/following{/other_user}", "gists_url": "https://api.github.com/users/gifnksm/gists{/gist_id}", "starred_url": "https://api.github.com/users/gifnksm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gifnksm/subscriptions", "organizations_url": "https://api.github.com/users/gifnksm/orgs", "repos_url": "https://api.github.com/users/gifnksm/repos", "events_url": "https://api.github.com/users/gifnksm/events{/privacy}", "received_events_url": "https://api.github.com/users/gifnksm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9aab7e59d752a2ac14e62e309d58f5eb9a60266d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9aab7e59d752a2ac14e62e309d58f5eb9a60266d", "html_url": "https://github.com/rust-lang/rust/commit/9aab7e59d752a2ac14e62e309d58f5eb9a60266d"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "de11a297d891431fb37ab18f6cf2bea86c99416a", "filename": "doc/tutorial.md", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e68697b55e0b89c72ab52e7a8004cc1ceb7619ff/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/e68697b55e0b89c72ab52e7a8004cc1ceb7619ff/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=e68697b55e0b89c72ab52e7a8004cc1ceb7619ff", "patch": "@@ -1089,10 +1089,8 @@ we might like to compute the distance between `on_the_stack` and\n to define a function that takes two arguments of type point\u2014that is,\n it takes the points by value. But this will cause the points to be\n copied when we call the function. For points, this is probably not so\n-bad, but often copies are expensive or, worse, if copied data are in mutable\n-slots, they can change the semantics of your program. So we\u2019d like to\n-define a function that takes the points by pointer. We can use\n-borrowed pointers to do this:\n+bad, but often copies are expensive. So we\u2019d like to define a function\n+that takes the points by pointer. We can use borrowed pointers to do this:\n \n ~~~\n # struct Point { x: float, y: float }"}]}