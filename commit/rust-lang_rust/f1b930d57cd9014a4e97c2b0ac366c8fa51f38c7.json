{"sha": "f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxYjkzMGQ1N2NkOTAxNGE0ZTk3YzJiMGFjMzY2YzhmYTUxZjM4Yzc=", "commit": {"author": {"name": "Chai T. Rex", "email": "ChaiTRex@users.noreply.github.com", "date": "2020-12-08T02:36:01Z"}, "committer": {"name": "Chai T. Rex", "email": "ChaiTRex@users.noreply.github.com", "date": "2020-12-08T02:36:01Z"}, "message": "Improved documentation for HashMap/BTreeMap Entry's .or_insert_with_key method", "tree": {"sha": "f628b0d0cd416f990f4f356015ae71b00239468e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f628b0d0cd416f990f4f356015ae71b00239468e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7", "html_url": "https://github.com/rust-lang/rust/commit/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7/comments", "author": {"login": "ChaiTRex", "id": 23159282, "node_id": "MDQ6VXNlcjIzMTU5Mjgy", "avatar_url": "https://avatars.githubusercontent.com/u/23159282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChaiTRex", "html_url": "https://github.com/ChaiTRex", "followers_url": "https://api.github.com/users/ChaiTRex/followers", "following_url": "https://api.github.com/users/ChaiTRex/following{/other_user}", "gists_url": "https://api.github.com/users/ChaiTRex/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChaiTRex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChaiTRex/subscriptions", "organizations_url": "https://api.github.com/users/ChaiTRex/orgs", "repos_url": "https://api.github.com/users/ChaiTRex/repos", "events_url": "https://api.github.com/users/ChaiTRex/events{/privacy}", "received_events_url": "https://api.github.com/users/ChaiTRex/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChaiTRex", "id": 23159282, "node_id": "MDQ6VXNlcjIzMTU5Mjgy", "avatar_url": "https://avatars.githubusercontent.com/u/23159282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChaiTRex", "html_url": "https://github.com/ChaiTRex", "followers_url": "https://api.github.com/users/ChaiTRex/followers", "following_url": "https://api.github.com/users/ChaiTRex/following{/other_user}", "gists_url": "https://api.github.com/users/ChaiTRex/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChaiTRex/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChaiTRex/subscriptions", "organizations_url": "https://api.github.com/users/ChaiTRex/orgs", "repos_url": "https://api.github.com/users/ChaiTRex/repos", "events_url": "https://api.github.com/users/ChaiTRex/events{/privacy}", "received_events_url": "https://api.github.com/users/ChaiTRex/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "866ef87d3f1f368687095b263829ef1182b2727a", "url": "https://api.github.com/repos/rust-lang/rust/commits/866ef87d3f1f368687095b263829ef1182b2727a", "html_url": "https://github.com/rust-lang/rust/commit/866ef87d3f1f368687095b263829ef1182b2727a"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "9dd68e27914bfd35488b41f33a8ae3fee6935fd4", "filename": "library/alloc/src/collections/btree/map/entry.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fmap%2Fentry.rs?ref=f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7", "patch": "@@ -116,9 +116,12 @@ impl<'a, K: Ord, V> Entry<'a, K, V> {\n         }\n     }\n \n-    /// Ensures a value is in the entry by inserting, if empty, the result of the default function,\n-    /// which takes the key as its argument, and returns a mutable reference to the value in the\n-    /// entry.\n+    /// Ensures a value is in the entry by inserting, if empty, the result of the default function.\n+    /// This method allows for generating key-derived values for insertion by providing the default\n+    /// function a reference to the key that was moved during the `.entry(key)` method call.<br />\n+    ///\n+    /// The reference to the moved key is provided so that cloning or copying the key is\n+    /// unnecessary, unlike with `.or_insert_with(|| ... )`.\n     ///\n     /// # Examples\n     ///"}, {"sha": "ae48d7fe7ee105514591e0f49316dd07097b0b6c", "filename": "library/std/src/collections/hash/map.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fcollections%2Fhash%2Fmap.rs?ref=f1b930d57cd9014a4e97c2b0ac366c8fa51f38c7", "patch": "@@ -2222,9 +2222,12 @@ impl<'a, K, V> Entry<'a, K, V> {\n         }\n     }\n \n-    /// Ensures a value is in the entry by inserting, if empty, the result of the default function,\n-    /// which takes the key as its argument, and returns a mutable reference to the value in the\n-    /// entry.\n+    /// Ensures a value is in the entry by inserting, if empty, the result of the default function.\n+    /// This method allows for generating key-derived values for insertion by providing the default\n+    /// function a reference to the key that was moved during the `.entry(key)` method call.\n+    ///\n+    /// The reference to the moved key is provided so that cloning or copying the key is\n+    /// unnecessary, unlike with `.or_insert_with(|| ... )`.\n     ///\n     /// # Examples\n     ///"}]}