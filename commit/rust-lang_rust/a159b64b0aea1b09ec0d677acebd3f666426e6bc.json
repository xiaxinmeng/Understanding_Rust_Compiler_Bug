{"sha": "a159b64b0aea1b09ec0d677acebd3f666426e6bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExNTliNjRiMGFlYTFiMDllYzBkNjc3YWNlYmQzZjY2NjQyNmU2YmM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-04-28T07:04:09Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2018-04-28T07:04:09Z"}, "message": "Preserve comments between attribute and use item", "tree": {"sha": "e3dea5666e8159e5f2a1c60b3eccac602fc1d9ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3dea5666e8159e5f2a1c60b3eccac602fc1d9ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a159b64b0aea1b09ec0d677acebd3f666426e6bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a159b64b0aea1b09ec0d677acebd3f666426e6bc", "html_url": "https://github.com/rust-lang/rust/commit/a159b64b0aea1b09ec0d677acebd3f666426e6bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a159b64b0aea1b09ec0d677acebd3f666426e6bc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23cdfdef38465235634422de23c48a97422f4bc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/23cdfdef38465235634422de23c48a97422f4bc7", "html_url": "https://github.com/rust-lang/rust/commit/23cdfdef38465235634422de23c48a97422f4bc7"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "9fd844a2c35b6ceec489b43dec87a990969d7c22", "filename": "src/imports.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/a159b64b0aea1b09ec0d677acebd3f666426e6bc/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a159b64b0aea1b09ec0d677acebd3f666426e6bc/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=a159b64b0aea1b09ec0d677acebd3f666426e6bc", "patch": "@@ -15,6 +15,7 @@ use syntax::ast::{self, UseTreeKind};\n use syntax::codemap::{self, BytePos, Span, DUMMY_SP};\n \n use codemap::SpanUtils;\n+use comment::combine_strs_with_missing_comments;\n use config::IndentStyle;\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n use rewrite::{Rewrite, RewriteContext};\n@@ -219,26 +220,26 @@ impl fmt::Display for UseTree {\n impl UseTree {\n     // Rewrite use tree with `use ` and a trailing `;`.\n     pub fn rewrite_top_level(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n-        let mut result = String::with_capacity(256);\n-        if let Some(ref attrs) = self.attrs {\n-            result.push_str(&attrs.rewrite(context, shape)?);\n-            if !result.is_empty() {\n-                result.push_str(&shape.indent.to_string_with_newline(context.config));\n-            }\n-        }\n-\n         let vis = self.visibility\n             .as_ref()\n             .map_or(Cow::from(\"\"), |vis| ::utils::format_visibility(&vis));\n-        result.push_str(&self.rewrite(context, shape.offset_left(vis.len())?)\n+        let use_str = self.rewrite(context, shape.offset_left(vis.len())?)\n             .map(|s| {\n                 if s.is_empty() {\n                     s.to_owned()\n                 } else {\n                     format!(\"{}use {};\", vis, s)\n                 }\n-            })?);\n-        Some(result)\n+            })?;\n+        if let Some(ref attrs) = self.attrs {\n+            let attr_str = attrs.rewrite(context, shape)?;\n+            let lo = attrs.last().as_ref()?.span().hi();\n+            let hi = self.span.lo();\n+            let span = mk_sp(lo, hi);\n+            combine_strs_with_missing_comments(context, &attr_str, &use_str, span, shape, false)\n+        } else {\n+            Some(use_str)\n+        }\n     }\n \n     // FIXME: Use correct span?"}]}