{"sha": "8e905334133aa517d208819b085b685f512a3272", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlOTA1MzM0MTMzYWE1MTdkMjA4ODE5YjA4NWI2ODVmNTEyYTMyNzI=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-03-21T21:56:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-21T21:56:24Z"}, "message": "Rollup merge of #70215 - petrochenkov:attrid, r=Centril\n\nast: Compress `AttrId` from `usize` to `u32`\n\nAn easy size win for `ast::Attribute` (96 bytes -> 88 bytes).\n\nAlso stop encoding/decoding `AttrId` entirely.", "tree": {"sha": "e75f4deb18aac9dbc74902b9788de614c5b0cec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e75f4deb18aac9dbc74902b9788de614c5b0cec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e905334133aa517d208819b085b685f512a3272", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJedo2ICRBK7hj4Ov3rIwAAdHIIAK4/bkK8arzjA+tTYVRK/2LI\nwpPbA3b2Vv9EbN511LW7V6tW9cbAtOfWOatgwYMT6DDHXkQKAgGCa2ltQ7I43alk\nHvm4lDn9+xIAR1kImtbg2KuEbDCApNBy1UfAtLHozdhu17Ia1KhRvUxmCiIxM6CH\nZTexZ5uEKnKZRPOp5cm8lCv/aw4X5oyG1PUml/LEqKyxnjOgRI+gUaeImkKB9D1A\nGRWP+PgP5MXTvJcWwoYAoWqXr68Ji/UJYKwvC5TjgG14XlrhPeQRgF2wIkNArKjO\nksRiQN0hORISrezFYLofso45Lwp3tWCaTiZ/jLvDZGu61du6BGGGA+/yXNvwfRI=\n=mfGy\n-----END PGP SIGNATURE-----\n", "payload": "tree e75f4deb18aac9dbc74902b9788de614c5b0cec3\nparent a3bdfc40352443be01d30b2d1147d28467286882\nparent 13dd9aff64a9730574188b373d63dadc719f73b6\nauthor Dylan DPC <dylan.dpc@gmail.com> 1584827784 +0100\ncommitter GitHub <noreply@github.com> 1584827784 +0100\n\nRollup merge of #70215 - petrochenkov:attrid, r=Centril\n\nast: Compress `AttrId` from `usize` to `u32`\n\nAn easy size win for `ast::Attribute` (96 bytes -> 88 bytes).\n\nAlso stop encoding/decoding `AttrId` entirely.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e905334133aa517d208819b085b685f512a3272", "html_url": "https://github.com/rust-lang/rust/commit/8e905334133aa517d208819b085b685f512a3272", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e905334133aa517d208819b085b685f512a3272/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3bdfc40352443be01d30b2d1147d28467286882", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3bdfc40352443be01d30b2d1147d28467286882", "html_url": "https://github.com/rust-lang/rust/commit/a3bdfc40352443be01d30b2d1147d28467286882"}, {"sha": "13dd9aff64a9730574188b373d63dadc719f73b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/13dd9aff64a9730574188b373d63dadc719f73b6", "html_url": "https://github.com/rust-lang/rust/commit/13dd9aff64a9730574188b373d63dadc719f73b6"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "b7b50617eaaf897839a0ec4950ec8d88576484c5", "filename": "src/librustc_ast/ast.rs", "status": "modified", "additions": 8, "deletions": 14, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8e905334133aa517d208819b085b685f512a3272/src%2Flibrustc_ast%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e905334133aa517d208819b085b685f512a3272/src%2Flibrustc_ast%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Fast.rs?ref=8e905334133aa517d208819b085b685f512a3272", "patch": "@@ -31,7 +31,6 @@ use crate::tokenstream::{DelimSpan, TokenStream, TokenTree};\n use rustc_data_structures::stable_hasher::{HashStable, StableHasher};\n use rustc_data_structures::sync::Lrc;\n use rustc_data_structures::thin_vec::ThinVec;\n-use rustc_index::vec::Idx;\n use rustc_macros::HashStable_Generic;\n use rustc_serialize::{self, Decoder, Encoder};\n use rustc_span::source_map::{respan, Spanned};\n@@ -2251,27 +2250,22 @@ pub enum AttrStyle {\n     Inner,\n }\n \n-#[derive(Clone, PartialEq, Eq, Hash, Debug, PartialOrd, Ord, Copy)]\n-pub struct AttrId(pub usize);\n-\n-impl Idx for AttrId {\n-    fn new(idx: usize) -> Self {\n-        AttrId(idx)\n-    }\n-    fn index(self) -> usize {\n-        self.0\n+rustc_index::newtype_index! {\n+    pub struct AttrId {\n+        ENCODABLE = custom\n+        DEBUG_FORMAT = \"AttrId({})\"\n     }\n }\n \n impl rustc_serialize::Encodable for AttrId {\n-    fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {\n-        s.emit_unit()\n+    fn encode<S: Encoder>(&self, _: &mut S) -> Result<(), S::Error> {\n+        Ok(())\n     }\n }\n \n impl rustc_serialize::Decodable for AttrId {\n-    fn decode<D: Decoder>(d: &mut D) -> Result<AttrId, D::Error> {\n-        d.read_nil().map(|_| crate::attr::mk_attr_id())\n+    fn decode<D: Decoder>(_: &mut D) -> Result<AttrId, D::Error> {\n+        Ok(crate::attr::mk_attr_id())\n     }\n }\n "}, {"sha": "d53d77677859879c904a39e4b429ec6152e73524", "filename": "src/librustc_ast/attr/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8e905334133aa517d208819b085b685f512a3272/src%2Flibrustc_ast%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e905334133aa517d208819b085b685f512a3272/src%2Flibrustc_ast%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Fattr%2Fmod.rs?ref=8e905334133aa517d208819b085b685f512a3272", "patch": "@@ -366,14 +366,14 @@ pub fn mk_nested_word_item(ident: Ident) -> NestedMetaItem {\n }\n \n crate fn mk_attr_id() -> AttrId {\n-    use std::sync::atomic::AtomicUsize;\n+    use std::sync::atomic::AtomicU32;\n     use std::sync::atomic::Ordering;\n \n-    static NEXT_ATTR_ID: AtomicUsize = AtomicUsize::new(0);\n+    static NEXT_ATTR_ID: AtomicU32 = AtomicU32::new(0);\n \n     let id = NEXT_ATTR_ID.fetch_add(1, Ordering::SeqCst);\n-    assert!(id != ::std::usize::MAX);\n-    AttrId(id)\n+    assert!(id != u32::MAX);\n+    AttrId::from_u32(id)\n }\n \n pub fn mk_attr(style: AttrStyle, path: Path, args: MacArgs, span: Span) -> Attribute {"}]}