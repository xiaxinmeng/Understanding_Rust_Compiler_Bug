{"sha": "f5df7e086516ba6398f2a1538c1c6d3193846f55", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1ZGY3ZTA4NjUxNmJhNjM5OGYyYTE1MzhjMWM2ZDMxOTM4NDZmNTU=", "commit": {"author": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T09:24:53Z"}, "committer": {"name": "mitaa", "email": "mitaa.ceb@gmail.com", "date": "2016-02-23T20:47:18Z"}, "message": "Show associated types in inherent impls", "tree": {"sha": "28f15cd7bc279482d9cbd4584ca7f24dfe7752cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/28f15cd7bc279482d9cbd4584ca7f24dfe7752cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5df7e086516ba6398f2a1538c1c6d3193846f55", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5df7e086516ba6398f2a1538c1c6d3193846f55", "html_url": "https://github.com/rust-lang/rust/commit/f5df7e086516ba6398f2a1538c1c6d3193846f55", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5df7e086516ba6398f2a1538c1c6d3193846f55/comments", "author": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mitaa", "id": 6785936, "node_id": "MDQ6VXNlcjY3ODU5MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/6785936?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mitaa", "html_url": "https://github.com/mitaa", "followers_url": "https://api.github.com/users/mitaa/followers", "following_url": "https://api.github.com/users/mitaa/following{/other_user}", "gists_url": "https://api.github.com/users/mitaa/gists{/gist_id}", "starred_url": "https://api.github.com/users/mitaa/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mitaa/subscriptions", "organizations_url": "https://api.github.com/users/mitaa/orgs", "repos_url": "https://api.github.com/users/mitaa/repos", "events_url": "https://api.github.com/users/mitaa/events{/privacy}", "received_events_url": "https://api.github.com/users/mitaa/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b38a856e3851cd9557a5d79f524cc2e69c5664fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/b38a856e3851cd9557a5d79f524cc2e69c5664fc", "html_url": "https://github.com/rust-lang/rust/commit/b38a856e3851cd9557a5d79f524cc2e69c5664fc"}], "stats": {"total": 9, "additions": 3, "deletions": 6}, "files": [{"sha": "8a061e3a528e78d5269a834946509f9c32774b15", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f5df7e086516ba6398f2a1538c1c6d3193846f55/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5df7e086516ba6398f2a1538c1c6d3193846f55/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=f5df7e086516ba6398f2a1538c1c6d3193846f55", "patch": "@@ -997,8 +997,9 @@ impl DocFolder for Cache {\n         // Index this method for searching later on\n         if let Some(ref s) = item.name {\n             let (parent, is_method) = match item.inner {\n-                clean::AssociatedConstItem(..) if self.parent_is_trait_impl => {\n-                    // skip associated consts in trait impls\n+                clean::AssociatedConstItem(..) |\n+                clean::TypedefItem(_, true) if self.parent_is_trait_impl => {\n+                    // skip associated items in trait impls\n                     ((None, None), false)\n                 }\n                 clean::AssociatedTypeItem(..) |\n@@ -1032,10 +1033,6 @@ impl DocFolder for Cache {\n                         ((Some(*last), path), true)\n                     }\n                 }\n-                clean::TypedefItem(_, true) => {\n-                    // skip associated types in impls\n-                    ((None, None), false)\n-                }\n                 _ => ((None, Some(&*self.stack)), false)\n             };\n             let hidden_field = match item.inner {"}]}