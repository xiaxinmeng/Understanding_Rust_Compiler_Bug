{"sha": "dc164f4c46d666822a87db250ec43e2862356d93", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjMTY0ZjRjNDZkNjY2ODIyYTg3ZGIyNTBlYzQzZTI4NjIzNTZkOTM=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-09-06T07:24:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-09-06T07:24:26Z"}, "message": "Merge pull request #2985 from phansch/riir_update_lints\n\nupdate_lints rewrite: Add structure and --print-only", "tree": {"sha": "ad7d60f272d76b514e96d31b4323a9b2a4ced614", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad7d60f272d76b514e96d31b4323a9b2a4ced614"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc164f4c46d666822a87db250ec43e2862356d93", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbkNYqCRBK7hj4Ov3rIwAAdHIIAHvncwZUv2Aj2kW2LRND0Shz\ndDEtzx/D/1zOPaOiv1eg1xSAFPQ9KW/r4HzoZNTGTYrSTIvLHoKB1y9bUt4IMcX5\nO6u1pQ6m+y+i1LsseSUsRR7baND4p+bCTZJWWJTKkZPR3h0MBzuI5CgiwAjQzrzn\nttzDkvQiGOKl0h9ararWYUiY7Jq/WvBvLBxZP9sDL1CfQi0JwQ6cO7wBAJvsTKo+\nMs8/3kG2Dv2SGAafLvQZtAZ+Ezv9b6SSSVjc8ddYvKtJMtv+hyJRgktMNRlCQ6ZR\n13lSLjG+5Kvt5qTC6CeIZbtOaBCQOfD3TGcKAnlz7+q4gCEtvv2+IH+UlvJo7jE=\n=VSLP\n-----END PGP SIGNATURE-----\n", "payload": "tree ad7d60f272d76b514e96d31b4323a9b2a4ced614\nparent ca753c4af1c0b6db9c17324695750990bd472ed2\nparent 3bdc691a91e3a7ac05f808772c0fbc2370fff511\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1536218666 +0200\ncommitter GitHub <noreply@github.com> 1536218666 +0200\n\nMerge pull request #2985 from phansch/riir_update_lints\n\nupdate_lints rewrite: Add structure and --print-only"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc164f4c46d666822a87db250ec43e2862356d93", "html_url": "https://github.com/rust-lang/rust/commit/dc164f4c46d666822a87db250ec43e2862356d93", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc164f4c46d666822a87db250ec43e2862356d93/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca753c4af1c0b6db9c17324695750990bd472ed2", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca753c4af1c0b6db9c17324695750990bd472ed2", "html_url": "https://github.com/rust-lang/rust/commit/ca753c4af1c0b6db9c17324695750990bd472ed2"}, {"sha": "3bdc691a91e3a7ac05f808772c0fbc2370fff511", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bdc691a91e3a7ac05f808772c0fbc2370fff511", "html_url": "https://github.com/rust-lang/rust/commit/3bdc691a91e3a7ac05f808772c0fbc2370fff511"}], "stats": {"total": 465, "additions": 449, "deletions": 16}, "files": [{"sha": "5fd7f2fc1a0878cfb8b6ac8540b1342d4d7381ee", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -19,6 +19,7 @@ Cargo.lock\n /target\n /clippy_lints/target\n /clippy_workspace_tests/target\n+/clippy_dev/target\n \n # Generated by dogfood\n /target_recur/\n@@ -33,6 +34,3 @@ helper.txt\n *.iml\n .vscode\n .idea\n-\n-# Used by the Clippy build script\n-min_version.txt"}, {"sha": "52f93820c481bc2ac86aa2367945e93caab586a4", "filename": "Cargo.toml", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -38,6 +38,11 @@ name = \"clippy-driver\"\n test = false\n path = \"src/driver.rs\"\n \n+[[bin]]\n+name = \"clippy-dev\"\n+test = false\n+path = \"src/main.rs\"\n+\n [dependencies]\n # begin automatic update\n clippy_lints = { version = \"0.0.212\", path = \"clippy_lints\" }\n@@ -46,6 +51,7 @@ regex = \"1\"\n semver = \"0.9\"\n \n [dev-dependencies]\n+clippy_dev = { version = \"0.0.1\", path = \"clippy_dev\" }\n cargo_metadata = \"0.6\"\n compiletest_rs = \"0.3.7\"\n lazy_static = \"1.0\""}, {"sha": "b85ed4fab66a608e67a284218bbd3ae68ba9ee6d", "filename": "ci/base-tests.sh", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -19,6 +19,7 @@ cd clippy_workspace_tests && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clip\n cd clippy_workspace_tests/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ../..\n cd clippy_workspace_tests/subcrate && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ../..\n cd clippy_workspace_tests/subcrate/src && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ../../..\n+cd clippy_dev && PATH=$PATH:~/rust/cargo/bin cargo clippy -- -D clippy::all && cd ..\n # test --manifest-path\n PATH=$PATH:~/rust/cargo/bin cargo clippy --manifest-path=clippy_workspace_tests/Cargo.toml -- -D clippy::all\n cd clippy_workspace_tests/subcrate && PATH=$PATH:~/rust/cargo/bin cargo clippy --manifest-path=../Cargo.toml -- -D clippy::all && cd ../.."}, {"sha": "2d94755bae30b6eafa0f537ea0345916514c09b3", "filename": "clippy_dev/Cargo.lock", "status": "added", "additions": 224, "deletions": 0, "changes": 224, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.lock?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -0,0 +1,224 @@\n+[[package]]\n+name = \"aho-corasick\"\n+version = \"0.6.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"ansi_term\"\n+version = \"0.11.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"atty\"\n+version = \"0.2.11\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"bitflags\"\n+version = \"1.0.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"clap\"\n+version = \"2.32.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"clippy_dev\"\n+version = \"0.0.1\"\n+dependencies = [\n+ \"clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"either\"\n+version = \"1.5.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"itertools\"\n+version = \"0.7.8\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"lazy_static\"\n+version = \"1.1.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"version_check 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"libc\"\n+version = \"0.2.43\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"memchr\"\n+version = \"2.0.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"redox_syscall\"\n+version = \"0.1.40\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"redox_termios\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"regex\"\n+version = \"1.0.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"aho-corasick 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"utf8-ranges 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"regex-syntax\"\n+version = \"0.6.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"strsim\"\n+version = \"0.7.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"termion\"\n+version = \"1.5.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"textwrap\"\n+version = \"0.10.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"thread_local\"\n+version = \"0.3.6\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"ucd-util\"\n+version = \"0.1.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"unicode-width\"\n+version = \"0.1.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"utf8-ranges\"\n+version = \"1.0.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"vec_map\"\n+version = \"0.8.1\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"version_check\"\n+version = \"0.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"winapi\"\n+version = \"0.3.5\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+dependencies = [\n+ \"winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n+]\n+\n+[[package]]\n+name = \"winapi-i686-pc-windows-gnu\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[[package]]\n+name = \"winapi-x86_64-pc-windows-gnu\"\n+version = \"0.4.0\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n+[metadata]\n+\"checksum aho-corasick 0.6.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"68f56c7353e5a9547cbd76ed90f7bb5ffc3ba09d4ea9bd1d8c06c8b1142eeb5a\"\n+\"checksum ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ee49baf6cb617b853aa8d93bf420db2383fab46d314482ca2803b40d5fde979b\"\n+\"checksum atty 0.2.11 (registry+https://github.com/rust-lang/crates.io-index)\" = \"9a7d5b8723950951411ee34d271d99dddcc2035a16ab25310ea2c8cfd4369652\"\n+\"checksum bitflags 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"228047a76f468627ca71776ecdebd732a3423081fcf5125585bcd7c49886ce12\"\n+\"checksum clap 2.32.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b957d88f4b6a63b9d70d5f454ac8011819c6efa7727858f458ab71c756ce2d3e\"\n+\"checksum either 1.5.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"3be565ca5c557d7f59e7cfcf1844f9e3033650c929c6566f511e8005f205c1d0\"\n+\"checksum itertools 0.7.8 (registry+https://github.com/rust-lang/crates.io-index)\" = \"f58856976b776fedd95533137617a02fb25719f40e7d9b01c7043cd65474f450\"\n+\"checksum lazy_static 1.1.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ca488b89a5657b0a2ecd45b95609b3e848cf1755da332a0da46e2b2b1cb371a7\"\n+\"checksum libc 0.2.43 (registry+https://github.com/rust-lang/crates.io-index)\" = \"76e3a3ef172f1a0b9a9ff0dd1491ae5e6c948b94479a3021819ba7d860c8645d\"\n+\"checksum memchr 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a3b4142ab8738a78c51896f704f83c11df047ff1bda9a92a661aa6361552d93d\"\n+\"checksum redox_syscall 0.1.40 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c214e91d3ecf43e9a4e41e578973adeb14b474f2bee858742d127af75a0112b1\"\n+\"checksum redox_termios 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7e891cfe48e9100a70a3b6eb652fef28920c117d366339687bd5576160db0f76\"\n+\"checksum regex 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"67d0301b0c6804eca7e3c275119d0b01ff3b7ab9258a65709e608a66312a1025\"\n+\"checksum regex-syntax 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"747ba3b235651f6e2f67dfa8bcdcd073ddb7c243cb21c442fc12395dfcac212d\"\n+\"checksum strsim 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"bb4f380125926a99e52bc279241539c018323fab05ad6368b56f93d9369ff550\"\n+\"checksum termion 1.5.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"689a3bdfaab439fd92bc87df5c4c78417d3cbe537487274e9b0b2dce76e92096\"\n+\"checksum textwrap 0.10.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"307686869c93e71f94da64286f9a9524c0f308a9e1c87a583de8e9c9039ad3f6\"\n+\"checksum thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)\" = \"c6b53e329000edc2b34dbe8545fd20e55a333362d0a321909685a19bd28c3f1b\"\n+\"checksum ucd-util 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd2be2d6639d0f8fe6cdda291ad456e23629558d466e2789d2c3e9892bda285d\"\n+\"checksum unicode-width 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"882386231c45df4700b275c7ff55b6f3698780a650026380e72dabe76fa46526\"\n+\"checksum utf8-ranges 1.0.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"fd70f467df6810094968e2fce0ee1bd0e87157aceb026a8c083bcf5e25b9efe4\"\n+\"checksum vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)\" = \"05c78687fb1a80548ae3250346c3db86a80a7cdd77bda190189f2d0a0987c81a\"\n+\"checksum version_check 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"7716c242968ee87e5542f8021178248f267f295a5c4803beae8b8b7fd9bc6051\"\n+\"checksum winapi 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"773ef9dcc5f24b7d850d0ff101e542ff24c3b090a9768e03ff889fdef41f00fd\"\n+\"checksum winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6\"\n+\"checksum winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f\""}, {"sha": "503dd53aa203acfc6d22ea87d4fa16838f01e522", "filename": "clippy_dev/Cargo.toml", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2FCargo.toml?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -0,0 +1,10 @@\n+[package]\n+name = \"clippy_dev\"\n+version = \"0.0.1\"\n+authors = [\"Philipp Hansch <dev@phansch.net>\"]\n+\n+[dependencies]\n+clap = \"~2.32\"\n+itertools = \"0.7\"\n+regex = \"1\"\n+lazy_static = \"1.0\""}, {"sha": "a872ecf3feb500ebf21b420cf0aa9fbf203641f6", "filename": "clippy_dev/src/lib.rs", "status": "added", "additions": 157, "deletions": 0, "changes": 157, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -0,0 +1,157 @@\n+extern crate regex;\n+#[macro_use]\n+extern crate lazy_static;\n+extern crate itertools;\n+\n+use regex::Regex;\n+use itertools::Itertools;\n+use std::collections::HashMap;\n+use std::ffi::OsStr;\n+use std::fs;\n+use std::io::prelude::*;\n+\n+lazy_static! {\n+    static ref DEC_CLIPPY_LINT_RE: Regex = Regex::new(r#\"(?x)\n+        declare_clippy_lint!\\s*[\\{(]\\s*\n+        pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n+        (?P<cat>[a-z_]+)\\s*,\\s*\n+        \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n+    \"#).unwrap();\n+    static ref DEC_DEPRECATED_LINT_RE: Regex = Regex::new(r#\"(?x)\n+        declare_deprecated_lint!\\s*[{(]\\s*\n+        pub\\s+(?P<name>[A-Z_][A-Z_0-9]*)\\s*,\\s*\n+        \"(?P<desc>(?:[^\"\\\\]+|\\\\(?s).(?-s))*)\"\\s*[})]\n+    \"#).unwrap();\n+    static ref NL_ESCAPE_RE: Regex = Regex::new(r#\"\\\\\\n\\s*\"#).unwrap();\n+    pub static ref DOCS_LINK: String = \"https://rust-lang-nursery.github.io/rust-clippy/master/index.html\".to_string();\n+}\n+\n+#[derive(Clone, PartialEq, Debug)]\n+pub struct Lint {\n+    pub name: String,\n+    pub group: String,\n+    pub desc: String,\n+    pub deprecation: Option<String>,\n+    pub module: String,\n+}\n+\n+impl Lint {\n+    pub fn new(name: &str, group: &str, desc: &str, deprecation: Option<&str>, module: &str) -> Lint {\n+        Lint {\n+            name: name.to_lowercase(),\n+            group: group.to_string(),\n+            desc: NL_ESCAPE_RE.replace(&desc.replace(\"\\\\\\\"\", \"\\\"\"), \"\").to_string(),\n+            deprecation: deprecation.map(|d| d.to_string()),\n+            module: module.to_string(),\n+        }\n+    }\n+\n+    /// Returns all non-deprecated lints\n+    pub fn active_lints(lints: &[Lint]) -> impl Iterator<Item=&Lint> {\n+        lints.iter().filter(|l| l.deprecation.is_none())\n+    }\n+\n+    /// Returns the lints in a HashMap, grouped by the different lint groups\n+    pub fn by_lint_group(lints: &[Lint]) -> HashMap<String, Vec<Lint>> {\n+        lints.iter().map(|lint| (lint.group.to_string(), lint.clone())).into_group_map()\n+    }\n+}\n+\n+pub fn gather_all() -> impl Iterator<Item=Lint> {\n+    lint_files().flat_map(|f| gather_from_file(&f))\n+}\n+\n+fn gather_from_file(dir_entry: &fs::DirEntry) -> impl Iterator<Item=Lint> {\n+    let mut file = fs::File::open(dir_entry.path()).unwrap();\n+    let mut content = String::new();\n+    file.read_to_string(&mut content).unwrap();\n+    parse_contents(&content, dir_entry.path().file_stem().unwrap().to_str().unwrap())\n+}\n+\n+fn parse_contents(content: &str, filename: &str) -> impl Iterator<Item=Lint> {\n+    let lints = DEC_CLIPPY_LINT_RE\n+        .captures_iter(content)\n+        .map(|m| Lint::new(&m[\"name\"], &m[\"cat\"], &m[\"desc\"], None, filename));\n+    let deprecated = DEC_DEPRECATED_LINT_RE\n+        .captures_iter(content)\n+        .map(|m| Lint::new( &m[\"name\"], \"Deprecated\", &m[\"desc\"], Some(&m[\"desc\"]), filename));\n+    // Removing the `.collect::<Vec<Lint>>().into_iter()` causes some lifetime issues due to the map\n+    lints.chain(deprecated).collect::<Vec<Lint>>().into_iter()\n+}\n+\n+/// Collects all .rs files in the `clippy_lints/src` directory\n+fn lint_files() -> impl Iterator<Item=fs::DirEntry> {\n+    fs::read_dir(\"../clippy_lints/src\")\n+        .unwrap()\n+        .filter_map(|f| f.ok())\n+        .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n+}\n+\n+#[test]\n+fn test_parse_contents() {\n+    let result: Vec<Lint> = parse_contents(\n+        r#\"\n+declare_clippy_lint! {\n+    pub PTR_ARG,\n+    style,\n+    \"really long \\\n+     text\"\n+}\n+\n+declare_clippy_lint!{\n+    pub DOC_MARKDOWN,\n+    pedantic,\n+    \"single line\"\n+}\n+\n+/// some doc comment\n+declare_deprecated_lint! {\n+    pub SHOULD_ASSERT_EQ,\n+    \"`assert!()` will be more flexible with RFC 2011\"\n+}\n+    \"#,\n+    \"module_name\").collect();\n+\n+    let expected = vec![\n+        Lint::new(\"ptr_arg\", \"style\", \"really long text\", None, \"module_name\"),\n+        Lint::new(\"doc_markdown\", \"pedantic\", \"single line\", None, \"module_name\"),\n+        Lint::new(\n+            \"should_assert_eq\",\n+            \"Deprecated\",\n+            \"`assert!()` will be more flexible with RFC 2011\",\n+            Some(\"`assert!()` will be more flexible with RFC 2011\"),\n+            \"module_name\"\n+        ),\n+    ];\n+    assert_eq!(expected, result);\n+}\n+\n+#[test]\n+fn test_active_lints() {\n+    let lints = vec![\n+        Lint::new(\"should_assert_eq\", \"Deprecated\", \"abc\", Some(\"Reason\"), \"module_name\"),\n+        Lint::new(\"should_assert_eq2\", \"Not Deprecated\", \"abc\", None, \"module_name\")\n+    ];\n+    let expected = vec![\n+        Lint::new(\"should_assert_eq2\", \"Not Deprecated\", \"abc\", None, \"module_name\")\n+    ];\n+    assert_eq!(expected, Lint::active_lints(&lints).cloned().collect::<Vec<Lint>>());\n+}\n+\n+#[test]\n+fn test_by_lint_group() {\n+    let lints = vec![\n+        Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n+        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\"),\n+        Lint::new(\"incorrect_match\", \"group1\", \"abc\", None, \"module_name\"),\n+    ];\n+    let mut expected: HashMap<String, Vec<Lint>> = HashMap::new();\n+    expected.insert(\"group1\".to_string(), vec![\n+        Lint::new(\"should_assert_eq\", \"group1\", \"abc\", None, \"module_name\"),\n+        Lint::new(\"incorrect_match\", \"group1\", \"abc\", None, \"module_name\"),\n+    ]);\n+    expected.insert(\"group2\".to_string(), vec![\n+        Lint::new(\"should_assert_eq2\", \"group2\", \"abc\", None, \"module_name\")\n+    ]);\n+    assert_eq!(expected, Lint::by_lint_group(&lints));\n+}"}, {"sha": "f45c52e2271db22aa22d6f760895382a50871c54", "filename": "clippy_dev/src/main.rs", "status": "added", "additions": 45, "deletions": 0, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -0,0 +1,45 @@\n+extern crate clap;\n+extern crate clippy_dev;\n+extern crate regex;\n+\n+use clap::{App, Arg, SubCommand};\n+use clippy_dev::*;\n+\n+fn main() {\n+    let matches = App::new(\"Clippy developer tooling\")\n+        .subcommand(\n+            SubCommand::with_name(\"update_lints\")\n+                .about(\"Update the lint list\")\n+                .arg(\n+                    Arg::with_name(\"print-only\")\n+                        .long(\"print-only\")\n+                        .short(\"p\")\n+                        .help(\"Print a table of lints to STDOUT. Does not modify any files.\"),\n+                )\n+        )\n+        .get_matches();\n+\n+    if let Some(matches) = matches.subcommand_matches(\"update_lints\") {\n+        if matches.is_present(\"print-only\") {\n+            print_lints();\n+        }\n+    }\n+}\n+\n+fn print_lints() {\n+    let lint_list = gather_all().collect::<Vec<Lint>>();\n+    let grouped_by_lint_group = Lint::by_lint_group(&lint_list);\n+\n+    for (lint_group, mut lints) in grouped_by_lint_group {\n+        if lint_group == \"Deprecated\" { continue; }\n+        println!(\"\\n## {}\", lint_group);\n+\n+        lints.sort_by(|a, b| a.name.cmp(&b.name));\n+\n+        for lint in lints {\n+            println!(\"* [{}]({}#{}) ({})\", lint.name, clippy_dev::DOCS_LINK.clone(), lint.name, lint.desc);\n+        }\n+    }\n+\n+    println!(\"there are {} lints\", Lint::active_lints(&lint_list).count());\n+}"}, {"sha": "4fa6e69b75276e392c9c473ee231be9edfd3bdbd", "filename": "util/dev", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/util%2Fdev", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/util%2Fdev", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fdev?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -0,0 +1,3 @@\n+#!/bin/sh\n+\n+cd clippy_dev && cargo run -- $@"}, {"sha": "15242abd60683b48d37fdd4864adb85d016fa2d4", "filename": "util/update_lints.py", "status": "modified", "additions": 2, "deletions": 13, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/dc164f4c46d666822a87db250ec43e2862356d93/util%2Fupdate_lints.py", "raw_url": "https://github.com/rust-lang/rust/raw/dc164f4c46d666822a87db250ec43e2862356d93/util%2Fupdate_lints.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/util%2Fupdate_lints.py?ref=dc164f4c46d666822a87db250ec43e2862356d93", "patch": "@@ -7,6 +7,7 @@\n import os\n import re\n import sys\n+from subprocess import call\n \n declare_deprecated_lint_re = re.compile(r'''\n     declare_deprecated_lint! \\s* [{(] \\s*\n@@ -166,19 +167,7 @@ def main(print_only=False, check=False):\n         all_lints += value\n \n     if print_only:\n-        print_clippy_lint_groups = [\n-            \"correctness\",\n-            \"style\",\n-            \"complexity\",\n-            \"perf\",\n-            \"pedantic\",\n-            \"nursery\",\n-            \"restriction\"\n-        ]\n-        for group in print_clippy_lint_groups:\n-            sys.stdout.write('\\n## ' + group + '\\n')\n-            for (_, name, _, descr) in sorted(clippy_lints[group]):\n-                sys.stdout.write('* [' + name + '](https://rust-lang-nursery.github.io/rust-clippy/master/index.html#' + name + ') (' + descr + ')\\n')\n+        call([\"./util/dev\", \"update_lints\", \"--print-only\"])\n         return\n \n     # update the lint counter in README.md"}]}