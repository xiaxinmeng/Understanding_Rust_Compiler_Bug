{"sha": "beabc60575739e8e34cd5e28c5802a300cfeb36c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYWJjNjA1NzU3MzllOGUzNGNkNWUyOGM1ODAyYTMwMGNmZWIzNmM=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-12-13T19:17:26Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-12-13T19:17:26Z"}, "message": "Fix the notes on running rustfmt", "tree": {"sha": "2695d7db60e16097d7f304ae14fff4d30b74631d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2695d7db60e16097d7f304ae14fff4d30b74631d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beabc60575739e8e34cd5e28c5802a300cfeb36c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beabc60575739e8e34cd5e28c5802a300cfeb36c", "html_url": "https://github.com/rust-lang/rust/commit/beabc60575739e8e34cd5e28c5802a300cfeb36c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beabc60575739e8e34cd5e28c5802a300cfeb36c/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8983037db6dbe5a21fd3c261bcb2d966976673d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/8983037db6dbe5a21fd3c261bcb2d966976673d5", "html_url": "https://github.com/rust-lang/rust/commit/8983037db6dbe5a21fd3c261bcb2d966976673d5"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "d79e53b7a328cdaf02429f8904c0850e5741234b", "filename": "README.md", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/beabc60575739e8e34cd5e28c5802a300cfeb36c/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/beabc60575739e8e34cd5e28c5802a300cfeb36c/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=beabc60575739e8e34cd5e28c5802a300cfeb36c", "patch": "@@ -22,6 +22,27 @@ multirust run nightly cargo install --git https://github.com/rust-lang-nursery/r\n ```\n \n \n+## Running\n+\n+You can run Rustfmt by just typing `rustfmt filename` if you used `Cargo\n+install`. This runs rustfmt on the given file, if the file includes out of line\n+modules, then we reformat those too. So to run on a whole module or crate, you\n+just need to run on the root file (usually mod.rs or lib.rs). Rustfmt can also\n+read data from stdin.\n+\n+You'll probably want to specify the write mode. Currently, there are modes for\n+replace, overwrite, display, and coverage. The replace mode is the default\n+and overwrites the original files after renaming them. In overwrite mode,\n+rustfmt does not backup the source files. To print the output to stdout, use the\n+display mode. The write mode can be set by passing the `--write-mode` flag on\n+the command line.\n+\n+`rustfmt filename --write-mode=display` prints the output of rustfmt to the\n+screen, for example.\n+\n+You can run `rustfmt --help` for more information.\n+\n+\n ## Running Rustfmt from your editor\n \n * [Vim](http://johannh.me/blog/rustfmt-vim.html)\n@@ -38,19 +59,8 @@ First make sure you've got Rust **1.4.0** or greater available, then:\n \n `cargo test` to run all tests.\n \n-`cargo run -- filename` to run on a file, if the file includes out of line\n-modules, then we reformat those too. So to run on a whole module or crate, you\n-just need to run on the top file.\n-\n-You'll probably want to specify the write mode. Currently, there are the\n-replace, overwrite, display and coverage modes. The replace mode is the default\n-and overwrites the original files after renaming them. In overwrite mode,\n-rustfmt does not backup the source files. To print the output to stdout, use the\n-display mode. The write mode can be set by passing the `--write-mode` flag on\n-the command line.\n-\n-`cargo run -- filename --write-mode=display` prints the output of rustfmt to the\n-screen, for example.\n+To run rustfmt after this, use `cargo run -- filename`. See the notes above on\n+running rustfmt.\n \n \n ## What style does Rustfmt use?"}]}