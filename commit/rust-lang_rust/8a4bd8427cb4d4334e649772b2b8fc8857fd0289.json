{"sha": "8a4bd8427cb4d4334e649772b2b8fc8857fd0289", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNGJkODQyN2NiNGQ0MzM0ZTY0OTc3MmIyYjhmYzg4NTdmZDAyODk=", "commit": {"author": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-10-26T03:38:27Z"}, "committer": {"name": "Colin Sherratt", "email": "colin.sherratt@gmail.com", "date": "2014-10-27T03:41:51Z"}, "message": "Added Encodable and Decodable for Arc<T>.", "tree": {"sha": "9454ffe66d2f857ff71990afb25b4a492604d7b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9454ffe66d2f857ff71990afb25b4a492604d7b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a4bd8427cb4d4334e649772b2b8fc8857fd0289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a4bd8427cb4d4334e649772b2b8fc8857fd0289", "html_url": "https://github.com/rust-lang/rust/commit/8a4bd8427cb4d4334e649772b2b8fc8857fd0289", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a4bd8427cb4d4334e649772b2b8fc8857fd0289/comments", "author": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csherratt", "id": 26073376, "node_id": "MDQ6VXNlcjI2MDczMzc2", "avatar_url": "https://avatars.githubusercontent.com/u/26073376?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csherratt", "html_url": "https://github.com/csherratt", "followers_url": "https://api.github.com/users/csherratt/followers", "following_url": "https://api.github.com/users/csherratt/following{/other_user}", "gists_url": "https://api.github.com/users/csherratt/gists{/gist_id}", "starred_url": "https://api.github.com/users/csherratt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csherratt/subscriptions", "organizations_url": "https://api.github.com/users/csherratt/orgs", "repos_url": "https://api.github.com/users/csherratt/repos", "events_url": "https://api.github.com/users/csherratt/events{/privacy}", "received_events_url": "https://api.github.com/users/csherratt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f168c12c5629afd45c9b3ed250350bf830b99642", "url": "https://api.github.com/repos/rust-lang/rust/commits/f168c12c5629afd45c9b3ed250350bf830b99642", "html_url": "https://github.com/rust-lang/rust/commit/f168c12c5629afd45c9b3ed250350bf830b99642"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "0a040fff40d6a4b55b3ef618490f6b669c080be5", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8a4bd8427cb4d4334e649772b2b8fc8857fd0289/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a4bd8427cb4d4334e649772b2b8fc8857fd0289/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=8a4bd8427cb4d4334e649772b2b8fc8857fd0289", "patch": "@@ -17,6 +17,7 @@ Core encoding and decoding interfaces.\n use std::path;\n use std::rc::Rc;\n use std::cell::{Cell, RefCell};\n+use std::sync::Arc;\n \n pub trait Encoder<E> {\n     // Primitive types:\n@@ -556,6 +557,18 @@ impl<E, D: Decoder<E>, T: Decodable<D, E>> Decodable<D, E> for RefCell<T> {\n     }\n }\n \n+impl<E, S:Encoder<E>, T:Encodable<S, E>+Send+Sync> Encodable<S, E> for Arc<T> {\n+    fn encode(&self, s: &mut S) -> Result<(), E> {\n+        (**self).encode(s)\n+    }\n+}\n+\n+impl<E, D:Decoder<E>,T:Decodable<D, E>+Send+Sync> Decodable<D, E> for Arc<T> {\n+    fn decode(d: &mut D) -> Result<Arc<T>, E> {\n+        Ok(Arc::new(try!(Decodable::decode(d))))\n+    }\n+}\n+\n // ___________________________________________________________________________\n // Helper routines\n "}]}