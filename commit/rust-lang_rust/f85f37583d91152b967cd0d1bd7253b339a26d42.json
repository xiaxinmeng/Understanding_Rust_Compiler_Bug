{"sha": "f85f37583d91152b967cd0d1bd7253b339a26d42", "node_id": "C_kwDOAAsO6NoAKGY4NWYzNzU4M2Q5MTE1MmI5NjdjZDBkMWJkNzI1M2IzMzlhMjZkNDI", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-22T06:53:00Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-25T08:00:37Z"}, "message": "suggest removing the tuple struct field for the unwrapped value\n\nadd a test case for macro", "tree": {"sha": "1bf8fef1c42320975cd09ca5dc0bfc1f16abc770", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bf8fef1c42320975cd09ca5dc0bfc1f16abc770"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f85f37583d91152b967cd0d1bd7253b339a26d42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f85f37583d91152b967cd0d1bd7253b339a26d42", "html_url": "https://github.com/rust-lang/rust/commit/f85f37583d91152b967cd0d1bd7253b339a26d42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f85f37583d91152b967cd0d1bd7253b339a26d42/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9a7b7d5e50ab0b59c6d349bbf005680a7c880e98", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a7b7d5e50ab0b59c6d349bbf005680a7c880e98", "html_url": "https://github.com/rust-lang/rust/commit/9a7b7d5e50ab0b59c6d349bbf005680a7c880e98"}], "stats": {"total": 90, "additions": 90, "deletions": 0}, "files": [{"sha": "381c3a4ea1f7e04904cefc3f58af85945e078518", "filename": "compiler/rustc_typeck/src/check/demand.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f85f37583d91152b967cd0d1bd7253b339a26d42/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f85f37583d91152b967cd0d1bd7253b339a26d42/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fdemand.rs?ref=f85f37583d91152b967cd0d1bd7253b339a26d42", "patch": "@@ -287,6 +287,21 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         expr_ty: Ty<'tcx>,\n     ) {\n         if let ty::Adt(expected_adt, substs) = expected.kind() {\n+            if let hir::ExprKind::Field(base, ident) = expr.kind {\n+                let base_ty = self.typeck_results.borrow().expr_ty(base);\n+                if self.can_eq(self.param_env, base_ty, expected).is_ok()\n+                    && let Some(base_span) = base.span.find_ancestor_inside(expr.span)\n+                {\n+                    err.span_suggestion_verbose(\n+                        expr.span.with_lo(base_span.hi()),\n+                        format!(\"consider removing the tuple struct field `{ident}`\"),\n+                        \"\",\n+                        Applicability::MaybeIncorrect,\n+                    );\n+                    return\n+                }\n+            }\n+\n             // If the expression is of type () and it's the return expression of a block,\n             // we suggest adding a separate return expression instead.\n             // (To avoid things like suggesting `Ok(while .. { .. })`.)"}, {"sha": "63b65ab20fea8a961f920959e81f8597c5d6ab60", "filename": "src/test/ui/mismatched_types/suggest-removing-tulpe-struct-field.fixed", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f85f37583d91152b967cd0d1bd7253b339a26d42/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f85f37583d91152b967cd0d1bd7253b339a26d42/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.fixed?ref=f85f37583d91152b967cd0d1bd7253b339a26d42", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+macro_rules! my_wrapper {\n+    ($expr:expr) => { MyWrapper($expr) }\n+}\n+\n+pub struct MyWrapper(u32);\n+\n+fn main() {\n+    let value = MyWrapper(123);\n+    some_fn(value); //~ ERROR mismatched types\n+    some_fn(my_wrapper!(123)); //~ ERROR mismatched types\n+}\n+\n+fn some_fn(wrapped: MyWrapper) {\n+    drop(wrapped);\n+}"}, {"sha": "2ab4e3955f336aad0a1a0363066066cafba0bcfa", "filename": "src/test/ui/mismatched_types/suggest-removing-tulpe-struct-field.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f85f37583d91152b967cd0d1bd7253b339a26d42/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f85f37583d91152b967cd0d1bd7253b339a26d42/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.rs?ref=f85f37583d91152b967cd0d1bd7253b339a26d42", "patch": "@@ -0,0 +1,17 @@\n+// run-rustfix\n+\n+macro_rules! my_wrapper {\n+    ($expr:expr) => { MyWrapper($expr) }\n+}\n+\n+pub struct MyWrapper(u32);\n+\n+fn main() {\n+    let value = MyWrapper(123);\n+    some_fn(value.0); //~ ERROR mismatched types\n+    some_fn(my_wrapper!(123).0); //~ ERROR mismatched types\n+}\n+\n+fn some_fn(wrapped: MyWrapper) {\n+    drop(wrapped);\n+}"}, {"sha": "82a7f276372c9903dec8c85b1b64202ddb3c9aae", "filename": "src/test/ui/mismatched_types/suggest-removing-tulpe-struct-field.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f85f37583d91152b967cd0d1bd7253b339a26d42/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f85f37583d91152b967cd0d1bd7253b339a26d42/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fsuggest-removing-tulpe-struct-field.stderr?ref=f85f37583d91152b967cd0d1bd7253b339a26d42", "patch": "@@ -0,0 +1,41 @@\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-removing-tulpe-struct-field.rs:11:13\n+   |\n+LL |     some_fn(value.0);\n+   |     ------- ^^^^^^^ expected struct `MyWrapper`, found `u32`\n+   |     |\n+   |     arguments to this function are incorrect\n+   |\n+note: function defined here\n+  --> $DIR/suggest-removing-tulpe-struct-field.rs:15:4\n+   |\n+LL | fn some_fn(wrapped: MyWrapper) {\n+   |    ^^^^^^^ ------------------\n+help: consider removing the tuple struct field `0`\n+   |\n+LL -     some_fn(value.0);\n+LL +     some_fn(value);\n+   |\n+\n+error[E0308]: mismatched types\n+  --> $DIR/suggest-removing-tulpe-struct-field.rs:12:13\n+   |\n+LL |     some_fn(my_wrapper!(123).0);\n+   |     ------- ^^^^^^^^^^^^^^^^^^ expected struct `MyWrapper`, found `u32`\n+   |     |\n+   |     arguments to this function are incorrect\n+   |\n+note: function defined here\n+  --> $DIR/suggest-removing-tulpe-struct-field.rs:15:4\n+   |\n+LL | fn some_fn(wrapped: MyWrapper) {\n+   |    ^^^^^^^ ------------------\n+help: consider removing the tuple struct field `0`\n+   |\n+LL -     some_fn(my_wrapper!(123).0);\n+LL +     some_fn(my_wrapper!(123));\n+   |\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}]}