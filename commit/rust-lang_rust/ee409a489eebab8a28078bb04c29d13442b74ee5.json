{"sha": "ee409a489eebab8a28078bb04c29d13442b74ee5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVlNDA5YTQ4OWVlYmFiOGEyODA3OGJiMDRjMjlkMTM0NDJiNzRlZTU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-22T10:30:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-09-22T10:30:20Z"}, "message": "Auto merge of #44624 - tmerr:master, r=sfackler\n\nRetain suid/sgid/sticky bits in Metadata.permissions\n\nMost users would expect set_permissions(Metadata.permissions()) to be\nnon-destructive. While we can't guarantee this, we can at least pass\nthe needed info to chmod.\n\nAlso update the PermissionsExt documentation to disambiguate what it\ncontains, and to refer to the underlying value as `st_mode` rather than\nits type `mode_t`.\n\nCloses #44147", "tree": {"sha": "6734aba814ec62e77a01e904b922efdc3971b12d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6734aba814ec62e77a01e904b922efdc3971b12d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ee409a489eebab8a28078bb04c29d13442b74ee5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ee409a489eebab8a28078bb04c29d13442b74ee5", "html_url": "https://github.com/rust-lang/rust/commit/ee409a489eebab8a28078bb04c29d13442b74ee5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ee409a489eebab8a28078bb04c29d13442b74ee5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0962b8fe4ffc1face685bc1b04364f6a3f0ad1ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/0962b8fe4ffc1face685bc1b04364f6a3f0ad1ea", "html_url": "https://github.com/rust-lang/rust/commit/0962b8fe4ffc1face685bc1b04364f6a3f0ad1ea"}, {"sha": "6ae9fc277287e4f207012ab65be24058f143d42d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ae9fc277287e4f207012ab65be24058f143d42d", "html_url": "https://github.com/rust-lang/rust/commit/6ae9fc277287e4f207012ab65be24058f143d42d"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "991627660815ce7f711ea5aca3f4e966b3b46425", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ee409a489eebab8a28078bb04c29d13442b74ee5/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee409a489eebab8a28078bb04c29d13442b74ee5/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=ee409a489eebab8a28078bb04c29d13442b74ee5", "patch": "@@ -2160,6 +2160,27 @@ mod tests {\n         check!(fs::remove_file(&filename));\n     }\n \n+    #[test]\n+    #[cfg(unix)]\n+    fn set_get_unix_permissions() {\n+        use os::unix::fs::PermissionsExt;\n+\n+        let tmpdir = tmpdir();\n+        let filename = &tmpdir.join(\"set_get_unix_permissions\");\n+        check!(fs::create_dir(filename));\n+        let mask = 0o7777;\n+\n+        check!(fs::set_permissions(filename,\n+                                   fs::Permissions::from_mode(0)));\n+        let metadata0 = check!(fs::metadata(filename));\n+        assert_eq!(mask & metadata0.permissions().mode(), 0);\n+\n+        check!(fs::set_permissions(filename,\n+                                   fs::Permissions::from_mode(0o1777)));\n+        let metadata1 = check!(fs::metadata(filename));\n+        assert_eq!(mask & metadata1.permissions().mode(), 0o1777);\n+    }\n+\n     #[test]\n     #[cfg(windows)]\n     fn file_test_io_seek_read_write() {"}, {"sha": "3e631ad40ac7ff2713111e29ad459e77651b6fc9", "filename": "src/libstd/sys/unix/ext/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ee409a489eebab8a28078bb04c29d13442b74ee5/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee409a489eebab8a28078bb04c29d13442b74ee5/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fext%2Ffs.rs?ref=ee409a489eebab8a28078bb04c29d13442b74ee5", "patch": "@@ -68,8 +68,8 @@ impl FileExt for fs::File {\n /// Unix-specific extensions to `Permissions`\n #[stable(feature = \"fs_ext\", since = \"1.1.0\")]\n pub trait PermissionsExt {\n-    /// Returns the underlying raw `mode_t` bits that are the standard Unix\n-    /// permissions for this file.\n+    /// Returns the underlying raw `st_mode` bits that contain the standard\n+    /// Unix permissions for this file.\n     ///\n     /// # Examples\n     ///"}, {"sha": "c4616c3b395be07a8900a84fd6c9dd8b2c73bcbc", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ee409a489eebab8a28078bb04c29d13442b74ee5/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ee409a489eebab8a28078bb04c29d13442b74ee5/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=ee409a489eebab8a28078bb04c29d13442b74ee5", "patch": "@@ -95,7 +95,7 @@ pub struct DirBuilder { mode: mode_t }\n impl FileAttr {\n     pub fn size(&self) -> u64 { self.stat.st_size as u64 }\n     pub fn perm(&self) -> FilePermissions {\n-        FilePermissions { mode: (self.stat.st_mode as mode_t) & 0o777 }\n+        FilePermissions { mode: (self.stat.st_mode as mode_t) }\n     }\n \n     pub fn file_type(&self) -> FileType {"}]}