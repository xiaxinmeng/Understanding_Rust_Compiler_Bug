{"sha": "bdd07f932b6d707c99f9c6127a424a9e801c997f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkZDA3ZjkzMmI2ZDcwN2M5OWY5YzYxMjdhNDI0YTllODAxYzk5N2Y=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-03-22T09:38:50Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2020-03-22T09:59:32Z"}, "message": "proc_macro_harness: Use item header spans for errors", "tree": {"sha": "fb85b9d312fa85d7e0552a838bcd2db5cb99294e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fb85b9d312fa85d7e0552a838bcd2db5cb99294e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bdd07f932b6d707c99f9c6127a424a9e801c997f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bdd07f932b6d707c99f9c6127a424a9e801c997f", "html_url": "https://github.com/rust-lang/rust/commit/bdd07f932b6d707c99f9c6127a424a9e801c997f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bdd07f932b6d707c99f9c6127a424a9e801c997f/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5574b1df577f737373b42cbf364b6cab2dfa5960", "url": "https://api.github.com/repos/rust-lang/rust/commits/5574b1df577f737373b42cbf364b6cab2dfa5960", "html_url": "https://github.com/rust-lang/rust/commit/5574b1df577f737373b42cbf364b6cab2dfa5960"}], "stats": {"total": 51, "additions": 20, "deletions": 31}, "files": [{"sha": "6540bcc415605336119598c32ebf7bcc84c617e0", "filename": "src/librustc_builtin_macros/proc_macro_harness.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs?ref=bdd07f932b6d707c99f9c6127a424a9e801c997f", "patch": "@@ -10,6 +10,7 @@ use rustc_expand::base::{ExtCtxt, Resolver};\n use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_session::parse::ParseSess;\n use rustc_span::hygiene::AstPass;\n+use rustc_span::source_map::SourceMap;\n use rustc_span::symbol::{kw, sym};\n use rustc_span::{Span, DUMMY_SP};\n use smallvec::smallvec;\n@@ -44,6 +45,7 @@ struct CollectProcMacros<'a> {\n     macros: Vec<ProcMacro>,\n     in_root: bool,\n     handler: &'a rustc_errors::Handler,\n+    source_map: &'a SourceMap,\n     is_proc_macro_crate: bool,\n     is_test_crate: bool,\n }\n@@ -65,6 +67,7 @@ pub fn inject(\n         macros: Vec::new(),\n         in_root: true,\n         handler,\n+        source_map: sess.source_map(),\n         is_proc_macro_crate,\n         is_test_crate,\n     };\n@@ -195,7 +198,7 @@ impl<'a> CollectProcMacros<'a> {\n             } else {\n                 \"functions tagged with `#[proc_macro_derive]` must be `pub`\"\n             };\n-            self.handler.span_err(item.span, msg);\n+            self.handler.span_err(self.source_map.def_span(item.span), msg);\n         }\n     }\n \n@@ -214,7 +217,7 @@ impl<'a> CollectProcMacros<'a> {\n             } else {\n                 \"functions tagged with `#[proc_macro_attribute]` must be `pub`\"\n             };\n-            self.handler.span_err(item.span, msg);\n+            self.handler.span_err(self.source_map.def_span(item.span), msg);\n         }\n     }\n \n@@ -233,7 +236,7 @@ impl<'a> CollectProcMacros<'a> {\n             } else {\n                 \"functions tagged with `#[proc_macro]` must be `pub`\"\n             };\n-            self.handler.span_err(item.span, msg);\n+            self.handler.span_err(self.source_map.def_span(item.span), msg);\n         }\n     }\n }\n@@ -244,7 +247,7 @@ impl<'a> Visitor<'a> for CollectProcMacros<'a> {\n             if self.is_proc_macro_crate && attr::contains_name(&item.attrs, sym::macro_export) {\n                 let msg =\n                     \"cannot export macro_rules! macros from a `proc-macro` crate type currently\";\n-                self.handler.span_err(item.span, msg);\n+                self.handler.span_err(self.source_map.def_span(item.span), msg);\n             }\n         }\n \n@@ -295,7 +298,7 @@ impl<'a> Visitor<'a> for CollectProcMacros<'a> {\n \n         let attr = match found_attr {\n             None => {\n-                self.check_not_pub_in_root(&item.vis, item.span);\n+                self.check_not_pub_in_root(&item.vis, self.source_map.def_span(item.span));\n                 let prev_in_root = mem::replace(&mut self.in_root, false);\n                 visit::walk_item(self, item);\n                 self.in_root = prev_in_root;"}, {"sha": "36a6a9bb3e72ba07d653e867d74a3ecb3cc82666", "filename": "src/test/ui/proc-macro/export-macro.stderr", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexport-macro.stderr?ref=bdd07f932b6d707c99f9c6127a424a9e801c997f", "patch": "@@ -1,10 +1,8 @@\n error: cannot export macro_rules! macros from a `proc-macro` crate type currently\n   --> $DIR/export-macro.rs:9:1\n    |\n-LL | / macro_rules! foo {\n-LL | |     ($e:expr) => ($e)\n-LL | | }\n-   | |_^\n+LL | macro_rules! foo {\n+   | ^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "7b23d08f2a8a57bdcdefca923d4905ddb88360f9", "filename": "src/test/ui/proc-macro/exports.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fexports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fexports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexports.stderr?ref=bdd07f932b6d707c99f9c6127a424a9e801c997f", "patch": "@@ -2,7 +2,7 @@ error: `proc-macro` crate types currently cannot export any items other than fun\n   --> $DIR/exports.rs:7:1\n    |\n LL | pub fn a() {}\n-   | ^^^^^^^^^^^^^\n+   | ^^^^^^^^^^\n \n error: `proc-macro` crate types currently cannot export any items other than functions tagged with `#[proc_macro]`, `#[proc_macro_derive]`, or `#[proc_macro_attribute]`\n   --> $DIR/exports.rs:8:1\n@@ -14,13 +14,13 @@ error: `proc-macro` crate types currently cannot export any items other than fun\n   --> $DIR/exports.rs:9:1\n    |\n LL | pub enum C {}\n-   | ^^^^^^^^^^^^^\n+   | ^^^^^^^^^^\n \n error: `proc-macro` crate types currently cannot export any items other than functions tagged with `#[proc_macro]`, `#[proc_macro_derive]`, or `#[proc_macro_attribute]`\n   --> $DIR/exports.rs:10:1\n    |\n LL | pub mod d {}\n-   | ^^^^^^^^^^^^\n+   | ^^^^^^^^^\n \n error: aborting due to 4 previous errors\n "}, {"sha": "90f94b677e90f20206ea244f71404e920204c9e6", "filename": "src/test/ui/proc-macro/non-root.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fnon-root.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fnon-root.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fnon-root.stderr?ref=bdd07f932b6d707c99f9c6127a424a9e801c997f", "patch": "@@ -2,7 +2,7 @@ error: functions tagged with `#[proc_macro]` must currently reside in the root o\n   --> $DIR/non-root.rs:11:5\n    |\n LL |     pub fn foo(arg: TokenStream) -> TokenStream { arg }\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to previous error\n "}, {"sha": "2e7536a0c4f09c9b5eb77e7dcd6cacaad3fba574", "filename": "src/test/ui/proc-macro/pub-at-crate-root.stderr", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bdd07f932b6d707c99f9c6127a424a9e801c997f/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fpub-at-crate-root.stderr?ref=bdd07f932b6d707c99f9c6127a424a9e801c997f", "patch": "@@ -1,32 +1,20 @@\n error: `proc-macro` crate types currently cannot export any items other than functions tagged with `#[proc_macro]`, `#[proc_macro_derive]`, or `#[proc_macro_attribute]`\n   --> $DIR/pub-at-crate-root.rs:8:1\n    |\n-LL | / pub mod a {\n-LL | |     use proc_macro::TokenStream;\n-LL | |\n-LL | |     #[proc_macro_derive(B)]\n-...  |\n-LL | |     }\n-LL | | }\n-   | |_^\n+LL | pub mod a {\n+   | ^^^^^^^^^\n \n error: functions tagged with `#[proc_macro_derive]` must currently reside in the root of the crate\n   --> $DIR/pub-at-crate-root.rs:12:5\n    |\n-LL | /     pub fn bar(a: TokenStream) -> TokenStream {\n-LL | |\n-LL | |         a\n-LL | |     }\n-   | |_____^\n+LL |     pub fn bar(a: TokenStream) -> TokenStream {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: functions tagged with `#[proc_macro_derive]` must be `pub`\n   --> $DIR/pub-at-crate-root.rs:19:1\n    |\n-LL | / fn bar(a: proc_macro::TokenStream) -> proc_macro::TokenStream {\n-LL | |\n-LL | |     a\n-LL | | }\n-   | |_^\n+LL | fn bar(a: proc_macro::TokenStream) -> proc_macro::TokenStream {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 3 previous errors\n "}]}