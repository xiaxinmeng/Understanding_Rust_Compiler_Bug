{"sha": "1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjNzZkMTg5YzAyZGRjNmNiNmZjZjE1YWU5NGYzYTNhZTRkZTVmYTc=", "commit": {"author": {"name": "Gareth Daniel Smith", "email": "garethdanielsmith@gmail.com", "date": "2012-09-29T11:34:11Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-09-30T21:55:56Z"}, "message": "When a vec/str bounds check fails, include the bad index and the length of the str/vec in the fail message.", "tree": {"sha": "064a5a635790111611b04e678e1c1db90ce00426", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/064a5a635790111611b04e678e1c1db90ce00426"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "html_url": "https://github.com/rust-lang/rust/commit/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/comments", "author": {"login": "Dretch", "id": 1428731, "node_id": "MDQ6VXNlcjE0Mjg3MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1428731?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dretch", "html_url": "https://github.com/Dretch", "followers_url": "https://api.github.com/users/Dretch/followers", "following_url": "https://api.github.com/users/Dretch/following{/other_user}", "gists_url": "https://api.github.com/users/Dretch/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dretch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dretch/subscriptions", "organizations_url": "https://api.github.com/users/Dretch/orgs", "repos_url": "https://api.github.com/users/Dretch/repos", "events_url": "https://api.github.com/users/Dretch/events{/privacy}", "received_events_url": "https://api.github.com/users/Dretch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f95f7d8de29baca271d04ef89021146061ce975", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f95f7d8de29baca271d04ef89021146061ce975", "html_url": "https://github.com/rust-lang/rust/commit/2f95f7d8de29baca271d04ef89021146061ce975"}], "stats": {"total": 48, "additions": 39, "deletions": 9}, "files": [{"sha": "da598fc3e7f4d0abda95d5562ed3e9a674a535ae", "filename": "src/libcore/rt.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Flibcore%2Frt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Flibcore%2Frt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Frt.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -40,6 +40,16 @@ fn rt_fail_(expr: *c_char, file: *c_char, line: size_t) {\n     rustrt::rust_upcall_fail(expr, file, line);\n }\n \n+#[rt(fail_bounds_check)]\n+fn rt_fail_bounds_check(file: *c_char, line: size_t,\n+                        index: size_t, len: size_t) {\n+    let msg = fmt!(\"index out of bounds: the len is %d but the index is %d\",\n+                    len as int, index as int);\n+    do str::as_buf(msg) |p, _len| {\n+        rt_fail_(p as *c_char, file, line);\n+    }\n+}\n+\n #[rt(exchange_malloc)]\n fn rt_exchange_malloc(td: *c_char, size: uintptr_t) -> *c_char {\n     return rustrt::rust_upcall_exchange_malloc(td, size);"}, {"sha": "ce32cd0a2dd1e0802855677bec9e22cabb1f7535", "filename": "src/rustc/middle/trans/controlflow.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Frustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Frustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fcontrolflow.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -344,3 +344,21 @@ fn trans_fail_value(bcx: block, sp_opt: Option<span>, V_fail_str: ValueRef)\n     Unreachable(bcx);\n     return bcx;\n }\n+\n+fn trans_fail_bounds_check(bcx: block, sp: span,\n+                           index: ValueRef, len: ValueRef) -> block {\n+    let _icx = bcx.insn_ctxt(\"trans_fail_bounds_check\");\n+    let ccx = bcx.ccx();\n+\n+    let loc = codemap::lookup_char_pos(bcx.sess().parse_sess.cm, sp.lo);\n+    let line = C_int(ccx, loc.line as int);\n+    let filename_cstr = C_cstr(bcx.ccx(), loc.file.name);\n+    let filename = PointerCast(bcx, filename_cstr, T_ptr(T_i8()));\n+\n+    let args = ~[filename, line, index, len];\n+    let bcx = callee::trans_rtcall(bcx, ~\"fail_bounds_check\", args,\n+                                   expr::Ignore);\n+    Unreachable(bcx);\n+    return bcx;\n+}\n+"}, {"sha": "57439daca2f2c527241e22775662d3b5d6dda654", "filename": "src/rustc/middle/trans/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Frustc%2Fmiddle%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Frustc%2Fmiddle%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fexpr.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -946,7 +946,9 @@ fn trans_index(bcx: block,\n \n     let bounds_check = ICmp(bcx, lib::llvm::IntUGE, scaled_ix, len);\n     let bcx = do with_cond(bcx, bounds_check) |bcx| {\n-        controlflow::trans_fail(bcx, Some(index_expr.span), ~\"bounds check\")\n+        let unscaled_len = UDiv(bcx, len, vt.llunit_size);\n+        controlflow::trans_fail_bounds_check(bcx, index_expr.span,\n+                                             ix_val, unscaled_len)\n     };\n     let elt = InBoundsGEP(bcx, base, ~[ix_val]);\n     let elt = PointerCast(bcx, elt, T_ptr(vt.llunit_ty));"}, {"sha": "ef371d07569cfe02b84311ec2f46445ea051c81f", "filename": "src/test/run-fail/bug-2470-bounds-check-overflow-2.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow-2.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,5 +1,5 @@\n // xfail-test\n-// error-pattern:bounds check\n+// error-pattern:index out of bounds\n \n fn main() {\n     let x = ~[1u,2u,3u];\n@@ -14,4 +14,4 @@ fn main() {\n \n     // This should fail.\n     error!(\"ov2 0x%x\",  x[idx]);\n-}\n\\ No newline at end of file\n+}"}, {"sha": "ae3a9c55b93175d1d0b7e898e736e4bd5917180c", "filename": "src/test/run-fail/bug-2470-bounds-check-overflow-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow-3.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,5 +1,5 @@\n // xfail-test\n-// error-pattern:bounds check\n+// error-pattern:index out of bounds\n \n #[cfg(target_arch=\"x86\")]\n fn main() {"}, {"sha": "fdbcb4de2be2b43964acea189534a15e60e3882c", "filename": "src/test/run-fail/bug-2470-bounds-check-overflow.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fbug-2470-bounds-check-overflow.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:bounds check\n+// error-pattern:index out of bounds\n \n fn main() {\n "}, {"sha": "5ba6e9dd27abd16a7f6332278e72d801e6be569b", "filename": "src/test/run-fail/small-negative-indexing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fsmall-negative-indexing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fsmall-negative-indexing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fsmall-negative-indexing.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,4 +1,4 @@\n-// error-pattern:bounds check\n+// error-pattern:index out of bounds: the len is 1024 but the index is -1\n fn main() {\n     let v = vec::from_fn(1024u, {|n| n});\n     // this should trip a bounds check"}, {"sha": "d9485f3a2896f8c2b4c17b07f3a51326bbfde121", "filename": "src/test/run-fail/str-overrun.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fstr-overrun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fstr-overrun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fstr-overrun.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-// error-pattern:bounds check\n+// error-pattern:index out of bounds: the len is 5 but the index is 5\n fn main() {\n     let s: ~str = ~\"hello\";\n "}, {"sha": "fd3254bc6b133d10b1a8777ee6baed573d91b24b", "filename": "src/test/run-fail/vec-overrun.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fvec-overrun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fvec-overrun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fvec-overrun.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-// error-pattern:bounds check\n+// error-pattern:index out of bounds: the len is 1 but the index is 2\n fn main() {\n     let v: ~[int] = ~[10];\n     let x: int = 0;"}, {"sha": "88b29471dac1fea651d0e7a6b26abbc256aff26e", "filename": "src/test/run-fail/vec-underrun.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fvec-underrun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7/src%2Ftest%2Frun-fail%2Fvec-underrun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fvec-underrun.rs?ref=1c76d189c02ddc6cb6fcf15ae94f3a3ae4de5fa7", "patch": "@@ -1,6 +1,6 @@\n // -*- rust -*-\n \n-// error-pattern:bounds check\n+// error-pattern:index out of bounds: the len is 2 but the index is -1\n fn main() {\n     let v: ~[int] = ~[10, 20];\n     let x: int = 0;"}]}