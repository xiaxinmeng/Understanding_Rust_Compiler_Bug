{"sha": "c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5Mjg0Y2VkZWI3ZmY0ZmYzZDEzM2IzN2JhZDhiMWQ2YzMyMzI5ZDM=", "commit": {"author": {"name": "Eduardo Bautista", "email": "me@eduardobautista.com", "date": "2014-08-13T22:25:13Z"}, "committer": {"name": "Eduardo Bautista", "email": "me@eduardobautista.com", "date": "2014-08-19T19:07:10Z"}, "message": "Use new Cargo file syntax", "tree": {"sha": "d3847f21586b82ee659e69be650e42e4c4088042", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3847f21586b82ee659e69be650e42e4c4088042"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3", "html_url": "https://github.com/rust-lang/rust/commit/c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3/comments", "author": {"login": "EduardoBautista", "id": 1585126, "node_id": "MDQ6VXNlcjE1ODUxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1585126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EduardoBautista", "html_url": "https://github.com/EduardoBautista", "followers_url": "https://api.github.com/users/EduardoBautista/followers", "following_url": "https://api.github.com/users/EduardoBautista/following{/other_user}", "gists_url": "https://api.github.com/users/EduardoBautista/gists{/gist_id}", "starred_url": "https://api.github.com/users/EduardoBautista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EduardoBautista/subscriptions", "organizations_url": "https://api.github.com/users/EduardoBautista/orgs", "repos_url": "https://api.github.com/users/EduardoBautista/repos", "events_url": "https://api.github.com/users/EduardoBautista/events{/privacy}", "received_events_url": "https://api.github.com/users/EduardoBautista/received_events", "type": "User", "site_admin": false}, "committer": {"login": "EduardoBautista", "id": 1585126, "node_id": "MDQ6VXNlcjE1ODUxMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1585126?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EduardoBautista", "html_url": "https://github.com/EduardoBautista", "followers_url": "https://api.github.com/users/EduardoBautista/followers", "following_url": "https://api.github.com/users/EduardoBautista/following{/other_user}", "gists_url": "https://api.github.com/users/EduardoBautista/gists{/gist_id}", "starred_url": "https://api.github.com/users/EduardoBautista/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EduardoBautista/subscriptions", "organizations_url": "https://api.github.com/users/EduardoBautista/orgs", "repos_url": "https://api.github.com/users/EduardoBautista/repos", "events_url": "https://api.github.com/users/EduardoBautista/events{/privacy}", "received_events_url": "https://api.github.com/users/EduardoBautista/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d189220d19f32e1c0ebc4395cad58a2708fc574", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d189220d19f32e1c0ebc4395cad58a2708fc574", "html_url": "https://github.com/rust-lang/rust/commit/6d189220d19f32e1c0ebc4395cad58a2708fc574"}], "stats": {"total": 72, "additions": 41, "deletions": 31}, "files": [{"sha": "8e942e534c3e481de56d6597ee5c66beacced7af", "filename": "src/doc/guide.md", "status": "modified", "additions": 41, "deletions": 31, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=c9284cedeb7ff4ff3d133b37bad8b1d6c32329d3", "patch": "@@ -342,7 +342,7 @@ Once you have this file in place, we should be ready to build! Try this:\n \n ```{bash}\n $ cargo build\n-   Compiling hello_world v0.1.0 (file:/home/yourname/projects/hello_world)\n+   Compiling hello_world v0.1.0 (file:///home/yourname/projects/hello_world)\n $ ./target/hello_world\n Hello, world!\n ```\n@@ -486,7 +486,7 @@ You can use `cargo build` on the command line to build it. You'll get a warning,\n but it will still print \"Hello, world!\":\n \n ```{ignore,notrust}\n-   Compiling hello_world v0.1.0 (file:/home/you/projects/hello_world)\n+   Compiling hello_world v0.1.0 (file:///home/you/projects/hello_world)\n src/hello_world.rs:2:9: 2:10 warning: unused variable: `x`, #[warn(unused_variable)] on by default\n src/hello_world.rs:2     let x: int;\n                              ^\n@@ -508,7 +508,7 @@ And try to build it. You'll get an error:\n \n ```{bash}\n $ cargo build\n-   Compiling hello_world v0.1.0 (file:/home/you/projects/hello_world)\n+   Compiling hello_world v0.1.0 (file:///home/you/projects/hello_world)\n src/hello_world.rs:4:39: 4:40 error: use of possibly uninitialized variable: `x`\n src/hello_world.rs:4     println!(\"The value of x is: {}\", x);\n                                                            ^\n@@ -1788,7 +1788,7 @@ Let's try compiling what Cargo gave us:\n \n ```{bash}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $\n ```\n \n@@ -1901,7 +1901,7 @@ Let's try to compile this using `cargo build`:\n \n ```{notrust,no_run}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:7:26: 7:34 error: the type of this value must be known in this context\n src/main.rs:7     let secret_number = (rand::random() % 100i) + 1i;\n                                        ^~~~~~~~\n@@ -1949,7 +1949,7 @@ fn main() {\n \n ```{notrust,ignore}\n $ cargo build\n-  Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+  Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $\n ```\n \n@@ -2008,7 +2008,7 @@ And trying it out:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $ ./target/guessing_game \n Guess the number!\n The secret number is: 57\n@@ -2063,7 +2063,7 @@ If we try to compile, we'll get some errors:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:20:15: 20:20 error: mismatched types: expected `int` but found `collections::string::String` (expected int but found struct collections::string::String)\n src/main.rs:20     match cmp(input, secret_number) {\n                              ^~~~~\n@@ -2117,7 +2117,7 @@ And try compiling again:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:20:15: 20:20 error: mismatched types: expected `uint` but found `collections::string::String` (expected uint but found struct collections::string::String)\n src/main.rs:20     match cmp(input, secret_number) {\n                              ^~~~~\n@@ -2220,7 +2220,7 @@ Let's try it out!\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n src/main.rs:22:15: 22:24 error: mismatched types: expected `uint` but found `core::option::Option<uint>` (expected uint but found enum core::option::Option)\n src/main.rs:22     match cmp(input_num, secret_number) {\n                              ^~~~~~~~~\n@@ -2279,8 +2279,8 @@ print an error message and return. Let's give this a shot:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.1.0 (file:/home/you/projects/guessing_game)\n-$ ./target/guessing_game\n+   Compiling guessing_game v0.1.0 (file:///home/you/projects/guessing_game)\n+$ ./target/guessing_game \n Guess the number!\n The secret number is: 17\n Please input your guess.\n@@ -2345,7 +2345,7 @@ Let's try it!\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $ ./target/guessing_game \n Guess the number!\n The secret number is: 58\n@@ -2423,7 +2423,7 @@ that `return`? If we give a non-number answer, we'll `return` and quit. Observe:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $ ./target/guessing_game \n Guess the number!\n The secret number is: 59\n@@ -2556,7 +2556,7 @@ Now we should be good! Let's try:\n \n ```{rust,ignore}\n $ cargo build\n-   Compiling guessing_game v0.0.1 (file:/home/you/projects/guessing_game)\n+   Compiling guessing_game v0.0.1 (file:///home/you/projects/guessing_game)\n $ ./target/guessing_game \n Guess the number!\n The secret number is: 61\n@@ -2671,7 +2671,7 @@ Let's double check our work by compiling:\n \n ```{bash,ignore}\n $ cargo build\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.1.0 (file:///home/you/projects/modules)\n $ ./target/modules\n Hello, world!\n ```\n@@ -2732,7 +2732,7 @@ mod hello {\n It gives an error:\n \n ```{notrust,ignore}\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.1.0 (file:///home/you/projects/modules)\n src/main.rs:2:5: 2:23 error: function `print_hello` is private\n src/main.rs:2     hello::print_hello();\n                   ^~~~~~~~~~~~~~~~~~\n@@ -2754,9 +2754,19 @@ mod hello {\n \n This will work:\n \n+```{notrust,ignore}\n+$ cargo build\n+   Compiling modules v0.1.0 (file:///home/you/projects/modules)\n+$\n+```\n+\n+Before we move on, let me show you one more Cargo command: `run`. `cargo run`\n+is kind of like `cargo build`, but it also then runs the produced exectuable.\n+Try it out:\n+\n ```{notrust,ignore}\n $ cargo run\n-   Compiling modules v0.1.0 (file:/home/steve/tmp/modules)\n+   Compiling modules v0.1.0 (file:///home/steve/tmp/modules)\n      Running `target/modules`\n Hello, world!\n $\n@@ -2806,7 +2816,7 @@ This doesn't _quite_ work yet. Try it:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.1.0 (file:///home/you/projects/modules)\n /home/you/projects/modules/src/lib.rs:2:5: 4:6 warning: code is never used: `print_hello`, #[warn(dead_code)] on by default\n /home/you/projects/modules/src/lib.rs:2     pub fn print_hello() {\n /home/you/projects/modules/src/lib.rs:3         println!(\"Hello, world!\");\n@@ -2842,7 +2852,7 @@ And everything should work:\n \n ```{notrust,ignore}\n $ cargo run\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.1.0 (file:///home/you/projects/modules)\n      Running `target/modules`\n Hello, world!\n ```\n@@ -2908,7 +2918,7 @@ This should all compile as usual:\n \n ```{notrust,ignore}\n $ cargo build\n-   Compiling modules v0.1.0 (file:/home/you/projects/modules)\n+   Compiling modules v0.1.0 (file:///home/you/projects/modules)\n $\n ```\n \n@@ -3080,7 +3090,7 @@ And try it out:\n \n ```{notrust,ignore}\n $ cargo run\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n      Running `target/testing`\n Hello, world!\n $\n@@ -3113,7 +3123,7 @@ it `false`, so this test should fail. Let's try it!\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n /home/you/projects/testing/src/main.rs:1:1: 3:2 warning: code is never used: `main`, #[warn(dead_code)] on by default\n /home/you/projects/testing/src/main.rs:1 fn main() {\n /home/you/projects/testing/src/main.rs:2     println!(\"Hello, world\");\n@@ -3146,7 +3156,7 @@ Lots of output! Let's break this down:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n ```\n \n You can run all of your tests with `cargo test`. This runs both your tests in\n@@ -3221,7 +3231,7 @@ And then try to run our tests again:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n /home/you/projects/testing/src/main.rs:1:1: 3:2 warning: code is never used: `main`, #[warn(dead_code)] on by default\n /home/you/projects/testing/src/main.rs:1 fn main() {\n /home/you/projects/testing/src/main.rs:2     println!(\"Hello, world\");\n@@ -3260,7 +3270,7 @@ With this attribute, we won't get the warning:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n \n running 0 tests\n \n@@ -3289,7 +3299,7 @@ And try to run the test:\n \n ```{notrust,ignore}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/youg/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/youg/projects/testing)\n /home/youg/projects/testing/tests/lib.rs:3:18: 3:38 error: unresolved name `add_three_times_four`.\n /home/youg/projects/testing/tests/lib.rs:3     let result = add_three_times_four(5i);\n                                                             ^~~~~~~~~~~~~~~~~~~~\n@@ -3348,7 +3358,7 @@ Let's give it a run:\n \n ```{ignore,notrust}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n \n running 0 tests\n \n@@ -3388,7 +3398,7 @@ If you run `cargo test`, you should get the same output:\n \n ```{ignore,notrust}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n \n running 0 tests\n \n@@ -3432,7 +3442,7 @@ fn test_add_three() {\n We'd get this error:\n \n ```{notrust,ignore}\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n /home/you/projects/testing/tests/lib.rs:3:5: 3:24 error: function `add_three` is private\n /home/you/projects/testing/tests/lib.rs:3 use testing::add_three;\n                                               ^~~~~~~~~~~~~~~~~~~\n@@ -3475,7 +3485,7 @@ Let's give it a shot:\n \n ```{ignore,notrust}\n $ cargo test\n-   Compiling testing v0.1.0 (file:/home/you/projects/testing)\n+   Compiling testing v0.1.0 (file:///home/you/projects/testing)\n \n running 1 test\n test test::test_times_four ... ok"}]}