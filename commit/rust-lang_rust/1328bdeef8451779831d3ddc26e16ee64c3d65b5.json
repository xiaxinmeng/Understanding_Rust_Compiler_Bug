{"sha": "1328bdeef8451779831d3ddc26e16ee64c3d65b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzMjhiZGVlZjg0NTE3Nzk4MzFkM2RkYzI2ZTE2ZWU2NGMzZDY1YjU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-06-24T16:12:00Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-06-29T22:53:32Z"}, "message": "resolve: Cleanup `resolve_crate_root`", "tree": {"sha": "9dd1e46f1b836c15f5d48d9e2bced0bef09afcfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dd1e46f1b836c15f5d48d9e2bced0bef09afcfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1328bdeef8451779831d3ddc26e16ee64c3d65b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1328bdeef8451779831d3ddc26e16ee64c3d65b5", "html_url": "https://github.com/rust-lang/rust/commit/1328bdeef8451779831d3ddc26e16ee64c3d65b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1328bdeef8451779831d3ddc26e16ee64c3d65b5/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1029775ad5f15d2200e087ebb4a867cf30dbbb25", "url": "https://api.github.com/repos/rust-lang/rust/commits/1029775ad5f15d2200e087ebb4a867cf30dbbb25", "html_url": "https://github.com/rust-lang/rust/commit/1029775ad5f15d2200e087ebb4a867cf30dbbb25"}], "stats": {"total": 23, "additions": 10, "deletions": 13}, "files": [{"sha": "a770f078404702c10508367dd858d5ec26829e1b", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=1328bdeef8451779831d3ddc26e16ee64c3d65b5", "patch": "@@ -156,7 +156,7 @@ impl<'a> Resolver<'a> {\n \n                     // Disallow `use $crate;`\n                     if source.name == keywords::DollarCrate.name() && path.segments.len() == 1 {\n-                        let crate_root = self.resolve_crate_root(source.span.ctxt(), true);\n+                        let crate_root = self.resolve_crate_root(source);\n                         let crate_name = match crate_root.kind {\n                             ModuleKind::Def(_, name) => name,\n                             ModuleKind::Block(..) => unreachable!(),"}, {"sha": "7771bc9b1cb17e45a7dcfa0aa45e395f938f994b", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=1328bdeef8451779831d3ddc26e16ee64c3d65b5", "patch": "@@ -1981,8 +1981,9 @@ impl<'a> Resolver<'a> {\n         result\n     }\n \n-    fn resolve_crate_root(&mut self, mut ctxt: SyntaxContext, legacy: bool) -> Module<'a> {\n-        let mark = if legacy {\n+    fn resolve_crate_root(&mut self, ident: Ident) -> Module<'a> {\n+        let mut ctxt = ident.span.ctxt();\n+        let mark = if ident.name == keywords::DollarCrate.name() {\n             // When resolving `$crate` from a `macro_rules!` invoked in a `macro`,\n             // we don't want to pretend that the `macro_rules!` definition is in the `macro`\n             // as described in `SyntaxContext::apply_mark`, so we ignore prepended modern marks.\n@@ -3345,14 +3346,11 @@ impl<'a> Resolver<'a> {\n             if ns == TypeNS {\n                 if (i == 0 && name == keywords::CrateRoot.name()) ||\n                    (i == 0 && name == keywords::Crate.name()) ||\n+                   (i == 0 && name == keywords::DollarCrate.name()) ||\n                    (i == 1 && name == keywords::Crate.name() &&\n                               path[0].name == keywords::CrateRoot.name()) {\n-                    // `::a::b` or `::crate::a::b`\n-                    module = Some(self.resolve_crate_root(ident.span.ctxt(), false));\n-                    continue\n-                } else if i == 0 && name == keywords::DollarCrate.name() {\n-                    // `$crate::a::b`\n-                    module = Some(self.resolve_crate_root(ident.span.ctxt(), true));\n+                    // `::a::b`, `crate::a::b`, `::crate::a::b` or `$crate::a::b`\n+                    module = Some(self.resolve_crate_root(ident));\n                     continue\n                 } else if i == 1 && !ident.is_path_segment_keyword() {\n                     let prev_name = path[0].name;"}, {"sha": "1dd7daf8302a2202036702410193036325a5bade", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=1328bdeef8451779831d3ddc26e16ee64c3d65b5", "patch": "@@ -155,10 +155,9 @@ impl<'a> base::Resolver for Resolver<'a> {\n                     }\n                 });\n \n-                let ident = path.segments[0].ident;\n-                if ident.name == keywords::DollarCrate.name() {\n+                if path.segments[0].ident.name == keywords::DollarCrate.name() {\n+                    let module = self.0.resolve_crate_root(path.segments[0].ident);\n                     path.segments[0].ident.name = keywords::CrateRoot.name();\n-                    let module = self.0.resolve_crate_root(ident.span.ctxt(), true);\n                     if !module.is_local() {\n                         let span = path.segments[0].ident.span;\n                         path.segments.insert(1, match module.kind {"}, {"sha": "0ee17ebc4870423b29068b2823be42d5668f630a", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1328bdeef8451779831d3ddc26e16ee64c3d65b5/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=1328bdeef8451779831d3ddc26e16ee64c3d65b5", "patch": "@@ -698,7 +698,7 @@ impl<'a, 'b:'a> ImportResolver<'a, 'b> {\n                                          \"crate root imports need to be explicitly named: \\\n                                           `use crate as name;`\".to_string()));\n                         } else {\n-                            Some(self.resolve_crate_root(source.span.ctxt().modern(), false))\n+                            Some(self.resolve_crate_root(source))\n                         }\n                     } else if is_extern && !source.is_path_segment_keyword() {\n                         let crate_id ="}]}