{"sha": "30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwZTRhODc0Y2IzMWE1NTI5NGQ4MGVlM2VkYTNkNDFiZjhhOGVjOGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-06T20:14:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-06T20:14:38Z"}, "message": "Rollup merge of #62422 - lzutao:remove-some-mem-uinit, r=alexcrichton\n\nRemove some uses of mem::uninitialized\n\ncc #62397\nr? @RalfJung", "tree": {"sha": "361480d66747a8fe02e16b8eead77809b230b9eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/361480d66747a8fe02e16b8eead77809b230b9eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdIQEuCRBK7hj4Ov3rIwAAdHIIAJCfa+sRVvFvJrmMgG9glsLn\nLMzEQRjbRJzk0FwXYctGJDQvpSQQFzKCa1QjPGlXeUK+E6kLFIowGKGuQWKVZD1Y\nbt8CdFjlj9jmovFg3juFGaS/5NkWJ6k9JEGNc2wSBxe+1jEre7BjSEBY9XExNxpi\nspRmvd2LGwQSLE6JgtXd3iBFrA7FGXfbWovWZjIw7HDYfrYsGjBNP5q7pf01OP9h\nKWjJAzXEluxgFh7oDVGRQf1mJ4asT7RRpPLNc5R1+TrGerIR1x2R6g9xu0/Rh6gl\nxEsONd44cJlMgt8o2eM2DRJt+HXfMagWiOpetiduoAcDAcDMZGQnMTG5i+52CVU=\n=ST5j\n-----END PGP SIGNATURE-----\n", "payload": "tree 361480d66747a8fe02e16b8eead77809b230b9eb\nparent 154726cf7d92e72e3386e056cf0ec61902f342cd\nparent 7646d4935b50c02f97545705af46ab46116db91d\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1562444078 +0200\ncommitter GitHub <noreply@github.com> 1562444078 +0200\n\nRollup merge of #62422 - lzutao:remove-some-mem-uinit, r=alexcrichton\n\nRemove some uses of mem::uninitialized\n\ncc #62397\nr? @RalfJung\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f", "html_url": "https://github.com/rust-lang/rust/commit/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "154726cf7d92e72e3386e056cf0ec61902f342cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/154726cf7d92e72e3386e056cf0ec61902f342cd", "html_url": "https://github.com/rust-lang/rust/commit/154726cf7d92e72e3386e056cf0ec61902f342cd"}, {"sha": "7646d4935b50c02f97545705af46ab46116db91d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7646d4935b50c02f97545705af46ab46116db91d", "html_url": "https://github.com/rust-lang/rust/commit/7646d4935b50c02f97545705af46ab46116db91d"}], "stats": {"total": 41, "additions": 30, "deletions": 11}, "files": [{"sha": "3b2701b893bb11818e9b56d6f4aabe084631cd04", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f", "patch": "@@ -170,8 +170,7 @@ impl CodegenCx<'ll, 'tcx> {\n     pub fn const_get_real(&self, v: &'ll Value) -> Option<(f64, bool)> {\n         unsafe {\n             if self.is_const_real(v) {\n-                #[allow(deprecated)]\n-                let mut loses_info: llvm::Bool = ::std::mem::uninitialized();\n+                let mut loses_info: llvm::Bool = 0;\n                 let r = llvm::LLVMConstRealGetDouble(v, &mut loses_info);\n                 let loses_info = if loses_info == 1 { true } else { false };\n                 Some((r, loses_info))"}, {"sha": "e5911de8396c13bbec4374ff52d9de19629931a7", "filename": "src/libterm/win.rs", "status": "modified", "additions": 29, "deletions": 9, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f/src%2Flibterm%2Fwin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f/src%2Flibterm%2Fwin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Fwin.rs?ref=30e4a874cb31a55294d80ee3eda3d41bf8a8ec8f", "patch": "@@ -2,8 +2,6 @@\n \n // FIXME (#13400): this is only a tiny fraction of the Windows console api\n \n-extern crate libc;\n-\n use std::io;\n use std::io::prelude::*;\n \n@@ -20,19 +18,36 @@ pub struct WinConsole<T> {\n     background: color::Color,\n }\n \n+type SHORT = i16;\n type WORD = u16;\n type DWORD = u32;\n type BOOL = i32;\n type HANDLE = *mut u8;\n \n+#[allow(non_snake_case)]\n+#[repr(C)]\n+struct SMALL_RECT {\n+    Left: SHORT,\n+    Top: SHORT,\n+    Right: SHORT,\n+    Bottom: SHORT,\n+}\n+\n+#[allow(non_snake_case)]\n+#[repr(C)]\n+struct COORD {\n+    X: SHORT,\n+    Y: SHORT,\n+}\n+\n #[allow(non_snake_case)]\n #[repr(C)]\n struct CONSOLE_SCREEN_BUFFER_INFO {\n-    dwSize: [libc::c_short; 2],\n-    dwCursorPosition: [libc::c_short; 2],\n+    dwSize: COORD,\n+    dwCursorPosition: COORD,\n     wAttributes: WORD,\n-    srWindow: [libc::c_short; 4],\n-    dwMaximumWindowSize: [libc::c_short; 2],\n+    srWindow: SMALL_RECT,\n+    dwMaximumWindowSize: COORD,\n }\n \n #[allow(non_snake_case)]\n@@ -105,12 +120,17 @@ impl<T: Write + Send + 'static> WinConsole<T> {\n \n     /// Returns `None` whenever the terminal cannot be created for some reason.\n     pub fn new(out: T) -> io::Result<WinConsole<T>> {\n+        use std::mem::MaybeUninit;\n+\n         let fg;\n         let bg;\n         unsafe {\n-            #[allow(deprecated)]\n-            let mut buffer_info = ::std::mem::uninitialized();\n-            if GetConsoleScreenBufferInfo(GetStdHandle(-11i32 as DWORD), &mut buffer_info) != 0 {\n+            let mut buffer_info = MaybeUninit::<CONSOLE_SCREEN_BUFFER_INFO>::uninit();\n+            if GetConsoleScreenBufferInfo(\n+                GetStdHandle(-11i32 as DWORD),\n+                buffer_info.as_mut_ptr()\n+            ) != 0 {\n+                let buffer_info = buffer_info.assume_init() ;\n                 fg = bits_to_color(buffer_info.wAttributes);\n                 bg = bits_to_color(buffer_info.wAttributes >> 4);\n             } else {"}]}