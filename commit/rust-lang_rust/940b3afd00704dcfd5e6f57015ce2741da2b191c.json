{"sha": "940b3afd00704dcfd5e6f57015ce2741da2b191c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0MGIzYWZkMDA3MDRkY2ZkNWU2ZjU3MDE1Y2UyNzQxZGEyYjE5MWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-13T10:28:00Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-09-13T10:29:27Z"}, "message": "internal: fix bugs in tests by simplifying code", "tree": {"sha": "3fc434446e640931fd138ea1be346b144e36177d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3fc434446e640931fd138ea1be346b144e36177d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/940b3afd00704dcfd5e6f57015ce2741da2b191c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/940b3afd00704dcfd5e6f57015ce2741da2b191c", "html_url": "https://github.com/rust-lang/rust/commit/940b3afd00704dcfd5e6f57015ce2741da2b191c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/940b3afd00704dcfd5e6f57015ce2741da2b191c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80991356e15c372491312c5e47e56c7c22be9773", "url": "https://api.github.com/repos/rust-lang/rust/commits/80991356e15c372491312c5e47e56c7c22be9773", "html_url": "https://github.com/rust-lang/rust/commit/80991356e15c372491312c5e47e56c7c22be9773"}], "stats": {"total": 167, "additions": 144, "deletions": 23}, "files": [{"sha": "7243b895836c0ef74e907ba149878d79a10fefb4", "filename": "crates/parser/src/grammar.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fparser%2Fsrc%2Fgrammar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fparser%2Fsrc%2Fgrammar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar.rs?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -194,10 +194,12 @@ fn opt_visibility(p: &mut Parser) -> bool {\n         // crate fn main() { }\n         // struct S { crate field: u32 }\n         // struct T(crate u32);\n-        //\n-        // test crate_keyword_path\n-        // fn foo() { crate::foo(); }\n-        T![crate] if !p.nth_at(1, T![::]) => {\n+        T![crate] => {\n+            if p.nth_at(1, T![::]) {\n+                // test crate_keyword_path\n+                // fn foo() { crate::foo(); }\n+                return false;\n+            }\n             let m = p.start();\n             p.bump(T![crate]);\n             m.complete(p, VISIBILITY);"}, {"sha": "001be099e6ef3e1b55b22b9020488802224e542a", "filename": "crates/parser/src/grammar/expressions.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fparser%2Fsrc%2Fgrammar%2Fexpressions.rs?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -374,7 +374,6 @@ fn lhs(p: &mut Parser, r: Restrictions) -> Option<(CompletedMarker, BlockLike)>\n             //    let mut p = F{x: 5};\n             //    {p}.x = 10;\n             // }\n-            //\n             let (lhs, blocklike) = atom::atom_expr(p, r)?;\n             return Some(postfix_expr(p, lhs, blocklike, !(r.prefer_stmt && blocklike.is_block())));\n         }"}, {"sha": "d9226d0681c92cc8c20cbebc86a4007e1b6a7708", "filename": "crates/sourcegen/src/lib.rs", "status": "modified", "additions": 12, "deletions": 14, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsourcegen%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsourcegen%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsourcegen%2Fsrc%2Flib.rs?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -55,22 +55,20 @@ impl CommentBlock {\n         assert!(tag.starts_with(char::is_uppercase));\n \n         let tag = format!(\"{}:\", tag);\n-        let mut res = Vec::new();\n-        for mut block in CommentBlock::do_extract(text, true) {\n-            let first = block.contents.remove(0);\n-            if let Some(id) = first.strip_prefix(&tag) {\n-                block.id = id.trim().to_string();\n-                res.push(block);\n-            }\n-        }\n-        res\n+        // Would be nice if we had `.retain_mut` here!\n+        CommentBlock::extract_untagged(text)\n+            .into_iter()\n+            .filter_map(|mut block| {\n+                let first = block.contents.remove(0);\n+                first.strip_prefix(&tag).map(|id| {\n+                    block.id = id.trim().to_string();\n+                    block\n+                })\n+            })\n+            .collect()\n     }\n \n     pub fn extract_untagged(text: &str) -> Vec<CommentBlock> {\n-        CommentBlock::do_extract(text, false)\n-    }\n-\n-    fn do_extract(text: &str, allow_blocks_with_empty_lines: bool) -> Vec<CommentBlock> {\n         let mut res = Vec::new();\n \n         let prefix = \"// \";\n@@ -79,7 +77,7 @@ impl CommentBlock {\n         let dummy_block = CommentBlock { id: String::new(), line: 0, contents: Vec::new() };\n         let mut block = dummy_block.clone();\n         for (line_num, line) in lines.enumerate() {\n-            if line == \"//\" && allow_blocks_with_empty_lines {\n+            if line == \"//\" {\n                 block.contents.push(String::new());\n                 continue;\n             }"}, {"sha": "ac51eb91d20ace1cae5c5bb9f173e73cacda99aa", "filename": "crates/syntax/test_data/parser/inline/ok/0110_use_path.rast", "status": "modified", "additions": 72, "deletions": 2, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rast?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@0..154\n+SOURCE_FILE@0..247\n   USE@0..17\n     USE_KW@0..3 \"use\"\n     WHITESPACE@3..4 \" \"\n@@ -35,4 +35,74 @@ SOURCE_FILE@0..154\n     SEMICOLON@123..124 \";\"\n   WHITESPACE@124..125 \" \"\n   COMMENT@125..153 \"// Rust 2018 - Unifor ...\"\n-  WHITESPACE@153..154 \"\\n\"\n+  WHITESPACE@153..155 \"\\n\\n\"\n+  USE@155..178\n+    USE_KW@155..158 \"use\"\n+    WHITESPACE@158..159 \" \"\n+    USE_TREE@159..177\n+      PATH@159..177\n+        PATH@159..171\n+          PATH@159..163\n+            PATH_SEGMENT@159..163\n+              NAME_REF@159..163\n+                SELF_KW@159..163 \"self\"\n+          COLON2@163..165 \"::\"\n+          PATH_SEGMENT@165..171\n+            NAME_REF@165..171\n+              IDENT@165..171 \"module\"\n+        COLON2@171..173 \"::\"\n+        PATH_SEGMENT@173..177\n+          NAME_REF@173..177\n+            IDENT@173..177 \"Item\"\n+    SEMICOLON@177..178 \";\"\n+  WHITESPACE@178..179 \"\\n\"\n+  USE@179..195\n+    USE_KW@179..182 \"use\"\n+    WHITESPACE@182..183 \" \"\n+    USE_TREE@183..194\n+      PATH@183..194\n+        PATH@183..188\n+          PATH_SEGMENT@183..188\n+            NAME_REF@183..188\n+              CRATE_KW@183..188 \"crate\"\n+        COLON2@188..190 \"::\"\n+        PATH_SEGMENT@190..194\n+          NAME_REF@190..194\n+            IDENT@190..194 \"Item\"\n+    SEMICOLON@194..195 \";\"\n+  WHITESPACE@195..196 \"\\n\"\n+  USE@196..219\n+    USE_KW@196..199 \"use\"\n+    WHITESPACE@199..200 \" \"\n+    USE_TREE@200..218\n+      PATH@200..218\n+        PATH@200..210\n+          PATH@200..204\n+            PATH_SEGMENT@200..204\n+              NAME_REF@200..204\n+                SELF_KW@200..204 \"self\"\n+          COLON2@204..206 \"::\"\n+          PATH_SEGMENT@206..210\n+            NAME_REF@206..210\n+              IDENT@206..210 \"some\"\n+        COLON2@210..212 \"::\"\n+        PATH_SEGMENT@212..218\n+          NAME_REF@212..218\n+            IDENT@212..218 \"Struct\"\n+    SEMICOLON@218..219 \";\"\n+  WHITESPACE@219..220 \"\\n\"\n+  USE@220..246\n+    USE_KW@220..223 \"use\"\n+    WHITESPACE@223..224 \" \"\n+    USE_TREE@224..245\n+      PATH@224..245\n+        PATH@224..234\n+          PATH_SEGMENT@224..234\n+            NAME_REF@224..234\n+              IDENT@224..234 \"crate_name\"\n+        COLON2@234..236 \"::\"\n+        PATH_SEGMENT@236..245\n+          NAME_REF@236..245\n+            IDENT@236..245 \"some_item\"\n+    SEMICOLON@245..246 \";\"\n+  WHITESPACE@246..247 \"\\n\""}, {"sha": "1e436a6bc2b4e2441aa4f41b834e201d33386d2b", "filename": "crates/syntax/test_data/parser/inline/ok/0110_use_path.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0110_use_path.rs?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -1,3 +1,8 @@\n use ::crate_name; // Rust 2018 - All flavours\n use crate_name; // Rust 2018 - Anchored paths\n use item_in_scope_or_crate_name; // Rust 2018 - Uniform Paths\n+\n+use self::module::Item;\n+use crate::Item;\n+use self::some::Struct;\n+use crate_name::some_item;"}, {"sha": "533f738e1553e96c7d4c5b42ddab060f3cfbf1cc", "filename": "crates/syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.rast", "status": "modified", "additions": 45, "deletions": 2, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rast?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -1,4 +1,4 @@\n-SOURCE_FILE@0..60\n+SOURCE_FILE@0..115\n   STRUCT@0..59\n     STRUCT_KW@0..6 \"struct\"\n     WHITESPACE@6..7 \" \"\n@@ -39,4 +39,47 @@ SOURCE_FILE@0..60\n       WHITESPACE@56..57 \"\\n\"\n       R_PAREN@57..58 \")\"\n     SEMICOLON@58..59 \";\"\n-  WHITESPACE@59..60 \"\\n\"\n+  WHITESPACE@59..61 \"\\n\\n\"\n+  ENUM@61..114\n+    ENUM_KW@61..65 \"enum\"\n+    WHITESPACE@65..66 \" \"\n+    NAME@66..67\n+      IDENT@66..67 \"S\"\n+    WHITESPACE@67..68 \" \"\n+    VARIANT_LIST@68..114\n+      L_CURLY@68..69 \"{\"\n+      WHITESPACE@69..74 \"\\n    \"\n+      VARIANT@74..111\n+        NAME@74..77\n+          IDENT@74..77 \"Uri\"\n+        TUPLE_FIELD_LIST@77..111\n+          L_PAREN@77..78 \"(\"\n+          TUPLE_FIELD@78..110\n+            ATTR@78..106\n+              POUND@78..79 \"#\"\n+              L_BRACK@79..80 \"[\"\n+              META@80..105\n+                PATH@80..85\n+                  PATH_SEGMENT@80..85\n+                    NAME_REF@80..85\n+                      IDENT@80..85 \"serde\"\n+                TOKEN_TREE@85..105\n+                  L_PAREN@85..86 \"(\"\n+                  IDENT@86..90 \"with\"\n+                  WHITESPACE@90..91 \" \"\n+                  EQ@91..92 \"=\"\n+                  WHITESPACE@92..93 \" \"\n+                  STRING@93..104 \"\\\"url_serde\\\"\"\n+                  R_PAREN@104..105 \")\"\n+              R_BRACK@105..106 \"]\"\n+            WHITESPACE@106..107 \" \"\n+            PATH_TYPE@107..110\n+              PATH@107..110\n+                PATH_SEGMENT@107..110\n+                  NAME_REF@107..110\n+                    IDENT@107..110 \"Uri\"\n+          R_PAREN@110..111 \")\"\n+      COMMA@111..112 \",\"\n+      WHITESPACE@112..113 \"\\n\"\n+      R_CURLY@113..114 \"}\"\n+  WHITESPACE@114..115 \"\\n\""}, {"sha": "4da379d0ed0b55783df686eda186d6b145178e7f", "filename": "crates/syntax/test_data/parser/inline/ok/0115_tuple_field_attrs.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/940b3afd00704dcfd5e6f57015ce2741da2b191c/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0115_tuple_field_attrs.rs?ref=940b3afd00704dcfd5e6f57015ce2741da2b191c", "patch": "@@ -2,3 +2,7 @@ struct S (\n     #[serde(with = \"url_serde\")]\n     pub Uri,\n );\n+\n+enum S {\n+    Uri(#[serde(with = \"url_serde\")] Uri),\n+}"}]}