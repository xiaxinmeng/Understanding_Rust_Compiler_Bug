{"sha": "e03fa3eec636bf66212e6457a8f451556b6fccf7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwM2ZhM2VlYzYzNmJmNjYyMTJlNjQ1N2E4ZjQ1MTU1NmI2ZmNjZjc=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-11-25T16:05:07Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-25T16:05:07Z"}, "message": "Rollup merge of #56170 - wesleywiser:fix_self_profiler_windows, r=estebank\n\nFix self profiler ICE on Windows\n\nFixes #51648", "tree": {"sha": "7fbaba897acb1c70bbdc48bc087aa9df83cf22d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fbaba897acb1c70bbdc48bc087aa9df83cf22d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e03fa3eec636bf66212e6457a8f451556b6fccf7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb+sgzCRBK7hj4Ov3rIwAAdHIIAD3y9jdWT80vopoZ2yRgXZvC\nRvnEcGAFVL2TRTxIxIOBxD5nE3WWZsIb/PwmbXbCjhTLGOKpge52+tBBbShs6/kg\n30xq5iif3IcTEPadWiuRfSxt4I7AClxhGgYL0mccB0GVJPjKjsN328bFCvwoPh0S\nxMLV2GItfuG92hF2P+ZW4CMZGPzaAx+RY5vPDPo+k3R6UG61zAONEmhy1QrMQuBo\nI0Wt6lsQrFjmvwpifAtvpws5oQ7yIseY9EQJc+dznlnNURDt1B1wIIHea77OcL33\nyE8Xp8JoSY5uSvAm/cgcfdE/Q5HH6w5+cNmrEektA1w9LVOR2N9kpsMAtkotZCY=\n=zmr9\n-----END PGP SIGNATURE-----\n", "payload": "tree 7fbaba897acb1c70bbdc48bc087aa9df83cf22d3\nparent 989678e525a7f5db87a7fbfaedcf844c2b91d8d7\nparent dce1c4530e2707c338fe56b26a36797377f11514\nauthor Pietro Albini <pietro@pietroalbini.org> 1543161907 +0100\ncommitter GitHub <noreply@github.com> 1543161907 +0100\n\nRollup merge of #56170 - wesleywiser:fix_self_profiler_windows, r=estebank\n\nFix self profiler ICE on Windows\n\nFixes #51648\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e03fa3eec636bf66212e6457a8f451556b6fccf7", "html_url": "https://github.com/rust-lang/rust/commit/e03fa3eec636bf66212e6457a8f451556b6fccf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e03fa3eec636bf66212e6457a8f451556b6fccf7/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "989678e525a7f5db87a7fbfaedcf844c2b91d8d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/989678e525a7f5db87a7fbfaedcf844c2b91d8d7", "html_url": "https://github.com/rust-lang/rust/commit/989678e525a7f5db87a7fbfaedcf844c2b91d8d7"}, {"sha": "dce1c4530e2707c338fe56b26a36797377f11514", "url": "https://api.github.com/repos/rust-lang/rust/commits/dce1c4530e2707c338fe56b26a36797377f11514", "html_url": "https://github.com/rust-lang/rust/commit/dce1c4530e2707c338fe56b26a36797377f11514"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "1187c53305d1c36956df23f32f5c9606ff28c2c2", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e03fa3eec636bf66212e6457a8f451556b6fccf7/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e03fa3eec636bf66212e6457a8f451556b6fccf7/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=e03fa3eec636bf66212e6457a8f451556b6fccf7", "patch": "@@ -826,8 +826,10 @@ impl Session {\n     }\n \n     pub fn profiler<F: FnOnce(&mut SelfProfiler) -> ()>(&self, f: F) {\n-        let mut profiler = self.self_profiling.borrow_mut();\n-        f(&mut profiler);\n+        if self.opts.debugging_opts.self_profile {\n+            let mut profiler = self.self_profiling.borrow_mut();\n+            f(&mut profiler);\n+        }\n     }\n \n     pub fn print_profiler_results(&self) {"}, {"sha": "6540a09d87763c181788bd0e1ca162abe1023a8c", "filename": "src/librustc/util/profiling.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e03fa3eec636bf66212e6457a8f451556b6fccf7/src%2Flibrustc%2Futil%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e03fa3eec636bf66212e6457a8f451556b6fccf7/src%2Flibrustc%2Futil%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fprofiling.rs?ref=e03fa3eec636bf66212e6457a8f451556b6fccf7", "patch": "@@ -12,7 +12,7 @@ use session::config::Options;\n \n use std::fs;\n use std::io::{self, StdoutLock, Write};\n-use std::time::Instant;\n+use std::time::{Duration, Instant};\n \n macro_rules! define_categories {\n     ($($name:ident,)*) => {\n@@ -208,7 +208,20 @@ impl SelfProfiler {\n     }\n \n     fn stop_timer(&mut self) -> u64 {\n-        let elapsed = self.current_timer.elapsed();\n+        let elapsed = if cfg!(windows) {\n+            // On Windows, timers don't always appear to be monotonic (see #51648)\n+            // which can lead to panics when calculating elapsed time.\n+            // Work around this by testing to see if the current time is less than\n+            // our recorded time, and if it is, just returning 0.\n+            let now = Instant::now();\n+            if self.current_timer >= now {\n+                Duration::new(0, 0)\n+            } else {\n+                self.current_timer.elapsed()\n+            }\n+        } else {\n+            self.current_timer.elapsed()\n+        };\n \n         self.current_timer = Instant::now();\n "}]}