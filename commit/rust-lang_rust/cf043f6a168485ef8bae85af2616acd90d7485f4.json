{"sha": "cf043f6a168485ef8bae85af2616acd90d7485f4", "node_id": "C_kwDOAAsO6NoAKGNmMDQzZjZhMTY4NDg1ZWY4YmFlODVhZjI2MTZhY2Q5MGQ3NDg1ZjQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-14T05:21:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-14T05:21:14Z"}, "message": "Auto merge of #101709 - nnethercote:simplify-visitors-more, r=cjgillot\n\nSimplify visitors more\n\nA successor to #100392.\n\nr? `@cjgillot`", "tree": {"sha": "2d0b446be391e020e5ffd1c980ffac7ae4d65ea8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d0b446be391e020e5ffd1c980ffac7ae4d65ea8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf043f6a168485ef8bae85af2616acd90d7485f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf043f6a168485ef8bae85af2616acd90d7485f4", "html_url": "https://github.com/rust-lang/rust/commit/cf043f6a168485ef8bae85af2616acd90d7485f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf043f6a168485ef8bae85af2616acd90d7485f4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "985afe07f79223d5d704ae259bb66c9d5e29d840", "url": "https://api.github.com/repos/rust-lang/rust/commits/985afe07f79223d5d704ae259bb66c9d5e29d840", "html_url": "https://github.com/rust-lang/rust/commit/985afe07f79223d5d704ae259bb66c9d5e29d840"}, {"sha": "0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa", "html_url": "https://github.com/rust-lang/rust/commit/0d1469ad348f5ac1b6ed6d6847e8b613b49e00fa"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "751ca24d5f5985844efbe79884d349d808fc5eaf", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=cf043f6a168485ef8bae85af2616acd90d7485f4", "patch": "@@ -425,7 +425,7 @@ struct UnsafeVisitor<'a, 'tcx> {\n impl<'tcx> Visitor<'tcx> for UnsafeVisitor<'_, 'tcx> {\n     type NestedFilter = nested_filter::All;\n \n-    fn visit_fn(&mut self, kind: FnKind<'tcx>, decl: &'tcx FnDecl<'_>, body_id: BodyId, span: Span, id: HirId) {\n+    fn visit_fn(&mut self, kind: FnKind<'tcx>, decl: &'tcx FnDecl<'_>, body_id: BodyId, _: Span, id: HirId) {\n         if self.has_unsafe {\n             return;\n         }\n@@ -438,7 +438,7 @@ impl<'tcx> Visitor<'tcx> for UnsafeVisitor<'_, 'tcx> {\n             }\n         }\n \n-        walk_fn(self, kind, decl, body_id, span, id);\n+        walk_fn(self, kind, decl, body_id, id);\n     }\n \n     fn visit_expr(&mut self, expr: &'tcx Expr<'_>) {"}, {"sha": "28dbfbab2e19bd511908dc8b2f8da751a4d2932b", "filename": "clippy_lints/src/disallowed_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Fdisallowed_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Fdisallowed_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdisallowed_types.rs?ref=cf043f6a168485ef8bae85af2616acd90d7485f4", "patch": "@@ -2,7 +2,7 @@ use clippy_utils::diagnostics::span_lint_and_then;\n \n use rustc_data_structures::fx::FxHashMap;\n use rustc_hir::{\n-    def::Res, def_id::DefId, Item, ItemKind, PolyTraitRef, PrimTy, TraitBoundModifier, Ty, TyKind, UseKind,\n+    def::Res, def_id::DefId, Item, ItemKind, PolyTraitRef, PrimTy, Ty, TyKind, UseKind,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_tool_lint, impl_lint_pass};\n@@ -120,7 +120,7 @@ impl<'tcx> LateLintPass<'tcx> for DisallowedTypes {\n         }\n     }\n \n-    fn check_poly_trait_ref(&mut self, cx: &LateContext<'tcx>, poly: &'tcx PolyTraitRef<'tcx>, _: TraitBoundModifier) {\n+    fn check_poly_trait_ref(&mut self, cx: &LateContext<'tcx>, poly: &'tcx PolyTraitRef<'tcx>) {\n         self.check_res_emit(cx, &poly.trait_ref.path.res, poly.trait_ref.path.span);\n     }\n }"}, {"sha": "643a7cfd577b796a193593b12702861f4f184894", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=cf043f6a168485ef8bae85af2616acd90d7485f4", "patch": "@@ -10,7 +10,7 @@ use rustc_hir::FnRetTy::Return;\n use rustc_hir::{\n     BareFnTy, BodyId, FnDecl, GenericArg, GenericBound, GenericParam, GenericParamKind, Generics, Impl, ImplItem,\n     ImplItemKind, Item, ItemKind, LangItem, Lifetime, LifetimeName, ParamName, PolyTraitRef, PredicateOrigin,\n-    TraitBoundModifier, TraitFn, TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n+    TraitFn, TraitItem, TraitItemKind, Ty, TyKind, WherePredicate,\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::hir::nested_filter as middle_nested_filter;\n@@ -422,7 +422,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n         self.record(&Some(*lifetime));\n     }\n \n-    fn visit_poly_trait_ref(&mut self, poly_tref: &'tcx PolyTraitRef<'tcx>, tbm: TraitBoundModifier) {\n+    fn visit_poly_trait_ref(&mut self, poly_tref: &'tcx PolyTraitRef<'tcx>) {\n         let trait_ref = &poly_tref.trait_ref;\n         if CLOSURE_TRAIT_BOUNDS.iter().any(|&item| {\n             self.cx\n@@ -435,7 +435,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             sub_visitor.visit_trait_ref(trait_ref);\n             self.nested_elision_site_lts.append(&mut sub_visitor.all_lts());\n         } else {\n-            walk_poly_trait_ref(self, poly_tref, tbm);\n+            walk_poly_trait_ref(self, poly_tref);\n         }\n     }\n \n@@ -466,7 +466,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n                     self.unelided_trait_object_lifetime = true;\n                 }\n                 for bound in bounds {\n-                    self.visit_poly_trait_ref(bound, TraitBoundModifier::None);\n+                    self.visit_poly_trait_ref(bound);\n                 }\n             },\n             _ => walk_ty(self, ty),"}, {"sha": "bf487c7ca20c89b833004962495f853e0c15ab4f", "filename": "clippy_lints/src/unused_async.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Funused_async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Funused_async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_async.rs?ref=cf043f6a168485ef8bae85af2616acd90d7485f4", "patch": "@@ -70,7 +70,7 @@ impl<'tcx> LateLintPass<'tcx> for UnusedAsync {\n     ) {\n         if !span.from_expansion() && fn_kind.asyncness() == IsAsync::Async {\n             let mut visitor = AsyncFnVisitor { cx, found_await: false };\n-            walk_fn(&mut visitor, fn_kind, fn_decl, body.id(), span, hir_id);\n+            walk_fn(&mut visitor, fn_kind, fn_decl, body.id(), hir_id);\n             if !visitor.found_await {\n                 span_lint_and_help(\n                     cx,"}, {"sha": "3ef2655807974fa794ed45e77b94a5c582b1aea7", "filename": "clippy_lints/src/unwrap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Funwrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_lints%2Fsrc%2Funwrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funwrap.rs?ref=cf043f6a168485ef8bae85af2616acd90d7485f4", "patch": "@@ -326,6 +326,6 @@ impl<'tcx> LateLintPass<'tcx> for Unwrap {\n             unwrappables: Vec::new(),\n         };\n \n-        walk_fn(&mut v, kind, decl, body.id(), span, fn_id);\n+        walk_fn(&mut v, kind, decl, body.id(), fn_id);\n     }\n }"}, {"sha": "23b51ec2d08494e1b5deedb1699689fd3caf3c67", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf043f6a168485ef8bae85af2616acd90d7485f4/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=cf043f6a168485ef8bae85af2616acd90d7485f4", "patch": "@@ -1121,7 +1121,7 @@ pub struct ContainsName {\n }\n \n impl<'tcx> Visitor<'tcx> for ContainsName {\n-    fn visit_name(&mut self, _: Span, name: Symbol) {\n+    fn visit_name(&mut self, name: Symbol) {\n         if self.name == name {\n             self.result = true;\n         }"}]}