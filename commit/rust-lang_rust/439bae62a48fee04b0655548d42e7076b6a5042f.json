{"sha": "439bae62a48fee04b0655548d42e7076b6a5042f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzOWJhZTYyYTQ4ZmVlMDRiMDY1NTU0OGQ0MmU3MDc2YjZhNTA0MmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-12T17:00:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-12T17:00:48Z"}, "message": "Auto merge of #5884 - Ryan1729:patch-1, r=flip1995\n\nAdd the other overloadable operations to suspicious_arithmetic_impl\n\nIn #2268 I idly mused that the other user-overloadable operations could be added to this lint. Knowing that the lint was arguably incomplete was gnawing at the back of my mind, so I figured that I might as well make this PR, particularly given the change needed was so small.\n\nchangelog: Start warning on suspicious implementations of the `BitAnd`, `BitOr`, `BitXor`, `Rem`, `Shl`, and `Shr` traits.", "tree": {"sha": "e44332badffcfded9693f2ca20deb4b20c69b97d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e44332badffcfded9693f2ca20deb4b20c69b97d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/439bae62a48fee04b0655548d42e7076b6a5042f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/439bae62a48fee04b0655548d42e7076b6a5042f", "html_url": "https://github.com/rust-lang/rust/commit/439bae62a48fee04b0655548d42e7076b6a5042f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/439bae62a48fee04b0655548d42e7076b6a5042f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c73cf9f38737f89cbbd001480327943302a66d5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c73cf9f38737f89cbbd001480327943302a66d5b", "html_url": "https://github.com/rust-lang/rust/commit/c73cf9f38737f89cbbd001480327943302a66d5b"}, {"sha": "7bd7a46331fbaa8b8ebbaacf178c988498df9f13", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bd7a46331fbaa8b8ebbaacf178c988498df9f13", "html_url": "https://github.com/rust-lang/rust/commit/7bd7a46331fbaa8b8ebbaacf178c988498df9f13"}], "stats": {"total": 106, "additions": 100, "deletions": 6}, "files": [{"sha": "3a688a7bbef324cd12a61086ec78fa9d059230ae", "filename": "clippy_lints/src/suspicious_trait_impl.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/439bae62a48fee04b0655548d42e7076b6a5042f/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439bae62a48fee04b0655548d42e7076b6a5042f/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fsuspicious_trait_impl.rs?ref=439bae62a48fee04b0655548d42e7076b6a5042f", "patch": "@@ -86,12 +86,20 @@ impl<'tcx> LateLintPass<'tcx> for SuspiciousImpl {\n                 cx,\n                 expr,\n                 binop.node,\n-                &[\"Add\", \"Sub\", \"Mul\", \"Div\"],\n+                &[\n+                    \"Add\", \"Sub\", \"Mul\", \"Div\", \"Rem\", \"BitAnd\", \"BitOr\", \"BitXor\", \"Shl\", \"Shr\",\n+                ],\n                 &[\n                     hir::BinOpKind::Add,\n                     hir::BinOpKind::Sub,\n                     hir::BinOpKind::Mul,\n                     hir::BinOpKind::Div,\n+                    hir::BinOpKind::Rem,\n+                    hir::BinOpKind::BitAnd,\n+                    hir::BinOpKind::BitOr,\n+                    hir::BinOpKind::BitXor,\n+                    hir::BinOpKind::Shl,\n+                    hir::BinOpKind::Shr,\n                 ],\n             ) {\n                 span_lint("}, {"sha": "5c280efac1a876dbb849b7c81940b6d3db1b48ad", "filename": "tests/ui/suspicious_arithmetic_impl.rs", "status": "modified", "additions": 51, "deletions": 1, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/439bae62a48fee04b0655548d42e7076b6a5042f/tests%2Fui%2Fsuspicious_arithmetic_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/439bae62a48fee04b0655548d42e7076b6a5042f/tests%2Fui%2Fsuspicious_arithmetic_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.rs?ref=439bae62a48fee04b0655548d42e7076b6a5042f", "patch": "@@ -1,5 +1,7 @@\n #![warn(clippy::suspicious_arithmetic_impl)]\n-use std::ops::{Add, AddAssign, BitOrAssign, Div, DivAssign, Mul, MulAssign, Sub};\n+use std::ops::{\n+    Add, AddAssign, BitAnd, BitOr, BitOrAssign, BitXor, Div, DivAssign, Mul, MulAssign, Rem, Shl, Shr, Sub,\n+};\n \n #[derive(Copy, Clone)]\n struct Foo(u32);\n@@ -61,6 +63,54 @@ impl Div for Foo {\n     }\n }\n \n+impl Rem for Foo {\n+    type Output = Foo;\n+\n+    fn rem(self, other: Self) -> Self {\n+        Foo(self.0 / other.0)\n+    }\n+}\n+\n+impl BitAnd for Foo {\n+    type Output = Foo;\n+\n+    fn bitand(self, other: Self) -> Self {\n+        Foo(self.0 | other.0)\n+    }\n+}\n+\n+impl BitOr for Foo {\n+    type Output = Foo;\n+\n+    fn bitor(self, other: Self) -> Self {\n+        Foo(self.0 ^ other.0)\n+    }\n+}\n+\n+impl BitXor for Foo {\n+    type Output = Foo;\n+\n+    fn bitxor(self, other: Self) -> Self {\n+        Foo(self.0 & other.0)\n+    }\n+}\n+\n+impl Shl for Foo {\n+    type Output = Foo;\n+\n+    fn shl(self, other: Self) -> Self {\n+        Foo(self.0 >> other.0)\n+    }\n+}\n+\n+impl Shr for Foo {\n+    type Output = Foo;\n+\n+    fn shr(self, other: Self) -> Self {\n+        Foo(self.0 << other.0)\n+    }\n+}\n+\n struct Bar(i32);\n \n impl Add for Bar {"}, {"sha": "388fc7400820947ab912c088099d94e20391995d", "filename": "tests/ui/suspicious_arithmetic_impl.stderr", "status": "modified", "additions": 40, "deletions": 4, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/439bae62a48fee04b0655548d42e7076b6a5042f/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/439bae62a48fee04b0655548d42e7076b6a5042f/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_arithmetic_impl.stderr?ref=439bae62a48fee04b0655548d42e7076b6a5042f", "patch": "@@ -1,24 +1,60 @@\n error: suspicious use of binary operator in `Add` impl\n-  --> $DIR/suspicious_arithmetic_impl.rs:11:20\n+  --> $DIR/suspicious_arithmetic_impl.rs:13:20\n    |\n LL |         Foo(self.0 - other.0)\n    |                    ^\n    |\n    = note: `-D clippy::suspicious-arithmetic-impl` implied by `-D warnings`\n \n error: suspicious use of binary operator in `AddAssign` impl\n-  --> $DIR/suspicious_arithmetic_impl.rs:17:23\n+  --> $DIR/suspicious_arithmetic_impl.rs:19:23\n    |\n LL |         *self = *self - other;\n    |                       ^\n    |\n    = note: `#[deny(clippy::suspicious_op_assign_impl)]` on by default\n \n error: suspicious use of binary operator in `MulAssign` impl\n-  --> $DIR/suspicious_arithmetic_impl.rs:30:16\n+  --> $DIR/suspicious_arithmetic_impl.rs:32:16\n    |\n LL |         self.0 /= other.0;\n    |                ^^\n \n-error: aborting due to 3 previous errors\n+error: suspicious use of binary operator in `Rem` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:70:20\n+   |\n+LL |         Foo(self.0 / other.0)\n+   |                    ^\n+\n+error: suspicious use of binary operator in `BitAnd` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:78:20\n+   |\n+LL |         Foo(self.0 | other.0)\n+   |                    ^\n+\n+error: suspicious use of binary operator in `BitOr` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:86:20\n+   |\n+LL |         Foo(self.0 ^ other.0)\n+   |                    ^\n+\n+error: suspicious use of binary operator in `BitXor` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:94:20\n+   |\n+LL |         Foo(self.0 & other.0)\n+   |                    ^\n+\n+error: suspicious use of binary operator in `Shl` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:102:20\n+   |\n+LL |         Foo(self.0 >> other.0)\n+   |                    ^^\n+\n+error: suspicious use of binary operator in `Shr` impl\n+  --> $DIR/suspicious_arithmetic_impl.rs:110:20\n+   |\n+LL |         Foo(self.0 << other.0)\n+   |                    ^^\n+\n+error: aborting due to 9 previous errors\n "}]}