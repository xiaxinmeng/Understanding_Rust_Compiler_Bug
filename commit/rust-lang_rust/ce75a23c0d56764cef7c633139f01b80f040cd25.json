{"sha": "ce75a23c0d56764cef7c633139f01b80f040cd25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNzVhMjNjMGQ1Njc2NGNlZjdjNjMzMTM5ZjAxYjgwZjA0MGNkMjU=", "commit": {"author": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-05-19T21:26:42Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2019-05-20T15:12:49Z"}, "message": "Reinstated shallow disallowing of maybe bounds in trait objects.", "tree": {"sha": "064497e152499141f8ddf3d245d0b92a932a1865", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/064497e152499141f8ddf3d245d0b92a932a1865"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce75a23c0d56764cef7c633139f01b80f040cd25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce75a23c0d56764cef7c633139f01b80f040cd25", "html_url": "https://github.com/rust-lang/rust/commit/ce75a23c0d56764cef7c633139f01b80f040cd25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce75a23c0d56764cef7c633139f01b80f040cd25/comments", "author": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0a61904f4b38c76fe32c7cda57626be94b9c65a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0a61904f4b38c76fe32c7cda57626be94b9c65a", "html_url": "https://github.com/rust-lang/rust/commit/a0a61904f4b38c76fe32c7cda57626be94b9c65a"}], "stats": {"total": 86, "additions": 80, "deletions": 6}, "files": [{"sha": "2bea1db841ae918db916e9e2ba15f6f67255ddf9", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -504,6 +504,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                         any_lifetime_bounds = true;\n                     }\n                 }\n+                self.no_questions_in_bounds(bounds, \"trait object types\", false);\n             }\n             TyKind::ImplTrait(_, ref bounds) => {\n                 if self.is_impl_trait_banned {"}, {"sha": "02ed45c656f1c533ccf9faa8ee738906e62b5678", "filename": "src/test/ui/maybe-bounds.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fmaybe-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fmaybe-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmaybe-bounds.rs?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -1,6 +1,9 @@\n-trait Tr: ?Sized {} //~ ERROR `?Trait` is not permitted in supertraits\n+trait Tr: ?Sized {}\n+//~^ ERROR `?Trait` is not permitted in supertraits\n \n type A1 = dyn Tr + (?Sized);\n+//~^ ERROR `?Trait` is not permitted in trait object types\n type A2 = dyn for<'a> Tr + (?Sized);\n+//~^ ERROR `?Trait` is not permitted in trait object types\n \n fn main() {}"}, {"sha": "1d823b6acb2839b22d182ded2fef2dde28b15de8", "filename": "src/test/ui/maybe-bounds.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fmaybe-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fmaybe-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmaybe-bounds.stderr?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -6,5 +6,17 @@ LL | trait Tr: ?Sized {}\n    |\n    = note: traits are `?Sized` by default\n \n-error: aborting due to previous error\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/maybe-bounds.rs:4:20\n+   |\n+LL | type A1 = dyn Tr + (?Sized);\n+   |                    ^^^^^^^^\n+\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/maybe-bounds.rs:6:28\n+   |\n+LL | type A2 = dyn for<'a> Tr + (?Sized);\n+   |                            ^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n "}, {"sha": "9ac10cd13279b3152748fb6fb135f6104c17402d", "filename": "src/test/ui/parser/trait-object-trait-parens.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.rs?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -4,7 +4,9 @@ fn f<T: (Copy) + (?Sized) + (for<'a> Trait<'a>)>() {}\n \n fn main() {\n     let _: Box<(Copy) + (?Sized) + (for<'a> Trait<'a>)>;\n+    //~^ ERROR `?Trait` is not permitted in trait object types\n     let _: Box<(?Sized) + (for<'a> Trait<'a>) + (Copy)>;\n     let _: Box<(for<'a> Trait<'a>) + (Copy) + (?Sized)>;\n     //~^ ERROR use of undeclared lifetime name `'a`\n+    //~| ERROR `?Trait` is not permitted in trait object types\n }"}, {"sha": "36494b765394c225b83e97089f69c77e4082e074", "filename": "src/test/ui/parser/trait-object-trait-parens.stderr", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Ftrait-object-trait-parens.stderr?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -1,9 +1,21 @@\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/trait-object-trait-parens.rs:6:25\n+   |\n+LL |     let _: Box<(Copy) + (?Sized) + (for<'a> Trait<'a>)>;\n+   |                         ^^^^^^^^\n+\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/trait-object-trait-parens.rs:9:47\n+   |\n+LL |     let _: Box<(for<'a> Trait<'a>) + (Copy) + (?Sized)>;\n+   |                                               ^^^^^^^^\n+\n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/trait-object-trait-parens.rs:8:31\n+  --> $DIR/trait-object-trait-parens.rs:9:31\n    |\n LL |     let _: Box<(for<'a> Trait<'a>) + (Copy) + (?Sized)>;\n    |                               ^^ undeclared lifetime\n \n-error: aborting due to previous error\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0261`."}, {"sha": "f24c1301c53abe6a5ca388b19d14104d5c9c5c5d", "filename": "src/test/ui/traits/wf-trait-object-maybe-bound.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-maybe-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-maybe-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-maybe-bound.rs?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -1,15 +1,20 @@\n-// compile-pass\n+// compile-fail\n \n // Test that `dyn ... + ?Sized + ...` is okay (though `?Sized` has no effect in trait objects).\n \n trait Foo {}\n \n type _0 = dyn ?Sized + Foo;\n+//~^ ERROR `?Trait` is not permitted in trait object types\n \n type _1 = dyn Foo + ?Sized;\n+//~^ ERROR `?Trait` is not permitted in trait object types\n \n type _2 = dyn Foo + ?Sized + ?Sized;\n+//~^ ERROR `?Trait` is not permitted in trait object types\n+//~| ERROR `?Trait` is not permitted in trait object types\n \n type _3 = dyn ?Sized + Foo;\n+//~^ ERROR `?Trait` is not permitted in trait object types\n \n fn main() {}"}, {"sha": "11187342d59f294367ee251e15199b75be9c252e", "filename": "src/test/ui/traits/wf-trait-object-maybe-bound.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-maybe-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-maybe-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-maybe-bound.stderr?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -0,0 +1,32 @@\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/wf-trait-object-maybe-bound.rs:7:15\n+   |\n+LL | type _0 = dyn ?Sized + Foo;\n+   |               ^^^^^^\n+\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/wf-trait-object-maybe-bound.rs:10:21\n+   |\n+LL | type _1 = dyn Foo + ?Sized;\n+   |                     ^^^^^^\n+\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/wf-trait-object-maybe-bound.rs:13:21\n+   |\n+LL | type _2 = dyn Foo + ?Sized + ?Sized;\n+   |                     ^^^^^^\n+\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/wf-trait-object-maybe-bound.rs:13:30\n+   |\n+LL | type _2 = dyn Foo + ?Sized + ?Sized;\n+   |                              ^^^^^^\n+\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/wf-trait-object-maybe-bound.rs:17:15\n+   |\n+LL | type _3 = dyn ?Sized + Foo;\n+   |               ^^^^^^\n+\n+error: aborting due to 5 previous errors\n+"}, {"sha": "1b83d2487f4c6f8e4fc445677d889c9f3f59dcdb", "filename": "src/test/ui/traits/wf-trait-object-only-maybe-bound.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.rs?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -2,5 +2,6 @@\n \n type _0 = dyn ?Sized;\n //~^ ERROR at least one non-builtin trait is required for an object type [E0224]\n+//~| ERROR ?Trait` is not permitted in trait object types\n \n fn main() {}"}, {"sha": "0cfb389fd899ebe1c90d0cd8af04be5399a7133f", "filename": "src/test/ui/traits/wf-trait-object-only-maybe-bound.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ce75a23c0d56764cef7c633139f01b80f040cd25/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fwf-trait-object-only-maybe-bound.stderr?ref=ce75a23c0d56764cef7c633139f01b80f040cd25", "patch": "@@ -1,8 +1,14 @@\n+error: `?Trait` is not permitted in trait object types\n+  --> $DIR/wf-trait-object-only-maybe-bound.rs:3:15\n+   |\n+LL | type _0 = dyn ?Sized;\n+   |               ^^^^^^\n+\n error[E0224]: at least one non-builtin trait is required for an object type\n   --> $DIR/wf-trait-object-only-maybe-bound.rs:3:11\n    |\n LL | type _0 = dyn ?Sized;\n    |           ^^^^^^^^^^\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n "}]}