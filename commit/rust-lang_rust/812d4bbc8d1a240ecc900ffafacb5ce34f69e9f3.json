{"sha": "812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgxMmQ0YmJjOGQxYTI0MGVjYzkwMGZmYWZhY2I1Y2UzNGY2OWU5ZjM=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-12T12:58:52Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-18T19:23:00Z"}, "message": "Fix dataflow assert errors", "tree": {"sha": "b8aa2ffb5c66a34837e21d89a65842b4797b3f4b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8aa2ffb5c66a34837e21d89a65842b4797b3f4b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3", "html_url": "https://github.com/rust-lang/rust/commit/812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8a3e2b78bb0595bc9205b29898eb128836b5c57f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a3e2b78bb0595bc9205b29898eb128836b5c57f", "html_url": "https://github.com/rust-lang/rust/commit/8a3e2b78bb0595bc9205b29898eb128836b5c57f"}], "stats": {"total": 20, "additions": 17, "deletions": 3}, "files": [{"sha": "3c46e8fc36b8dd1988baf315232890d43e0826c0", "filename": "compiler/rustc_mir/src/transform/dest_prop.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs?ref=812d4bbc8d1a240ecc900ffafacb5ce34f69e9f3", "patch": "@@ -403,6 +403,7 @@ impl Conflicts {\n             .iterate_to_fixpoint()\n             .into_results_cursor(body);\n \n+        let mut reachable = None;\n         dump_mir(\n             tcx,\n             None,\n@@ -411,15 +412,18 @@ impl Conflicts {\n             source,\n             body,\n             |pass_where, w| {\n+                let reachable =\n+                    reachable.get_or_insert_with(|| traversal::reachable_as_bitset(body));\n+\n                 match pass_where {\n-                    PassWhere::BeforeLocation(loc) => {\n+                    PassWhere::BeforeLocation(loc) if reachable.contains(loc.block) => {\n                         init.seek_before_primary_effect(loc);\n                         live.seek_after_primary_effect(loc);\n \n                         writeln!(w, \"        // init: {:?}\", init.get())?;\n                         writeln!(w, \"        // live: {:?}\", live.get())?;\n                     }\n-                    PassWhere::AfterTerminator(bb) => {\n+                    PassWhere::AfterTerminator(bb) if reachable.contains(bb) => {\n                         let loc = body.terminator_loc(bb);\n                         init.seek_after_primary_effect(loc);\n                         live.seek_before_primary_effect(loc);\n@@ -428,7 +432,7 @@ impl Conflicts {\n                         writeln!(w, \"        // live: {:?}\", live.get())?;\n                     }\n \n-                    PassWhere::BeforeBlock(bb) => {\n+                    PassWhere::BeforeBlock(bb) if reachable.contains(bb) => {\n                         init.seek_to_block_start(bb);\n                         live.seek_to_block_start(bb);\n \n@@ -437,6 +441,16 @@ impl Conflicts {\n                     }\n \n                     PassWhere::BeforeCFG | PassWhere::AfterCFG | PassWhere::AfterLocation(_) => {}\n+\n+                    PassWhere::BeforeLocation(_) | PassWhere::AfterTerminator(_) => {\n+                        writeln!(w, \"        // init: <unreachable>\")?;\n+                        writeln!(w, \"        // live: <unreachable>\")?;\n+                    }\n+\n+                    PassWhere::BeforeBlock(_) => {\n+                        writeln!(w, \"    // init: <unreachable>\")?;\n+                        writeln!(w, \"    // live: <unreachable>\")?;\n+                    }\n                 }\n \n                 Ok(())"}]}