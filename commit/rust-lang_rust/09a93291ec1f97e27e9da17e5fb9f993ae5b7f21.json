{"sha": "09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5YTkzMjkxZWMxZjk3ZTI3ZTlkYTE3ZTVmYjlmOTkzYWU1YjdmMjE=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T02:18:17Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-05-11T06:40:42Z"}, "message": "Fix question_mark.rs", "tree": {"sha": "3b1adc0bc3cd4bfce49af1a6e18210a9536b6540", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b1adc0bc3cd4bfce49af1a6e18210a9536b6540"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "html_url": "https://github.com/rust-lang/rust/commit/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f40c77a77665e3f54c2e0d02e074033768a87576", "url": "https://api.github.com/repos/rust-lang/rust/commits/f40c77a77665e3f54c2e0d02e074033768a87576", "html_url": "https://github.com/rust-lang/rust/commit/f40c77a77665e3f54c2e0d02e074033768a87576"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "743c0c4224a2f9520747d7e571bed594cf204a6d", "filename": "clippy_lints/src/question_mark.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21/clippy_lints%2Fsrc%2Fquestion_mark.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09a93291ec1f97e27e9da17e5fb9f993ae5b7f21/clippy_lints%2Fsrc%2Fquestion_mark.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fquestion_mark.rs?ref=09a93291ec1f97e27e9da17e5fb9f993ae5b7f21", "patch": "@@ -8,7 +8,7 @@ use syntax::ptr::P;\n \n use crate::utils::paths::*;\n use crate::utils::sugg::Sugg;\n-use crate::utils::{match_type, span_lint_and_then, SpanlessEq};\n+use crate::utils::{higher, match_type, span_lint_and_then, SpanlessEq};\n \n declare_clippy_lint! {\n     /// **What it does:** Checks for expressions that could be replaced by the question mark operator.\n@@ -48,7 +48,7 @@ impl QuestionMark {\n     /// If it matches, it will suggest to use the question mark operator instead\n     fn check_is_none_and_early_return_none(cx: &LateContext<'_, '_>, expr: &Expr) {\n         if_chain! {\n-            if let ExprKind::If(if_expr, body, else_) = &expr.node;\n+            if let Some((if_expr, body, else_)) = higher::if_block(&expr);\n             if let ExprKind::MethodCall(segment, _, args) = &if_expr.node;\n             if segment.ident.name == \"is_none\";\n             if Self::expression_returns_none(cx, body);"}]}