{"sha": "e3036df0032bb6726408a9f6705acaf38e55d59f", "node_id": "C_kwDOAAsO6NoAKGUzMDM2ZGYwMDMyYmI2NzI2NDA4YTlmNjcwNWFjYWYzOGU1NWQ1OWY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-18T09:30:47Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-18T09:30:47Z"}, "message": "couple of clippy::perf fixes", "tree": {"sha": "e8038b599a8a02930643f8d84275c23f16d4982e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e8038b599a8a02930643f8d84275c23f16d4982e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3036df0032bb6726408a9f6705acaf38e55d59f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3036df0032bb6726408a9f6705acaf38e55d59f", "html_url": "https://github.com/rust-lang/rust/commit/e3036df0032bb6726408a9f6705acaf38e55d59f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3036df0032bb6726408a9f6705acaf38e55d59f/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83356b78c4ff3e7d84e977aa6143793545967301", "url": "https://api.github.com/repos/rust-lang/rust/commits/83356b78c4ff3e7d84e977aa6143793545967301", "html_url": "https://github.com/rust-lang/rust/commit/83356b78c4ff3e7d84e977aa6143793545967301"}], "stats": {"total": 30, "additions": 14, "deletions": 16}, "files": [{"sha": "04fe6c4007e948fd106f14fb95947ae1003e3090", "filename": "compiler/rustc_expand/src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_expand%2Fsrc%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fbase.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -1436,7 +1436,7 @@ fn pretty_printing_compatibility_hack(item: &Item, sess: &ParseSess) -> bool {\n                             let crate_matches = if c.starts_with(\"allsorts-rental\") {\n                                 true\n                             } else {\n-                                let mut version = c.trim_start_matches(\"rental-\").split(\".\");\n+                                let mut version = c.trim_start_matches(\"rental-\").split('.');\n                                 version.next() == Some(\"0\")\n                                     && version.next() == Some(\"5\")\n                                     && version"}, {"sha": "bd6fe3c0dd862ad2a42e90fe18d454c775b692cb", "filename": "compiler/rustc_lint/src/unused.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_lint%2Fsrc%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Funused.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -584,15 +584,15 @@ trait UnusedDelimLint {\n                 let sm = cx.sess().source_map();\n                 let lo_replace =\n                     if keep_space.0 &&\n-                        let Ok(snip) = sm.span_to_prev_source(lo) && !snip.ends_with(\" \") {\n+                        let Ok(snip) = sm.span_to_prev_source(lo) && !snip.ends_with(' ') {\n                         \" \".to_string()\n                         } else {\n                             \"\".to_string()\n                         };\n \n                 let hi_replace =\n                     if keep_space.1 &&\n-                        let Ok(snip) = sm.span_to_next_source(hi) && !snip.starts_with(\" \") {\n+                        let Ok(snip) = sm.span_to_next_source(hi) && !snip.starts_with(' ') {\n                         \" \".to_string()\n                         } else {\n                             \"\".to_string()"}, {"sha": "dff088b9bdfa66140867a8cc88f7e400a6c29961", "filename": "compiler/rustc_macros/src/diagnostics/utils.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_macros%2Fsrc%2Fdiagnostics%2Futils.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -830,5 +830,5 @@ pub(super) fn should_generate_set_arg(field: &Field) -> bool {\n }\n \n pub(super) fn is_doc_comment(attr: &Attribute) -> bool {\n-    attr.path.segments.last().unwrap().ident.to_string() == \"doc\"\n+    attr.path.segments.last().unwrap().ident == \"doc\"\n }"}, {"sha": "93d6850560d7cbeb996261db2b5e19ffb7c427b7", "filename": "compiler/rustc_middle/src/ty/print/pretty.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fpretty.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -2194,11 +2194,9 @@ impl<'tcx> FmtPrinter<'_, 'tcx> {\n \n         define_scoped_cx!(self);\n \n-        let possible_names =\n-            ('a'..='z').rev().map(|s| Symbol::intern(&format!(\"'{s}\"))).collect::<Vec<_>>();\n+        let possible_names = ('a'..='z').rev().map(|s| Symbol::intern(&format!(\"'{s}\")));\n \n         let mut available_names = possible_names\n-            .into_iter()\n             .filter(|name| !self.used_region_names.contains(&name))\n             .collect::<Vec<_>>();\n         debug!(?available_names);"}, {"sha": "cc69a1bb02db19cac318ec2c149bd18d7dcfc9bf", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -899,7 +899,7 @@ fn debug_with_context_rec<V: Debug + Eq>(\n         let info_elem = map.places[child].proj_elem.unwrap();\n         let child_place_str = match info_elem {\n             TrackElem::Field(field) => {\n-                if place_str.starts_with(\"*\") {\n+                if place_str.starts_with('*') {\n                     format!(\"({}).{}\", place_str, field.index())\n                 } else {\n                     format!(\"{}.{}\", place_str, field.index())"}, {"sha": "62b6bdcf051531c4f9d456c411fbc5c48b18ecc8", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -1657,14 +1657,14 @@ impl<'a> Parser<'a> {\n                 let left = begin_par_sp;\n                 let right = self.prev_token.span;\n                 let left_snippet = if let Ok(snip) = sm.span_to_prev_source(left) &&\n-                        !snip.ends_with(\" \") {\n+                        !snip.ends_with(' ') {\n                                 \" \".to_string()\n                             } else {\n                                 \"\".to_string()\n                             };\n \n                 let right_snippet = if let Ok(snip) = sm.span_to_next_source(right) &&\n-                        !snip.starts_with(\" \") {\n+                        !snip.starts_with(' ') {\n                                 \" \".to_string()\n                             } else {\n                                 \"\".to_string()"}, {"sha": "acb9bd8e78a4a57077e348f4e369eabd910f9730", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -353,7 +353,7 @@ impl CheckAttrVisitor<'_> {\n                 attr.span,\n                 OnlyHasEffectOn {\n                     attr_name: attr.name_or_empty(),\n-                    target_name: allowed_target.name().replace(\" \", \"_\"),\n+                    target_name: allowed_target.name().replace(' ', \"_\"),\n                 },\n             );\n         }"}, {"sha": "5d0224c35f3645a8716d2820e8d8a4f0f49914e9", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -772,7 +772,7 @@ impl<'tcx> DeadVisitor<'tcx> {\n         self.tcx.emit_spanned_lint(\n             lint,\n             tcx.hir().local_def_id_to_hir_id(first_id),\n-            MultiSpan::from_spans(spans.clone()),\n+            MultiSpan::from_spans(spans),\n             diag,\n         );\n     }"}, {"sha": "e0cdb86d9d1dc152e47f97f85e5ea4456ed0f2ea", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -418,7 +418,7 @@ impl Options {\n             ) {\n                 Ok(p) => p,\n                 Err(e) => {\n-                    diag.struct_err(&e.to_string()).emit();\n+                    diag.struct_err(e).emit();\n                     return Err(1);\n                 }\n             };\n@@ -561,7 +561,7 @@ impl Options {\n             ) {\n                 Ok(p) => p,\n                 Err(e) => {\n-                    diag.struct_err(&e.to_string()).emit();\n+                    diag.struct_err(e).emit();\n                     return Err(1);\n                 }\n             };"}, {"sha": "1f87f95563ad550d789ec580f3d4eff64fcb71ce", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -58,7 +58,7 @@ pub(crate) fn suffix_path(filename: &str, suffix: &str) -> PathBuf {\n }\n \n pub(crate) fn static_filename(filename: &str, contents: &[u8]) -> PathBuf {\n-    let filename = filename.rsplit(\"/\").next().unwrap();\n+    let filename = filename.rsplit('/').next().unwrap();\n     suffix_path(filename, &static_suffix(contents))\n }\n "}, {"sha": "cfba7d583b138633d8ad151badc188f60a1784b0", "filename": "src/tools/miropt-test-tools/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3036df0032bb6726408a9f6705acaf38e55d59f/src%2Ftools%2Fmiropt-test-tools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3036df0032bb6726408a9f6705acaf38e55d59f/src%2Ftools%2Fmiropt-test-tools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiropt-test-tools%2Fsrc%2Flib.rs?ref=e3036df0032bb6726408a9f6705acaf38e55d59f", "patch": "@@ -11,7 +11,7 @@ pub fn files_for_miropt_test(testfile: &std::path::Path, bit_width: u32) -> Vec<\n     let test_file_contents = fs::read_to_string(&testfile).unwrap();\n \n     let test_dir = testfile.parent().unwrap();\n-    let test_crate = testfile.file_stem().unwrap().to_str().unwrap().replace(\"-\", \"_\");\n+    let test_crate = testfile.file_stem().unwrap().to_str().unwrap().replace('-', \"_\");\n \n     let bit_width = if test_file_contents.lines().any(|l| l == \"// EMIT_MIR_FOR_EACH_BIT_WIDTH\") {\n         format!(\".{}bit\", bit_width)"}]}