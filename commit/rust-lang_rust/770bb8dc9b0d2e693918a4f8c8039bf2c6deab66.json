{"sha": "770bb8dc9b0d2e693918a4f8c8039bf2c6deab66", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MGJiOGRjOWIwZDJlNjkzOTE4YTRmOGM4MDM5YmYyYzZkZWFiNjY=", "commit": {"author": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-10-23T11:11:40Z"}, "committer": {"name": "Wilco Kusee", "email": "wilcokusee@gmail.com", "date": "2019-10-23T11:11:40Z"}, "message": "Do not truncate the range", "tree": {"sha": "c1a1dcf2b6902f689190ae1039c1b4a457cefa91", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c1a1dcf2b6902f689190ae1039c1b4a457cefa91"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/770bb8dc9b0d2e693918a4f8c8039bf2c6deab66", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQEcBAABAgAGBQJdsDVsAAoJENWyu1zcMzS8iOIH/jYEcTHnNV65+RwAJNiAdBLx\nAlM1f/gbAP2W0Z7tTBO8U9VUWy/Dok5tbaK/K/qSmC50ASNEbpJLERVoU0z3rZXA\nyHpvnw2OEtEM3jRfI97s6tqEyNK9+UBPCWqYWInVM1/ZyULMnUROzg2/itrdQk/4\ndeXKzf/YCqhDhLljBOhQ7QAug0Ya52tt6eredO8EtgBxo3Ed0I8xJaM8uNcu+VhU\nVAj0sXWwLBzuURnaShZP+wmAQ356O0xidZb3U18Tn8u9srNbebG/C9mCoXZmI0Gi\nRcuI7Cu4Yl3KnVse7kvDexnMleR9yBc3TYFRSWEPKlTijy3DAu58S/UfXISLm0w=\n=0t0V\n-----END PGP SIGNATURE-----", "payload": "tree c1a1dcf2b6902f689190ae1039c1b4a457cefa91\nparent 3b61acb4ae15a1ec6071db40e09437319795db67\nauthor Wilco Kusee <wilcokusee@gmail.com> 1571829100 +0200\ncommitter Wilco Kusee <wilcokusee@gmail.com> 1571829100 +0200\n\nDo not truncate the range\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/770bb8dc9b0d2e693918a4f8c8039bf2c6deab66", "html_url": "https://github.com/rust-lang/rust/commit/770bb8dc9b0d2e693918a4f8c8039bf2c6deab66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/770bb8dc9b0d2e693918a4f8c8039bf2c6deab66/comments", "author": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "detrumi", "id": 5758008, "node_id": "MDQ6VXNlcjU3NTgwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/5758008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/detrumi", "html_url": "https://github.com/detrumi", "followers_url": "https://api.github.com/users/detrumi/followers", "following_url": "https://api.github.com/users/detrumi/following{/other_user}", "gists_url": "https://api.github.com/users/detrumi/gists{/gist_id}", "starred_url": "https://api.github.com/users/detrumi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/detrumi/subscriptions", "organizations_url": "https://api.github.com/users/detrumi/orgs", "repos_url": "https://api.github.com/users/detrumi/repos", "events_url": "https://api.github.com/users/detrumi/events{/privacy}", "received_events_url": "https://api.github.com/users/detrumi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b61acb4ae15a1ec6071db40e09437319795db67", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b61acb4ae15a1ec6071db40e09437319795db67", "html_url": "https://github.com/rust-lang/rust/commit/3b61acb4ae15a1ec6071db40e09437319795db67"}], "stats": {"total": 40, "additions": 10, "deletions": 30}, "files": [{"sha": "ffaaaebcb0583b595a13d674c44ffe42c8c01d47", "filename": "editors/code/src/commands/inlay_hints.ts", "status": "modified", "additions": 10, "deletions": 30, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/770bb8dc9b0d2e693918a4f8c8039bf2c6deab66/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "raw_url": "https://github.com/rust-lang/rust/raw/770bb8dc9b0d2e693918a4f8c8039bf2c6deab66/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Finlay_hints.ts?ref=770bb8dc9b0d2e693918a4f8c8039bf2c6deab66", "patch": "@@ -83,51 +83,31 @@ export class HintsUpdater {\n     ): Promise<void> {\n         const newHints = await this.queryHints(editor.document.uri.toString());\n         if (newHints !== null) {\n-            const newDecorations = newHints.map(hint => {\n-                const [label, range] = this.truncateHint(\n-                    hint.label,\n-                    hint.range\n-                );\n-                return {\n-                    range,\n-                    renderOptions: {\n-                        after: {\n-                            contentText: `: ${label}`\n-                        }\n+            const newDecorations = newHints.map(hint => ({\n+                range: hint.range,\n+                renderOptions: {\n+                    after: {\n+                        contentText: `: ${this.truncateHint(hint.label)}`\n                     }\n-                };\n-            });\n+                }\n+            }));\n             return editor.setDecorations(\n                 typeHintDecorationType,\n                 newDecorations\n             );\n         }\n     }\n \n-    private truncateHint(\n-        label: string,\n-        range: vscode.Range\n-    ): [string, vscode.Range] {\n+    private truncateHint(label: string): string {\n         if (!Server.config.maxInlayHintLength) {\n-            return [label, range];\n+            return label;\n         }\n \n         let newLabel = label.substring(0, Server.config.maxInlayHintLength);\n         if (label.length > Server.config.maxInlayHintLength) {\n             newLabel += '\u2026';\n         }\n-\n-        range = new vscode.Range(\n-            range.start.line,\n-            range.start.character,\n-            range.end.line,\n-            Math.min(\n-                range.start.character + Server.config.maxInlayHintLength,\n-                range.end.character\n-            )\n-        );\n-\n-        return [newLabel, range];\n+        return newLabel;\n     }\n \n     private async queryHints(documentUri: string): Promise<InlayHint[] | null> {"}]}