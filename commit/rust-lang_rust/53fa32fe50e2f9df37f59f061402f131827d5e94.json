{"sha": "53fa32fe50e2f9df37f59f061402f131827d5e94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzZmEzMmZlNTBlMmY5ZGYzN2Y1OWYwNjE0MDJmMTMxODI3ZDVlOTQ=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-02-27T20:25:17Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2019-04-17T17:44:17Z"}, "message": "Place::unroll -> Place::iterate", "tree": {"sha": "9cd33e81f3b0f35d6efc76334fe425342a4dcf05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9cd33e81f3b0f35d6efc76334fe425342a4dcf05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53fa32fe50e2f9df37f59f061402f131827d5e94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53fa32fe50e2f9df37f59f061402f131827d5e94", "html_url": "https://github.com/rust-lang/rust/commit/53fa32fe50e2f9df37f59f061402f131827d5e94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53fa32fe50e2f9df37f59f061402f131827d5e94/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66fe4ff7d504913cbab96fa8e697437bf24b5204", "url": "https://api.github.com/repos/rust-lang/rust/commits/66fe4ff7d504913cbab96fa8e697437bf24b5204", "html_url": "https://github.com/rust-lang/rust/commit/66fe4ff7d504913cbab96fa8e697437bf24b5204"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "60c7c256ec74e13f61c396ce7274a39d900e1926", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53fa32fe50e2f9df37f59f061402f131827d5e94/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fa32fe50e2f9df37f59f061402f131827d5e94/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=53fa32fe50e2f9df37f59f061402f131827d5e94", "patch": "@@ -2059,15 +2059,15 @@ impl<'tcx> Place<'tcx> {\n         }\n     }\n \n-    /// Recursively \"unroll\" a place into a `PlaceComponents` list,\n+    /// Recursively \"iterates\" over place components, generating a `PlaceComponents` list,\n     /// invoking `op` with a `PlaceComponentsIter`.\n-    pub fn unroll<R>(\n+    pub fn iterate<R>(\n         &self,\n         next: Option<&PlaceComponents<'_, 'tcx>>,\n         op: impl FnOnce(PlaceComponentsIter<'_, 'tcx>) -> R,\n     ) -> R {\n         match self {\n-            Place::Projection(interior) => interior.base.unroll(\n+            Place::Projection(interior) => interior.base.iterate(\n                 Some(&PlaceComponents {\n                     component: self,\n                     next,\n@@ -2089,7 +2089,7 @@ impl<'tcx> Place<'tcx> {\n /// A linked list of places running up the stack; begins with the\n /// innermost place and extends to projections (e.g., `a.b` would have\n /// the place `a` with a \"next\" pointer to `a.b`). Created by\n-/// `Place::unroll`.\n+/// `Place::iterate`.\n ///\n /// N.B., this particular impl strategy is not the most obvious. It was\n /// chosen because it makes a measurable difference to NLL"}, {"sha": "45bbbbc92d9abb7eba2aa3b721564b2f8b68c26d", "filename": "src/librustc_mir/borrow_check/places_conflict.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/53fa32fe50e2f9df37f59f061402f131827d5e94/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53fa32fe50e2f9df37f59f061402f131827d5e94/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fplaces_conflict.rs?ref=53fa32fe50e2f9df37f59f061402f131827d5e94", "patch": "@@ -67,8 +67,8 @@ pub(super) fn borrow_conflicts_with_place<'gcx, 'tcx>(\n         }\n     }\n \n-    borrow_place.unroll(None, |borrow_components| {\n-        access_place.unroll(None, |access_components| {\n+    borrow_place.iterate(None, |borrow_components| {\n+        access_place.iterate(None, |access_components| {\n             place_components_conflict(\n                 tcx,\n                 mir,"}]}