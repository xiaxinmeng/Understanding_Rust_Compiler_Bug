{"sha": "c726bcae80f4e0a11687034b740214d6ecb3b8a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3MjZiY2FlODBmNGUwYTExNjg3MDM0Yjc0MDIxNGQ2ZWNiM2I4YTY=", "commit": {"author": {"name": "Alex", "email": "ahansen2@trinity.edu", "date": "2015-10-02T16:13:07Z"}, "committer": {"name": "Alex", "email": "ahansen2@trinity.edu", "date": "2015-10-02T16:13:07Z"}, "message": "infinite while loop fixed, redundancy removed", "tree": {"sha": "f2bc7e21a45f113849fa8e2884db523ec1c6d249", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f2bc7e21a45f113849fa8e2884db523ec1c6d249"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c726bcae80f4e0a11687034b740214d6ecb3b8a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c726bcae80f4e0a11687034b740214d6ecb3b8a6", "html_url": "https://github.com/rust-lang/rust/commit/c726bcae80f4e0a11687034b740214d6ecb3b8a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c726bcae80f4e0a11687034b740214d6ecb3b8a6/comments", "author": null, "committer": null, "parents": [{"sha": "2f7acf00e5d02ae795332c1fa83e41939d6361d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7acf00e5d02ae795332c1fa83e41939d6361d7", "html_url": "https://github.com/rust-lang/rust/commit/2f7acf00e5d02ae795332c1fa83e41939d6361d7"}], "stats": {"total": 10, "additions": 3, "deletions": 7}, "files": [{"sha": "221b56aa4cbbd9097b9fc6457feacfd69727e553", "filename": "src/string.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c726bcae80f4e0a11687034b740214d6ecb3b8a6/src%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c726bcae80f4e0a11687034b740214d6ecb3b8a6/src%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fstring.rs?ref=c726bcae80f4e0a11687034b740214d6ecb3b8a6", "patch": "@@ -66,18 +66,14 @@ pub fn rewrite_string<'a>(s: &str, fmt: &StringFormat<'a>) -> Option<String> {\n                 cur_end = cur_start + max_chars;\n                 // Look for punctuation to break on.\n                 while (!punctuation.contains(graphemes[cur_end - 1])) && cur_end > 1 {\n-                    if cur_end > 1 {\n-                        cur_end -= 1;\n-                    }\n+                    cur_end -= 1;\n                 }\n                 // We can't break at whitespace or punctuation, fall back to splitting\n                 // anywhere that doesn't break an escape sequence.\n                 if cur_end < cur_start + MIN_STRING {\n                     cur_end = cur_start + max_chars;\n-                    while graphemes[cur_end - 1] == \"\\\\\" {\n-                        if cur_end > 1 {\n-                            cur_end -= 1;\n-                        }\n+                    while graphemes[cur_end - 1] == \"\\\\\" && cur_end > 1 {\n+                        cur_end -= 1;\n                     }\n                 }\n                 break;"}]}