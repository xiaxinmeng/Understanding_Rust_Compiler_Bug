{"sha": "bb22a4e386c13a17b518a3822d343f6dd3dc4398", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMjJhNGUzODZjMTNhMTdiNTE4YTM4MjJkMzQzZjZkZDNkYzQzOTg=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-22T07:00:44Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2020-03-22T07:00:44Z"}, "message": "Add support for macro in symbo_index", "tree": {"sha": "260af0f85f02d70f24f153ed7704e045542bb25f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/260af0f85f02d70f24f153ed7704e045542bb25f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb22a4e386c13a17b518a3822d343f6dd3dc4398", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb22a4e386c13a17b518a3822d343f6dd3dc4398", "html_url": "https://github.com/rust-lang/rust/commit/bb22a4e386c13a17b518a3822d343f6dd3dc4398", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb22a4e386c13a17b518a3822d343f6dd3dc4398/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6fe956420fc63609a84dd005b8190b1f19fff280", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fe956420fc63609a84dd005b8190b1f19fff280", "html_url": "https://github.com/rust-lang/rust/commit/6fe956420fc63609a84dd005b8190b1f19fff280"}], "stats": {"total": 32, "additions": 20, "deletions": 12}, "files": [{"sha": "3cf0c66eacc185084b078657d4b4fb1284e7cea3", "filename": "crates/ra_hir_def/src/body/lower.rs", "status": "modified", "additions": 1, "deletions": 11, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/bb22a4e386c13a17b518a3822d343f6dd3dc4398/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb22a4e386c13a17b518a3822d343f6dd3dc4398/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Flower.rs?ref=bb22a4e386c13a17b518a3822d343f6dd3dc4398", "patch": "@@ -453,7 +453,7 @@ impl ExprCollector<'_> {\n                 }\n             }\n             ast::Expr::MacroCall(e) => {\n-                if let Some(name) = is_macro_rules(&e) {\n+                if let Some(name) = e.is_macro_rules().map(|it| it.as_name()) {\n                     let mac = MacroDefId {\n                         krate: Some(self.expander.module.krate),\n                         ast_id: Some(self.expander.ast_id(&e)),\n@@ -697,16 +697,6 @@ impl ExprCollector<'_> {\n     }\n }\n \n-fn is_macro_rules(m: &ast::MacroCall) -> Option<Name> {\n-    let name = m.path()?.segment()?.name_ref()?.as_name();\n-\n-    if name == name![macro_rules] {\n-        Some(m.name()?.as_name())\n-    } else {\n-        None\n-    }\n-}\n-\n impl From<ast::BinOp> for BinaryOp {\n     fn from(ast_op: ast::BinOp) -> Self {\n         match ast_op {"}, {"sha": "0f46f93c172516ba37a6b0974f8ee3d3c934ef6f", "filename": "crates/ra_ide_db/src/symbol_index.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bb22a4e386c13a17b518a3822d343f6dd3dc4398/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb22a4e386c13a17b518a3822d343f6dd3dc4398/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsymbol_index.rs?ref=bb22a4e386c13a17b518a3822d343f6dd3dc4398", "patch": "@@ -362,6 +362,13 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n             ast::TypeAliasDef(it) => { decl(it) },\n             ast::ConstDef(it) => { decl(it) },\n             ast::StaticDef(it) => { decl(it) },\n+            ast::MacroCall(it) => {\n+                if it.is_macro_rules().is_some() {\n+                    decl(it)\n+                } else {\n+                    None\n+                }\n+            },\n             _ => None,\n         }\n     }"}, {"sha": "392731dac2202b8dbeedf30d45fa873c547733fa", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/bb22a4e386c13a17b518a3822d343f6dd3dc4398/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb22a4e386c13a17b518a3822d343f6dd3dc4398/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=bb22a4e386c13a17b518a3822d343f6dd3dc4398", "patch": "@@ -4,7 +4,7 @@\n use itertools::Itertools;\n \n use crate::{\n-    ast::{self, child_opt, children, AstNode, AttrInput, SyntaxNode},\n+    ast::{self, child_opt, children, AstNode, AttrInput, NameOwner, SyntaxNode},\n     SmolStr, SyntaxElement,\n     SyntaxKind::*,\n     SyntaxToken, T,\n@@ -514,3 +514,14 @@ impl ast::Visibility {\n         self.syntax().children_with_tokens().any(|it| it.kind() == T![super])\n     }\n }\n+\n+impl ast::MacroCall {\n+    pub fn is_macro_rules(&self) -> Option<ast::Name> {\n+        let name_ref = self.path()?.segment()?.name_ref()?;\n+        if name_ref.text() == \"macro_rules\" {\n+            self.name()\n+        } else {\n+            None\n+        }\n+    }\n+}"}]}