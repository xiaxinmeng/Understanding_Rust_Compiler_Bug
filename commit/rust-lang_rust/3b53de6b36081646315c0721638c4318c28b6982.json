{"sha": "3b53de6b36081646315c0721638c4318c28b6982", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNTNkZTZiMzYwODE2NDYzMTVjMDcyMTYzOGM0MzE4YzI4YjY5ODI=", "commit": {"author": {"name": "unknown", "email": "abramlujan@gmail.com", "date": "2020-11-22T00:08:32Z"}, "committer": {"name": "unknown", "email": "abramlujan@gmail.com", "date": "2020-11-25T22:38:55Z"}, "message": "Fix rust-lang/rust#79255 - Incorrect try suggestion for unnecessary float literal cast ending in dot", "tree": {"sha": "48f22387cc4eca5978a3cdb1d57a201c21b21ea3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48f22387cc4eca5978a3cdb1d57a201c21b21ea3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b53de6b36081646315c0721638c4318c28b6982", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b53de6b36081646315c0721638c4318c28b6982", "html_url": "https://github.com/rust-lang/rust/commit/3b53de6b36081646315c0721638c4318c28b6982", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b53de6b36081646315c0721638c4318c28b6982/comments", "author": {"login": "nico-abram", "id": 24706838, "node_id": "MDQ6VXNlcjI0NzA2ODM4", "avatar_url": "https://avatars.githubusercontent.com/u/24706838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nico-abram", "html_url": "https://github.com/nico-abram", "followers_url": "https://api.github.com/users/nico-abram/followers", "following_url": "https://api.github.com/users/nico-abram/following{/other_user}", "gists_url": "https://api.github.com/users/nico-abram/gists{/gist_id}", "starred_url": "https://api.github.com/users/nico-abram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nico-abram/subscriptions", "organizations_url": "https://api.github.com/users/nico-abram/orgs", "repos_url": "https://api.github.com/users/nico-abram/repos", "events_url": "https://api.github.com/users/nico-abram/events{/privacy}", "received_events_url": "https://api.github.com/users/nico-abram/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nico-abram", "id": 24706838, "node_id": "MDQ6VXNlcjI0NzA2ODM4", "avatar_url": "https://avatars.githubusercontent.com/u/24706838?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nico-abram", "html_url": "https://github.com/nico-abram", "followers_url": "https://api.github.com/users/nico-abram/followers", "following_url": "https://api.github.com/users/nico-abram/following{/other_user}", "gists_url": "https://api.github.com/users/nico-abram/gists{/gist_id}", "starred_url": "https://api.github.com/users/nico-abram/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nico-abram/subscriptions", "organizations_url": "https://api.github.com/users/nico-abram/orgs", "repos_url": "https://api.github.com/users/nico-abram/repos", "events_url": "https://api.github.com/users/nico-abram/events{/privacy}", "received_events_url": "https://api.github.com/users/nico-abram/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0402c6ace7aff13bef4791f578ffb623da69fef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/0402c6ace7aff13bef4791f578ffb623da69fef2", "html_url": "https://github.com/rust-lang/rust/commit/0402c6ace7aff13bef4791f578ffb623da69fef2"}], "stats": {"total": 38, "additions": 27, "deletions": 11}, "files": [{"sha": "f3cad66cbf3b243810c30da5b422ddf8a66d1253", "filename": "clippy_lints/src/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b53de6b36081646315c0721638c4318c28b6982/clippy_lints%2Fsrc%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b53de6b36081646315c0721638c4318c28b6982/clippy_lints%2Fsrc%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Ftypes.rs?ref=3b53de6b36081646315c0721638c4318c28b6982", "patch": "@@ -1711,7 +1711,7 @@ fn show_unnecessary_cast(cx: &LateContext<'_>, expr: &Expr<'_>, literal_str: &st\n         expr.span,\n         &format!(\"casting {} literal to `{}` is unnecessary\", literal_kind_name, cast_to),\n         \"try\",\n-        format!(\"{}_{}\", literal_str, cast_to),\n+        format!(\"{}_{}\", literal_str.trim_end_matches('.'), cast_to),\n         Applicability::MachineApplicable,\n     );\n }"}, {"sha": "7fbce58a82f8e340e7d1ddc76eeb65732de23e7d", "filename": "tests/ui/unnecessary_cast_fixable.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b53de6b36081646315c0721638c4318c28b6982/tests%2Fui%2Funnecessary_cast_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/3b53de6b36081646315c0721638c4318c28b6982/tests%2Fui%2Funnecessary_cast_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.fixed?ref=3b53de6b36081646315c0721638c4318c28b6982", "patch": "@@ -11,6 +11,8 @@ fn main() {\n     let _ = -100_f32;\n     let _ = -100_f64;\n     let _ = -100_f64;\n+    100_f32;\n+    100_f64;\n     // Should not trigger\n     #[rustfmt::skip]\n     let v = vec!(1);"}, {"sha": "a71363ea4d265ac86a4aaf3081fdc5aabdd62536", "filename": "tests/ui/unnecessary_cast_fixable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3b53de6b36081646315c0721638c4318c28b6982/tests%2Fui%2Funnecessary_cast_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b53de6b36081646315c0721638c4318c28b6982/tests%2Fui%2Funnecessary_cast_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.rs?ref=3b53de6b36081646315c0721638c4318c28b6982", "patch": "@@ -11,6 +11,8 @@ fn main() {\n     let _ = -100 as f32;\n     let _ = -100 as f64;\n     let _ = -100_i32 as f64;\n+    100. as f32;\n+    100. as f64;\n     // Should not trigger\n     #[rustfmt::skip]\n     let v = vec!(1);"}, {"sha": "3695a8f819c4a9da2ab2c364d29cf4f34a2a3c2b", "filename": "tests/ui/unnecessary_cast_fixable.stderr", "status": "modified", "additions": 22, "deletions": 10, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/3b53de6b36081646315c0721638c4318c28b6982/tests%2Fui%2Funnecessary_cast_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3b53de6b36081646315c0721638c4318c28b6982/tests%2Fui%2Funnecessary_cast_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_cast_fixable.stderr?ref=3b53de6b36081646315c0721638c4318c28b6982", "patch": "@@ -36,59 +36,71 @@ error: casting integer literal to `f64` is unnecessary\n LL |     let _ = -100_i32 as f64;\n    |             ^^^^^^^^^^^^^^^ help: try: `-100_f64`\n \n+error: casting float literal to `f32` is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:14:5\n+   |\n+LL |     100. as f32;\n+   |     ^^^^^^^^^^^ help: try: `100_f32`\n+\n+error: casting float literal to `f64` is unnecessary\n+  --> $DIR/unnecessary_cast_fixable.rs:15:5\n+   |\n+LL |     100. as f64;\n+   |     ^^^^^^^^^^^ help: try: `100_f64`\n+\n error: casting integer literal to `u32` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:25:5\n+  --> $DIR/unnecessary_cast_fixable.rs:27:5\n    |\n LL |     1 as u32;\n    |     ^^^^^^^^ help: try: `1_u32`\n \n error: casting integer literal to `i32` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:26:5\n+  --> $DIR/unnecessary_cast_fixable.rs:28:5\n    |\n LL |     0x10 as i32;\n    |     ^^^^^^^^^^^ help: try: `0x10_i32`\n \n error: casting integer literal to `usize` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:27:5\n+  --> $DIR/unnecessary_cast_fixable.rs:29:5\n    |\n LL |     0b10 as usize;\n    |     ^^^^^^^^^^^^^ help: try: `0b10_usize`\n \n error: casting integer literal to `u16` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:28:5\n+  --> $DIR/unnecessary_cast_fixable.rs:30:5\n    |\n LL |     0o73 as u16;\n    |     ^^^^^^^^^^^ help: try: `0o73_u16`\n \n error: casting integer literal to `u32` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:29:5\n+  --> $DIR/unnecessary_cast_fixable.rs:31:5\n    |\n LL |     1_000_000_000 as u32;\n    |     ^^^^^^^^^^^^^^^^^^^^ help: try: `1_000_000_000_u32`\n \n error: casting float literal to `f64` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:31:5\n+  --> $DIR/unnecessary_cast_fixable.rs:33:5\n    |\n LL |     1.0 as f64;\n    |     ^^^^^^^^^^ help: try: `1.0_f64`\n \n error: casting float literal to `f32` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:32:5\n+  --> $DIR/unnecessary_cast_fixable.rs:34:5\n    |\n LL |     0.5 as f32;\n    |     ^^^^^^^^^^ help: try: `0.5_f32`\n \n error: casting integer literal to `i32` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:36:13\n+  --> $DIR/unnecessary_cast_fixable.rs:38:13\n    |\n LL |     let _ = -1 as i32;\n    |             ^^^^^^^^^ help: try: `-1_i32`\n \n error: casting float literal to `f32` is unnecessary\n-  --> $DIR/unnecessary_cast_fixable.rs:37:13\n+  --> $DIR/unnecessary_cast_fixable.rs:39:13\n    |\n LL |     let _ = -1.0 as f32;\n    |             ^^^^^^^^^^^ help: try: `-1.0_f32`\n \n-error: aborting due to 15 previous errors\n+error: aborting due to 17 previous errors\n "}]}