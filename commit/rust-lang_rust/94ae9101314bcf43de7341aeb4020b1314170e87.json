{"sha": "94ae9101314bcf43de7341aeb4020b1314170e87", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YWU5MTAxMzE0YmNmNDNkZTczNDFhZWI0MDIwYjEzMTQxNzBlODc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-23T10:55:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-08-23T10:55:48Z"}, "message": "Auto merge of #1875 - niluxv:volatile_set_memory_intrinsic, r=RalfJung\n\nAdd support for the `volatile_set_memory` intrinsic\n\nAdd support for the unstable `volatile_set_memory` intrinsic\n\n(Runtime behaviour and soundness requirements for `volatile_set_memory` are identical to those of `write_bytes`, so supporting this intrinsic is trivial.)", "tree": {"sha": "b78c752c68a79bf67163272c8b2f10b59cc3e402", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b78c752c68a79bf67163272c8b2f10b59cc3e402"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94ae9101314bcf43de7341aeb4020b1314170e87", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94ae9101314bcf43de7341aeb4020b1314170e87", "html_url": "https://github.com/rust-lang/rust/commit/94ae9101314bcf43de7341aeb4020b1314170e87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94ae9101314bcf43de7341aeb4020b1314170e87/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4", "html_url": "https://github.com/rust-lang/rust/commit/7ec2bee723ee3a3f6211708cd4d9b6f5ee3101e4"}, {"sha": "083e5e604c304d8743a942ef33def704fa4b6012", "url": "https://api.github.com/repos/rust-lang/rust/commits/083e5e604c304d8743a942ef33def704fa4b6012", "html_url": "https://github.com/rust-lang/rust/commit/083e5e604c304d8743a942ef33def704fa4b6012"}], "stats": {"total": 44, "additions": 42, "deletions": 2}, "files": [{"sha": "317bba859295884c8cf9d05d969b6a52213d4676", "filename": "src/shims/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/94ae9101314bcf43de7341aeb4020b1314170e87/src%2Fshims%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ae9101314bcf43de7341aeb4020b1314170e87/src%2Fshims%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fintrinsics.rs?ref=94ae9101314bcf43de7341aeb4020b1314170e87", "patch": "@@ -66,15 +66,15 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 this.copy_op(dest, &place.into())?;\n             }\n \n-            \"write_bytes\" => {\n+            \"write_bytes\" | \"volatile_set_memory\" => {\n                 let &[ref ptr, ref val_byte, ref count] = check_arg_count(args)?;\n                 let ty = instance.substs.type_at(0);\n                 let ty_layout = this.layout_of(ty)?;\n                 let val_byte = this.read_scalar(val_byte)?.to_u8()?;\n                 let ptr = this.read_pointer(ptr)?;\n                 let count = this.read_scalar(count)?.to_machine_usize(this)?;\n                 let byte_count = ty_layout.size.checked_mul(count, this).ok_or_else(|| {\n-                    err_ub_format!(\"overflow computing total size of `write_bytes`\")\n+                    err_ub_format!(\"overflow computing total size of `{}`\", intrinsic_name)\n                 })?;\n                 this.memory\n                     .write_bytes(ptr, iter::repeat(val_byte).take(byte_count.bytes() as usize))?;"}, {"sha": "b2050c5393e221f2e3874c0828c12fcd7f6650f7", "filename": "tests/run-pass/write-bytes.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/94ae9101314bcf43de7341aeb4020b1314170e87/tests%2Frun-pass%2Fwrite-bytes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/94ae9101314bcf43de7341aeb4020b1314170e87/tests%2Frun-pass%2Fwrite-bytes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fwrite-bytes.rs?ref=94ae9101314bcf43de7341aeb4020b1314170e87", "patch": "@@ -1,3 +1,5 @@\n+#![feature(core_intrinsics)] // for `volatile_set_memory`\n+\n #[repr(C)]\n #[derive(Copy, Clone)]\n struct Foo {\n@@ -42,4 +44,42 @@ fn main() {\n         assert_eq!(w[idx].b, 0xcdcdcdcdcdcdcdcd);\n         assert_eq!(w[idx].c, 0xcdcdcdcdcdcdcdcd);\n     }\n+\n+    // -----\n+    // `std::intrinsics::volatile_set_memory` should behave identically\n+\n+    let mut v: [u64; LENGTH] = [0; LENGTH];\n+\n+    for idx in 0..LENGTH {\n+        assert_eq!(v[idx], 0);\n+    }\n+\n+    unsafe {\n+        let p = v.as_mut_ptr();\n+        ::std::intrinsics::volatile_set_memory(p, 0xab, LENGTH);\n+    }\n+\n+    for idx in 0..LENGTH {\n+        assert_eq!(v[idx], 0xabababababababab);\n+    }\n+\n+    // -----\n+\n+    let mut w: [Foo; LENGTH] = [Foo { a: 0, b: 0, c: 0 }; LENGTH];\n+    for idx in 0..LENGTH {\n+        assert_eq!(w[idx].a, 0);\n+        assert_eq!(w[idx].b, 0);\n+        assert_eq!(w[idx].c, 0);\n+    }\n+\n+    unsafe {\n+        let p = w.as_mut_ptr();\n+        ::std::intrinsics::volatile_set_memory(p, 0xcd, LENGTH);\n+    }\n+\n+    for idx in 0..LENGTH {\n+        assert_eq!(w[idx].a, 0xcdcdcdcdcdcdcdcd);\n+        assert_eq!(w[idx].b, 0xcdcdcdcdcdcdcdcd);\n+        assert_eq!(w[idx].c, 0xcdcdcdcdcdcdcdcd);\n+    }\n }"}]}