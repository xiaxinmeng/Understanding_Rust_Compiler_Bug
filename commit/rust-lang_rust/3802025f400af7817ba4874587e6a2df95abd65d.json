{"sha": "3802025f400af7817ba4874587e6a2df95abd65d", "node_id": "C_kwDOAAsO6NoAKDM4MDIwMjVmNDAwYWY3ODE3YmE0ODc0NTg3ZTZhMmRmOTVhYmQ2NWQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-03T01:52:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-03T01:52:17Z"}, "message": "Auto merge of #90516 - matthiaskrgr:rollup-3dmfjkj, r=matthiaskrgr\n\nRollup of 6 pull requests\n\nSuccessful merges:\n\n - #90084 (Make printed message match the code comment)\n - #90354 (Document clippy on nightly-rustc)\n - #90417 (stabilize `relaxed_struct_unsize`)\n - #90472 (Clarify what to do with accepted feature gates)\n - #90500 (Update Clippy dependencies)\n - #90502 (Split doc_cfg and doc_auto_cfg features)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "ee3772f11964e4931b31adcfeec739ec3d6d04de", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee3772f11964e4931b31adcfeec739ec3d6d04de"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3802025f400af7817ba4874587e6a2df95abd65d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3802025f400af7817ba4874587e6a2df95abd65d", "html_url": "https://github.com/rust-lang/rust/commit/3802025f400af7817ba4874587e6a2df95abd65d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3802025f400af7817ba4874587e6a2df95abd65d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f40fa4353a9075288f74ecc3553010b34c65baa", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f40fa4353a9075288f74ecc3553010b34c65baa", "html_url": "https://github.com/rust-lang/rust/commit/6f40fa4353a9075288f74ecc3553010b34c65baa"}, {"sha": "e38844a9d837ebe6f8f6e79445e9dead579c387e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e38844a9d837ebe6f8f6e79445e9dead579c387e", "html_url": "https://github.com/rust-lang/rust/commit/e38844a9d837ebe6f8f6e79445e9dead579c387e"}], "stats": {"total": 142, "additions": 59, "deletions": 83}, "files": [{"sha": "06444b76e56d79cb5fae6c36bf5c7e9138c81af0", "filename": "Cargo.lock", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -576,7 +576,7 @@ dependencies = [\n name = \"clippy\"\n version = \"0.1.58\"\n dependencies = [\n- \"cargo_metadata 0.12.0\",\n+ \"cargo_metadata 0.14.0\",\n  \"clippy_lints\",\n  \"clippy_utils\",\n  \"compiletest_rs\",\n@@ -588,7 +588,7 @@ dependencies = [\n  \"regex\",\n  \"rustc-workspace-hack\",\n  \"rustc_tools_util 0.2.0\",\n- \"semver 0.11.0\",\n+ \"semver 1.0.3\",\n  \"serde\",\n  \"syn\",\n  \"tempfile\",\n@@ -613,15 +613,15 @@ dependencies = [\n name = \"clippy_lints\"\n version = \"0.1.58\"\n dependencies = [\n- \"cargo_metadata 0.12.0\",\n+ \"cargo_metadata 0.14.0\",\n  \"clippy_utils\",\n  \"if_chain\",\n  \"itertools 0.10.1\",\n  \"pulldown-cmark 0.8.0\",\n  \"quine-mc_cluskey\",\n  \"regex-syntax\",\n  \"rustc-semver\",\n- \"semver 0.11.0\",\n+ \"semver 1.0.3\",\n  \"serde\",\n  \"serde_json\",\n  \"toml\","}, {"sha": "941d957103c0cef98dd5e474ee99fd13caa5ba72", "filename": "compiler/rustc_feature/src/accepted.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Faccepted.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -297,6 +297,8 @@ declare_features! (\n     (accepted, macro_attributes_in_derive_output, \"1.57.0\", Some(81119), None),\n     /// Allows panicking during const eval (producing compile-time errors).\n     (accepted, const_panic, \"1.57.0\", Some(51999), None),\n+    /// Lessens the requirements for structs to implement `Unsize`.\n+    (accepted, relaxed_struct_unsize, \"1.58.0\", Some(81793), None),\n \n     // -------------------------------------------------------------------------\n     // feature-group-end: accepted features"}, {"sha": "1c6f1344e8a1ecca19866b582b413ef804533d6e", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -101,9 +101,13 @@ impl Feature {\n     }\n }\n \n+// See https://rustc-dev-guide.rust-lang.org/feature-gates.html#feature-gates for more\n+// documentation about handling feature gates.\n+//\n // If you change this, please modify `src/doc/unstable-book` as well.\n //\n-// Don't ever remove anything from this list; move them to `removed.rs`.\n+// Don't ever remove anything from this list; move them to `accepted.rs` if\n+// accepted or `removed.rs` if removed.\n //\n // The version numbers here correspond to the version in which the current status\n // was set. This is most important for knowing when a particular feature became\n@@ -589,9 +593,6 @@ declare_features! (\n     /// Allows `extern \"C-cmse-nonsecure-call\" fn()`.\n     (active, abi_c_cmse_nonsecure_call, \"1.51.0\", Some(81391), None),\n \n-    /// Lessens the requirements for structs to implement `Unsize`.\n-    (active, relaxed_struct_unsize, \"1.51.0\", Some(81793), None),\n-\n     /// Allows associated types in inherent impls.\n     (incomplete, inherent_associated_types, \"1.52.0\", Some(8995), None),\n \n@@ -688,6 +689,9 @@ declare_features! (\n     /// not changed from prior instances of the same struct (RFC #2528)\n     (incomplete, type_changing_struct_update, \"1.58.0\", Some(86555), None),\n \n+    /// Tells rustdoc to automatically generate `#[doc(cfg(...))]`.\n+    (active, doc_auto_cfg, \"1.58.0\", Some(43781), None),\n+\n     // -------------------------------------------------------------------------\n     // feature-group-end: actual feature gates\n     // -------------------------------------------------------------------------"}, {"sha": "5f71e955e2ad7aad58673357dfad0028f1150137", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -549,6 +549,7 @@ symbols! {\n         div_assign,\n         doc,\n         doc_alias,\n+        doc_auto_cfg,\n         doc_cfg,\n         doc_cfg_hide,\n         doc_keyword,"}, {"sha": "079828a60fce22c9bb8b79896ec5fb7769554cc2", "filename": "compiler/rustc_trait_selection/src/traits/select/confirmation.rs", "status": "modified", "additions": 12, "deletions": 40, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fconfirmation.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -948,52 +948,24 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 let tail_field_ty = tcx.type_of(tail_field.did);\n \n                 let mut unsizing_params = GrowableBitSet::new_empty();\n-                if tcx.features().relaxed_struct_unsize {\n-                    for arg in tail_field_ty.walk(tcx) {\n-                        if let Some(i) = maybe_unsizing_param_idx(arg) {\n-                            unsizing_params.insert(i);\n-                        }\n-                    }\n-\n-                    // Ensure none of the other fields mention the parameters used\n-                    // in unsizing.\n-                    for field in prefix_fields {\n-                        for arg in tcx.type_of(field.did).walk(tcx) {\n-                            if let Some(i) = maybe_unsizing_param_idx(arg) {\n-                                unsizing_params.remove(i);\n-                            }\n-                        }\n+                for arg in tail_field_ty.walk(tcx) {\n+                    if let Some(i) = maybe_unsizing_param_idx(arg) {\n+                        unsizing_params.insert(i);\n                     }\n+                }\n \n-                    if unsizing_params.is_empty() {\n-                        return Err(Unimplemented);\n-                    }\n-                } else {\n-                    let mut found = false;\n-                    for arg in tail_field_ty.walk(tcx) {\n+                // Ensure none of the other fields mention the parameters used\n+                // in unsizing.\n+                for field in prefix_fields {\n+                    for arg in tcx.type_of(field.did).walk(tcx) {\n                         if let Some(i) = maybe_unsizing_param_idx(arg) {\n-                            unsizing_params.insert(i);\n-                            found = true;\n+                            unsizing_params.remove(i);\n                         }\n                     }\n-                    if !found {\n-                        return Err(Unimplemented);\n-                    }\n+                }\n \n-                    // Ensure none of the other fields mention the parameters used\n-                    // in unsizing.\n-                    // FIXME(eddyb) cache this (including computing `unsizing_params`)\n-                    // by putting it in a query; it would only need the `DefId` as it\n-                    // looks at declared field types, not anything substituted.\n-                    for field in prefix_fields {\n-                        for arg in tcx.type_of(field.did).walk(tcx) {\n-                            if let Some(i) = maybe_unsizing_param_idx(arg) {\n-                                if unsizing_params.contains(i) {\n-                                    return Err(Unimplemented);\n-                                }\n-                            }\n-                        }\n-                    }\n+                if unsizing_params.is_empty() {\n+                    return Err(Unimplemented);\n                 }\n \n                 // Extract `TailField<T>` and `TailField<U>` from `Struct<T>` and `Struct<U>`."}, {"sha": "6ba1b1b6036eae55f1ae9d78095f0dedf89e3ee0", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -482,6 +482,7 @@ impl<'a> Builder<'a> {\n                 doc::RustByExample,\n                 doc::RustcBook,\n                 doc::CargoBook,\n+                doc::Clippy,\n                 doc::EmbeddedBook,\n                 doc::EditionGuide,\n             ),"}, {"sha": "2804e7119fbc14e8418365082bb879b22861d299", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -755,6 +755,7 @@ tool_doc!(\n     \"src/tools/rustfmt\",\n     [\"rustfmt-nightly\", \"rustfmt-config_proc_macro\"],\n );\n+tool_doc!(Clippy, \"clippy\", \"src/tools/clippy\", [\"clippy_utils\"]);\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct ErrorIndex {"}, {"sha": "6bf21e8f58b25494f808de2bdaeab7f1d050c580", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -257,7 +257,7 @@ unsafe {\n }\n \n println!(\n-    \"L1 Cache: {}\",\n+    \"L0 Cache: {}\",\n     ((ebx >> 22) + 1) * (((ebx >> 12) & 0x3ff) + 1) * ((ebx & 0xfff) + 1) * (ecx + 1)\n );\n ```"}, {"sha": "56ae43855de924718c08a49e5c85de296bfb4210", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -789,6 +789,7 @@ impl AttributesExt for [ast::Attribute] {\n     fn cfg(&self, tcx: TyCtxt<'_>, hidden_cfg: &FxHashSet<Cfg>) -> Option<Arc<Cfg>> {\n         let sess = tcx.sess;\n         let doc_cfg_active = tcx.features().doc_cfg;\n+        let doc_auto_cfg_active = tcx.features().doc_auto_cfg;\n \n         fn single<T: IntoIterator>(it: T) -> Option<T::Item> {\n             let mut iter = it.into_iter();\n@@ -799,24 +800,26 @@ impl AttributesExt for [ast::Attribute] {\n             Some(item)\n         }\n \n-        let mut cfg = if doc_cfg_active {\n+        let mut cfg = if doc_cfg_active || doc_auto_cfg_active {\n             let mut doc_cfg = self\n                 .iter()\n                 .filter(|attr| attr.has_name(sym::doc))\n                 .flat_map(|attr| attr.meta_item_list().unwrap_or_else(Vec::new))\n                 .filter(|attr| attr.has_name(sym::cfg))\n                 .peekable();\n-            if doc_cfg.peek().is_some() {\n+            if doc_cfg.peek().is_some() && doc_cfg_active {\n                 doc_cfg\n                     .filter_map(|attr| Cfg::parse(attr.meta_item()?).ok())\n                     .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n-            } else {\n+            } else if doc_auto_cfg_active {\n                 self.iter()\n                     .filter(|attr| attr.has_name(sym::cfg))\n                     .filter_map(|attr| single(attr.meta_item_list()?))\n                     .filter_map(|attr| Cfg::parse(attr.meta_item()?).ok())\n                     .filter(|cfg| !hidden_cfg.contains(cfg))\n                     .fold(Cfg::True, |cfg, new_cfg| cfg & new_cfg)\n+            } else {\n+                Cfg::True\n             }\n         } else {\n             Cfg::True"}, {"sha": "fcdd83545696b46fa4d6e0546c8a87e19ea94bcf", "filename": "src/test/rustdoc/doc-auto-cfg.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Fdoc-auto-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Fdoc-auto-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-auto-cfg.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -0,0 +1,8 @@\n+#![feature(doc_auto_cfg)]\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/fn.foo.html\n+// @has - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 'non-test'\n+#[cfg(not(test))]\n+pub fn foo() {}"}, {"sha": "424fa6d6a911fac841884f3d302fcb7a0805ed6c", "filename": "src/test/rustdoc/doc-cfg-hide.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg-hide.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -1,5 +1,5 @@\n #![crate_name = \"oud\"]\n-#![feature(doc_cfg, doc_cfg_hide)]\n+#![feature(doc_auto_cfg, doc_cfg, doc_cfg_hide)]\n \n #![doc(cfg_hide(feature = \"solecism\"))]\n "}, {"sha": "5d17a4ede6adcb16da2a182c0abe50e36b64132f", "filename": "src/test/rustdoc/doc-cfg-implicit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fdoc-cfg-implicit.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -1,5 +1,5 @@\n #![crate_name = \"funambulism\"]\n-#![feature(doc_cfg)]\n+#![feature(doc_auto_cfg, doc_cfg)]\n \n // @has 'funambulism/struct.Disorbed.html'\n // @count   - '//*[@class=\"stab portability\"]' 1"}, {"sha": "da76381e4800064b7b3327bf62693605b44e4e65", "filename": "src/test/rustdoc/feature-gate-doc_auto_cfg.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Ffeature-gate-doc_auto_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Frustdoc%2Ffeature-gate-doc_auto_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Ffeature-gate-doc_auto_cfg.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -0,0 +1,8 @@\n+#![feature(doc_cfg)]\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/fn.foo.html\n+// @count - '//*[@class=\"item-info\"]/*[@class=\"stab portability\"]' 0\n+#[cfg(not(test))]\n+pub fn foo() {}"}, {"sha": "0cfd0a0b9784c9d2b7b736825c0a607aa4c23b07", "filename": "src/test/ui/feature-gates/feature-gate-relaxed_struct_unsize.rs", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6f40fa4353a9075288f74ecc3553010b34c65baa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-relaxed_struct_unsize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f40fa4353a9075288f74ecc3553010b34c65baa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-relaxed_struct_unsize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-relaxed_struct_unsize.rs?ref=6f40fa4353a9075288f74ecc3553010b34c65baa", "patch": "@@ -1,10 +0,0 @@\n-// Test that we allow unsizing even if there is an unchanged param in the\n-// field getting unsized.\n-struct A<T, U: ?Sized + 'static>(T, B<T, U>);\n-struct B<T, U: ?Sized>(T, U);\n-\n-fn main() {\n-    let x: A<[u32; 1], [u32; 1]> = A([0; 1], B([0; 1], [0; 1]));\n-    let y: &A<[u32; 1], [u32]> = &x; //~ ERROR mismatched types\n-    assert_eq!(y.1.1.len(), 1);\n-}"}, {"sha": "f62def47726f92c4e1c5bdccbbd5efc0664428bc", "filename": "src/test/ui/feature-gates/feature-gate-relaxed_struct_unsize.stderr", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6f40fa4353a9075288f74ecc3553010b34c65baa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-relaxed_struct_unsize.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6f40fa4353a9075288f74ecc3553010b34c65baa/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-relaxed_struct_unsize.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-relaxed_struct_unsize.stderr?ref=6f40fa4353a9075288f74ecc3553010b34c65baa", "patch": "@@ -1,14 +0,0 @@\n-error[E0308]: mismatched types\n-  --> $DIR/feature-gate-relaxed_struct_unsize.rs:8:34\n-   |\n-LL |     let y: &A<[u32; 1], [u32]> = &x;\n-   |            -------------------   ^^ expected slice `[u32]`, found array `[u32; 1]`\n-   |            |\n-   |            expected due to this\n-   |\n-   = note: expected reference `&A<[u32; 1], [u32]>`\n-              found reference `&A<[u32; 1], [u32; 1]>`\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0308`."}, {"sha": "93c7af68ac388e145714fe11c473d29eb0b5b16b", "filename": "src/test/ui/unsized/unchanged-param.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Fui%2Funsized%2Funchanged-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftest%2Fui%2Funsized%2Funchanged-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funsized%2Funchanged-param.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -1,4 +1,3 @@\n-#![feature(relaxed_struct_unsize)]\n // run-pass\n // Test that we allow unsizing even if there is an unchanged param in the\n // field getting unsized."}, {"sha": "d475aaa3ee0671cec1a7941e44a2aac6a3ab322e", "filename": "src/tools/clippy/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftools%2Fclippy%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftools%2Fclippy%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2FCargo.toml?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -22,12 +22,12 @@ path = \"src/driver.rs\"\n \n [dependencies]\n clippy_lints = { version = \"0.1\", path = \"clippy_lints\" }\n-semver = \"0.11\"\n+semver = \"1.0\"\n rustc_tools_util = { version = \"0.2\", path = \"rustc_tools_util\" }\n tempfile = { version = \"3.2\", optional = true }\n \n [dev-dependencies]\n-cargo_metadata = \"0.12\"\n+cargo_metadata = \"0.14\"\n compiletest_rs = { version = \"0.7\", features = [\"tmp\"] }\n tester = \"0.9\"\n regex = \"1.5\""}, {"sha": "281480b8d94914c2d1835a1fb7d2d1fb62620b18", "filename": "src/tools/clippy/clippy_lints/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftools%2Fclippy%2Fclippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftools%2Fclippy%2Fclippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fclippy_lints%2FCargo.toml?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -9,7 +9,7 @@ keywords = [\"clippy\", \"lint\", \"plugin\"]\n edition = \"2021\"\n \n [dependencies]\n-cargo_metadata = \"0.12\"\n+cargo_metadata = \"0.14\"\n clippy_utils = { path = \"../clippy_utils\" }\n if_chain = \"1.0\"\n itertools = \"0.10\"\n@@ -21,7 +21,7 @@ serde_json = { version = \"1.0\", optional = true }\n toml = \"0.5\"\n unicode-normalization = \"0.1\"\n unicode-script = { version = \"0.5\", default-features = false }\n-semver = \"0.11\"\n+semver = \"1.0\"\n rustc-semver = \"1.1\"\n # NOTE: cargo requires serde feat in its url dep\n # see <https://github.com/rust-lang/rust/pull/63587#issuecomment-522343864>"}, {"sha": "129237775fe3f803c561c47886048987a92a4170", "filename": "src/tools/tidy/src/features.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3802025f400af7817ba4874587e6a2df95abd65d/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Ffeatures.rs?ref=3802025f400af7817ba4874587e6a2df95abd65d", "patch": "@@ -97,6 +97,7 @@ pub fn check(\n             &src_path.join(\"test/ui\"),\n             &src_path.join(\"test/ui-fulldeps\"),\n             &src_path.join(\"test/rustdoc-ui\"),\n+            &src_path.join(\"test/rustdoc\"),\n         ],\n         &mut |path| super::filter_dirs(path),\n         &mut |entry, contents| {"}]}