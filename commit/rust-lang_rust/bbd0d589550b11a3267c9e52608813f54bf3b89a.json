{"sha": "bbd0d589550b11a3267c9e52608813f54bf3b89a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZDBkNTg5NTUwYjExYTMyNjdjOWU1MjYwODgxM2Y1NGJmM2I4OWE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-29T17:22:10Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-29T17:22:53Z"}, "message": "rustc: Unbreak self assignment", "tree": {"sha": "e1895da27851352c85dd5c6a23ce48a704f20f4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1895da27851352c85dd5c6a23ce48a704f20f4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbd0d589550b11a3267c9e52608813f54bf3b89a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbd0d589550b11a3267c9e52608813f54bf3b89a", "html_url": "https://github.com/rust-lang/rust/commit/bbd0d589550b11a3267c9e52608813f54bf3b89a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbd0d589550b11a3267c9e52608813f54bf3b89a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47b3e087e945a2a8fcfd1179e333746d294c1259", "url": "https://api.github.com/repos/rust-lang/rust/commits/47b3e087e945a2a8fcfd1179e333746d294c1259", "html_url": "https://github.com/rust-lang/rust/commit/47b3e087e945a2a8fcfd1179e333746d294c1259"}], "stats": {"total": 19, "additions": 13, "deletions": 6}, "files": [{"sha": "35906ffc9c0602184cdd40b3bf78e3f2f9eeca4d", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/bbd0d589550b11a3267c9e52608813f54bf3b89a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbd0d589550b11a3267c9e52608813f54bf3b89a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=bbd0d589550b11a3267c9e52608813f54bf3b89a", "patch": "@@ -3180,14 +3180,21 @@ fn copy_val(&@block_ctxt cx, copy_action action, ValueRef dst, ValueRef src,\n         ret rslt(bcx, bcx.build.Store(src, dst));\n     } else if (ty::type_is_structural(ccx.tcx, t) ||\n                    ty::type_has_dynamic_size(ccx.tcx, t)) {\n-        auto bcx;\n+        // Check for self-assignment.\n+        auto do_copy_cx = new_sub_block_ctxt(cx, \"do_copy\");\n+        auto next_cx = new_sub_block_ctxt(cx, \"next\");\n+        auto self_assigning = cx.build.ICmp(lib::llvm::LLVMIntNE,\n+            cx.build.PointerCast(dst, val_ty(src)), src);\n+        cx.build.CondBr(self_assigning, do_copy_cx.llbb, next_cx.llbb);\n+\n         if (action == DROP_EXISTING) {\n-            bcx = drop_ty(cx, dst, t).bcx;\n-        } else {\n-            bcx = cx;\n+            do_copy_cx = drop_ty(do_copy_cx, dst, t).bcx;\n         }\n-        bcx = memmove_ty(bcx, dst, src, t).bcx;\n-        ret copy_ty(bcx, dst, t);\n+        do_copy_cx = memmove_ty(do_copy_cx, dst, src, t).bcx;\n+        do_copy_cx = copy_ty(do_copy_cx, dst, t).bcx;\n+        do_copy_cx.build.Br(next_cx.llbb);\n+\n+        ret rslt(next_cx, C_nil());\n     }\n     ccx.sess.bug(\"unexpected type in trans::copy_val: \" +\n                  ty_to_str(ccx.tcx, t));"}]}