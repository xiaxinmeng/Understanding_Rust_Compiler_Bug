{"sha": "2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "node_id": "C_kwDOAAsO6NoAKDJmNzRkMWQxNGZmMDhiZmM1OTk1YmExMzc5ODQwZTViZDNmMzBlZmI", "commit": {"author": {"name": "rdvdev2", "email": "rdvdev2@gmail.com", "date": "2022-08-22T08:05:13Z"}, "committer": {"name": "Nathan Stocks", "email": "cleancut@github.com", "date": "2022-10-07T19:19:26Z"}, "message": "Migrate weak_lang_items.rs", "tree": {"sha": "d4074bcf81f582a0fe1626fe4a9376881a181702", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4074bcf81f582a0fe1626fe4a9376881a181702"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "html_url": "https://github.com/rust-lang/rust/commit/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/comments", "author": {"login": "rdvdev2", "id": 33713918, "node_id": "MDQ6VXNlcjMzNzEzOTE4", "avatar_url": "https://avatars.githubusercontent.com/u/33713918?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rdvdev2", "html_url": "https://github.com/rdvdev2", "followers_url": "https://api.github.com/users/rdvdev2/followers", "following_url": "https://api.github.com/users/rdvdev2/following{/other_user}", "gists_url": "https://api.github.com/users/rdvdev2/gists{/gist_id}", "starred_url": "https://api.github.com/users/rdvdev2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rdvdev2/subscriptions", "organizations_url": "https://api.github.com/users/rdvdev2/orgs", "repos_url": "https://api.github.com/users/rdvdev2/repos", "events_url": "https://api.github.com/users/rdvdev2/events{/privacy}", "received_events_url": "https://api.github.com/users/rdvdev2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CleanCut", "id": 5838512, "node_id": "MDQ6VXNlcjU4Mzg1MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/5838512?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CleanCut", "html_url": "https://github.com/CleanCut", "followers_url": "https://api.github.com/users/CleanCut/followers", "following_url": "https://api.github.com/users/CleanCut/following{/other_user}", "gists_url": "https://api.github.com/users/CleanCut/gists{/gist_id}", "starred_url": "https://api.github.com/users/CleanCut/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CleanCut/subscriptions", "organizations_url": "https://api.github.com/users/CleanCut/orgs", "repos_url": "https://api.github.com/users/CleanCut/repos", "events_url": "https://api.github.com/users/CleanCut/events{/privacy}", "received_events_url": "https://api.github.com/users/CleanCut/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "bde80f745b86750a31294013fef590dd9e6965c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/bde80f745b86750a31294013fef590dd9e6965c3", "html_url": "https://github.com/rust-lang/rust/commit/bde80f745b86750a31294013fef590dd9e6965c3"}], "stats": {"total": 41, "additions": 31, "deletions": 10}, "files": [{"sha": "bfe22727483da0a47e2a08a35ed96113b8220424", "filename": "compiler/rustc_error_messages/locales/en-US/passes.ftl", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fpasses.ftl?ref=2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "patch": "@@ -271,3 +271,12 @@ passes_collapse_debuginfo = `collapse_debuginfo` attribute should be applied to\n \n passes_deprecated_annotation_has_no_effect = this `#[deprecated]` annotation has no effect\n     .suggestion = remove the unnecessary deprecation attribute\n+    \n+passes_missing_panic_handler = `#[panic_handler]` function required, but not found\n+\n+passes_missing_alloc_error_handler = `#[alloc_error_handler]` function required, but not found\n+    .note = use `#![feature(default_alloc_error_handler)]` for a default error handler\n+\n+passes_missing_lang_item = language item required, but not found: `{$name}`\n+    .note = this can occur when a binary crate with `#![no_std]` is compiled for a target where `{$name}` is defined in the standard library\n+    .help = you may be able to compile for a target that doesn't need `{$name}`, specify a target with `--target` or in `.cargo/config`"}, {"sha": "7dbdee8a87ae59dfd0a3bda6fcbc49af78eab4f2", "filename": "compiler/rustc_passes/src/errors.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Ferrors.rs?ref=2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "patch": "@@ -665,3 +665,20 @@ pub struct DeprecatedAnnotationHasNoEffect {\n     #[suggestion(applicability = \"machine-applicable\", code = \"\")]\n     pub span: Span,\n }\n+\n+#[derive(Diagnostic)]\n+#[diag(passes::missing_panic_handler)]\n+pub struct MissingPanicHandler;\n+\n+#[derive(Diagnostic)]\n+#[diag(passes::missing_alloc_error_handler)]\n+#[note]\n+pub struct MissingAllocErrorHandler;\n+\n+#[derive(Diagnostic)]\n+#[diag(passes::missing_lang_item)]\n+#[note]\n+#[help]\n+pub struct MissingLangItem {\n+    pub name: Symbol,\n+}"}, {"sha": "2345de74bdfbc2b6d3415fe47dbef334cf4ce0bd", "filename": "compiler/rustc_passes/src/weak_lang_items.rs", "status": "modified", "additions": 5, "deletions": 10, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/compiler%2Frustc_passes%2Fsrc%2Fweak_lang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2f74d1d14ff08bfc5995ba1379840e5bd3f30efb/compiler%2Frustc_passes%2Fsrc%2Fweak_lang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fweak_lang_items.rs?ref=2f74d1d14ff08bfc5995ba1379840e5bd3f30efb", "patch": "@@ -8,6 +8,8 @@ use rustc_middle::middle::lang_items::required;\n use rustc_middle::ty::TyCtxt;\n use rustc_session::config::CrateType;\n \n+use crate::errors::{MissingAllocErrorHandler, MissingLangItem, MissingPanicHandler};\n+\n /// Checks the crate for usage of weak lang items, returning a vector of all the\n /// language items required by this crate, but not defined yet.\n pub fn check_crate<'tcx>(tcx: TyCtxt<'tcx>, items: &mut lang_items::LanguageItems) {\n@@ -71,20 +73,13 @@ fn verify<'tcx>(tcx: TyCtxt<'tcx>, items: &lang_items::LanguageItems) {\n     for (name, &item) in WEAK_ITEMS_REFS.iter() {\n         if missing.contains(&item) && required(tcx, item) && items.require(item).is_err() {\n             if item == LangItem::PanicImpl {\n-                tcx.sess.err(\"`#[panic_handler]` function required, but not found\");\n+                tcx.sess.emit_err(MissingPanicHandler);\n             } else if item == LangItem::Oom {\n                 if !tcx.features().default_alloc_error_handler {\n-                    tcx.sess.err(\"`#[alloc_error_handler]` function required, but not found\");\n-                    tcx.sess.note_without_error(\"use `#![feature(default_alloc_error_handler)]` for a default error handler\");\n+                    tcx.sess.emit_err(MissingAllocErrorHandler);\n                 }\n             } else {\n-                tcx\n-                    .sess\n-                    .diagnostic()\n-                    .struct_err(&format!(\"language item required, but not found: `{}`\", name))\n-                    .note(&format!(\"this can occur when a binary crate with `#![no_std]` is compiled for a target where `{}` is defined in the standard library\", name))\n-                    .help(&format!(\"you may be able to compile for a target that doesn't need `{}`, specify a target with `--target` or in `.cargo/config`\", name))\n-                    .emit();\n+                tcx.sess.emit_err(MissingLangItem { name: *name });\n             }\n         }\n     }"}]}