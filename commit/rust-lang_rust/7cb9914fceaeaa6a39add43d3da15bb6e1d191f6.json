{"sha": "7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYjk5MTRmY2VhZWFhNmEzOWFkZDQzZDNkYTE1YmI2ZTFkMTkxZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-25T23:02:52Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-05-25T23:02:52Z"}, "message": "Auto merge of #25767 - mystor:patch-1, r=Gankro\n\nBy the same logic that `mem::forget` is safe, `boxed::into_raw` is actually a safe function.\r\n\r\nFixes #25755.", "tree": {"sha": "fc885d585246974c4c95ff010b383b330fbba108", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc885d585246974c4c95ff010b383b330fbba108"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "html_url": "https://github.com/rust-lang/rust/commit/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc156c2f3819e8818c66e5f5d0bb143739e3bbb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc156c2f3819e8818c66e5f5d0bb143739e3bbb0", "html_url": "https://github.com/rust-lang/rust/commit/cc156c2f3819e8818c66e5f5d0bb143739e3bbb0"}, {"sha": "d416fc1d40e39661153b2183726f7e71f51d24e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/d416fc1d40e39661153b2183726f7e71f51d24e3", "html_url": "https://github.com/rust-lang/rust/commit/d416fc1d40e39661153b2183726f7e71f51d24e3"}], "stats": {"total": 20, "additions": 7, "deletions": 13}, "files": [{"sha": "6633e48a814f6d8929865687dbb31596f73d8f8c", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "patch": "@@ -139,24 +139,20 @@ impl<T : ?Sized> Box<T> {\n /// convert pointer back to `Box` with `Box::from_raw` function, because\n /// `Box` does not specify, how memory is allocated.\n ///\n-/// Function is unsafe, because result of this function is no longer\n-/// automatically managed that may lead to memory or other resource\n-/// leak.\n-///\n /// # Examples\n /// ```\n /// # #![feature(alloc)]\n /// use std::boxed;\n ///\n /// let seventeen = Box::new(17u32);\n-/// let raw = unsafe { boxed::into_raw(seventeen) };\n+/// let raw = boxed::into_raw(seventeen);\n /// let boxed_again = unsafe { Box::from_raw(raw) };\n /// ```\n #[unstable(feature = \"alloc\",\n            reason = \"may be renamed\")]\n #[inline]\n-pub unsafe fn into_raw<T : ?Sized>(b: Box<T>) -> *mut T {\n-    mem::transmute(b)\n+pub fn into_raw<T : ?Sized>(b: Box<T>) -> *mut T {\n+    unsafe { mem::transmute(b) }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "a0ed52d4d3c875ba3807c22dc7c4d4f638872141", "filename": "src/libstd/sync/mpsc/spsc_queue.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fspsc_queue.rs?ref=7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "patch": "@@ -80,12 +80,10 @@ unsafe impl<T: Send> Sync for Queue<T> { }\n \n impl<T> Node<T> {\n     fn new() -> *mut Node<T> {\n-        unsafe {\n-            boxed::into_raw(box Node {\n-                value: None,\n-                next: AtomicPtr::new(ptr::null_mut::<Node<T>>()),\n-            })\n-        }\n+        boxed::into_raw(box Node {\n+            value: None,\n+            next: AtomicPtr::new(ptr::null_mut::<Node<T>>()),\n+        })\n     }\n }\n "}]}