{"sha": "aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhNGJjODliMTdmMmRkMmY4YzVlY2FkMGE2M2NlYzM5ZjI0NDQ5YmM=", "commit": {"author": {"name": "Thomas Backman", "email": "serenity@exscape.org", "date": "2014-04-22T17:41:02Z"}, "committer": {"name": "Thomas Backman", "email": "serenity@exscape.org", "date": "2014-04-22T17:41:02Z"}, "message": "Implement Show for &mut [T]", "tree": {"sha": "0168db09ee60c7210dd8f8680df059006674cd2f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0168db09ee60c7210dd8f8680df059006674cd2f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc", "html_url": "https://github.com/rust-lang/rust/commit/aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc/comments", "author": {"login": "exscape", "id": 143653, "node_id": "MDQ6VXNlcjE0MzY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/143653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exscape", "html_url": "https://github.com/exscape", "followers_url": "https://api.github.com/users/exscape/followers", "following_url": "https://api.github.com/users/exscape/following{/other_user}", "gists_url": "https://api.github.com/users/exscape/gists{/gist_id}", "starred_url": "https://api.github.com/users/exscape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exscape/subscriptions", "organizations_url": "https://api.github.com/users/exscape/orgs", "repos_url": "https://api.github.com/users/exscape/repos", "events_url": "https://api.github.com/users/exscape/events{/privacy}", "received_events_url": "https://api.github.com/users/exscape/received_events", "type": "User", "site_admin": false}, "committer": {"login": "exscape", "id": 143653, "node_id": "MDQ6VXNlcjE0MzY1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/143653?v=4", "gravatar_id": "", "url": "https://api.github.com/users/exscape", "html_url": "https://github.com/exscape", "followers_url": "https://api.github.com/users/exscape/followers", "following_url": "https://api.github.com/users/exscape/following{/other_user}", "gists_url": "https://api.github.com/users/exscape/gists{/gist_id}", "starred_url": "https://api.github.com/users/exscape/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/exscape/subscriptions", "organizations_url": "https://api.github.com/users/exscape/orgs", "repos_url": "https://api.github.com/users/exscape/repos", "events_url": "https://api.github.com/users/exscape/events{/privacy}", "received_events_url": "https://api.github.com/users/exscape/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77303101bb7d18e48048fe6bdc7df6be2f315370", "url": "https://api.github.com/repos/rust-lang/rust/commits/77303101bb7d18e48048fe6bdc7df6be2f315370", "html_url": "https://github.com/rust-lang/rust/commit/77303101bb7d18e48048fe6bdc7df6be2f315370"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "620baabeef53988c5dd9c7017bf2a1935a1ca817", "filename": "src/libstd/slice.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc/src%2Flibstd%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc/src%2Flibstd%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fslice.rs?ref=aa4bc89b17f2dd2f8c5ecad0a63cec39f24449bc", "patch": "@@ -2002,6 +2002,12 @@ impl<'a, T: fmt::Show> fmt::Show for &'a [T] {\n     }\n }\n \n+impl<'a, T: fmt::Show> fmt::Show for &'a mut [T] {\n+    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n+        self.as_slice().fmt(f)\n+    }\n+}\n+\n impl<T: fmt::Show> fmt::Show for ~[T] {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         self.as_slice().fmt(f)\n@@ -3408,6 +3414,12 @@ mod tests {\n         test_show_vec!(~[1], \"[1]\".to_owned());\n         test_show_vec!(~[1, 2, 3], \"[1, 2, 3]\".to_owned());\n         test_show_vec!(~[~[], ~[1u], ~[1u, 1u]], \"[[], [1], [1, 1]]\".to_owned());\n+\n+        let empty_mut: &mut [int] = &mut[];\n+        test_show_vec!(empty_mut, \"[]\".to_owned());\n+        test_show_vec!(&mut[1], \"[1]\".to_owned());\n+        test_show_vec!(&mut[1, 2, 3], \"[1, 2, 3]\".to_owned());\n+        test_show_vec!(&mut[&mut[], &mut[1u], &mut[1u, 1u]], \"[[], [1], [1, 1]]\".to_owned());\n     }\n \n     #[test]"}]}