{"sha": "2e5a0dc172916bef6f8506d5e8b08b8653d98360", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNWEwZGMxNzI5MTZiZWY2Zjg1MDZkNWU4YjA4Yjg2NTNkOTgzNjA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-22T09:32:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-06-22T09:32:01Z"}, "message": "add a miscompilation test", "tree": {"sha": "e2c82626708770665db822eef944840241c2e3fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2c82626708770665db822eef944840241c2e3fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e5a0dc172916bef6f8506d5e8b08b8653d98360", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e5a0dc172916bef6f8506d5e8b08b8653d98360", "html_url": "https://github.com/rust-lang/rust/commit/2e5a0dc172916bef6f8506d5e8b08b8653d98360", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e5a0dc172916bef6f8506d5e8b08b8653d98360/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ad5f6b2b93f78d3366c0654609f4b685043ec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ad5f6b2b93f78d3366c0654609f4b685043ec9", "html_url": "https://github.com/rust-lang/rust/commit/31ad5f6b2b93f78d3366c0654609f4b685043ec9"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "3a32d970d637a70f7d65ce6d8ee1e4defee4b270", "filename": "tests/run-pass/issue-73223.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2e5a0dc172916bef6f8506d5e8b08b8653d98360/tests%2Frun-pass%2Fissue-73223.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e5a0dc172916bef6f8506d5e8b08b8653d98360/tests%2Frun-pass%2Fissue-73223.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-73223.rs?ref=2e5a0dc172916bef6f8506d5e8b08b8653d98360", "patch": "@@ -0,0 +1,22 @@\n+fn main() {\n+    let mut state = State { prev: None, next: Some(8) };\n+    let path = \"/nested/some/more\";\n+    assert_eq!(state.rest(path), \"some/more\");\n+}\n+\n+struct State {\n+    prev: Option<usize>,\n+    next: Option<usize>,\n+}\n+\n+impl State {\n+    fn rest<'r>(&mut self, path: &'r str) -> &'r str {\n+        let start = match self.next.take() {\n+            Some(v) => v,\n+            None => return \"\",\n+        };\n+\n+        self.prev = Some(start);\n+        &path[start..]\n+    }\n+}"}]}