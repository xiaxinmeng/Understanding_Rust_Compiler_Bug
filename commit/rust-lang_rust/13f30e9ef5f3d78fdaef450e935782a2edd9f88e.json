{"sha": "13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzZjMwZTllZjVmM2Q3OGZkYWVmNDUwZTkzNTc4MmEyZWRkOWY4OGU=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-03-18T11:39:40Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2021-03-18T12:19:15Z"}, "message": "Handle inner recursive macro rules cases", "tree": {"sha": "fd0d6f5e6c3123ddd59479c9f43901abcc19ea27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd0d6f5e6c3123ddd59479c9f43901abcc19ea27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "html_url": "https://github.com/rust-lang/rust/commit/13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7fbea509f1e5f840e715c912ee38aa997d1bfbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7fbea509f1e5f840e715c912ee38aa997d1bfbc", "html_url": "https://github.com/rust-lang/rust/commit/f7fbea509f1e5f840e715c912ee38aa997d1bfbc"}], "stats": {"total": 34, "additions": 34, "deletions": 0}, "files": [{"sha": "4477bdd362408d2ce00d448e131c8e25524c1255", "filename": "crates/hir_def/src/item_tree.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree.rs?ref=13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "patch": "@@ -115,6 +115,10 @@ impl ItemTree {\n                     // still need to collect inner items.\n                     ctx.lower_inner_items(stmt.syntax())\n                 },\n+                ast::Item(item) => {\n+                    // Macros can expand to stmt and other item, and we add it as top level item\n+                    ctx.lower_single_item(item)\n+                },\n                 _ => {\n                     panic!(\"cannot create item tree from {:?} {}\", syntax, syntax);\n                 },"}, {"sha": "d684b89d01c85e05ad77ae800d22bca12dcf6e0f", "filename": "crates/hir_def/src/item_tree/lower.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fitem_tree%2Flower.rs?ref=13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "patch": "@@ -87,6 +87,14 @@ impl Ctx {\n         self.tree\n     }\n \n+    pub(super) fn lower_single_item(mut self, item: ast::Item) -> ItemTree {\n+        self.tree.top_level = self\n+            .lower_mod_item(&item, false)\n+            .map(|item| item.0)\n+            .unwrap_or_else(|| Default::default());\n+        self.tree\n+    }\n+\n     pub(super) fn lower_inner_items(mut self, within: &SyntaxNode) -> ItemTree {\n         self.collect_inner_items(within);\n         self.tree"}, {"sha": "c1e605740a59ff1b5ea82b89fda1ef180161ba49", "filename": "crates/hir_ty/src/tests/macros.rs", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13f30e9ef5f3d78fdaef450e935782a2edd9f88e/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=13f30e9ef5f3d78fdaef450e935782a2edd9f88e", "patch": "@@ -231,6 +231,28 @@ fn expr_macro_expanded_in_stmts() {\n     );\n }\n \n+#[test]\n+fn recursive_inner_item_macro_rules() {\n+    check_infer(\n+        r#\"\n+        macro_rules! mac {\n+            () => { mac!($)};\n+            ($x:tt) => { macro_rules! blub { () => { 1 }; } };\n+        }\n+        fn foo() {\n+            mac!();\n+            let a = blub!();\n+        }\n+        \"#,\n+        expect![[r#\"\n+            !0..1 '1': i32\n+            !0..7 'mac!($)': {unknown}\n+            107..143 '{     ...!(); }': ()\n+            129..130 'a': i32\n+        \"#]],\n+    );\n+}\n+\n #[test]\n fn infer_type_value_macro_having_same_name() {\n     check_infer("}]}