{"sha": "8db699d18d263bf779f260ba55221a8c0ff2f5d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYjY5OWQxOGQyNjNiZjc3OWYyNjBiYTU1MjIxYThjMGZmMmY1ZDg=", "commit": {"author": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-05-22T03:12:49Z"}, "committer": {"name": "Sean Patrick Santos", "email": "SeanPatrickSantos@gmail.com", "date": "2015-05-22T03:12:49Z"}, "message": "Add diagnostic code for generic associated const error.", "tree": {"sha": "5347a4b7c8c518773545fe51995864810454a70c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5347a4b7c8c518773545fe51995864810454a70c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8db699d18d263bf779f260ba55221a8c0ff2f5d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8db699d18d263bf779f260ba55221a8c0ff2f5d8", "html_url": "https://github.com/rust-lang/rust/commit/8db699d18d263bf779f260ba55221a8c0ff2f5d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8db699d18d263bf779f260ba55221a8c0ff2f5d8/comments", "author": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "committer": {"login": "quantheory", "id": 1740206, "node_id": "MDQ6VXNlcjE3NDAyMDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1740206?v=4", "gravatar_id": "", "url": "https://api.github.com/users/quantheory", "html_url": "https://github.com/quantheory", "followers_url": "https://api.github.com/users/quantheory/followers", "following_url": "https://api.github.com/users/quantheory/following{/other_user}", "gists_url": "https://api.github.com/users/quantheory/gists{/gist_id}", "starred_url": "https://api.github.com/users/quantheory/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/quantheory/subscriptions", "organizations_url": "https://api.github.com/users/quantheory/orgs", "repos_url": "https://api.github.com/users/quantheory/repos", "events_url": "https://api.github.com/users/quantheory/events{/privacy}", "received_events_url": "https://api.github.com/users/quantheory/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98f41ff3555dba80b47ebee6f6bc8a7df697240c", "url": "https://api.github.com/repos/rust-lang/rust/commits/98f41ff3555dba80b47ebee6f6bc8a7df697240c", "html_url": "https://github.com/rust-lang/rust/commit/98f41ff3555dba80b47ebee6f6bc8a7df697240c"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "77aded3ccdbac5f24e55c2138e49fbf324ee1637", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8db699d18d263bf779f260ba55221a8c0ff2f5d8/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db699d18d263bf779f260ba55221a8c0ff2f5d8/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=8db699d18d263bf779f260ba55221a8c0ff2f5d8", "patch": "@@ -3773,9 +3773,9 @@ pub fn resolve_ty_and_def_ufcs<'a, 'b, 'tcx>(fcx: &FnCtxt<'b, 'tcx>,\n         match def {\n             def::DefAssociatedConst(..) => {\n                 if ty::type_has_params(ty) || ty::type_has_self(ty) {\n-                    fcx.sess().span_err(span,\n-                                        \"Associated consts cannot depend \\\n-                                         on type parameters or Self.\");\n+                    span_err!(fcx.sess(), span, E0329,\n+                              \"Associated consts cannot depend \\\n+                               on type parameters or Self.\");\n                     fcx.write_error(node_id);\n                     return true;\n                 }"}, {"sha": "200a7bee8331c8166a409f6675e2fed773068b61", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/8db699d18d263bf779f260ba55221a8c0ff2f5d8/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db699d18d263bf779f260ba55221a8c0ff2f5d8/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=8db699d18d263bf779f260ba55221a8c0ff2f5d8", "patch": "@@ -771,6 +771,7 @@ register_diagnostics! {\n     E0326, // associated const implemented with different type from trait\n     E0327, // referred to method instead of constant in match pattern\n     E0328, // cannot implement Unsize explicitly\n+    E0329, // associated const depends on type parameter or Self.\n     E0366, // dropck forbid specialization to concrete type or region\n     E0367, // dropck forbid specialization to predicate not in struct/enum\n     E0369, // binary operation `<op>` cannot be applied to types"}, {"sha": "e48ff59d1dc8ed442b0b40d3a7ba40e475abdd93", "filename": "src/test/compile-fail/associated-const-type-parameters.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8db699d18d263bf779f260ba55221a8c0ff2f5d8/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8db699d18d263bf779f260ba55221a8c0ff2f5d8/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fassociated-const-type-parameters.rs?ref=8db699d18d263bf779f260ba55221a8c0ff2f5d8", "patch": "@@ -14,13 +14,13 @@ pub trait Foo {\n     const MIN: i32;\n \n     fn get_min() -> i32 {\n-        Self::MIN //~ Associated consts cannot depend on type parameters or Self.\n+        Self::MIN //~ ERROR E0329\n     }\n }\n \n fn get_min<T: Foo>() -> i32 {\n-    T::MIN; //~ Associated consts cannot depend on type parameters or Self.\n-    <T as Foo>::MIN //~ Associated consts cannot depend on type parameters or Self.\n+    T::MIN; //~ ERROR E0329\n+    <T as Foo>::MIN //~ ERROR E0329\n }\n \n fn main() {}"}]}