{"sha": "8bb02859e8656b57b90a95076f559003b015f39b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhiYjAyODU5ZTg2NTZiNTdiOTBhOTUwNzZmNTU5MDAzYjAxNWYzOWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-31T16:20:22Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-31T16:20:22Z"}, "message": "introduce constant", "tree": {"sha": "124a2af25434378ae8482a379096fea5f2a0f3e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/124a2af25434378ae8482a379096fea5f2a0f3e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8bb02859e8656b57b90a95076f559003b015f39b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8bb02859e8656b57b90a95076f559003b015f39b", "html_url": "https://github.com/rust-lang/rust/commit/8bb02859e8656b57b90a95076f559003b015f39b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8bb02859e8656b57b90a95076f559003b015f39b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e542936beda5a5e3125ae400fc2630768945ba6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e542936beda5a5e3125ae400fc2630768945ba6", "html_url": "https://github.com/rust-lang/rust/commit/0e542936beda5a5e3125ae400fc2630768945ba6"}], "stats": {"total": 20, "additions": 13, "deletions": 7}, "files": [{"sha": "95b69cd6ec71791ac6e74e89968daf91472ffbcb", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8bb02859e8656b57b90a95076f559003b015f39b/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8bb02859e8656b57b90a95076f559003b015f39b/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=8bb02859e8656b57b90a95076f559003b015f39b", "patch": "@@ -26,6 +26,9 @@ use crate::{\n     InitializationOptions,\n };\n \n+const THREADPOOL_SIZE: usize = 8;\n+const MAX_IN_FLIGHT_LIBS: usize = THREADPOOL_SIZE - 3;\n+\n #[derive(Debug, Fail)]\n #[fail(display = \"Language Server request failed with {}. ({})\", code, message)]\n pub struct LspError {\n@@ -46,18 +49,21 @@ enum Task {\n }\n \n struct PendingRequest {\n+    id: u64,\n     received: Instant,\n     method: String,\n }\n \n-impl From<(u64, PendingRequest)> for CompletedRequest {\n-    fn from((id, pending): (u64, PendingRequest)) -> CompletedRequest {\n-        CompletedRequest { id, method: pending.method, duration: pending.received.elapsed() }\n+impl From<PendingRequest> for CompletedRequest {\n+    fn from(pending: PendingRequest) -> CompletedRequest {\n+        CompletedRequest {\n+            id: pending.id,\n+            method: pending.method,\n+            duration: pending.received.elapsed(),\n+        }\n     }\n }\n \n-const THREADPOOL_SIZE: usize = 8;\n-\n pub fn main_loop(\n     ws_roots: Vec<PathBuf>,\n     options: InitializationOptions,\n@@ -175,7 +181,7 @@ fn main_loop_inner(\n     pending_requests: &mut FxHashMap<u64, PendingRequest>,\n     subs: &mut Subscriptions,\n ) -> Result<()> {\n-    // We try not to index more than THREADPOOL_SIZE - 3 libraries at the same\n+    // We try not to index more than MAX_IN_FLIGHT_LIBS libraries at the same\n     // time to always have a thread ready to react to input.\n     let mut in_flight_libraries = 0;\n     let mut pending_libraries = Vec::new();\n@@ -264,7 +270,7 @@ fn main_loop_inner(\n         };\n \n         pending_libraries.extend(state.process_changes());\n-        while in_flight_libraries < THREADPOOL_SIZE - 3 && !pending_libraries.is_empty() {\n+        while in_flight_libraries < MAX_IN_FLIGHT_LIBS && !pending_libraries.is_empty() {\n             let (root, files) = pending_libraries.pop().unwrap();\n             in_flight_libraries += 1;\n             let sender = libdata_sender.clone();"}]}