{"sha": "1058c89c695fdda9f059ca9db3a01bb5248257cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNThjODljNjk1ZmRkYTlmMDU5Y2E5ZGIzYTAxYmI1MjQ4MjU3Y2Q=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-02T12:58:13Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-11-02T12:58:57Z"}, "message": "add -Zunpretty=hir-tree\n\nThis uses the debug impls to dump the raw HIR. Particularly useful when\nlearning how the compiler works.", "tree": {"sha": "23a01c29e5b962e929ef4c5c5de7dd16f6ff8be5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/23a01c29e5b962e929ef4c5c5de7dd16f6ff8be5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1058c89c695fdda9f059ca9db3a01bb5248257cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1058c89c695fdda9f059ca9db3a01bb5248257cd", "html_url": "https://github.com/rust-lang/rust/commit/1058c89c695fdda9f059ca9db3a01bb5248257cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1058c89c695fdda9f059ca9db3a01bb5248257cd/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d98c78377e5083d5add5d3ae8d26ffa938c005", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d98c78377e5083d5add5d3ae8d26ffa938c005", "html_url": "https://github.com/rust-lang/rust/commit/a7d98c78377e5083d5add5d3ae8d26ffa938c005"}], "stats": {"total": 42, "additions": 42, "deletions": 0}, "files": [{"sha": "b780a57bc5b19234a0b78ecb8a41a294566edc7b", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/1058c89c695fdda9f059ca9db3a01bb5248257cd/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1058c89c695fdda9f059ca9db3a01bb5248257cd/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=1058c89c695fdda9f059ca9db3a01bb5248257cd", "patch": "@@ -77,6 +77,7 @@ pub enum PpFlowGraphMode {\n pub enum PpMode {\n     PpmSource(PpSourceMode),\n     PpmHir(PpSourceMode),\n+    PpmHirTree(PpSourceMode),\n     PpmFlowGraph(PpFlowGraphMode),\n     PpmMir,\n     PpmMirCFG,\n@@ -93,6 +94,7 @@ impl PpMode {\n             PpmSource(PpmExpandedIdentified) |\n             PpmSource(PpmExpandedHygiene) |\n             PpmHir(_) |\n+            PpmHirTree(_) |\n             PpmMir |\n             PpmMirCFG |\n             PpmFlowGraph(_) => true,\n@@ -125,6 +127,7 @@ pub fn parse_pretty(sess: &Session,\n         (\"hir\", true) => PpmHir(PpmNormal),\n         (\"hir,identified\", true) => PpmHir(PpmIdentified),\n         (\"hir,typed\", true) => PpmHir(PpmTyped),\n+        (\"hir-tree\", true) => PpmHirTree(PpmNormal),\n         (\"mir\", true) => PpmMir,\n         (\"mir-cfg\", true) => PpmMirCFG,\n         (\"flowgraph\", true) => PpmFlowGraph(PpFlowGraphMode::Default),\n@@ -969,6 +972,23 @@ pub fn print_after_hir_lowering<'tcx, 'a: 'tcx>(sess: &'a Session,\n                 })\n             }\n \n+            (PpmHirTree(s), None) => {\n+                let out: &mut Write = &mut out;\n+                s.call_with_pp_support_hir(sess,\n+                                           cstore,\n+                                           hir_map,\n+                                           analysis,\n+                                           resolutions,\n+                                           arena,\n+                                           arenas,\n+                                           output_filenames,\n+                                           crate_name,\n+                                           move |_annotation, krate| {\n+                    debug!(\"pretty printing source code {:?}\", s);\n+                    write!(out, \"{:#?}\", krate)\n+                })\n+            }\n+\n             (PpmHir(s), Some(uii)) => {\n                 let out: &mut Write = &mut out;\n                 s.call_with_pp_support_hir(sess,\n@@ -1003,6 +1023,28 @@ pub fn print_after_hir_lowering<'tcx, 'a: 'tcx>(sess: &'a Session,\n                     pp_state.s.eof()\n                 })\n             }\n+\n+            (PpmHirTree(s), Some(uii)) => {\n+                let out: &mut Write = &mut out;\n+                s.call_with_pp_support_hir(sess,\n+                                           cstore,\n+                                           hir_map,\n+                                           analysis,\n+                                           resolutions,\n+                                           arena,\n+                                           arenas,\n+                                           output_filenames,\n+                                           crate_name,\n+                                           move |_annotation, _krate| {\n+                    debug!(\"pretty printing source code {:?}\", s);\n+                    for node_id in uii.all_matching_node_ids(hir_map) {\n+                        let node = hir_map.get(node_id);\n+                        write!(out, \"{:#?}\", node)?;\n+                    }\n+                    Ok(())\n+                })\n+            }\n+\n             _ => unreachable!(),\n         }\n         .unwrap();"}]}