{"sha": "bc70d0db920c19e6764c45178027f17c2d2ac7f6", "node_id": "C_kwDOAAsO6NoAKGJjNzBkMGRiOTIwYzE5ZTY3NjRjNDUxNzgwMjdmMTdjMmQyYWM3ZjY", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-16T01:56:36Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-05-27T05:58:35Z"}, "message": "Rename `ProcMacroDerive` as `DeriveProcMacro`.\n\nSo it matches the existing `AttrProcMacro` and `BangProcMacro` types.", "tree": {"sha": "0162dc6ca26ff9fb344b161cb526fa2975112f85", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0162dc6ca26ff9fb344b161cb526fa2975112f85"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc70d0db920c19e6764c45178027f17c2d2ac7f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc70d0db920c19e6764c45178027f17c2d2ac7f6", "html_url": "https://github.com/rust-lang/rust/commit/bc70d0db920c19e6764c45178027f17c2d2ac7f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc70d0db920c19e6764c45178027f17c2d2ac7f6/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dbdc7dd0dcb7e7525fec145787d715d31d651a4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/dbdc7dd0dcb7e7525fec145787d715d31d651a4b", "html_url": "https://github.com/rust-lang/rust/commit/dbdc7dd0dcb7e7525fec145787d715d31d651a4b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "eb59c5a18549210c2ef99669913b17b9e8ab6996", "filename": "compiler/rustc_expand/src/proc_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc70d0db920c19e6764c45178027f17c2d2ac7f6/compiler%2Frustc_expand%2Fsrc%2Fproc_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc70d0db920c19e6764c45178027f17c2d2ac7f6/compiler%2Frustc_expand%2Fsrc%2Fproc_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_expand%2Fsrc%2Fproc_macro.rs?ref=bc70d0db920c19e6764c45178027f17c2d2ac7f6", "patch": "@@ -72,11 +72,11 @@ impl base::AttrProcMacro for AttrProcMacro {\n     }\n }\n \n-pub struct ProcMacroDerive {\n+pub struct DeriveProcMacro {\n     pub client: pm::bridge::client::Client<fn(pm::TokenStream) -> pm::TokenStream>,\n }\n \n-impl MultiItemModifier for ProcMacroDerive {\n+impl MultiItemModifier for DeriveProcMacro {\n     fn expand(\n         &self,\n         ecx: &mut ExtCtxt<'_>,"}, {"sha": "9f53b24609a3eb40395fd0674bc737795e26d9c8", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bc70d0db920c19e6764c45178027f17c2d2ac7f6/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc70d0db920c19e6764c45178027f17c2d2ac7f6/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=bc70d0db920c19e6764c45178027f17c2d2ac7f6", "patch": "@@ -11,7 +11,7 @@ use rustc_data_structures::svh::Svh;\n use rustc_data_structures::sync::{Lock, LockGuard, Lrc, OnceCell};\n use rustc_data_structures::unhash::UnhashMap;\n use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n-use rustc_expand::proc_macro::{AttrProcMacro, BangProcMacro, ProcMacroDerive};\n+use rustc_expand::proc_macro::{AttrProcMacro, BangProcMacro, DeriveProcMacro};\n use rustc_hir::def::{CtorKind, CtorOf, DefKind, Res};\n use rustc_hir::def_id::{CrateNum, DefId, DefIndex, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc_hir::definitions::{DefKey, DefPath, DefPathData, DefPathHash};\n@@ -837,7 +837,7 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n                     attributes.iter().cloned().map(Symbol::intern).collect::<Vec<_>>();\n                 (\n                     trait_name,\n-                    SyntaxExtensionKind::Derive(Box::new(ProcMacroDerive { client })),\n+                    SyntaxExtensionKind::Derive(Box::new(DeriveProcMacro { client })),\n                     helper_attrs,\n                 )\n             }"}]}