{"sha": "6c01c0e9b5b069ee2a61b6078058c69880a14f19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjMDFjMGU5YjViMDY5ZWUyYTYxYjYwNzgwNThjNjk4ODBhMTRmMTk=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-09-29T09:14:59Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2019-09-29T09:14:59Z"}, "message": "Zero-initialize `vec![None; n]` for `Option<&T>`, `Option<&mut T>` and `Option<Box<T>>`", "tree": {"sha": "14e82352b794976e17df0807a56661dd18f80d5b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e82352b794976e17df0807a56661dd18f80d5b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c01c0e9b5b069ee2a61b6078058c69880a14f19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c01c0e9b5b069ee2a61b6078058c69880a14f19", "html_url": "https://github.com/rust-lang/rust/commit/6c01c0e9b5b069ee2a61b6078058c69880a14f19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c01c0e9b5b069ee2a61b6078058c69880a14f19/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bbab7d99dde8620604fb265706dc8bff20345a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bbab7d99dde8620604fb265706dc8bff20345a7", "html_url": "https://github.com/rust-lang/rust/commit/0bbab7d99dde8620604fb265706dc8bff20345a7"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "d5089c5e2eba95ce5524d791650380d32c29a0c4", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/6c01c0e9b5b069ee2a61b6078058c69880a14f19/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c01c0e9b5b069ee2a61b6078058c69880a14f19/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=6c01c0e9b5b069ee2a61b6078058c69880a14f19", "patch": "@@ -1748,6 +1748,31 @@ unsafe impl<T: ?Sized> IsZero for *mut T {\n     }\n }\n \n+// `Option<&T>`, `Option<&mut T>` and `Option<Box<T>>` are guaranteed to represent `None` as null.\n+// For fat pointers, the bytes that would be the pointer metadata in the `Some` variant\n+// are padding in the `None` variant, so ignoring them and zero-initializing instead is ok.\n+\n+unsafe impl<T: ?Sized> IsZero for Option<&T> {\n+    #[inline]\n+    fn is_zero(&self) -> bool {\n+        self.is_none()\n+    }\n+}\n+\n+unsafe impl<T: ?Sized> IsZero for Option<&mut T> {\n+    #[inline]\n+    fn is_zero(&self) -> bool {\n+        self.is_none()\n+    }\n+}\n+\n+unsafe impl<T: ?Sized> IsZero for Option<Box<T>> {\n+    #[inline]\n+    fn is_zero(&self) -> bool {\n+        self.is_none()\n+    }\n+}\n+\n \n ////////////////////////////////////////////////////////////////////////////////\n // Common trait implementations for Vec"}]}