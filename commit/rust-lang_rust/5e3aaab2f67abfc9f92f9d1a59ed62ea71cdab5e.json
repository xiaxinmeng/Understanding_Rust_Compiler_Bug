{"sha": "5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlM2FhYWIyZjY3YWJmYzlmOTJmOWQxYTU5ZWQ2MmVhNzFjZGFiNWU=", "commit": {"author": {"name": "Pweaver (Paul Weaver)", "email": "paul@mordor.org", "date": "2016-09-29T02:08:44Z"}, "committer": {"name": "Pweaver (Paul Weaver)", "email": "paul@mordor.org", "date": "2016-09-29T04:03:13Z"}, "message": "#36680 add warning when compliation cache fails to hard link", "tree": {"sha": "e4c87d398b1fe2ef325107ea76467f5b6ead71dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4c87d398b1fe2ef325107ea76467f5b6ead71dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e", "html_url": "https://github.com/rust-lang/rust/commit/5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e/comments", "author": {"login": "pweaver", "id": 611620, "node_id": "MDQ6VXNlcjYxMTYyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/611620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pweaver", "html_url": "https://github.com/pweaver", "followers_url": "https://api.github.com/users/pweaver/followers", "following_url": "https://api.github.com/users/pweaver/following{/other_user}", "gists_url": "https://api.github.com/users/pweaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/pweaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pweaver/subscriptions", "organizations_url": "https://api.github.com/users/pweaver/orgs", "repos_url": "https://api.github.com/users/pweaver/repos", "events_url": "https://api.github.com/users/pweaver/events{/privacy}", "received_events_url": "https://api.github.com/users/pweaver/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pweaver", "id": 611620, "node_id": "MDQ6VXNlcjYxMTYyMA==", "avatar_url": "https://avatars.githubusercontent.com/u/611620?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pweaver", "html_url": "https://github.com/pweaver", "followers_url": "https://api.github.com/users/pweaver/followers", "following_url": "https://api.github.com/users/pweaver/following{/other_user}", "gists_url": "https://api.github.com/users/pweaver/gists{/gist_id}", "starred_url": "https://api.github.com/users/pweaver/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pweaver/subscriptions", "organizations_url": "https://api.github.com/users/pweaver/orgs", "repos_url": "https://api.github.com/users/pweaver/repos", "events_url": "https://api.github.com/users/pweaver/events{/privacy}", "received_events_url": "https://api.github.com/users/pweaver/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "86affcdf6c622278a89b73bb7f1b8ac00e970888", "url": "https://api.github.com/repos/rust-lang/rust/commits/86affcdf6c622278a89b73bb7f1b8ac00e970888", "html_url": "https://github.com/rust-lang/rust/commit/86affcdf6c622278a89b73bb7f1b8ac00e970888"}], "stats": {"total": 15, "additions": 12, "deletions": 3}, "files": [{"sha": "14e4f4219618fb95e0100d027478736f2d8d980e", "filename": "src/librustc_incremental/persist/fs.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_incremental%2Fpersist%2Ffs.rs?ref=5e3aaab2f67abfc9f92f9d1a59ed62ea71cdab5e", "patch": "@@ -234,10 +234,19 @@ pub fn prepare_session_directory(tcx: TyCtxt) -> Result<bool, ()> {\n         let print_file_copy_stats = tcx.sess.opts.debugging_opts.incremental_info;\n \n         // Try copying over all files from the source directory\n-        if copy_files(&session_dir, &source_directory, print_file_copy_stats).is_ok() {\n+        if let Ok(allows_links) = copy_files(&session_dir, &source_directory,\n+                                             print_file_copy_stats) {\n             debug!(\"successfully copied data from: {}\",\n                    source_directory.display());\n \n+            if !allows_links {\n+                tcx.sess.warn(&format!(\"Hard linking files in the incremental compilation\n+                    cache failed. Copying files instead. Consider moving the cache directory to a\n+                    file system which supports hard linking in session dir `{}`\"\n+                    , session_dir.display())\n+                    );\n+            }\n+\n             tcx.sess.init_incr_comp_session(session_dir, directory_lock);\n             return Ok(true)\n         } else {\n@@ -357,7 +366,7 @@ pub fn delete_all_session_dir_contents(sess: &Session) -> io::Result<()> {\n fn copy_files(target_dir: &Path,\n               source_dir: &Path,\n               print_stats_on_success: bool)\n-              -> Result<(), ()> {\n+              -> Result<bool, ()> {\n     // We acquire a shared lock on the lock file of the directory, so that\n     // nobody deletes it out from under us while we are reading from it.\n     let lock_file_path = lock_file_path(source_dir);\n@@ -409,7 +418,7 @@ fn copy_files(target_dir: &Path,\n         println!(\"incr. comp. session directory: {} files copied\", files_copied);\n     }\n \n-    Ok(())\n+    Ok(files_linked > 0 || files_copied == 0)\n }\n \n /// Generate unique directory path of the form:"}]}