{"sha": "b775fa285c985821f38f09c25507d80ee793ecfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3NzVmYTI4NWM5ODU4MjFmMzhmMDljMjU1MDdkODBlZTc5M2VjZmQ=", "commit": {"author": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-27T15:32:31Z"}, "committer": {"name": "Erlend Tobiassen", "email": "erlend.tobiassen@gmail.com", "date": "2019-01-27T15:32:31Z"}, "message": "Revert parts of \"Test non standard crate root\"\n\nPrefer cursor position over file_map", "tree": {"sha": "fc215f17910db6265072bb3b81a29ac034d53a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc215f17910db6265072bb3b81a29ac034d53a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b775fa285c985821f38f09c25507d80ee793ecfd", "comment_count": 0, "verification": {"verified": false, "reason": "unknown_key", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJPBAABCgA5FiEEve4ZOr7ty1/KyouLtIuFNqj1hbIFAlxNz0MbHGVybGVuZC50\nb2JpYXNzZW5AZ21haWwuY29tAAoJELSLhTao9YWy9o4P/0jFmbnkfsMixBEUpy3n\n4INqZcZoQb/cGJ6jbB/PCfHlv5v3nnowyXusa7qDlHKgaGxMuoM6QqiYB/mAIwKr\nYDYYOWU5x/DgIEa2VR4gNNugvTQ3fnVGgfSitRcLlb6UruM4zvGXQxulNLatTgue\nhp3wNZPaWqc5abdMD4cpwDIfJ2uN1qfXYbHEQ7sL61R3rzKrxkImDJ13puCbm3s6\nhTXCbd0BjYJyC5QkMdrzajt8DAND6FmohF4LboDi1jart+tyMTdPFawwhKhBnxEY\not8GhCFNES07o9k+pu+RRxJWXNEGalkyAFTFOZSILKvSkWI3+Ub6FSrHeeCGiTTK\n2W503v8tyIS1Cg5vCEuMwpFAgpByAf5Ez9KcoP0E0dibLTLJ2yuGt0417TuFG3k0\nkjkGdr2b75RSWnbSl8On1NcMkI43tY9N3hEoUFCtKXGsv7boBbHFOBiP8u8HGD1F\nz23uVhGFhsUZSLSayFX95XHdBGlTvUpMYxK7FijJQvnPRrKFjHizCzma3VQEvvuV\nKj/kmUBVRHsYwB5/Yp3Ev6nTMrPmrch7cWamLJih8l/Wpu1BF26hXU0w5xjT6/yR\nMspICr0wF2WEC58BUaDHR8Y+09BVcFxcYDW8GcBA7A2VCUHFc1WAny03OqTmFzbX\nkcnibccywlbItLT9rd82KIWQ\n=xCxg\n-----END PGP SIGNATURE-----", "payload": "tree fc215f17910db6265072bb3b81a29ac034d53a14\nparent b149882d198818d6302c2a6318d68c4e0b4380ff\nauthor Erlend Tobiassen <erlend.tobiassen@gmail.com> 1548603151 +0100\ncommitter Erlend Tobiassen <erlend.tobiassen@gmail.com> 1548603151 +0100\n\nRevert parts of \"Test non standard crate root\"\n\nPrefer cursor position over file_map\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b775fa285c985821f38f09c25507d80ee793ecfd", "html_url": "https://github.com/rust-lang/rust/commit/b775fa285c985821f38f09c25507d80ee793ecfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b775fa285c985821f38f09c25507d80ee793ecfd/comments", "author": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "regiontog", "id": 9137819, "node_id": "MDQ6VXNlcjkxMzc4MTk=", "avatar_url": "https://avatars.githubusercontent.com/u/9137819?v=4", "gravatar_id": "", "url": "https://api.github.com/users/regiontog", "html_url": "https://github.com/regiontog", "followers_url": "https://api.github.com/users/regiontog/followers", "following_url": "https://api.github.com/users/regiontog/following{/other_user}", "gists_url": "https://api.github.com/users/regiontog/gists{/gist_id}", "starred_url": "https://api.github.com/users/regiontog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/regiontog/subscriptions", "organizations_url": "https://api.github.com/users/regiontog/orgs", "repos_url": "https://api.github.com/users/regiontog/repos", "events_url": "https://api.github.com/users/regiontog/events{/privacy}", "received_events_url": "https://api.github.com/users/regiontog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b149882d198818d6302c2a6318d68c4e0b4380ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/b149882d198818d6302c2a6318d68c4e0b4380ff", "html_url": "https://github.com/rust-lang/rust/commit/b149882d198818d6302c2a6318d68c4e0b4380ff"}], "stats": {"total": 24, "additions": 9, "deletions": 15}, "files": [{"sha": "7da15eca0140eb596e0c694c8bb80e130bb85440", "filename": "crates/ra_hir/src/mock.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b775fa285c985821f38f09c25507d80ee793ecfd/crates%2Fra_hir%2Fsrc%2Fmock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b775fa285c985821f38f09c25507d80ee793ecfd/crates%2Fra_hir%2Fsrc%2Fmock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmock.rs?ref=b775fa285c985821f38f09c25507d80ee793ecfd", "patch": "@@ -2,8 +2,7 @@ use std::{sync::Arc, panic};\n \n use parking_lot::Mutex;\n use ra_db::{\n-    mock::FileMap, CheckCanceled, CrateGraph, FileId, FilePosition, SourceDatabase,\n-    SourceRoot, SourceRootId, salsa\n+    CheckCanceled, FilePosition, FileId, CrateGraph, SourceRoot, SourceRootId, SourceDatabase, salsa,\n };\n use relative_path::RelativePathBuf;\n use test_utils::{parse_fixture, CURSOR_MARKER, extract_offset};\n@@ -18,7 +17,7 @@ pub(crate) struct MockDatabase {\n     events: Mutex<Option<Vec<salsa::Event<MockDatabase>>>>,\n     runtime: salsa::Runtime<MockDatabase>,\n     interner: Arc<HirInterner>,\n-    file_map: Arc<FileMap>,\n+    file_counter: u32,\n }\n \n impl panic::RefUnwindSafe for MockDatabase {}\n@@ -44,10 +43,6 @@ impl MockDatabase {\n         (db, position)\n     }\n \n-    pub(crate) fn file_id(&self, file: &str) -> FileId {\n-        self.file_map.file_id(file)\n-    }\n-\n     fn from_fixture(fixture: &str) -> (MockDatabase, SourceRoot, Option<FilePosition>) {\n         let mut db = MockDatabase::default();\n \n@@ -94,7 +89,8 @@ impl MockDatabase {\n         let is_crate_root = path == \"/lib.rs\" || path == \"/main.rs\";\n \n         let path = RelativePathBuf::from_path(&path[1..]).unwrap();\n-        let file_id = Arc::make_mut(&mut self.file_map).add(path.clone());\n+        let file_id = FileId(self.file_counter);\n+        self.file_counter += 1;\n         let text = Arc::new(text.to_string());\n         self.set_file_text(file_id, text);\n         self.set_file_relative_path(file_id, path.clone());\n@@ -141,7 +137,7 @@ impl Default for MockDatabase {\n             events: Default::default(),\n             runtime: salsa::Runtime::default(),\n             interner: Default::default(),\n-            file_map: Default::default(),\n+            file_counter: 0,\n         };\n         db.set_crate_graph(Default::default());\n         db\n@@ -154,7 +150,7 @@ impl salsa::ParallelDatabase for MockDatabase {\n             events: Default::default(),\n             runtime: self.runtime.snapshot(self),\n             interner: Arc::clone(&self.interner),\n-            file_map: Arc::clone(&self.file_map),\n+            file_counter: self.file_counter,\n         })\n     }\n }"}, {"sha": "3d420467c18d918d7d4bee5a0a8dfc95e2185460", "filename": "crates/ra_hir/src/nameres/tests.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b775fa285c985821f38f09c25507d80ee793ecfd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b775fa285c985821f38f09c25507d80ee793ecfd/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Ftests.rs?ref=b775fa285c985821f38f09c25507d80ee793ecfd", "patch": "@@ -19,11 +19,12 @@ fn item_map(fixture: &str) -> (Arc<ItemMap>, ModuleId) {\n     (db.item_map(krate.crate_id), module_id)\n }\n \n-fn item_map_custom_crate_root(fixture: &str, root: &str) -> (Arc<ItemMap>, ModuleId) {\n+/// Sets the crate root to the file of the cursor marker\n+fn item_map_custom_crate_root(fixture: &str) -> (Arc<ItemMap>, ModuleId) {\n     let (mut db, pos) = MockDatabase::with_position(fixture);\n \n     let mut crate_graph = CrateGraph::default();\n-    crate_graph.add_crate_root(db.file_id(root));\n+    crate_graph.add_crate_root(pos.file_id);\n     db.set_crate_graph(Arc::new(crate_graph));\n \n     let module = crate::source_binder::module_from_position(&db, pos).unwrap();\n@@ -152,14 +153,11 @@ fn module_resolution_works_for_non_standard_filenames() {\n         \"\n         //- /my_library.rs\n         mod foo;\n-\n         use self::foo::Bar;\n         <|>\n-\n         //- /foo/mod.rs\n         pub struct Bar;\n     \",\n-        \"/my_library.rs\",\n     );\n     check_module_item_map(\n         &item_map,"}]}