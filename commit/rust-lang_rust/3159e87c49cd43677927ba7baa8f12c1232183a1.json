{"sha": "3159e87c49cd43677927ba7baa8f12c1232183a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNTllODdjNDljZDQzNjc3OTI3YmE3YmFhOGYxMmMxMjMyMTgzYTE=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-09T11:36:36Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-09T11:36:36Z"}, "message": "vscode: refactor levels of code nesting and string literals quotes", "tree": {"sha": "d866dc3744f5c6fe01950b15f6a79f5513791994", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d866dc3744f5c6fe01950b15f6a79f5513791994"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3159e87c49cd43677927ba7baa8f12c1232183a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3159e87c49cd43677927ba7baa8f12c1232183a1", "html_url": "https://github.com/rust-lang/rust/commit/3159e87c49cd43677927ba7baa8f12c1232183a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3159e87c49cd43677927ba7baa8f12c1232183a1/comments", "author": null, "committer": null, "parents": [{"sha": "a3e3fba7bf9cbaa51d39ecfd2b111472fdbf4cb3", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3e3fba7bf9cbaa51d39ecfd2b111472fdbf4cb3", "html_url": "https://github.com/rust-lang/rust/commit/a3e3fba7bf9cbaa51d39ecfd2b111472fdbf4cb3"}], "stats": {"total": 56, "additions": 30, "deletions": 26}, "files": [{"sha": "e571cbc98ba644035f018eef38e840287aca844d", "filename": "editors/code/src/installation/language_server.ts", "status": "modified", "additions": 30, "deletions": 26, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/3159e87c49cd43677927ba7baa8f12c1232183a1/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts", "raw_url": "https://github.com/rust-lang/rust/raw/3159e87c49cd43677927ba7baa8f12c1232183a1/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Finstallation%2Flanguage_server.ts?ref=3159e87c49cd43677927ba7baa8f12c1232183a1", "patch": "@@ -71,44 +71,48 @@ export async function ensureLanguageServerBinary(\n             if (isBinaryAvailable(langServerSource.path)) {\n                 return langServerSource.path;\n             }\n+\n             vscode.window.showErrorMessage(\n                 `Unable to run ${langServerSource.path} binary. ` +\n-                \"To use the pre-built language server, set `rust-analyzer.raLspServerPath` \" +\n+                `To use the pre-built language server, set \"rust-analyzer.raLspServerPath\" ` +\n                 \"value to `null` or remove it from the settings to use it by default.\"\n             );\n             return null;\n         }\n         case BinarySource.Type.GithubRelease: {\n             const prebuiltBinaryPath = path.join(langServerSource.dir, langServerSource.file);\n \n-            if (!isBinaryAvailable(prebuiltBinaryPath)) {\n-                const userResponse = await vscode.window.showInformationMessage(\n-                    \"Language server binary for rust-analyzer was not found. \" +\n-                    \"Do you want to download it now?\",\n-                    \"Download now\", \"Cancel\"\n-                );\n-                if (userResponse !== \"Download now\") return null;\n-\n-                try {\n-                    await downloadLatestLanguageServer(langServerSource);\n-                } catch (err) {\n-                    await vscode.window.showErrorMessage(\n-                        `Failed to download language server from ${langServerSource.repo.name} ` +\n-                        `GitHub repository: ${err.message}`\n-                    );\n-                    return null;\n-                }\n-\n-\n-                assert(\n-                    isBinaryAvailable(prebuiltBinaryPath),\n-                    \"Downloaded language server binary is not functional\"\n-                );\n+            if (isBinaryAvailable(prebuiltBinaryPath)) {\n+                return prebuiltBinaryPath;\n+            }\n \n-                vscode.window.showInformationMessage(\n-                    \"Rust analyzer language server was successfully installed \ud83e\udd80\"\n+            const userResponse = await vscode.window.showInformationMessage(\n+                \"Language server binary for rust-analyzer was not found. \" +\n+                \"Do you want to download it now?\",\n+                \"Download now\", \"Cancel\"\n+            );\n+            if (userResponse !== \"Download now\") return null;\n+\n+            try {\n+                await downloadLatestLanguageServer(langServerSource);\n+            } catch (err) {\n+                await vscode.window.showErrorMessage(\n+                    `Failed to download language server from ${langServerSource.repo.name} ` +\n+                    `GitHub repository: ${err.message}`\n                 );\n+                return null;\n             }\n+\n+\n+            assert(\n+                isBinaryAvailable(prebuiltBinaryPath),\n+                \"Downloaded language server binary is not functional\"\n+            );\n+\n+            vscode.window.showInformationMessage(\n+                \"Rust analyzer language server was successfully installed \ud83e\udd80\"\n+            );\n+\n             return prebuiltBinaryPath;\n         }\n     }"}]}