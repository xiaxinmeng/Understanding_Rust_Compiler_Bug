{"sha": "3de807a00baac8139dbdcea5f893d9346ba80adc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkZTgwN2EwMGJhYWM4MTM5ZGJkY2VhNWY4OTNkOTM0NmJhODBhZGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-07T07:34:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-07T07:34:04Z"}, "message": "Auto merge of #43699 - GuillaumeGomez:e0623, r=eddyb\n\nAdd missing error code for private method", "tree": {"sha": "b3872801dbac546f79362274dac2b7042c68c49a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3872801dbac546f79362274dac2b7042c68c49a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3de807a00baac8139dbdcea5f893d9346ba80adc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3de807a00baac8139dbdcea5f893d9346ba80adc", "html_url": "https://github.com/rust-lang/rust/commit/3de807a00baac8139dbdcea5f893d9346ba80adc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3de807a00baac8139dbdcea5f893d9346ba80adc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba1d065ffa3606b61201ef69fec3ad0bfc5b2f7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba1d065ffa3606b61201ef69fec3ad0bfc5b2f7b", "html_url": "https://github.com/rust-lang/rust/commit/ba1d065ffa3606b61201ef69fec3ad0bfc5b2f7b"}, {"sha": "08188c3c9267740aaff42a1d33acad394d807dd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/08188c3c9267740aaff42a1d33acad394d807dd1", "html_url": "https://github.com/rust-lang/rust/commit/08188c3c9267740aaff42a1d33acad394d807dd1"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "53da9e19ee0cdff01d7a698433242e2b80015a35", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3de807a00baac8139dbdcea5f893d9346ba80adc/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de807a00baac8139dbdcea5f893d9346ba80adc/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=3de807a00baac8139dbdcea5f893d9346ba80adc", "patch": "@@ -312,8 +312,8 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             }\n \n             MethodError::PrivateMatch(def) => {\n-                let msg = format!(\"{} `{}` is private\", def.kind_name(), item_name);\n-                self.tcx.sess.span_err(span, &msg);\n+                struct_span_err!(self.tcx.sess, span, E0624,\n+                                 \"{} `{}` is private\", def.kind_name(), item_name).emit();\n             }\n \n             MethodError::IllegalSizedBound(candidates) => {"}, {"sha": "ab1c098fd02486d645f1604c4b29abc779b8a3cb", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 56, "deletions": 0, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/3de807a00baac8139dbdcea5f893d9346ba80adc/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de807a00baac8139dbdcea5f893d9346ba80adc/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=3de807a00baac8139dbdcea5f893d9346ba80adc", "patch": "@@ -4644,6 +4644,62 @@ whose implementation is handled specially by the compiler. In order to fix this\n error, just declare a function.\n \"##,\n \n+E0624: r##\"\n+A private item was used outside of its scope.\n+\n+Erroneous code example:\n+\n+```compile_fail,E0624\n+mod inner {\n+    pub struct Foo;\n+\n+    impl Foo {\n+        fn method(&self) {}\n+    }\n+}\n+\n+let foo = inner::Foo;\n+foo.method(); // error: method `method` is private\n+```\n+\n+Two possibilities are available to solve this issue:\n+\n+1. Only use the item in the scope it has been defined:\n+\n+```\n+mod inner {\n+    pub struct Foo;\n+\n+    impl Foo {\n+        fn method(&self) {}\n+    }\n+\n+    pub fn call_method(foo: &Foo) { // We create a public function.\n+        foo.method(); // Which calls the item.\n+    }\n+}\n+\n+let foo = inner::Foo;\n+inner::call_method(&foo); // And since the function is public, we can call the\n+                          // method through it.\n+```\n+\n+2. Make the item public:\n+\n+```\n+mod inner {\n+    pub struct Foo;\n+\n+    impl Foo {\n+        pub fn method(&self) {} // It's now public.\n+    }\n+}\n+\n+let foo = inner::Foo;\n+foo.method(); // Ok!\n+```\n+\"##,\n+\n }\n \n register_diagnostics! {"}, {"sha": "952e0b31c4ca1458ccf4f0e15da768793dca1aa5", "filename": "src/test/compile-fail/E0624.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3de807a00baac8139dbdcea5f893d9346ba80adc/src%2Ftest%2Fcompile-fail%2FE0624.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3de807a00baac8139dbdcea5f893d9346ba80adc/src%2Ftest%2Fcompile-fail%2FE0624.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2FE0624.rs?ref=3de807a00baac8139dbdcea5f893d9346ba80adc", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+mod inner {\n+    pub struct Foo;\n+\n+    impl Foo {\n+        fn method(&self) {}\n+    }\n+}\n+\n+fn main() {\n+    let foo = inner::Foo;\n+    foo.method(); //~ ERROR method `method` is private [E0624]\n+}"}]}