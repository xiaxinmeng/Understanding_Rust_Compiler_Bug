{"sha": "0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NDFkNWI2ZDMwYTZmNjZiZmQ4ZWMxZmYwNmJjNzE3MDU2OWU2YTE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-08T09:22:52Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-09T18:13:46Z"}, "message": "0-offset is also not always okay", "tree": {"sha": "6da7d1a9ad9501f9828cd6e35ce75b47476c0ce8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6da7d1a9ad9501f9828cd6e35ce75b47476c0ce8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1", "html_url": "https://github.com/rust-lang/rust/commit/0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "edf28fa227c68267153dc42119f3170f46b14389", "url": "https://api.github.com/repos/rust-lang/rust/commits/edf28fa227c68267153dc42119f3170f46b14389", "html_url": "https://github.com/rust-lang/rust/commit/edf28fa227c68267153dc42119f3170f46b14389"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "46937b1c8ce41567090688eb6b04ff07889ae431", "filename": "tests/compile-fail/ptr_offset_ptr_plus_0.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1/tests%2Fcompile-fail%2Fptr_offset_ptr_plus_0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1/tests%2Fcompile-fail%2Fptr_offset_ptr_plus_0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fptr_offset_ptr_plus_0.rs?ref=0641d5b6d30a6f66bfd8ec1ff06bc7170569e6a1", "patch": "@@ -0,0 +1,7 @@\n+// error-pattern: outside bounds of allocation\n+\n+fn main() {\n+    let x = Box::into_raw(Box::new(0u32));\n+    let x = x.wrapping_offset(8); // okay, this has no inbounds tag\n+    let _x = unsafe { x.offset(0) }; // UB despite offset 0, the pointer is not inbounds of the only object it can point to\n+}"}]}