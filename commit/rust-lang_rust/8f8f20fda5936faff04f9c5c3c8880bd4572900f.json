{"sha": "8f8f20fda5936faff04f9c5c3c8880bd4572900f", "node_id": "C_kwDOAAsO6NoAKDhmOGYyMGZkYTU5MzZmYWZmMDRmOWM1YzNjODg4MGJkNDU3MjkwMGY", "commit": {"author": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-21T15:07:42Z"}, "committer": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-21T15:07:42Z"}, "message": "fix: lookup", "tree": {"sha": "f017e52b89d24b68d19e35e126e9090ab9f40c76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f017e52b89d24b68d19e35e126e9090ab9f40c76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f8f20fda5936faff04f9c5c3c8880bd4572900f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f8f20fda5936faff04f9c5c3c8880bd4572900f", "html_url": "https://github.com/rust-lang/rust/commit/8f8f20fda5936faff04f9c5c3c8880bd4572900f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f8f20fda5936faff04f9c5c3c8880bd4572900f/comments", "author": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a58f7acc97198af1e2d511a90609be9a8b67882b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a58f7acc97198af1e2d511a90609be9a8b67882b", "html_url": "https://github.com/rust-lang/rust/commit/a58f7acc97198af1e2d511a90609be9a8b67882b"}], "stats": {"total": 37, "additions": 26, "deletions": 11}, "files": [{"sha": "ae09339e9516a2814634e410f36f8fd78d6589e3", "filename": "crates/ide_completion/src/completions/fn_param.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8f8f20fda5936faff04f9c5c3c8880bd4572900f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f8f20fda5936faff04f9c5c3c8880bd4572900f/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Ffn_param.rs?ref=8f8f20fda5936faff04f9c5c3c8880bd4572900f", "patch": "@@ -30,11 +30,10 @@ pub(crate) fn complete_fn_param(acc: &mut Completions, ctx: &CompletionContext)\n         let mk_item = |label: &str, range: TextRange| {\n             CompletionItem::new(CompletionItemKind::Binding, range, label)\n         };\n-        let mut item = match &comma_wrapper {\n-            Some((fmt, range)) => mk_item(&fmt(label), *range),\n-            None => mk_item(label, ctx.source_range()),\n+        let item = match &comma_wrapper {\n+            Some((fmt, range, lookup)) => mk_item(&fmt(label), *range).lookup_by(lookup).to_owned(),\n+            None => mk_item(label, ctx.source_range()).lookup_by(lookup).to_owned(),\n         };\n-        item.lookup_by(lookup);\n         item.add_to(acc)\n     };\n \n@@ -162,7 +161,7 @@ fn should_add_self_completions(ctx: &CompletionContext, param_list: &ast::ParamL\n     inside_impl && no_params\n }\n \n-fn comma_wrapper(ctx: &CompletionContext) -> Option<(impl Fn(&str) -> String, TextRange)> {\n+fn comma_wrapper(ctx: &CompletionContext) -> Option<(impl Fn(&str) -> String, TextRange, String)> {\n     let param = ctx.token.ancestors().find(|node| node.kind() == SyntaxKind::PARAM)?;\n \n     let next_token_kind = {\n@@ -184,5 +183,9 @@ fn comma_wrapper(ctx: &CompletionContext) -> Option<(impl Fn(&str) -> String, Te\n         matches!(prev_token_kind, SyntaxKind::COMMA | SyntaxKind::L_PAREN | SyntaxKind::PIPE);\n     let leading = if has_leading_comma { \"\" } else { \", \" };\n \n-    Some((move |label: &_| (format!(\"{}{}{}\", leading, label, trailing)), param.text_range()))\n+    Some((\n+        move |label: &_| (format!(\"{}{}{}\", leading, label, trailing)),\n+        param.text_range(),\n+        format!(\"{}{}\", leading, param.text()),\n+    ))\n }"}, {"sha": "bd6833567c3346ef400b54de757c5c6143c42279", "filename": "crates/ide_completion/src/render/function.rs", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/8f8f20fda5936faff04f9c5c3c8880bd4572900f/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f8f20fda5936faff04f9c5c3c8880bd4572900f/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Frender%2Ffunction.rs?ref=8f8f20fda5936faff04f9c5c3c8880bd4572900f", "patch": "@@ -570,7 +570,7 @@ fn main() {\n     fn complete_fn_param() {\n         // has mut kw\n         check_edit(\n-            \"mut bar\",\n+            \"mut ba\",\n             r#\"\n fn f(foo: (), mut bar: u32) {}\n fn g(foo: (), mut ba$0)\n@@ -583,7 +583,7 @@ fn g(foo: (), mut bar: u32)\n \n         // has type param\n         check_edit(\n-            \"mut bar\",\n+            \"mut ba: u32\",\n             r#\"\n fn g(foo: (), mut ba$0: u32)\n fn f(foo: (), mut bar: u32) {}\n@@ -599,7 +599,7 @@ fn f(foo: (), mut bar: u32) {}\n     fn complete_fn_mut_param_add_comma() {\n         // add leading and trailing comma\n         check_edit(\n-            \"mut bar\",\n+            \", mut ba\",\n             r#\"\n fn f(foo: (), mut bar: u32) {}\n fn g(foo: ()mut ba$0 baz: ())\n@@ -614,7 +614,7 @@ fn g(foo: (), mut bar: u32, baz: ())\n     #[test]\n     fn complete_fn_mut_param_has_attribute() {\n         check_edit(\n-            \"mut bar\",\n+            \"mut ba\",\n             r#\"\n fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n fn g(foo: (), mut ba$0)\n@@ -626,14 +626,26 @@ fn g(foo: (), #[baz = \"qux\"] mut bar: u32)\n         );\n \n         check_edit(\n-            \"mut bar\",\n+            r#\"#[baz = \"qux\"] mut ba\"#,\n             r#\"\n fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n fn g(foo: (), #[baz = \"qux\"] mut ba$0)\n \"#,\n             r#\"\n fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n fn g(foo: (), #[baz = \"qux\"] mut bar: u32)\n+\"#,\n+        );\n+\n+        check_edit(\n+            r#\", #[baz = \"qux\"] mut ba\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: ()#[baz = \"qux\"] mut ba$0)\n+\"#,\n+            r#\"\n+fn f(foo: (), #[baz = \"qux\"] mut bar: u32) {}\n+fn g(foo: (), #[baz = \"qux\"] mut bar: u32)\n \"#,\n         );\n     }"}]}