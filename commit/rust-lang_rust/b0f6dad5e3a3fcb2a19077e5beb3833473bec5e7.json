{"sha": "b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZjZkYWQ1ZTNhM2ZjYjJhMTkwNzdlNWJlYjM4MzM0NzNiZWM1ZTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-21T22:59:57Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-03-21T22:59:57Z"}, "message": "rustc: Add a function to record region bindings", "tree": {"sha": "0125f618604ca16f9838179c0509df7cf7e161cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0125f618604ca16f9838179c0509df7cf7e161cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7", "html_url": "https://github.com/rust-lang/rust/commit/b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8ab0c1b3b2b6af4e9efa96773926bfa2f58f016", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8ab0c1b3b2b6af4e9efa96773926bfa2f58f016", "html_url": "https://github.com/rust-lang/rust/commit/c8ab0c1b3b2b6af4e9efa96773926bfa2f58f016"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "8a7df2c56932f79ea1ce567f4b94014ec9fcf355", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=b0f6dad5e3a3fcb2a19077e5beb3833473bec5e7", "patch": "@@ -1690,6 +1690,34 @@ mod unify {\n         ret nxt(mk_var(cx.tcx, key));\n     }\n \n+    fn record_region_binding<T:copy>(\n+        cx: @uctxt, key: uint,\n+        r: region, base_mt: mt, variance: variance,\n+        nxt: fn(t) -> ures<T>) -> ures<T> {\n+\n+        let rb = alt cx.st {\n+            in_region_bindings(_, rb) { rb }\n+            in_bindings(_) | precise { fail; }\n+        };\n+\n+        ufind::grow(rb.sets, key + 1u);\n+        let root = ufind::find(rb.sets, key);\n+        let mut result_region = r;\n+        alt smallintmap::find(rb.regions, root) {\n+          some(old_region) {\n+            alt unify_regions(cx, old_region, r, variance, {|v| ok(v)}) {\n+              ok(unified_region) { result_region = unified_region; }\n+              err(e) { ret err(e); }\n+            }\n+          }\n+          none {/* fall through */ }\n+        }\n+        smallintmap::insert(rb.regions, root, result_region);\n+\n+        // FIXME: This should be re_var instead.\n+        ret nxt(mk_rptr(cx.tcx, re_param(key), base_mt));\n+    }\n+\n     // Simple structural type comparison.\n     fn struct_cmp<T:copy>(\n         cx: @uctxt, expected: t, actual: t,"}]}