{"sha": "2d3c369d87af9f8c7c3a718882762bc8896d5a31", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkM2MzNjlkODdhZjlmOGM3YzNhNzE4ODgyNzYyYmM4ODk2ZDVhMzE=", "commit": {"author": {"name": "Benjamin Sago", "email": "ogham@bsago.me", "date": "2018-05-29T08:06:13Z"}, "committer": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2018-06-25T08:33:54Z"}, "message": "Link the docs of panic!() and compile_error!()\n\nFixes #47275. These two macros are similar, but different, and could do with documentation links to each other.", "tree": {"sha": "65dbb684de10ff5c43e35be6544942ac5461afc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65dbb684de10ff5c43e35be6544942ac5461afc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d3c369d87af9f8c7c3a718882762bc8896d5a31", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2.0.22 (GNU/Linux)\n\niQEcBAABAgAGBQJbMKjzAAoJEOjBBC3RYkUZlzsH/3xToamY5QnwAmx+dhYcAAQ+\nZuXcU7EPTJVgw9IhN7Nx2SsWwNvb+zCpBAWxjfF0D2rb/tkxwtOMNPTsEch3/fL9\nncBTlwplHiy7ZO72/k9Rv9FdQEZR2DMVeP+d8bAIZvlQTd2/3K/5dY2FwMX99Q0Z\np5OiBf/iZDBhjfjWo7RFshXZwOadf1CN6poi0XfFmXSdGr74JPhbnDEENuhsHOqe\n/votMuJ/9Pf4WB2Zs7u4oW2Fr8zSHCXExYJ3111V5brqp2fYMVN+cZFToiCV3fOn\nwhs8sEs8l2GY44J6SpyIH1+3aXtkVUqyGm0C/WhYiYpCd7eWbhjtCw6+ibmbE18=\n=oaYK\n-----END PGP SIGNATURE-----", "payload": "tree 65dbb684de10ff5c43e35be6544942ac5461afc3\nparent 01cc982e936120acb0424e41de14e42ba2d88c6f\nauthor Benjamin Sago <ogham@bsago.me> 1527581173 +0200\ncommitter Pietro Albini <pietro@pietroalbini.org> 1529915634 +0200\n\nLink the docs of panic!() and compile_error!()\n\nFixes #47275. These two macros are similar, but different, and could do with documentation links to each other.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d3c369d87af9f8c7c3a718882762bc8896d5a31", "html_url": "https://github.com/rust-lang/rust/commit/2d3c369d87af9f8c7c3a718882762bc8896d5a31", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d3c369d87af9f8c7c3a718882762bc8896d5a31/comments", "author": {"login": "ogham", "id": 503760, "node_id": "MDQ6VXNlcjUwMzc2MA==", "avatar_url": "https://avatars.githubusercontent.com/u/503760?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ogham", "html_url": "https://github.com/ogham", "followers_url": "https://api.github.com/users/ogham/followers", "following_url": "https://api.github.com/users/ogham/following{/other_user}", "gists_url": "https://api.github.com/users/ogham/gists{/gist_id}", "starred_url": "https://api.github.com/users/ogham/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ogham/subscriptions", "organizations_url": "https://api.github.com/users/ogham/orgs", "repos_url": "https://api.github.com/users/ogham/repos", "events_url": "https://api.github.com/users/ogham/events{/privacy}", "received_events_url": "https://api.github.com/users/ogham/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01cc982e936120acb0424e41de14e42ba2d88c6f", "url": "https://api.github.com/repos/rust-lang/rust/commits/01cc982e936120acb0424e41de14e42ba2d88c6f", "html_url": "https://github.com/rust-lang/rust/commit/01cc982e936120acb0424e41de14e42ba2d88c6f"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "935102f8355959fd275455cb03ed8e5f84093dd4", "filename": "src/libstd/macros.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2d3c369d87af9f8c7c3a718882762bc8896d5a31/src%2Flibstd%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d3c369d87af9f8c7c3a718882762bc8896d5a31/src%2Flibstd%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fmacros.rs?ref=2d3c369d87af9f8c7c3a718882762bc8896d5a31", "patch": "@@ -38,10 +38,13 @@\n /// The multi-argument form of this macro panics with a string and has the\n /// [`format!`] syntax for building a string.\n ///\n+/// See also the macro [`compile_error!`], for raising errors during compilation.\n+///\n /// [runwrap]: ../std/result/enum.Result.html#method.unwrap\n /// [`Option`]: ../std/option/enum.Option.html#method.unwrap\n /// [`Result`]: ../std/result/enum.Result.html\n /// [`format!`]: ../std/macro.format.html\n+/// [`compile_error!`]: ../std/macro.compile_error.html\n /// [book]: ../book/second-edition/ch09-01-unrecoverable-errors-with-panic.html\n ///\n /// # Current implementation\n@@ -305,7 +308,8 @@ pub mod builtin {\n     /// Unconditionally causes compilation to fail with the given error message when encountered.\n     ///\n     /// This macro should be used when a crate uses a conditional compilation strategy to provide\n-    /// better error messages for erroneous conditions.\n+    /// better error messages for erroneous conditions. It's the compiler-level form of [`panic!`],\n+    /// which emits an error at *runtime*, rather than during compilation.\n     ///\n     /// # Examples\n     ///\n@@ -332,6 +336,8 @@ pub mod builtin {\n     /// #[cfg(not(any(feature = \"foo\", feature = \"bar\")))]\n     /// compile_error!(\"Either feature \\\"foo\\\" or \\\"bar\\\" must be enabled for this crate.\")\n     /// ```\n+    ///\n+    /// [`panic!`]: ../std/macro.panic.html\n     #[stable(feature = \"compile_error_macro\", since = \"1.20.0\")]\n     #[macro_export]\n     macro_rules! compile_error {"}]}