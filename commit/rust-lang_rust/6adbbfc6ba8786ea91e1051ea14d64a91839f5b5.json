{"sha": "6adbbfc6ba8786ea91e1051ea14d64a91839f5b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZGJiZmM2YmE4Nzg2ZWE5MWUxMDUxZWExNGQ2NGE5MTgzOWY1YjU=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-12T20:22:29Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2017-03-14T13:30:18Z"}, "message": "Add doc example for `OsString::into_boxed_os_str`.", "tree": {"sha": "81bd4ea257bb69a4d82aec3fa422526d8e070db9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81bd4ea257bb69a4d82aec3fa422526d8e070db9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6adbbfc6ba8786ea91e1051ea14d64a91839f5b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6adbbfc6ba8786ea91e1051ea14d64a91839f5b5", "html_url": "https://github.com/rust-lang/rust/commit/6adbbfc6ba8786ea91e1051ea14d64a91839f5b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6adbbfc6ba8786ea91e1051ea14d64a91839f5b5/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bda57dbc059a15222173b40a5e4d7e5579adcfec", "url": "https://api.github.com/repos/rust-lang/rust/commits/bda57dbc059a15222173b40a5e4d7e5579adcfec", "html_url": "https://github.com/rust-lang/rust/commit/bda57dbc059a15222173b40a5e4d7e5579adcfec"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "b0f79f9a395a67a7584269764c23aeca77b04c64", "filename": "src/libstd/ffi/os_str.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6adbbfc6ba8786ea91e1051ea14d64a91839f5b5/src%2Flibstd%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6adbbfc6ba8786ea91e1051ea14d64a91839f5b5/src%2Flibstd%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fos_str.rs?ref=6adbbfc6ba8786ea91e1051ea14d64a91839f5b5", "patch": "@@ -248,6 +248,18 @@ impl OsString {\n     }\n \n     /// Converts this `OsString` into a boxed `OsStr`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(into_boxed_os_str)]\n+    ///\n+    /// use std::ffi::{OsString, OsStr};\n+    ///\n+    /// let s = OsString::from(\"hello\");\n+    ///\n+    /// let b: Box<OsStr> = s.into_boxed_os_str();\n+    /// ```\n     #[unstable(feature = \"into_boxed_os_str\", issue = \"0\")]\n     pub fn into_boxed_os_str(self) -> Box<OsStr> {\n         unsafe { mem::transmute(self.inner.into_box()) }"}]}