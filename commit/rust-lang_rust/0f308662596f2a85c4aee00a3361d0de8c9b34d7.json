{"sha": "0f308662596f2a85c4aee00a3361d0de8c9b34d7", "node_id": "C_kwDOAAsO6NoAKDBmMzA4NjYyNTk2ZjJhODVjNGFlZTAwYTMzNjFkMGRlOGM5YjM0ZDc", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-13T13:50:21Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-16T07:07:44Z"}, "message": "Add a query for checking whether a function is an intrinsic.", "tree": {"sha": "cf4af410dc896e1fcfc7dc8e21d7260588d51174", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf4af410dc896e1fcfc7dc8e21d7260588d51174"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f308662596f2a85c4aee00a3361d0de8c9b34d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f308662596f2a85c4aee00a3361d0de8c9b34d7", "html_url": "https://github.com/rust-lang/rust/commit/0f308662596f2a85c4aee00a3361d0de8c9b34d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f308662596f2a85c4aee00a3361d0de8c9b34d7/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31825326e5bb0a19bfc2f1c2b862787c43c0ee5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/31825326e5bb0a19bfc2f1c2b862787c43c0ee5f", "html_url": "https://github.com/rust-lang/rust/commit/31825326e5bb0a19bfc2f1c2b862787c43c0ee5f"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "66d373a1bf81a79506dea1c10b526c88c18cb8c1", "filename": "clippy_utils/src/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0f308662596f2a85c4aee00a3361d0de8c9b34d7/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f308662596f2a85c4aee00a3361d0de8c9b34d7/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fqualify_min_const_fn.rs?ref=0f308662596f2a85c4aee00a3361d0de8c9b34d7", "patch": "@@ -14,7 +14,6 @@ use rustc_middle::ty::{self, adjustment::PointerCast, Ty, TyCtxt};\n use rustc_semver::RustcVersion;\n use rustc_span::symbol::sym;\n use rustc_span::Span;\n-use rustc_target::spec::abi::Abi::RustIntrinsic;\n use std::borrow::Cow;\n \n type McfResult = Result<(), (Span, Cow<'static, str>)>;\n@@ -323,7 +322,7 @@ fn check_terminator<'a, 'tcx>(\n                 // within const fns. `transmute` is allowed in all other const contexts.\n                 // This won't really scale to more intrinsics or functions. Let's allow const\n                 // transmutes in const fn before we add more hacks to this.\n-                if tcx.fn_sig(fn_def_id).abi() == RustIntrinsic && tcx.item_name(fn_def_id) == sym::transmute {\n+                if tcx.is_intrinsic(fn_def_id) && tcx.item_name(fn_def_id) == sym::transmute {\n                     return Err((\n                         span,\n                         \"can only call `transmute` from const items, not `const fn`\".into(),"}]}