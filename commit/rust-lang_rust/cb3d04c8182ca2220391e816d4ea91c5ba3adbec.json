{"sha": "cb3d04c8182ca2220391e816d4ea91c5ba3adbec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiM2QwNGM4MTgyY2EyMjIwMzkxZTgxNmQ0ZWE5MWM1YmEzYWRiZWM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-26T19:11:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-08-26T19:13:50Z"}, "message": "minor: nicer way to defeat disjoint closure captures\n\nThanks https://internals.rust-lang.org/t/feature-idea-edition-dependent-names-replacing-standard-library-items/15198/27?u=matklad!", "tree": {"sha": "3c5506419cfd544fd6ad8f2b59a88f5c69304ef1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3c5506419cfd544fd6ad8f2b59a88f5c69304ef1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb3d04c8182ca2220391e816d4ea91c5ba3adbec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb3d04c8182ca2220391e816d4ea91c5ba3adbec", "html_url": "https://github.com/rust-lang/rust/commit/cb3d04c8182ca2220391e816d4ea91c5ba3adbec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb3d04c8182ca2220391e816d4ea91c5ba3adbec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55d4813561e36aa96fcff7fc4bde6ccb675fe115", "url": "https://api.github.com/repos/rust-lang/rust/commits/55d4813561e36aa96fcff7fc4bde6ccb675fe115", "html_url": "https://github.com/rust-lang/rust/commit/55d4813561e36aa96fcff7fc4bde6ccb675fe115"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "07ab46647f641baf8b242d99309d26b12b63fa35", "filename": "crates/rust-analyzer/src/dispatch.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cb3d04c8182ca2220391e816d4ea91c5ba3adbec/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb3d04c8182ca2220391e816d4ea91c5ba3adbec/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdispatch.rs?ref=cb3d04c8182ca2220391e816d4ea91c5ba3adbec", "patch": "@@ -33,8 +33,10 @@ impl<'a> RequestDispatcher<'a> {\n         let global_state = panic::AssertUnwindSafe(&mut *self.global_state);\n \n         let result = panic::catch_unwind(move || {\n-            let _ = &global_state;\n-            let panic::AssertUnwindSafe(global_state) = global_state;\n+            // Make sure that the whole AssertUnwindSafe is moved into the\n+            // closure, and not just its field.\n+            let panic::AssertUnwindSafe(global_state) = { global_state };\n+\n             let _pctx = stdx::panic_context::enter(format!(\n                 \"\\nversion: {}\\nrequest: {} {:#?}\",\n                 env!(\"REV\"),"}]}