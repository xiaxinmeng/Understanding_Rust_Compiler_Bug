{"sha": "465ac26405d32cc1dd73460fa465c9303f40ea43", "node_id": "C_kwDOAAsO6NoAKDQ2NWFjMjY0MDVkMzJjYzFkZDczNDYwZmE0NjVjOTMwM2Y0MGVhNDM", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-04T02:02:54Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-08T03:17:57Z"}, "message": "deprecate unchecked_claim_error_was_emitted in error_reported", "tree": {"sha": "f3601b16361ebe246579c13d80b97713f4bd8e93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3601b16361ebe246579c13d80b97713f4bd8e93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/465ac26405d32cc1dd73460fa465c9303f40ea43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/465ac26405d32cc1dd73460fa465c9303f40ea43", "html_url": "https://github.com/rust-lang/rust/commit/465ac26405d32cc1dd73460fa465c9303f40ea43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/465ac26405d32cc1dd73460fa465c9303f40ea43/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f21b96dce9c4165bcfae364b4e100953dd8167b", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f21b96dce9c4165bcfae364b4e100953dd8167b", "html_url": "https://github.com/rust-lang/rust/commit/1f21b96dce9c4165bcfae364b4e100953dd8167b"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "5e366ef703f254f22b9fec8a17c8813e733aafa9", "filename": "compiler/rustc_middle/src/ty/visit.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/465ac26405d32cc1dd73460fa465c9303f40ea43/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/465ac26405d32cc1dd73460fa465c9303f40ea43/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fvisit.rs?ref=465ac26405d32cc1dd73460fa465c9303f40ea43", "patch": "@@ -97,7 +97,11 @@ pub trait TypeVisitable<'tcx>: fmt::Debug + Clone {\n     }\n     fn error_reported(&self) -> Result<(), ErrorGuaranteed> {\n         if self.references_error() {\n-            Err(ErrorGuaranteed::unchecked_claim_error_was_emitted())\n+            if let Some(reported) = ty::tls::with(|tcx| tcx.sess.has_errors()) {\n+                Err(reported)\n+            } else {\n+                bug!(\"expect tcx.sess.has_errors return true\");\n+            }\n         } else {\n             Ok(())\n         }"}]}