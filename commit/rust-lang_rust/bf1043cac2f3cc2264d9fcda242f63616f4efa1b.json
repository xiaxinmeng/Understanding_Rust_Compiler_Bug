{"sha": "bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmMTA0M2NhYzJmM2NjMjI2NGQ5ZmNkYTI0MmY2MzYxNmY0ZWZhMWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-10-06T18:17:49Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-06T18:17:49Z"}, "message": "Merge #6128\n\n6128: Trim all trailing whitespace in onEnter r=matklad a=repnop\n\nFixes #5848\n\nCo-authored-by: Wesley Norris <repnop@outlook.com>", "tree": {"sha": "a5c8810bd1b3ed0ac3e0a29402e728c894ce5bda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5c8810bd1b3ed0ac3e0a29402e728c894ce5bda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJffLTNCRBK7hj4Ov3rIwAAdHIIAIcWX7Mo+ZEhc5tVBHh0l3H2\nFm2cD84sUFPFaddLkQ6hdHjIdlGfy4wmp4weB0pA00KeyoZgl9q3mGqbRHvca4+x\nIbRJXhlK7zx6iDa3dwYTn2Qr+0lzvqeQPHBQpoyN95EhQqM11Bq/yBv/QqM50sbp\nK8JYvH3QeZR4Hvz+6CNoSNpR3psCaOQn/2lUezPQQzSVkRql34I/kDjbvw49gOs+\nSMpyPjM71MphahBF1UdorC4ZNj8thuK2d5xUT9i1+Z0GByQ6JAMlZkZfCrBn2MiT\niaAyJoinjxC3xPIs5Cq7wFpzS0BvMlmS3iEGTbH1N9HurzKDymkfAYlHiYCJLuo=\n=LLK6\n-----END PGP SIGNATURE-----\n", "payload": "tree a5c8810bd1b3ed0ac3e0a29402e728c894ce5bda\nparent 6409d7e8106783032f43b7d353d6106e065fb7c2\nparent adb3c56ff0734e01c34c64737e338eecc3541578\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1602008269 +0000\ncommitter GitHub <noreply@github.com> 1602008269 +0000\n\nMerge #6128\n\n6128: Trim all trailing whitespace in onEnter r=matklad a=repnop\n\nFixes #5848\n\nCo-authored-by: Wesley Norris <repnop@outlook.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "html_url": "https://github.com/rust-lang/rust/commit/bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1043cac2f3cc2264d9fcda242f63616f4efa1b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6409d7e8106783032f43b7d353d6106e065fb7c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/6409d7e8106783032f43b7d353d6106e065fb7c2", "html_url": "https://github.com/rust-lang/rust/commit/6409d7e8106783032f43b7d353d6106e065fb7c2"}, {"sha": "adb3c56ff0734e01c34c64737e338eecc3541578", "url": "https://api.github.com/repos/rust-lang/rust/commits/adb3c56ff0734e01c34c64737e338eecc3541578", "html_url": "https://github.com/rust-lang/rust/commit/adb3c56ff0734e01c34c64737e338eecc3541578"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "98adef1d6f807217438b75945c79b8efa4eaa9a9", "filename": "crates/ide/src/typing/on_enter.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/bf1043cac2f3cc2264d9fcda242f63616f4efa1b/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1043cac2f3cc2264d9fcda242f63616f4efa1b/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=bf1043cac2f3cc2264d9fcda242f63616f4efa1b", "patch": "@@ -51,21 +51,23 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Text\n         return None;\n     }\n \n-    let mut remove_last_space = false;\n+    let mut remove_trailing_whitespace = false;\n     // Continuing single-line non-doc comments (like this one :) ) is annoying\n     if prefix == \"//\" && comment_range.end() == position.offset {\n         if comment.text().ends_with(' ') {\n             mark::hit!(continues_end_of_line_comment_with_space);\n-            remove_last_space = true;\n+            remove_trailing_whitespace = true;\n         } else if !followed_by_comment(&comment) {\n             return None;\n         }\n     }\n \n     let indent = node_indent(&file, comment.syntax())?;\n     let inserted = format!(\"\\n{}{} $0\", indent, prefix);\n-    let delete = if remove_last_space {\n-        TextRange::new(position.offset - TextSize::of(' '), position.offset)\n+    let delete = if remove_trailing_whitespace {\n+        let trimmed_len = comment.text().trim_end().len() as u32;\n+        let trailing_whitespace_len = comment.text().len() as u32 - trimmed_len;\n+        TextRange::new(position.offset - TextSize::from(trailing_whitespace_len), position.offset)\n     } else {\n         TextRange::empty(position.offset)\n     };\n@@ -253,4 +255,23 @@ fn main() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn trims_all_trailing_whitespace() {\n+        do_check(\n+            \"\n+fn main() {\n+    // Fix me  \\t\\t   <|>\n+    let x = 1 + 1;\n+}\n+\",\n+            \"\n+fn main() {\n+    // Fix me\n+    // $0\n+    let x = 1 + 1;\n+}\n+\",\n+        );\n+    }\n }"}]}