{"sha": "b0421fa7de7b309cf884ecd9b23f93bbbf237048", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwNDIxZmE3ZGU3YjMwOWNmODg0ZWNkOWIyM2Y5M2JiYmYyMzcwNDg=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-12-14T22:28:26Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2017-12-14T22:28:26Z"}, "message": "Address review feedback: don't bother skipping reservations paired with activations.", "tree": {"sha": "98e5e95daab07d389c0fcb10025ff1c6cf5d35c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/98e5e95daab07d389c0fcb10025ff1c6cf5d35c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0421fa7de7b309cf884ecd9b23f93bbbf237048", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0421fa7de7b309cf884ecd9b23f93bbbf237048", "html_url": "https://github.com/rust-lang/rust/commit/b0421fa7de7b309cf884ecd9b23f93bbbf237048", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0421fa7de7b309cf884ecd9b23f93bbbf237048/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b75248ef4eeac4cf06e8cfd2fa6e36ab488eb4d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b75248ef4eeac4cf06e8cfd2fa6e36ab488eb4d1", "html_url": "https://github.com/rust-lang/rust/commit/b75248ef4eeac4cf06e8cfd2fa6e36ab488eb4d1"}], "stats": {"total": 10, "additions": 0, "deletions": 10}, "files": [{"sha": "adb4a7a925549e168239d849c15f2b6cc137258f", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b0421fa7de7b309cf884ecd9b23f93bbbf237048/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b0421fa7de7b309cf884ecd9b23f93bbbf237048/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=b0421fa7de7b309cf884ecd9b23f93bbbf237048", "patch": "@@ -1951,16 +1951,6 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         // borrows of P, P.a.b, etc.\n         let mut elems_incoming = flow_state.borrows.elems_incoming();\n         while let Some(i) = elems_incoming.next() {\n-            // Skip any reservation that has a corresponding current\n-            // activation.  This way, the traversal will visit each\n-            // borrow_index at most once.\n-            if let Some(j) = elems_incoming.peek() {\n-                if i.is_reservation() && j.is_activation() {\n-                    assert_eq!(i.borrow_index(), j.borrow_index());\n-                    continue;\n-                }\n-            }\n-\n             let borrowed = &data[i.borrow_index()];\n \n             if self.places_conflict(&borrowed.borrowed_place, place, access) {"}]}