{"sha": "dd442a1fcfba98be5454c2ca6f56bce098e458ed", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkNDQyYTFmY2ZiYTk4YmU1NDU0YzJjYTZmNTZiY2UwOThlNDU4ZWQ=", "commit": {"author": {"name": "Cedric", "email": "cedric.brancourt@gmail.com", "date": "2019-06-08T11:29:43Z"}, "committer": {"name": "Cedric", "email": "cedric.brancourt@gmail.com", "date": "2019-06-08T11:29:43Z"}, "message": "use default binding mode in match clauses", "tree": {"sha": "dfe46ef20651bb405e98c13ecea13ef4ff60851c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfe46ef20651bb405e98c13ecea13ef4ff60851c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dd442a1fcfba98be5454c2ca6f56bce098e458ed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dd442a1fcfba98be5454c2ca6f56bce098e458ed", "html_url": "https://github.com/rust-lang/rust/commit/dd442a1fcfba98be5454c2ca6f56bce098e458ed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dd442a1fcfba98be5454c2ca6f56bce098e458ed/comments", "author": {"login": "Electron-libre", "id": 5979, "node_id": "MDQ6VXNlcjU5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Electron-libre", "html_url": "https://github.com/Electron-libre", "followers_url": "https://api.github.com/users/Electron-libre/followers", "following_url": "https://api.github.com/users/Electron-libre/following{/other_user}", "gists_url": "https://api.github.com/users/Electron-libre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Electron-libre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Electron-libre/subscriptions", "organizations_url": "https://api.github.com/users/Electron-libre/orgs", "repos_url": "https://api.github.com/users/Electron-libre/repos", "events_url": "https://api.github.com/users/Electron-libre/events{/privacy}", "received_events_url": "https://api.github.com/users/Electron-libre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Electron-libre", "id": 5979, "node_id": "MDQ6VXNlcjU5Nzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5979?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Electron-libre", "html_url": "https://github.com/Electron-libre", "followers_url": "https://api.github.com/users/Electron-libre/followers", "following_url": "https://api.github.com/users/Electron-libre/following{/other_user}", "gists_url": "https://api.github.com/users/Electron-libre/gists{/gist_id}", "starred_url": "https://api.github.com/users/Electron-libre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Electron-libre/subscriptions", "organizations_url": "https://api.github.com/users/Electron-libre/orgs", "repos_url": "https://api.github.com/users/Electron-libre/repos", "events_url": "https://api.github.com/users/Electron-libre/events{/privacy}", "received_events_url": "https://api.github.com/users/Electron-libre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4123b5d796345bb01f0f40b2e28e6c194371fabe", "url": "https://api.github.com/repos/rust-lang/rust/commits/4123b5d796345bb01f0f40b2e28e6c194371fabe", "html_url": "https://github.com/rust-lang/rust/commit/4123b5d796345bb01f0f40b2e28e6c194371fabe"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "98351048c35266c85707d10d7b17dc49fbc3862c", "filename": "src/libsyntax/diagnostics/plugin.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd442a1fcfba98be5454c2ca6f56bce098e458ed/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd442a1fcfba98be5454c2ca6f56bce098e458ed/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostics%2Fplugin.rs?ref=dd442a1fcfba98be5454c2ca6f56bce098e458ed", "patch": "@@ -34,7 +34,7 @@ pub fn expand_diagnostic_used<'cx>(ecx: &'cx mut ExtCtxt<'_>,\n                                    token_tree: &[TokenTree])\n                                    -> Box<dyn MacResult+'cx> {\n     let code = match token_tree {\n-        &[\n+        [\n             TokenTree::Token(Token { kind: token::Ident(code, _), .. })\n         ] => code,\n         _ => unreachable!()\n@@ -69,17 +69,17 @@ pub fn expand_register_diagnostic<'cx>(ecx: &'cx mut ExtCtxt<'_>,\n                                        token_tree: &[TokenTree])\n                                        -> Box<dyn MacResult+'cx> {\n     let (code, description) = match  token_tree {\n-        &[\n+        [\n             TokenTree::Token(Token { kind: token::Ident(code, _), .. })\n         ] => {\n-            (code, None)\n+            (*code, None)\n         },\n-        &[\n+        [\n             TokenTree::Token(Token { kind: token::Ident(code, _), .. }),\n             TokenTree::Token(Token { kind: token::Comma, .. }),\n             TokenTree::Token(Token { kind: token::Literal(token::Lit { symbol, .. }), ..})\n         ] => {\n-            (code, Some(symbol))\n+            (*code, Some(*symbol))\n         },\n         _ => unreachable!()\n     };"}, {"sha": "b912bf8295ae1bba12a1a8eea47542dfe9c2302f", "filename": "src/libsyntax/parse/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/dd442a1fcfba98be5454c2ca6f56bce098e458ed/src%2Flibsyntax%2Fparse%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dd442a1fcfba98be5454c2ca6f56bce098e458ed/src%2Flibsyntax%2Fparse%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fmod.rs?ref=dd442a1fcfba98be5454c2ca6f56bce098e458ed", "patch": "@@ -434,15 +434,15 @@ mod tests {\n                 if name_macro_rules == sym::macro_rules && name_zip.as_str() == \"zip\" => {\n                     let tts = &macro_tts.trees().collect::<Vec<_>>();\n                     match tts {\n-                        &[\n-                            TokenTree::Delimited(_, first_delim, ref first_tts),\n+                        [\n+                            TokenTree::Delimited(_, first_delim, first_tts),\n                             TokenTree::Token(Token { kind: token::FatArrow, .. }),\n-                            TokenTree::Delimited(_, second_delim, ref second_tts),\n+                            TokenTree::Delimited(_, second_delim, second_tts),\n                         ]\n                         if macro_delim == token::Paren => {\n                             let tts = &first_tts.trees().collect::<Vec<_>>();\n                             match tts {\n-                                &[\n+                                [\n                                     TokenTree::Token(Token { kind: token::Dollar, .. }),\n                                     TokenTree::Token(Token { kind: token::Ident(name, false), .. }),\n                                 ]\n@@ -451,7 +451,7 @@ mod tests {\n                             }\n                             let tts = &second_tts.trees().collect::<Vec<_>>();\n                             match tts {\n-                                &[\n+                                [\n                                     TokenTree::Token(Token { kind: token::Dollar, .. }),\n                                     TokenTree::Token(Token { kind: token::Ident(name, false), .. }),\n                                 ]"}]}