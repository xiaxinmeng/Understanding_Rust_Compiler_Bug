{"sha": "e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUyYmViZjMyZmE0YmM0ZGZlOGI3Y2FjYjcxMzA5MWI4Y2NiZjYyYmY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-14T01:06:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-08-14T01:06:37Z"}, "message": "Auto merge of #27696 - bluss:into-boxed-str, r=alexcrichton\n\nRename String::into_boxed_slice -> into_boxed_str\r\n\r\nThis is the name that was decided in rust-lang/rfcs#1152, and it's\r\nbetter if we say \u201cboxed str\u201d for `Box<str>`.\r\n\r\nThe old name `String::into_boxed_slice` is deprecated.", "tree": {"sha": "5be3aa2ddda81822d597fdcedd3d6f916ced1e52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5be3aa2ddda81822d597fdcedd3d6f916ced1e52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "html_url": "https://github.com/rust-lang/rust/commit/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82b89645fb6ec31138d5788b588ddd7e44c434fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/82b89645fb6ec31138d5788b588ddd7e44c434fa", "html_url": "https://github.com/rust-lang/rust/commit/82b89645fb6ec31138d5788b588ddd7e44c434fa"}, {"sha": "bec64090a70a25c75b1856cf35dcdcf20993f8f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/bec64090a70a25c75b1856cf35dcdcf20993f8f8", "html_url": "https://github.com/rust-lang/rust/commit/bec64090a70a25c75b1856cf35dcdcf20993f8f8"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "f468fc25ca964f193fb3579a7967e1ff6b40b864", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "patch": "@@ -729,10 +729,20 @@ impl String {\n     /// Note that this will drop any excess capacity.\n     #[unstable(feature = \"box_str\",\n                reason = \"recently added, matches RFC\")]\n-    pub fn into_boxed_slice(self) -> Box<str> {\n+    pub fn into_boxed_str(self) -> Box<str> {\n         let slice = self.vec.into_boxed_slice();\n         unsafe { mem::transmute::<Box<[u8]>, Box<str>>(slice) }\n     }\n+\n+    /// Converts the string into `Box<str>`.\n+    ///\n+    /// Note that this will drop any excess capacity.\n+    #[unstable(feature = \"box_str\",\n+               reason = \"recently added, matches RFC\")]\n+    #[deprecated(since = \"1.4.0\", reason = \"renamed to `into_boxed_str`\")]\n+    pub fn into_boxed_slice(self) -> Box<str> {\n+        self.into_boxed_str()\n+    }\n }\n \n impl FromUtf8Error {"}, {"sha": "69f6eb6c397d72c52275f0a92b6e2f1fe93fcb29", "filename": "src/libcollectionstest/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/src%2Flibcollectionstest%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/src%2Flibcollectionstest%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstr.rs?ref=e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "patch": "@@ -1204,13 +1204,13 @@ fn test_into_string() {\n     // The only way to acquire a Box<str> in the first place is through a String, so just\n     // test that we can round-trip between Box<str> and String.\n     let string = String::from(\"Some text goes here\");\n-    assert_eq!(string.clone().into_boxed_slice().into_string(), string);\n+    assert_eq!(string.clone().into_boxed_str().into_string(), string);\n }\n \n #[test]\n fn test_box_slice_clone() {\n     let data = String::from(\"hello HELLO hello HELLO yes YES 5 \u4e2d\u00e4\u534e!!!\");\n-    let data2 = data.clone().into_boxed_slice().clone().into_string();\n+    let data2 = data.clone().into_boxed_str().clone().into_string();\n \n     assert_eq!(data, data2);\n }"}, {"sha": "69553bff0e17cf988729926a982ed9c64740ab4b", "filename": "src/libcollectionstest/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/src%2Flibcollectionstest%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf/src%2Flibcollectionstest%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollectionstest%2Fstring.rs?ref=e2bebf32fa4bc4dfe8b7cacb713091b8ccbf62bf", "patch": "@@ -366,9 +366,9 @@ fn test_extend_ref() {\n }\n \n #[test]\n-fn test_into_boxed_slice() {\n+fn test_into_boxed_str() {\n     let xs = String::from(\"hello my name is bob\");\n-    let ys = xs.into_boxed_slice();\n+    let ys = xs.into_boxed_str();\n     assert_eq!(&*ys, \"hello my name is bob\");\n }\n "}]}