{"sha": "529efc51e817f18b879bf5f03dea21e36617b05f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyOWVmYzUxZTgxN2YxOGI4NzliZjVmMDNkZWEyMWUzNjYxN2IwNWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-14T14:35:13Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-02-24T09:41:15Z"}, "message": "detect memory leaks", "tree": {"sha": "c5c350c2826d966a4c95a8d8542f37ce563bc0df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5c350c2826d966a4c95a8d8542f37ce563bc0df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/529efc51e817f18b879bf5f03dea21e36617b05f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAliv/7sACgkQpp+NIls6\n19nryxAAqn4WDerWNMaWQJNbsO20jQGspeN/sslGUIlqu/dfp6LSrgUmrJT0Tojj\nZNbrVQRETEhfhxKlR2eDDJUkq2TV2BGz5sLHxQ105DzW9aBVKkcud98qkPxais7d\n52/jZJRzW8pmJZ5OznIKVhJHLlidsHrk/wvwNXgGDrEM3r0LKMvOSqNlP+BleGzk\nu0LDZE6gGXZHiMoZtI2oLWRB3WlYUBrH6p5Q9dmuWsvtXVhXMsHg9cd8WSNfXsGA\n8FSKWrwj1l4JN0Avsy3zQta6dUpG9A70Mc5r2rx/GJKinEjQEUFSQONQIn1UCvZc\ncI58xn9aa2BIvmsKFbN+FtRQu+HYnfmSnXmUCbFIYjaVL29tyvZoekqmmzz17cer\nZ8Y/gpaBafaMJoZr/XwITtP31ojnLO64YFMkDHn4ULY3Kqn+y7xm5qHCI+zivsT5\nOOZK3rrEfNTRLSCdE8Ynlxb8Jsu7cfGrItgbvZdqYuc1aubRJCw88cgvqMmQlXuI\nQ+gsxrUf8asSKkGiVNA7ElXWnqx2LXNKt7l6bqhqLE8emCDskfwfYF+MpZDqiiLv\n9HShS+iMKPMoR5S5G/D8LCcgR01aFTo/C4BKsC2K+b1MybTjU1F0ybelwKzFtuE0\nQ9bIsTD/0ZlvmYxjIgfvW6fyrXNG9slKXgo7+5Ijcgwwj2HWYkg=\n=+1FJ\n-----END PGP SIGNATURE-----", "payload": "tree c5c350c2826d966a4c95a8d8542f37ce563bc0df\nparent 25c3a4fb0042a8d1975daff0340c7f967a6d4f60\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487082913 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1487929275 +0100\n\ndetect memory leaks"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/529efc51e817f18b879bf5f03dea21e36617b05f", "html_url": "https://github.com/rust-lang/rust/commit/529efc51e817f18b879bf5f03dea21e36617b05f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/529efc51e817f18b879bf5f03dea21e36617b05f/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "25c3a4fb0042a8d1975daff0340c7f967a6d4f60", "url": "https://api.github.com/repos/rust-lang/rust/commits/25c3a4fb0042a8d1975daff0340c7f967a6d4f60", "html_url": "https://github.com/rust-lang/rust/commit/25c3a4fb0042a8d1975daff0340c7f967a6d4f60"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "fb83eff502a2d4eb09a0b1f4a05b867789f301dc", "filename": "src/eval_context.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/529efc51e817f18b879bf5f03dea21e36617b05f/src%2Feval_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529efc51e817f18b879bf5f03dea21e36617b05f/src%2Feval_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Feval_context.rs?ref=529efc51e817f18b879bf5f03dea21e36617b05f", "patch": "@@ -1510,7 +1510,13 @@ pub fn eval_main<'a, 'tcx: 'a>(\n     loop {\n         match ecx.step() {\n             Ok(true) => {}\n-            Ok(false) => return,\n+            Ok(false) => {\n+                let leaks = ecx.memory.leak_report();\n+                if leaks != 0 {\n+                    tcx.sess.err(\"the evaluated program leaked memory\");\n+                }\n+                return;\n+            }\n             Err(e) => {\n                 report(tcx, &ecx, e);\n                 return;"}, {"sha": "459a9bed4128fc6cbb7314578ab798d6413f806f", "filename": "src/memory.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/529efc51e817f18b879bf5f03dea21e36617b05f/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/529efc51e817f18b879bf5f03dea21e36617b05f/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=529efc51e817f18b879bf5f03dea21e36617b05f", "patch": "@@ -585,6 +585,23 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n             }\n         }\n     }\n+\n+    pub fn leak_report(&self) -> usize {\n+        trace!(\"### LEAK REPORT ###\");\n+        let leaks: Vec<_> = self.alloc_map\n+            .iter()\n+            .filter_map(|(&key, val)| {\n+                if val.static_kind == StaticKind::NotStatic {\n+                    Some(key)\n+                } else {\n+                    None\n+                }\n+            })\n+            .collect();\n+        let n = leaks.len();\n+        self.dump_allocs(leaks);\n+        n\n+    }\n }\n \n fn dump_fn_def<'tcx>(fn_def: FunctionDefinition<'tcx>) -> String {"}]}