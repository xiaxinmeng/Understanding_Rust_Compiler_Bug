{"sha": "ecaa7bc49062db1306b5def2c17c25a188ee2dc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYWE3YmM0OTA2MmRiMTMwNmI1ZGVmMmMxN2MyNWExODhlZTJkYzc=", "commit": {"author": {"name": "Zach Wolfe", "email": "zachrwolfe@me.com", "date": "2018-07-03T21:09:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-03T21:09:13Z"}, "message": "Update outdated comment: ByVal -> Scalar.", "tree": {"sha": "f5e8607919e3706f2aca8a65699ce794be654a67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5e8607919e3706f2aca8a65699ce794be654a67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecaa7bc49062db1306b5def2c17c25a188ee2dc7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbO+X5CRBK7hj4Ov3rIwAAdHIIAFXPlEV7usypQ9faezVe5sh3\nnPOUI3uZ13v6ERjtJ01L9mB8HEadToxWY8Y6TqubKtAvHCM148woit3ncdIHa4/A\nPV4wSOKvF0aNp0KjA0NvD4TXK+o3KoppIJJy3qsqKMYSC52/CTRhx244zgQdU3na\nQBAqsrYcS8iKh2vL5XKKcQi8gShxVL9EPX1J2NkfLpbzHZzGB1umWRno18DZ1ksU\n0UwE/Cn7GXXz/62RK12U/j/JaIJK/vZm1zB3bhHHv8orzpBwaIzmIT4IEEU6LlHb\nJ111htTBkJ05FRuIxnFDJMLi05i3ESAPJjzoamkPr5TmlcO5N/hxRuaK4pniGvk=\n=zxDe\n-----END PGP SIGNATURE-----\n", "payload": "tree f5e8607919e3706f2aca8a65699ce794be654a67\nparent 739320a6011fd78b15328416d3c488d025974039\nauthor Zach Wolfe <zachrwolfe@me.com> 1530652153 -0500\ncommitter GitHub <noreply@github.com> 1530652153 -0500\n\nUpdate outdated comment: ByVal -> Scalar."}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecaa7bc49062db1306b5def2c17c25a188ee2dc7", "html_url": "https://github.com/rust-lang/rust/commit/ecaa7bc49062db1306b5def2c17c25a188ee2dc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecaa7bc49062db1306b5def2c17c25a188ee2dc7/comments", "author": {"login": "zachwolfe", "id": 72848430, "node_id": "MDQ6VXNlcjcyODQ4NDMw", "avatar_url": "https://avatars.githubusercontent.com/u/72848430?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zachwolfe", "html_url": "https://github.com/zachwolfe", "followers_url": "https://api.github.com/users/zachwolfe/followers", "following_url": "https://api.github.com/users/zachwolfe/following{/other_user}", "gists_url": "https://api.github.com/users/zachwolfe/gists{/gist_id}", "starred_url": "https://api.github.com/users/zachwolfe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zachwolfe/subscriptions", "organizations_url": "https://api.github.com/users/zachwolfe/orgs", "repos_url": "https://api.github.com/users/zachwolfe/repos", "events_url": "https://api.github.com/users/zachwolfe/events{/privacy}", "received_events_url": "https://api.github.com/users/zachwolfe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "739320a6011fd78b15328416d3c488d025974039", "url": "https://api.github.com/repos/rust-lang/rust/commits/739320a6011fd78b15328416d3c488d025974039", "html_url": "https://github.com/rust-lang/rust/commit/739320a6011fd78b15328416d3c488d025974039"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "ffd138c9c4815542c897c6880c8fffcdea194923", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ecaa7bc49062db1306b5def2c17c25a188ee2dc7/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecaa7bc49062db1306b5def2c17c25a188ee2dc7/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=ecaa7bc49062db1306b5def2c17c25a188ee2dc7", "patch": "@@ -7,7 +7,7 @@ use hir::def_id::DefId;\n \n use super::{EvalResult, Pointer, PointerArithmetic, Allocation};\n \n-/// Represents a constant value in Rust. ByVal and ScalarPair are optimizations which\n+/// Represents a constant value in Rust. Scalar and ScalarPair are optimizations which\n /// matches Value's optimizations for easy conversions between these two types\n #[derive(Copy, Clone, Debug, Eq, PartialEq, PartialOrd, Ord, RustcEncodable, RustcDecodable, Hash)]\n pub enum ConstValue<'tcx> {\n@@ -72,7 +72,7 @@ impl<'tcx> ConstValue<'tcx> {\n /// A `Value` represents a single self-contained Rust value.\n ///\n /// A `Value` can either refer to a block of memory inside an allocation (`ByRef`) or to a primitve\n-/// value held directly, outside of any allocation (`ByVal`).  For `ByRef`-values, we remember\n+/// value held directly, outside of any allocation (`Scalar`).  For `ByRef`-values, we remember\n /// whether the pointer is supposed to be aligned or not (also see Place).\n ///\n /// For optimization of a few very common cases, there is also a representation for a pair of"}]}