{"sha": "be6fab8ca8b89da2aea447d6e597074810e3f351", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlNmZhYjhjYThiODlkYTJhZWE0NDdkNmU1OTcwNzQ4MTBlM2YzNTE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-05-10T16:35:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-05-10T16:35:29Z"}, "message": "Rollup merge of #50572 - frewsxcv:frewsxcv-fma, r=sfackler\n\nClarify in the docs that `mul_add` is not always faster.\n\nFixes https://github.com/rust-lang/rust/issues/49842.\n\nOther resources:\n\n- https://users.rust-lang.org/t/why-does-the-mul-add-method-produce-a-more-accurate-result-with-better-performance/1626\n- https://en.wikipedia.org/wiki/Multiply%E2%80%93accumulate_operation", "tree": {"sha": "5a33df8e5b952d60b91f9744623a8f23903e2f30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a33df8e5b952d60b91f9744623a8f23903e2f30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be6fab8ca8b89da2aea447d6e597074810e3f351", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJa9HTRCRBK7hj4Ov3rIwAAdHIIACM9Ro32sNcd55IJYNLqg3yk\neZfmJsV72JY/DTBfRo4kE6Qp5qWQ8mJcDakSCsR67jT0iz1Bj3mszyXtu2KHn3Zu\nLDBJf40USGMQy+0tY8gqSF0zDre2E/Xg2GIiHQAaGx/IQ/v28no3iSMOn1zVKu3T\nEIXead9hVUhML29Gz+fYpM1CNUYgAAOeCWtwbB0deT0XvSk9Rfjoo3ucGWO21dPp\nNpfwmaC/D0EQY1pH596FeW0veLnH+mg7FnOz3ITExiv0NbASexhEw4DrOhGt3xAM\nngepqRi//KURdykyn44KR55DPN5GxCG+Dway9WHOD6EnTCUwKZ4lS89qLshJ+iI=\n=6g//\n-----END PGP SIGNATURE-----\n", "payload": "tree 5a33df8e5b952d60b91f9744623a8f23903e2f30\nparent dd40277d0f646c700d22dab4c929733a37cbb822\nparent 0ba1c101dce22fbe30933a90efd237a09227e07d\nauthor Alex Crichton <alex@alexcrichton.com> 1525970129 -0500\ncommitter GitHub <noreply@github.com> 1525970129 -0500\n\nRollup merge of #50572 - frewsxcv:frewsxcv-fma, r=sfackler\n\nClarify in the docs that `mul_add` is not always faster.\n\nFixes https://github.com/rust-lang/rust/issues/49842.\n\nOther resources:\n\n- https://users.rust-lang.org/t/why-does-the-mul-add-method-produce-a-more-accurate-result-with-better-performance/1626\n- https://en.wikipedia.org/wiki/Multiply%E2%80%93accumulate_operation\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be6fab8ca8b89da2aea447d6e597074810e3f351", "html_url": "https://github.com/rust-lang/rust/commit/be6fab8ca8b89da2aea447d6e597074810e3f351", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be6fab8ca8b89da2aea447d6e597074810e3f351/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd40277d0f646c700d22dab4c929733a37cbb822", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd40277d0f646c700d22dab4c929733a37cbb822", "html_url": "https://github.com/rust-lang/rust/commit/dd40277d0f646c700d22dab4c929733a37cbb822"}, {"sha": "0ba1c101dce22fbe30933a90efd237a09227e07d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ba1c101dce22fbe30933a90efd237a09227e07d", "html_url": "https://github.com/rust-lang/rust/commit/0ba1c101dce22fbe30933a90efd237a09227e07d"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "4f4baf1e8cd91eff51b8abb4a53285b709b53cfc", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be6fab8ca8b89da2aea447d6e597074810e3f351/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be6fab8ca8b89da2aea447d6e597074810e3f351/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=be6fab8ca8b89da2aea447d6e597074810e3f351", "patch": "@@ -195,8 +195,10 @@ impl f32 {\n     }\n \n     /// Fused multiply-add. Computes `(self * a) + b` with only one rounding\n-    /// error. This produces a more accurate result with better performance than\n-    /// a separate multiplication operation followed by an add.\n+    /// error, yielding a more accurate result than an unfused multiply-add.\n+    ///\n+    /// Using `mul_add` can be more performant than an unfused multiply-add if\n+    /// the target architecture has a dedicated `fma` CPU instruction.\n     ///\n     /// ```\n     /// use std::f32;"}, {"sha": "e00ff60452dd025251bcf85b76ce8f8d88d9144c", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/be6fab8ca8b89da2aea447d6e597074810e3f351/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be6fab8ca8b89da2aea447d6e597074810e3f351/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=be6fab8ca8b89da2aea447d6e597074810e3f351", "patch": "@@ -173,8 +173,10 @@ impl f64 {\n     }\n \n     /// Fused multiply-add. Computes `(self * a) + b` with only one rounding\n-    /// error. This produces a more accurate result with better performance than\n-    /// a separate multiplication operation followed by an add.\n+    /// error, yielding a more accurate result than an unfused multiply-add.\n+    ///\n+    /// Using `mul_add` can be more performant than an unfused multiply-add if\n+    /// the target architecture has a dedicated `fma` CPU instruction.\n     ///\n     /// ```\n     /// let m = 10.0_f64;"}]}