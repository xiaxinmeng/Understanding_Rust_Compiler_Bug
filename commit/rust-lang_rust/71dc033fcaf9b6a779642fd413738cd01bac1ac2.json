{"sha": "71dc033fcaf9b6a779642fd413738cd01bac1ac2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxZGMwMzNmY2FmOWI2YTc3OTY0MmZkNDEzNzM4Y2QwMWJhYzFhYzI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-15T22:09:52Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-08-15T22:49:50Z"}, "message": "Add a test for #2919", "tree": {"sha": "4dba3e55817fbb601cba89b237466955726e1ed1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4dba3e55817fbb601cba89b237466955726e1ed1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71dc033fcaf9b6a779642fd413738cd01bac1ac2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71dc033fcaf9b6a779642fd413738cd01bac1ac2", "html_url": "https://github.com/rust-lang/rust/commit/71dc033fcaf9b6a779642fd413738cd01bac1ac2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71dc033fcaf9b6a779642fd413738cd01bac1ac2/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7c1ad96e9fca2186e691f64be55e96fec6a204be", "url": "https://api.github.com/repos/rust-lang/rust/commits/7c1ad96e9fca2186e691f64be55e96fec6a204be", "html_url": "https://github.com/rust-lang/rust/commit/7c1ad96e9fca2186e691f64be55e96fec6a204be"}], "stats": {"total": 44, "additions": 44, "deletions": 0}, "files": [{"sha": "b2d9c1199c5010b708b5e5367226b397e3c7803b", "filename": "tests/source/macro_rules.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/71dc033fcaf9b6a779642fd413738cd01bac1ac2/tests%2Fsource%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71dc033fcaf9b6a779642fd413738cd01bac1ac2/tests%2Fsource%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacro_rules.rs?ref=71dc033fcaf9b6a779642fd413738cd01bac1ac2", "patch": "@@ -263,3 +263,19 @@ macro_rules! impl_as_byte_slice_arrays {\n         }\n     };\n }\n+\n+// #2919\n+fn foo() {\n+    {\n+        macro_rules! touch_value {\n+            ($func:ident, $value:expr) => {{\n+                let result = API::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppendMode::paTouch);\n+                let result = API::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppend);\n+                let result = API::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppendM);\n+                let result = APIIIIIIIII::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppendM);\n+                let result = API::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppendMMMMMMMMMM);\n+                debug_assert!(result == 0);\n+            }};\n+        }\n+    }\n+}"}, {"sha": "281d655a8d8857c090539e48e4f75791921cac74", "filename": "tests/target/macro_rules.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/71dc033fcaf9b6a779642fd413738cd01bac1ac2/tests%2Ftarget%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71dc033fcaf9b6a779642fd413738cd01bac1ac2/tests%2Ftarget%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacro_rules.rs?ref=71dc033fcaf9b6a779642fd413738cd01bac1ac2", "patch": "@@ -305,3 +305,31 @@ macro_rules! impl_as_byte_slice_arrays {\n         }\n     };\n }\n+\n+// #2919\n+fn foo() {\n+    {\n+        macro_rules! touch_value {\n+            ($func:ident, $value:expr) => {{\n+                let result = API::get_cached().$func(\n+                    self,\n+                    key.as_ptr(),\n+                    $value,\n+                    ffi::VSPropAppendMode::paTouch,\n+                );\n+                let result = API::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppend);\n+                let result =\n+                    API::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppendM);\n+                let result =\n+                    APIIIIIIIII::get_cached().$func(self, key.as_ptr(), $value, ffi::VSPropAppendM);\n+                let result = API::get_cached().$func(\n+                    self,\n+                    key.as_ptr(),\n+                    $value,\n+                    ffi::VSPropAppendMMMMMMMMMM,\n+                );\n+                debug_assert!(result == 0);\n+            }};\n+        }\n+    }\n+}"}]}