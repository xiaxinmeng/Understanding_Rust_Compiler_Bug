{"sha": "45a9d410f934247256812eda55ca66dd6999b3de", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1YTlkNDEwZjkzNDI0NzI1NjgxMmVkYTU1Y2E2NmRkNjk5OWIzZGU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-06T21:45:32Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-08-06T21:45:32Z"}, "message": "Auto merge of #53016 - scottmcm:impl-header-lifetime-elision, r=nikomatsakis\n\nExtract impl_header_lifetime_elision out of in_band_lifetimes\n\nThis way we can experiment with `impl Debug for &MyType` separately from `impl Debug for &'a MyType`.\n\nI can't say I know what the code in here is doing, so please let me know if there's a better way :slightly_smiling_face:\n\nI marked this as enabled in 2018 so that edition code continues to work without another flag.\n\nActual feature PR https://github.com/rust-lang/rust/pull/49251; Tracking Issue https://github.com/rust-lang/rust/issues/15872; In-band lifetimes tracking issue https://github.com/rust-lang/rust/issues/44524.\n\ncc @aturon, per discussion on discord earlier\ncc @cramertj & @nikomatsakis, who actually wrote these features", "tree": {"sha": "edbd77ca298bceabac8b20c73184a771b463028b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edbd77ca298bceabac8b20c73184a771b463028b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45a9d410f934247256812eda55ca66dd6999b3de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45a9d410f934247256812eda55ca66dd6999b3de", "html_url": "https://github.com/rust-lang/rust/commit/45a9d410f934247256812eda55ca66dd6999b3de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45a9d410f934247256812eda55ca66dd6999b3de/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf84056149baf649f0c297b02afdde7db2187f46", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf84056149baf649f0c297b02afdde7db2187f46", "html_url": "https://github.com/rust-lang/rust/commit/cf84056149baf649f0c297b02afdde7db2187f46"}, {"sha": "1c7af279aac534d179021b473f2c1667c3442cf6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c7af279aac534d179021b473f2c1667c3442cf6", "html_url": "https://github.com/rust-lang/rust/commit/1c7af279aac534d179021b473f2c1667c3442cf6"}], "stats": {"total": 120, "additions": 88, "deletions": 32}, "files": [{"sha": "0cc5d3034e0a6c7e8e6fc957c840f87dcafcd4a5", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -123,8 +123,8 @@ pub struct LoweringContext<'a> {\n     // Whether or not in-band lifetimes are being collected. This is used to\n     // indicate whether or not we're in a place where new lifetimes will result\n     // in in-band lifetime definitions, such a function or an impl header.\n-    // This will always be false unless the `in_band_lifetimes` feature is\n-    // enabled.\n+    // This will always be false unless the `in_band_lifetimes` or\n+    // `impl_header_lifetime_elision` feature is enabled.\n     is_collecting_in_band_lifetimes: bool,\n \n     // Currently in-scope lifetimes defined in impl headers, fn headers, or HRTB.\n@@ -658,9 +658,11 @@ impl<'a> LoweringContext<'a> {\n         assert!(self.lifetimes_to_define.is_empty());\n         let old_anonymous_lifetime_mode = self.anonymous_lifetime_mode;\n \n-        self.is_collecting_in_band_lifetimes = self.sess.features_untracked().in_band_lifetimes;\n-        if self.is_collecting_in_band_lifetimes {\n+        if self.sess.features_untracked().impl_header_lifetime_elision {\n             self.anonymous_lifetime_mode = anonymous_lifetime_mode;\n+            self.is_collecting_in_band_lifetimes = true;\n+        } else if self.sess.features_untracked().in_band_lifetimes {\n+            self.is_collecting_in_band_lifetimes = true;\n         }\n \n         let (in_band_ty_params, res) = f(self);\n@@ -718,6 +720,10 @@ impl<'a> LoweringContext<'a> {\n             return;\n         }\n \n+        if !self.sess.features_untracked().in_band_lifetimes {\n+            return;\n+        }\n+\n         if self.in_scope_lifetimes.contains(&ident.modern()) {\n             return;\n         }"}, {"sha": "804481846afdcc63ac03421febfa6cc1f816ad16", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -68,6 +68,7 @@\n #![feature(step_trait)]\n #![feature(integer_atomics)]\n #![feature(test)]\n+#![cfg_attr(not(stage0), feature(impl_header_lifetime_elision))]\n #![feature(in_band_lifetimes)]\n #![feature(macro_at_most_once_rep)]\n #![feature(crate_in_paths)]"}, {"sha": "a3822a4a1f93b1c8ee522d19474855879f2be112", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -380,7 +380,7 @@ declare_features! (\n     (active, crate_in_paths, \"1.23.0\", Some(45477), Some(Edition::Edition2018)),\n \n     // In-band lifetime bindings (e.g. `fn foo(x: &'a u8) -> &'a u8`)\n-    (active, in_band_lifetimes, \"1.23.0\", Some(44524), Some(Edition::Edition2018)),\n+    (active, in_band_lifetimes, \"1.23.0\", Some(44524), None),\n \n     // generic associated types (RFC 1598)\n     (active, generic_associated_types, \"1.23.0\", Some(44265), None),\n@@ -481,6 +481,10 @@ declare_features! (\n     (active, alloc_error_handler, \"1.29.0\", Some(51540), None),\n \n     (active, abi_amdgpu_kernel, \"1.29.0\", Some(51575), None),\n+\n+    // impl<I:Iterator> Iterator for &mut Iterator\n+    // impl Debug for Foo<'_>\n+    (active, impl_header_lifetime_elision, \"1.30.0\", Some(15872), Some(Edition::Edition2018)),\n );\n \n declare_features! ("}, {"sha": "b7e07e1dca6740fa249adcf7dac15da0718520c1", "filename": "src/test/ui/feature-gate-impl_header_lifetime_elision-with-in_band.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![allow(warnings)]\n+\n+// Make sure this related feature didn't accidentally enable this\n+#![feature(in_band_lifetimes)]\n+\n+trait MyTrait<'a> { }\n+\n+impl MyTrait<'a> for &u32 { }\n+//~^ ERROR missing lifetime specifier\n+\n+struct MyStruct;\n+trait MarkerTrait {}\n+\n+impl MarkerTrait for &'_ MyStruct { }\n+//~^ ERROR missing lifetime specifier\n+\n+fn main() {}"}, {"sha": "9487d11d505ca184fc23c0aa838086b34505f0bb", "filename": "src/test/ui/feature-gate-impl_header_lifetime_elision-with-in_band.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision-with-in_band.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -0,0 +1,15 @@\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/feature-gate-impl_header_lifetime_elision-with-in_band.rs:18:22\n+   |\n+LL | impl MyTrait<'a> for &u32 { }\n+   |                      ^ expected lifetime parameter\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/feature-gate-impl_header_lifetime_elision-with-in_band.rs:24:23\n+   |\n+LL | impl MarkerTrait for &'_ MyStruct { }\n+   |                       ^^ expected lifetime parameter\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0106`."}, {"sha": "3eb2ac1b00851b3aac677570bf39664a5ec9de93", "filename": "src/test/ui/feature-gate-impl_header_lifetime_elision.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "previous_filename": "src/test/ui/feature-gate-in_band_lifetimes-impl.rs"}, {"sha": "2c8a7dd4305a76e8777a251df1000616db422a90", "filename": "src/test/ui/feature-gate-impl_header_lifetime_elision.stderr", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-impl_header_lifetime_elision.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -1,11 +1,11 @@\n error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-in_band_lifetimes-impl.rs:15:26\n+  --> $DIR/feature-gate-impl_header_lifetime_elision.rs:15:26\n    |\n LL | impl<'a> MyTrait<'a> for &u32 { }\n    |                          ^ expected lifetime parameter\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/feature-gate-in_band_lifetimes-impl.rs:18:18\n+  --> $DIR/feature-gate-impl_header_lifetime_elision.rs:18:18\n    |\n LL | impl<'a> MyTrait<'_> for &'a f32 { }\n    |                  ^^ expected lifetime parameter", "previous_filename": "src/test/ui/feature-gate-in_band_lifetimes-impl.stderr"}, {"sha": "23b30711cf3c0540ca5761918683d7f4ac21da67", "filename": "src/test/ui/feature-gate-in_band_lifetimes.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -10,6 +10,9 @@\n \n #![allow(warnings)]\n \n+// Make sure this related feature didn't accidentally enable this\n+#![feature(impl_header_lifetime_elision)]\n+\n fn foo(x: &'x u8) -> &'x u8 { x }\n //~^ ERROR use of undeclared lifetime name\n //~^^ ERROR use of undeclared lifetime name"}, {"sha": "5fe143959d2c5470e41e239b7fd4f4eb127c2739", "filename": "src/test/ui/feature-gate-in_band_lifetimes.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-in_band_lifetimes.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -1,101 +1,101 @@\n error[E0261]: use of undeclared lifetime name `'x`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:13:12\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:16:12\n    |\n LL | fn foo(x: &'x u8) -> &'x u8 { x }\n    |            ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'x`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:13:23\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:16:23\n    |\n LL | fn foo(x: &'x u8) -> &'x u8 { x }\n    |                       ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:25:12\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:28:12\n    |\n LL | impl<'a> X<'b> {\n    |            ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:27:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:30:27\n    |\n LL |     fn inner_2(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:33:8\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:36:8\n    |\n LL | impl X<'b> {\n    |        ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:35:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:38:27\n    |\n LL |     fn inner_3(&self) -> &'b u8 {\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:43:9\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:46:9\n    |\n LL | impl Y<&'a u8> {\n    |         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:45:25\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:48:25\n    |\n LL |     fn inner(&self) -> &'a u8 {\n    |                         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:53:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:56:27\n    |\n LL |     fn any_lifetime() -> &'b u8;\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:55:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:58:27\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:55:40\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:58:40\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8;\n    |                                        ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:60:14\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:63:14\n    |\n LL | impl MyTrait<'a> for Y<&'a u8> {\n    |              ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:60:25\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:63:25\n    |\n LL | impl MyTrait<'a> for Y<&'a u8> {\n    |                         ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'a`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:63:31\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:66:31\n    |\n LL |     fn my_lifetime(&self) -> &'a u8 { self.0 }\n    |                               ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:65:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:68:27\n    |\n LL |     fn any_lifetime() -> &'b u8 { &0 }\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:67:27\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:70:27\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                           ^^ undeclared lifetime\n \n error[E0261]: use of undeclared lifetime name `'b`\n-  --> $DIR/feature-gate-in_band_lifetimes.rs:67:40\n+  --> $DIR/feature-gate-in_band_lifetimes.rs:70:40\n    |\n LL |     fn borrowed_lifetime(&'b self) -> &'b u8 { &*self.0 }\n    |                                        ^^ undeclared lifetime"}, {"sha": "15cf07771f2685409383672d4127b2913e557b88", "filename": "src/test/ui/impl-header-lifetime-elision/assoc-type.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -13,7 +13,7 @@\n \n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n trait MyTrait {\n     type Output;\n@@ -30,7 +30,7 @@ impl MyTrait for &u32 {\n }\n \n // This is what you have to do:\n-impl MyTrait for &'a f32 {\n+impl<'a> MyTrait for &'a f32 {\n     type Output = &'a f32;\n }\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/assoc-type.rs"}, {"sha": "59b2cfd2226db121c670cd8515ca45db3547e337", "filename": "src/test/ui/impl-header-lifetime-elision/assoc-type.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fassoc-type.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "previous_filename": "src/test/ui/in-band-lifetimes/impl/assoc-type.stderr"}, {"sha": "f5d98e04ad804009fdef311814c7c8eaaa86076c", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.nll.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.nll.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "previous_filename": "src/test/ui/in-band-lifetimes/impl/dyn-trait.nll.stderr"}, {"sha": "661bfa8bdcc9bd3673ed886eaf298b23f17a9fce", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -13,7 +13,7 @@\n \n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n use std::fmt::Debug;\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/dyn-trait.rs"}, {"sha": "3e54ebeb398d6dda554d04c2340cac6950edd2e6", "filename": "src/test/ui/impl-header-lifetime-elision/dyn-trait.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fdyn-trait.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "previous_filename": "src/test/ui/in-band-lifetimes/impl/dyn-trait.stderr"}, {"sha": "f88c899065c1bebc6323d3c3dd32f41731e63ee8", "filename": "src/test/ui/impl-header-lifetime-elision/path-elided.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n trait MyTrait { }\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/path-elided.rs"}, {"sha": "6c1d72411bf57a31125d67f592a027e5a7332761", "filename": "src/test/ui/impl-header-lifetime-elision/path-elided.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-elided.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "previous_filename": "src/test/ui/in-band-lifetimes/impl/path-elided.stderr"}, {"sha": "38118f0d213335c030826aaee62038a9a4a5c7f0", "filename": "src/test/ui/impl-header-lifetime-elision/path-underscore.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fpath-underscore.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -14,7 +14,7 @@\n \n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n trait MyTrait { }\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/path-underscore.rs"}, {"sha": "96a56aacd87cce5ddfbea3a3ff2e45398a9de5a7", "filename": "src/test/ui/impl-header-lifetime-elision/ref-underscore.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fref-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fref-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Fref-underscore.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -14,7 +14,7 @@\n \n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n trait MyTrait { }\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/ref-underscore.rs"}, {"sha": "afdf2200d909a5824a1cffc686219da8e25b73aa", "filename": "src/test/ui/impl-header-lifetime-elision/trait-elided.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n trait MyTrait<'a> { }\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/trait-elided.rs"}, {"sha": "fe3ded8e04c3309fe2db7b5932d53887eb7ee416", "filename": "src/test/ui/impl-header-lifetime-elision/trait-elided.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-elided.stderr?ref=45a9d410f934247256812eda55ca66dd6999b3de", "previous_filename": "src/test/ui/in-band-lifetimes/impl/trait-elided.stderr"}, {"sha": "98242ff6577955c5c37d8c6c0979b39725ab3e73", "filename": "src/test/ui/impl-header-lifetime-elision/trait-underscore.rs", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45a9d410f934247256812eda55ca66dd6999b3de/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-header-lifetime-elision%2Ftrait-underscore.rs?ref=45a9d410f934247256812eda55ca66dd6999b3de", "patch": "@@ -15,7 +15,7 @@\n \n #![allow(warnings)]\n \n-#![feature(in_band_lifetimes)]\n+#![feature(impl_header_lifetime_elision)]\n \n trait MyTrait<'a> { }\n ", "previous_filename": "src/test/ui/in-band-lifetimes/impl/trait-underscore.rs"}]}