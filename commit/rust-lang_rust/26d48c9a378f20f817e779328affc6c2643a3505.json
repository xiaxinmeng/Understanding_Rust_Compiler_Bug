{"sha": "26d48c9a378f20f817e779328affc6c2643a3505", "node_id": "C_kwDOAAsO6NoAKDI2ZDQ4YzlhMzc4ZjIwZjgxN2U3NzkzMjhhZmZjNmMyNjQzYTM1MDU", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-11-28T13:01:49Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2022-11-28T13:01:49Z"}, "message": "Rename the build/ directory to dist/\n\nThis will allow putting all temporary build artifacts in build/ in the\nfuture, keeping all the build output artifacts in dist/", "tree": {"sha": "fab90f2d1a3ff2b2ee8ef48cad14b4865bcb2b7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fab90f2d1a3ff2b2ee8ef48cad14b4865bcb2b7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26d48c9a378f20f817e779328affc6c2643a3505", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26d48c9a378f20f817e779328affc6c2643a3505", "html_url": "https://github.com/rust-lang/rust/commit/26d48c9a378f20f817e779328affc6c2643a3505", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26d48c9a378f20f817e779328affc6c2643a3505/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a00c7a01dab2834eb16142e8cc7e984bf58508d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a00c7a01dab2834eb16142e8cc7e984bf58508d2", "html_url": "https://github.com/rust-lang/rust/commit/a00c7a01dab2834eb16142e8cc7e984bf58508d2"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "de3c89f3383dac0a12a0e67b89ea47ddb3ddc08e", "filename": ".github/workflows/main.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/.github%2Fworkflows%2Fmain.yml", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/.github%2Fworkflows%2Fmain.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fmain.yml?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -111,7 +111,7 @@ jobs:\n         ./y.rs test\n \n     - name: Package prebuilt cg_clif\n-      run: tar cvfJ cg_clif.tar.xz build\n+      run: tar cvfJ cg_clif.tar.xz dist\n \n     - name: Upload prebuilt cg_clif\n       if: matrix.env.TARGET_TRIPLE != 'x86_64-pc-windows-gnu'\n@@ -213,7 +213,7 @@ jobs:\n \n     - name: Package prebuilt cg_clif\n       # don't use compression as xzip isn't supported by tar on windows and bzip2 hangs\n-      run: tar cvf cg_clif.tar build\n+      run: tar cvf cg_clif.tar dist\n \n     - name: Upload prebuilt cg_clif\n       uses: actions/upload-artifact@v3"}, {"sha": "b443fd58a1b98344bec2720e26139b6467907d89", "filename": ".gitignore", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -14,5 +14,6 @@ perf.data.old\n /build_sysroot/sysroot_src\n /build_sysroot/compiler-builtins\n /build_sysroot/rustc_version\n+/dist\n /rust\n /download"}, {"sha": "0e9c77244d4cc85d765371e97370db5c0adebf11", "filename": "Readme.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/Readme.md", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/Readme.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Readme.md?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -37,7 +37,7 @@ Assuming `$cg_clif_dir` is the directory you cloned this repo into and you follo\n In the directory with your project (where you can do the usual `cargo build`), run:\n \n ```bash\n-$ $cg_clif_dir/build/cargo-clif build\n+$ $cg_clif_dir/dist/cargo-clif build\n ```\n \n This will build your project with rustc_codegen_cranelift instead of the usual LLVM backend."}, {"sha": "b246a70e89f18f9aca7c04dfb93fc012783a1991", "filename": "build_system/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/build_system%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/build_system%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fmod.rs?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -75,7 +75,7 @@ pub fn main() {\n         }\n     };\n \n-    let mut target_dir = PathBuf::from(\"build\");\n+    let mut target_dir = PathBuf::from(\"dist\");\n     let mut channel = \"release\";\n     let mut sysroot_kind = SysrootKind::Clif;\n     let mut use_unstable_features = true;"}, {"sha": "174b77206fba69be70767f73e8c210bb16b61781", "filename": "build_system/tests.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -274,7 +274,7 @@ const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n             eprintln!(\"[BENCH COMPILE] ebobby/simple-raytracer\");\n             let cargo_clif = env::current_dir()\n                 .unwrap()\n-                .join(\"build\")\n+                .join(\"dist\")\n                 .join(get_wrapper_file_name(\"cargo-clif\", \"bin\"));\n             let source_dir = SIMPLE_RAYTRACER.source_dir();\n             let manifest_path = SIMPLE_RAYTRACER.manifest_path();\n@@ -503,11 +503,11 @@ impl TestRunner {\n             target_triple.contains(\"x86_64\") && is_native && !host_triple.contains(\"windows\");\n \n         let mut rustc_clif = root_dir.clone();\n-        rustc_clif.push(\"build\");\n+        rustc_clif.push(\"dist\");\n         rustc_clif.push(get_wrapper_file_name(\"rustc-clif\", \"bin\"));\n \n         let mut rustdoc_clif = root_dir.clone();\n-        rustdoc_clif.push(\"build\");\n+        rustdoc_clif.push(\"dist\");\n         rustdoc_clif.push(get_wrapper_file_name(\"rustdoc-clif\", \"bin\"));\n \n         let mut rustflags = env::var(\"RUSTFLAGS\").ok().unwrap_or(\"\".to_string());"}, {"sha": "cd20f3ea3f1e76df75d5ac0de70d64d8e92d6b61", "filename": "clean_all.sh", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/clean_all.sh", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/clean_all.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clean_all.sh?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -2,9 +2,9 @@\n set -e\n \n rm -rf build_sysroot/{sysroot_src/,target/,compiler-builtins/,rustc_version}\n-rm -rf target/ build/ perf.data{,.old} y.bin\n+rm -rf target/ dist/ perf.data{,.old} y.bin\n rm -rf download/\n \n # Kept for now in case someone updates their checkout of cg_clif before running clean_all.sh\n # FIXME remove at some point in the future\n-rm -rf rand/ regex/ simple-raytracer/ portable-simd/ abi-checker/ abi-cafe/\n+rm -rf rand/ regex/ simple-raytracer/ portable-simd/ abi-checker/ abi-cafe/ build/"}, {"sha": "4c2b0fa170498812b976b67041cc62ab73ff3f81", "filename": "docs/usage.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/docs%2Fusage.md", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/docs%2Fusage.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fusage.md?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -9,7 +9,7 @@ Assuming `$cg_clif_dir` is the directory you cloned this repo into and you follo\n In the directory with your project (where you can do the usual `cargo build`), run:\n \n ```bash\n-$ $cg_clif_dir/build/cargo-clif build\n+$ $cg_clif_dir/dist/cargo-clif build\n ```\n \n This will build your project with rustc_codegen_cranelift instead of the usual LLVM backend.\n@@ -19,7 +19,7 @@ This will build your project with rustc_codegen_cranelift instead of the usual L\n > You should prefer using the Cargo method.\n \n ```bash\n-$ $cg_clif_dir/build/rustc-clif my_crate.rs\n+$ $cg_clif_dir/dist/rustc-clif my_crate.rs\n ```\n \n ## Jit mode\n@@ -32,20 +32,20 @@ In jit mode cg_clif will immediately execute your code without creating an execu\n > The jit mode will probably need cargo integration to make this possible.\n \n ```bash\n-$ $cg_clif_dir/build/cargo-clif jit\n+$ $cg_clif_dir/dist/cargo-clif jit\n ```\n \n or\n \n ```bash\n-$ $cg_clif_dir/build/rustc-clif -Zunstable-features -Cllvm-args=mode=jit -Cprefer-dynamic my_crate.rs\n+$ $cg_clif_dir/dist/rustc-clif -Zunstable-features -Cllvm-args=mode=jit -Cprefer-dynamic my_crate.rs\n ```\n \n There is also an experimental lazy jit mode. In this mode functions are only compiled once they are\n first called.\n \n ```bash\n-$ $cg_clif_dir/build/cargo-clif lazy-jit\n+$ $cg_clif_dir/dist/cargo-clif lazy-jit\n ```\n \n ## Shell\n@@ -54,7 +54,7 @@ These are a few functions that allow you to easily run rust code from the shell\n \n ```bash\n function jit_naked() {\n-    echo \"$@\" | $cg_clif_dir/build/rustc-clif - -Zunstable-features -Cllvm-args=mode=jit -Cprefer-dynamic\n+    echo \"$@\" | $cg_clif_dir/dist/rustc-clif - -Zunstable-features -Cllvm-args=mode=jit -Cprefer-dynamic\n }\n \n function jit() {"}, {"sha": "f782671fe36f9b45fab05a5c6f335d9880211c23", "filename": "scripts/filter_profile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/scripts%2Ffilter_profile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/scripts%2Ffilter_profile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ffilter_profile.rs?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -2,7 +2,7 @@\n #![forbid(unsafe_code)]/* This line is ignored by bash\n # This block is ignored by rustc\n pushd $(dirname \"$0\")/../\n-RUSTC=\"$(pwd)/build/rustc-clif\"\n+RUSTC=\"$(pwd)/dist/rustc-clif\"\n popd\n PROFILE=$1 OUTPUT=$2 exec $RUSTC -Zunstable-options -Cllvm-args=mode=jit -Cprefer-dynamic $0\n #*/"}, {"sha": "6c64b7de7daa10d863a903a186e0ee9c4846aeed", "filename": "scripts/setup_rust_fork.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/scripts%2Fsetup_rust_fork.sh", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/scripts%2Fsetup_rust_fork.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fsetup_rust_fork.sh?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -36,7 +36,7 @@ changelog-seen = 2\n ninja = false\n \n [build]\n-rustc = \"$(pwd)/../build/rustc-clif\"\n+rustc = \"$(pwd)/../dist/rustc-clif\"\n cargo = \"$(rustup which cargo)\"\n full-bootstrap = true\n local-rebuild = true"}, {"sha": "d2656f783ad86c20c5385730600068095befc3ed", "filename": "scripts/test_rustc_tests.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/26d48c9a378f20f817e779328affc6c2643a3505/scripts%2Ftest_rustc_tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/26d48c9a378f20f817e779328affc6c2643a3505/scripts%2Ftest_rustc_tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Ftest_rustc_tests.sh?ref=26d48c9a378f20f817e779328affc6c2643a3505", "patch": "@@ -89,7 +89,7 @@ rm src/test/ui/consts/issue-33537.rs # same\n # doesn't work due to the way the rustc test suite is invoked.\n # should work when using ./x.py test the way it is intended\n # ============================================================\n-rm -r src/test/run-make/emit-shared-files # requires the rustdoc executable in build/bin/\n+rm -r src/test/run-make/emit-shared-files # requires the rustdoc executable in dist/bin/\n rm -r src/test/run-make/unstable-flag-required # same\n rm -r src/test/run-make/rustdoc-* # same\n rm -r src/test/run-make/issue-88756-default-output # same"}]}