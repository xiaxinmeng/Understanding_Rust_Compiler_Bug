{"sha": "f1e71a5b41a0622c21952d23ddeba6f3d9025881", "node_id": "C_kwDOAAsO6NoAKGYxZTcxYTViNDFhMDYyMmMyMTk1MmQyM2RkZWJhNmYzZDkwMjU4ODE", "commit": {"author": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-24T23:34:02Z"}, "committer": {"name": "Ellen", "email": "supbscripter@gmail.com", "date": "2021-09-24T23:34:02Z"}, "message": "arrr caught ya caller\n\n\nawd", "tree": {"sha": "7e8760986dc921f9545e67c0302ce50776365a04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e8760986dc921f9545e67c0302ce50776365a04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1e71a5b41a0622c21952d23ddeba6f3d9025881", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1e71a5b41a0622c21952d23ddeba6f3d9025881", "html_url": "https://github.com/rust-lang/rust/commit/f1e71a5b41a0622c21952d23ddeba6f3d9025881", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1e71a5b41a0622c21952d23ddeba6f3d9025881/comments", "author": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "committer": {"login": "BoxyUwU", "id": 21149742, "node_id": "MDQ6VXNlcjIxMTQ5NzQy", "avatar_url": "https://avatars.githubusercontent.com/u/21149742?v=4", "gravatar_id": "", "url": "https://api.github.com/users/BoxyUwU", "html_url": "https://github.com/BoxyUwU", "followers_url": "https://api.github.com/users/BoxyUwU/followers", "following_url": "https://api.github.com/users/BoxyUwU/following{/other_user}", "gists_url": "https://api.github.com/users/BoxyUwU/gists{/gist_id}", "starred_url": "https://api.github.com/users/BoxyUwU/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/BoxyUwU/subscriptions", "organizations_url": "https://api.github.com/users/BoxyUwU/orgs", "repos_url": "https://api.github.com/users/BoxyUwU/repos", "events_url": "https://api.github.com/users/BoxyUwU/events{/privacy}", "received_events_url": "https://api.github.com/users/BoxyUwU/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73422130ee96c09e7214c876a3600ac1f32aa8c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/73422130ee96c09e7214c876a3600ac1f32aa8c8", "html_url": "https://github.com/rust-lang/rust/commit/73422130ee96c09e7214c876a3600ac1f32aa8c8"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "a1ffbae8b15f6dd7d3c02264ade7a1c2faf2d24d", "filename": "compiler/rustc_data_structures/src/steal.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f1e71a5b41a0622c21952d23ddeba6f3d9025881/compiler%2Frustc_data_structures%2Fsrc%2Fsteal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1e71a5b41a0622c21952d23ddeba6f3d9025881/compiler%2Frustc_data_structures%2Fsrc%2Fsteal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fsteal.rs?ref=f1e71a5b41a0622c21952d23ddeba6f3d9025881", "patch": "@@ -33,10 +33,11 @@ impl<T> Steal<T> {\n \n     #[track_caller]\n     pub fn borrow(&self) -> MappedReadGuard<'_, T> {\n-        ReadGuard::map(self.value.borrow(), |opt| match *opt {\n-            None => panic!(\"attempted to read from stolen value\"),\n-            Some(ref v) => v,\n-        })\n+        let borrow = self.value.borrow();\n+        if let None = &*borrow {\n+            panic!(\"attempted to read from stolen value: {}\", std::any::type_name::<T>());\n+        }\n+        ReadGuard::map(borrow, |opt| opt.as_ref().unwrap())\n     }\n \n     #[track_caller]"}]}