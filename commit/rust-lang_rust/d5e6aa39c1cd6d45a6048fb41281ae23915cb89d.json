{"sha": "d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "node_id": "C_kwDOAAsO6NoAKGQ1ZTZhYTM5YzFjZDZkNDVhNjA0OGZiNDEyODFhZTIzOTE1Y2I4OWQ", "commit": {"author": {"name": "Tiddo Langerak", "email": "tiddolangerak@gmail.com", "date": "2022-09-01T05:37:30Z"}, "committer": {"name": "Tiddo Langerak", "email": "tiddolangerak@gmail.com", "date": "2022-09-01T05:43:41Z"}, "message": "Pre-cast impl nodes to ast::Impl in find_non_trait_impl", "tree": {"sha": "d771ca9b13cc62d9fa6071de2181e8ead4ee4505", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d771ca9b13cc62d9fa6071de2181e8ead4ee4505"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQHXBAABCgBBFiEEgTJEf2e6XVuOaUO2fnru5IfHUwAFAmMQRo0jHHRpZGRvbGFu\nZ2VyYWsrbGFwdG9wMjAyMkBnbWFpbC5jb20ACgkQfnru5IfHUwC8uwv/bRsAwtFw\n0M2LH1Pi0bjF2A6hYEiiy1nXMWBpQMu09AGMyKcw48pO+n9MlKWS+NyvFz0Nb5mQ\nNkM3T1ibpWPiEUtLpmMEls95TYTnIbekTIBpjuzzoiv7noNS0p/8tGR5qSnWzjcq\n5EbCDR/obKiqPzLzDoJAAxe0M8tzIE6w0XrevoN6A/yh6ZsO87gdJSIYgAwGUgue\n67ZODIRIZJR1IbxAzlSPVxcaumymG+szc6qdsqxAtoOlH8iqiAGxTv7rk1jILKlM\nrkUsREJsFD+UcEA20REuar/2+SWK844JiCyIkh5Lg8l6zqfhjwKsJSQgUfDxGBz6\nau9nXkfEyqbOQD5raU6ZgWENoRz3e8fbdDNt0Zg7AI///L4pLUY4alld90t/N2fc\nUF9Rc9grrwDWRmwjtGdcZuSRoFjX4olw5EA8uVsEXMZILA5wVpil4w47fWwGXJGG\n36jKwzZMv9jm7HNp8FEbFt2Dz+6Jl3qQoe/nGpZFAzZH/+HcQuTYgWmd\n=Gkwt\n-----END PGP SIGNATURE-----", "payload": "tree d771ca9b13cc62d9fa6071de2181e8ead4ee4505\nparent 7402366877b3f50563cba4ba919cdc88c6220d14\nauthor Tiddo Langerak <tiddolangerak@gmail.com> 1662010650 +0300\ncommitter Tiddo Langerak <tiddolangerak@gmail.com> 1662011021 +0300\n\nPre-cast impl nodes to ast::Impl in find_non_trait_impl\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "html_url": "https://github.com/rust-lang/rust/commit/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d/comments", "author": {"login": "TiddoLangerak", "id": 1759192, "node_id": "MDQ6VXNlcjE3NTkxOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1759192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TiddoLangerak", "html_url": "https://github.com/TiddoLangerak", "followers_url": "https://api.github.com/users/TiddoLangerak/followers", "following_url": "https://api.github.com/users/TiddoLangerak/following{/other_user}", "gists_url": "https://api.github.com/users/TiddoLangerak/gists{/gist_id}", "starred_url": "https://api.github.com/users/TiddoLangerak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TiddoLangerak/subscriptions", "organizations_url": "https://api.github.com/users/TiddoLangerak/orgs", "repos_url": "https://api.github.com/users/TiddoLangerak/repos", "events_url": "https://api.github.com/users/TiddoLangerak/events{/privacy}", "received_events_url": "https://api.github.com/users/TiddoLangerak/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TiddoLangerak", "id": 1759192, "node_id": "MDQ6VXNlcjE3NTkxOTI=", "avatar_url": "https://avatars.githubusercontent.com/u/1759192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TiddoLangerak", "html_url": "https://github.com/TiddoLangerak", "followers_url": "https://api.github.com/users/TiddoLangerak/followers", "following_url": "https://api.github.com/users/TiddoLangerak/following{/other_user}", "gists_url": "https://api.github.com/users/TiddoLangerak/gists{/gist_id}", "starred_url": "https://api.github.com/users/TiddoLangerak/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TiddoLangerak/subscriptions", "organizations_url": "https://api.github.com/users/TiddoLangerak/orgs", "repos_url": "https://api.github.com/users/TiddoLangerak/repos", "events_url": "https://api.github.com/users/TiddoLangerak/events{/privacy}", "received_events_url": "https://api.github.com/users/TiddoLangerak/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7402366877b3f50563cba4ba919cdc88c6220d14", "url": "https://api.github.com/repos/rust-lang/rust/commits/7402366877b3f50563cba4ba919cdc88c6220d14", "html_url": "https://github.com/rust-lang/rust/commit/7402366877b3f50563cba4ba919cdc88c6220d14"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "c40fb291a32a26d58f64b716a25a67e033481e23", "filename": "crates/ide-assists/src/handlers/extract_function.rs", "status": "modified", "additions": 13, "deletions": 19, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5e6aa39c1cd6d45a6048fb41281ae23915cb89d/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=d5e6aa39c1cd6d45a6048fb41281ae23915cb89d", "patch": "@@ -1276,32 +1276,26 @@ fn node_to_insert_after(body: &FunctionBody, anchor: Anchor) -> Option<SyntaxNod\n     last_ancestor\n }\n \n-fn find_non_trait_impl(trait_impl: &SyntaxNode) -> Option<SyntaxNode> {\n-    let impl_type = Some(impl_type_name(trait_impl)?);\n+fn find_non_trait_impl(trait_impl: &SyntaxNode) -> Option<ast::Impl> {\n+    let as_impl = ast::Impl::cast(trait_impl.clone())?;\n+    let impl_type = Some(impl_type_name(&as_impl)?);\n \n-    let mut sibblings = trait_impl.parent()?.children();\n-    sibblings.find(|s| impl_type_name(s) == impl_type && !is_trait_impl(s))\n+    let sibblings = trait_impl.parent()?.children();\n+    sibblings.filter_map(ast::Impl::cast)\n+        .find(|s| impl_type_name(s) == impl_type && !is_trait_impl(s))\n }\n \n-fn last_impl_member(impl_node: &SyntaxNode) -> Option<SyntaxNode> {\n-    impl_node.children().find(|c| c.kind() == SyntaxKind::ASSOC_ITEM_LIST)?.last_child()\n+fn last_impl_member(impl_node: &ast::Impl) -> Option<SyntaxNode> {\n+    let last_child = impl_node.assoc_item_list()?.assoc_items().last()?;\n+    Some(last_child.syntax().clone())\n }\n \n-fn is_trait_impl(node: &SyntaxNode) -> bool {\n-    if !ast::Impl::can_cast(node.kind()) {\n-        return false;\n-    }\n-    match ast::Impl::cast(node.clone()) {\n-        Some(c) => c.trait_().is_some(),\n-        None => false,\n-    }\n+fn is_trait_impl(node: &ast::Impl) -> bool {\n+    node.trait_().is_some()\n }\n \n-fn impl_type_name(impl_node: &SyntaxNode) -> Option<String> {\n-    if !ast::Impl::can_cast(impl_node.kind()) {\n-        return None;\n-    }\n-    Some(ast::Impl::cast(impl_node.clone())?.self_ty()?.to_string())\n+fn impl_type_name(impl_node: &ast::Impl) -> Option<String> {\n+    Some(impl_node.self_ty()?.to_string())\n }\n \n fn make_call(ctx: &AssistContext<'_>, fun: &Function, indent: IndentLevel) -> String {"}]}