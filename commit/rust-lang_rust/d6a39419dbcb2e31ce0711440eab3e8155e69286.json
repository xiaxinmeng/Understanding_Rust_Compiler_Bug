{"sha": "d6a39419dbcb2e31ce0711440eab3e8155e69286", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ2YTM5NDE5ZGJjYjJlMzFjZTA3MTE0NDBlYWIzZTgxNTVlNjkyODY=", "commit": {"author": {"name": "Tom Jakubowski", "email": "tom@crystae.net", "date": "2014-06-09T07:30:04Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-10T00:46:53Z"}, "message": "collections: Add missing Default impls\n\nAdd Default impls for TreeMap, TreeSet, SmallIntMap, BitvSet, DList,\nPriorityQueue, RingBuf, TrieMap, and TrieSet.", "tree": {"sha": "a6a12c6cce443cec010d860c66b574699424257a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6a12c6cce443cec010d860c66b574699424257a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d6a39419dbcb2e31ce0711440eab3e8155e69286", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d6a39419dbcb2e31ce0711440eab3e8155e69286", "html_url": "https://github.com/rust-lang/rust/commit/d6a39419dbcb2e31ce0711440eab3e8155e69286", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d6a39419dbcb2e31ce0711440eab3e8155e69286/comments", "author": {"login": "tomjakubowski", "id": 667901, "node_id": "MDQ6VXNlcjY2NzkwMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/667901?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tomjakubowski", "html_url": "https://github.com/tomjakubowski", "followers_url": "https://api.github.com/users/tomjakubowski/followers", "following_url": "https://api.github.com/users/tomjakubowski/following{/other_user}", "gists_url": "https://api.github.com/users/tomjakubowski/gists{/gist_id}", "starred_url": "https://api.github.com/users/tomjakubowski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tomjakubowski/subscriptions", "organizations_url": "https://api.github.com/users/tomjakubowski/orgs", "repos_url": "https://api.github.com/users/tomjakubowski/repos", "events_url": "https://api.github.com/users/tomjakubowski/events{/privacy}", "received_events_url": "https://api.github.com/users/tomjakubowski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "810ddfd611f5a56980df0c05e10e751203710d81", "url": "https://api.github.com/repos/rust-lang/rust/commits/810ddfd611f5a56980df0c05e10e751203710d81", "html_url": "https://github.com/rust-lang/rust/commit/810ddfd611f5a56980df0c05e10e751203710d81"}], "stats": {"total": 52, "additions": 52, "deletions": 0}, "files": [{"sha": "e100baa1e3ac493bd329842ff40c592cb9d121e2", "filename": "src/libcollections/bitv.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbitv.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -13,6 +13,7 @@\n use core::prelude::*;\n \n use core::cmp;\n+use core::default::Default;\n use core::fmt;\n use core::iter::{Enumerate, Repeat, Map, Zip};\n use core::ops;\n@@ -698,6 +699,11 @@ pub struct BitvSet {\n     bitv: BigBitv\n }\n \n+impl Default for BitvSet {\n+    #[inline]\n+    fn default() -> BitvSet { BitvSet::new() }\n+}\n+\n impl BitvSet {\n     /// Creates a new bit vector set with initially no contents\n     pub fn new() -> BitvSet {"}, {"sha": "ac8c5c5557ed9cff4921f08afa9e252fddd51fc6", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -24,6 +24,7 @@\n use core::prelude::*;\n \n use alloc::owned::Box;\n+use core::default::Default;\n use core::fmt;\n use core::iter;\n use core::mem;\n@@ -262,6 +263,11 @@ impl<T> Deque<T> for DList<T> {\n     }\n }\n \n+impl<T> Default for DList<T> {\n+    #[inline]\n+    fn default() -> DList<T> { DList::new() }\n+}\n+\n impl<T> DList<T> {\n     /// Create an empty DList\n     #[inline]"}, {"sha": "f25864933f2eba691de2dddcb257aeeb11430c48", "filename": "src/libcollections/priority_queue.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fpriority_queue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fpriority_queue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fpriority_queue.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -14,6 +14,7 @@\n \n use core::prelude::*;\n \n+use core::default::Default;\n use core::mem::{zeroed, replace, swap};\n use core::ptr;\n \n@@ -37,6 +38,11 @@ impl<T: Ord> Mutable for PriorityQueue<T> {\n     fn clear(&mut self) { self.data.truncate(0) }\n }\n \n+impl<T: Ord> Default for PriorityQueue<T> {\n+    #[inline]\n+    fn default() -> PriorityQueue<T> { PriorityQueue::new() }\n+}\n+\n impl<T: Ord> PriorityQueue<T> {\n     /// An iterator visiting all values in underlying vector, in\n     /// arbitrary order."}, {"sha": "ae1925126cae7055f8ef8b2cc0bb8fd395705ed8", "filename": "src/libcollections/ringbuf.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fringbuf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fringbuf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fringbuf.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -16,6 +16,7 @@\n use core::prelude::*;\n \n use core::cmp;\n+use core::default::Default;\n use core::fmt;\n use core::iter::RandomAccessIterator;\n \n@@ -112,6 +113,11 @@ impl<T> Deque<T> for RingBuf<T> {\n     }\n }\n \n+impl<T> Default for RingBuf<T> {\n+    #[inline]\n+    fn default() -> RingBuf<T> { RingBuf::new() }\n+}\n+\n impl<T> RingBuf<T> {\n     /// Create an empty RingBuf\n     pub fn new() -> RingBuf<T> {"}, {"sha": "6b4982de0821699816e94a85214d2e87681d54cf", "filename": "src/libcollections/smallintmap.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fsmallintmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Fsmallintmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fsmallintmap.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -17,6 +17,7 @@\n \n use core::prelude::*;\n \n+use core::default::Default;\n use core::fmt;\n use core::iter::{Enumerate, FilterMap};\n use core::mem::replace;\n@@ -114,6 +115,11 @@ impl<V> MutableMap<uint, V> for SmallIntMap<V> {\n     }\n }\n \n+impl<V> Default for SmallIntMap<V> {\n+    #[inline]\n+    fn default() -> SmallIntMap<V> { SmallIntMap::new() }\n+}\n+\n impl<V> SmallIntMap<V> {\n     /// Create an empty SmallIntMap\n     pub fn new() -> SmallIntMap<V> { SmallIntMap{v: vec!()} }"}, {"sha": "1f4ee52008cdc56833056a95fe6288dadb0f8e3c", "filename": "src/libcollections/treemap.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Ftreemap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Ftreemap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftreemap.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -15,6 +15,7 @@\n use core::prelude::*;\n \n use alloc::owned::Box;\n+use core::default::Default;\n use core::fmt;\n use core::fmt::Show;\n use core::iter::Peekable;\n@@ -135,6 +136,11 @@ impl<K: Ord, V> MutableMap<K, V> for TreeMap<K, V> {\n     }\n }\n \n+impl<K: Ord, V> Default for TreeMap<K,V> {\n+    #[inline]\n+    fn default() -> TreeMap<K, V> { TreeMap::new() }\n+}\n+\n impl<K: Ord, V> TreeMap<K, V> {\n     /// Create an empty TreeMap\n     pub fn new() -> TreeMap<K, V> { TreeMap{root: None, length: 0} }\n@@ -633,6 +639,11 @@ impl<T: Ord> MutableSet<T> for TreeSet<T> {\n     fn remove(&mut self, value: &T) -> bool { self.map.remove(value) }\n }\n \n+impl<T: Ord> Default for TreeSet<T> {\n+    #[inline]\n+    fn default() -> TreeSet<T> { TreeSet::new() }\n+}\n+\n impl<T: Ord> TreeSet<T> {\n     /// Create an empty TreeSet\n     #[inline]"}, {"sha": "3f4fdd66b802accf5b46a9ed5036783a66d5a100", "filename": "src/libcollections/trie.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Ftrie.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d6a39419dbcb2e31ce0711440eab3e8155e69286/src%2Flibcollections%2Ftrie.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Ftrie.rs?ref=d6a39419dbcb2e31ce0711440eab3e8155e69286", "patch": "@@ -13,6 +13,7 @@\n use core::prelude::*;\n \n use alloc::owned::Box;\n+use core::default::Default;\n use core::mem::zeroed;\n use core::mem;\n use core::uint;\n@@ -105,6 +106,11 @@ impl<T> MutableMap<uint, T> for TrieMap<T> {\n     }\n }\n \n+impl<T> Default for TrieMap<T> {\n+    #[inline]\n+    fn default() -> TrieMap<T> { TrieMap::new() }\n+}\n+\n impl<T> TrieMap<T> {\n     /// Create an empty TrieMap\n     #[inline]\n@@ -332,6 +338,11 @@ impl MutableSet<uint> for TrieSet {\n     }\n }\n \n+impl Default for TrieSet {\n+    #[inline]\n+    fn default() -> TrieSet { TrieSet::new() }\n+}\n+\n impl TrieSet {\n     /// Create an empty TrieSet\n     #[inline]"}]}