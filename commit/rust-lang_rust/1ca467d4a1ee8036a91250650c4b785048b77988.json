{"sha": "1ca467d4a1ee8036a91250650c4b785048b77988", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjYTQ2N2Q0YTFlZTgwMzZhOTEyNTA2NTBjNGI3ODUwNDhiNzc5ODg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-21T23:19:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-21T23:25:14Z"}, "message": "change `make_query_outlives` to take an iterator", "tree": {"sha": "e244904ad179711665df97181c8ec7596a72d67f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e244904ad179711665df97181c8ec7596a72d67f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ca467d4a1ee8036a91250650c4b785048b77988", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ca467d4a1ee8036a91250650c4b785048b77988", "html_url": "https://github.com/rust-lang/rust/commit/1ca467d4a1ee8036a91250650c4b785048b77988", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ca467d4a1ee8036a91250650c4b785048b77988/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9d496796f091f42c8bac60c5c9ca05e6ca5dcda", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9d496796f091f42c8bac60c5c9ca05e6ca5dcda", "html_url": "https://github.com/rust-lang/rust/commit/a9d496796f091f42c8bac60c5c9ca05e6ca5dcda"}], "stats": {"total": 28, "additions": 18, "deletions": 10}, "files": [{"sha": "cfaa6188bb7f94d2fa650053a34e45874cc6ac2c", "filename": "src/librustc/infer/canonical/query_result.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/1ca467d4a1ee8036a91250650c4b785048b77988/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca467d4a1ee8036a91250650c4b785048b77988/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fquery_result.rs?ref=1ca467d4a1ee8036a91250650c4b785048b77988", "patch": "@@ -24,19 +24,18 @@ use infer::canonical::{\n };\n use infer::region_constraints::{Constraint, RegionConstraintData};\n use infer::InferCtxtBuilder;\n-use infer::{InferCtxt, InferOk, InferResult, RegionObligation};\n+use infer::{InferCtxt, InferOk, InferResult};\n use rustc_data_structures::indexed_vec::Idx;\n use rustc_data_structures::indexed_vec::IndexVec;\n use rustc_data_structures::sync::Lrc;\n use std::fmt::Debug;\n-use syntax::ast;\n use syntax_pos::DUMMY_SP;\n use traits::query::{Fallible, NoSolution};\n use traits::{FulfillmentContext, TraitEngine};\n use traits::{Obligation, ObligationCause, PredicateObligation};\n use ty::fold::TypeFoldable;\n use ty::subst::{Kind, UnpackedKind};\n-use ty::{self, CanonicalVar, Lift, TyCtxt};\n+use ty::{self, CanonicalVar, Lift, Ty, TyCtxt};\n \n impl<'cx, 'gcx, 'tcx> InferCtxtBuilder<'cx, 'gcx, 'tcx> {\n     /// The \"main method\" for a canonicalized trait query. Given the\n@@ -157,7 +156,12 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n \n         let region_obligations = self.take_registered_region_obligations();\n         let region_constraints = self.with_region_constraints(|region_constraints| {\n-            make_query_outlives(tcx, region_obligations, region_constraints)\n+            make_query_outlives(\n+                tcx,\n+                region_obligations\n+                    .iter()\n+                    .map(|(_, r_o)| (r_o.sup_type, r_o.sub_region)),\n+                region_constraints)\n         });\n \n         let certainty = if ambig_errors.is_empty() {\n@@ -567,7 +571,7 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n /// creates query region constraints.\n pub fn make_query_outlives<'tcx>(\n     tcx: TyCtxt<'_, '_, 'tcx>,\n-    region_obligations: Vec<(ast::NodeId, RegionObligation<'tcx>)>,\n+    outlives_obligations: impl Iterator<Item = (Ty<'tcx>, ty::Region<'tcx>)>,\n     region_constraints: &RegionConstraintData<'tcx>,\n ) -> Vec<QueryRegionConstraint<'tcx>> {\n     let RegionConstraintData {\n@@ -600,9 +604,8 @@ pub fn make_query_outlives<'tcx>(\n             .collect();\n \n     outlives.extend(\n-        region_obligations\n-            .into_iter()\n-            .map(|(_, r_o)| ty::OutlivesPredicate(r_o.sup_type.into(), r_o.sub_region))\n+        outlives_obligations\n+            .map(|(ty, r)| ty::OutlivesPredicate(ty.into(), r))\n             .map(ty::Binder::dummy), // no bound regions in the code above\n     );\n "}, {"sha": "5cf7064b0c297e0501c01f4d24f7d3ef475cd692", "filename": "src/librustc/traits/query/type_op/custom.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1ca467d4a1ee8036a91250650c4b785048b77988/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ca467d4a1ee8036a91250650c4b785048b77988/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fquery%2Ftype_op%2Fcustom.rs?ref=1ca467d4a1ee8036a91250650c4b785048b77988", "patch": "@@ -102,8 +102,13 @@ fn scrape_region_constraints<'gcx, 'tcx, R>(\n \n     let region_constraint_data = infcx.take_and_reset_region_constraints();\n \n-    let outlives =\n-        query_result::make_query_outlives(infcx.tcx, region_obligations, &region_constraint_data);\n+    let outlives = query_result::make_query_outlives(\n+        infcx.tcx,\n+        region_obligations\n+            .iter()\n+            .map(|(_, r_o)| (r_o.sup_type, r_o.sub_region)),\n+        &region_constraint_data,\n+    );\n \n     if outlives.is_empty() {\n         Ok((value, None))"}]}