{"sha": "1afa8acca8d9c548da99ef30d3a13c0d086203f3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhZmE4YWNjYThkOWM1NDhkYTk5ZWYzMGQzYTEzYzBkMDg2MjAzZjM=", "commit": {"author": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2014-12-14T14:48:56Z"}, "committer": {"name": "Jake Goulding", "email": "jake.goulding@gmail.com", "date": "2014-12-18T00:04:15Z"}, "message": "Use #[deriving(Copy)] for InvariantLifetime", "tree": {"sha": "39a425a9f9665d61a32668920df787ad4406c9e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/39a425a9f9665d61a32668920df787ad4406c9e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1afa8acca8d9c548da99ef30d3a13c0d086203f3", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1afa8acca8d9c548da99ef30d3a13c0d086203f3", "html_url": "https://github.com/rust-lang/rust/commit/1afa8acca8d9c548da99ef30d3a13c0d086203f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1afa8acca8d9c548da99ef30d3a13c0d086203f3/comments", "author": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "shepmaster", "id": 174509, "node_id": "MDQ6VXNlcjE3NDUwOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/174509?v=4", "gravatar_id": "", "url": "https://api.github.com/users/shepmaster", "html_url": "https://github.com/shepmaster", "followers_url": "https://api.github.com/users/shepmaster/followers", "following_url": "https://api.github.com/users/shepmaster/following{/other_user}", "gists_url": "https://api.github.com/users/shepmaster/gists{/gist_id}", "starred_url": "https://api.github.com/users/shepmaster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/shepmaster/subscriptions", "organizations_url": "https://api.github.com/users/shepmaster/orgs", "repos_url": "https://api.github.com/users/shepmaster/repos", "events_url": "https://api.github.com/users/shepmaster/events{/privacy}", "received_events_url": "https://api.github.com/users/shepmaster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22a9f250b5e2de64c13c0f056aec13eb086ef79d", "url": "https://api.github.com/repos/rust-lang/rust/commits/22a9f250b5e2de64c13c0f056aec13eb086ef79d", "html_url": "https://github.com/rust-lang/rust/commit/22a9f250b5e2de64c13c0f056aec13eb086ef79d"}], "stats": {"total": 4, "additions": 1, "deletions": 3}, "files": [{"sha": "d31ff81091cd8b295ca2d03d991abe1737cca869", "filename": "src/libcore/kinds.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1afa8acca8d9c548da99ef30d3a13c0d086203f3/src%2Flibcore%2Fkinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1afa8acca8d9c548da99ef30d3a13c0d086203f3/src%2Flibcore%2Fkinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fkinds.rs?ref=1afa8acca8d9c548da99ef30d3a13c0d086203f3", "patch": "@@ -256,11 +256,9 @@ pub mod marker {\n     /// and this pointer is itself stored in an inherently mutable\n     /// location (such as a `Cell`).\n     #[lang=\"invariant_lifetime\"]\n-    #[deriving(Clone, PartialEq, Eq, PartialOrd, Ord)]\n+    #[deriving(Clone, Copy, PartialEq, Eq, PartialOrd, Ord)]\n     pub struct InvariantLifetime<'a>;\n \n-    impl<'a> Copy for InvariantLifetime<'a> {}\n-\n     /// A type which is considered \"not sendable\", meaning that it cannot\n     /// be safely sent between tasks, even if it is owned. This is\n     /// typically embedded in other types, such as `Gc`, to ensure that"}]}