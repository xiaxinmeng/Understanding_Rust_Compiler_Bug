{"sha": "6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZDcyNWU5ZjA5ZjhhYzFlNTc3NDYwY2UzMWJjMjkyOGZlMzUzMWY=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-01-31T02:39:34Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2020-02-06T01:00:50Z"}, "message": "Remove `RefCell` usage from `ObligationForest`.\n\nIt's not needed.", "tree": {"sha": "5835bc8192d3f5fa2e986dbf78a1b0d75b091bca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5835bc8192d3f5fa2e986dbf78a1b0d75b091bca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "html_url": "https://github.com/rust-lang/rust/commit/6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ad725e9f09f8ac1e577460ce31bc2928fe3531f/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "002287d25f6ef9718dbabd3e23c00b5ebcfb51c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/002287d25f6ef9718dbabd3e23c00b5ebcfb51c1", "html_url": "https://github.com/rust-lang/rust/commit/002287d25f6ef9718dbabd3e23c00b5ebcfb51c1"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "0384776e9fbc9740fb3c55c664f0690d502b77de", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6ad725e9f09f8ac1e577460ce31bc2928fe3531f/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ad725e9f09f8ac1e577460ce31bc2928fe3531f/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=6ad725e9f09f8ac1e577460ce31bc2928fe3531f", "patch": "@@ -74,7 +74,7 @@\n \n use crate::fx::{FxHashMap, FxHashSet};\n \n-use std::cell::{Cell, RefCell};\n+use std::cell::Cell;\n use std::collections::hash_map::Entry;\n use std::fmt::Debug;\n use std::hash;\n@@ -146,7 +146,7 @@ pub struct ObligationForest<O: ForestObligation> {\n     active_cache: FxHashMap<O::Predicate, usize>,\n \n     /// A vector reused in compress(), to avoid allocating new vectors.\n-    node_rewrites: RefCell<Vec<usize>>,\n+    node_rewrites: Vec<usize>,\n \n     obligation_tree_id_generator: ObligationTreeIdGenerator,\n \n@@ -285,7 +285,7 @@ impl<O: ForestObligation> ObligationForest<O> {\n             nodes: vec![],\n             done_cache: Default::default(),\n             active_cache: Default::default(),\n-            node_rewrites: RefCell::new(vec![]),\n+            node_rewrites: vec![],\n             obligation_tree_id_generator: (0..).map(ObligationTreeId),\n             error_cache: Default::default(),\n         }\n@@ -590,7 +590,7 @@ impl<O: ForestObligation> ObligationForest<O> {\n     #[inline(never)]\n     fn compress(&mut self, do_completed: DoCompleted) -> Option<Vec<O>> {\n         let orig_nodes_len = self.nodes.len();\n-        let mut node_rewrites: Vec<_> = self.node_rewrites.replace(vec![]);\n+        let mut node_rewrites: Vec<_> = std::mem::take(&mut self.node_rewrites);\n         debug_assert!(node_rewrites.is_empty());\n         node_rewrites.extend(0..orig_nodes_len);\n         let mut dead_nodes = 0;\n@@ -651,7 +651,7 @@ impl<O: ForestObligation> ObligationForest<O> {\n         }\n \n         node_rewrites.truncate(0);\n-        self.node_rewrites.replace(node_rewrites);\n+        self.node_rewrites = node_rewrites;\n \n         if do_completed == DoCompleted::Yes { Some(removed_done_obligations) } else { None }\n     }"}]}