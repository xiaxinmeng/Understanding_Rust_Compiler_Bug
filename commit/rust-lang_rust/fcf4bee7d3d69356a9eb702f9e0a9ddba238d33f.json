{"sha": "fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjZjRiZWU3ZDNkNjkzNTZhOWViNzAyZjllMGE5ZGRiYTIzOGQzM2Y=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-22T18:45:49Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2019-11-22T19:01:31Z"}, "message": "Fix tests for RFC 2203 in a `const`\n\nThe previous test was incorrect. `const fn`s are *always* promotable\nwhen inside a `const`, so it should pass. The error was caused by a bug\nin `promote_consts`. I've added a failing test outside a `const`\nalongside the existing one, which is now run-pass.", "tree": {"sha": "55c85d4cef0c4295f5e73960a25e03f2e02080e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55c85d4cef0c4295f5e73960a25e03f2e02080e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "html_url": "https://github.com/rust-lang/rust/commit/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53712f8637dbe326df569a90814aae1cc5429710", "url": "https://api.github.com/repos/rust-lang/rust/commits/53712f8637dbe326df569a90814aae1cc5429710", "html_url": "https://github.com/rust-lang/rust/commit/53712f8637dbe326df569a90814aae1cc5429710"}], "stats": {"total": 73, "additions": 44, "deletions": 29}, "files": [{"sha": "68a9227dea96ed4dd22549b440f5271099744495", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/const-fns.rs", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/53712f8637dbe326df569a90814aae1cc5429710/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fconst-fns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53712f8637dbe326df569a90814aae1cc5429710/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fconst-fns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Fconst-fns.rs?ref=53712f8637dbe326df569a90814aae1cc5429710", "patch": "@@ -1,26 +0,0 @@\n-// ignore-tidy-linelength\n-// ignore-compare-mode-nll\n-#![feature(const_in_array_repeat_expressions, nll)]\n-#![allow(warnings)]\n-\n-// Some type that is not copyable.\n-struct Bar;\n-\n-const fn type_no_copy() -> Option<Bar> {\n-    None\n-}\n-\n-const fn type_copy() -> u32 {\n-    3\n-}\n-\n-fn no_copy() {\n-    const ARR: [Option<Bar>; 2] = [type_no_copy(); 2];\n-    //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied [E0277]\n-}\n-\n-fn copy() {\n-    const ARR: [u32; 2] = [type_copy(); 2];\n-}\n-\n-fn main() {}"}, {"sha": "da1bae1be8d4eeebf07800a3cc4a7ef48fc2b1f8", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/fn-call-in-const.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-const.rs?ref=fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "patch": "@@ -0,0 +1,23 @@\n+// run-pass\n+\n+#![allow(unused)]\n+#![feature(const_in_array_repeat_expressions)]\n+\n+// Some type that is not copyable.\n+struct Bar;\n+\n+const fn type_no_copy() -> Option<Bar> {\n+    None\n+}\n+\n+const fn type_copy() -> u32 {\n+    3\n+}\n+\n+const _: [u32; 2] = [type_copy(); 2];\n+\n+// This is allowed because all promotion contexts use the explicit rules for promotability when\n+// inside an explicit const context.\n+const _: [Option<Bar>; 2] = [type_no_copy(); 2];\n+\n+fn main() {}"}, {"sha": "38f744e99aab4c3c137edaf17050e0aad54e1dbb", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/fn-call-in-non-const.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-non-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-non-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-non-const.rs?ref=fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "patch": "@@ -0,0 +1,18 @@\n+#![feature(const_in_array_repeat_expressions)]\n+\n+// Some type that is not copyable.\n+struct Bar;\n+\n+const fn no_copy() -> Option<Bar> {\n+    None\n+}\n+\n+const fn copy() -> u32 {\n+    3\n+}\n+\n+fn main() {\n+    let _: [u32; 2] = [copy(); 2];\n+    let _: [Option<Bar>; 2] = [no_copy(); 2];\n+    //~^ ERROR the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied\n+}"}, {"sha": "8219d836a20e9f204bf64e86e4113a229d8f1d25", "filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/fn-call-in-non-const.stderr", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-non-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-non-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Frfc-2203-const-array-repeat-exprs%2Ffn-call-in-non-const.stderr?ref=fcf4bee7d3d69356a9eb702f9e0a9ddba238d33f", "patch": "@@ -1,8 +1,8 @@\n error[E0277]: the trait bound `std::option::Option<Bar>: std::marker::Copy` is not satisfied\n-  --> $DIR/const-fns.rs:18:35\n+  --> $DIR/fn-call-in-non-const.rs:16:31\n    |\n-LL |     const ARR: [Option<Bar>; 2] = [type_no_copy(); 2];\n-   |                                   ^^^^^^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`\n+LL |     let _: [Option<Bar>; 2] = [no_copy(); 2];\n+   |                               ^^^^^^^^^^^^^^ the trait `std::marker::Copy` is not implemented for `std::option::Option<Bar>`\n    |\n    = help: the following implementations were found:\n              <std::option::Option<T> as std::marker::Copy>", "previous_filename": "src/test/ui/consts/rfc-2203-const-array-repeat-exprs/const-fns.stderr"}]}