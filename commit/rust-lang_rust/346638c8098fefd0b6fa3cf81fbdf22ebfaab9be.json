{"sha": "346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NjYzOGM4MDk4ZmVmZDBiNmZhM2NmODFmYmRmMjJlYmZhYWI5YmU=", "commit": {"author": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2018-12-23T16:39:33Z"}, "committer": {"name": "gfreezy", "email": "gfreezy@gmail.com", "date": "2018-12-23T16:39:33Z"}, "message": "add serverity to vscode diagnostics", "tree": {"sha": "9c3065ad2d909786f802fbd1b4c2571cb2287482", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c3065ad2d909786f802fbd1b4c2571cb2287482"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "html_url": "https://github.com/rust-lang/rust/commit/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/comments", "author": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gfreezy", "id": 510012, "node_id": "MDQ6VXNlcjUxMDAxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/510012?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gfreezy", "html_url": "https://github.com/gfreezy", "followers_url": "https://api.github.com/users/gfreezy/followers", "following_url": "https://api.github.com/users/gfreezy/following{/other_user}", "gists_url": "https://api.github.com/users/gfreezy/gists{/gist_id}", "starred_url": "https://api.github.com/users/gfreezy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gfreezy/subscriptions", "organizations_url": "https://api.github.com/users/gfreezy/orgs", "repos_url": "https://api.github.com/users/gfreezy/repos", "events_url": "https://api.github.com/users/gfreezy/events{/privacy}", "received_events_url": "https://api.github.com/users/gfreezy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "000aacafda209826b9b5aac86d175152d488f05b", "url": "https://api.github.com/repos/rust-lang/rust/commits/000aacafda209826b9b5aac86d175152d488f05b", "html_url": "https://github.com/rust-lang/rust/commit/000aacafda209826b9b5aac86d175152d488f05b"}], "stats": {"total": 44, "additions": 32, "deletions": 12}, "files": [{"sha": "e054227a98b8093f9c620a9710d57acf8b2394c3", "filename": "crates/ra_analysis/src/imp.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_analysis%2Fsrc%2Fimp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fimp.rs?ref=346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "patch": "@@ -3,7 +3,7 @@ use std::{\n     sync::Arc,\n };\n \n-use ra_editor::{self, find_node_at_offset, FileSymbol, LineIndex, LocalEdit};\n+use ra_editor::{self, find_node_at_offset, FileSymbol, LineIndex, LocalEdit, Severity};\n use ra_syntax::{\n     ast::{self, ArgListOwner, Expr, NameOwner},\n     AstNode, SourceFileNode,\n@@ -364,6 +364,7 @@ impl AnalysisImpl {\n             .map(|d| Diagnostic {\n                 range: d.range,\n                 message: d.msg,\n+                severity: d.severity,\n                 fix: None,\n             })\n             .collect::<Vec<_>>();\n@@ -385,6 +386,7 @@ impl AnalysisImpl {\n                         Diagnostic {\n                             range: name_node.range(),\n                             message: \"unresolved module\".to_string(),\n+                            severity: Some(Severity::Error),\n                             fix: Some(fix),\n                         }\n                     }\n@@ -407,6 +409,7 @@ impl AnalysisImpl {\n                         Diagnostic {\n                             range: name_node.range(),\n                             message: \"can't declare module at this location\".to_string(),\n+                            severity: Some(Severity::Error),\n                             fix: Some(fix),\n                         }\n                     }"}, {"sha": "8ab6334a7d0af9971a80ba501ef1674d648f11a2", "filename": "crates/ra_analysis/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_analysis%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_analysis%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Flib.rs?ref=346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "patch": "@@ -34,6 +34,7 @@ pub use crate::{\n };\n pub use ra_editor::{\n     FileSymbol, Fold, FoldKind, HighlightedRange, LineIndex, Runnable, RunnableKind, StructureNode,\n+    Severity\n };\n pub use hir::FnSignatureInfo;\n \n@@ -198,6 +199,7 @@ pub struct Diagnostic {\n     pub message: String,\n     pub range: TextRange,\n     pub fix: Option<SourceChange>,\n+    pub severity: Option<Severity>,\n }\n \n #[derive(Debug)]"}, {"sha": "2313e35f5a32510c407fd98563caa22cb5a89253", "filename": "crates/ra_analysis/tests/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_analysis%2Ftests%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_analysis%2Ftests%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Ftests%2Ftests.rs?ref=346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "patch": "@@ -82,7 +82,8 @@ fn test_unresolved_module_diagnostic() {\n                 label: \"create module\",\n                 source_file_edits: [],\n                 file_system_edits: [CreateFile { source_root: SourceRootId(0), path: \"foo.rs\" }],\n-                cursor_position: None }) }]\"#,\n+                cursor_position: None }),\n+                severity: Some(Error) }]\"#,\n         &diagnostics,\n     );\n }"}, {"sha": "399bb8fe84f7eb3a7ab59f944d9e82493c280f90", "filename": "crates/ra_editor/src/lib.rs", "status": "modified", "additions": 11, "deletions": 8, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_editor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_editor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Flib.rs?ref=346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "patch": "@@ -34,14 +34,16 @@ pub struct HighlightedRange {\n #[derive(Debug, Copy, Clone)]\n pub enum Severity {\n     Error,\n-    Warning\n+    Warning,\n+    Information,\n+    Hint,\n }\n \n #[derive(Debug)]\n pub struct Diagnostic {\n     pub range: TextRange,\n     pub msg: String,\n-    pub severity: Severity,\n+    pub severity: Option<Severity>,\n }\n \n #[derive(Debug)]\n@@ -104,12 +106,13 @@ pub fn diagnostics(file: &SourceFileNode) -> Vec<Diagnostic> {\n         }\n     }\n \n-    let mut errors: Vec<Diagnostic> = file.errors()\n+    let mut errors: Vec<Diagnostic> = file\n+        .errors()\n         .into_iter()\n         .map(|err| Diagnostic {\n             range: location_to_range(err.location()),\n             msg: format!(\"Syntax Error: {}\", err),\n-            severity: Severity::Error,\n+            severity: Some(Severity::Error),\n         })\n         .collect();\n \n@@ -127,7 +130,7 @@ fn check_unnecessary_braces_in_use_statement(file: &SourceFileNode) -> Vec<Diagn\n                 diagnostics.push(Diagnostic {\n                     range: use_tree_list.syntax().range(),\n                     msg: format!(\"Unnecessary braces in use statement\"),\n-                    severity: Severity::Warning,\n+                    severity: Some(Severity::Warning),\n                 })\n             }\n         }\n@@ -249,9 +252,9 @@ fn main() {}\n         );\n         let diagnostics = check_unnecessary_braces_in_use_statement(&file);\n         assert_eq_dbg(\n-            r#\"[Diagnostic { range: [12; 15), msg: \"Unnecessary braces in use statement\", severity: Warning },\n-                Diagnostic { range: [24; 27), msg: \"Unnecessary braces in use statement\", severity: Warning },\n-                Diagnostic { range: [61; 64), msg: \"Unnecessary braces in use statement\", severity: Warning }]\"#,\n+            r#\"[Diagnostic { range: [12; 15), msg: \"Unnecessary braces in use statement\", severity: Some(Warning) },\n+                Diagnostic { range: [24; 27), msg: \"Unnecessary braces in use statement\", severity: Some(Warning) },\n+                Diagnostic { range: [61; 64), msg: \"Unnecessary braces in use statement\", severity: Some(Warning) }]\"#,\n             &diagnostics,\n         )\n     }"}, {"sha": "8e859e8d429e6ba01ef9973ac6d1788227dd510f", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/346638c8098fefd0b6fa3cf81fbdf22ebfaab9be/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=346638c8098fefd0b6fa3cf81fbdf22ebfaab9be", "patch": "@@ -8,7 +8,7 @@ use languageserver_types::{\n     PrepareRenameResponse, RenameParams, SymbolInformation, TextDocumentIdentifier, TextEdit,\n     WorkspaceEdit, ParameterInformation, ParameterLabel, SignatureInformation, Hover, HoverContents,\n };\n-use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition};\n+use ra_analysis::{FileId, FoldKind, Query, RunnableKind, FilePosition, Severity};\n use ra_syntax::{TextUnit, text_utils::intersect};\n use ra_text_edit::text_utils::contains_offset_nonstrict;\n use rustc_hash::FxHashMap;\n@@ -650,7 +650,7 @@ pub fn publish_diagnostics(\n         .into_iter()\n         .map(|d| Diagnostic {\n             range: d.range.conv_with(&line_index),\n-            severity: Some(DiagnosticSeverity::Error),\n+            severity: d.severity.map(to_diagnostic_severity),\n             code: None,\n             source: Some(\"rust-analyzer\".to_string()),\n             message: d.message,\n@@ -684,3 +684,14 @@ fn highlight(world: &ServerWorld, file_id: FileId) -> Result<Vec<Decoration>> {\n         .collect();\n     Ok(res)\n }\n+\n+fn to_diagnostic_severity(severity: Severity) -> DiagnosticSeverity {\n+    use ra_analysis::Severity::*;\n+\n+    match severity {\n+        Error => DiagnosticSeverity::Error,\n+        Warning => DiagnosticSeverity::Warning,\n+        Information => DiagnosticSeverity::Information,\n+        Hint => DiagnosticSeverity::Hint,\n+    }\n+}"}]}