{"sha": "b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58", "node_id": "C_kwDOAAsO6NoAKGIyOWZhOTRkMjJlN2EyMGIzZGQxZWI4ZWFlNWUxOTJjY2JmODliNTg", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-04-01T17:05:14Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-03-31T11:24:33Z"}, "message": "Remove mutability in ResolverAstLowering.", "tree": {"sha": "e86eb61fb6676b3b4b8bd349d510669ea4a644fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86eb61fb6676b3b4b8bd349d510669ea4a644fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58", "html_url": "https://github.com/rust-lang/rust/commit/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffaf6f0d0ccfbc76da00baded073d10f05ffcbd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffaf6f0d0ccfbc76da00baded073d10f05ffcbd1", "html_url": "https://github.com/rust-lang/rust/commit/ffaf6f0d0ccfbc76da00baded073d10f05ffcbd1"}], "stats": {"total": 28, "additions": 13, "deletions": 15}, "files": [{"sha": "833a21c1394d9bd5a141ff6b94726039cf844c54", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58", "patch": "@@ -159,7 +159,7 @@ struct LoweringContext<'a, 'hir: 'a> {\n }\n \n pub trait ResolverAstLowering {\n-    fn def_key(&mut self, id: DefId) -> DefKey;\n+    fn def_key(&self, id: DefId) -> DefKey;\n \n     fn def_span(&self, id: LocalDefId) -> Span;\n \n@@ -171,17 +171,15 @@ pub trait ResolverAstLowering {\n     fn get_partial_res(&self, id: NodeId) -> Option<PartialRes>;\n \n     /// Obtains per-namespace resolutions for `use` statement with the given `NodeId`.\n-    fn get_import_res(&mut self, id: NodeId) -> PerNS<Option<Res<NodeId>>>;\n+    fn get_import_res(&self, id: NodeId) -> PerNS<Option<Res<NodeId>>>;\n \n     /// Obtains resolution for a label with the given `NodeId`.\n-    fn get_label_res(&mut self, id: NodeId) -> Option<NodeId>;\n-\n-    /// We must keep the set of definitions up to date as we add nodes that weren't in the AST.\n-    /// This should only return `None` during testing.\n-    fn definitions(&mut self) -> &mut Definitions;\n+    fn get_label_res(&self, id: NodeId) -> Option<NodeId>;\n \n     fn create_stable_hashing_context(&self) -> StableHashingContext<'_>;\n \n+    fn definitions(&self) -> &Definitions;\n+\n     fn lint_buffer(&mut self) -> &mut LintBuffer;\n \n     fn next_node_id(&mut self) -> NodeId;"}, {"sha": "0393a391c8a500cf5620e6a05b63ec4e0593b2f9", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=b29fa94d22e7a20b3dd1eb8eae5e192ccbf89b58", "patch": "@@ -1160,9 +1160,9 @@ impl<'a, 'b> DefIdTree for &'a Resolver<'b> {\n /// This interface is used through the AST\u2192HIR step, to embed full paths into the HIR. After that\n /// the resolver is no longer needed as all the relevant information is inline.\n impl ResolverAstLowering for Resolver<'_> {\n-    fn def_key(&mut self, id: DefId) -> DefKey {\n+    fn def_key(&self, id: DefId) -> DefKey {\n         if let Some(id) = id.as_local() {\n-            self.definitions().def_key(id)\n+            self.definitions.def_key(id)\n         } else {\n             self.cstore().def_key(id)\n         }\n@@ -1189,22 +1189,22 @@ impl ResolverAstLowering for Resolver<'_> {\n         self.partial_res_map.get(&id).cloned()\n     }\n \n-    fn get_import_res(&mut self, id: NodeId) -> PerNS<Option<Res>> {\n+    fn get_import_res(&self, id: NodeId) -> PerNS<Option<Res>> {\n         self.import_res_map.get(&id).cloned().unwrap_or_default()\n     }\n \n-    fn get_label_res(&mut self, id: NodeId) -> Option<NodeId> {\n+    fn get_label_res(&self, id: NodeId) -> Option<NodeId> {\n         self.label_res_map.get(&id).cloned()\n     }\n \n-    fn definitions(&mut self) -> &mut Definitions {\n-        &mut self.definitions\n-    }\n-\n     fn create_stable_hashing_context(&self) -> StableHashingContext<'_> {\n         StableHashingContext::new(self.session, &self.definitions, self.crate_loader.cstore())\n     }\n \n+    fn definitions(&self) -> &Definitions {\n+        &self.definitions\n+    }\n+\n     fn lint_buffer(&mut self) -> &mut LintBuffer {\n         &mut self.lint_buffer\n     }"}]}