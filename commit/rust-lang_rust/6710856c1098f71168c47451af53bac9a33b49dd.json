{"sha": "6710856c1098f71168c47451af53bac9a33b49dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MTA4NTZjMTA5OGY3MTE2OGM0NzQ1MWFmNTNiYWM5YTMzYjQ5ZGQ=", "commit": {"author": {"name": "Ivan Kozik", "email": "ivan@ludios.org", "date": "2020-07-14T00:12:49Z"}, "committer": {"name": "Ivan Kozik", "email": "ivan@ludios.org", "date": "2020-07-14T20:57:51Z"}, "message": "Add opt-in mimalloc feature", "tree": {"sha": "46a514e5fd86dd33f16f9abca6ab14f5063c9696", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46a514e5fd86dd33f16f9abca6ab14f5063c9696"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6710856c1098f71168c47451af53bac9a33b49dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6710856c1098f71168c47451af53bac9a33b49dd", "html_url": "https://github.com/rust-lang/rust/commit/6710856c1098f71168c47451af53bac9a33b49dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6710856c1098f71168c47451af53bac9a33b49dd/comments", "author": {"login": "ivan", "id": 4458, "node_id": "MDQ6VXNlcjQ0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan", "html_url": "https://github.com/ivan", "followers_url": "https://api.github.com/users/ivan/followers", "following_url": "https://api.github.com/users/ivan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan/subscriptions", "organizations_url": "https://api.github.com/users/ivan/orgs", "repos_url": "https://api.github.com/users/ivan/repos", "events_url": "https://api.github.com/users/ivan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivan", "id": 4458, "node_id": "MDQ6VXNlcjQ0NTg=", "avatar_url": "https://avatars.githubusercontent.com/u/4458?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivan", "html_url": "https://github.com/ivan", "followers_url": "https://api.github.com/users/ivan/followers", "following_url": "https://api.github.com/users/ivan/following{/other_user}", "gists_url": "https://api.github.com/users/ivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivan/subscriptions", "organizations_url": "https://api.github.com/users/ivan/orgs", "repos_url": "https://api.github.com/users/ivan/repos", "events_url": "https://api.github.com/users/ivan/events{/privacy}", "received_events_url": "https://api.github.com/users/ivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46d4487b8900324fc6a523c8b6ebe036d28fd0fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/46d4487b8900324fc6a523c8b6ebe036d28fd0fb", "html_url": "https://github.com/rust-lang/rust/commit/46d4487b8900324fc6a523c8b6ebe036d28fd0fb"}], "stats": {"total": 66, "additions": 60, "deletions": 6}, "files": [{"sha": "a05c62e45e2a8d00bee928e876088491c252c07a", "filename": "Cargo.lock", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6710856c1098f71168c47451af53bac9a33b49dd/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/6710856c1098f71168c47451af53bac9a33b49dd/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=6710856c1098f71168c47451af53bac9a33b49dd", "patch": "@@ -214,6 +214,15 @@ dependencies = [\n  \"bitflags\",\n ]\n \n+[[package]]\n+name = \"cmake\"\n+version = \"0.1.44\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"0e56268c17a6248366d66d4a47a3381369d068cce8409bb1716ed77ea32163bb\"\n+dependencies = [\n+ \"cc\",\n+]\n+\n [[package]]\n name = \"console\"\n version = \"0.11.3\"\n@@ -674,6 +683,15 @@ dependencies = [\n  \"winapi 0.3.9\",\n ]\n \n+[[package]]\n+name = \"libmimalloc-sys\"\n+version = \"0.1.15\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a27252ec1d0c4e0dd6142cbc572da50b363ab56fc334f7aa8fadf295b2e24e74\"\n+dependencies = [\n+ \"cmake\",\n+]\n+\n [[package]]\n name = \"linked-hash-map\"\n version = \"0.5.3\"\n@@ -770,6 +788,15 @@ dependencies = [\n  \"autocfg\",\n ]\n \n+[[package]]\n+name = \"mimalloc\"\n+version = \"0.1.19\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"6c52de2069999f01bd26436564dbe7de3a87898feeb7a0d0ff9eb20a05bb7ca0\"\n+dependencies = [\n+ \"libmimalloc-sys\",\n+]\n+\n [[package]]\n name = \"miniz_oxide\"\n version = \"0.4.0\"\n@@ -1248,6 +1275,7 @@ dependencies = [\n  \"backtrace\",\n  \"jemalloc-ctl\",\n  \"jemallocator\",\n+ \"mimalloc\",\n  \"once_cell\",\n  \"ra_arena\",\n ]"}, {"sha": "3cd8481ea8787e647e42f806a8abe1c1283eb3b5", "filename": "crates/ra_prof/Cargo.toml", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6710856c1098f71168c47451af53bac9a33b49dd/crates%2Fra_prof%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6710856c1098f71168c47451af53bac9a33b49dd/crates%2Fra_prof%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2FCargo.toml?ref=6710856c1098f71168c47451af53bac9a33b49dd", "patch": "@@ -12,6 +12,7 @@ doctest = false\n ra_arena = { path = \"../ra_arena\" }\n once_cell = \"1.3.1\"\n backtrace = { version = \"0.3.44\", optional = true }\n+mimalloc = { version = \"0.1.19\", default-features = false, optional = true }\n \n [target.'cfg(not(target_env = \"msvc\"))'.dependencies]\n jemallocator = { version = \"0.3.2\", optional = true }\n@@ -24,4 +25,5 @@ cpu_profiler = []\n # Uncomment to enable for the whole crate graph\n # default = [ \"backtrace\" ]\n # default = [ \"jemalloc\" ]\n+# default = [ \"mimalloc\" ]\n # default = [ \"cpu_profiler\" ]"}, {"sha": "b54531b4e13150d1804189b80f2d8e305cc08d3d", "filename": "crates/ra_prof/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6710856c1098f71168c47451af53bac9a33b49dd/crates%2Fra_prof%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6710856c1098f71168c47451af53bac9a33b49dd/crates%2Fra_prof%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_prof%2Fsrc%2Flib.rs?ref=6710856c1098f71168c47451af53bac9a33b49dd", "patch": "@@ -19,6 +19,10 @@ pub use crate::{\n #[global_allocator]\n static ALLOC: jemallocator::Jemalloc = jemallocator::Jemalloc;\n \n+#[cfg(all(feature = \"mimalloc\"))]\n+#[global_allocator]\n+static ALLOC: mimalloc::MiMalloc = mimalloc::MiMalloc;\n+\n /// Prints backtrace to stderr, useful for debugging.\n #[cfg(feature = \"backtrace\")]\n pub fn print_backtrace() {"}, {"sha": "5074740ccd3222ce8aea176a158be238ecbeba73", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6710856c1098f71168c47451af53bac9a33b49dd/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6710856c1098f71168c47451af53bac9a33b49dd/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=6710856c1098f71168c47451af53bac9a33b49dd", "patch": "@@ -65,3 +65,4 @@ tt = { path = \"../ra_tt\", package = \"ra_tt\" }\n \n [features]\n jemalloc = [ \"ra_prof/jemalloc\" ]\n+mimalloc = [ \"ra_prof/mimalloc\" ]"}, {"sha": "a0dc0c9c2105469c88cfcc1e19e545fc320a77bf", "filename": "xtask/src/install.rs", "status": "modified", "additions": 13, "deletions": 3, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6710856c1098f71168c47451af53bac9a33b49dd/xtask%2Fsrc%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6710856c1098f71168c47451af53bac9a33b49dd/xtask%2Fsrc%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Finstall.rs?ref=6710856c1098f71168c47451af53bac9a33b49dd", "patch": "@@ -19,7 +19,13 @@ pub enum ClientOpt {\n }\n \n pub struct ServerOpt {\n-    pub jemalloc: bool,\n+    pub malloc: Malloc,\n+}\n+\n+pub enum Malloc {\n+    System,\n+    Jemalloc,\n+    Mimalloc,\n }\n \n impl InstallCmd {\n@@ -130,8 +136,12 @@ fn install_server(opts: ServerOpt) -> Result<()> {\n         )\n     }\n \n-    let jemalloc = if opts.jemalloc { \"--features jemalloc\" } else { \"\" };\n-    let res = run!(\"cargo install --path crates/rust-analyzer --locked --force {}\", jemalloc);\n+    let malloc_feature = match opts.malloc {\n+        Malloc::System => \"\",\n+        Malloc::Jemalloc => \"--features jemalloc\",\n+        Malloc::Mimalloc => \"--features mimalloc\",\n+    };\n+    let res = run!(\"cargo install --path crates/rust-analyzer --locked --force {}\", malloc_feature);\n \n     if res.is_err() && old_rust {\n         eprintln!("}, {"sha": "399ff72049b77b80add6e47d501e1507ae146e34", "filename": "xtask/src/main.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6710856c1098f71168c47451af53bac9a33b49dd/xtask%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6710856c1098f71168c47451af53bac9a33b49dd/xtask%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Fsrc%2Fmain.rs?ref=6710856c1098f71168c47451af53bac9a33b49dd", "patch": "@@ -14,7 +14,7 @@ use pico_args::Arguments;\n use xtask::{\n     codegen::{self, Mode},\n     dist::run_dist,\n-    install::{ClientOpt, InstallCmd, ServerOpt},\n+    install::{ClientOpt, InstallCmd, Malloc, ServerOpt},\n     not_bash::pushd,\n     pre_commit, project_root,\n     release::{PromoteCmd, ReleaseCmd},\n@@ -46,6 +46,7 @@ FLAGS:\n         --client-code    Install only VS Code plugin\n         --server         Install only the language server\n         --jemalloc       Use jemalloc for server\n+        --mimalloc       Use mimalloc for server\n     -h, --help           Prints help information\n         \"\n                 );\n@@ -61,13 +62,21 @@ FLAGS:\n                 return Ok(());\n             }\n \n-            let jemalloc = args.contains(\"--jemalloc\");\n+            let malloc = match (args.contains(\"--jemalloc\"), args.contains(\"--mimalloc\")) {\n+                (false, false) => Malloc::System,\n+                (true, false) => Malloc::Jemalloc,\n+                (false, true) => Malloc::Mimalloc,\n+                (true, true) => {\n+                    eprintln!(\"error: Cannot use both `--jemalloc` and `--mimalloc`\");\n+                    return Ok(());\n+                }\n+            };\n \n             args.finish()?;\n \n             InstallCmd {\n                 client: if server { None } else { Some(ClientOpt::VsCode) },\n-                server: if client_code { None } else { Some(ServerOpt { jemalloc }) },\n+                server: if client_code { None } else { Some(ServerOpt { malloc }) },\n             }\n             .run()\n         }"}]}