{"sha": "546d718a7e04a1c366578f0be94b3c7ef1361b59", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NmQ3MThhN2UwNGExYzM2NjU3OGYwYmU5NGIzYzdlZjEzNjFiNTk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-08-08T10:41:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-08-08T10:41:45Z"}, "message": "Merge #9808\n\n9808: fix: Look for enum variants and trait assoc functions when looking for lang items r=matklad a=Veykril\n\nExamples for lang enum variants are the `Option` variants.\r\nAssoc trait functions aren't being seen since they aren't declared in the direct module scope.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "13f6b2ce3c75d637c6c7eb51aa2982ab6f5ac4f0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/13f6b2ce3c75d637c6c7eb51aa2982ab6f5ac4f0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/546d718a7e04a1c366578f0be94b3c7ef1361b59", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhD7TqCRBK7hj4Ov3rIwAAuh0IAE9JugGpW4PCvWTRZOrE1UW8\nTYJ2p4ITbW0nk2AWLCKKhvxVWDl4MlqQ5wZtNbZZoYTfyXoe+yuxgYbHgj6+GNl7\n460jSwkKP59p4SiUk5OnmrQNKD68siqDrvb3wFpm+azPYqhH6USutVz2G2udqN0R\n8I+b/puQ2YrVtTZAhCJIemrAqLHiATJAt+qyUDvtJDNxKL99+sHcCDe/LjEb/WGx\nAuu9p0bVE70FPCnXl25Oa6lLzZgLM1grFgmC07QX+n9kCpnyHEkcuovi2vaksgTh\nrPpB/mUdxrUlGMg9eycpiAZw2ha0VQd7sbxo/f1jDORH3HYu+rLcBY2Dk+Xg8/M=\n=x7rM\n-----END PGP SIGNATURE-----\n", "payload": "tree 13f6b2ce3c75d637c6c7eb51aa2982ab6f5ac4f0\nparent b07c83f8b0780a41d29c1e3718eb8f213dfe795b\nparent 50d46863ef5e9bd3162e2dc5f6039f2ca27cf0ad\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1628419305 +0000\ncommitter GitHub <noreply@github.com> 1628419305 +0000\n\nMerge #9808\n\n9808: fix: Look for enum variants and trait assoc functions when looking for lang items r=matklad a=Veykril\n\nExamples for lang enum variants are the `Option` variants.\r\nAssoc trait functions aren't being seen since they aren't declared in the direct module scope.\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/546d718a7e04a1c366578f0be94b3c7ef1361b59", "html_url": "https://github.com/rust-lang/rust/commit/546d718a7e04a1c366578f0be94b3c7ef1361b59", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/546d718a7e04a1c366578f0be94b3c7ef1361b59/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b07c83f8b0780a41d29c1e3718eb8f213dfe795b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b07c83f8b0780a41d29c1e3718eb8f213dfe795b", "html_url": "https://github.com/rust-lang/rust/commit/b07c83f8b0780a41d29c1e3718eb8f213dfe795b"}, {"sha": "50d46863ef5e9bd3162e2dc5f6039f2ca27cf0ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/50d46863ef5e9bd3162e2dc5f6039f2ca27cf0ad", "html_url": "https://github.com/rust-lang/rust/commit/50d46863ef5e9bd3162e2dc5f6039f2ca27cf0ad"}], "stats": {"total": 36, "additions": 28, "deletions": 8}, "files": [{"sha": "6797a77de58d5626811727d5a9bfdadc8a8679a7", "filename": "crates/hir_def/src/lang_item.rs", "status": "modified", "additions": 27, "deletions": 7, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/546d718a7e04a1c366578f0be94b3c7ef1361b59/crates%2Fhir_def%2Fsrc%2Flang_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/546d718a7e04a1c366578f0be94b3c7ef1361b59/crates%2Fhir_def%2Fsrc%2Flang_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Flang_item.rs?ref=546d718a7e04a1c366578f0be94b3c7ef1361b59", "patch": "@@ -8,8 +8,8 @@ use rustc_hash::FxHashMap;\n use syntax::SmolStr;\n \n use crate::{\n-    db::DefDatabase, AdtId, AttrDefId, CrateId, EnumId, FunctionId, ImplId, ModuleDefId, StaticId,\n-    StructId, TraitId,\n+    db::DefDatabase, AdtId, AttrDefId, CrateId, EnumId, EnumVariantId, FunctionId, ImplId,\n+    ModuleDefId, StaticId, StructId, TraitId,\n };\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n@@ -20,6 +20,7 @@ pub enum LangItemTarget {\n     StaticId(StaticId),\n     StructId(StructId),\n     TraitId(TraitId),\n+    EnumVariantId(EnumVariantId),\n }\n \n impl LangItemTarget {\n@@ -64,6 +65,13 @@ impl LangItemTarget {\n             _ => None,\n         }\n     }\n+\n+    pub fn as_enum_variant(self) -> Option<EnumVariantId> {\n+        match self {\n+            LangItemTarget::EnumVariantId(id) => Some(id),\n+            _ => None,\n+        }\n+    }\n }\n \n #[derive(Default, Debug, Clone, PartialEq, Eq)]\n@@ -92,19 +100,31 @@ impl LangItems {\n             for def in module_data.scope.declarations() {\n                 match def {\n                     ModuleDefId::TraitId(trait_) => {\n-                        lang_items.collect_lang_item(db, trait_, LangItemTarget::TraitId)\n+                        lang_items.collect_lang_item(db, trait_, LangItemTarget::TraitId);\n+                        db.trait_data(trait_).items.iter().for_each(|&(_, assoc_id)| {\n+                            if let crate::AssocItemId::FunctionId(f) = assoc_id {\n+                                lang_items.collect_lang_item(db, f, LangItemTarget::FunctionId);\n+                            }\n+                        });\n                     }\n                     ModuleDefId::AdtId(AdtId::EnumId(e)) => {\n-                        lang_items.collect_lang_item(db, e, LangItemTarget::EnumId)\n+                        lang_items.collect_lang_item(db, e, LangItemTarget::EnumId);\n+                        db.enum_data(e).variants.iter().for_each(|(local_id, _)| {\n+                            lang_items.collect_lang_item(\n+                                db,\n+                                EnumVariantId { parent: e, local_id },\n+                                LangItemTarget::EnumVariantId,\n+                            );\n+                        });\n                     }\n                     ModuleDefId::AdtId(AdtId::StructId(s)) => {\n-                        lang_items.collect_lang_item(db, s, LangItemTarget::StructId)\n+                        lang_items.collect_lang_item(db, s, LangItemTarget::StructId);\n                     }\n                     ModuleDefId::FunctionId(f) => {\n-                        lang_items.collect_lang_item(db, f, LangItemTarget::FunctionId)\n+                        lang_items.collect_lang_item(db, f, LangItemTarget::FunctionId);\n                     }\n                     ModuleDefId::StaticId(s) => {\n-                        lang_items.collect_lang_item(db, s, LangItemTarget::StaticId)\n+                        lang_items.collect_lang_item(db, s, LangItemTarget::StaticId);\n                     }\n                     _ => {}\n                 }"}, {"sha": "cbfe89b911c66b0053f2bededba8d38eafb29f0f", "filename": "crates/ide_completion/src/completions/flyimport.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/546d718a7e04a1c366578f0be94b3c7ef1361b59/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/546d718a7e04a1c366578f0be94b3c7ef1361b59/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fflyimport.rs?ref=546d718a7e04a1c366578f0be94b3c7ef1361b59", "patch": "@@ -696,8 +696,8 @@ fn main() {\n }\n \"#,\n             expect![[r#\"\n-                ct SPECIAL_CONST (use dep::test_mod::TestTrait) DEPRECATED\n                 fn weird_function() (use dep::test_mod::TestTrait) fn() DEPRECATED\n+                ct SPECIAL_CONST (use dep::test_mod::TestTrait) DEPRECATED\n             \"#]],\n         );\n     }"}]}