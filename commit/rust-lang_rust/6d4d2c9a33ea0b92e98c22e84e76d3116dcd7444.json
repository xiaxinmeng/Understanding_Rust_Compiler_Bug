{"sha": "6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNGQyYzlhMzNlYTBiOTJlOThjMjJlODRlNzZkMzExNmRjZDc0NDQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-07-10T07:01:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-07-10T07:07:03Z"}, "message": "Don't loop infinitely on 0-size structs in repr\n\nCloses #7625", "tree": {"sha": "edd57744338137f22d6a50e6017d418d33ebbc6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edd57744338137f22d6a50e6017d418d33ebbc6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444", "html_url": "https://github.com/rust-lang/rust/commit/6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e388a80c234d628c4d1fab77dc3e3f2c04cbefc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/e388a80c234d628c4d1fab77dc3e3f2c04cbefc5", "html_url": "https://github.com/rust-lang/rust/commit/e388a80c234d628c4d1fab77dc3e3f2c04cbefc5"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "79d11ddca6139b0546d4613bf1f34c4023b16099", "filename": "src/libstd/repr.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444/src%2Flibstd%2Frepr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444/src%2Flibstd%2Frepr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frepr.rs?ref=6d4d2c9a33ea0b92e98c22e84e76d3116dcd7444", "patch": "@@ -206,11 +206,13 @@ impl ReprVisitor {\n                            inner: *TyDesc)\n                            -> bool {\n         let mut p = ptr;\n-        let end = ptr::offset(p, len);\n         let (sz, al) = unsafe { ((*inner).size, (*inner).align) };\n         self.writer.write_char('[');\n         let mut first = true;\n-        while (p as uint) < (end as uint) {\n+        let mut left = len;\n+        // unit structs have 0 size, and don't loop forever.\n+        let dec = if sz == 0 {1} else {sz};\n+        while left > 0 {\n             if first {\n                 first = false;\n             } else {\n@@ -219,6 +221,7 @@ impl ReprVisitor {\n             self.write_mut_qualifier(mtbl);\n             self.visit_ptr_inner(p as *c_void, inner);\n             p = align(ptr::offset(p, sz) as uint, al) as *u8;\n+            left -= dec;\n         }\n         self.writer.write_char(']');\n         true\n@@ -635,4 +638,7 @@ fn test_repr() {\n                \"(10, ~\\\"hello\\\")\");\n     exact_test(&(10_u64, ~\"hello\"),\n                \"(10, ~\\\"hello\\\")\");\n+\n+    struct Foo;\n+    exact_test(&(~[Foo, Foo, Foo]), \"~[{}, {}, {}]\");\n }"}]}