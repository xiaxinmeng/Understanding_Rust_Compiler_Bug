{"sha": "931005d549efb1b25b581ae66c12deeff9899053", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzMTAwNWQ1NDllZmIxYjI1YjU4MWFlNjZjMTJkZWVmZjk4OTkwNTM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-02-12T09:55:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-12T09:55:41Z"}, "message": "Rollup merge of #68947 - chrissimpkins:python-fmt, r=alexcrichton\n\nPython script PEP8 style guide space formatting and minor Python source cleanup\n\nThis PR includes the following changes in the Python sources based on a flake8 3.7.9 (mccabe: 0.6.1, pycodestyle: 2.5.0, pyflakes: 2.1.1) CPython 3.7.6 on Darwin lint:\n\n- PEP8 style guide spacing updates *without* line length changes\n- removal of unused local variable assignments in context managers and exception handling\n- removal of unused Python import statements\n- removal of unnecessary semicolons", "tree": {"sha": "e44f6319509d78faa3da3e7a2482a769ce05afd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e44f6319509d78faa3da3e7a2482a769ce05afd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/931005d549efb1b25b581ae66c12deeff9899053", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeQ8udCRBK7hj4Ov3rIwAAdHIIAGOw4qkiFfACyXqJ1UQOCQqp\nAVMgEAbaXOCDluKNqBMEGD38s9PcTIzFtHU7LN2f1K14qmwFVzQcbBOYA24LCIk6\n6qpSxZWnPm8BB9E4HYvyU9C6SfkBVFdPZU1Cc4zqC4ZqJIEgd9hV1bEOsFNwvPfI\nq/PQEoTntD0usnwYqLRWMOKOrPqu4Lar31OlmAB1YKZij4GrZkWA8YMNUKKyTEaI\nh1D+kEO3TqrScSjPHq8i1oFIgW6AhGOwmH+fKvvRzi2Fd8ZxOTSB4JHxk9B2tVsx\nJzugvFj3QPp/4dyr+I5zmwPpk1LGRKeteXda6ut+0Fa9GpFceNhUDASEGww50mU=\n=5Txy\n-----END PGP SIGNATURE-----\n", "payload": "tree e44f6319509d78faa3da3e7a2482a769ce05afd3\nparent 4b82b51213f0345c5788e62d99b6ccae4f1a19d3\nparent 77d158d4016a07e7a7f09c4f380a8c58aa8877d1\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1581501341 +0900\ncommitter GitHub <noreply@github.com> 1581501341 +0900\n\nRollup merge of #68947 - chrissimpkins:python-fmt, r=alexcrichton\n\nPython script PEP8 style guide space formatting and minor Python source cleanup\n\nThis PR includes the following changes in the Python sources based on a flake8 3.7.9 (mccabe: 0.6.1, pycodestyle: 2.5.0, pyflakes: 2.1.1) CPython 3.7.6 on Darwin lint:\n\n- PEP8 style guide spacing updates *without* line length changes\n- removal of unused local variable assignments in context managers and exception handling\n- removal of unused Python import statements\n- removal of unnecessary semicolons\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/931005d549efb1b25b581ae66c12deeff9899053", "html_url": "https://github.com/rust-lang/rust/commit/931005d549efb1b25b581ae66c12deeff9899053", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/931005d549efb1b25b581ae66c12deeff9899053/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b82b51213f0345c5788e62d99b6ccae4f1a19d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b82b51213f0345c5788e62d99b6ccae4f1a19d3", "html_url": "https://github.com/rust-lang/rust/commit/4b82b51213f0345c5788e62d99b6ccae4f1a19d3"}, {"sha": "77d158d4016a07e7a7f09c4f380a8c58aa8877d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/77d158d4016a07e7a7f09c4f380a8c58aa8877d1", "html_url": "https://github.com/rust-lang/rust/commit/77d158d4016a07e7a7f09c4f380a8c58aa8877d1"}], "stats": {"total": 199, "additions": 114, "deletions": 85}, "files": [{"sha": "50e1726240fffd29936c469d15386e60fad3a52b", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -80,7 +80,7 @@ def _download(path, url, probably_big, verbose, exception):\n             option = \"-s\"\n         run([\"curl\", option,\n              \"-y\", \"30\", \"-Y\", \"10\",    # timeout if speed is < 10 bytes/sec for > 30 seconds\n-             \"--connect-timeout\", \"30\", # timeout if cannot connect within 30 seconds\n+             \"--connect-timeout\", \"30\",  # timeout if cannot connect within 30 seconds\n              \"--retry\", \"3\", \"-Sf\", \"-o\", path, url],\n             verbose=verbose,\n             exception=exception)\n@@ -332,7 +332,6 @@ def __init__(self):\n         self.use_vendored_sources = ''\n         self.verbose = False\n \n-\n     def download_stage0(self):\n         \"\"\"Fetch the build system for Rust, written in Rust\n \n@@ -351,7 +350,7 @@ def support_xz():\n             try:\n                 with tempfile.NamedTemporaryFile(delete=False) as temp_file:\n                     temp_path = temp_file.name\n-                with tarfile.open(temp_path, \"w:xz\") as tar:\n+                with tarfile.open(temp_path, \"w:xz\"):\n                     pass\n                 return True\n             except tarfile.CompressionError:\n@@ -825,7 +824,7 @@ def check_vendored_status(self):\n                 if not os.path.exists(vendor_dir):\n                     print('error: vendoring required, but vendor directory does not exist.')\n                     print('       Run `cargo vendor` without sudo to initialize the '\n-                        'vendor directory.')\n+                          'vendor directory.')\n                     raise Exception(\"{} not found\".format(vendor_dir))\n \n         if self.use_vendored_sources:\n@@ -839,7 +838,7 @@ def check_vendored_status(self):\n                     \"\\n\"\n                     \"[source.vendored-sources]\\n\"\n                     \"directory = '{}/vendor'\\n\"\n-                .format(self.rust_root))\n+                    .format(self.rust_root))\n         else:\n             if os.path.exists('.cargo'):\n                 shutil.rmtree('.cargo')"}, {"sha": "3d2eead6788bf2fedcb8aeb93c54daa4a428c782", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -393,11 +393,12 @@ def set(key, value):\n \n \n def is_number(value):\n-  try:\n-    float(value)\n-    return True\n-  except ValueError:\n-    return False\n+    try:\n+        float(value)\n+        return True\n+    except ValueError:\n+        return False\n+\n \n # Here we walk through the constructed configuration we have from the parsed\n # command line arguments. We then apply each piece of configuration by"}, {"sha": "78ac060368193964fb3fb8420e63894810802863", "filename": "src/ci/cpu-usage-over-time.py", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fci%2Fcpu-usage-over-time.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fci%2Fcpu-usage-over-time.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fcpu-usage-over-time.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -148,11 +148,11 @@ def idle_since(self, prev):\n     print('unknown platform', sys.platform)\n     sys.exit(1)\n \n-cur_state = State();\n+cur_state = State()\n print(\"Time,Idle\")\n while True:\n-    time.sleep(1);\n-    next_state = State();\n+    time.sleep(1)\n+    next_state = State()\n     now = datetime.datetime.utcnow().isoformat()\n     idle = next_state.idle_since(cur_state)\n     print(\"%s,%s\" % (now, idle))"}, {"sha": "b3f8f50636bee754b81d0280b505ece3bb9f1a51", "filename": "src/etc/debugger_pretty_printers_common.py", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fdebugger_pretty_printers_common.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fdebugger_pretty_printers_common.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdebugger_pretty_printers_common.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -212,7 +212,6 @@ def __classify_struct(self):\n         # REGULAR STRUCT\n         return TYPE_KIND_REGULAR_STRUCT\n \n-\n     def __classify_union(self):\n         assert self.get_dwarf_type_kind() == DWARF_TYPE_CODE_UNION\n \n@@ -233,7 +232,6 @@ def __classify_union(self):\n         else:\n             return TYPE_KIND_REGULAR_UNION\n \n-\n     def __conforms_to_field_layout(self, expected_fields):\n         actual_fields = self.get_fields()\n         actual_field_count = len(actual_fields)\n@@ -363,6 +361,7 @@ def extract_tail_head_ptr_and_cap_from_std_vecdeque(vec_val):\n     assert data_ptr.type.get_dwarf_type_kind() == DWARF_TYPE_CODE_PTR\n     return (tail, head, data_ptr, capacity)\n \n+\n def extract_length_and_ptr_from_slice(slice_val):\n     assert (slice_val.type.get_type_kind() == TYPE_KIND_SLICE or\n             slice_val.type.get_type_kind() == TYPE_KIND_STR_SLICE)\n@@ -376,8 +375,10 @@ def extract_length_and_ptr_from_slice(slice_val):\n     assert data_ptr.type.get_dwarf_type_kind() == DWARF_TYPE_CODE_PTR\n     return (length, data_ptr)\n \n+\n UNQUALIFIED_TYPE_MARKERS = frozenset([\"(\", \"[\", \"&\", \"*\"])\n \n+\n def extract_type_name(qualified_type_name):\n     \"\"\"Extracts the type name from a fully qualified path\"\"\"\n     if qualified_type_name[0] in UNQUALIFIED_TYPE_MARKERS:\n@@ -393,6 +394,7 @@ def extract_type_name(qualified_type_name):\n     else:\n         return qualified_type_name[index + 2:]\n \n+\n try:\n     compat_str = unicode  # Python 2\n except NameError:"}, {"sha": "4979882ffeaffecebfaf2a856b7d50191d2a4483", "filename": "src/etc/dec2flt_table.py", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fdec2flt_table.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fdec2flt_table.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fdec2flt_table.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -14,7 +14,6 @@\n even larger, and it's already uncomfortably large (6 KiB).\n \"\"\"\n from __future__ import print_function\n-import sys\n from math import ceil, log\n from fractions import Fraction\n from collections import namedtuple\n@@ -82,6 +81,7 @@ def error(f, e, z):\n     ulp_err = abs_err / Fraction(2) ** z.exp\n     return float(ulp_err)\n \n+\n HEADER = \"\"\"\n //! Tables of approximations of powers of ten.\n //! DO NOT MODIFY: Generated by `src/etc/dec2flt_table.py`"}, {"sha": "0914c22eb13f03d0b9d0c94474ac7e5b57795195", "filename": "src/etc/gdb_rust_pretty_printing.py", "status": "modified", "additions": 23, "deletions": 20, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fgdb_rust_pretty_printing.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fgdb_rust_pretty_printing.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgdb_rust_pretty_printing.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -9,7 +9,7 @@\n if sys.version_info[0] >= 3:\n     xrange = range\n \n-rust_enabled = 'set language rust' in gdb.execute('complete set language ru', to_string = True)\n+rust_enabled = 'set language rust' in gdb.execute('complete set language ru', to_string=True)\n \n # The btree pretty-printers fail in a confusing way unless\n # https://sourceware.org/bugzilla/show_bug.cgi?id=21763 is fixed.\n@@ -21,9 +21,10 @@\n     if int(_match.group(1)) > 8 or (int(_match.group(1)) == 8 and int(_match.group(2)) >= 1):\n         gdb_81 = True\n \n-#===============================================================================\n+# ===============================================================================\n # GDB Pretty Printing Module for Rust\n-#===============================================================================\n+# ===============================================================================\n+\n \n class GdbType(rustpp.Type):\n \n@@ -133,39 +134,39 @@ def rust_pretty_printer_lookup_function(gdb_val):\n \n     if type_kind == rustpp.TYPE_KIND_REGULAR_STRUCT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = False,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = False)\n+                                 omit_first_field=False,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=False)\n \n     if type_kind == rustpp.TYPE_KIND_STRUCT_VARIANT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = True,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = False)\n+                                 omit_first_field=True,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=False)\n \n     if type_kind == rustpp.TYPE_KIND_STR_SLICE:\n         return RustStringSlicePrinter(val)\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE:\n         return RustStructPrinter(val,\n-                                 omit_first_field = False,\n-                                 omit_type_name = True,\n-                                 is_tuple_like = True)\n+                                 omit_first_field=False,\n+                                 omit_type_name=True,\n+                                 is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE_STRUCT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = False,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = True)\n+                                 omit_first_field=False,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_CSTYLE_VARIANT:\n         return RustCStyleVariantPrinter(val.get_child_at_index(0))\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE_VARIANT:\n         return RustStructPrinter(val,\n-                                 omit_first_field = True,\n-                                 omit_type_name = False,\n-                                 is_tuple_like = True)\n+                                 omit_first_field=True,\n+                                 omit_type_name=False,\n+                                 is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_SINGLETON_ENUM:\n         variant = get_field_at_index(gdb_val, 0)\n@@ -189,9 +190,9 @@ def rust_pretty_printer_lookup_function(gdb_val):\n     return None\n \n \n-#=------------------------------------------------------------------------------\n+# =------------------------------------------------------------------------------\n # Pretty Printer Classes\n-#=------------------------------------------------------------------------------\n+# =------------------------------------------------------------------------------\n class RustEmptyPrinter(object):\n     def __init__(self, val):\n         self.__val = val\n@@ -355,6 +356,7 @@ def children_of_node(boxed_node, height, want_values):\n             else:\n                 yield keys[i]['value']['value']\n \n+\n class RustStdBTreeSetPrinter(object):\n     def __init__(self, val):\n         self.__val = val\n@@ -429,6 +431,7 @@ def to_string(self):\n     def display_hint(self):\n         return \"string\"\n \n+\n class RustCStyleVariantPrinter(object):\n     def __init__(self, val):\n         assert val.type.get_dwarf_type_kind() == rustpp.DWARF_TYPE_CODE_ENUM"}, {"sha": "c42f942c63cf5fa4597ef663afde6ee1c14704b8", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -8,7 +8,8 @@\n sample usage: src/etc/generate-deriving-span-tests.py\n \"\"\"\n \n-import os, stat\n+import os\n+import stat\n \n TEST_DIR = os.path.abspath(\n     os.path.join(os.path.dirname(__file__), '../test/ui/derives/'))\n@@ -56,15 +57,17 @@\n \n ENUM_TUPLE, ENUM_STRUCT, STRUCT_FIELDS, STRUCT_TUPLE = range(4)\n \n+\n def create_test_case(type, trait, super_traits, error_count):\n     string = [ENUM_STRING, ENUM_STRUCT_VARIANT_STRING, STRUCT_STRING, STRUCT_TUPLE_STRING][type]\n     all_traits = ','.join([trait] + super_traits)\n     super_traits = ','.join(super_traits)\n     error_deriving = '#[derive(%s)]' % super_traits if super_traits else ''\n \n     errors = '\\n'.join('//~%s ERROR' % ('^' * n) for n in range(error_count))\n-    code = string.format(traits = all_traits, errors = errors)\n-    return TEMPLATE.format(error_deriving=error_deriving, code = code)\n+    code = string.format(traits=all_traits, errors=errors)\n+    return TEMPLATE.format(error_deriving=error_deriving, code=code)\n+\n \n def write_file(name, string):\n     test_file = os.path.join(TEST_DIR, 'derives-span-%s.rs' % name)\n@@ -86,10 +89,10 @@ def write_file(name, string):\n \n traits = {\n     'Default': (STRUCT, [], 1),\n-    'FromPrimitive': (0, [], 0), # only works for C-like enums\n+    'FromPrimitive': (0, [], 0),  # only works for C-like enums\n \n-    'Decodable': (0, [], 0), # FIXME: quoting gives horrible spans\n-    'Encodable': (0, [], 0), # FIXME: quoting gives horrible spans\n+    'Decodable': (0, [], 0),  # FIXME: quoting gives horrible spans\n+    'Encodable': (0, [], 0),  # FIXME: quoting gives horrible spans\n }\n \n for (trait, supers, errs) in [('Clone', [], 1),"}, {"sha": "77c3d2758c6dcd6bcfb188cf7ceafd36fa53d2f1", "filename": "src/etc/generate-keyword-tests.py", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fgenerate-keyword-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fgenerate-keyword-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-keyword-tests.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -11,7 +11,6 @@\n \n import sys\n import os\n-import datetime\n import stat\n \n "}, {"sha": "7789b24b62c83be1ce1297ebf08893e0bc611805", "filename": "src/etc/htmldocck.py", "status": "modified", "additions": 26, "deletions": 14, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fhtmldocck.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Fhtmldocck.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fhtmldocck.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -131,6 +131,7 @@\n except NameError:\n     unichr = chr\n \n+\n class CustomHTMLParser(HTMLParser):\n     \"\"\"simplified HTML parser.\n \n@@ -169,21 +170,25 @@ def close(self):\n         HTMLParser.close(self)\n         return self.__builder.close()\n \n+\n Command = namedtuple('Command', 'negated cmd args lineno context')\n \n+\n class FailedCheck(Exception):\n     pass\n \n+\n class InvalidCheck(Exception):\n     pass\n \n+\n def concat_multi_lines(f):\n     \"\"\"returns a generator out of the file object, which\n     - removes `\\\\` then `\\n` then a shared prefix with the previous line then\n       optional whitespace;\n     - keeps a line number (starting from 0) of the first line being\n       concatenated.\"\"\"\n-    lastline = None # set to the last line when the last line has a backslash\n+    lastline = None  # set to the last line when the last line has a backslash\n     firstlineno = None\n     catenated = ''\n     for lineno, line in enumerate(f):\n@@ -208,6 +213,7 @@ def concat_multi_lines(f):\n     if lastline is not None:\n         print_err(lineno, line, 'Trailing backslash at the end of the file')\n \n+\n LINE_PATTERN = re.compile(r'''\n     (?<=(?<!\\S)@)(?P<negated>!?)\n     (?P<cmd>[A-Za-z]+(?:-[A-Za-z]+)*)\n@@ -252,7 +258,7 @@ def flatten(node):\n \n def normalize_xpath(path):\n     if path.startswith('//'):\n-        return '.' + path # avoid warnings\n+        return '.' + path  # avoid warnings\n     elif path.startswith('.//'):\n         return path\n     else:\n@@ -316,7 +322,7 @@ def get_dir(self, path):\n \n def check_string(data, pat, regexp):\n     if not pat:\n-        return True # special case a presence testing\n+        return True  # special case a presence testing\n     elif regexp:\n         return re.search(pat, data, flags=re.UNICODE) is not None\n     else:\n@@ -353,7 +359,7 @@ def check_tree_text(tree, path, pat, regexp):\n                 ret = check_string(value, pat, regexp)\n                 if ret:\n                     break\n-    except Exception as e:\n+    except Exception:\n         print('Failed to get path \"{}\"'.format(path))\n         raise\n     return ret\n@@ -363,6 +369,7 @@ def get_tree_count(tree, path):\n     path = normalize_xpath(path)\n     return len(tree.findall(path))\n \n+\n def stderr(*args):\n     if sys.version_info.major < 3:\n         file = codecs.getwriter('utf-8')(sys.stderr)\n@@ -371,6 +378,7 @@ def stderr(*args):\n \n     print(*args, file=file)\n \n+\n def print_err(lineno, context, err, message=None):\n     global ERR_COUNT\n     ERR_COUNT += 1\n@@ -381,48 +389,50 @@ def print_err(lineno, context, err, message=None):\n     if context:\n         stderr(\"\\t{}\".format(context))\n \n+\n ERR_COUNT = 0\n \n+\n def check_command(c, cache):\n     try:\n         cerr = \"\"\n-        if c.cmd == 'has' or c.cmd == 'matches': # string test\n+        if c.cmd == 'has' or c.cmd == 'matches':  # string test\n             regexp = (c.cmd == 'matches')\n-            if len(c.args) == 1 and not regexp: # @has <path> = file existence\n+            if len(c.args) == 1 and not regexp:  # @has <path> = file existence\n                 try:\n                     cache.get_file(c.args[0])\n                     ret = True\n                 except FailedCheck as err:\n                     cerr = str(err)\n                     ret = False\n-            elif len(c.args) == 2: # @has/matches <path> <pat> = string test\n+            elif len(c.args) == 2:  # @has/matches <path> <pat> = string test\n                 cerr = \"`PATTERN` did not match\"\n                 ret = check_string(cache.get_file(c.args[0]), c.args[1], regexp)\n-            elif len(c.args) == 3: # @has/matches <path> <pat> <match> = XML tree test\n+            elif len(c.args) == 3:  # @has/matches <path> <pat> <match> = XML tree test\n                 cerr = \"`XPATH PATTERN` did not match\"\n                 tree = cache.get_tree(c.args[0])\n                 pat, sep, attr = c.args[1].partition('/@')\n-                if sep: # attribute\n+                if sep:  # attribute\n                     tree = cache.get_tree(c.args[0])\n                     ret = check_tree_attr(tree, pat, attr, c.args[2], regexp)\n-                else: # normalized text\n+                else:  # normalized text\n                     pat = c.args[1]\n                     if pat.endswith('/text()'):\n                         pat = pat[:-7]\n                     ret = check_tree_text(cache.get_tree(c.args[0]), pat, c.args[2], regexp)\n             else:\n                 raise InvalidCheck('Invalid number of @{} arguments'.format(c.cmd))\n \n-        elif c.cmd == 'count': # count test\n-            if len(c.args) == 3: # @count <path> <pat> <count> = count test\n+        elif c.cmd == 'count':  # count test\n+            if len(c.args) == 3:  # @count <path> <pat> <count> = count test\n                 expected = int(c.args[2])\n                 found = get_tree_count(cache.get_tree(c.args[0]), c.args[1])\n                 cerr = \"Expected {} occurrences but found {}\".format(expected, found)\n                 ret = expected == found\n             else:\n                 raise InvalidCheck('Invalid number of @{} arguments'.format(c.cmd))\n-        elif c.cmd == 'has-dir': # has-dir test\n-            if len(c.args) == 1: # @has-dir <path> = has-dir test\n+        elif c.cmd == 'has-dir':  # has-dir test\n+            if len(c.args) == 1:  # @has-dir <path> = has-dir test\n                 try:\n                     cache.get_dir(c.args[0])\n                     ret = True\n@@ -448,11 +458,13 @@ def check_command(c, cache):\n     except InvalidCheck as err:\n         print_err(c.lineno, c.context, str(err))\n \n+\n def check(target, commands):\n     cache = CachedFiles(target)\n     for c in commands:\n         check_command(c, cache)\n \n+\n if __name__ == '__main__':\n     if len(sys.argv) != 3:\n         stderr('Usage: {} <doc dir> <template>'.format(sys.argv[0]))"}, {"sha": "d9c4bc5562f00a19bcf38981e4378ed62c619d18", "filename": "src/etc/lldb_batchmode.py", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Flldb_batchmode.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Flldb_batchmode.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_batchmode.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -157,6 +157,7 @@ def watchdog():\n # ~main\n ####################################################################################################\n \n+\n if len(sys.argv) != 3:\n     print(\"usage: python lldb_batchmode.py target-path script-path\")\n     sys.exit(1)"}, {"sha": "0c4021b36fb6f6ac7435ea2f40873a26584b5c69", "filename": "src/etc/lldb_rust_formatters.py", "status": "modified", "additions": 26, "deletions": 22, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Flldb_rust_formatters.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Fetc%2Flldb_rust_formatters.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flldb_rust_formatters.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -1,10 +1,10 @@\n import lldb\n-import re\n import debugger_pretty_printers_common as rustpp\n \n-#===============================================================================\n+# ===============================================================================\n # LLDB Pretty Printing Module for Rust\n-#===============================================================================\n+# ===============================================================================\n+\n \n class LldbType(rustpp.Type):\n \n@@ -84,16 +84,16 @@ def print_val(lldb_val, internal_dict):\n         type_kind == rustpp.TYPE_KIND_EMPTY):\n         return print_struct_val(val,\n                                 internal_dict,\n-                                omit_first_field = False,\n-                                omit_type_name = False,\n-                                is_tuple_like = False)\n+                                omit_first_field=False,\n+                                omit_type_name=False,\n+                                is_tuple_like=False)\n \n     if type_kind == rustpp.TYPE_KIND_STRUCT_VARIANT:\n         return print_struct_val(val,\n                                 internal_dict,\n-                                omit_first_field = True,\n-                                omit_type_name = False,\n-                                is_tuple_like = False)\n+                                omit_first_field=True,\n+                                omit_type_name=False,\n+                                is_tuple_like=False)\n \n     if type_kind == rustpp.TYPE_KIND_SLICE:\n         return print_vec_slice_val(val, internal_dict)\n@@ -110,26 +110,26 @@ def print_val(lldb_val, internal_dict):\n     if type_kind == rustpp.TYPE_KIND_TUPLE:\n         return print_struct_val(val,\n                                 internal_dict,\n-                                omit_first_field = False,\n-                                omit_type_name = True,\n-                                is_tuple_like = True)\n+                                omit_first_field=False,\n+                                omit_type_name=True,\n+                                is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE_STRUCT:\n         return print_struct_val(val,\n                                 internal_dict,\n-                                omit_first_field = False,\n-                                omit_type_name = False,\n-                                is_tuple_like = True)\n+                                omit_first_field=False,\n+                                omit_type_name=False,\n+                                is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_CSTYLE_VARIANT:\n         return val.type.get_unqualified_type_name()\n \n     if type_kind == rustpp.TYPE_KIND_TUPLE_VARIANT:\n         return print_struct_val(val,\n                                 internal_dict,\n-                                omit_first_field = True,\n-                                omit_type_name = False,\n-                                is_tuple_like = True)\n+                                omit_first_field=True,\n+                                omit_type_name=False,\n+                                is_tuple_like=True)\n \n     if type_kind == rustpp.TYPE_KIND_SINGLETON_ENUM:\n         return print_val(lldb_val.GetChildAtIndex(0), internal_dict)\n@@ -157,9 +157,9 @@ def print_val(lldb_val, internal_dict):\n     return lldb_val.GetValue()\n \n \n-#=--------------------------------------------------------------------------------------------------\n+# =---------------------------------------------------------------------------------------\n # Type-Specialized Printing Functions\n-#=--------------------------------------------------------------------------------------------------\n+# =---------------------------------------------------------------------------------------\n \n def print_struct_val(val, internal_dict, omit_first_field, omit_type_name, is_tuple_like):\n     \"\"\"\n@@ -212,6 +212,7 @@ def render_child(child_index):\n     return template % {\"type_name\": type_name,\n                        \"body\": body}\n \n+\n def print_pointer_val(val, internal_dict):\n     \"\"\"Prints a pointer value with Rust syntax\"\"\"\n     assert val.type.get_dwarf_type_kind() == rustpp.DWARF_TYPE_CODE_PTR\n@@ -253,18 +254,21 @@ def print_std_vec_val(val, internal_dict):\n                                               length,\n                                               internal_dict)\n \n+\n def print_str_slice_val(val, internal_dict):\n     (length, data_ptr) = rustpp.extract_length_and_ptr_from_slice(val)\n     return read_utf8_string(data_ptr, length)\n \n+\n def print_std_string_val(val, internal_dict):\n     vec = val.get_child_at_index(0)\n     (length, data_ptr, cap) = rustpp.extract_length_ptr_and_cap_from_std_vec(vec)\n     return read_utf8_string(data_ptr, length)\n \n-#=--------------------------------------------------------------------------------------------------\n+# =-----------------------------------------------------------------------\n # Helper Functions\n-#=--------------------------------------------------------------------------------------------------\n+# =-----------------------------------------------------------------------\n+\n \n def print_array_of_values(array_name, data_ptr_val, length, internal_dict):\n     \"\"\"Prints a contiguous memory range, interpreting it as values of the"}, {"sha": "967333c1ace4fc5a61b778019d904cd8dbba3b44", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 11, "deletions": 6, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/931005d549efb1b25b581ae66c12deeff9899053/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/931005d549efb1b25b581ae66c12deeff9899053/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=931005d549efb1b25b581ae66c12deeff9899053", "patch": "@@ -1,11 +1,11 @@\n #!/usr/bin/env python\n # -*- coding: utf-8 -*-\n \n-## This script publishes the new \"current\" toolstate in the toolstate repo (not to be\n-## confused with publishing the test results, which happens in\n-## `src/ci/docker/x86_64-gnu-tools/checktools.sh`).\n-## It is set as callback for `src/ci/docker/x86_64-gnu-tools/repo.sh` by the CI scripts\n-## when a new commit lands on `master` (i.e., after it passed all checks on `auto`).\n+# This script publishes the new \"current\" toolstate in the toolstate repo (not to be\n+# confused with publishing the test results, which happens in\n+# `src/ci/docker/x86_64-gnu-tools/checktools.sh`).\n+# It is set as callback for `src/ci/docker/x86_64-gnu-tools/repo.sh` by the CI scripts\n+# when a new commit lands on `master` (i.e., after it passed all checks on `auto`).\n \n from __future__ import print_function\n \n@@ -103,6 +103,7 @@ def validate_maintainers(repo, github_token):\n         print(\"The build will fail due to this.\")\n         exit(1)\n \n+\n def read_current_status(current_commit, path):\n     '''Reads build status of `current_commit` from content of `history/*.tsv`\n     '''\n@@ -113,14 +114,17 @@ def read_current_status(current_commit, path):\n                 return json.loads(status)\n     return {}\n \n+\n def gh_url():\n     return os.environ['TOOLSTATE_ISSUES_API_URL']\n \n+\n def maybe_delink(message):\n     if os.environ.get('TOOLSTATE_SKIP_MENTIONS') is not None:\n         return message.replace(\"@\", \"\")\n     return message\n \n+\n def issue(\n     tool,\n     status,\n@@ -164,6 +168,7 @@ def issue(\n     ))\n     response.read()\n \n+\n def update_latest(\n     current_commit,\n     relevant_pr_number,\n@@ -194,7 +199,7 @@ def update_latest(\n         for status in latest:\n             tool = status['tool']\n             changed = False\n-            create_issue_for_status = None # set to the status that caused the issue\n+            create_issue_for_status = None  # set to the status that caused the issue\n \n             for os, s in current_status.items():\n                 old = status[os]"}]}