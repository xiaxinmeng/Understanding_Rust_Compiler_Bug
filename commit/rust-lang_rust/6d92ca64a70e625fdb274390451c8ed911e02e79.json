{"sha": "6d92ca64a70e625fdb274390451c8ed911e02e79", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkOTJjYTY0YTcwZTYyNWZkYjI3NDM5MDQ1MWM4ZWQ5MTFlMDJlNzk=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-20T04:08:57Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-20T04:08:57Z"}, "message": "Translate typeck.ty_fn to a TypeRef. Can compile int.rs test now.", "tree": {"sha": "4b4bd04925f55df84c2dfe17729df6b96b5f07cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b4bd04925f55df84c2dfe17729df6b96b5f07cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d92ca64a70e625fdb274390451c8ed911e02e79", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d92ca64a70e625fdb274390451c8ed911e02e79", "html_url": "https://github.com/rust-lang/rust/commit/6d92ca64a70e625fdb274390451c8ed911e02e79", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d92ca64a70e625fdb274390451c8ed911e02e79/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c00bda539d79e4411e086d505c697662942ee00b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c00bda539d79e4411e086d505c697662942ee00b", "html_url": "https://github.com/rust-lang/rust/commit/c00bda539d79e4411e086d505c697662942ee00b"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "091896fa3028b4f2dd712fd2419dfe07ce607e24", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6d92ca64a70e625fdb274390451c8ed911e02e79/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d92ca64a70e625fdb274390451c8ed911e02e79/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=6d92ca64a70e625fdb274390451c8ed911e02e79", "patch": "@@ -273,6 +273,19 @@ fn type_of(@trans_ctxt cx, @typeck.ty t) -> TypeRef {\n             }\n             ret T_struct(tys);\n         }\n+        case (typeck.ty_fn(?args, ?out)) {\n+            let vec[TypeRef] atys = vec();\n+            for (typeck.arg arg in args) {\n+                let TypeRef t = type_of(cx, arg.ty);\n+                alt (arg.mode) {\n+                    case (ast.alias) {\n+                        t = T_ptr(t);\n+                    }\n+                }\n+                atys += t;\n+            }\n+            ret T_fn(atys, type_of(cx, out));\n+        }\n         case (typeck.ty_var(_)) {\n             // FIXME: implement.\n             log \"ty_var in trans.type_of\";"}]}