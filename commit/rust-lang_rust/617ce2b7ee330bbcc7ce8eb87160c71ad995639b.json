{"sha": "617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxN2NlMmI3ZWUzMzBiYmNjN2NlOGViODcxNjBjNzFhZDk5NTYzOWI=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-01T03:37:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-05-01T03:37:42Z"}, "message": "Reword ambigous parse error to fit with the current error", "tree": {"sha": "2737b98c97ad94492241db0f67c7ab52666085a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2737b98c97ad94492241db0f67c7ab52666085a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "html_url": "https://github.com/rust-lang/rust/commit/617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bff0be37845a96010fa2161bbf137fadfe763ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/bff0be37845a96010fa2161bbf137fadfe763ae5", "html_url": "https://github.com/rust-lang/rust/commit/bff0be37845a96010fa2161bbf137fadfe763ae5"}], "stats": {"total": 27, "additions": 14, "deletions": 13}, "files": [{"sha": "fbd1203dec94af0ffd1f45503f1940480535c323", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "patch": "@@ -3649,13 +3649,14 @@ impl<'a> Parser<'a> {\n                 return Ok(lhs);\n             }\n             (true, Some(_)) => {\n-                // #54186, #54482, #59975\n                 // We've found an expression that would be parsed as a statement, but the next\n                 // token implies this should be parsed as an expression.\n-                let mut err = self.sess.span_diagnostic.struct_span_err(\n-                    self.span,\n-                    \"ambiguous parse\",\n-                );\n+                // For example: `if let Some(x) = x { x } else { 0 } / 2`\n+                let mut err = self.sess.span_diagnostic.struct_span_err(self.span, &format!(\n+                    \"expected expression, found `{}`\",\n+                    pprust::token_to_string(&self.token),\n+                ));\n+                err.span_label(self.span, \"expected expression\");\n                 let snippet = self.sess.source_map().span_to_snippet(lhs.span)\n                     .unwrap_or_else(|_| pprust::expr_to_string(&lhs));\n                 err.span_suggestion("}, {"sha": "1ce6f9c25034f811a881b80033d0156aba8cc0fa", "filename": "src/test/ui/parser/expr-as-stmt.fixed", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.fixed?ref=617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "patch": "@@ -27,14 +27,14 @@ fn baz() -> i32 {\n \n fn qux(a: Option<u32>, b: Option<u32>) -> bool {\n     (if let Some(x) = a { true } else { false })\n-    && //~ ERROR ambiguous parse\n+    && //~ ERROR expected expression\n     if let Some(y) = a { true } else { false }\n }\n \n fn moo(x: u32) -> bool {\n     (match x {\n         _ => 1,\n-    }) > 0 //~ ERROR ambiguous parse\n+    }) > 0 //~ ERROR expected expression\n }\n \n fn main() {}"}, {"sha": "b526c17488eaf72ee218a67bbda59cf5e50d9303", "filename": "src/test/ui/parser/expr-as-stmt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.rs?ref=617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "patch": "@@ -27,14 +27,14 @@ fn baz() -> i32 {\n \n fn qux(a: Option<u32>, b: Option<u32>) -> bool {\n     if let Some(x) = a { true } else { false }\n-    && //~ ERROR ambiguous parse\n+    && //~ ERROR expected expression\n     if let Some(y) = a { true } else { false }\n }\n \n fn moo(x: u32) -> bool {\n     match x {\n         _ => 1,\n-    } > 0 //~ ERROR ambiguous parse\n+    } > 0 //~ ERROR expected expression\n }\n \n fn main() {}"}, {"sha": "1725ba944c50f6a274a223ea1dcd00dc78656640", "filename": "src/test/ui/parser/expr-as-stmt.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/617ce2b7ee330bbcc7ce8eb87160c71ad995639b/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fexpr-as-stmt.stderr?ref=617ce2b7ee330bbcc7ce8eb87160c71ad995639b", "patch": "@@ -22,19 +22,19 @@ LL |     { 42 } + foo;\n    |     |\n    |     help: parenthesis are required to parse this as an expression: `({ 42 })`\n \n-error: ambiguous parse\n+error: expected expression, found `&&`\n   --> $DIR/expr-as-stmt.rs:30:5\n    |\n LL |     if let Some(x) = a { true } else { false }\n    |     ------------------------------------------ help: parenthesis are required to parse this as an expression: `(if let Some(x) = a { true } else { false })`\n LL |     &&\n-   |     ^^\n+   |     ^^ expected expression\n \n-error: ambiguous parse\n+error: expected expression, found `>`\n   --> $DIR/expr-as-stmt.rs:37:7\n    |\n LL |     } > 0\n-   |       ^\n+   |       ^ expected expression\n help: parenthesis are required to parse this as an expression\n    |\n LL |     (match x {"}]}