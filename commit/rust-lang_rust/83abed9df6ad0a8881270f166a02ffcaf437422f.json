{"sha": "83abed9df6ad0a8881270f166a02ffcaf437422f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYWJlZDlkZjZhZDBhODg4MTI3MGYxNjZhMDJmZmNhZjQzNzQyMmY=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-19T21:44:37Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2020-10-22T16:22:12Z"}, "message": "Make inline const work for half open ranges", "tree": {"sha": "018b82b1957cc65ecd597e93f85cd2e6ab97a5bc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/018b82b1957cc65ecd597e93f85cd2e6ab97a5bc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83abed9df6ad0a8881270f166a02ffcaf437422f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAl+RsbYACgkQgTGiTgx5\n76+v0hAAht3gDyoEbmBxnVwahI4rWI27mSy+3KssUf2+KG5GBIS3a5CGVNI1ipXh\nKLpufbxUrLAocdNC02DSvG8vN2EgvEIPtO/v41fk3COncnwnHdNsISMr2wLSS+d0\ngZJ2mwnOFITgtlkVHRW+uwEYPH6DnZQHwzvlLYrlHBrpDA8a+KmhooD86kjdlIIY\nBCSN+VVG8EvVxm4JZwo/OJWj4KcWaXJzCrWiSsOpQIYzlYeZogMGRbaqP8zteQfH\nJNOJbJ12RBVVqQfMYMaXYeHvUUkVgPut4wAby39U/oUs/By3sofLyIX20TmqgXGg\njG/zSX/FLzIHyM2yaoS5p6sr5WRZ0S56iugxaW2HK36QMiGlnY2lrplfSDbbfyWm\n8PH6BV9RfQ5c/2eLoR+o1iDv9sVLhvuciFQc+Plwji5vuxn7589s3kLRobbPX06s\nmWOSjjooyJgNoyGNfVGWOSaIDyIoEaIBvVhpYhcxvw8/aLuORyKtbXxQGOIkrtat\njjIP7T9FEqwGjzMzVqcxRM7VPdEXsEhkazNQ06osQ1Bh2LmIV63RF+hc+WGmuZSt\nO1DEAf6+DTY2OcallH+idchyMmmg0nNLl/awwohSi36PIE8OiQK4h/qcdNL2Z/Im\n04Shm5a72DskYW0OpTUYUELQC8oksWp9bjMMaBbZwt96M7jGCVw=\n=YmnV\n-----END PGP SIGNATURE-----", "payload": "tree 018b82b1957cc65ecd597e93f85cd2e6ab97a5bc\nparent f8842b9bacaf277430fa5c6cdf430b046dc7f323\nauthor Santiago Pastorino <spastorino@gmail.com> 1603143877 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1603383732 -0300\n\nMake inline const work for half open ranges\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83abed9df6ad0a8881270f166a02ffcaf437422f", "html_url": "https://github.com/rust-lang/rust/commit/83abed9df6ad0a8881270f166a02ffcaf437422f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83abed9df6ad0a8881270f166a02ffcaf437422f/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8842b9bacaf277430fa5c6cdf430b046dc7f323", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8842b9bacaf277430fa5c6cdf430b046dc7f323", "html_url": "https://github.com/rust-lang/rust/commit/f8842b9bacaf277430fa5c6cdf430b046dc7f323"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "78c95428c7211f5991500995dad3498c65ca7770", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83abed9df6ad0a8881270f166a02ffcaf437422f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83abed9df6ad0a8881270f166a02ffcaf437422f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=83abed9df6ad0a8881270f166a02ffcaf437422f", "patch": "@@ -1062,7 +1062,7 @@ impl<'a> Parser<'a> {\n             })\n         } else if self.eat_keyword(kw::Unsafe) {\n             self.parse_block_expr(None, lo, BlockCheckMode::Unsafe(ast::UserProvided), attrs)\n-        } else if self.check_inline_const() {\n+        } else if self.check_inline_const(0) {\n             self.parse_const_block(lo.to(self.token.span))\n         } else if self.is_do_catch_block() {\n             self.recover_do_catch(attrs)"}, {"sha": "8ff97453c14149700455c677c7c815c03fb4c141", "filename": "compiler/rustc_parse/src/parser/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/83abed9df6ad0a8881270f166a02ffcaf437422f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83abed9df6ad0a8881270f166a02ffcaf437422f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fmod.rs?ref=83abed9df6ad0a8881270f166a02ffcaf437422f", "patch": "@@ -522,9 +522,9 @@ impl<'a> Parser<'a> {\n         self.check_or_expected(self.token.can_begin_const_arg(), TokenType::Const)\n     }\n \n-    fn check_inline_const(&mut self) -> bool {\n-        self.check_keyword(kw::Const)\n-            && self.look_ahead(1, |t| match t.kind {\n+    fn check_inline_const(&self, dist: usize) -> bool {\n+        self.is_keyword_ahead(dist, &[kw::Const])\n+            && self.look_ahead(dist + 1, |t| match t.kind {\n                 token::Interpolated(ref nt) => matches!(**nt, token::NtBlock(..)),\n                 token::OpenDelim(DelimToken::Brace) => true,\n                 _ => false,"}, {"sha": "27fe75a23b6a844c34b9af2634419c72cbe8edcd", "filename": "compiler/rustc_parse/src/parser/pat.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/83abed9df6ad0a8881270f166a02ffcaf437422f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83abed9df6ad0a8881270f166a02ffcaf437422f/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fpat.rs?ref=83abed9df6ad0a8881270f166a02ffcaf437422f", "patch": "@@ -313,7 +313,7 @@ impl<'a> Parser<'a> {\n             let pat = self.parse_pat_with_range_pat(false, None)?;\n             self.sess.gated_spans.gate(sym::box_patterns, lo.to(self.prev_token.span));\n             PatKind::Box(pat)\n-        } else if self.check_inline_const() {\n+        } else if self.check_inline_const(0) {\n             // Parse `const pat`\n             let const_expr = self.parse_const_block(lo.to(self.token.span))?;\n \n@@ -722,8 +722,8 @@ impl<'a> Parser<'a> {\n     }\n \n     /// Is the token `dist` away from the current suitable as the start of a range patterns end?\n-    fn is_pat_range_end_start(&mut self, dist: usize) -> bool {\n-        self.check_inline_const()\n+    fn is_pat_range_end_start(&self, dist: usize) -> bool {\n+        self.check_inline_const(dist)\n             || self.look_ahead(dist, |t| {\n                 t.is_path_start() // e.g. `MY_CONST`;\n                 || t.kind == token::Dot // e.g. `.5` for recovery;\n@@ -733,7 +733,7 @@ impl<'a> Parser<'a> {\n     }\n \n     fn parse_pat_range_end(&mut self) -> PResult<'a, P<Expr>> {\n-        if self.check_inline_const() {\n+        if self.check_inline_const(0) {\n             self.parse_const_block(self.token.span)\n         } else if self.check_path() {\n             let lo = self.token.span;"}, {"sha": "c50c4f42848ecb212cbca0575d61c4f354460483", "filename": "src/test/ui/inline-const/const-match-pat-range.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83abed9df6ad0a8881270f166a02ffcaf437422f/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-range.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83abed9df6ad0a8881270f166a02ffcaf437422f/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-range.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finline-const%2Fconst-match-pat-range.rs?ref=83abed9df6ad0a8881270f166a02ffcaf437422f", "patch": "@@ -1,7 +1,7 @@\n // build-pass\n \n #![allow(incomplete_features)]\n-#![feature(inline_const)]\n+#![feature(inline_const, half_open_range_patterns, exclusive_range_pattern)]\n fn main() {\n     const N: u32 = 10;\n     let x: u32 = 3;\n@@ -20,4 +20,14 @@ fn main() {\n         1 ..= const { N + 1 } => {},\n         _ => {},\n     }\n+\n+    match x {\n+        .. const { N + 1 } => {},\n+        _ => {},\n+    }\n+\n+    match x {\n+        const { N - 1 } .. => {},\n+        _ => {},\n+    }\n }"}]}