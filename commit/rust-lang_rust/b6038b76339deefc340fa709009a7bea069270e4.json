{"sha": "b6038b76339deefc340fa709009a7bea069270e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MDM4Yjc2MzM5ZGVlZmMzNDBmYTcwOTAwOWE3YmVhMDY5MjcwZTQ=", "commit": {"author": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T10:05:40Z"}, "committer": {"name": "Brendan Zabarauskas", "email": "bjzaba@yahoo.com.au", "date": "2013-05-18T10:05:40Z"}, "message": "Return a reference to the tuple elements instead of copying", "tree": {"sha": "ac322341677763241ce17a22bf680d1cb7cebf4d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac322341677763241ce17a22bf680d1cb7cebf4d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6038b76339deefc340fa709009a7bea069270e4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6038b76339deefc340fa709009a7bea069270e4", "html_url": "https://github.com/rust-lang/rust/commit/b6038b76339deefc340fa709009a7bea069270e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6038b76339deefc340fa709009a7bea069270e4/comments", "author": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brendanzab", "id": 695077, "node_id": "MDQ6VXNlcjY5NTA3Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/695077?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brendanzab", "html_url": "https://github.com/brendanzab", "followers_url": "https://api.github.com/users/brendanzab/followers", "following_url": "https://api.github.com/users/brendanzab/following{/other_user}", "gists_url": "https://api.github.com/users/brendanzab/gists{/gist_id}", "starred_url": "https://api.github.com/users/brendanzab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brendanzab/subscriptions", "organizations_url": "https://api.github.com/users/brendanzab/orgs", "repos_url": "https://api.github.com/users/brendanzab/repos", "events_url": "https://api.github.com/users/brendanzab/events{/privacy}", "received_events_url": "https://api.github.com/users/brendanzab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5242464d543f0a7e811bcfd7fe8943b62842148a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5242464d543f0a7e811bcfd7fe8943b62842148a", "html_url": "https://github.com/rust-lang/rust/commit/5242464d543f0a7e811bcfd7fe8943b62842148a"}], "stats": {"total": 186, "additions": 92, "deletions": 94}, "files": [{"sha": "c872839146ab08895cf73080c19ac4d28903cf46", "filename": "src/libcore/tuple.rs", "status": "modified", "additions": 92, "deletions": 94, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/b6038b76339deefc340fa709009a7bea069270e4/src%2Flibcore%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6038b76339deefc340fa709009a7bea069270e4/src%2Flibcore%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftuple.rs?ref=b6038b76339deefc340fa709009a7bea069270e4", "patch": "@@ -257,16 +257,14 @@ macro_rules! tuple_getters(\n         }\n     )+) => (\n         pub mod getters {\n-            use kinds::Copy;\n-\n             $(pub trait $name<$($T),+> {\n-                    $(fn $method(&self) -> $T;)+\n+                    $(fn $method<'a>(&'a self) -> &'a $T;)+\n             })+\n \n-            $(impl<$($T:Copy),+> $name<$($T),+> for ($($T),+) {\n+            $(impl<$($T),+> $name<$($T),+> for ($($T),+) {\n                 $(\n                     #[inline(always)]\n-                    fn $method(&self) -> $T {\n+                    fn $method<'a>(&'a self) -> &'a $T {\n                         match *self {\n                             $accessor => $t\n                         }\n@@ -279,113 +277,113 @@ macro_rules! tuple_getters(\n \n tuple_getters!(\n     Tuple2 {\n-        fn n0 -> A { (a,_) => a }\n-        fn n1 -> B { (_,b) => b }\n+        fn n0 -> A { (ref a,_) => a }\n+        fn n1 -> B { (_,ref b) => b }\n     }\n \n     Tuple3 {\n-        fn n0 -> A { (a,_,_) => a }\n-        fn n1 -> B { (_,b,_) => b }\n-        fn n2 -> C { (_,_,c) => c }\n+        fn n0 -> A { (ref a,_,_) => a }\n+        fn n1 -> B { (_,ref b,_) => b }\n+        fn n2 -> C { (_,_,ref c) => c }\n     }\n \n     Tuple4 {\n-        fn n0 -> A { (a,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_) => b }\n-        fn n2 -> C { (_,_,c,_) => c }\n-        fn n3 -> D { (_,_,_,d) => d }\n+        fn n0 -> A { (ref a,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_) => c }\n+        fn n3 -> D { (_,_,_,ref d) => d }\n     }\n \n     Tuple5 {\n-        fn n0 -> A { (a,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_) => d }\n-        fn n4 -> E { (_,_,_,_,e) => e }\n+        fn n0 -> A { (ref a,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e) => e }\n     }\n \n     Tuple6 {\n-        fn n0 -> A { (a,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f) => f }\n+        fn n0 -> A { (ref a,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f) => f }\n     }\n \n     Tuple7 {\n-        fn n0 -> A { (a,_,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f,_) => f }\n-        fn n6 -> G { (_,_,_,_,_,_,g) => g }\n+        fn n0 -> A { (ref a,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,ref g) => g }\n     }\n \n     Tuple8 {\n-        fn n0 -> A { (a,_,_,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_,_,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f,_,_) => f }\n-        fn n6 -> G { (_,_,_,_,_,_,g,_) => g }\n-        fn n7 -> H { (_,_,_,_,_,_,_,h) => h }\n+        fn n0 -> A { (ref a,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,ref g,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,ref h) => h }\n     }\n \n     Tuple9 {\n-        fn n0 -> A { (a,_,_,_,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_,_,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_,_,_,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f,_,_,_) => f }\n-        fn n6 -> G { (_,_,_,_,_,_,g,_,_) => g }\n-        fn n7 -> H { (_,_,_,_,_,_,_,h,_) => h }\n-        fn n8 -> I { (_,_,_,_,_,_,_,_,i) => i }\n+        fn n0 -> A { (ref a,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,ref g,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,ref h,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,ref i) => i }\n     }\n \n     Tuple10 {\n-        fn n0 -> A { (a,_,_,_,_,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_,_,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_,_,_,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_,_,_,_,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f,_,_,_,_) => f }\n-        fn n6 -> G { (_,_,_,_,_,_,g,_,_,_) => g }\n-        fn n7 -> H { (_,_,_,_,_,_,_,h,_,_) => h }\n-        fn n8 -> I { (_,_,_,_,_,_,_,_,i,_) => i }\n-        fn n9 -> J { (_,_,_,_,_,_,_,_,_,j) => j }\n+        fn n0 -> A { (ref a,_,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f,_,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,ref g,_,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,ref h,_,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,ref i,_) => i }\n+        fn n9 -> J { (_,_,_,_,_,_,_,_,_,ref j) => j }\n     }\n \n     Tuple11 {\n-        fn n0 -> A { (a,_,_,_,_,_,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_,_,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_,_,_,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_,_,_,_,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_,_,_,_,_,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f,_,_,_,_,_) => f }\n-        fn n6 -> G { (_,_,_,_,_,_,g,_,_,_,_) => g }\n-        fn n7 -> H { (_,_,_,_,_,_,_,h,_,_,_) => h }\n-        fn n8 -> I { (_,_,_,_,_,_,_,_,i,_,_) => i }\n-        fn n9 -> J { (_,_,_,_,_,_,_,_,_,j,_) => j }\n-        fn n10 -> K { (_,_,_,_,_,_,_,_,_,_,k) => k }\n+        fn n0 -> A { (ref a,_,_,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_,_,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f,_,_,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,ref g,_,_,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,ref h,_,_,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,ref i,_,_) => i }\n+        fn n9 -> J { (_,_,_,_,_,_,_,_,_,ref j,_) => j }\n+        fn n10 -> K { (_,_,_,_,_,_,_,_,_,_,ref k) => k }\n     }\n \n     Tuple12 {\n-        fn n0 -> A { (a,_,_,_,_,_,_,_,_,_,_,_) => a }\n-        fn n1 -> B { (_,b,_,_,_,_,_,_,_,_,_,_) => b }\n-        fn n2 -> C { (_,_,c,_,_,_,_,_,_,_,_,_) => c }\n-        fn n3 -> D { (_,_,_,d,_,_,_,_,_,_,_,_) => d }\n-        fn n4 -> E { (_,_,_,_,e,_,_,_,_,_,_,_) => e }\n-        fn n5 -> F { (_,_,_,_,_,f,_,_,_,_,_,_) => f }\n-        fn n6 -> G { (_,_,_,_,_,_,g,_,_,_,_,_) => g }\n-        fn n7 -> H { (_,_,_,_,_,_,_,h,_,_,_,_) => h }\n-        fn n8 -> I { (_,_,_,_,_,_,_,_,i,_,_,_) => i }\n-        fn n9 -> J { (_,_,_,_,_,_,_,_,_,j,_,_) => j }\n-        fn n10 -> K { (_,_,_,_,_,_,_,_,_,_,k,_) => k }\n-        fn n11 -> L { (_,_,_,_,_,_,_,_,_,_,_,l) => l }\n+        fn n0 -> A { (ref a,_,_,_,_,_,_,_,_,_,_,_) => a }\n+        fn n1 -> B { (_,ref b,_,_,_,_,_,_,_,_,_,_) => b }\n+        fn n2 -> C { (_,_,ref c,_,_,_,_,_,_,_,_,_) => c }\n+        fn n3 -> D { (_,_,_,ref d,_,_,_,_,_,_,_,_) => d }\n+        fn n4 -> E { (_,_,_,_,ref e,_,_,_,_,_,_,_) => e }\n+        fn n5 -> F { (_,_,_,_,_,ref f,_,_,_,_,_,_) => f }\n+        fn n6 -> G { (_,_,_,_,_,_,ref g,_,_,_,_,_) => g }\n+        fn n7 -> H { (_,_,_,_,_,_,_,ref h,_,_,_,_) => h }\n+        fn n8 -> I { (_,_,_,_,_,_,_,_,ref i,_,_,_) => i }\n+        fn n9 -> J { (_,_,_,_,_,_,_,_,_,ref j,_,_) => j }\n+        fn n10 -> K { (_,_,_,_,_,_,_,_,_,_,ref k,_) => k }\n+        fn n11 -> L { (_,_,_,_,_,_,_,_,_,_,_,ref l) => l }\n     }\n )\n \n@@ -415,16 +413,16 @@ fn test_clone() {\n #[test]\n fn test_n_tuple() {\n     let t = (0u8, 1u16, 2u32, 3u64, 4u, 5i8, 6i16, 7i32, 8i64, 9i, 10f32, 11f64);\n-    assert_eq!(t.n0(), 0u8);\n-    assert_eq!(t.n1(), 1u16);\n-    assert_eq!(t.n2(), 2u32);\n-    assert_eq!(t.n3(), 3u64);\n-    assert_eq!(t.n4(), 4u);\n-    assert_eq!(t.n5(), 5i8);\n-    assert_eq!(t.n6(), 6i16);\n-    assert_eq!(t.n7(), 7i32);\n-    assert_eq!(t.n8(), 8i64);\n-    assert_eq!(t.n9(), 9i);\n-    assert_eq!(t.n10(), 10f32);\n-    assert_eq!(t.n11(), 11f64);\n+    assert_eq!(*t.n0(), 0u8);\n+    assert_eq!(*t.n1(), 1u16);\n+    assert_eq!(*t.n2(), 2u32);\n+    assert_eq!(*t.n3(), 3u64);\n+    assert_eq!(*t.n4(), 4u);\n+    assert_eq!(*t.n5(), 5i8);\n+    assert_eq!(*t.n6(), 6i16);\n+    assert_eq!(*t.n7(), 7i32);\n+    assert_eq!(*t.n8(), 8i64);\n+    assert_eq!(*t.n9(), 9i);\n+    assert_eq!(*t.n10(), 10f32);\n+    assert_eq!(*t.n11(), 11f64);\n }"}]}