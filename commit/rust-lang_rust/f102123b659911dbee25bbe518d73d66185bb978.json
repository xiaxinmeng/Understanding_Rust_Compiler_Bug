{"sha": "f102123b659911dbee25bbe518d73d66185bb978", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxMDIxMjNiNjU5OTExZGJlZTI1YmJlNTE4ZDczZDY2MTg1YmI5Nzg=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-11-23T18:00:10Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2014-12-08T09:02:12Z"}, "message": "libserialize: Do not coerce to integer when decoding a float value\n\nWhen an integral value is expected by the user but a fractional value is\nfound, the current implementation uses std::num::cast() to coerce to an\ninteger type, losing the fractional part. This behavior is not desirable\nbecause the number loses precision without notice.\n\nThis commit makes it raise ExpectedError when such a situation arises.\n\n[breaking-change]", "tree": {"sha": "35bfc3b87828ebc9f2f041c3e6a978ec185b1ca0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35bfc3b87828ebc9f2f041c3e6a978ec185b1ca0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f102123b659911dbee25bbe518d73d66185bb978", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f102123b659911dbee25bbe518d73d66185bb978", "html_url": "https://github.com/rust-lang/rust/commit/f102123b659911dbee25bbe518d73d66185bb978", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f102123b659911dbee25bbe518d73d66185bb978/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca4f53655e82a0a0e1d613b16108720bb7a50fde", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca4f53655e82a0a0e1d613b16108720bb7a50fde", "html_url": "https://github.com/rust-lang/rust/commit/ca4f53655e82a0a0e1d613b16108720bb7a50fde"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "23e2c4b9830b399e2a3f9645c109ba9d4226d3cd", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f102123b659911dbee25bbe518d73d66185bb978/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f102123b659911dbee25bbe518d73d66185bb978/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=f102123b659911dbee25bbe518d73d66185bb978", "patch": "@@ -1974,10 +1974,7 @@ macro_rules! read_primitive {\n                     }\n                 }\n                 Json::F64(f) => {\n-                    match num::cast(f) {\n-                        Some(f) => Ok(f),\n-                        None => Err(ExpectedError(\"Number\".to_string(), format!(\"{}\", f))),\n-                    }\n+                    Err(ExpectedError(\"Integer\".to_string(), format!(\"{}\", f)))\n                 }\n                 Json::String(s) => {\n                     // re: #12967.. a type w/ numeric keys (ie HashMap<uint, V> etc)\n@@ -2830,6 +2827,9 @@ mod tests {\n \n         let v: i64 = super::decode(\"9223372036854775807\").unwrap();\n         assert_eq!(v, i64::MAX);\n+\n+        let res: DecodeResult<i64> = super::decode(\"765.25252\");\n+        assert_eq!(res, Err(ExpectedError(\"Integer\".into_string(), \"765.25252\".into_string())));\n     }\n \n     #[test]"}]}