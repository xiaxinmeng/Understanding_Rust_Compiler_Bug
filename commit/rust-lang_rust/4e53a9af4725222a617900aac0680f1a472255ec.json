{"sha": "4e53a9af4725222a617900aac0680f1a472255ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRlNTNhOWFmNDcyNTIyMmE2MTc5MDBhYWMwNjgwZjFhNDcyMjU1ZWM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-04-20T09:41:54Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2020-04-20T09:42:14Z"}, "message": "tweak comments", "tree": {"sha": "911abdb209e195ea1572579890d1866890103a8b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/911abdb209e195ea1572579890d1866890103a8b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4e53a9af4725222a617900aac0680f1a472255ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4e53a9af4725222a617900aac0680f1a472255ec", "html_url": "https://github.com/rust-lang/rust/commit/4e53a9af4725222a617900aac0680f1a472255ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4e53a9af4725222a617900aac0680f1a472255ec/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "365807f0576b719ba9af6b4f724bb5f133ea81ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/365807f0576b719ba9af6b4f724bb5f133ea81ac", "html_url": "https://github.com/rust-lang/rust/commit/365807f0576b719ba9af6b4f724bb5f133ea81ac"}], "stats": {"total": 15, "additions": 10, "deletions": 5}, "files": [{"sha": "9a75f3afe8f082bccffe7e60cc0d895c4400f37d", "filename": "src/librustc_mir_build/build/expr/as_operand.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/4e53a9af4725222a617900aac0680f1a472255ec/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4e53a9af4725222a617900aac0680f1a472255ec/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fbuild%2Fexpr%2Fas_operand.rs?ref=4e53a9af4725222a617900aac0680f1a472255ec", "patch": "@@ -10,9 +10,10 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n     /// Returns an operand suitable for use until the end of the current\n     /// scope expression.\n     ///\n-    /// The operand returned from this function will *not be valid* after\n-    /// an ExprKind::Scope is passed, so please do *not* return it from\n-    /// functions to avoid bad miscompiles.\n+    /// The operand returned from this function will *not be valid*\n+    /// after the current enclosing `ExprKind::Scope` has ended, so\n+    /// please do *not* return it from functions to avoid bad\n+    /// miscompiles.\n     crate fn as_local_operand<M>(&mut self, block: BasicBlock, expr: M) -> BlockAnd<Operand<'tcx>>\n     where\n         M: Mirror<'tcx, Output = Expr<'tcx>>,\n@@ -30,8 +31,10 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n     /// `as_operand`, except for the particular case of passing values of (potentially) unsized\n     /// types \"by value\" (see details below).\n     ///\n-    /// As with `as_operand`, the operand returned from this function will *not be valid* after an\n-    /// `ExprKind::Scope` is passed, so do not return it from functions.\n+    /// The operand returned from this function will *not be valid*\n+    /// after the current enclosing `ExprKind::Scope` has ended, so\n+    /// please do *not* return it from functions to avoid bad\n+    /// miscompiles.\n     ///\n     /// # Parameters of unsized types\n     ///\n@@ -98,6 +101,8 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         self.expr_as_operand(block, scope, expr)\n     }\n \n+    /// Like `as_local_call_operand`, except that the argument will\n+    /// not be valid once `scope` ends.\n     fn as_call_operand<M>(\n         &mut self,\n         block: BasicBlock,"}]}