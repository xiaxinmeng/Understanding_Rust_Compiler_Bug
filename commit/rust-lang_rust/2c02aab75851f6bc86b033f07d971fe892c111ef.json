{"sha": "2c02aab75851f6bc86b033f07d971fe892c111ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMDJhYWI3NTg1MWY2YmM4NmIwMzNmMDdkOTcxZmU4OTJjMTExZWY=", "commit": {"author": {"name": "Jack Moffitt", "email": "jack@metajack.im", "date": "2013-04-04T17:34:35Z"}, "committer": {"name": "Jack Moffitt", "email": "jack@metajack.im", "date": "2013-04-04T17:34:35Z"}, "message": "Add cell#with_mut_ref for handling mutable references to the content.", "tree": {"sha": "c2ce1d9b240e68c04b653322998e453e0d77c242", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2ce1d9b240e68c04b653322998e453e0d77c242"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c02aab75851f6bc86b033f07d971fe892c111ef", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c02aab75851f6bc86b033f07d971fe892c111ef", "html_url": "https://github.com/rust-lang/rust/commit/2c02aab75851f6bc86b033f07d971fe892c111ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c02aab75851f6bc86b033f07d971fe892c111ef/comments", "author": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "committer": {"login": "metajack", "id": 28357, "node_id": "MDQ6VXNlcjI4MzU3", "avatar_url": "https://avatars.githubusercontent.com/u/28357?v=4", "gravatar_id": "", "url": "https://api.github.com/users/metajack", "html_url": "https://github.com/metajack", "followers_url": "https://api.github.com/users/metajack/followers", "following_url": "https://api.github.com/users/metajack/following{/other_user}", "gists_url": "https://api.github.com/users/metajack/gists{/gist_id}", "starred_url": "https://api.github.com/users/metajack/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/metajack/subscriptions", "organizations_url": "https://api.github.com/users/metajack/orgs", "repos_url": "https://api.github.com/users/metajack/repos", "events_url": "https://api.github.com/users/metajack/events{/privacy}", "received_events_url": "https://api.github.com/users/metajack/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "717ed51f123aac1cb25ba710ffacdd7821a577df", "url": "https://api.github.com/repos/rust-lang/rust/commits/717ed51f123aac1cb25ba710ffacdd7821a577df", "html_url": "https://github.com/rust-lang/rust/commit/717ed51f123aac1cb25ba710ffacdd7821a577df"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "1707bddc2b9d4c2cd6cda63eae3fcd21370d77b3", "filename": "src/libcore/cell.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2c02aab75851f6bc86b033f07d971fe892c111ef/src%2Flibcore%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c02aab75851f6bc86b033f07d971fe892c111ef/src%2Flibcore%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcell.rs?ref=2c02aab75851f6bc86b033f07d971fe892c111ef", "patch": "@@ -73,6 +73,14 @@ pub impl<T> Cell<T> {\n         self.put_back(v);\n         r\n     }\n+\n+    // Calls a closure with a mutable reference to the value.\n+    fn with_mut_ref<R>(&self, op: &fn(v: &mut T) -> R) -> R {\n+        let mut v = self.take();\n+        let r = op(&mut v);\n+        self.put_back(v);\n+        r\n+    }\n }\n \n #[test]\n@@ -101,3 +109,21 @@ fn test_put_back_non_empty() {\n     let value_cell = Cell(~10);\n     value_cell.put_back(~20);\n }\n+\n+#[test]\n+fn test_with_ref() {\n+    let good = 6;\n+    let c = Cell(~[1, 2, 3, 4, 5, 6]);\n+    let l = do c.with_ref() |v| { v.len() };\n+    assert!(l == good);\n+}\n+\n+#[test]\n+fn test_with_mut_ref() {\n+    let good = ~[1, 2, 3];\n+    let mut v = ~[1, 2];\n+    let c = Cell(v);\n+    do c.with_mut_ref() |v| { v.push(3); }\n+    let v = c.take();\n+    assert!(v == good);\n+}"}]}