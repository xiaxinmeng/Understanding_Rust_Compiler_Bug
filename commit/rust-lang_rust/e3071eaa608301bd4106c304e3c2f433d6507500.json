{"sha": "e3071eaa608301bd4106c304e3c2f433d6507500", "node_id": "C_kwDOAAsO6NoAKGUzMDcxZWFhNjA4MzAxYmQ0MTA2YzMwNGUzYzJmNDMzZDY1MDc1MDA", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-06-06T15:56:46Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-06-09T22:28:35Z"}, "message": "reword the message to suggest surrounding with parentheses", "tree": {"sha": "6e092f3f1122713954c43d5939ff06a7377742c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e092f3f1122713954c43d5939ff06a7377742c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3071eaa608301bd4106c304e3c2f433d6507500", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3071eaa608301bd4106c304e3c2f433d6507500", "html_url": "https://github.com/rust-lang/rust/commit/e3071eaa608301bd4106c304e3c2f433d6507500", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3071eaa608301bd4106c304e3c2f433d6507500/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3983881d4e00c2b12d1b5b0319b4c61d72926917", "url": "https://api.github.com/repos/rust-lang/rust/commits/3983881d4e00c2b12d1b5b0319b4c61d72926917", "html_url": "https://github.com/rust-lang/rust/commit/3983881d4e00c2b12d1b5b0319b4c61d72926917"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "35eec2c8e1b17f2112471aba5997a557127f9ff9", "filename": "compiler/rustc_parse/messages.ftl", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3071eaa608301bd4106c304e3c2f433d6507500/compiler%2Frustc_parse%2Fmessages.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e3071eaa608301bd4106c304e3c2f433d6507500/compiler%2Frustc_parse%2Fmessages.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fmessages.ftl?ref=e3071eaa608301bd4106c304e3c2f433d6507500", "patch": "@@ -695,7 +695,7 @@ parse_struct_literal_body_without_path =\n \n parse_struct_literal_needing_parens =\n     invalid struct literal\n-    .suggestion = you might need to surround the struct literal in parentheses\n+    .suggestion = you might need to surround the struct literal with parentheses\n \n parse_struct_literal_not_allowed_here = struct literals are not allowed here\n     .suggestion = surround the struct literal with parentheses"}, {"sha": "c53fe084c4db0f2f01779c5255975d701d69bc9a", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e3071eaa608301bd4106c304e3c2f433d6507500/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3071eaa608301bd4106c304e3c2f433d6507500/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=e3071eaa608301bd4106c304e3c2f433d6507500", "patch": "@@ -751,7 +751,10 @@ impl SourceMap {\n         f: impl Fn(char) -> bool,\n     ) -> Result<Span, SpanSnippetError> {\n         self.span_to_source(span, |s, start, _end| {\n-            let n = s[..start].char_indices().rfind(|&(_, c)| !f(c)).map_or(start, |(i, _)| start - i - 1);\n+            let n = s[..start]\n+                .char_indices()\n+                .rfind(|&(_, c)| !f(c))\n+                .map_or(start, |(i, _)| start - i - 1);\n             Ok(span.with_lo(span.lo() - BytePos(n as u32)))\n         })\n     }"}, {"sha": "068b0483b0fd38ecb4d8efe2e855818b1d2175ec", "filename": "tests/ui/parser/issues/issue-111692.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e3071eaa608301bd4106c304e3c2f433d6507500/tests%2Fui%2Fparser%2Fissues%2Fissue-111692.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3071eaa608301bd4106c304e3c2f433d6507500/tests%2Fui%2Fparser%2Fissues%2Fissue-111692.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fissues%2Fissue-111692.stderr?ref=e3071eaa608301bd4106c304e3c2f433d6507500", "patch": "@@ -4,7 +4,7 @@ error: invalid struct literal\n LL |     if x == module::Type { x: module::C, y: 1 } {\n    |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-help: you might need to surround the struct literal in parentheses\n+help: you might need to surround the struct literal with parentheses\n    |\n LL |     if x == (module::Type { x: module::C, y: 1 }) {\n    |             +                                   +\n@@ -15,7 +15,7 @@ error: invalid struct literal\n LL |     if x ==module::Type { x: module::C, y: 1 } {\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-help: you might need to surround the struct literal in parentheses\n+help: you might need to surround the struct literal with parentheses\n    |\n LL |     if x ==(module::Type { x: module::C, y: 1 }) {\n    |            +                                   +\n@@ -26,7 +26,7 @@ error: invalid struct literal\n LL |     if x == Type { x: module::C, y: 1 } {\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-help: you might need to surround the struct literal in parentheses\n+help: you might need to surround the struct literal with parentheses\n    |\n LL |     if x == (Type { x: module::C, y: 1 }) {\n    |             +                           +\n@@ -37,7 +37,7 @@ error: invalid struct literal\n LL |     if x == demo_module::Type { x: module::C, y: 1 } {\n    |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n-help: you might need to surround the struct literal in parentheses\n+help: you might need to surround the struct literal with parentheses\n    |\n LL |     if x == (demo_module::Type { x: module::C, y: 1 }) {\n    |             +                                        +"}, {"sha": "dedbad9094594d9ab9b6cdecea9d44625419bef7", "filename": "tests/ui/parser/method-call-on-struct-literal-in-if-condition.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3071eaa608301bd4106c304e3c2f433d6507500/tests%2Fui%2Fparser%2Fmethod-call-on-struct-literal-in-if-condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e3071eaa608301bd4106c304e3c2f433d6507500/tests%2Fui%2Fparser%2Fmethod-call-on-struct-literal-in-if-condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fparser%2Fmethod-call-on-struct-literal-in-if-condition.stderr?ref=e3071eaa608301bd4106c304e3c2f433d6507500", "patch": "@@ -4,7 +4,7 @@ error: invalid struct literal\n LL |     if Example { a: one(), }.is_pos() {\n    |        ^^^^^^^^^^^^^^^^^^^^^\n    |\n-help: you might need to surround the struct literal in parentheses\n+help: you might need to surround the struct literal with parentheses\n    |\n LL |     if (Example { a: one(), }).is_pos() {\n    |        +                     +"}]}