{"sha": "afc7e0e9d3945dbb9799752e3a83c749fdd26320", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmYzdlMGU5ZDM5NDVkYmI5Nzk5NzUyZTNhODNjNzQ5ZmRkMjYzMjA=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-05T10:11:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-05T10:11:19Z"}, "message": "Rollup merge of #64157 - gilescope:opaque-type-location, r=cramertj,Centril\n\nOpaque type locations in error message for clarity.\n\nAttempts to fix #63167", "tree": {"sha": "df52f78d42b2e14c8574d2e7e7f564ef6ba08e94", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df52f78d42b2e14c8574d2e7e7f564ef6ba08e94"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/afc7e0e9d3945dbb9799752e3a83c749fdd26320", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdcN9HCRBK7hj4Ov3rIwAAdHIIAA15RVllLYela17OfgysSK0o\n2U72nzASH+FkCUMzBZkMK2GQKHYseNh0NGYF1DZUHVEDaYz6bdKxeIuGxlL+hMFL\nEpVfmvmZtmjKuTeFfjqw1i8DBBCp1acwEwltiAumxAgUSfzLXBQzd9V/PZPvTXXs\nOa3xzjXGXwgaw/XjUJ4rur1feXHfECt9sNtX1fPF/1vHUHVf61Z5pjd9zGCY+d1P\n85fXgXnJQdoIxzm8NIlHyMhEVrbc/RA8oBmoss3j7jSYF9OMkDk/MFApkfNYUhii\nQyXM6sjS24HsLfcqv6aS8SjVAc7LPIEy7xhtswG0qfS9+WfeSfORpDvG4QbvhRU=\n=bzTn\n-----END PGP SIGNATURE-----\n", "payload": "tree df52f78d42b2e14c8574d2e7e7f564ef6ba08e94\nparent 23265741d33b9baff5ae0c50b328ccd54a3c1b47\nparent 9483db5052415464fcb59ab480479afdd35710a5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1567678279 +0200\ncommitter GitHub <noreply@github.com> 1567678279 +0200\n\nRollup merge of #64157 - gilescope:opaque-type-location, r=cramertj,Centril\n\nOpaque type locations in error message for clarity.\n\nAttempts to fix #63167\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/afc7e0e9d3945dbb9799752e3a83c749fdd26320", "html_url": "https://github.com/rust-lang/rust/commit/afc7e0e9d3945dbb9799752e3a83c749fdd26320", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/afc7e0e9d3945dbb9799752e3a83c749fdd26320/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23265741d33b9baff5ae0c50b328ccd54a3c1b47", "url": "https://api.github.com/repos/rust-lang/rust/commits/23265741d33b9baff5ae0c50b328ccd54a3c1b47", "html_url": "https://github.com/rust-lang/rust/commit/23265741d33b9baff5ae0c50b328ccd54a3c1b47"}, {"sha": "9483db5052415464fcb59ab480479afdd35710a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/9483db5052415464fcb59ab480479afdd35710a5", "html_url": "https://github.com/rust-lang/rust/commit/9483db5052415464fcb59ab480479afdd35710a5"}], "stats": {"total": 15, "additions": 11, "deletions": 4}, "files": [{"sha": "5883be6e26883b636527e0f5821979aecda787d5", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/afc7e0e9d3945dbb9799752e3a83c749fdd26320/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/afc7e0e9d3945dbb9799752e3a83c749fdd26320/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=afc7e0e9d3945dbb9799752e3a83c749fdd26320", "patch": "@@ -1136,12 +1136,19 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         if let Some((expected, found)) = expected_found {\n             match (terr, is_simple_error, expected == found) {\n                 (&TypeError::Sorts(ref values), false, true) => {\n+                    let sort_string = | a_type: Ty<'tcx> |\n+                        if let ty::Opaque(def_id, _) = a_type.sty {\n+                            format!(\" (opaque type at {})\", self.tcx.sess.source_map()\n+                                .mk_substr_filename(self.tcx.def_span(def_id)))\n+                        } else {\n+                            format!(\" ({})\", a_type.sort_string(self.tcx))\n+                        };\n                     diag.note_expected_found_extra(\n                         &\"type\",\n                         expected,\n                         found,\n-                        &format!(\" ({})\", values.expected.sort_string(self.tcx)),\n-                        &format!(\" ({})\", values.found.sort_string(self.tcx)),\n+                        &sort_string(values.expected),\n+                        &sort_string(values.found),\n                     );\n                 }\n                 (_, false, _) => {"}, {"sha": "450cbd4799fdc05b8ad5e8119f10ad1adb319f92", "filename": "src/test/ui/suggestions/opaque-type-error.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/afc7e0e9d3945dbb9799752e3a83c749fdd26320/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/afc7e0e9d3945dbb9799752e3a83c749fdd26320/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fopaque-type-error.stderr?ref=afc7e0e9d3945dbb9799752e3a83c749fdd26320", "patch": "@@ -10,8 +10,8 @@ LL | |         thing_two()\n LL | |     }.await\n    | |_____- if and else have incompatible types\n    |\n-   = note: expected type `impl std::future::Future` (opaque type)\n-              found type `impl std::future::Future` (opaque type)\n+   = note: expected type `impl std::future::Future` (opaque type at <$DIR/opaque-type-error.rs:8:19>)\n+              found type `impl std::future::Future` (opaque type at <$DIR/opaque-type-error.rs:12:19>)\n    = note: distinct uses of `impl Trait` result in different opaque types\n    = help: if both `Future`s have the same `Output` type, consider `.await`ing on both of them\n "}]}