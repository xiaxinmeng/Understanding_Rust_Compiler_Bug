{"sha": "032cbe4ccec5bb6565a5c7656971aa83f56774a9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMmNiZTRjY2VjNWJiNjU2NWE1Yzc2NTY5NzFhYTgzZjU2Nzc0YTk=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T03:13:52Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-07-10T12:54:48Z"}, "message": "Check if the attribute is applied correctly", "tree": {"sha": "de46c24f01efe6d1d734c79e67ac36404ff3351b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de46c24f01efe6d1d734c79e67ac36404ff3351b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/032cbe4ccec5bb6565a5c7656971aa83f56774a9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEjbeLZzPb62/vY3smZSV3NIU3bZIFAmDpmJgACgkQZSV3NIU3\nbZJknA/9FQ19jfVKHVYaogAGpCyY6XuVieWLXcc35DWNQPG9oLnfxrkZkBVlqAgX\nIN60rE/WJhGWhLOnhUNI9WHEYqtTw52YMQdpZGFnkpZwDOB5HsKsZ4zX8oMlRieL\nKZpWhk1txfn8ajPJrC0+eNQ5Mq4lV0tsQLwGUbRgf4MItzJ4ir00B2d9ExO4dw3s\nYqRdBtxAkErvSoThgMtAwyejcVXJXlhjQ6vT6ZStbEuul5zQLvgr61fTh2Jq2w/q\nA3yeUc26dSHEfHMZ2T3EBtLs+FNoS7KyQiN1g6WUK8yn9tjO1Rh3OE+R/8/DmsSz\nBSS++qQ6jM32eZgMYaozUQ7VY38xbmwqGSCnW6c4pFez574tGLwF6E60dbRWtY7Y\nSz0jHCfdmgAw5wW+K+k4344DhmmY5cY24VMGr79iQTeLhVRz2OlKTSVyodvVRKla\nCQwPBY1bf9AM5DfDcmNfMxVGtG8L8MyNlelzVshdkSnIFQUxWd/kh3g1e2DtVLmC\nxa5NxBpoWhhd69WhWTDUcNLZvcnE4fo5pziS/uOhoVgNfkuOGt85l0h0ZHfWMbid\npg3j3DbNZzzmXTb3Dt2MXru7sPFuf2qttyQaSF1JtL1v4mtaI5KilVpRFPLZl9pZ\ncTJWqY3/ayYzf4e2PFaYDFz68etzIQW0eywkaKKY3JsRTjhB4Gc=\n=PlxH\n-----END PGP SIGNATURE-----", "payload": "tree de46c24f01efe6d1d734c79e67ac36404ff3351b\nparent 56d79adf3be666a4583ffeddd276de5c8b6ab32e\nauthor Deadbeef <ent3rm4n@gmail.com> 1625886832 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1625921688 +0800\n\nCheck if the attribute is applied correctly\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/032cbe4ccec5bb6565a5c7656971aa83f56774a9", "html_url": "https://github.com/rust-lang/rust/commit/032cbe4ccec5bb6565a5c7656971aa83f56774a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/032cbe4ccec5bb6565a5c7656971aa83f56774a9/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56d79adf3be666a4583ffeddd276de5c8b6ab32e", "url": "https://api.github.com/repos/rust-lang/rust/commits/56d79adf3be666a4583ffeddd276de5c8b6ab32e", "html_url": "https://github.com/rust-lang/rust/commit/56d79adf3be666a4583ffeddd276de5c8b6ab32e"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "71231830e99a7afe2b2746264eec5efbf97efc87", "filename": "compiler/rustc_passes/src/check_attr.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/032cbe4ccec5bb6565a5c7656971aa83f56774a9/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/032cbe4ccec5bb6565a5c7656971aa83f56774a9/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_attr.rs?ref=032cbe4ccec5bb6565a5c7656971aa83f56774a9", "patch": "@@ -98,6 +98,9 @@ impl CheckAttrVisitor<'tcx> {\n                 | sym::rustc_if_this_changed\n                 | sym::rustc_then_this_would_need => self.check_rustc_dirty_clean(&attr),\n                 sym::cmse_nonsecure_entry => self.check_cmse_nonsecure_entry(attr, span, target),\n+                sym::default_method_body_is_const => {\n+                    self.check_default_method_body_is_const(attr, span, target)\n+                }\n                 _ => true,\n             };\n             // lint-only checks\n@@ -1465,6 +1468,29 @@ impl CheckAttrVisitor<'tcx> {\n             }\n         }\n     }\n+\n+    /// default_method_body_is_const should only be applied to trait methods with default bodies.\n+    fn check_default_method_body_is_const(\n+        &self,\n+        attr: &Attribute,\n+        span: &Span,\n+        target: Target,\n+    ) -> bool {\n+        match target {\n+            Target::Method(MethodKind::Trait { body: true }) => true,\n+            _ => {\n+                self.tcx\n+                    .sess\n+                    .struct_span_err(\n+                        attr.span,\n+                        \"attribute should be applied to a trait method with body\",\n+                    )\n+                    .span_label(*span, \"not a trait method or missing a body\")\n+                    .emit();\n+                false\n+            }\n+        }\n+    }\n }\n \n impl Visitor<'tcx> for CheckAttrVisitor<'tcx> {"}]}