{"sha": "83ab9f7faccddee23545e12d323791f9e2d06380", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYWI5ZjdmYWNjZGRlZTIzNTQ1ZTEyZDMyMzc5MWY5ZTJkMDYzODA=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-11-29T02:07:02Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-12-18T23:25:30Z"}, "message": "Remove some unused functions and fix formatting.", "tree": {"sha": "abca5f723d6a611e544b478fef7f78bebd9c7be0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/abca5f723d6a611e544b478fef7f78bebd9c7be0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83ab9f7faccddee23545e12d323791f9e2d06380", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83ab9f7faccddee23545e12d323791f9e2d06380", "html_url": "https://github.com/rust-lang/rust/commit/83ab9f7faccddee23545e12d323791f9e2d06380", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83ab9f7faccddee23545e12d323791f9e2d06380/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b35c306b657c25f676c3981e2c78ea73f44ef378", "url": "https://api.github.com/repos/rust-lang/rust/commits/b35c306b657c25f676c3981e2c78ea73f44ef378", "html_url": "https://github.com/rust-lang/rust/commit/b35c306b657c25f676c3981e2c78ea73f44ef378"}], "stats": {"total": 42, "additions": 6, "deletions": 36}, "files": [{"sha": "c31bcfbd86992ec7dce23a1647d15d6f9ada2559", "filename": "src/libsyntax/attr.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/83ab9f7faccddee23545e12d323791f9e2d06380/src%2Flibsyntax%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ab9f7faccddee23545e12d323791f9e2d06380/src%2Flibsyntax%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr.rs?ref=83ab9f7faccddee23545e12d323791f9e2d06380", "patch": "@@ -29,7 +29,6 @@ use symbol::Symbol;\n use util::ThinVec;\n \n use std::cell::{RefCell, Cell};\n-use std::collections::HashSet;\n \n thread_local! {\n     static USED_ATTRS: RefCell<Vec<u64>> = RefCell::new(Vec::new());\n@@ -372,16 +371,6 @@ pub fn mk_spanned_attr_outer(sp: Span, id: AttrId, item: MetaItem) -> Attribute\n     }\n }\n \n-pub fn mk_doc_attr_outer(id: AttrId, item: MetaItem, is_sugared_doc: bool) -> Attribute {\n-    Attribute {\n-        id: id,\n-        style: ast::AttrStyle::Outer,\n-        value: item,\n-        is_sugared_doc: is_sugared_doc,\n-        span: DUMMY_SP,\n-    }\n-}\n-\n pub fn mk_sugared_doc_attr(id: AttrId, text: Symbol, lo: BytePos, hi: BytePos)\n                            -> Attribute {\n     let style = doc_comment_style(&text.as_str());\n@@ -421,13 +410,6 @@ pub fn first_attr_value_str_by_name(attrs: &[Attribute], name: &str) -> Option<S\n         .and_then(|at| at.value_str())\n }\n \n-pub fn last_meta_item_value_str_by_name(items: &[MetaItem], name: &str) -> Option<Symbol> {\n-    items.iter()\n-         .rev()\n-         .find(|mi| mi.check_name(name))\n-         .and_then(|i| i.value_str())\n-}\n-\n /* Higher-level applications */\n \n pub fn find_crate_name(attrs: &[Attribute]) -> Option<Symbol> {\n@@ -856,18 +838,6 @@ pub fn find_deprecation(diagnostic: &Handler, attrs: &[Attribute],\n     find_deprecation_generic(diagnostic, attrs.iter(), item_sp)\n }\n \n-pub fn require_unique_names(diagnostic: &Handler, metas: &[MetaItem]) {\n-    let mut set = HashSet::new();\n-    for meta in metas {\n-        let name = meta.name();\n-\n-        if !set.insert(name.clone()) {\n-            panic!(diagnostic.span_fatal(meta.span,\n-                                         &format!(\"duplicate meta item `{}`\", name)));\n-        }\n-    }\n-}\n-\n \n /// Parse #[repr(...)] forms.\n ///"}, {"sha": "8842cb55b1ea5500503a23ab9407734bc3702517", "filename": "src/libsyntax/ext/hygiene.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/83ab9f7faccddee23545e12d323791f9e2d06380/src%2Flibsyntax%2Fext%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83ab9f7faccddee23545e12d323791f9e2d06380/src%2Flibsyntax%2Fext%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fhygiene.rs?ref=83ab9f7faccddee23545e12d323791f9e2d06380", "patch": "@@ -115,12 +115,12 @@ impl SyntaxContext {\n         })\n     }\n \n-   /// If `ident` is macro expanded, return the source ident from the macro definition\n-   /// and the mark of the expansion that created the macro definition.\n-   pub fn source(self) -> (Self /* source context */, Mark /* source macro */) {\n-        let macro_def_ctxt = self.data().prev_ctxt.data();\n-        (macro_def_ctxt.prev_ctxt, macro_def_ctxt.outer_mark)\n-   }\n+    /// If `ident` is macro expanded, return the source ident from the macro definition\n+    /// and the mark of the expansion that created the macro definition.\n+    pub fn source(self) -> (Self /* source context */, Mark /* source macro */) {\n+         let macro_def_ctxt = self.data().prev_ctxt.data();\n+         (macro_def_ctxt.prev_ctxt, macro_def_ctxt.outer_mark)\n+    }\n }\n \n impl fmt::Debug for SyntaxContext {"}]}