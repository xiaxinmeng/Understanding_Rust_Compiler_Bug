{"sha": "549940c491baabbaf6b5f2e3b0c9028bbb866e97", "node_id": "C_kwDOAAsO6NoAKDU0OTk0MGM0OTFiYWFiYmFmNmI1ZjJlM2IwYzkwMjhiYmI4NjZlOTc", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-27T03:21:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-06-29T15:26:24Z"}, "message": "fix stderr by hand since that test is not run on my system", "tree": {"sha": "1211dcaeef7f874110784526d7cd0bf62ba3eac9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1211dcaeef7f874110784526d7cd0bf62ba3eac9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/549940c491baabbaf6b5f2e3b0c9028bbb866e97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/549940c491baabbaf6b5f2e3b0c9028bbb866e97", "html_url": "https://github.com/rust-lang/rust/commit/549940c491baabbaf6b5f2e3b0c9028bbb866e97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/549940c491baabbaf6b5f2e3b0c9028bbb866e97/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "238501c13736962451b07d16481cc36c39144072", "url": "https://api.github.com/repos/rust-lang/rust/commits/238501c13736962451b07d16481cc36c39144072", "html_url": "https://github.com/rust-lang/rust/commit/238501c13736962451b07d16481cc36c39144072"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "33e574b170875a4435a21609c74f6c3111f502ac", "filename": "src/test/ui/consts/std/alloc.32bit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/549940c491baabbaf6b5f2e3b0c9028bbb866e97/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.32bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/549940c491baabbaf6b5f2e3b0c9028bbb866e97/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.32bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.32bit.stderr?ref=549940c491baabbaf6b5f2e3b0c9028bbb866e97", "patch": "@@ -2,7 +2,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/alloc.rs:9:1\n    |\n LL | const LAYOUT_INVALID_ZERO: Layout = unsafe { Layout::from_size_align_unchecked(0x1000, 0x00) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .align.0.<enum-tag>: encountered 0x00000000, but expected a valid enum tag\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .align.0.<enum-tag>: encountered 0x00000000, but expected a valid enum tag\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 8, align: 4) {\n@@ -13,7 +13,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/alloc.rs:13:1\n    |\n LL | const LAYOUT_INVALID_THREE: Layout = unsafe { Layout::from_size_align_unchecked(9, 3) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .align.0.<enum-tag>: encountered 0x00000003, but expected a valid enum tag\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .align.0.<enum-tag>: encountered 0x00000003, but expected a valid enum tag\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 8, align: 4) {"}, {"sha": "9556e30334d2e47aed86784e6a0cfeb49fff243d", "filename": "src/test/ui/consts/std/alloc.64bit.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/549940c491baabbaf6b5f2e3b0c9028bbb866e97/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.64bit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/549940c491baabbaf6b5f2e3b0c9028bbb866e97/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.64bit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.64bit.stderr?ref=549940c491baabbaf6b5f2e3b0c9028bbb866e97", "patch": "@@ -2,7 +2,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/alloc.rs:9:1\n    |\n LL | const LAYOUT_INVALID_ZERO: Layout = unsafe { Layout::from_size_align_unchecked(0x1000, 0x00) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .align.0.<enum-tag>: encountered 0x0000000000000000, but expected a valid enum tag\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .align.0.<enum-tag>: encountered 0x0000000000000000, but expected a valid enum tag\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 16, align: 8) {\n@@ -13,7 +13,7 @@ error[E0080]: it is undefined behavior to use this value\n   --> $DIR/alloc.rs:13:1\n    |\n LL | const LAYOUT_INVALID_THREE: Layout = unsafe { Layout::from_size_align_unchecked(9, 3) };\n-   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed at .align.0.<enum-tag>: encountered 0x0000000000000003, but expected a valid enum tag\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ constructing invalid value at .align.0.<enum-tag>: encountered 0x0000000000000003, but expected a valid enum tag\n    |\n    = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rustc repository if you believe it should not be considered undefined behavior.\n    = note: the raw bytes of the constant (size: 16, align: 8) {"}]}