{"sha": "836a3d9bdbea4561cc49944a05135e2d8abf5371", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzNmEzZDliZGJlYTQ1NjFjYzQ5OTQ0YTA1MTM1ZTJkOGFiZjUzNzE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-14T13:44:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-08-14T13:44:18Z"}, "message": "auto merge of #8453 : dmanescu/rust/8451, r=cmr\n\nI'm not sure that the supplied tests are suitable.", "tree": {"sha": "b262d95b0607ed8e6f849c96f90f072243f76112", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b262d95b0607ed8e6f849c96f90f072243f76112"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/836a3d9bdbea4561cc49944a05135e2d8abf5371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/836a3d9bdbea4561cc49944a05135e2d8abf5371", "html_url": "https://github.com/rust-lang/rust/commit/836a3d9bdbea4561cc49944a05135e2d8abf5371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/836a3d9bdbea4561cc49944a05135e2d8abf5371/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac49e656111cdd1727988bbbf3d3b9be554ae391", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac49e656111cdd1727988bbbf3d3b9be554ae391", "html_url": "https://github.com/rust-lang/rust/commit/ac49e656111cdd1727988bbbf3d3b9be554ae391"}, {"sha": "767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "url": "https://api.github.com/repos/rust-lang/rust/commits/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be", "html_url": "https://github.com/rust-lang/rust/commit/767688fc3d4af0fd7efb4b0b6127f7fa2f4707be"}], "stats": {"total": 37, "additions": 33, "deletions": 4}, "files": [{"sha": "0868c767e168c545a6e1506b47a77ae59e3d1b9f", "filename": "src/libextra/stats.rs", "status": "modified", "additions": 33, "deletions": 4, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/836a3d9bdbea4561cc49944a05135e2d8abf5371/src%2Flibextra%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/836a3d9bdbea4561cc49944a05135e2d8abf5371/src%2Flibextra%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fstats.rs?ref=836a3d9bdbea4561cc49944a05135e2d8abf5371", "patch": "@@ -291,10 +291,22 @@ pub fn write_boxplot(w: @io::Writer, s: &Summary, width_hint: uint) {\n \n     let (q1,q2,q3) = s.quartiles;\n \n-    let lomag = (10.0_f64).pow(&s.min.log10().floor());\n-    let himag = (10.0_f64).pow(&(s.max.log10().floor()));\n-    let lo = (s.min / lomag).floor() * lomag;\n-    let hi = (s.max / himag).ceil() * himag;\n+    // the .abs() handles the case where numbers are negative\n+    let lomag = (10.0_f64).pow(&(s.min.abs().log10().floor()));\n+    let himag = (10.0_f64).pow(&(s.max.abs().log10().floor()));\n+\n+    // need to consider when the limit is zero\n+    let lo = if lomag == 0.0 {\n+        0.0\n+    } else {\n+        (s.min / lomag).floor() * lomag\n+    };\n+\n+    let hi = if himag == 0.0 {\n+        0.0\n+    } else {\n+        (s.max / himag).ceil() * himag\n+    };\n \n     let range = hi - lo;\n \n@@ -920,4 +932,21 @@ mod tests {\n         };\n         check(val, summ);\n     }\n+\n+    #[test]\n+    fn test_boxplot_nonpositive() {\n+        fn t(s: &Summary, expected: ~str) {\n+            let out = do io::with_str_writer |w|  {\n+                write_boxplot(w, s, 30)\n+            };\n+\n+            assert_eq!(out, expected);\n+        }\n+\n+        t(&Summary::new([-2.0, -1.0]), ~\"-2 |[------******#*****---]| -1\");\n+        t(&Summary::new([0.0, 2.0]), ~\"0 |[-------*****#*******---]| 2\");\n+        t(&Summary::new([-2.0, 0.0]), ~\"-2 |[------******#******---]| 0\");\n+\n+    }\n+\n }"}]}