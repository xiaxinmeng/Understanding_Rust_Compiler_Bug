{"sha": "61486f4de3b5e04f401a4da2edae2fc4c9f02bc7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNDg2ZjRkZTNiNWUwNGY0MDFhNGRhMmVkYWUyZmM0YzlmMDJiYzc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-26T08:27:11Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-11-26T08:27:11Z"}, "message": "expand comment", "tree": {"sha": "0293d0731334cd11cdd98198f376eee78f431ea6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0293d0731334cd11cdd98198f376eee78f431ea6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61486f4de3b5e04f401a4da2edae2fc4c9f02bc7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61486f4de3b5e04f401a4da2edae2fc4c9f02bc7", "html_url": "https://github.com/rust-lang/rust/commit/61486f4de3b5e04f401a4da2edae2fc4c9f02bc7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61486f4de3b5e04f401a4da2edae2fc4c9f02bc7/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e96ca2bf7f7c558623e372e7a9800ac752faa9c", "html_url": "https://github.com/rust-lang/rust/commit/3e96ca2bf7f7c558623e372e7a9800ac752faa9c"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "8f9a4c05b5702fb43283cea0daafedcdb9096464", "filename": "src/libstd/panicking.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/61486f4de3b5e04f401a4da2edae2fc4c9f02bc7/src%2Flibstd%2Fpanicking.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61486f4de3b5e04f401a4da2edae2fc4c9f02bc7/src%2Flibstd%2Fpanicking.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpanicking.rs?ref=61486f4de3b5e04f401a4da2edae2fc4c9f02bc7", "patch": "@@ -457,11 +457,12 @@ fn rust_panic_with_hook(payload: &mut dyn BoxMeUp,\n         let mut info = PanicInfo::internal_constructor(message, &location);\n         HOOK_LOCK.read();\n         match HOOK {\n-            // Some platforms know that printing to stderr won't ever actually\n+            // Some platforms (like wasm) know that printing to stderr won't ever actually\n             // print anything, and if that's the case we can skip the default\n             // hook. Since string formatting happens lazily when calling `payload`\n-            // methods, this means that with libpanic_abort, we don't format\n-            // the string at all!\n+            // methods, this means we avoid formatting the string at all!\n+            // (The panic runtime might still call `payload.take_box()` though and trigger\n+            // formatting.)\n             Hook::Default if panic_output().is_none() => {}\n             Hook::Default => {\n                 info.set_payload(payload.get());"}]}