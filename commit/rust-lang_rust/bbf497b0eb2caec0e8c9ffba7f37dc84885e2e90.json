{"sha": "bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiZjQ5N2IwZWIyY2FlYzBlOGM5ZmZiYTdmMzdkYzg0ODg1ZTJlOTA=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-10T00:31:12Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2020-06-10T21:30:12Z"}, "message": "Add doc comments", "tree": {"sha": "78405485cdd8c0b10af27dcc20c09714979812eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78405485cdd8c0b10af27dcc20c09714979812eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAl7hUOQACgkQtAh+UQ6Y\nsWSqShAAmp/bQt2/C6XR9yRBLqgt6YpHZD4MbQ0MkzIBelvQNPhfek1jEfYXXJwQ\nC++FTfJc0M6/Rm+WzNrTe2pu7RoRWouqckMZZxbu/XCcXY20n7Gla6/AthZXBtNI\nYyDPBUStRNrNfl5vN3l3Qn18I8YKhSGdLLvfifneeLRbmWavU9lF09zrVIawPaWQ\nBF2/qBDDOenWhq/uhH4+Zk1J5nVdBb2CtGKDgR2f+DU+OjBwVbQnZqhPEG6DkFMN\nQ7PFN9hY/xmy6xiFoKarTtr0GJW82Dtl1s4lsGtNLaWQDIu+6gEDjQDCFuyB2Y4q\nOzqCMQzk+E6FZghJ8bqnUKfE2SAkVIeo6u6r+fZYFpmatJIlzpxkHczpvwYk+nlZ\nGTAi8K+SwD2Km+v4pIGSRMCBOboJhB0ZiItciAwRZHLJb20XbGNVd4xtoR9eL1iP\nBl5yCw68Mrr3xlIlYYFxS2CIZWaOWB/vei/xauHtR+b219sgPSuwi5hAkUjL4IOF\n3YxdLF/mLW9pOy5wt5f4VZiTYAVVoIev01PEQvyaEpk+a4wK3l3kZrqbrfUYdHbs\nhJk6gTbiimOvzb5xqGMVfEqNZYLebu9eUAl9vBeo4iy0RMvd26ICm7pj2TKuXnLl\nNWcDJlCvbmXWXIwlmiZW1s25trORwK8iJ5dhbQCfzD/XkEFI6ZI=\n=xyyS\n-----END PGP SIGNATURE-----", "payload": "tree 78405485cdd8c0b10af27dcc20c09714979812eb\nparent f69a2a6cbd38a13c039fd1f1114424fe0e55b14a\nauthor Aaron Hill <aa1ronham@gmail.com> 1591749072 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1591824612 -0400\n\nAdd doc comments\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "html_url": "https://github.com/rust-lang/rust/commit/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f69a2a6cbd38a13c039fd1f1114424fe0e55b14a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f69a2a6cbd38a13c039fd1f1114424fe0e55b14a", "html_url": "https://github.com/rust-lang/rust/commit/f69a2a6cbd38a13c039fd1f1114424fe0e55b14a"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "9016d35ea0e5ed782db02937ce2e91b009cbbb07", "filename": "src/librustc_ast/ast.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/src%2Flibrustc_ast%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/src%2Flibrustc_ast%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast%2Fast.rs?ref=bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "patch": "@@ -1165,7 +1165,7 @@ pub enum ExprKind {\n     /// and the remaining elements are the rest of the arguments.\n     /// Thus, `x.foo::<Bar, Baz>(a, b, c, d)` is represented as\n     /// `ExprKind::MethodCall(PathSegment { foo, [Bar, Baz] }, [x, a, b, c, d])`.\n-    /// The `Span` is the span of the function, without the dot and receiver\n+    /// This `Span` is the span of the function, without the dot and receiver\n     /// (e.g. `foo(a, b)` in `x.foo(a, b)`\n     MethodCall(PathSegment, Vec<P<Expr>>, Span),\n     /// A tuple (e.g., `(a, b, c, d)`)."}, {"sha": "98746d63fac0b0d2b84e7a14d74642b6224fa9ac", "filename": "src/librustc_middle/mir/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/src%2Flibrustc_middle%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Fmod.rs?ref=bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "patch": "@@ -1131,6 +1131,8 @@ pub enum TerminatorKind<'tcx> {\n         /// `true` if this is from a call in HIR rather than from an overloaded\n         /// operator. True for overloaded function call.\n         from_hir_call: bool,\n+        /// This `Span` is the span of the function, without the dot and receiver\n+        /// (e.g. `foo(a, b)` in `x.foo(a, b)`\n         fn_span: Span,\n     },\n "}, {"sha": "d3ec5595365b423e1259622e4efb9a936e0bb88d", "filename": "src/librustc_mir_build/hair/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fmod.rs?ref=bbf497b0eb2caec0e8c9ffba7f37dc84885e2e90", "patch": "@@ -146,6 +146,8 @@ crate enum ExprKind<'tcx> {\n         // Whether this is from a call in HIR, rather than from an overloaded\n         // operator. True for overloaded function call.\n         from_hir_call: bool,\n+        /// This `Span` is the span of the function, without the dot and receiver\n+        /// (e.g. `foo(a, b)` in `x.foo(a, b)`\n         fn_span: Span,\n     },\n     Deref {"}]}