{"sha": "496205c85f9e0450535514472cd6fc47d5462415", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5NjIwNWM4NWY5ZTA0NTA1MzU1MTQ0NzJjZDZmYzQ3ZDU0NjI0MTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-01T01:05:40Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-02-01T03:32:27Z"}, "message": "rustdoc: Pull impl docs out of attributes", "tree": {"sha": "18ecb24373584052210eafa2a588998508bd5c19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/18ecb24373584052210eafa2a588998508bd5c19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/496205c85f9e0450535514472cd6fc47d5462415", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/496205c85f9e0450535514472cd6fc47d5462415", "html_url": "https://github.com/rust-lang/rust/commit/496205c85f9e0450535514472cd6fc47d5462415", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/496205c85f9e0450535514472cd6fc47d5462415/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23042a3566a0004fdb34adee183fd4ae32f590c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/23042a3566a0004fdb34adee183fd4ae32f590c7", "html_url": "https://github.com/rust-lang/rust/commit/23042a3566a0004fdb34adee183fd4ae32f590c7"}], "stats": {"total": 72, "additions": 67, "deletions": 5}, "files": [{"sha": "818efe018fe09b6313a2ea6e443bfe4558bb80a6", "filename": "src/rustdoc/attr_parser.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/496205c85f9e0450535514472cd6fc47d5462415/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/496205c85f9e0450535514472cd6fc47d5462415/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=496205c85f9e0450535514472cd6fc47d5462415", "patch": "@@ -11,10 +11,10 @@ import core::tuple;\n \n export crate_attrs, mod_attrs, fn_attrs, arg_attrs,\n        const_attrs, enum_attrs, variant_attrs, res_attrs,\n-       iface_attrs, method_attrs;\n+       iface_attrs, method_attrs, impl_attrs;\n export parse_crate, parse_mod, parse_fn, parse_const,\n        parse_enum, parse_variant, parse_res,\n-       parse_iface, parse_method;\n+       parse_iface, parse_method, parse_impl;\n \n type crate_attrs = {\n     name: option<str>\n@@ -63,6 +63,11 @@ type iface_attrs = {\n     desc: option<str>\n };\n \n+type impl_attrs = {\n+    brief: option<str>,\n+    desc: option<str>\n+};\n+\n type method_attrs = fn_attrs;\n \n #[cfg(test)]\n@@ -499,3 +504,7 @@ fn parse_iface(attrs: [ast::attribute]) -> iface_attrs {\n fn parse_method(attrs: [ast::attribute]) -> method_attrs {\n     parse_fn(attrs)\n }\n+\n+fn parse_impl(attrs: [ast::attribute]) -> impl_attrs {\n+    parse_basic(attrs)\n+}\n\\ No newline at end of file"}, {"sha": "1c96eea5cdae61363a605d8e01747a2e6f138497", "filename": "src/rustdoc/attr_pass.rs", "status": "modified", "additions": 56, "deletions": 3, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/496205c85f9e0450535514472cd6fc47d5462415/src%2Frustdoc%2Fattr_pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/496205c85f9e0450535514472cd6fc47d5462415/src%2Frustdoc%2Fattr_pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_pass.rs?ref=496205c85f9e0450535514472cd6fc47d5462415", "patch": "@@ -26,7 +26,8 @@ fn run(\n         fold_const: fold_const,\n         fold_enum: fold_enum,\n         fold_res: fold_res,\n-        fold_iface: fold_iface\n+        fold_iface: fold_iface,\n+        fold_impl: fold_impl\n         with *fold::default_seq_fold(srv)\n     });\n     fold.fold_crate(fold, doc)\n@@ -398,9 +399,14 @@ fn merge_method_attrs(\n                 (method.ident, attr_parser::parse_method(method.attrs))\n             }\n           }\n-          _ {\n-            fail \"Undocumented invariant in merge_method_attrs\";\n+          ast_map::node_item(@{\n+            node: ast::item_impl(_, _, _, methods), _\n+          }) {\n+            vec::map(methods) {|method|\n+                (method.ident, attr_parser::parse_method(method.attrs))\n+            }\n           }\n+          _ { fail \"unexpected item\" }\n         }\n     };\n \n@@ -448,3 +454,50 @@ fn should_extract_iface_method_docs() {\n     assert doc.topmod.ifaces()[0].methods[0].return.desc == some(\"return\");\n     assert doc.topmod.ifaces()[0].methods[0].failure == some(\"failure\");\n }\n+\n+\n+fn fold_impl(\n+    fold: fold::fold<astsrv::srv>,\n+    doc: doc::impldoc\n+) -> doc::impldoc {\n+    let srv = fold.ctxt;\n+    let doc = fold::default_seq_fold_impl(fold, doc);\n+    let attrs = parse_item_attrs(srv, doc.id, attr_parser::parse_impl);\n+\n+    {\n+        brief: attrs.brief,\n+        desc: attrs.desc,\n+        methods: merge_method_attrs(srv, doc.id, doc.methods)\n+        with doc\n+    }\n+}\n+\n+#[test]\n+fn should_extract_impl_docs() {\n+    let source = \"#[doc = \\\"whatever\\\"] impl i for int { fn a() { } }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert doc.topmod.impls()[0].desc == some(\"whatever\");\n+}\n+\n+#[test]\n+fn should_extract_impl_method_docs() {\n+    let source = \"impl i for int {\\\n+                  #[doc(\\\n+                  brief = \\\"brief\\\",\\\n+                  desc = \\\"desc\\\",\\\n+                  args(a = \\\"a\\\"),\\\n+                  return = \\\"return\\\",\\\n+                  failure = \\\"failure\\\")]\\\n+                  fn f(a: bool) -> bool { }\\\n+                  }\";\n+    let srv = astsrv::mk_srv_from_str(source);\n+    let doc = extract::from_srv(srv, \"\");\n+    let doc = run(srv, doc);\n+    assert doc.topmod.impls()[0].methods[0].brief == some(\"brief\");\n+    assert doc.topmod.impls()[0].methods[0].desc == some(\"desc\");\n+    assert doc.topmod.impls()[0].methods[0].args[0].desc == some(\"a\");\n+    assert doc.topmod.impls()[0].methods[0].return.desc == some(\"return\");\n+    assert doc.topmod.impls()[0].methods[0].failure == some(\"failure\");\n+}"}]}