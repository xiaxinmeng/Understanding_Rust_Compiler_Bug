{"sha": "0354cee1372ac80028588f9a2f2772c868b0a21c", "node_id": "C_kwDOAAsO6NoAKDAzNTRjZWUxMzcyYWM4MDAyODU4OGY5YTJmMjc3MmM4NjhiMGEyMWM", "commit": {"author": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-03-31T07:06:39Z"}, "committer": {"name": "blyxyas", "email": "blyxyas@gmail.com", "date": "2023-04-22T19:12:45Z"}, "message": "Add lint `items_after_test_module`", "tree": {"sha": "665decd7c8ad35ac3fe0ba3e4f7ff3b631a54d80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/665decd7c8ad35ac3fe0ba3e4f7ff3b631a54d80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0354cee1372ac80028588f9a2f2772c868b0a21c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEM3aofraJSaf7CtgpTTgXC1ovwzQFAmREMbYACgkQTTgXC1ov\nwzSWgQ/+K8Ij67i+AzLlUpD2UEJNaynuoyInmSXoBSv93nObhPXKtD/vbHNndZ9r\nJx0FAviWFNf5KhcQ1HMFOQz1gDzWLb0n6aR0HIbVE92uEULSLDQ6SdUJhVnXo4Ol\nM2MvEMWlDF9FK3L9Q0W6pdB56696FKullgjexZy2MpjVFf8+8j+2kXzpRrYitqdC\nyP6iWHvqXR8QddbzpwArFOSRetezZKo6+Xwe5Ru3JKG9ydJeDFie5UGmEAobv28L\n5XOqgtMJ8ezQ949Z9EKg2c+YCPEBHb6xW3VdNl8Bz1Pgm9yhYyxDpGk+AN7Mds3q\nqA7InfnGocO7XBZIOM/HFxrmUr3gLRtt0QaDP0SBnU007QMXJUFHNpBwkiOnXpNA\nzLVzo11N9W1IFml7sAqmYW0t2tB9lAYvu1e+RNJR1Nf4QB8lY+fdvhE/2MxRzgdy\nvP9Re8Dx+kmdtycnZMh0ltU+ygtXLAygFn+PlM+LyXWHERYu4C0JjxE0j5CljBV4\nBGnVXuuwIk8tPAqyVsn8wBMdz203tRWth5ePIkJPNzkww5fVD5NlCxvZqTP3OjtC\nOLrAnhXowQ0lUu4dpzbHu+Fo3S1Yq0TmGnMdlT3WJlVSLF+tBOpRzcdEE3l5fPzm\neqEciM853bF2uE40wtO5yyjajYuAK9kVaFEWVDWKsCQTDqy8N1w=\n=ZugB\n-----END PGP SIGNATURE-----", "payload": "tree 665decd7c8ad35ac3fe0ba3e4f7ff3b631a54d80\nparent 928349795f9f28f54e69bd0f0ffeed33de5e272a\nauthor blyxyas <blyxyas@gmail.com> 1680246399 +0200\ncommitter blyxyas <blyxyas@gmail.com> 1682190765 +0200\n\nAdd lint `items_after_test_module`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0354cee1372ac80028588f9a2f2772c868b0a21c", "html_url": "https://github.com/rust-lang/rust/commit/0354cee1372ac80028588f9a2f2772c868b0a21c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0354cee1372ac80028588f9a2f2772c868b0a21c/comments", "author": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "blyxyas", "id": 73757586, "node_id": "MDQ6VXNlcjczNzU3NTg2", "avatar_url": "https://avatars.githubusercontent.com/u/73757586?v=4", "gravatar_id": "", "url": "https://api.github.com/users/blyxyas", "html_url": "https://github.com/blyxyas", "followers_url": "https://api.github.com/users/blyxyas/followers", "following_url": "https://api.github.com/users/blyxyas/following{/other_user}", "gists_url": "https://api.github.com/users/blyxyas/gists{/gist_id}", "starred_url": "https://api.github.com/users/blyxyas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/blyxyas/subscriptions", "organizations_url": "https://api.github.com/users/blyxyas/orgs", "repos_url": "https://api.github.com/users/blyxyas/repos", "events_url": "https://api.github.com/users/blyxyas/events{/privacy}", "received_events_url": "https://api.github.com/users/blyxyas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "928349795f9f28f54e69bd0f0ffeed33de5e272a", "url": "https://api.github.com/repos/rust-lang/rust/commits/928349795f9f28f54e69bd0f0ffeed33de5e272a", "html_url": "https://github.com/rust-lang/rust/commit/928349795f9f28f54e69bd0f0ffeed33de5e272a"}], "stats": {"total": 129, "additions": 129, "deletions": 0}, "files": [{"sha": "d7102d2474ef48826f491380b7d610fe12cfdb91", "filename": "CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0354cee1372ac80028588f9a2f2772c868b0a21c/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/0354cee1372ac80028588f9a2f2772c868b0a21c/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=0354cee1372ac80028588f9a2f2772c868b0a21c", "patch": "@@ -4730,6 +4730,7 @@ Released 2018-09-13\n [`invisible_characters`]: https://rust-lang.github.io/rust-clippy/master/index.html#invisible_characters\n [`is_digit_ascii_radix`]: https://rust-lang.github.io/rust-clippy/master/index.html#is_digit_ascii_radix\n [`items_after_statements`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_statements\n+[`items_after_test_module`]: https://rust-lang.github.io/rust-clippy/master/index.html#items_after_test_module\n [`iter_cloned_collect`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_cloned_collect\n [`iter_count`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_count\n [`iter_kv_map`]: https://rust-lang.github.io/rust-clippy/master/index.html#iter_kv_map"}, {"sha": "0c66d36a1d630b2aa0cc6f6a7c95c939255e3b25", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0354cee1372ac80028588f9a2f2772c868b0a21c/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0354cee1372ac80028588f9a2f2772c868b0a21c/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=0354cee1372ac80028588f9a2f2772c868b0a21c", "patch": "@@ -215,6 +215,7 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::invalid_upcast_comparisons::INVALID_UPCAST_COMPARISONS_INFO,\n     crate::invalid_utf8_in_unchecked::INVALID_UTF8_IN_UNCHECKED_INFO,\n     crate::items_after_statements::ITEMS_AFTER_STATEMENTS_INFO,\n+    crate::items_after_test_module::ITEMS_AFTER_TEST_MODULE_INFO,\n     crate::iter_not_returning_iterator::ITER_NOT_RETURNING_ITERATOR_INFO,\n     crate::large_const_arrays::LARGE_CONST_ARRAYS_INFO,\n     crate::large_enum_variant::LARGE_ENUM_VARIANT_INFO,"}, {"sha": "9d949a44c0206c8ab6edfdcc738cb65325b3736a", "filename": "clippy_lints/src/items_after_test_module.rs", "status": "added", "additions": 82, "deletions": 0, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/0354cee1372ac80028588f9a2f2772c868b0a21c/clippy_lints%2Fsrc%2Fitems_after_test_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0354cee1372ac80028588f9a2f2772c868b0a21c/clippy_lints%2Fsrc%2Fitems_after_test_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fitems_after_test_module.rs?ref=0354cee1372ac80028588f9a2f2772c868b0a21c", "patch": "@@ -0,0 +1,82 @@\n+use clippy_utils::{diagnostics::span_lint_and_help, is_in_cfg_test};\n+use rustc_hir::{HirId, ItemId, ItemKind, Mod};\n+use rustc_lint::{LateContext, LateLintPass, LintContext};\n+use rustc_middle::lint::in_external_macro;\n+use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_span::sym;\n+\n+declare_clippy_lint! {\n+    /// ### What it does\n+    /// Triggers if an item is declared after the testing module marked with `#[cfg(test)]`.\n+    /// ### Why is this bad?\n+    /// Having items declared after the testing module is confusing and may lead to bad test coverage.\n+    /// ### Example\n+    /// ```rust\n+    /// #[cfg(test)]\n+    /// mod tests {\n+    ///     // [...]\n+    /// }\n+    ///\n+    /// fn my_function() {\n+    ///     // [...]\n+    /// }\n+    /// ```\n+    /// Use instead:\n+    /// ```rust\n+    /// fn my_function() {\n+    ///     // [...]\n+    /// }\n+    ///\n+    /// #[cfg(test)]\n+    /// mod tests {\n+    ///     // [...]\n+    /// }\n+    /// ```\n+    #[clippy::version = \"1.70.0\"]\n+    pub ITEMS_AFTER_TEST_MODULE,\n+    style,\n+    \"An item was found after the testing module `tests`\"\n+}\n+\n+declare_lint_pass!(ItemsAfterTestModule => [ITEMS_AFTER_TEST_MODULE]);\n+\n+impl LateLintPass<'_> for ItemsAfterTestModule {\n+    fn check_mod(&mut self, cx: &LateContext<'_>, _: &Mod<'_>, _: HirId) {\n+        let mut was_test_mod_visited = false;\n+        let mut test_mod_hash: Option<u128> = None;\n+\n+        let hir = cx.tcx.hir();\n+        let items = hir.items().collect::<Vec<ItemId>>();\n+\n+        for itid in &items {\n+            let item = hir.item(*itid);\n+\n+            if_chain! {\n+            if was_test_mod_visited;\n+            if cx.sess().source_map().lookup_char_pos(item.span.lo()).file.name_hash\n+            == test_mod_hash.unwrap(); // Will never fail\n+            if !matches!(item.kind, ItemKind::Mod(_) | ItemKind::Macro(_, _));\n+            if !is_in_cfg_test(cx.tcx, itid.hir_id()); // The item isn't in the testing module itself\n+\n+            if !in_external_macro(cx.sess(), item.span);\n+            then {\n+                span_lint_and_help(cx, ITEMS_AFTER_TEST_MODULE, item.span, \"an item was found after the testing module\", None, \"move the item to before the testing module was defined\");\n+            }};\n+\n+            if matches!(item.kind, ItemKind::Mod(_)) {\n+                for attr in cx.tcx.get_attrs(item.owner_id.to_def_id(), sym::cfg) {\n+                    if_chain! {\n+                                if attr.has_name(sym::cfg);\n+                                if let Some(mitems) = attr.meta_item_list();\n+                                if let [mitem] = &*mitems;\n+                                if mitem.has_name(sym::test);\n+                                then {\n+                                    was_test_mod_visited = true;\n+                    test_mod_hash = Some(cx.sess().source_map().lookup_char_pos(item.span.lo()).file.name_hash);\n+                                }\n+                            }\n+                }\n+            }\n+        }\n+    }\n+}"}, {"sha": "573ffe349ec23e227696c3ed42745789fdf46785", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0354cee1372ac80028588f9a2f2772c868b0a21c/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0354cee1372ac80028588f9a2f2772c868b0a21c/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=0354cee1372ac80028588f9a2f2772c868b0a21c", "patch": "@@ -158,6 +158,7 @@ mod int_plus_one;\n mod invalid_upcast_comparisons;\n mod invalid_utf8_in_unchecked;\n mod items_after_statements;\n+mod items_after_test_module;\n mod iter_not_returning_iterator;\n mod large_const_arrays;\n mod large_enum_variant;\n@@ -961,6 +962,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(tests_outside_test_module::TestsOutsideTestModule));\n     store.register_late_pass(|_| Box::new(manual_slice_size_calculation::ManualSliceSizeCalculation));\n     store.register_early_pass(|| Box::new(suspicious_doc_comments::SuspiciousDocComments));\n+    store.register_late_pass(|_| Box::new(items_after_test_module::ItemsAfterTestModule));\n     // add lints here, do not remove this comment, it's used in `new_lint`\n }\n "}, {"sha": "735c06e51ffcdf0adb4b59287f525c34ef04f6e7", "filename": "tests/ui/items_after_test_module.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/0354cee1372ac80028588f9a2f2772c868b0a21c/tests%2Fui%2Fitems_after_test_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0354cee1372ac80028588f9a2f2772c868b0a21c/tests%2Fui%2Fitems_after_test_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitems_after_test_module.rs?ref=0354cee1372ac80028588f9a2f2772c868b0a21c", "patch": "@@ -0,0 +1,24 @@\n+// compile-flags: --test\n+#![allow(unused)]\n+#![warn(clippy::items_after_test_module)]\n+\n+fn main() {}\n+\n+fn should_not_lint() {}\n+\n+#[allow(dead_code)]\n+#[allow(unused)] // Some attributes to check that span replacement is good enough\n+#[allow(clippy::allow_attributes)]\n+#[cfg(test)]\n+mod tests {\n+    #[test]\n+    fn hi() {}\n+}\n+\n+fn should_lint() {}\n+\n+const SHOULD_ALSO_LINT: usize = 1;\n+\n+macro_rules! should_not_lint {\n+    () => {};\n+}"}, {"sha": "53ca4746476f410c2fa11f917b698a758de2cbd3", "filename": "tests/ui/items_after_test_module.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0354cee1372ac80028588f9a2f2772c868b0a21c/tests%2Fui%2Fitems_after_test_module.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/0354cee1372ac80028588f9a2f2772c868b0a21c/tests%2Fui%2Fitems_after_test_module.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fitems_after_test_module.stderr?ref=0354cee1372ac80028588f9a2f2772c868b0a21c", "patch": "@@ -0,0 +1,19 @@\n+error: an item was found after the testing module\n+  --> $DIR/items_after_test_module.rs:18:1\n+   |\n+LL | fn should_lint() {}\n+   | ^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: move the item to before the testing module was defined\n+   = note: `-D clippy::items-after-test-module` implied by `-D warnings`\n+\n+error: an item was found after the testing module\n+  --> $DIR/items_after_test_module.rs:20:1\n+   |\n+LL | const SHOULD_ALSO_LINT: usize = 1;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: move the item to before the testing module was defined\n+\n+error: aborting due to 2 previous errors\n+"}]}