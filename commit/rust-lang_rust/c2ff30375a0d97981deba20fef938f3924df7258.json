{"sha": "c2ff30375a0d97981deba20fef938f3924df7258", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZmYzMDM3NWEwZDk3OTgxZGViYTIwZmVmOTM4ZjM5MjRkZjcyNTg=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-03-16T07:57:17Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-03-16T07:57:17Z"}, "message": "Don't panic if traits not found", "tree": {"sha": "72f03de6dff0cc00168f76671ba860ef837ba1a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72f03de6dff0cc00168f76671ba860ef837ba1a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2ff30375a0d97981deba20fef938f3924df7258", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2ff30375a0d97981deba20fef938f3924df7258", "html_url": "https://github.com/rust-lang/rust/commit/c2ff30375a0d97981deba20fef938f3924df7258", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2ff30375a0d97981deba20fef938f3924df7258/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bed96fb3daa107c573f206a1daa18ac3b383f76f", "url": "https://api.github.com/repos/rust-lang/rust/commits/bed96fb3daa107c573f206a1daa18ac3b383f76f", "html_url": "https://github.com/rust-lang/rust/commit/bed96fb3daa107c573f206a1daa18ac3b383f76f"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "c20043dd991c60048b2c37b7406d523d54ff3252", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c2ff30375a0d97981deba20fef938f3924df7258/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2ff30375a0d97981deba20fef938f3924df7258/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=c2ff30375a0d97981deba20fef938f3924df7258", "patch": "@@ -41,6 +41,10 @@ impl LintPass for NeedlessPassByValue {\n     }\n }\n \n+macro_rules! need {\n+    ($e: expr) => { if let Some(x) = $e { x } else { return; } };\n+}\n+\n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n     fn check_fn(\n         &mut self,\n@@ -60,9 +64,9 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessPassByValue {\n         }\n \n         // Allows these to be passed by value.\n-        let fn_trait = cx.tcx.lang_items.fn_trait().expect(\"failed to find `Fn` trait\");\n-        let asref_trait = get_trait_def_id(cx, &paths::ASREF_TRAIT).expect(\"failed to find `AsRef` trait\");\n-        let borrow_trait = get_trait_def_id(cx, &paths::BORROW_TRAIT).expect(\"failed to find `Borrow` trait\");\n+        let fn_trait = need!(cx.tcx.lang_items.fn_trait());\n+        let asref_trait = need!(get_trait_def_id(cx, &paths::ASREF_TRAIT));\n+        let borrow_trait = need!(get_trait_def_id(cx, &paths::BORROW_TRAIT));\n \n         let preds: Vec<ty::Predicate> = {\n             let parameter_env = ty::ParameterEnvironment::for_item(cx.tcx, node_id);"}]}