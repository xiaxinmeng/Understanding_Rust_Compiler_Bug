{"sha": "451ec03c2df60c26f888cd9762b6f416415a38fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MWVjMDNjMmRmNjBjMjZmODg4Y2Q5NzYyYjZmNDE2NDE1YTM4ZmI=", "commit": {"author": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-29T12:01:24Z"}, "committer": {"name": "Marijn Haverbeke", "email": "marijnh@gmail.com", "date": "2011-07-29T12:03:52Z"}, "message": "Clean up old FIXME regarding or-patterns", "tree": {"sha": "aab3df5117737f566db91392ba17b12cf343420f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aab3df5117737f566db91392ba17b12cf343420f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/451ec03c2df60c26f888cd9762b6f416415a38fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/451ec03c2df60c26f888cd9762b6f416415a38fb", "html_url": "https://github.com/rust-lang/rust/commit/451ec03c2df60c26f888cd9762b6f416415a38fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/451ec03c2df60c26f888cd9762b6f416415a38fb/comments", "author": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marijnh", "id": 144427, "node_id": "MDQ6VXNlcjE0NDQyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/144427?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marijnh", "html_url": "https://github.com/marijnh", "followers_url": "https://api.github.com/users/marijnh/followers", "following_url": "https://api.github.com/users/marijnh/following{/other_user}", "gists_url": "https://api.github.com/users/marijnh/gists{/gist_id}", "starred_url": "https://api.github.com/users/marijnh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marijnh/subscriptions", "organizations_url": "https://api.github.com/users/marijnh/orgs", "repos_url": "https://api.github.com/users/marijnh/repos", "events_url": "https://api.github.com/users/marijnh/events{/privacy}", "received_events_url": "https://api.github.com/users/marijnh/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b1d2a00b4a8846900b2456a4bda7952af26b8625", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1d2a00b4a8846900b2456a4bda7952af26b8625", "html_url": "https://github.com/rust-lang/rust/commit/b1d2a00b4a8846900b2456a4bda7952af26b8625"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "bc473fd441e63659a264bf002752143fee991d86", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 2, "deletions": 10, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/451ec03c2df60c26f888cd9762b6f416415a38fb/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/451ec03c2df60c26f888cd9762b6f416415a38fb/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=451ec03c2df60c26f888cd9762b6f416415a38fb", "patch": "@@ -1684,21 +1684,15 @@ tag scalar_type { nil_type; signed_int; unsigned_int; floating_point; }\n \n fn compare_scalar_types(cx: @block_ctxt, lhs: ValueRef, rhs: ValueRef,\n                         t: &ty::t, llop: ValueRef) -> result {\n-    // FIXME: this could be a lot shorter if we could combine multiple cases\n-    // of alt expressions (issue #449).\n-\n     let f = bind compare_scalar_values(cx, lhs, rhs, _, llop);\n \n-\n     alt ty::struct(bcx_tcx(cx), t) {\n       ty::ty_nil. { ret f(nil_type); }\n-      ty::ty_bool. { ret f(unsigned_int); }\n+      ty::ty_bool. | ty::ty_uint. | ty::ty_ptr(_) |\n+      ty::ty_char. { ret f(unsigned_int); }\n       ty::ty_int. { ret f(signed_int); }\n       ty::ty_float. { ret f(floating_point); }\n-      ty::ty_uint. { ret f(unsigned_int); }\n       ty::ty_machine(_) {\n-\n-\n         if ty::type_is_fp(bcx_tcx(cx), t) {\n             // Floating point machine types\n             ret f(floating_point);\n@@ -1710,7 +1704,6 @@ fn compare_scalar_types(cx: @block_ctxt, lhs: ValueRef, rhs: ValueRef,\n             ret f(unsigned_int);\n         }\n       }\n-      ty::ty_char. { ret f(unsigned_int); }\n       ty::ty_type. {\n         trans_fail(cx, none[span], \"attempt to compare values of type type\");\n \n@@ -1724,7 +1717,6 @@ fn compare_scalar_types(cx: @block_ctxt, lhs: ValueRef, rhs: ValueRef,\n                    \"attempt to compare values of type native\");\n         ret rslt(new_sub_block_ctxt(cx, \"after_fail_dummy\"), C_bool(false));\n       }\n-      ty::ty_ptr(_) { ret f(unsigned_int); }\n       _ {\n         // Should never get here, because t is scalar.\n         bcx_ccx(cx).sess.bug(\"non-scalar type passed to \\"}]}