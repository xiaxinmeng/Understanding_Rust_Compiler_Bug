{"sha": "2dbd82d29667480600846ec62bb0782056330c0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkYmQ4MmQyOTY2NzQ4MDYwMDg0NmVjNjJiYjA3ODIwNTYzMzBjMGU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T14:49:40Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T14:49:40Z"}, "message": "inline the `call` method into `interpret_start_points`", "tree": {"sha": "1fdf3ee8e4253247f58787da7344caf71216244b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1fdf3ee8e4253247f58787da7344caf71216244b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2dbd82d29667480600846ec62bb0782056330c0e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWYIEAAoJEFbW7qD8Z6xGTOsQAIG0iNiozz1UKq5h8RANnIyw\nlirspzV/tcWHGDpVXIplvNIzedzPOaI3ge9mj/LdkzxQokSX35B18bGpSMOJaBmN\nrmECwCrXkNT7RqUXRCDq0c3EZBrJ7Us9jE/zptiuYD6ifoor+rJcG8tAlbmEtDvC\nJB4aXMl7pvAx3+nRHYp+04Ez+l5fbhO+qu9h0hvWsuFU1+AqKCvnUyBL7aEJmyBD\ntaBXTVxbipGChtA4hrx0clKTfkCiLGAAcBZXoyj7TG482Utq9Mw++XKPF1T9l0dO\nndFqzziJrWiHkuNlkTre88B7AR2740TsnbDEFmbpvHJXZHTtVQyz0VtftefDYtg+\nYvK8mogqK9PN3wJUJcbERzJoxMbR6Hv5ipTB/zYW1HOSEJ9XRCzFEGdHJwsqO1Rp\nO39ksLvWA368JAYHiKED5YZMNoIIALVdj1Q4H9xMKQAEHoQ0vz1BAx2joUdzDT+Z\ngd4UrBnFw01Sl3wyQXbg5ypqNenZTm9sp2uy8y3FQ330Hk8yAwC4Uwlk+3Cmy+Wm\nKd0Zz9jGqPLee7p9La5ZP8AQ9f3RHeEFDflnwu9lnFg+U1nl9aCJBVOLZa2p/g9k\neooOV9qdNsSYQWdO4jscmtUQ5xtyiHa/R2sPAfLAo7huEbaU/JOrEu2butTo31rq\na1v8Z6zRzMsD2w5MRd81\n=ihvm\n-----END PGP SIGNATURE-----", "payload": "tree 1fdf3ee8e4253247f58787da7344caf71216244b\nparent fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465483780 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465483780 +0200\n\ninline the `call` method into `interpret_start_points`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2dbd82d29667480600846ec62bb0782056330c0e", "html_url": "https://github.com/rust-lang/rust/commit/2dbd82d29667480600846ec62bb0782056330c0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2dbd82d29667480600846ec62bb0782056330c0e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef", "html_url": "https://github.com/rust-lang/rust/commit/fc935c10f86ec7414f6b7c9466c6a3b8cc4625ef"}], "stats": {"total": 28, "additions": 11, "deletions": 17}, "files": [{"sha": "e70fe5e93f334f332e0f2db91292d6ea3840e12e", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 11, "deletions": 17, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/2dbd82d29667480600846ec62bb0782056330c0e/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2dbd82d29667480600846ec62bb0782056330c0e/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=2dbd82d29667480600846ec62bb0782056330c0e", "patch": "@@ -135,18 +135,6 @@ impl<'a, 'tcx> GlobalEvalContext<'a, 'tcx> {\n         }\n     }\n \n-    fn call(&mut self, mir: &'a mir::Mir<'tcx>, def_id: DefId) -> EvalResult<Option<Pointer>> {\n-        let substs = self.tcx.mk_substs(subst::Substs::empty());\n-        let return_ptr = self.alloc_ret_ptr(mir.return_ty, substs);\n-\n-        self.push_stack_frame(def_id, mir.span, CachedMir::Ref(mir), substs, None);\n-\n-        self.frame_mut().return_ptr = return_ptr;\n-\n-        self.run()?;\n-        Ok(return_ptr)\n-    }\n-\n     fn alloc_ret_ptr(&mut self, output_ty: ty::FnOutput<'tcx>, substs: &'tcx Substs<'tcx>) -> Option<Pointer> {\n         match output_ty {\n             ty::FnConverging(ty) => {\n@@ -1423,12 +1411,18 @@ pub fn interpret_start_points<'a, 'tcx>(\n                 debug!(\"Interpreting: {}\", item.name);\n \n                 let mut gecx = GlobalEvalContext::new(tcx, mir_map);\n-                match gecx.call(mir, tcx.map.local_def_id(id)) {\n-                    Ok(Some(return_ptr)) => if log_enabled!(::log::LogLevel::Debug) {\n-                        gecx.memory.dump(return_ptr.alloc_id);\n+                let substs = tcx.mk_substs(subst::Substs::empty());\n+                let return_ptr = gecx.alloc_ret_ptr(mir.return_ty, substs);\n+\n+                gecx.push_stack_frame(tcx.map.local_def_id(id), mir.span, CachedMir::Ref(mir), substs, return_ptr);\n+\n+                match (gecx.run(), return_ptr) {\n+                    (Ok(()), Some(ptr)) => if log_enabled!(::log::LogLevel::Debug) {\n+                        gecx.memory.dump(ptr.alloc_id);\n                     },\n-                    Ok(None) => warn!(\"diverging function returned\"),\n-                    Err(e) => gecx.report(e),\n+                    (Ok(()), None) => warn!(\"diverging function returned\"),\n+                    // FIXME: diverging functions can end up here in some future miri\n+                    (Err(e), _) => gecx.report(e),\n                 }\n             }\n         }"}]}