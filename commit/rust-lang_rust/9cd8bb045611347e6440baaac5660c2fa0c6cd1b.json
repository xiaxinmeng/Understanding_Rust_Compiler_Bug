{"sha": "9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "node_id": "C_kwDOAAsO6NoAKDljZDhiYjA0NTYxMTM0N2U2NDQwYmFhYWM1NjYwYzJmYTBjNmNkMWI", "commit": {"author": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-03-15T15:32:40Z"}, "committer": {"name": "b-naber", "email": "bn263@gmx.de", "date": "2022-03-23T10:34:33Z"}, "message": "use ParamConst in ExprKind::ConstParam", "tree": {"sha": "a379d52f11f93ca1c03ed94d5b06ec3d53b9e35a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a379d52f11f93ca1c03ed94d5b06ec3d53b9e35a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "html_url": "https://github.com/rust-lang/rust/commit/9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/comments", "author": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "committer": {"login": "b-naber", "id": 71934879, "node_id": "MDQ6VXNlcjcxOTM0ODc5", "avatar_url": "https://avatars.githubusercontent.com/u/71934879?v=4", "gravatar_id": "", "url": "https://api.github.com/users/b-naber", "html_url": "https://github.com/b-naber", "followers_url": "https://api.github.com/users/b-naber/followers", "following_url": "https://api.github.com/users/b-naber/following{/other_user}", "gists_url": "https://api.github.com/users/b-naber/gists{/gist_id}", "starred_url": "https://api.github.com/users/b-naber/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/b-naber/subscriptions", "organizations_url": "https://api.github.com/users/b-naber/orgs", "repos_url": "https://api.github.com/users/b-naber/repos", "events_url": "https://api.github.com/users/b-naber/events{/privacy}", "received_events_url": "https://api.github.com/users/b-naber/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2496b3cf4a370874bcf4272828730a27f650bc3", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2496b3cf4a370874bcf4272828730a27f650bc3", "html_url": "https://github.com/rust-lang/rust/commit/e2496b3cf4a370874bcf4272828730a27f650bc3"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "ef72e5bcf7891d6b73fb99cb2854f49ecbbe5611", "filename": "compiler/rustc_middle/src/thir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_middle%2Fsrc%2Fthir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_middle%2Fsrc%2Fthir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fthir.rs?ref=9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "patch": "@@ -424,7 +424,7 @@ pub enum ExprKind<'tcx> {\n         user_ty: Option<Canonical<'tcx, UserType<'tcx>>>,\n     },\n     ConstParam {\n-        literal: ty::Const<'tcx>,\n+        param: ty::ParamConst,\n         def_id: DefId,\n     },\n     // FIXME improve docs for `StaticRef` by distinguishing it from `NamedConst`"}, {"sha": "bcf316975b656180d88b6a87b00191f639a14ce0", "filename": "compiler/rustc_middle/src/thir/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_middle%2Fsrc%2Fthir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_middle%2Fsrc%2Fthir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fthir%2Fvisit.rs?ref=9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "patch": "@@ -121,7 +121,7 @@ pub fn walk_expr<'a, 'tcx: 'a, V: Visitor<'a, 'tcx>>(visitor: &mut V, expr: &Exp\n         Literal { lit: _, neg: _ } => {}\n         ScalarLiteral { lit: _, user_ty: _ } => {}\n         NamedConst { def_id: _, substs: _, user_ty: _ } => {}\n-        ConstParam { literal: _, def_id: _ } => {}\n+        ConstParam { param: _, def_id: _ } => {}\n         StaticRef { alloc_id: _, ty: _, def_id: _ } => {}\n         InlineAsm { ref operands, template: _, options: _, line_spans: _ } => {\n             for op in &**operands {"}, {"sha": "2865aceb72787e9a0cb8254de1e63abab8887d2e", "filename": "compiler/rustc_mir_build/src/build/expr/as_constant.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fexpr%2Fas_constant.rs?ref=9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "patch": "@@ -70,8 +70,10 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n \n                 Constant { user_ty, span, literal }\n             }\n-            ExprKind::ConstParam { literal, def_id: _ } => {\n-                let literal = ConstantKind::Ty(literal);\n+            ExprKind::ConstParam { param, def_id: _ } => {\n+                let const_param =\n+                    tcx.mk_const(ty::ConstS { val: ty::ConstKind::Param(param), ty: expr.ty });\n+                let literal = ConstantKind::Ty(const_param);\n \n                 Constant { user_ty: None, span, literal }\n             }"}, {"sha": "4023e5d4f1385c4a65dcb68f1ccab275c94450e5", "filename": "compiler/rustc_mir_build/src/thir/cx/expr.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fcx%2Fexpr.rs?ref=9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "patch": "@@ -869,15 +869,9 @@ impl<'tcx> Cx<'tcx> {\n                 let generics = self.tcx.generics_of(item_def_id);\n                 let index = generics.param_def_id_to_index[&def_id];\n                 let name = self.tcx.hir().name(hir_id);\n-                let val = ty::ConstKind::Param(ty::ParamConst::new(index, name));\n-\n-                ExprKind::ConstParam {\n-                    literal: self.tcx.mk_const(ty::ConstS {\n-                        val,\n-                        ty: self.typeck_results().node_type(expr.hir_id),\n-                    }),\n-                    def_id,\n-                }\n+                let param = ty::ParamConst::new(index, name);\n+\n+                ExprKind::ConstParam { param, def_id }\n             }\n \n             Res::Def(DefKind::Const, def_id) | Res::Def(DefKind::AssocConst, def_id) => {"}, {"sha": "d6dd018d46f127aa485bdee4d638d68742a5e093", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9cd8bb045611347e6440baaac5660c2fa0c6cd1b/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=9cd8bb045611347e6440baaac5660c2fa0c6cd1b", "patch": "@@ -459,8 +459,12 @@ impl<'a, 'tcx> AbstractConstBuilder<'a, 'tcx> {\n                 self.nodes.push(Node::Leaf(constant))\n             }\n \n-            ExprKind::ConstParam {literal, ..} => {\n-                self.nodes.push(Node::Leaf(*literal))\n+            ExprKind::ConstParam {param, ..} => {\n+                let const_param = self.tcx.mk_const(ty::ConstS {\n+                        val: ty::ConstKind::Param(*param),\n+                        ty: node.ty,\n+                    });\n+                self.nodes.push(Node::Leaf(const_param))\n             }\n \n             ExprKind::Call { fun, args, .. } => {"}]}