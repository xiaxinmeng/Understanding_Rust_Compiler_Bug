{"sha": "ccb049387afae7772ca16c1ff876d38a9d0c53c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYjA0OTM4N2FmYWU3NzcyY2ExNmMxZmY4NzZkMzhhOWQwYzUzYzk=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-08-19T10:05:32Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2020-08-19T15:48:20Z"}, "message": "Fix bad printing of const-eval queries", "tree": {"sha": "bbff45a1fd168c583fbcbd13fff4e3dcb8a64e98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bbff45a1fd168c583fbcbd13fff4e3dcb8a64e98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ccb049387afae7772ca16c1ff876d38a9d0c53c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ccb049387afae7772ca16c1ff876d38a9d0c53c9", "html_url": "https://github.com/rust-lang/rust/commit/ccb049387afae7772ca16c1ff876d38a9d0c53c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ccb049387afae7772ca16c1ff876d38a9d0c53c9/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5b04bbfcbb79ed7325ea2b580458a80d95da6bbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b04bbfcbb79ed7325ea2b580458a80d95da6bbb", "html_url": "https://github.com/rust-lang/rust/commit/5b04bbfcbb79ed7325ea2b580458a80d95da6bbb"}], "stats": {"total": 55, "additions": 52, "deletions": 3}, "files": [{"sha": "0dc3d6e344a7effdf4117017c9dc25ad96ebd051", "filename": "src/librustc_middle/mir/interpret/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Fmod.rs?ref=ccb049387afae7772ca16c1ff876d38a9d0c53c9", "patch": "@@ -143,6 +143,17 @@ pub struct GlobalId<'tcx> {\n     pub promoted: Option<mir::Promoted>,\n }\n \n+impl GlobalId<'tcx> {\n+    pub fn display(self, tcx: TyCtxt<'tcx>) -> String {\n+        let instance_name = tcx.def_path_str(self.instance.def.def_id());\n+        if let Some(promoted) = self.promoted {\n+            format!(\"{}::{:?}\", instance_name, promoted)\n+        } else {\n+            instance_name\n+        }\n+    }\n+}\n+\n /// Input argument for `tcx.lit_to_const`.\n #[derive(Copy, Clone, Debug, Eq, PartialEq, Hash, HashStable)]\n pub struct LitToConstInput<'tcx> {"}, {"sha": "f5029eb7404554638b1bd51f4c6f05a546875352", "filename": "src/librustc_middle/query/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Flibrustc_middle%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fquery%2Fmod.rs?ref=ccb049387afae7772ca16c1ff876d38a9d0c53c9", "patch": "@@ -679,7 +679,7 @@ rustc_queries! {\n             -> ConstEvalRawResult<'tcx> {\n             desc { |tcx|\n                 \"const-evaluating `{}`\",\n-                tcx.def_path_str(key.value.instance.def.def_id())\n+                key.value.display(tcx)\n             }\n         }\n \n@@ -695,7 +695,7 @@ rustc_queries! {\n             -> ConstEvalResult<'tcx> {\n             desc { |tcx|\n                 \"const-evaluating + checking `{}`\",\n-                tcx.def_path_str(key.value.instance.def.def_id())\n+                key.value.display(tcx)\n             }\n             cache_on_disk_if(_, opt_result) {\n                 // Only store results without errors"}, {"sha": "e6075f745776a5a6d663995af4ed8fbbc8ca9bbb", "filename": "src/test/ui/associated-const/defaults-cyclic-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Ftest%2Fui%2Fassociated-const%2Fdefaults-cyclic-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Ftest%2Fui%2Fassociated-const%2Fdefaults-cyclic-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fdefaults-cyclic-fail.stderr?ref=ccb049387afae7772ca16c1ff876d38a9d0c53c9", "patch": "@@ -32,7 +32,7 @@ note: ...which requires const-evaluating `Tr::B`...\n LL |     const B: u8 = Self::A;\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    = note: ...which again requires normalizing `<() as Tr>::A`, completing the cycle\n-note: cycle used when const-evaluating `main`\n+note: cycle used when const-evaluating `main::promoted[2]`\n   --> $DIR/defaults-cyclic-fail.rs:14:1\n    |\n LL | fn main() {"}, {"sha": "aae8233665aaa77e42e0852eb8de52cc596a863b", "filename": "src/test/ui/consts/const-eval/const-eval-query-stack.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.rs?ref=ccb049387afae7772ca16c1ff876d38a9d0c53c9", "patch": "@@ -0,0 +1,20 @@\n+// compile-flags: -Ztreat-err-as-bug\n+// build-fail\n+// failure-status: 101\n+// normalize-stderr-test \"\\nerror: internal compiler error.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note:.*unexpectedly panicked.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: we would appreciate a bug report.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: compiler flags.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"note: rustc.*running on.*\\n\\n\" -> \"\"\n+// normalize-stderr-test \"thread.*panicked.*\\n\" -> \"\"\n+// normalize-stderr-test \"stack backtrace:\\n\" -> \"\"\n+// normalize-stderr-test \"  \\d{1,}: .*\\n\" -> \"\"\n+// normalize-stderr-test \".*note: Some details.*\\n\" -> \"\"\n+\n+#![allow(unconditional_panic)]\n+\n+fn main() {\n+    let x: &'static i32 = &(1 / 0);\n+    //~^ ERROR reaching this expression at runtime will panic or abort [const_err]\n+    println!(\"x={}\", x);\n+}"}, {"sha": "44b3c56b39363f2f97429bb7cd6d8db9d3b9e11f", "filename": "src/test/ui/consts/const-eval/const-eval-query-stack.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ccb049387afae7772ca16c1ff876d38a9d0c53c9/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fconst-eval-query-stack.stderr?ref=ccb049387afae7772ca16c1ff876d38a9d0c53c9", "patch": "@@ -0,0 +1,18 @@\n+error: reaching this expression at runtime will panic or abort\n+  --> $DIR/const-eval-query-stack.rs:17:28\n+   |\n+LL |     let x: &'static i32 = &(1 / 0);\n+   |                           -^^^^^^^\n+   |                            |\n+   |                            dividing by zero\n+   |\n+   = note: `#[deny(const_err)]` on by default\n+\n+query stack during panic:\n+#0 [const_eval_raw] const-evaluating `main::promoted[1]`\n+#1 [const_eval_validated] const-evaluating + checking `main::promoted[1]`\n+#2 [const_eval_validated] const-evaluating + checking `main::promoted[1]`\n+#3 [normalize_generic_arg_after_erasing_regions] normalizing `main::promoted[1]`\n+#4 [optimized_mir] optimizing MIR for `main`\n+#5 [collect_and_partition_mono_items] collect_and_partition_mono_items\n+end of query stack"}]}