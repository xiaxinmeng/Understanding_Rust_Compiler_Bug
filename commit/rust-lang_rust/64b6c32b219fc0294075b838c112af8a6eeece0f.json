{"sha": "64b6c32b219fc0294075b838c112af8a6eeece0f", "node_id": "C_kwDOAAsO6NoAKDY0YjZjMzJiMjE5ZmMwMjk0MDc1YjgzOGMxMTJhZjhhNmVlZWNlMGY", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-04-19T19:25:15Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2022-06-10T18:16:37Z"}, "message": "Assert def_ident_span presence.", "tree": {"sha": "334319cbccf690eb113a4485ce0cc63e1a55eefe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/334319cbccf690eb113a4485ce0cc63e1a55eefe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64b6c32b219fc0294075b838c112af8a6eeece0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64b6c32b219fc0294075b838c112af8a6eeece0f", "html_url": "https://github.com/rust-lang/rust/commit/64b6c32b219fc0294075b838c112af8a6eeece0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64b6c32b219fc0294075b838c112af8a6eeece0f/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06af25e4f188946d9aba1c5f52ef7eec8fb29a45", "url": "https://api.github.com/repos/rust-lang/rust/commits/06af25e4f188946d9aba1c5f52ef7eec8fb29a45", "html_url": "https://github.com/rust-lang/rust/commit/06af25e4f188946d9aba1c5f52ef7eec8fb29a45"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "36ce117fa2bbf6a8f7e929c281f32f34198c452c", "filename": "compiler/rustc_metadata/src/rmeta/decoder.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/64b6c32b219fc0294075b838c112af8a6eeece0f/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64b6c32b219fc0294075b838c112af8a6eeece0f/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder.rs?ref=64b6c32b219fc0294075b838c112af8a6eeece0f", "patch": "@@ -774,7 +774,8 @@ impl<'a, 'tcx> CrateMetadataRef<'a> {\n \n     fn opt_item_ident(self, item_index: DefIndex, sess: &Session) -> Option<Ident> {\n         let name = self.opt_item_name(item_index)?;\n-        let span = self.root.tables.def_ident_span.get(self, item_index)?.decode((self, sess));\n+        let span =\n+            self.root.tables.def_ident_span.get(self, item_index).unwrap().decode((self, sess));\n         Some(Ident::new(name, span))\n     }\n "}]}