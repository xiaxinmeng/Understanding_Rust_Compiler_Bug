{"sha": "e65f6714b02b01b7a9748b894a9bfaac2c459753", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2NWY2NzE0YjAyYjAxYjdhOTc0OGI4OTRhOWJmYWFjMmM0NTk3NTM=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-17T15:49:10Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-09-17T15:49:10Z"}, "message": "rollup merge of #17279 : jakub-/for-loop-unused-variable", "tree": {"sha": "a11bfd9b8ee35f00c97b45e2330a19a46567ab67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a11bfd9b8ee35f00c97b45e2330a19a46567ab67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e65f6714b02b01b7a9748b894a9bfaac2c459753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e65f6714b02b01b7a9748b894a9bfaac2c459753", "html_url": "https://github.com/rust-lang/rust/commit/e65f6714b02b01b7a9748b894a9bfaac2c459753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e65f6714b02b01b7a9748b894a9bfaac2c459753/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b27947ac4deafe2dde04353802f889de0dc364ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/b27947ac4deafe2dde04353802f889de0dc364ba", "html_url": "https://github.com/rust-lang/rust/commit/b27947ac4deafe2dde04353802f889de0dc364ba"}, {"sha": "c2a25a4a833221f4ddf68f46ef409abd2b20bf23", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2a25a4a833221f4ddf68f46ef409abd2b20bf23", "html_url": "https://github.com/rust-lang/rust/commit/c2a25a4a833221f4ddf68f46ef409abd2b20bf23"}], "stats": {"total": 44, "additions": 36, "deletions": 8}, "files": [{"sha": "fee6c77a79907a387a3bd9d6fde59f2c2a39696a", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/e65f6714b02b01b7a9748b894a9bfaac2c459753/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65f6714b02b01b7a9748b894a9bfaac2c459753/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=e65f6714b02b01b7a9748b894a9bfaac2c459753", "patch": "@@ -131,8 +131,8 @@ enum LoopKind<'a> {\n     LoopLoop,\n     /// A `while` loop, with the given expression as condition.\n     WhileLoop(&'a Expr),\n-    /// A `for` loop.\n-    ForLoop,\n+    /// A `for` loop, with the given pattern to bind.\n+    ForLoop(&'a Pat),\n }\n \n #[deriving(PartialEq)]\n@@ -1024,8 +1024,8 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n             self.propagate_through_loop(expr, WhileLoop(&**cond), &**blk, succ)\n           }\n \n-          ExprForLoop(_, ref head, ref blk, _) => {\n-            let ln = self.propagate_through_loop(expr, ForLoop, &**blk, succ);\n+          ExprForLoop(ref pat, ref head, ref blk, _) => {\n+            let ln = self.propagate_through_loop(expr, ForLoop(&**pat), &**blk, succ);\n             self.propagate_through_expr(&**head, ln)\n           }\n \n@@ -1355,7 +1355,8 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                expr.id, block_to_string(body));\n \n         let cond_ln = match kind {\n-            LoopLoop | ForLoop => ln,\n+            LoopLoop => ln,\n+            ForLoop(ref pat) => self.define_bindings_in_pat(*pat, ln),\n             WhileLoop(ref cond) => self.propagate_through_expr(&**cond, ln),\n         };\n         let body_ln = self.with_loop_nodes(expr.id, succ, ln, |this| {\n@@ -1367,7 +1368,10 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n             first_merge = false;\n \n             let new_cond_ln = match kind {\n-                LoopLoop | ForLoop => ln,\n+                LoopLoop => ln,\n+                ForLoop(ref pat) => {\n+                    self.define_bindings_in_pat(*pat, ln)\n+                }\n                 WhileLoop(ref cond) => {\n                     self.propagate_through_expr(&**cond, ln)\n                 }\n@@ -1453,6 +1457,12 @@ fn check_expr(this: &mut Liveness, expr: &Expr) {\n         visit::walk_expr(this, expr);\n       }\n \n+      ExprForLoop(ref pat, _, _, _) => {\n+        this.pat_bindings(&**pat, |this, ln, var, sp, id| {\n+            this.warn_about_unused(sp, id, ln, var);\n+        });\n+      }\n+\n       // no correctness conditions related to liveness\n       ExprCall(..) | ExprMethodCall(..) | ExprIf(..) | ExprMatch(..) |\n       ExprWhile(..) | ExprLoop(..) | ExprIndex(..) | ExprField(..) |\n@@ -1461,7 +1471,7 @@ fn check_expr(this: &mut Liveness, expr: &Expr) {\n       ExprAgain(..) | ExprLit(_) | ExprBlock(..) |\n       ExprMac(..) | ExprAddrOf(..) | ExprStruct(..) | ExprRepeat(..) |\n       ExprParen(..) | ExprFnBlock(..) | ExprProc(..) | ExprUnboxedFn(..) |\n-      ExprPath(..) | ExprBox(..) | ExprForLoop(..) => {\n+      ExprPath(..) | ExprBox(..) => {\n         visit::walk_expr(this, expr);\n       }\n     }"}, {"sha": "51023d03c23b03c39b23d0cb6dd64b6c9c916f9f", "filename": "src/librustc/middle/trans/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e65f6714b02b01b7a9748b894a9bfaac2c459753/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65f6714b02b01b7a9748b894a9bfaac2c459753/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2F_match.rs?ref=e65f6714b02b01b7a9748b894a9bfaac2c459753", "patch": "@@ -557,7 +557,7 @@ fn get_branches<'a, 'p, 'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n     let tcx = bcx.tcx();\n \n     let mut found: Vec<Opt> = vec![];\n-    for (i, br) in m.iter().enumerate() {\n+    for br in m.iter() {\n         let cur = *br.pats.get(col);\n         let opt = match cur.node {\n             ast::PatLit(ref l) => ConstantValue(ConstantExpr(&**l)),"}, {"sha": "41a30e23b2221776ea74fad3f8f753a2e15c7c7a", "filename": "src/test/compile-fail/liveness-unused.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e65f6714b02b01b7a9748b894a9bfaac2c459753/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e65f6714b02b01b7a9748b894a9bfaac2c459753/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-unused.rs?ref=e65f6714b02b01b7a9748b894a9bfaac2c459753", "patch": "@@ -82,5 +82,23 @@ fn f4b() -> int {\n     }\n }\n \n+fn f5a() {\n+    for x in range(1i, 10) { }\n+    //~^ ERROR unused variable: `x`\n+}\n+\n+fn f5b() {\n+    for (x, _) in [1i, 2, 3].iter().enumerate() { }\n+    //~^ ERROR unused variable: `x`\n+}\n+\n+fn f5c() {\n+    for (_, x) in [1i, 2, 3].iter().enumerate() {\n+    //~^ ERROR unused variable: `x`\n+        continue;\n+        std::os::set_exit_status(*x); //~ WARNING unreachable statement\n+    }\n+}\n+\n fn main() {\n }"}]}