{"sha": "cd4e13f10ac61805de41e73c7483f56624e8f5d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNGUxM2YxMGFjNjE4MDVkZTQxZTczYzc0ODNmNTY2MjRlOGY1ZDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T09:06:26Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T09:06:26Z"}, "message": "Document events a bit", "tree": {"sha": "14c5716c9d97781275df68bae362d32796d5d0a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14c5716c9d97781275df68bae362d32796d5d0a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd4e13f10ac61805de41e73c7483f56624e8f5d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd4e13f10ac61805de41e73c7483f56624e8f5d2", "html_url": "https://github.com/rust-lang/rust/commit/cd4e13f10ac61805de41e73c7483f56624e8f5d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd4e13f10ac61805de41e73c7483f56624e8f5d2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52104f7d250470bc35c640904ee2bc32633dbd7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/52104f7d250470bc35c640904ee2bc32633dbd7e", "html_url": "https://github.com/rust-lang/rust/commit/52104f7d250470bc35c640904ee2bc32633dbd7e"}], "stats": {"total": 48, "additions": 48, "deletions": 0}, "files": [{"sha": "1bb943b5de7980a37723c768bb68cf261bfd62ae", "filename": "src/parser/event_parser/mod.rs", "status": "modified", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/cd4e13f10ac61805de41e73c7483f56624e8f5d2/src%2Fparser%2Fevent_parser%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd4e13f10ac61805de41e73c7483f56624e8f5d2/src%2Fparser%2Fevent_parser%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fmod.rs?ref=cd4e13f10ac61805de41e73c7483f56624e8f5d2", "patch": "@@ -4,17 +4,65 @@ use {SyntaxKind, Token};\n mod parser;\n mod grammar;\n \n+\n+/// `Parser` produces a flat list of `Event`s.\n+/// They are converted to a tree-structure in\n+/// a separate pass, via `TreeBuilder`.\n #[derive(Debug)]\n pub(crate) enum Event {\n+    /// This event signifies the start of the node.\n+    /// It should be either abandoned (in which case the\n+    /// `kind` is `TOMBSTONE`, and the event is ignored),\n+    /// or completed via a `Finish` event.\n+    ///\n+    /// All tokens between a `Start` and a `Finish` would\n+    /// become the children of the respective node.\n+    ///\n+    /// For left-recursive syntactic constructs, the parser produces\n+    /// a child node before it sees a parent. `forward_parent`\n+    /// exists to allow to tweak parent-child relationships.\n+    ///\n+    /// Consider this path\n+    ///\n+    /// foo::bar\n+    ///\n+    /// The events for it would look like this:\n+    ///\n+    ///\n+    /// START(PATH) IDENT('foo') FINISH START(PATH) COLONCOLON IDENT('bar') FINISH\n+    ///       |                          /\\\n+    ///       |                          |\n+    ///       +------forward-parent------+\n+    ///\n+    /// And the tree would look like this\n+    ///\n+    ///    +--PATH---------+\n+    ///    |   |           |\n+    ///    |   |           |\n+    ///    |  '::'       'bar'\n+    ///    |\n+    ///   PATH\n+    ///    |\n+    ///   'foo'\n+    ///\n+    /// See also `CompleteMarker::precede`.\n     Start {\n         kind: SyntaxKind,\n         forward_parent: Option<u32>,\n     },\n+\n+    /// Complete the previous `Start` event\n     Finish,\n+\n+    /// Produce a single leaf-element.\n+    /// `n_raw_tokens` is used to glue complex contextual tokens.\n+    /// For example, lexer tokenizes `>>` as `>`, `>`, and\n+    /// `n_raw_tokens = 2` is used to produced a single `>>`.\n     Token {\n         kind: SyntaxKind,\n         n_raw_tokens: u8,\n     },\n+\n     Error {\n         message: String,\n     },"}]}