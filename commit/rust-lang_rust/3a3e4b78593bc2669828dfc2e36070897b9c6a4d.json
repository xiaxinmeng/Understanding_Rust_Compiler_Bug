{"sha": "3a3e4b78593bc2669828dfc2e36070897b9c6a4d", "node_id": "C_kwDOAAsO6NoAKDNhM2U0Yjc4NTkzYmMyNjY5ODI4ZGZjMmUzNjA3MDg5N2I5YzZhNGQ", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-01-15T19:51:35Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-01-15T19:51:35Z"}, "message": "Rustdoc: remove ListAttributesIter and use impl Iterator instead", "tree": {"sha": "a481fcef1475bfab9801d6f6829015fdfb191f09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a481fcef1475bfab9801d6f6829015fdfb191f09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a3e4b78593bc2669828dfc2e36070897b9c6a4d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEg8FrwI85f934CWFa28VT5UDC9hkFAmHjJccACgkQ28VT5UDC\n9hlXDQwAxDnstdxUskLLb3nGDfF/mX5gzoVWAjx6vcxLl8DxpcI9P/gzbJz3juUc\nLlwN9dOUyiCBVdROR1n4+x+hFMjxuwGsBSSw0L9lH00NlYLWo6GK3I5htnH7Fz2q\nMUTQ3EAPuHOsRpQndOCcsGF6scblC1k5s5Id+/H+14BMf7PUkBJvO6FGuIHR+qTH\n8X5T4EyDqxZrTr9CbK4sqRbDnez7ugOLZ9e963xjASoqS7Fw8un5WIqxlL201jMf\nWmgJEaKnBEE8sM51UjXCBohEknySFjdRFSuWr2onKygNmH/zsU1cSu5nMbAUX16o\nTESlDr4gikEXdiZOYEuCX/ImISnJhD0SOS5xHl49Oa1/AhWjtxYjGFVHqQ+2heuV\nMPV2T2FXQW1eb538q3Y1E5+Xu8lxFJ5lGZ8vGbXgb4kVgc+B/t3+907RUsOPlKGM\nco4UJb43U0dZPO+Yh/WgVM11opYTqoa0SlQBDZJRNUWqDUmbSZyEnr3pxnKTXMbT\n05rUmBCP\n=89P2\n-----END PGP SIGNATURE-----", "payload": "tree a481fcef1475bfab9801d6f6829015fdfb191f09\nparent ec4bcaac450279b029f3480b8b8f1b82ab36a5eb\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1642276295 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1642276295 +0100\n\nRustdoc: remove ListAttributesIter and use impl Iterator instead\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a3e4b78593bc2669828dfc2e36070897b9c6a4d", "html_url": "https://github.com/rust-lang/rust/commit/3a3e4b78593bc2669828dfc2e36070897b9c6a4d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a3e4b78593bc2669828dfc2e36070897b9c6a4d/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ec4bcaac450279b029f3480b8b8f1b82ab36a5eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ec4bcaac450279b029f3480b8b8f1b82ab36a5eb", "html_url": "https://github.com/rust-lang/rust/commit/ec4bcaac450279b029f3480b8b8f1b82ab36a5eb"}], "stats": {"total": 65, "additions": 19, "deletions": 46}, "files": [{"sha": "3614b57df9da582529e4ac35f1934d0462ea88ad", "filename": "src/librustdoc/clean/types.rs", "status": "modified", "additions": 17, "deletions": 46, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/3a3e4b78593bc2669828dfc2e36070897b9c6a4d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3e4b78593bc2669828dfc2e36070897b9c6a4d/src%2Flibrustdoc%2Fclean%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Ftypes.rs?ref=3a3e4b78593bc2669828dfc2e36070897b9c6a4d", "patch": "@@ -5,7 +5,7 @@ use std::lazy::SyncOnceCell as OnceCell;\n use std::path::PathBuf;\n use std::rc::Rc;\n use std::sync::Arc;\n-use std::{slice, vec};\n+use std::vec;\n \n use arrayvec::ArrayVec;\n \n@@ -733,43 +733,12 @@ crate struct Module {\n     crate span: Span,\n }\n \n-crate struct ListAttributesIter<'a> {\n-    attrs: slice::Iter<'a, ast::Attribute>,\n-    current_list: vec::IntoIter<ast::NestedMetaItem>,\n-    name: Symbol,\n-}\n-\n-impl<'a> Iterator for ListAttributesIter<'a> {\n-    type Item = ast::NestedMetaItem;\n-\n-    fn next(&mut self) -> Option<Self::Item> {\n-        if let Some(nested) = self.current_list.next() {\n-            return Some(nested);\n-        }\n-\n-        for attr in &mut self.attrs {\n-            if let Some(list) = attr.meta_item_list() {\n-                if attr.has_name(self.name) {\n-                    self.current_list = list.into_iter();\n-                    if let Some(nested) = self.current_list.next() {\n-                        return Some(nested);\n-                    }\n-                }\n-            }\n-        }\n-\n-        None\n-    }\n-\n-    fn size_hint(&self) -> (usize, Option<usize>) {\n-        let lower = self.current_list.len();\n-        (lower, None)\n-    }\n-}\n-\n crate trait AttributesExt {\n-    /// Finds an attribute as List and returns the list of attributes nested inside.\n-    fn lists(&self, name: Symbol) -> ListAttributesIter<'_>;\n+    type AttributeIterator<'a>: Iterator<Item = ast::NestedMetaItem>\n+    where\n+        Self: 'a;\n+\n+    fn lists<'a>(&'a self, name: Symbol) -> Self::AttributeIterator<'a>;\n \n     fn span(&self) -> Option<rustc_span::Span>;\n \n@@ -781,8 +750,13 @@ crate trait AttributesExt {\n }\n \n impl AttributesExt for [ast::Attribute] {\n-    fn lists(&self, name: Symbol) -> ListAttributesIter<'_> {\n-        ListAttributesIter { attrs: self.iter(), current_list: Vec::new().into_iter(), name }\n+    type AttributeIterator<'a> = impl Iterator<Item = ast::NestedMetaItem> + 'a;\n+\n+    fn lists<'a>(&'a self, name: Symbol) -> Self::AttributeIterator<'a> {\n+        self.iter()\n+            .filter(move |attr| attr.has_name(name))\n+            .filter_map(ast::Attribute::meta_item_list)\n+            .flatten()\n     }\n \n     /// Return the span of the first doc-comment, if it exists.\n@@ -901,12 +875,9 @@ crate trait NestedAttributesExt {\n     fn get_word_attr(self, word: Symbol) -> Option<ast::NestedMetaItem>;\n }\n \n-impl<I> NestedAttributesExt for I\n-where\n-    I: IntoIterator<Item = ast::NestedMetaItem>,\n-{\n-    fn get_word_attr(self, word: Symbol) -> Option<ast::NestedMetaItem> {\n-        self.into_iter().find(|attr| attr.is_word() && attr.has_name(word))\n+impl<I: Iterator<Item = ast::NestedMetaItem>> NestedAttributesExt for I {\n+    fn get_word_attr(mut self, word: Symbol) -> Option<ast::NestedMetaItem> {\n+        self.find(|attr| attr.is_word() && attr.has_name(word))\n     }\n }\n \n@@ -1014,7 +985,7 @@ crate struct Attributes {\n }\n \n impl Attributes {\n-    crate fn lists(&self, name: Symbol) -> ListAttributesIter<'_> {\n+    crate fn lists(&self, name: Symbol) -> impl Iterator<Item = ast::NestedMetaItem> + '_ {\n         self.other_attrs.lists(name)\n     }\n "}, {"sha": "0020a1ec1f54784d6c14b0e35acb07cb0b746dc2", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3a3e4b78593bc2669828dfc2e36070897b9c6a4d/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a3e4b78593bc2669828dfc2e36070897b9c6a4d/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=3a3e4b78593bc2669828dfc2e36070897b9c6a4d", "patch": "@@ -16,6 +16,8 @@\n #![feature(once_cell)]\n #![feature(type_ascription)]\n #![feature(iter_intersperse)]\n+#![feature(type_alias_impl_trait)]\n+#![feature(generic_associated_types)]\n #![recursion_limit = \"256\"]\n #![warn(rustc::internal)]\n #![allow(clippy::collapsible_if, clippy::collapsible_else_if)]"}]}