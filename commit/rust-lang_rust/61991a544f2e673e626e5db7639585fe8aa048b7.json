{"sha": "61991a544f2e673e626e5db7639585fe8aa048b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxOTkxYTU0NGYyZTY3M2U2MjZlNWRiNzYzOTU4NWZlOGFhMDQ4Yjc=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-03-13T13:21:50Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-04-06T10:14:08Z"}, "message": "Update run-make/symbol-visibility to also cover shared-generics", "tree": {"sha": "30602ec4aac54a8c5879a9491a76eac8c9047548", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30602ec4aac54a8c5879a9491a76eac8c9047548"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61991a544f2e673e626e5db7639585fe8aa048b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61991a544f2e673e626e5db7639585fe8aa048b7", "html_url": "https://github.com/rust-lang/rust/commit/61991a544f2e673e626e5db7639585fe8aa048b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61991a544f2e673e626e5db7639585fe8aa048b7/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "07704a4e1dd5c1b21e0a447d88511d455497b390", "url": "https://api.github.com/repos/rust-lang/rust/commits/07704a4e1dd5c1b21e0a447d88511d455497b390", "html_url": "https://github.com/rust-lang/rust/commit/07704a4e1dd5c1b21e0a447d88511d455497b390"}], "stats": {"total": 57, "additions": 50, "deletions": 7}, "files": [{"sha": "17d470063fc934f6ce8fb418f00adf9863e4f1e5", "filename": "src/test/run-make-fulldeps/symbol-visibility/Makefile", "status": "modified", "additions": 37, "deletions": 5, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/61991a544f2e673e626e5db7639585fe8aa048b7/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/61991a544f2e673e626e5db7639585fe8aa048b7/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2FMakefile?ref=61991a544f2e673e626e5db7639585fe8aa048b7", "patch": "@@ -23,11 +23,11 @@ COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.dylib\n endif\n \n all:\n-\t$(RUSTC) an_rlib.rs\n-\t$(RUSTC) a_cdylib.rs\n-\t$(RUSTC) a_rust_dylib.rs\n-\t$(RUSTC) an_executable.rs\n-\t$(RUSTC) a_cdylib.rs --crate-name combined_rlib_dylib --crate-type=rlib,cdylib\n+\t$(RUSTC) -Zshare-generics=no an_rlib.rs\n+\t$(RUSTC) -Zshare-generics=no a_cdylib.rs\n+\t$(RUSTC) -Zshare-generics=no a_rust_dylib.rs\n+\t$(RUSTC) -Zshare-generics=no an_executable.rs\n+\t$(RUSTC) -Zshare-generics=no a_cdylib.rs --crate-name combined_rlib_dylib --crate-type=rlib,cdylib\n \n \t# Check that a cdylib exports its public #[no_mangle] functions\n \t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n@@ -39,10 +39,15 @@ all:\n \t# Check that a Rust dylib exports its monomorphic functions\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c public_c_function_from_rust_dylib)\" -eq \"1\" ]\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c _ZN.*public_rust_function_from_rust_dylib.*E)\" -eq \"1\" ]\n+\t# Check that a Rust dylib does not export generics if -Zshare-generics=no\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c _ZN.*public_generic_function_from_rust_dylib.*E)\" -eq \"0\" ]\n+\n \n \t# Check that a Rust dylib exports the monomorphic functions from its dependencies\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n \t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c public_rust_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a Rust dylib does not export generics if -Zshare-generics=no\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c _ZN.*public_generic_function_from_rlib.*E)\" -eq \"0\" ]\n \n \t# Check that an executable does not export any dynamic symbols\n \t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -c public_c_function_from_rlib)\" -eq \"0\" ]\n@@ -57,4 +62,31 @@ all:\n \t[ \"$$($(NM) $(TMPDIR)/$(COMBINED_CDYLIB_NAME) | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n \t# Check that a cdylib DOES NOT export any public Rust functions\n \t[ \"$$($(NM) $(TMPDIR)/$(COMBINED_CDYLIB_NAME) | grep -c _ZN.*h.*E)\" -eq \"0\" ]\n+\n+\n+\t$(RUSTC) -Zshare-generics=yes an_rlib.rs\n+\t$(RUSTC) -Zshare-generics=yes a_cdylib.rs\n+\t$(RUSTC) -Zshare-generics=yes a_rust_dylib.rs\n+\t$(RUSTC) -Zshare-generics=yes an_executable.rs\n+\n+\t# Check that a cdylib exports its public #[no_mangle] functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n+\t# Check that a cdylib exports the public #[no_mangle] functions of dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a cdylib DOES NOT export any public Rust functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -c _ZN.*h.*E)\" -eq \"0\" ]\n+\n+\t# Check that a Rust dylib exports its monomorphic functions, including generics this time\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c public_c_function_from_rust_dylib)\" -eq \"1\" ]\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c _ZN.*public_rust_function_from_rust_dylib.*E)\" -eq \"1\" ]\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c _ZN.*public_generic_function_from_rust_dylib.*E)\" -eq \"1\" ]\n+\n+\t# Check that a Rust dylib exports the monomorphic functions from its dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c public_rust_function_from_rlib)\" -eq \"1\" ]\n+\t[ \"$$($(NM) $(TMPDIR)/$(RDYLIB_NAME) | grep -c _ZN.*public_generic_function_from_rlib.*E)\" -eq \"1\" ]\n+\n+\t# Check that an executable does not export any dynamic symbols\n+\t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -c public_c_function_from_rlib)\" -eq \"0\" ]\n+\t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -c public_rust_function_from_exe)\" -eq \"0\" ]\n endif"}, {"sha": "99e748ec2efc88e8659f64ed2eb97ef08c52efe1", "filename": "src/test/run-make-fulldeps/symbol-visibility/a_rust_dylib.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/61991a544f2e673e626e5db7639585fe8aa048b7/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_rust_dylib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61991a544f2e673e626e5db7639585fe8aa048b7/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_rust_dylib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fa_rust_dylib.rs?ref=61991a544f2e673e626e5db7639585fe8aa048b7", "patch": "@@ -17,4 +17,9 @@ pub fn public_rust_function_from_rust_dylib() {}\n \n // This should be exported\n #[no_mangle]\n-pub extern \"C\" fn public_c_function_from_rust_dylib() {}\n+pub extern \"C\" fn public_c_function_from_rust_dylib() {\n+    let _ = public_generic_function_from_rust_dylib(1u16);\n+}\n+\n+// This should be exported if -Zshare-generics=yes\n+pub fn public_generic_function_from_rust_dylib<T>(x: T) -> T { x }"}, {"sha": "a1d73afd30b110684d51086d761cfa619e6d9665", "filename": "src/test/run-make-fulldeps/symbol-visibility/an_rlib.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/61991a544f2e673e626e5db7639585fe8aa048b7/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fan_rlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61991a544f2e673e626e5db7639585fe8aa048b7/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fan_rlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make-fulldeps%2Fsymbol-visibility%2Fan_rlib.rs?ref=61991a544f2e673e626e5db7639585fe8aa048b7", "patch": "@@ -13,4 +13,10 @@\n pub fn public_rust_function_from_rlib() {}\n \n #[no_mangle]\n-pub extern \"C\" fn public_c_function_from_rlib() {}\n+pub extern \"C\" fn public_c_function_from_rlib() {\n+    let _ = public_generic_function_from_rlib(0u64);\n+}\n+\n+pub fn public_generic_function_from_rlib<T>(x: T) -> T {\n+    x\n+}"}]}