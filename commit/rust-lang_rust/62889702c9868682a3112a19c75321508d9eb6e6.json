{"sha": "62889702c9868682a3112a19c75321508d9eb6e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyODg5NzAyYzk4Njg2ODJhMzExMmExOWM3NTMyMTUwOGQ5ZWI2ZTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-07T12:30:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-07T12:30:55Z"}, "message": "Auto merge of #50487 - nikic:heap-manually-drop, r=Gankro\n\nUse ManuallyDrop instead of Option in BinaryHeap Hole implementation\n\nThe Option is always Some until drop, where it becomes None. Make this more explicit and avoid unwraps by using ManuallyDrop.\n\nThis change should be performance-neutral as LLVM already optimizes the unwraps away in the inlined code. However I've seen this pattern copied from here to other crates where it is not optimized away, so I think it would be good to change it.", "tree": {"sha": "53e852b1e191e001a0c32f9c883583496187dc51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/53e852b1e191e001a0c32f9c883583496187dc51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/62889702c9868682a3112a19c75321508d9eb6e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/62889702c9868682a3112a19c75321508d9eb6e6", "html_url": "https://github.com/rust-lang/rust/commit/62889702c9868682a3112a19c75321508d9eb6e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/62889702c9868682a3112a19c75321508d9eb6e6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c88992d00169f15d8ff9edac8901245b4d21e1c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c88992d00169f15d8ff9edac8901245b4d21e1c1", "html_url": "https://github.com/rust-lang/rust/commit/c88992d00169f15d8ff9edac8901245b4d21e1c1"}, {"sha": "9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f8f366eeabee6273abf3628bb75ecd3b4b57f22", "html_url": "https://github.com/rust-lang/rust/commit/9f8f366eeabee6273abf3628bb75ecd3b4b57f22"}], "stats": {"total": 11, "additions": 5, "deletions": 6}, "files": [{"sha": "fcadcb544c431a9e9ede7bc00912ce3123b2533c", "filename": "src/liballoc/binary_heap.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/62889702c9868682a3112a19c75321508d9eb6e6/src%2Fliballoc%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/62889702c9868682a3112a19c75321508d9eb6e6/src%2Fliballoc%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fbinary_heap.rs?ref=62889702c9868682a3112a19c75321508d9eb6e6", "patch": "@@ -157,7 +157,7 @@\n \n use core::ops::{Deref, DerefMut};\n use core::iter::{FromIterator, FusedIterator};\n-use core::mem::{swap, size_of};\n+use core::mem::{swap, size_of, ManuallyDrop};\n use core::ptr;\n use core::fmt;\n \n@@ -864,8 +864,7 @@ impl<T: Ord> BinaryHeap<T> {\n /// position with the value that was originally removed.\n struct Hole<'a, T: 'a> {\n     data: &'a mut [T],\n-    /// `elt` is always `Some` from new until drop.\n-    elt: Option<T>,\n+    elt: ManuallyDrop<T>,\n     pos: usize,\n }\n \n@@ -879,7 +878,7 @@ impl<'a, T> Hole<'a, T> {\n         let elt = ptr::read(&data[pos]);\n         Hole {\n             data,\n-            elt: Some(elt),\n+            elt: ManuallyDrop::new(elt),\n             pos,\n         }\n     }\n@@ -892,7 +891,7 @@ impl<'a, T> Hole<'a, T> {\n     /// Returns a reference to the element removed.\n     #[inline]\n     fn element(&self) -> &T {\n-        self.elt.as_ref().unwrap()\n+        &self.elt\n     }\n \n     /// Returns a reference to the element at `index`.\n@@ -925,7 +924,7 @@ impl<'a, T> Drop for Hole<'a, T> {\n         // fill the hole again\n         unsafe {\n             let pos = self.pos;\n-            ptr::write(self.data.get_unchecked_mut(pos), self.elt.take().unwrap());\n+            ptr::copy_nonoverlapping(&*self.elt, self.data.get_unchecked_mut(pos), 1);\n         }\n     }\n }"}]}