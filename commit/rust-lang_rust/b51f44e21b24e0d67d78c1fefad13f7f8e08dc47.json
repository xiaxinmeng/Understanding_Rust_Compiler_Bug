{"sha": "b51f44e21b24e0d67d78c1fefad13f7f8e08dc47", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1MWY0NGUyMWIyNGUwZDY3ZDc4YzFmZWZhZDEzZjdmOGUwOGRjNDc=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-06-02T21:27:33Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-06-02T22:06:09Z"}, "message": "Fix passing self by value for types passed by value\n\nFor types that are passed by value, we can't just cast the value to a\npointer, but have to use an alloca and copy the value there. This\nhandling is already present for all other arguments, but was missing\nfor \"self\".\n\nFixes #6682, #4850 and #4878", "tree": {"sha": "30d001cd11a9343100e54f427de1a134996ca412", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30d001cd11a9343100e54f427de1a134996ca412"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b51f44e21b24e0d67d78c1fefad13f7f8e08dc47", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b51f44e21b24e0d67d78c1fefad13f7f8e08dc47", "html_url": "https://github.com/rust-lang/rust/commit/b51f44e21b24e0d67d78c1fefad13f7f8e08dc47", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b51f44e21b24e0d67d78c1fefad13f7f8e08dc47/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c354a0c7eb22f7a4bc1c7adf8e2ed34ee96428aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c354a0c7eb22f7a4bc1c7adf8e2ed34ee96428aa", "html_url": "https://github.com/rust-lang/rust/commit/c354a0c7eb22f7a4bc1c7adf8e2ed34ee96428aa"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "9b9f80c741b263a55c3580473472660ca09e815a", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b51f44e21b24e0d67d78c1fefad13f7f8e08dc47/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b51f44e21b24e0d67d78c1fefad13f7f8e08dc47/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=b51f44e21b24e0d67d78c1fefad13f7f8e08dc47", "patch": "@@ -1730,8 +1730,15 @@ pub fn copy_args_to_allocas(fcx: fn_ctxt,\n         // We really should do this regardless of whether self is owned, but\n         // it doesn't work right with default method impls yet. (FIXME: #2794)\n         if slf.is_owned {\n-            let self_val = PointerCast(bcx, slf.v,\n-                                       T_ptr(type_of(bcx.ccx(), slf.t)));\n+            let self_val = if datum::appropriate_mode(slf.t).is_by_value() {\n+                let tmp = BitCast(bcx, slf.v, type_of(bcx.ccx(), slf.t));\n+                let alloc = alloc_ty(bcx, slf.t);\n+                Store(bcx, tmp, alloc);\n+                alloc\n+            } else {\n+                PointerCast(bcx, slf.v, T_ptr(type_of(bcx.ccx(), slf.t)))\n+            };\n+\n             fcx.llself = Some(ValSelfData {v: self_val, ..slf});\n             add_clean(bcx, self_val, slf.t);\n         }"}]}