{"sha": "5ad41069e65a10e8e5b6738ec53d874e2467d482", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhZDQxMDY5ZTY1YTEwZThlNWI2NzM4ZWM1M2Q4NzRlMjQ2N2Q0ODI=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-12T17:15:47Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-08-13T10:20:14Z"}, "message": "Update non-fmt-panic tests.", "tree": {"sha": "f7892ba67a66038e21e8353e4d272af4dca7c28c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7892ba67a66038e21e8353e4d272af4dca7c28c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ad41069e65a10e8e5b6738ec53d874e2467d482", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ad41069e65a10e8e5b6738ec53d874e2467d482", "html_url": "https://github.com/rust-lang/rust/commit/5ad41069e65a10e8e5b6738ec53d874e2467d482", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ad41069e65a10e8e5b6738ec53d874e2467d482/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b4f448a7ea47049ad6392afc3684e17372cb4469", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4f448a7ea47049ad6392afc3684e17372cb4469", "html_url": "https://github.com/rust-lang/rust/commit/b4f448a7ea47049ad6392afc3684e17372cb4469"}], "stats": {"total": 102, "additions": 75, "deletions": 27}, "files": [{"sha": "c85e1887d9603073e125928c7aaa34552a59ddad", "filename": "src/test/ui/non-fmt-panic.fixed", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/5ad41069e65a10e8e5b6738ec53d874e2467d482/src%2Ftest%2Fui%2Fnon-fmt-panic.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5ad41069e65a10e8e5b6738ec53d874e2467d482/src%2Ftest%2Fui%2Fnon-fmt-panic.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.fixed?ref=5ad41069e65a10e8e5b6738ec53d874e2467d482", "patch": "@@ -0,0 +1,54 @@\n+// run-rustfix\n+// rustfix-only-machine-applicable\n+// build-pass (FIXME(62277): should be check-pass)\n+// aux-build:fancy-panic.rs\n+\n+extern crate fancy_panic;\n+\n+const C: &str = \"abc {}\";\n+static S: &str = \"{bla}\";\n+\n+#[allow(unreachable_code)]\n+fn main() {\n+    panic!(\"{}\", \"here's a brace: {\"); //~ WARN panic message contains a brace\n+    std::panic!(\"{}\", \"another one: }\"); //~ WARN panic message contains a brace\n+    core::panic!(\"{}\", \"Hello {}\"); //~ WARN panic message contains an unused formatting placeholder\n+    assert!(false, \"{}\", \"{:03x} {test} bla\");\n+    //~^ WARN panic message contains unused formatting placeholders\n+    assert!(false, \"{}\", S);\n+    //~^ WARN panic message is not a string literal\n+    debug_assert!(false, \"{}\", \"{{}} bla\"); //~ WARN panic message contains braces\n+    panic!(\"{}\", C); //~ WARN panic message is not a string literal\n+    panic!(\"{}\", S); //~ WARN panic message is not a string literal\n+    std::panic::panic_any(123); //~ WARN panic message is not a string literal\n+    core::panic!(\"{}\", &*\"abc\"); //~ WARN panic message is not a string literal\n+    panic!(\"{}\", concat!(\"{\", \"}\")); //~ WARN panic message contains an unused formatting placeholder\n+    panic!(\"{}\", concat!(\"{\", \"{\")); //~ WARN panic message contains braces\n+\n+    fancy_panic::fancy_panic!(\"test {} 123\");\n+    //~^ WARN panic message contains an unused formatting placeholder\n+\n+    fancy_panic::fancy_panic!(); // OK\n+    fancy_panic::fancy_panic!(S); // OK\n+\n+    macro_rules! a {\n+        () => { 123 };\n+    }\n+\n+    std::panic::panic_any(a!()); //~ WARN panic message is not a string literal\n+\n+    panic!(\"{}\", 1); //~ WARN panic message is not a string literal\n+    assert!(false, \"{}\", 1); //~ WARN panic message is not a string literal\n+    debug_assert!(false, \"{}\", 1); //~ WARN panic message is not a string literal\n+\n+    std::panic::panic_any(123); //~ WARN panic message is not a string literal\n+    std::panic::panic_any(123); //~ WARN panic message is not a string literal\n+\n+    // Check that the lint only triggers for std::panic and core::panic,\n+    // not any panic macro:\n+    macro_rules! panic {\n+        ($e:expr) => ();\n+    }\n+    panic!(\"{}\"); // OK\n+    panic!(S); // OK\n+}"}, {"sha": "020bcf00a016de49489bc752a43ace541912d527", "filename": "src/test/ui/non-fmt-panic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5ad41069e65a10e8e5b6738ec53d874e2467d482/src%2Ftest%2Fui%2Fnon-fmt-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ad41069e65a10e8e5b6738ec53d874e2467d482/src%2Ftest%2Fui%2Fnon-fmt-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.rs?ref=5ad41069e65a10e8e5b6738ec53d874e2467d482", "patch": "@@ -1,3 +1,5 @@\n+// run-rustfix\n+// rustfix-only-machine-applicable\n // build-pass (FIXME(62277): should be check-pass)\n // aux-build:fancy-panic.rs\n "}, {"sha": "513ffd37dc3c8d5036ee7adf9ca6170e95c10060", "filename": "src/test/ui/non-fmt-panic.stderr", "status": "modified", "additions": 19, "deletions": 27, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/5ad41069e65a10e8e5b6738ec53d874e2467d482/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ad41069e65a10e8e5b6738ec53d874e2467d482/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnon-fmt-panic.stderr?ref=5ad41069e65a10e8e5b6738ec53d874e2467d482", "patch": "@@ -1,5 +1,5 @@\n warning: panic message contains a brace\n-  --> $DIR/non-fmt-panic.rs:11:29\n+  --> $DIR/non-fmt-panic.rs:13:29\n    |\n LL |     panic!(\"here's a brace: {\");\n    |                             ^\n@@ -12,7 +12,7 @@ LL |     panic!(\"{}\", \"here's a brace: {\");\n    |            +++++\n \n warning: panic message contains a brace\n-  --> $DIR/non-fmt-panic.rs:12:31\n+  --> $DIR/non-fmt-panic.rs:14:31\n    |\n LL |     std::panic!(\"another one: }\");\n    |                               ^\n@@ -24,7 +24,7 @@ LL |     std::panic!(\"{}\", \"another one: }\");\n    |                 +++++\n \n warning: panic message contains an unused formatting placeholder\n-  --> $DIR/non-fmt-panic.rs:13:25\n+  --> $DIR/non-fmt-panic.rs:15:25\n    |\n LL |     core::panic!(\"Hello {}\");\n    |                         ^^\n@@ -40,7 +40,7 @@ LL |     core::panic!(\"{}\", \"Hello {}\");\n    |                  +++++\n \n warning: panic message contains unused formatting placeholders\n-  --> $DIR/non-fmt-panic.rs:14:21\n+  --> $DIR/non-fmt-panic.rs:16:21\n    |\n LL |     assert!(false, \"{:03x} {test} bla\");\n    |                     ^^^^^^ ^^^^^^\n@@ -56,7 +56,7 @@ LL |     assert!(false, \"{}\", \"{:03x} {test} bla\");\n    |                    +++++\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:16:20\n+  --> $DIR/non-fmt-panic.rs:18:20\n    |\n LL |     assert!(false, S);\n    |                    ^\n@@ -69,7 +69,7 @@ LL |     assert!(false, \"{}\", S);\n    |                    +++++\n \n warning: panic message contains braces\n-  --> $DIR/non-fmt-panic.rs:18:27\n+  --> $DIR/non-fmt-panic.rs:20:27\n    |\n LL |     debug_assert!(false, \"{{}} bla\");\n    |                           ^^^^\n@@ -81,7 +81,7 @@ LL |     debug_assert!(false, \"{}\", \"{{}} bla\");\n    |                          +++++\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:19:12\n+  --> $DIR/non-fmt-panic.rs:21:12\n    |\n LL |     panic!(C);\n    |            ^\n@@ -92,13 +92,9 @@ help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", C);\n    |            +++++\n-help: or use std::panic::panic_any instead\n-   |\n-LL |     std::panic::panic_any(C);\n-   |     ~~~~~~~~~~~~~~~~~~~~~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:20:12\n+  --> $DIR/non-fmt-panic.rs:22:12\n    |\n LL |     panic!(S);\n    |            ^\n@@ -109,13 +105,9 @@ help: add a \"{}\" format string to Display the message\n    |\n LL |     panic!(\"{}\", S);\n    |            +++++\n-help: or use std::panic::panic_any instead\n-   |\n-LL |     std::panic::panic_any(S);\n-   |     ~~~~~~~~~~~~~~~~~~~~~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:21:17\n+  --> $DIR/non-fmt-panic.rs:23:17\n    |\n LL |     std::panic!(123);\n    |                 ^^^\n@@ -132,7 +124,7 @@ LL |     std::panic::panic_any(123);\n    |     ~~~~~~~~~~~~~~~~~~~~~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:22:18\n+  --> $DIR/non-fmt-panic.rs:24:18\n    |\n LL |     core::panic!(&*\"abc\");\n    |                  ^^^^^^^\n@@ -145,7 +137,7 @@ LL |     core::panic!(\"{}\", &*\"abc\");\n    |                  +++++\n \n warning: panic message contains an unused formatting placeholder\n-  --> $DIR/non-fmt-panic.rs:23:12\n+  --> $DIR/non-fmt-panic.rs:25:12\n    |\n LL |     panic!(concat!(\"{\", \"}\"));\n    |            ^^^^^^^^^^^^^^^^^\n@@ -161,7 +153,7 @@ LL |     panic!(\"{}\", concat!(\"{\", \"}\"));\n    |            +++++\n \n warning: panic message contains braces\n-  --> $DIR/non-fmt-panic.rs:24:5\n+  --> $DIR/non-fmt-panic.rs:26:5\n    |\n LL |     panic!(concat!(\"{\", \"{\"));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -173,15 +165,15 @@ LL |     panic!(\"{}\", concat!(\"{\", \"{\"));\n    |            +++++\n \n warning: panic message contains an unused formatting placeholder\n-  --> $DIR/non-fmt-panic.rs:26:37\n+  --> $DIR/non-fmt-panic.rs:28:37\n    |\n LL |     fancy_panic::fancy_panic!(\"test {} 123\");\n    |                                     ^^\n    |\n    = note: this message is not used as a format string when given without arguments, but will be in Rust 2021\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:36:12\n+  --> $DIR/non-fmt-panic.rs:38:12\n    |\n LL |     panic!(a!());\n    |            ^^^^\n@@ -198,7 +190,7 @@ LL |     std::panic::panic_any(a!());\n    |     ~~~~~~~~~~~~~~~~~~~~~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:38:12\n+  --> $DIR/non-fmt-panic.rs:40:12\n    |\n LL |     panic!(format!(\"{}\", 1));\n    |            ^^^^^^^^^^^^^^^^\n@@ -213,7 +205,7 @@ LL +     panic!(\"{}\", 1);\n    | \n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:39:20\n+  --> $DIR/non-fmt-panic.rs:41:20\n    |\n LL |     assert!(false, format!(\"{}\", 1));\n    |                    ^^^^^^^^^^^^^^^^\n@@ -228,7 +220,7 @@ LL +     assert!(false, \"{}\", 1);\n    | \n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:40:26\n+  --> $DIR/non-fmt-panic.rs:42:26\n    |\n LL |     debug_assert!(false, format!(\"{}\", 1));\n    |                          ^^^^^^^^^^^^^^^^\n@@ -243,7 +235,7 @@ LL +     debug_assert!(false, \"{}\", 1);\n    | \n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:42:12\n+  --> $DIR/non-fmt-panic.rs:44:12\n    |\n LL |     panic![123];\n    |            ^^^\n@@ -260,7 +252,7 @@ LL |     std::panic::panic_any(123);\n    |     ~~~~~~~~~~~~~~~~~~~~~~   ~\n \n warning: panic message is not a string literal\n-  --> $DIR/non-fmt-panic.rs:43:12\n+  --> $DIR/non-fmt-panic.rs:45:12\n    |\n LL |     panic!{123};\n    |            ^^^"}]}