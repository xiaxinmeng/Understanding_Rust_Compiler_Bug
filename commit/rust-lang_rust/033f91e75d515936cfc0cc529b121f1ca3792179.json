{"sha": "033f91e75d515936cfc0cc529b121f1ca3792179", "node_id": "C_kwDOAAsO6NoAKDAzM2Y5MWU3NWQ1MTU5MzZjZmMwY2M1MjliMTIxZjFjYTM3OTIxNzk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-02-22T18:12:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-22T18:12:27Z"}, "message": "Merge #11472\n\n11472: fix: visibility in impl items and pub(crate) to pub in extract_module r=feniljain a=feniljain\n\nShould fix #11007 and #11443\r\n\r\nMakes following changes:\r\n\r\n- Removes visiblity modifiers from trait items\r\n- Respect user given visibility\r\n- Updated tests for the same\n\nCo-authored-by: vi_mi <fkjainco@gmail.com>\nCo-authored-by: vi_mi <49019259+feniljain@users.noreply.github.com>", "tree": {"sha": "c51592d32a9e582d98cfbe5ea61ba914fa94a9a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c51592d32a9e582d98cfbe5ea61ba914fa94a9a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/033f91e75d515936cfc0cc529b121f1ca3792179", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiFSeLCRBK7hj4Ov3rIwAAnesIAB6+Up0Ie2xpNliFwJ8J6w2d\nzkB1N18UC6GqJiThVUGXDmDYx+mo8rCQnYQnXb+LZI11fn8c816CGmT7hW3WVxA/\nnPNN24yWfT0O9QVXKR2dKnvA4L8K3qsrPYCbwvfe1guQuQD/mXceUuh9xBspUr55\nnT02koVHO+lz/4vebKjkFuZAbRInTXpkKBpBFMveS/6n1LP7u5uXne4oPH4dLH8+\nuRTNwHEGGETFFLzD7GIs+bgrtI07bVezW76ReFjLYgOrEg4uMFPk1dtM4K7mdb3/\nnbJ9TBfaJKWhkcvXufxTSjrRZEMAq1UOi9DSzjXCjQ6UGbwD33CpiBcL7dnXw34=\n=dtAB\n-----END PGP SIGNATURE-----\n", "payload": "tree c51592d32a9e582d98cfbe5ea61ba914fa94a9a1\nparent 7ce06d4b173d396947263c207946383fdaad6db6\nparent 7abd7b80f34481cabd7f2db032060f6e984c7b96\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1645553547 +0000\ncommitter GitHub <noreply@github.com> 1645553547 +0000\n\nMerge #11472\n\n11472: fix: visibility in impl items and pub(crate) to pub in extract_module r=feniljain a=feniljain\n\nShould fix #11007 and #11443\r\n\r\nMakes following changes:\r\n\r\n- Removes visiblity modifiers from trait items\r\n- Respect user given visibility\r\n- Updated tests for the same\n\nCo-authored-by: vi_mi <fkjainco@gmail.com>\nCo-authored-by: vi_mi <49019259+feniljain@users.noreply.github.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/033f91e75d515936cfc0cc529b121f1ca3792179", "html_url": "https://github.com/rust-lang/rust/commit/033f91e75d515936cfc0cc529b121f1ca3792179", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/033f91e75d515936cfc0cc529b121f1ca3792179/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ce06d4b173d396947263c207946383fdaad6db6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ce06d4b173d396947263c207946383fdaad6db6", "html_url": "https://github.com/rust-lang/rust/commit/7ce06d4b173d396947263c207946383fdaad6db6"}, {"sha": "7abd7b80f34481cabd7f2db032060f6e984c7b96", "url": "https://api.github.com/repos/rust-lang/rust/commits/7abd7b80f34481cabd7f2db032060f6e984c7b96", "html_url": "https://github.com/rust-lang/rust/commit/7abd7b80f34481cabd7f2db032060f6e984c7b96"}], "stats": {"total": 58, "additions": 45, "deletions": 13}, "files": [{"sha": "64875adfae239d1409d479842e210bb7ca3b8935", "filename": "crates/ide_assists/src/handlers/extract_module.rs", "status": "modified", "additions": 45, "deletions": 13, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/033f91e75d515936cfc0cc529b121f1ca3792179/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/033f91e75d515936cfc0cc529b121f1ca3792179/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_module.rs?ref=033f91e75d515936cfc0cc529b121f1ca3792179", "patch": "@@ -779,7 +779,8 @@ fn get_replacements_for_visibilty_change(\n             ast::Item::Enum(it) => replacements.push((it.visibility(), it.syntax().clone())),\n             ast::Item::ExternCrate(it) => replacements.push((it.visibility(), it.syntax().clone())),\n             ast::Item::Fn(it) => replacements.push((it.visibility(), it.syntax().clone())),\n-            ast::Item::Impl(it) => impls.push(it),\n+            //Associated item's visibility should not be changed\n+            ast::Item::Impl(it) if it.for_token().is_none() => impls.push(it),\n             ast::Item::MacroRules(it) => replacements.push((it.visibility(), it.syntax().clone())),\n             ast::Item::MacroDef(it) => replacements.push((it.visibility(), it.syntax().clone())),\n             ast::Item::Module(it) => replacements.push((it.visibility(), it.syntax().clone())),\n@@ -825,11 +826,7 @@ fn add_change_vis(\n     vis: Option<ast::Visibility>,\n     node_or_token_opt: Option<syntax::SyntaxElement>,\n ) -> Option<()> {\n-    if let Some(vis) = vis {\n-        if vis.syntax().text() == \"pub\" {\n-            ted::replace(vis.syntax(), make::visibility_pub_crate().syntax().clone_for_update());\n-        }\n-    } else {\n+    if let None = vis {\n         if let Some(node_or_token) = node_or_token_opt {\n             let pub_crate_vis = make::visibility_pub_crate().clone_for_update();\n             if let Some(node) = node_or_token.as_node() {\n@@ -962,8 +959,8 @@ mod modname {\n         pub(crate) inner: SomeType,\n     }\n \n-    pub(crate) struct PrivateStruct1 {\n-        pub(crate) inner: i32,\n+    pub struct PrivateStruct1 {\n+        pub inner: i32,\n     }\n \n     impl PrivateStruct {\n@@ -1033,7 +1030,7 @@ mod modname {\n     pub(crate) struct A {}\n \n     impl A {\n-        pub(crate) fn new_a() -> i32 {\n+        pub fn new_a() -> i32 {\n             2\n         }\n     }\n@@ -1148,7 +1145,7 @@ mod modname {\n                 pub struct PrivateStruct;\n \n $0struct Strukt {\n-    field: PrivateStruct,\n+   field: PrivateStruct,\n }$0\n \n                 struct Strukt1 {\n@@ -1164,7 +1161,7 @@ mod modname {\n     use super::PrivateStruct;\n \n     pub(crate) struct Strukt {\n-        pub(crate) field: PrivateStruct,\n+       pub(crate) field: PrivateStruct,\n     }\n }\n \n@@ -1203,7 +1200,7 @@ mod modname {\n     use super::A;\n \n     impl A {\n-        pub(crate) fn new_a() -> i32 {\n+        pub fn new_a() -> i32 {\n             2\n         }\n     }\n@@ -1251,7 +1248,7 @@ mod modname {\n     use super::super::foo::A;\n \n     impl A {\n-        pub(crate) fn new_a() -> i32 {\n+        pub fn new_a() -> i32 {\n             2\n         }\n     }\n@@ -1378,4 +1375,39 @@ mod modname {\n             \",\n         )\n     }\n+\n+    #[test]\n+    fn test_do_not_apply_visibility_modifier_to_trait_impl_items() {\n+        check_assist(\n+            extract_module,\n+            r\"\n+            trait ATrait {\n+                fn function();\n+            }\n+\n+            struct A {}\n+\n+$0impl ATrait for A {\n+    fn function() {}\n+}$0\n+            \",\n+            r\"\n+            trait ATrait {\n+                fn function();\n+            }\n+\n+            struct A {}\n+\n+mod modname {\n+    use super::A;\n+\n+    use super::ATrait;\n+\n+    impl ATrait for A {\n+        fn function() {}\n+    }\n+}\n+            \",\n+        )\n+    }\n }"}]}