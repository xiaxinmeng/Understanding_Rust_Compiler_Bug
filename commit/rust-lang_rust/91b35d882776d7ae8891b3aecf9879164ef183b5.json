{"sha": "91b35d882776d7ae8891b3aecf9879164ef183b5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxYjM1ZDg4Mjc3NmQ3YWU4ODkxYjNhZWNmOTg3OTE2NGVmMTgzYjU=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-07-13T19:39:01Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-07-13T19:39:01Z"}, "message": "Semantic Highlighting: Emit mutable modifier for 'self' when applicable", "tree": {"sha": "54ee29e69913743b4f31f2b4d3eb4fb6c6463721", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/54ee29e69913743b4f31f2b4d3eb4fb6c6463721"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/91b35d882776d7ae8891b3aecf9879164ef183b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/91b35d882776d7ae8891b3aecf9879164ef183b5", "html_url": "https://github.com/rust-lang/rust/commit/91b35d882776d7ae8891b3aecf9879164ef183b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/91b35d882776d7ae8891b3aecf9879164ef183b5/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "853440775d72974585ca3fe39f9688a4d4302dd3", "url": "https://api.github.com/repos/rust-lang/rust/commits/853440775d72974585ca3fe39f9688a4d4302dd3", "html_url": "https://github.com/rust-lang/rust/commit/853440775d72974585ca3fe39f9688a4d4302dd3"}], "stats": {"total": 47, "additions": 44, "deletions": 3}, "files": [{"sha": "b3236e8210772d0bea77504703ef7ab66f424990", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 24, "deletions": 3, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/91b35d882776d7ae8891b3aecf9879164ef183b5/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91b35d882776d7ae8891b3aecf9879164ef183b5/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=91b35d882776d7ae8891b3aecf9879164ef183b5", "patch": "@@ -566,10 +566,31 @@ fn highlight_element(\n                 | T![return]\n                 | T![while]\n                 | T![in] => h | HighlightModifier::ControlFlow,\n-                T![for] if !is_child_of_impl(element) => h | HighlightModifier::ControlFlow,\n+                T![for] if !is_child_of_impl(&element) => h | HighlightModifier::ControlFlow,\n                 T![unsafe] => h | HighlightModifier::Unsafe,\n                 T![true] | T![false] => HighlightTag::BoolLiteral.into(),\n-                T![self] => HighlightTag::SelfKeyword.into(),\n+                T![self] => {\n+                    let self_param_is_mut = element\n+                        .parent()\n+                        .and_then(ast::SelfParam::cast)\n+                        .and_then(|p| p.mut_token())\n+                        .is_some();\n+                    // closure to enforce lazyness\n+                    let self_path = || {\n+                        sema.resolve_path(&element.parent()?.parent().and_then(ast::Path::cast)?)\n+                    };\n+                    if self_param_is_mut\n+                        || matches!(self_path(),\n+                            Some(hir::PathResolution::Local(local))\n+                                if local.is_self(db)\n+                                    && (local.is_mut(db) || local.ty(db).is_mutable_reference())\n+                        )\n+                    {\n+                        HighlightTag::SelfKeyword | HighlightModifier::Mutable\n+                    } else {\n+                        HighlightTag::SelfKeyword.into()\n+                    }\n+                }\n                 _ => h,\n             }\n         }\n@@ -592,7 +613,7 @@ fn highlight_element(\n     }\n }\n \n-fn is_child_of_impl(element: SyntaxElement) -> bool {\n+fn is_child_of_impl(element: &SyntaxElement) -> bool {\n     match element.parent() {\n         Some(e) => e.kind() == IMPL_DEF,\n         _ => false,"}, {"sha": "87a6e2523b885bfb6456e287e6557d7cc19b758d", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/91b35d882776d7ae8891b3aecf9879164ef183b5/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/91b35d882776d7ae8891b3aecf9879164ef183b5/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=91b35d882776d7ae8891b3aecf9879164ef183b5", "patch": "@@ -25,6 +25,16 @@ impl Bar for Foo {\n     }\n }\n \n+impl Foo {\n+    fn baz(mut self) -> i32 {\n+        self.x\n+    }\n+\n+    fn qux(&mut self) {\n+        self.x = 0;\n+    }\n+}\n+\n static mut STATIC_MUT: i32 = 0;\n \n fn foo<'a, T>() -> T {"}, {"sha": "553811a2f2e347cb1e1f80359f8038b0be2f6c84", "filename": "crates/ra_ide/test_data/highlighting.html", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/91b35d882776d7ae8891b3aecf9879164ef183b5/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/91b35d882776d7ae8891b3aecf9879164ef183b5/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Fhighlighting.html?ref=91b35d882776d7ae8891b3aecf9879164ef183b5", "patch": "@@ -51,6 +51,16 @@\n     }\n }\n \n+<span class=\"keyword\">impl</span> <span class=\"struct\">Foo</span> {\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">baz</span>(<span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span>) -&gt; <span class=\"builtin_type\">i32</span> {\n+        <span class=\"self_keyword\">self</span>.<span class=\"field\">x</span>\n+    }\n+\n+    <span class=\"keyword\">fn</span> <span class=\"function declaration\">qux</span>(&<span class=\"keyword\">mut</span> <span class=\"self_keyword mutable\">self</span>) {\n+        <span class=\"self_keyword mutable\">self</span>.<span class=\"field\">x</span> = <span class=\"numeric_literal\">0</span>;\n+    }\n+}\n+\n <span class=\"keyword\">static</span> <span class=\"keyword\">mut</span> <span class=\"static declaration mutable\">STATIC_MUT</span>: <span class=\"builtin_type\">i32</span> = <span class=\"numeric_literal\">0</span>;\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">foo</span>&lt;<span class=\"lifetime declaration\">'a</span>, <span class=\"type_param declaration\">T</span>&gt;() -&gt; <span class=\"type_param\">T</span> {"}]}