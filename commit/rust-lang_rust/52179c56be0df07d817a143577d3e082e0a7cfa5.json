{"sha": "52179c56be0df07d817a143577d3e082e0a7cfa5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUyMTc5YzU2YmUwZGYwN2Q4MTdhMTQzNTc3ZDNlMDgyZTBhN2NmYTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-22T17:15:02Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T16:56:25Z"}, "message": "librustc_ast_lowering: fix misc fallout.", "tree": {"sha": "d2448132ffd4a8e60820bcccc3d1ffc5fa89b54c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2448132ffd4a8e60820bcccc3d1ffc5fa89b54c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/52179c56be0df07d817a143577d3e082e0a7cfa5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/52179c56be0df07d817a143577d3e082e0a7cfa5", "html_url": "https://github.com/rust-lang/rust/commit/52179c56be0df07d817a143577d3e082e0a7cfa5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/52179c56be0df07d817a143577d3e082e0a7cfa5/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b6ef2b369db3adef6f6fa33750c87c1ff1fe3fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b6ef2b369db3adef6f6fa33750c87c1ff1fe3fe", "html_url": "https://github.com/rust-lang/rust/commit/7b6ef2b369db3adef6f6fa33750c87c1ff1fe3fe"}], "stats": {"total": 154, "additions": 78, "deletions": 76}, "files": [{"sha": "dfd06da969b571b98e02f593363a25d61bf95cc6", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -39,7 +39,6 @@ pub mod def;\n pub mod def_id;\n pub mod intravisit;\n pub mod itemlikevisit;\n-pub mod lowering;\n pub mod map;\n pub mod pat_util;\n pub mod print;\n@@ -599,7 +598,7 @@ pub enum SyntheticTyParamKind {\n pub struct WhereClause<'hir> {\n     pub predicates: &'hir [WherePredicate<'hir>],\n     // Only valid if predicates isn't empty.\n-    span: Span,\n+    pub span: Span,\n }\n \n impl WhereClause<'_> {"}, {"sha": "76588dfa5e25e041afde0d71cb5873be8ff0a8b9", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -28,7 +28,6 @@\n \n #![doc(html_root_url = \"https://doc.rust-lang.org/nightly/\")]\n #![feature(arbitrary_self_types)]\n-#![feature(array_value_iter)]\n #![feature(bool_to_option)]\n #![feature(box_patterns)]\n #![feature(box_syntax)]"}, {"sha": "fa6e93d867b4ef6ed5f7b9e0d7efdd09829b82d8", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -523,7 +523,7 @@ pub enum BuiltinLintDiagnostics {\n     DeprecatedMacro(Option<Symbol>, Span),\n }\n \n-pub(crate) fn add_elided_lifetime_in_path_suggestion(\n+pub fn add_elided_lifetime_in_path_suggestion(\n     sess: &Session,\n     db: &mut DiagnosticBuilder<'_>,\n     n: usize,"}, {"sha": "0125e9e2c83043135a91c97d59c48f7bddf94372", "filename": "src/librustc_ast_lowering/expr.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_ast_lowering%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_ast_lowering%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fexpr.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -1,16 +1,16 @@\n use super::{ImplTraitContext, LoweringContext, ParamMode, ParenthesizedGenericArgs};\n-use crate::hir;\n-use crate::hir::def::Res;\n \n+use rustc::bug;\n+use rustc::hir;\n+use rustc::hir::def::Res;\n use rustc_data_structures::thin_vec::ThinVec;\n-\n+use rustc_error_codes::*;\n+use rustc_span::source_map::{respan, DesugaringKind, Span, Spanned};\n+use rustc_span::symbol::{sym, Symbol};\n use syntax::ast::*;\n use syntax::attr;\n use syntax::ptr::P as AstP;\n-use syntax::source_map::{respan, DesugaringKind, Span, Spanned};\n-use syntax::symbol::{sym, Symbol};\n-\n-use rustc_error_codes::*;\n+use syntax::{span_err, struct_span_err};\n \n impl<'hir> LoweringContext<'_, 'hir> {\n     fn lower_exprs(&mut self, exprs: &[AstP<Expr>]) -> &'hir [hir::Expr<'hir>] {\n@@ -836,8 +836,8 @@ impl<'hir> LoweringContext<'_, 'hir> {\n         }\n     }\n \n-    fn lower_label(&mut self, label: Option<Label>) -> Option<hir::Label> {\n-        label.map(|label| hir::Label { ident: label.ident })\n+    fn lower_label(&mut self, label: Option<Label>) -> Option<Label> {\n+        label.map(|label| Label { ident: label.ident })\n     }\n \n     fn lower_loop_destination(&mut self, destination: Option<(NodeId, Label)>) -> hir::Destination {"}, {"sha": "c1eb8be0f8aadc3888fca95b873a88bac5f45d96", "filename": "src/librustc_ast_lowering/item.rs", "status": "modified", "additions": 18, "deletions": 21, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_ast_lowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_ast_lowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Fitem.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -1,28 +1,25 @@\n-use super::AnonymousLifetimeMode;\n-use super::ImplTraitContext;\n-use super::ImplTraitPosition;\n-use super::ImplTraitTypeIdVisitor;\n-use super::LoweringContext;\n-use super::ParamMode;\n-\n-use crate::arena::Arena;\n-use crate::hir;\n-use crate::hir::def::{DefKind, Res};\n-use crate::hir::def_id::DefId;\n-use crate::util::nodemap::NodeMap;\n-\n+use super::{AnonymousLifetimeMode, LoweringContext, ParamMode};\n+use super::{ImplTraitContext, ImplTraitPosition, ImplTraitTypeIdVisitor};\n+\n+use rustc::arena::Arena;\n+use rustc::bug;\n+use rustc::hir;\n+use rustc::hir::def::{DefKind, Res};\n+use rustc::hir::def_id::DefId;\n+use rustc::util::nodemap::NodeMap;\n+use rustc_error_codes::*;\n+use rustc_span::source_map::{respan, DesugaringKind};\n+use rustc_span::symbol::{kw, sym};\n+use rustc_span::Span;\n use rustc_target::spec::abi;\n-\n-use smallvec::SmallVec;\n-use std::collections::BTreeSet;\n use syntax::ast::*;\n use syntax::attr;\n-use syntax::source_map::{respan, DesugaringKind};\n-use syntax::symbol::{kw, sym};\n+use syntax::struct_span_err;\n use syntax::visit::{self, Visitor};\n-use syntax_pos::Span;\n \n-use rustc_error_codes::*;\n+use log::debug;\n+use smallvec::{smallvec, SmallVec};\n+use std::collections::BTreeSet;\n \n pub(super) struct ItemLowerer<'a, 'lowering, 'hir> {\n     pub(super) lctx: &'a mut LoweringContext<'lowering, 'hir>,\n@@ -1429,7 +1426,7 @@ pub(super) struct GenericsCtor<'hir> {\n     span: Span,\n }\n \n-impl GenericsCtor<'hir> {\n+impl<'hir> GenericsCtor<'hir> {\n     pub(super) fn into_generics(self, arena: &'hir Arena<'hir>) -> hir::Generics<'hir> {\n         hir::Generics {\n             params: arena.alloc_from_iter(self.params),"}, {"sha": "a9214f31e7d2e85b2d04f0652dfc15dd17c7142e", "filename": "src/librustc_ast_lowering/lib.rs", "status": "modified", "additions": 37, "deletions": 35, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_ast_lowering%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_ast_lowering%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_ast_lowering%2Flib.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -32,45 +32,47 @@\n //! get confused if the spans from leaf AST nodes occur in multiple places\n //! in the HIR, especially for multiple identifiers.\n \n-use crate::arena::Arena;\n-use crate::dep_graph::DepGraph;\n-use crate::hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};\n-use crate::hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n-use crate::hir::map::{DefKey, DefPathData, Definitions};\n-use crate::hir::{self, ParamName};\n-use crate::hir::{ConstArg, GenericArg};\n-use crate::lint;\n-use crate::lint::builtin::{self, ELIDED_LIFETIMES_IN_PATHS};\n-use crate::middle::cstore::CrateStore;\n-use crate::session::config::nightly_options;\n-use crate::session::Session;\n-use crate::util::captures::Captures;\n-use crate::util::common::FN_OUTPUT_NAME;\n-use crate::util::nodemap::{DefIdMap, NodeMap};\n-use errors::Applicability;\n+#![feature(array_value_iter)]\n+\n+use rustc::arena::Arena;\n+use rustc::dep_graph::DepGraph;\n+use rustc::hir::def::{DefKind, Namespace, PartialRes, PerNS, Res};\n+use rustc::hir::def_id::{DefId, DefIndex, CRATE_DEF_INDEX};\n+use rustc::hir::map::{DefKey, DefPathData, Definitions};\n+use rustc::hir::{self, ConstArg, GenericArg, ParamName};\n+use rustc::lint;\n+use rustc::lint::builtin::{self, ELIDED_LIFETIMES_IN_PATHS};\n+use rustc::middle::cstore::CrateStore;\n+use rustc::session::config::nightly_options;\n+use rustc::session::Session;\n+use rustc::util::captures::Captures;\n+use rustc::util::common::FN_OUTPUT_NAME;\n+use rustc::util::nodemap::{DefIdMap, NodeMap};\n+use rustc::{bug, span_bug};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n+use rustc_error_codes::*;\n+use rustc_errors::Applicability;\n use rustc_index::vec::IndexVec;\n-\n-use smallvec::SmallVec;\n-use std::collections::BTreeMap;\n-use std::mem;\n+use rustc_span::hygiene::ExpnId;\n+use rustc_span::source_map::{respan, DesugaringKind, ExpnData, ExpnKind, Spanned};\n+use rustc_span::symbol::{kw, sym, Symbol};\n+use rustc_span::Span;\n use syntax::ast;\n use syntax::ast::*;\n use syntax::attr;\n-use syntax::errors;\n use syntax::print::pprust;\n use syntax::ptr::P as AstP;\n use syntax::sess::ParseSess;\n-use syntax::source_map::{respan, DesugaringKind, ExpnData, ExpnKind, Spanned};\n-use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Nonterminal, Token};\n use syntax::tokenstream::{TokenStream, TokenTree};\n use syntax::visit::{self, Visitor};\n-use syntax_pos::hygiene::ExpnId;\n-use syntax_pos::Span;\n+use syntax::{help, struct_span_err, walk_list};\n \n-use rustc_error_codes::*;\n+use log::{debug, trace};\n+use smallvec::{smallvec, SmallVec};\n+use std::collections::BTreeMap;\n+use std::mem;\n \n macro_rules! arena_vec {\n     ($this:expr; $($x:expr),*) => ({\n@@ -84,7 +86,7 @@ mod item;\n \n const HIR_ID_COUNTER_LOCKED: u32 = 0xFFFFFFFF;\n \n-pub struct LoweringContext<'a, 'hir: 'a> {\n+struct LoweringContext<'a, 'hir: 'a> {\n     crate_root: Option<Symbol>,\n \n     /// Used to assign IDs to HIR nodes that do not directly correspond to AST nodes.\n@@ -235,13 +237,13 @@ enum ImplTraitPosition {\n     Other,\n }\n \n-impl<'b, 'a> ImplTraitContext<'b, 'a> {\n+impl<'a> ImplTraitContext<'_, 'a> {\n     #[inline]\n     fn disallowed() -> Self {\n         ImplTraitContext::Disallowed(ImplTraitPosition::Other)\n     }\n \n-    fn reborrow(&'c mut self) -> ImplTraitContext<'c, 'a> {\n+    fn reborrow<'this>(&'this mut self) -> ImplTraitContext<'this, 'a> {\n         use self::ImplTraitContext::*;\n         match self {\n             Universal(params) => Universal(params),\n@@ -372,8 +374,8 @@ struct ImplTraitTypeIdVisitor<'a> {\n     ids: &'a mut SmallVec<[NodeId; 1]>,\n }\n \n-impl<'a, 'b> Visitor<'a> for ImplTraitTypeIdVisitor<'b> {\n-    fn visit_ty(&mut self, ty: &'a Ty) {\n+impl Visitor<'_> for ImplTraitTypeIdVisitor<'_> {\n+    fn visit_ty(&mut self, ty: &Ty) {\n         match ty.kind {\n             TyKind::Typeof(_) | TyKind::BareFn(_) => return,\n \n@@ -383,7 +385,7 @@ impl<'a, 'b> Visitor<'a> for ImplTraitTypeIdVisitor<'b> {\n         visit::walk_ty(self, ty);\n     }\n \n-    fn visit_path_segment(&mut self, path_span: Span, path_segment: &'v PathSegment) {\n+    fn visit_path_segment(&mut self, path_span: Span, path_segment: &PathSegment) {\n         if let Some(ref p) = path_segment.args {\n             if let GenericArgs::Parenthesized(_) = **p {\n                 return;\n@@ -687,7 +689,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n         self.resolver.get_import_res(id).present_items()\n     }\n \n-    fn diagnostic(&self) -> &errors::Handler {\n+    fn diagnostic(&self) -> &rustc_errors::Handler {\n         self.sess.diagnostic()\n     }\n \n@@ -3288,7 +3290,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n     }\n }\n \n-fn body_ids(bodies: &BTreeMap<hir::BodyId, hir::Body<'hir>>) -> Vec<hir::BodyId> {\n+fn body_ids(bodies: &BTreeMap<hir::BodyId, hir::Body<'_>>) -> Vec<hir::BodyId> {\n     // Sorting by span ensures that we get things in order within a\n     // file, and also puts the files in a sensible order.\n     let mut body_ids: Vec<_> = bodies.keys().cloned().collect();\n@@ -3303,7 +3305,7 @@ struct GenericArgsCtor<'hir> {\n     parenthesized: bool,\n }\n \n-impl GenericArgsCtor<'hir> {\n+impl<'hir> GenericArgsCtor<'hir> {\n     fn is_empty(&self) -> bool {\n         self.args.is_empty() && self.bindings.is_empty() && !self.parenthesized\n     }"}, {"sha": "36bf5cb6cfa372d35bbdf177ab9cd75135e5cfb5", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -7,7 +7,6 @@ use rustc::arena::Arena;\n use rustc::dep_graph::DepGraph;\n use rustc::hir;\n use rustc::hir::def_id::{CrateNum, LOCAL_CRATE};\n-use rustc::hir::lowering::lower_crate;\n use rustc::lint;\n use rustc::middle::cstore::{CrateStore, MetadataLoader, MetadataLoaderDyn};\n use rustc::middle::{self, resolve_lifetime, stability};\n@@ -442,8 +441,14 @@ pub fn lower_to_hir<'res, 'tcx>(\n ) -> Result<hir::map::Forest<'tcx>> {\n     // Lower AST to HIR.\n     let hir_forest = time(sess, \"lowering AST -> HIR\", || {\n-        let nt_to_tokenstream = rustc_parse::nt_to_tokenstream;\n-        let hir_crate = lower_crate(sess, &dep_graph, &krate, resolver, nt_to_tokenstream, arena);\n+        let hir_crate = rustc_ast_lowering::lower_crate(\n+            sess,\n+            &dep_graph,\n+            &krate,\n+            resolver,\n+            rustc_parse::nt_to_tokenstream,\n+            arena,\n+        );\n \n         if sess.opts.debugging_opts.hir_stats {\n             hir_stats::print_hir_stats(&hir_crate);"}, {"sha": "a57e98bd2207fe7f8ab0fe9a5eda84b6c98afe1d", "filename": "src/librustc_lint/types.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_lint%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_lint%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Ftypes.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -16,8 +16,8 @@ use std::{f32, f64, i16, i32, i64, i8, u16, u32, u64, u8};\n \n use rustc_target::spec::abi::Abi;\n use syntax::errors::Applicability;\n-use syntax::symbol::sym;\n use syntax::{ast, attr, source_map};\n+use syntax_pos::symbol::sym;\n use syntax_pos::Span;\n \n use rustc::hir;"}, {"sha": "1b9e3c3886fb7b51b793eb7b9aaff12ebe5db541", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -24,7 +24,7 @@ use rustc::hir::def::Namespace::*;\n use rustc::hir::def::{self, CtorKind, CtorOf, DefKind, ExportMap, NonMacroAttrKind, PartialRes};\n use rustc::hir::def_id::{CrateNum, DefId, CRATE_DEF_INDEX, LOCAL_CRATE};\n use rustc::hir::map::Definitions;\n-use rustc::hir::{self, Bool, Char, Float, Int, PrimTy, Str, Uint};\n+use rustc::hir::{Bool, Char, Float, Int, PrimTy, Str, Uint};\n use rustc::hir::{GlobMap, TraitMap};\n use rustc::lint;\n use rustc::middle::cstore::{CrateStore, MetadataLoaderDyn};\n@@ -1026,7 +1026,7 @@ impl<'a, 'b> DefIdTree for &'a Resolver<'b> {\n \n /// This interface is used through the AST\u2192HIR step, to embed full paths into the HIR. After that\n /// the resolver is no longer needed as all the relevant information is inline.\n-impl<'a> hir::lowering::Resolver for Resolver<'a> {\n+impl rustc_ast_lowering::Resolver for Resolver<'_> {\n     fn cstore(&self) -> &dyn CrateStore {\n         self.cstore()\n     }"}, {"sha": "6fdf4efc1815afb7d56f60e2c3bc5ae6c30b1782", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52179c56be0df07d817a143577d3e082e0a7cfa5/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=52179c56be0df07d817a143577d3e082e0a7cfa5", "patch": "@@ -6,8 +6,8 @@ use errors::{Applicability, DiagnosticBuilder};\n use rustc::hir::{self, is_range_literal, print, Node};\n use rustc::ty::adjustment::AllowTwoPhase;\n use rustc::ty::{self, AssocItem, Ty};\n-use syntax::symbol::sym;\n use syntax::util::parser::PREC_POSTFIX;\n+use syntax_pos::symbol::sym;\n use syntax_pos::Span;\n \n use super::method::probe;"}]}