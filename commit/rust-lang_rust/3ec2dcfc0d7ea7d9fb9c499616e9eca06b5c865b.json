{"sha": "3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlYzJkY2ZjMGQ3ZWE3ZDlmYjljNDk5NjE2ZTllY2EwNmI1Yzg2NWI=", "commit": {"author": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-06-04T17:00:21Z"}, "committer": {"name": "Avi Dessauer", "email": "avi.the.coder@gmail.com", "date": "2020-06-04T17:00:21Z"}, "message": "Address review", "tree": {"sha": "09dcef049503f9e197585da9045659ab8f32afb5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09dcef049503f9e197585da9045659ab8f32afb5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b", "html_url": "https://github.com/rust-lang/rust/commit/3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b/comments", "author": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Avi-D-coder", "id": 29133776, "node_id": "MDQ6VXNlcjI5MTMzNzc2", "avatar_url": "https://avatars.githubusercontent.com/u/29133776?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Avi-D-coder", "html_url": "https://github.com/Avi-D-coder", "followers_url": "https://api.github.com/users/Avi-D-coder/followers", "following_url": "https://api.github.com/users/Avi-D-coder/following{/other_user}", "gists_url": "https://api.github.com/users/Avi-D-coder/gists{/gist_id}", "starred_url": "https://api.github.com/users/Avi-D-coder/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Avi-D-coder/subscriptions", "organizations_url": "https://api.github.com/users/Avi-D-coder/orgs", "repos_url": "https://api.github.com/users/Avi-D-coder/repos", "events_url": "https://api.github.com/users/Avi-D-coder/events{/privacy}", "received_events_url": "https://api.github.com/users/Avi-D-coder/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5588b9e19cbbc18b1afd9afcc9bab2bce2b711c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5588b9e19cbbc18b1afd9afcc9bab2bce2b711c", "html_url": "https://github.com/rust-lang/rust/commit/a5588b9e19cbbc18b1afd9afcc9bab2bce2b711c"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "0d3568e5fc0bcd99ddf7a64fd61668b0cd25ef11", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=3ec2dcfc0d7ea7d9fb9c499616e9eca06b5c865b", "patch": "@@ -119,9 +119,11 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         && (match p.nth(1) {\n             T![impl] => true,\n             T![unsafe] => {\n-                if T![impl] == p.nth(2) {\n+                // test default_unsafe_impl\n+                // default unsafe impl Foo {}\n+                if p.nth(2) == T![impl] {\n                     p.bump_remap(T![default]);\n-                    p.bump_remap(T![unsafe]);\n+                    p.bump(T![unsafe]);\n                     has_mods = true;\n                 }\n                 false\n@@ -195,9 +197,6 @@ pub(super) fn maybe_item(p: &mut Parser, m: Marker, flavor: ItemFlavor) -> Resul\n         // test default_impl\n         // default impl Foo {}\n \n-        // test default_unsafe_impl\n-        // default unsafe impl Foo {}\n-\n         // test_err default_fn_type\n         // trait T {\n         //     default type T = Bar;"}]}