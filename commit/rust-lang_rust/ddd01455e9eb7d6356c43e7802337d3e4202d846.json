{"sha": "ddd01455e9eb7d6356c43e7802337d3e4202d846", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRkZDAxNDU1ZTllYjdkNjM1NmM0M2U3ODAyMzM3ZDNlNDIwMmQ4NDY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-09-06T08:09:25Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-09-06T08:09:25Z"}, "message": "Suggest changing literals instead of calling methods (fixes #44307)", "tree": {"sha": "f00812a7fec560e46b0725ced9f571c01442cff3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f00812a7fec560e46b0725ced9f571c01442cff3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddd01455e9eb7d6356c43e7802337d3e4202d846", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlmvrVAACgkQpp+NIls6\n19kZdA/9H7wE2O/es6VR5UPHDtPY1rm2PTEOmDnsdyUBQN3VaXPony6arQu3S2PA\nGMxRa6ifwqVqGjmKobV/lWkBoivxmB+R6cdpT3F2ayN2qkhcob/aIPh1Nlk9peM6\nO3LkKVWwLAaZBLdbJm41sG9dXvP4iZslv9pTnaYm57b0OyZMMQrrAtCHc5KC+6u2\n+LqwnHKeIFxno3b0YByNYjE692cnXffPVQa/OSqrtAR9QfeDvqdhhimna9lgM535\nHwGpW6StmN+ZefXaTtKKSfoX2nKBwTRxxcmcs4UFPltSOxKlFeL4LFMA7Hq4vcim\nBtj6KHVFxwTDufzxJn7xseLIZcpGR/1muWn1njVu8C5aJOfxjXU8x6yc1ApEz3r8\neQkd/SRxSo8P8sGp8za0YzQOHoQ8fLca5K3lF0oCpaszUhEaDgn+r+6TBecZWIqk\nWBudZvIYxx64uU3EnPGOnjOGoTuMISthM7zGpANbPYs4xvaAOse1nMdClbU9Qock\nmK9Q+2kBvtL9Qg9hRhJctDeeY5E5Px2wr25gwOrcgNn3ZzprHHvc0eRLf6bHmOSC\n7rgAz3z+f8orMgWTgwmX7T08EDvl49FAsqeIgGnboHIBdNC2V4v0DWia/4zip+5e\neH71wA6qjxKBamMowXs40a0YbpPM7q+l9B+iX8rMc6sx89QEQkA=\n=ZDYk\n-----END PGP SIGNATURE-----", "payload": "tree f00812a7fec560e46b0725ced9f571c01442cff3\nparent 2f1ef9ef1181298d46e79d5dde6bafeb6483926f\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504685365 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1504685365 +0200\n\nSuggest changing literals instead of calling methods (fixes #44307)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddd01455e9eb7d6356c43e7802337d3e4202d846", "html_url": "https://github.com/rust-lang/rust/commit/ddd01455e9eb7d6356c43e7802337d3e4202d846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddd01455e9eb7d6356c43e7802337d3e4202d846/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f1ef9ef1181298d46e79d5dde6bafeb6483926f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f1ef9ef1181298d46e79d5dde6bafeb6483926f", "html_url": "https://github.com/rust-lang/rust/commit/2f1ef9ef1181298d46e79d5dde6bafeb6483926f"}], "stats": {"total": 72, "additions": 71, "deletions": 1}, "files": [{"sha": "65900dc3f36e7d8242903846e0995187ac6858ee", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/ddd01455e9eb7d6356c43e7802337d3e4202d846/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd01455e9eb7d6356c43e7802337d3e4202d846/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=ddd01455e9eb7d6356c43e7802337d3e4202d846", "patch": "@@ -207,7 +207,29 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n                  expected: Ty<'tcx>)\n                  -> Option<String> {\n         match (&expected.sty, &checked_ty.sty) {\n-            (&ty::TyRef(_, _), &ty::TyRef(_, _)) => None,\n+            (&ty::TyRef(_, exp), &ty::TyRef(_, check)) => match (&exp.ty.sty, &check.ty.sty) {\n+                (&ty::TyStr, &ty::TyArray(arr, _)) |\n+                (&ty::TyStr, &ty::TySlice(arr)) if arr == self.tcx.types.u8 => {\n+                    if let hir::ExprLit(_) = expr.node {\n+                        let sp = self.sess().codemap().call_span_if_macro(expr.span);\n+                        if let Ok(src) = self.tcx.sess.codemap().span_to_snippet(sp) {\n+                            return Some(format!(\"try `{}`\", &src[1..]));\n+                        }\n+                    }\n+                    None\n+                },\n+                (&ty::TyArray(arr, _), &ty::TyStr) |\n+                (&ty::TySlice(arr), &ty::TyStr) if arr == self.tcx.types.u8 => {\n+                    if let hir::ExprLit(_) = expr.node {\n+                        let sp = self.sess().codemap().call_span_if_macro(expr.span);\n+                        if let Ok(src) = self.tcx.sess.codemap().span_to_snippet(sp) {\n+                            return Some(format!(\"try `b{}`\", src));\n+                        }\n+                    }\n+                    None\n+                }\n+                _ => None,\n+            },\n             (&ty::TyRef(_, mutability), _) => {\n                 // Check if it can work when put into a ref. For example:\n                 //"}, {"sha": "0fd7d3a9d869e82757f7c0d6af98719219862cf8", "filename": "src/test/ui/str-lit-type-mismatch.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/ddd01455e9eb7d6356c43e7802337d3e4202d846/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddd01455e9eb7d6356c43e7802337d3e4202d846/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.rs?ref=ddd01455e9eb7d6356c43e7802337d3e4202d846", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+fn main() {\n+    let x: &[u8] = \"foo\";\n+    let y: &[u8; 4] = \"baaa\";\n+    let z: &str = b\"foo\";\n+}"}, {"sha": "47418522df8ac611c92edc119db7fbcc3da7344f", "filename": "src/test/ui/str-lit-type-mismatch.stderr", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/ddd01455e9eb7d6356c43e7802337d3e4202d846/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddd01455e9eb7d6356c43e7802337d3e4202d846/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstr-lit-type-mismatch.stderr?ref=ddd01455e9eb7d6356c43e7802337d3e4202d846", "patch": "@@ -0,0 +1,32 @@\n+error[E0308]: mismatched types\n+  --> $DIR/str-lit-type-mismatch.rs:13:20\n+   |\n+13 |     let x: &[u8] = \"foo\";\n+   |                    ^^^^^ expected slice, found str\n+   |\n+   = note: expected type `&[u8]`\n+              found type `&'static str`\n+   = help: try `b\"foo\"`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/str-lit-type-mismatch.rs:14:23\n+   |\n+14 |     let y: &[u8; 4] = \"baaa\";\n+   |                       ^^^^^^ expected array of 4 elements, found str\n+   |\n+   = note: expected type `&[u8; 4]`\n+              found type `&'static str`\n+   = help: try `b\"baaa\"`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/str-lit-type-mismatch.rs:15:19\n+   |\n+15 |     let z: &str = b\"foo\";\n+   |                   ^^^^^^ expected str, found array of 3 elements\n+   |\n+   = note: expected type `&str`\n+              found type `&'static [u8; 3]`\n+   = help: try `\"foo\"`\n+\n+error: aborting due to 3 previous errors\n+"}]}