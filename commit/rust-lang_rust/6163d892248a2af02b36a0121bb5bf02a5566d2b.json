{"sha": "6163d892248a2af02b36a0121bb5bf02a5566d2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxNjNkODkyMjQ4YTJhZjAyYjM2YTAxMjFiYjViZjAyYTU1NjZkMmI=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-09-26T13:18:38Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-10-03T12:16:24Z"}, "message": "Improve code", "tree": {"sha": "1938dcdbef73a5fa14d73c3002987da9e0cf26c2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1938dcdbef73a5fa14d73c3002987da9e0cf26c2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6163d892248a2af02b36a0121bb5bf02a5566d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6163d892248a2af02b36a0121bb5bf02a5566d2b", "html_url": "https://github.com/rust-lang/rust/commit/6163d892248a2af02b36a0121bb5bf02a5566d2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6163d892248a2af02b36a0121bb5bf02a5566d2b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4a3746e67b06bfd3bd11c8cae1c3acab944211bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a3746e67b06bfd3bd11c8cae1c3acab944211bf", "html_url": "https://github.com/rust-lang/rust/commit/4a3746e67b06bfd3bd11c8cae1c3acab944211bf"}], "stats": {"total": 71, "additions": 58, "deletions": 13}, "files": [{"sha": "79035ba79ffd1a4d6442ea8a5dbaff5653c1bb57", "filename": "src/librustdoc/passes/html_tags.rs", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6163d892248a2af02b36a0121bb5bf02a5566d2b/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6163d892248a2af02b36a0121bb5bf02a5566d2b/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fhtml_tags.rs?ref=6163d892248a2af02b36a0121bb5bf02a5566d2b", "patch": "@@ -45,18 +45,20 @@ fn drop_tag(\n     range: Range<usize>,\n     f: &impl Fn(&str, &Range<usize>),\n ) {\n-    if let Some(pos) = tags.iter().position(|(t, _)| *t == tag_name) {\n-        for _ in pos + 1..tags.len() {\n-            if ALLOWED_UNCLOSED.iter().find(|&at| at == &tags[pos + 1].0).is_some() {\n+    if let Some(pos) = tags.iter().rev().position(|(t, _)| *t == tag_name) {\n+        // Because this is from a `rev` iterator, the position is reversed as well!\n+        let pos = tags.len() - 1 - pos;\n+        for (last_tag_name, last_tag_span) in tags.drain(pos + 1..) {\n+            if ALLOWED_UNCLOSED.iter().any(|&at| at == &last_tag_name) {\n                 continue;\n             }\n             // `tags` is used as a queue, meaning that everything after `pos` is included inside it.\n             // So `<h2><h3></h2>` will look like `[\"h2\", \"h3\"]`. So when closing `h2`, we will still\n             // have `h3`, meaning the tag wasn't closed as it should have.\n-            f(&format!(\"unclosed HTML tag `{}`\", tags[pos + 1].0), &tags[pos + 1].1);\n-            tags.remove(pos + 1);\n+            f(&format!(\"unclosed HTML tag `{}`\", last_tag_name), &last_tag_span);\n         }\n-        tags.remove(pos);\n+        // Remove the `tag_name` that was originally closed\n+        tags.pop();\n     } else {\n         // It can happen for example in this case: `<h2></script></h2>` (the `h2` tag isn't required\n         // but it helps for the visualization).\n@@ -84,7 +86,13 @@ fn extract_tag(\n                     tag_name.push(*c);\n                 } else {\n                     if !tag_name.is_empty() {\n-                        let r = Range { start: range.start + start_pos, end: range.start + pos };\n+                        let mut r =\n+                            Range { start: range.start + start_pos, end: range.start + pos };\n+                        if *c == '>' {\n+                            // In case we have a tag without attribute, we can consider the span to\n+                            // refer to it fully.\n+                            r.end += 1;\n+                        }\n                         if is_closing {\n                             drop_tag(tags, tag_name, r, f);\n                         } else {"}, {"sha": "51bbae2a0b64e1e86ca5ca62748c4cce75b05cdc", "filename": "src/test/rustdoc-ui/invalid-html-tags.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/6163d892248a2af02b36a0121bb5bf02a5566d2b/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6163d892248a2af02b36a0121bb5bf02a5566d2b/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.rs?ref=6163d892248a2af02b36a0121bb5bf02a5566d2b", "patch": "@@ -20,3 +20,22 @@ pub fn foo() {}\n /// </hello>\n //~^ ERROR unopened HTML tag `hello`\n pub fn f() {}\n+\n+/// <div>\n+///    <br/> <p>\n+//~^ ERROR unclosed HTML tag `p`\n+/// </div>\n+pub fn a() {}\n+\n+/// <div>\n+///   <p>\n+///      <div></div>\n+///   </p>\n+/// </div>\n+pub fn b() {}\n+\n+/// <div style=\"hello\">\n+//~^ ERROR unclosed HTML tag `div`\n+///   <h3>\n+//~^ ERROR unclosed HTML tag `h3`\n+pub fn c() {}"}, {"sha": "d2e9704a2279611fd342ed1aba43feb2de8c9239", "filename": "src/test/rustdoc-ui/invalid-html-tags.stderr", "status": "modified", "additions": 24, "deletions": 6, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6163d892248a2af02b36a0121bb5bf02a5566d2b/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6163d892248a2af02b36a0121bb5bf02a5566d2b/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-html-tags.stderr?ref=6163d892248a2af02b36a0121bb5bf02a5566d2b", "patch": "@@ -2,7 +2,7 @@ error: unclosed HTML tag `unknown`\n   --> $DIR/invalid-html-tags.rs:7:5\n    |\n LL | /// <unknown>\n-   |     ^^^^^^^^\n+   |     ^^^^^^^^^\n    |\n note: the lint level is defined here\n   --> $DIR/invalid-html-tags.rs:1:9\n@@ -14,25 +14,43 @@ error: unclosed HTML tag `script`\n   --> $DIR/invalid-html-tags.rs:10:5\n    |\n LL | /// <script>\n-   |     ^^^^^^^\n+   |     ^^^^^^^^\n \n error: unclosed HTML tag `h2`\n   --> $DIR/invalid-html-tags.rs:15:7\n    |\n LL | ///   <h2>\n-   |       ^^^\n+   |       ^^^^\n \n error: unclosed HTML tag `h3`\n   --> $DIR/invalid-html-tags.rs:17:9\n    |\n LL | ///     <h3>\n-   |         ^^^\n+   |         ^^^^\n \n error: unopened HTML tag `hello`\n   --> $DIR/invalid-html-tags.rs:20:5\n    |\n LL | /// </hello>\n-   |     ^^^^^^^\n+   |     ^^^^^^^^\n+\n+error: unclosed HTML tag `p`\n+  --> $DIR/invalid-html-tags.rs:25:14\n+   |\n+LL | ///    <br/> <p>\n+   |              ^^^\n+\n+error: unclosed HTML tag `div`\n+  --> $DIR/invalid-html-tags.rs:37:5\n+   |\n+LL | /// <div style=\"hello\">\n+   |     ^^^^\n+\n+error: unclosed HTML tag `h3`\n+  --> $DIR/invalid-html-tags.rs:39:7\n+   |\n+LL | ///   <h3>\n+   |       ^^^^\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 8 previous errors\n "}]}