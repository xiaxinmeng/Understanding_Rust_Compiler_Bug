{"sha": "136a83ad4d4f959c699bd3f4a801fc54eea033df", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzNmE4M2FkNGQ0Zjk1OWM2OTliZDNmNGE4MDFmYzU0ZWVhMDMzZGY=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-21T12:32:40Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-05-31T23:59:33Z"}, "message": "fallout in tests\n\nin some cases we give more specific messages or fewer\nduplicates, now that we have cache and make fewer region variables", "tree": {"sha": "f80e5c691fc29ef4b3cd6488be76d1bdfe4cc33c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f80e5c691fc29ef4b3cd6488be76d1bdfe4cc33c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/136a83ad4d4f959c699bd3f4a801fc54eea033df", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/136a83ad4d4f959c699bd3f4a801fc54eea033df", "html_url": "https://github.com/rust-lang/rust/commit/136a83ad4d4f959c699bd3f4a801fc54eea033df", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/136a83ad4d4f959c699bd3f4a801fc54eea033df/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad97f296d31df0a9cd48627b439eaa764a4a3ded", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad97f296d31df0a9cd48627b439eaa764a4a3ded", "html_url": "https://github.com/rust-lang/rust/commit/ad97f296d31df0a9cd48627b439eaa764a4a3ded"}], "stats": {"total": 17, "additions": 6, "deletions": 11}, "files": [{"sha": "ceac7e968f65c1bceaa43574b75712d3ccd8e7ec", "filename": "src/test/compile-fail/issue-16048.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fissue-16048.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fissue-16048.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16048.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -28,7 +28,7 @@ impl<'a> Test<'a> for Foo<'a> {\n \n impl<'a> NoLifetime for Foo<'a> {\n     fn get<'p, T : Test<'a>>(&self) -> T {\n-//~^ ERROR lifetime parameters or bounds on method `get` do not match the trait declaration\n+//~^ ERROR E0195\n         return *self as T;\n     }\n }"}, {"sha": "dac1625159748d81fcb72e92062ee1b505b9107f", "filename": "src/test/compile-fail/issue-20831-debruijn.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fissue-20831-debruijn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fissue-20831-debruijn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-20831-debruijn.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -39,7 +39,6 @@ impl<'a> Publisher<'a> for MyStruct<'a> {\n         // Not obvious, but there is an implicit lifetime here -------^\n         //~^^ ERROR cannot infer\n         //~|  ERROR cannot infer\n-        //~|  ERROR cannot infer\n         //\n         // The fact that `Publisher` is using an implicit lifetime is\n         // what was causing the debruijn accounting to be off, so"}, {"sha": "6b22d434804ffecafc2b56e71c8140e1ae6e5428", "filename": "src/test/compile-fail/lifetime-inference-give-expl-lifetime-param-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Flifetime-inference-give-expl-lifetime-param-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Flifetime-inference-give-expl-lifetime-param-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flifetime-inference-give-expl-lifetime-param-3.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -14,7 +14,7 @@ use std::marker::PhantomData;\n \n struct Bar<'x, 'y, 'z> { bar: &'y i32, baz: i32, marker: PhantomData<(&'x(),&'y(),&'z())> }\n fn bar1<'a>(x: &Bar) -> (&'a i32, &'a i32, &'a i32) {\n-    //~^ HELP: consider using an explicit lifetime parameter as shown: fn bar1<'a>(x: &'a Bar) -> (&'a i32, &'a i32, &'a i32)\n+    //~^ HELP consider using an explicit lifetime parameter as shown: fn bar1<'b, 'c, 'a>(x: &'a Bar<'b, 'a, 'c>) -> (&'a i32, &'a i32, &'a i32)\n     (x.bar, &x.baz, &x.baz)\n     //~^ ERROR E0312\n     //~| ERROR cannot infer"}, {"sha": "e34a3c4569d0a4c451d053ff13837bd0e9c7abad", "filename": "src/test/compile-fail/lifetime-inference-give-expl-lifetime-param.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Flifetime-inference-give-expl-lifetime-param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Flifetime-inference-give-expl-lifetime-param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flifetime-inference-give-expl-lifetime-param.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -49,7 +49,7 @@ struct Baz<'x> {\n \n impl<'a> Baz<'a> {\n     fn baz2<'b>(&self, x: &isize) -> (&'b isize, &'b isize) {\n-        //~^ HELP consider using an explicit lifetime parameter as shown: fn baz2<'b>(&self, x: &'b isize) -> (&'a isize, &'a isize)\n+        //~^ HELP consider using an explicit lifetime parameter as shown: fn baz2<'b>(&self, x: &'a isize) -> (&'a isize, &'a isize)\n         (self.bar, x) //~ ERROR E0312\n         //~^ ERROR E0312\n     }"}, {"sha": "eaf9a750570dbdb8966c100fe112068a9f02827c", "filename": "src/test/compile-fail/regions-early-bound-error-method.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fregions-early-bound-error-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fregions-early-bound-error-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-early-bound-error-method.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -28,11 +28,7 @@ impl<'a> GetRef<'a> for Box<'a> {\n impl<'a> Box<'a> {\n     fn or<'b,G:GetRef<'b>>(&self, g2: G) -> &'a isize {\n         g2.get()\n-        //~^ ERROR mismatched types\n-        //~| expected type `&'a isize`\n-        //~| found type `&'b isize`\n-        //~| lifetime mismatch\n-\n+        //~^ ERROR E0312\n     }\n }\n "}, {"sha": "90a3395004776a2310e0164af183973d322ab323", "filename": "src/test/compile-fail/regions-early-bound-error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fregions-early-bound-error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fregions-early-bound-error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-early-bound-error.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -27,7 +27,7 @@ impl<'a,T:Clone> GetRef<'a,T> for Box<'a,T> {\n \n fn get<'a,'b,G:GetRef<'a, isize>>(g1: G, b: &'b isize) -> &'b isize {\n     g1.get()\n-    //~^ ERROR mismatched types\n+    //~^ ERROR E0312\n }\n \n fn main() {"}, {"sha": "87b5efbfadd865c5e1afa30690f1106f65b460b0", "filename": "src/test/compile-fail/regions-infer-invariance-due-to-mutability-4.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/136a83ad4d4f959c699bd3f4a801fc54eea033df/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fregions-infer-invariance-due-to-mutability-4.rs?ref=136a83ad4d4f959c699bd3f4a801fc54eea033df", "patch": "@@ -10,7 +10,7 @@\n \n \n struct Invariant<'a> {\n-    f: Box<for<'b> FnOnce() -> &'b mut &'a isize + 'static>,\n+    f: Box<FnOnce() -> *mut &'a isize + 'static>,\n }\n \n fn to_same_lifetime<'r>(b_isize: Invariant<'r>) {"}]}