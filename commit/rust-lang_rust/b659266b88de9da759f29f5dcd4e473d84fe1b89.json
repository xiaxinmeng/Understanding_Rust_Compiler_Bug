{"sha": "b659266b88de9da759f29f5dcd4e473d84fe1b89", "node_id": "C_kwDOAAsO6NoAKGI2NTkyNjZiODhkZTlkYTc1OWYyOWY1ZGNkNGU0NzNkODRmZTFiODk", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2022-05-21T09:39:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-21T09:39:53Z"}, "message": "Rollup merge of #97237 - oberien:patch-1, r=Dylan-DPC\n\nAdd some more weird-exprs\n\nContinuing from https://github.com/rust-lang/rust/pull/86713 (which stalled due to a thinking emoji), I'd like to \"improve\" the `weird-exprs.rs`-file (as I can't reopen that PR).", "tree": {"sha": "8612528aa39ebd0b366f6f4f4038c9b9a009e4d1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8612528aa39ebd0b366f6f4f4038c9b9a009e4d1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b659266b88de9da759f29f5dcd4e473d84fe1b89", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiiLNpCRBK7hj4Ov3rIwAA5SAIAF4lsLOM4fZWSm5/+1u+swYN\nehfZhWJaU40+JMUaPU8OJ21ynWE1J3yARt+FFuLh14rNf4+mGiU/80gthKbw6F3E\nLwbtzQCzP+uuYw3/+btxjHzFPZzBJBu6E227If6ePN5PN13+6ugVBEviBQrRtsDX\nEy5zfzMDjMStDc8CNtLcXdgtm/b6T9Scqkmt3yDTJd8VqJ3dyjWPivZWBxWkDHST\nfgf1YZwbbG1vFo+8Hpvr8p77c//5OJnBGrnz7h4WpdhT+UDeMAJ4BT+M+x10jRy1\n+zx89j0Hn5niFBOfgi3wBDIAFBg/J3g1MojV1L2ANVCBCf97PgJHEiz2mpuA3As=\n=G+9K\n-----END PGP SIGNATURE-----\n", "payload": "tree 8612528aa39ebd0b366f6f4f4038c9b9a009e4d1\nparent 85dfd065b1b691a4b2bfb2287c9ec55921c3fd43\nparent 6491eb1e6c9fac20faad11e5da16db3185b2410d\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1653125993 +0200\ncommitter GitHub <noreply@github.com> 1653125993 +0200\n\nRollup merge of #97237 - oberien:patch-1, r=Dylan-DPC\n\nAdd some more weird-exprs\n\nContinuing from https://github.com/rust-lang/rust/pull/86713 (which stalled due to a thinking emoji), I'd like to \"improve\" the `weird-exprs.rs`-file (as I can't reopen that PR).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b659266b88de9da759f29f5dcd4e473d84fe1b89", "html_url": "https://github.com/rust-lang/rust/commit/b659266b88de9da759f29f5dcd4e473d84fe1b89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b659266b88de9da759f29f5dcd4e473d84fe1b89/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "85dfd065b1b691a4b2bfb2287c9ec55921c3fd43", "url": "https://api.github.com/repos/rust-lang/rust/commits/85dfd065b1b691a4b2bfb2287c9ec55921c3fd43", "html_url": "https://github.com/rust-lang/rust/commit/85dfd065b1b691a4b2bfb2287c9ec55921c3fd43"}, {"sha": "6491eb1e6c9fac20faad11e5da16db3185b2410d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6491eb1e6c9fac20faad11e5da16db3185b2410d", "html_url": "https://github.com/rust-lang/rust/commit/6491eb1e6c9fac20faad11e5da16db3185b2410d"}], "stats": {"total": 28, "additions": 27, "deletions": 1}, "files": [{"sha": "4066bcf3badd781019f81e523e342f98e7f993ee", "filename": "src/test/ui/weird-exprs.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/b659266b88de9da759f29f5dcd4e473d84fe1b89/src%2Ftest%2Fui%2Fweird-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b659266b88de9da759f29f5dcd4e473d84fe1b89/src%2Ftest%2Fui%2Fweird-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fweird-exprs.rs?ref=b659266b88de9da759f29f5dcd4e473d84fe1b89", "patch": "@@ -1,11 +1,13 @@\n // run-pass\n \n #![feature(generators)]\n+#![feature(unboxed_closures, fn_traits)]\n \n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n #![allow(unreachable_code)]\n #![allow(unused_braces, unused_must_use, unused_parens)]\n+#![allow(uncommon_codepoints, confusable_idents)]\n \n #![recursion_limit = \"256\"]\n \n@@ -115,7 +117,7 @@ fn union() {\n }\n \n fn special_characters() {\n-    let val = !((|(..):(_,_),__@_|__)((&*\"\\\\\",'\ud83e\udd14')/**/,{})=={&[..=..][..];})//\n+    let val = !((|(..):(_,_),(|__@_|__)|__)((&*\"\\\\\",'\ud83e\udd14')/**/,{})=={&[..=..][..];})//\n     ;\n     assert!(!val);\n }\n@@ -164,6 +166,28 @@ fn monkey_barrel() {\n     assert_eq!(val, ());\n }\n \n+fn \ud835\ude8c\ud835\ude98\ud835\ude97\ud835\ude9d\ud835\ude92\ud835\ude97\ud835\ude9e\ud835\ude8e() {\n+    type \ud835\ude95\ud835\ude98\ud835\ude98\ud835\ude99 = i32;\n+    fn \ud835\ude8b\ud835\ude9b\ud835\ude8e\ud835\ude8a\ud835\ude94() -> \ud835\ude95\ud835\ude98\ud835\ude98\ud835\ude99 {\n+        let \ud835\ude9b\ud835\ude8e\ud835\ude9d\ud835\ude9e\ud835\ude9b\ud835\ude97 = 42;\n+        return \ud835\ude9b\ud835\ude8e\ud835\ude9d\ud835\ude9e\ud835\ude9b\ud835\ude97;\n+    }\n+    assert_eq!(loop {\n+        break \ud835\ude8b\ud835\ude9b\ud835\ude8e\ud835\ude8a\ud835\ude94 ();\n+    }, 42);\n+}\n+\n+fn function() {\n+    struct foo;\n+    impl FnOnce<()> for foo {\n+        type Output = foo;\n+        extern \"rust-call\" fn call_once(self, _args: ()) -> Self::Output {\n+            foo\n+        }\n+    }\n+    let foo = foo () ()() ()()() ()()()() ()()()()();\n+}\n+\n fn bathroom_stall() {\n     let mut i = 1;\n     matches!(2, _|_|_|_|_|_ if (i+=1) != (i+=1));\n@@ -189,5 +213,7 @@ pub fn main() {\n     i_yield();\n     match_nested_if();\n     monkey_barrel();\n+    \ud835\ude8c\ud835\ude98\ud835\ude97\ud835\ude9d\ud835\ude92\ud835\ude97\ud835\ude9e\ud835\ude8e();\n+    function();\n     bathroom_stall();\n }"}]}