{"sha": "688f60735293ab1d48fc152f586cebf212937715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4OGY2MDczNTI5M2FiMWQ0OGZjMTUyZjU4NmNlYmYyMTI5Mzc3MTU=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-02T21:24:25Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-02-02T21:24:25Z"}, "message": "Rollup merge of #31347 - GuillaumeGomez:fix_E0118, r=Manishearth\n\nr? @eddyb", "tree": {"sha": "c3250088263e86248a2ffaff9c1283a5bbb1d94a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3250088263e86248a2ffaff9c1283a5bbb1d94a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/688f60735293ab1d48fc152f586cebf212937715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/688f60735293ab1d48fc152f586cebf212937715", "html_url": "https://github.com/rust-lang/rust/commit/688f60735293ab1d48fc152f586cebf212937715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/688f60735293ab1d48fc152f586cebf212937715/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f55995bad2466c8bf3eaeeb6afaa46b8167c1992", "url": "https://api.github.com/repos/rust-lang/rust/commits/f55995bad2466c8bf3eaeeb6afaa46b8167c1992", "html_url": "https://github.com/rust-lang/rust/commit/f55995bad2466c8bf3eaeeb6afaa46b8167c1992"}, {"sha": "db63a55b29bebf50977dd72865a81905a5f9427d", "url": "https://api.github.com/repos/rust-lang/rust/commits/db63a55b29bebf50977dd72865a81905a5f9427d", "html_url": "https://github.com/rust-lang/rust/commit/db63a55b29bebf50977dd72865a81905a5f9427d"}], "stats": {"total": 51, "additions": 39, "deletions": 12}, "files": [{"sha": "fb257f0e673288fe44c87dd0c453c13bbd586bfe", "filename": "src/librustc_typeck/coherence/orphan.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/688f60735293ab1d48fc152f586cebf212937715/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/688f60735293ab1d48fc152f586cebf212937715/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Forphan.rs?ref=688f60735293ab1d48fc152f586cebf212937715", "patch": "@@ -209,9 +209,12 @@ impl<'cx, 'tcx> OrphanChecker<'cx, 'tcx> {\n                         return;\n                     }\n                     _ => {\n-                        span_err!(self.tcx.sess, item.span, E0118,\n-                                  \"no base type found for inherent implementation; \\\n-                                   implement a trait or new type instead\");\n+                        struct_span_err!(self.tcx.sess, item.span, E0118,\n+                                         \"no base type found for inherent implementation\")\n+                        .span_help(item.span,\n+                                   \"either implement a trait on it or create a newtype to wrap it \\\n+                                    instead\")\n+                        .emit();\n                         return;\n                     }\n                 }"}, {"sha": "f138b997f4cc32767e0191e19fa91a1ee454f444", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 33, "deletions": 9, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/688f60735293ab1d48fc152f586cebf212937715/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/688f60735293ab1d48fc152f586cebf212937715/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=688f60735293ab1d48fc152f586cebf212937715", "patch": "@@ -1489,22 +1489,46 @@ For information on the design of the orphan rules, see [RFC 1023].\n \"##,\n \n E0118: r##\"\n-Rust can't find a base type for an implementation you are providing, or the type\n-cannot have an implementation. For example, only a named type or a trait can\n-have an implementation:\n+You're trying to write an inherent implementation for something which isn't a\n+struct nor an enum. Erroneous code example:\n \n ```\n-type NineString = [char, ..9] // This isn't a named type (struct, enum or trait)\n-impl NineString {\n-    // Some code here\n+impl (u8, u8) { // error: no base type found for inherent implementation\n+    fn get_state(&self) -> String {\n+        // ...\n+    }\n+}\n+```\n+\n+To fix this error, please implement a trait on the type or wrap it in a struct.\n+Example:\n+\n+```\n+// we create a trait here\n+trait LiveLongAndProsper {\n+    fn get_state(&self) -> String;\n+}\n+\n+// and now you can implement it on (u8, u8)\n+impl LiveLongAndProsper for (u8, u8) {\n+    fn get_state(&self) -> String {\n+        \"He's dead, Jim!\".to_owned()\n+    }\n }\n ```\n \n-In the other, simpler case, Rust just can't find the type you are providing an\n-impelementation for:\n+Alternatively, you can create a newtype. A newtype is a wrapping tuple-struct.\n+For example, `NewType` is a newtype over `Foo` in `struct NewType(Foo)`.\n+Example:\n \n ```\n-impl SomeTypeThatDoesntExist {  }\n+struct TypeWrapper((u8, u8));\n+\n+impl TypeWrapper {\n+    fn get_state(&self) -> String {\n+        \"Fascinating!\".to_owned()\n+    }\n+}\n ```\n \"##,\n "}]}