{"sha": "5ffc1abc92418149a97ba66a62c56591d353fd65", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZmMxYWJjOTI0MTgxNDlhOTdiYTY2YTYyYzU2NTkxZDM1M2ZkNjU=", "commit": {"author": {"name": "Yashhwanth Ram", "email": "ryr397@gmail.com", "date": "2020-04-12T06:42:46Z"}, "committer": {"name": "Yashhwanth Ram", "email": "ryr397@gmail.com", "date": "2020-04-12T06:45:07Z"}, "message": "Add blessed tests after compiler message fix", "tree": {"sha": "44d592abb98f506d827ee85d64ae697c61d1b4e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44d592abb98f506d827ee85d64ae697c61d1b4e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ffc1abc92418149a97ba66a62c56591d353fd65", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ffc1abc92418149a97ba66a62c56591d353fd65", "html_url": "https://github.com/rust-lang/rust/commit/5ffc1abc92418149a97ba66a62c56591d353fd65", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ffc1abc92418149a97ba66a62c56591d353fd65/comments", "author": {"login": "ryr3", "id": 17092480, "node_id": "MDQ6VXNlcjE3MDkyNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/17092480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryr3", "html_url": "https://github.com/ryr3", "followers_url": "https://api.github.com/users/ryr3/followers", "following_url": "https://api.github.com/users/ryr3/following{/other_user}", "gists_url": "https://api.github.com/users/ryr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryr3/subscriptions", "organizations_url": "https://api.github.com/users/ryr3/orgs", "repos_url": "https://api.github.com/users/ryr3/repos", "events_url": "https://api.github.com/users/ryr3/events{/privacy}", "received_events_url": "https://api.github.com/users/ryr3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ryr3", "id": 17092480, "node_id": "MDQ6VXNlcjE3MDkyNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/17092480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryr3", "html_url": "https://github.com/ryr3", "followers_url": "https://api.github.com/users/ryr3/followers", "following_url": "https://api.github.com/users/ryr3/following{/other_user}", "gists_url": "https://api.github.com/users/ryr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryr3/subscriptions", "organizations_url": "https://api.github.com/users/ryr3/orgs", "repos_url": "https://api.github.com/users/ryr3/repos", "events_url": "https://api.github.com/users/ryr3/events{/privacy}", "received_events_url": "https://api.github.com/users/ryr3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55464ebc8372cb2b489aaee84c324f5a6f6ba58d", "url": "https://api.github.com/repos/rust-lang/rust/commits/55464ebc8372cb2b489aaee84c324f5a6f6ba58d", "html_url": "https://github.com/rust-lang/rust/commit/55464ebc8372cb2b489aaee84c324f5a6f6ba58d"}], "stats": {"total": 290, "additions": 225, "deletions": 65}, "files": [{"sha": "b8502768e1d42847aed2d827e196c3355202eadb", "filename": "src/test/ui/integer-literal-suffix-inference.stderr", "status": "modified", "additions": 205, "deletions": 37, "changes": 242, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc1abc92418149a97ba66a62c56591d353fd65/src%2Ftest%2Fui%2Finteger-literal-suffix-inference.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc1abc92418149a97ba66a62c56591d353fd65/src%2Ftest%2Fui%2Finteger-literal-suffix-inference.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finteger-literal-suffix-inference.stderr?ref=5ffc1abc92418149a97ba66a62c56591d353fd65", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:32:11\n+  --> $DIR/integer-literal-suffix-inference.rs:38:11\n    |\n LL |     id_i8(a16);\n    |           ^^^ expected `i8`, found `i16`\n@@ -10,7 +10,7 @@ LL |     id_i8(a16.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:35:11\n+  --> $DIR/integer-literal-suffix-inference.rs:41:11\n    |\n LL |     id_i8(a32);\n    |           ^^^ expected `i8`, found `i32`\n@@ -21,7 +21,7 @@ LL |     id_i8(a32.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:38:11\n+  --> $DIR/integer-literal-suffix-inference.rs:44:11\n    |\n LL |     id_i8(a64);\n    |           ^^^ expected `i8`, found `i64`\n@@ -32,7 +32,18 @@ LL |     id_i8(a64.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:42:12\n+  --> $DIR/integer-literal-suffix-inference.rs:47:11\n+   |\n+LL |     id_i8(asize);\n+   |           ^^^^^ expected `i8`, found `isize`\n+   |\n+help: you can convert an `isize` to `i8` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_i8(asize.try_into().unwrap());\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:51:12\n    |\n LL |     id_i16(a8);\n    |            ^^\n@@ -41,7 +52,7 @@ LL |     id_i16(a8);\n    |            help: you can convert an `i8` to `i16`: `a8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:46:12\n+  --> $DIR/integer-literal-suffix-inference.rs:55:12\n    |\n LL |     id_i16(a32);\n    |            ^^^ expected `i16`, found `i32`\n@@ -52,7 +63,7 @@ LL |     id_i16(a32.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:49:12\n+  --> $DIR/integer-literal-suffix-inference.rs:58:12\n    |\n LL |     id_i16(a64);\n    |            ^^^ expected `i16`, found `i64`\n@@ -63,7 +74,18 @@ LL |     id_i16(a64.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:53:12\n+  --> $DIR/integer-literal-suffix-inference.rs:61:12\n+   |\n+LL |     id_i16(asize);\n+   |            ^^^^^ expected `i16`, found `isize`\n+   |\n+help: you can convert an `isize` to `i16` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_i16(asize.try_into().unwrap());\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:65:12\n    |\n LL |     id_i32(a8);\n    |            ^^\n@@ -72,7 +94,7 @@ LL |     id_i32(a8);\n    |            help: you can convert an `i8` to `i32`: `a8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:56:12\n+  --> $DIR/integer-literal-suffix-inference.rs:68:12\n    |\n LL |     id_i32(a16);\n    |            ^^^\n@@ -81,7 +103,7 @@ LL |     id_i32(a16);\n    |            help: you can convert an `i16` to `i32`: `a16.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:60:12\n+  --> $DIR/integer-literal-suffix-inference.rs:72:12\n    |\n LL |     id_i32(a64);\n    |            ^^^ expected `i32`, found `i64`\n@@ -92,7 +114,18 @@ LL |     id_i32(a64.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:64:12\n+  --> $DIR/integer-literal-suffix-inference.rs:75:12\n+   |\n+LL |     id_i32(asize);\n+   |            ^^^^^ expected `i32`, found `isize`\n+   |\n+help: you can convert an `isize` to `i32` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_i32(asize.try_into().unwrap());\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:79:12\n    |\n LL |     id_i64(a8);\n    |            ^^\n@@ -101,7 +134,7 @@ LL |     id_i64(a8);\n    |            help: you can convert an `i8` to `i64`: `a8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:67:12\n+  --> $DIR/integer-literal-suffix-inference.rs:82:12\n    |\n LL |     id_i64(a16);\n    |            ^^^\n@@ -110,7 +143,7 @@ LL |     id_i64(a16);\n    |            help: you can convert an `i16` to `i64`: `a16.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:70:12\n+  --> $DIR/integer-literal-suffix-inference.rs:85:12\n    |\n LL |     id_i64(a32);\n    |            ^^^\n@@ -119,7 +152,58 @@ LL |     id_i64(a32);\n    |            help: you can convert an `i32` to `i64`: `a32.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:76:11\n+  --> $DIR/integer-literal-suffix-inference.rs:89:12\n+   |\n+LL |     id_i64(asize);\n+   |            ^^^^^ expected `i64`, found `isize`\n+   |\n+help: you can convert an `isize` to `i64` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_i64(asize.try_into().unwrap());\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:93:14\n+   |\n+LL |     id_isize(a8);\n+   |              ^^\n+   |              |\n+   |              expected `isize`, found `i8`\n+   |              help: you can convert an `i8` to `isize`: `a8.into()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:96:14\n+   |\n+LL |     id_isize(a16);\n+   |              ^^^\n+   |              |\n+   |              expected `isize`, found `i16`\n+   |              help: you can convert an `i16` to `isize`: `a16.into()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:99:14\n+   |\n+LL |     id_isize(a32);\n+   |              ^^^ expected `isize`, found `i32`\n+   |\n+help: you can convert an `i32` to `isize` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_isize(a32.try_into().unwrap());\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:102:14\n+   |\n+LL |     id_isize(a64);\n+   |              ^^^ expected `isize`, found `i64`\n+   |\n+help: you can convert an `i64` to `isize` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_isize(a64.try_into().unwrap());\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:108:11\n    |\n LL |     id_i8(c16);\n    |           ^^^ expected `i8`, found `i16`\n@@ -130,7 +214,7 @@ LL |     id_i8(c16.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:79:11\n+  --> $DIR/integer-literal-suffix-inference.rs:111:11\n    |\n LL |     id_i8(c32);\n    |           ^^^ expected `i8`, found `i32`\n@@ -141,7 +225,7 @@ LL |     id_i8(c32.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:82:11\n+  --> $DIR/integer-literal-suffix-inference.rs:114:11\n    |\n LL |     id_i8(c64);\n    |           ^^^ expected `i8`, found `i64`\n@@ -152,7 +236,7 @@ LL |     id_i8(c64.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:86:12\n+  --> $DIR/integer-literal-suffix-inference.rs:118:12\n    |\n LL |     id_i16(c8);\n    |            ^^\n@@ -161,7 +245,7 @@ LL |     id_i16(c8);\n    |            help: you can convert an `i8` to `i16`: `c8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:90:12\n+  --> $DIR/integer-literal-suffix-inference.rs:122:12\n    |\n LL |     id_i16(c32);\n    |            ^^^ expected `i16`, found `i32`\n@@ -172,7 +256,7 @@ LL |     id_i16(c32.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:93:12\n+  --> $DIR/integer-literal-suffix-inference.rs:125:12\n    |\n LL |     id_i16(c64);\n    |            ^^^ expected `i16`, found `i64`\n@@ -183,7 +267,7 @@ LL |     id_i16(c64.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:97:12\n+  --> $DIR/integer-literal-suffix-inference.rs:129:12\n    |\n LL |     id_i32(c8);\n    |            ^^\n@@ -192,7 +276,7 @@ LL |     id_i32(c8);\n    |            help: you can convert an `i8` to `i32`: `c8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:100:12\n+  --> $DIR/integer-literal-suffix-inference.rs:132:12\n    |\n LL |     id_i32(c16);\n    |            ^^^\n@@ -201,7 +285,7 @@ LL |     id_i32(c16);\n    |            help: you can convert an `i16` to `i32`: `c16.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:104:12\n+  --> $DIR/integer-literal-suffix-inference.rs:136:12\n    |\n LL |     id_i32(c64);\n    |            ^^^ expected `i32`, found `i64`\n@@ -212,7 +296,7 @@ LL |     id_i32(c64.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:108:12\n+  --> $DIR/integer-literal-suffix-inference.rs:140:12\n    |\n LL |     id_i64(a8);\n    |            ^^\n@@ -221,7 +305,7 @@ LL |     id_i64(a8);\n    |            help: you can convert an `i8` to `i64`: `a8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:111:12\n+  --> $DIR/integer-literal-suffix-inference.rs:143:12\n    |\n LL |     id_i64(a16);\n    |            ^^^\n@@ -230,7 +314,7 @@ LL |     id_i64(a16);\n    |            help: you can convert an `i16` to `i64`: `a16.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:114:12\n+  --> $DIR/integer-literal-suffix-inference.rs:146:12\n    |\n LL |     id_i64(a32);\n    |            ^^^\n@@ -239,7 +323,7 @@ LL |     id_i64(a32);\n    |            help: you can convert an `i32` to `i64`: `a32.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:120:11\n+  --> $DIR/integer-literal-suffix-inference.rs:152:11\n    |\n LL |     id_u8(b16);\n    |           ^^^ expected `u8`, found `u16`\n@@ -250,7 +334,7 @@ LL |     id_u8(b16.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:123:11\n+  --> $DIR/integer-literal-suffix-inference.rs:155:11\n    |\n LL |     id_u8(b32);\n    |           ^^^ expected `u8`, found `u32`\n@@ -261,7 +345,7 @@ LL |     id_u8(b32.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:126:11\n+  --> $DIR/integer-literal-suffix-inference.rs:158:11\n    |\n LL |     id_u8(b64);\n    |           ^^^ expected `u8`, found `u64`\n@@ -272,7 +356,18 @@ LL |     id_u8(b64.try_into().unwrap());\n    |           ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:130:12\n+  --> $DIR/integer-literal-suffix-inference.rs:161:11\n+   |\n+LL |     id_u8(bsize);\n+   |           ^^^^^ expected `u8`, found `usize`\n+   |\n+help: you can convert an `usize` to `u8` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_u8(bsize.try_into().unwrap());\n+   |           ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:165:12\n    |\n LL |     id_u16(b8);\n    |            ^^\n@@ -281,7 +376,7 @@ LL |     id_u16(b8);\n    |            help: you can convert an `u8` to `u16`: `b8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:134:12\n+  --> $DIR/integer-literal-suffix-inference.rs:169:12\n    |\n LL |     id_u16(b32);\n    |            ^^^ expected `u16`, found `u32`\n@@ -292,7 +387,7 @@ LL |     id_u16(b32.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:137:12\n+  --> $DIR/integer-literal-suffix-inference.rs:172:12\n    |\n LL |     id_u16(b64);\n    |            ^^^ expected `u16`, found `u64`\n@@ -303,7 +398,18 @@ LL |     id_u16(b64.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:141:12\n+  --> $DIR/integer-literal-suffix-inference.rs:175:12\n+   |\n+LL |     id_u16(bsize);\n+   |            ^^^^^ expected `u16`, found `usize`\n+   |\n+help: you can convert an `usize` to `u16` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_u16(bsize.try_into().unwrap());\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:179:12\n    |\n LL |     id_u32(b8);\n    |            ^^\n@@ -312,7 +418,7 @@ LL |     id_u32(b8);\n    |            help: you can convert an `u8` to `u32`: `b8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:144:12\n+  --> $DIR/integer-literal-suffix-inference.rs:182:12\n    |\n LL |     id_u32(b16);\n    |            ^^^\n@@ -321,7 +427,7 @@ LL |     id_u32(b16);\n    |            help: you can convert an `u16` to `u32`: `b16.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:148:12\n+  --> $DIR/integer-literal-suffix-inference.rs:186:12\n    |\n LL |     id_u32(b64);\n    |            ^^^ expected `u32`, found `u64`\n@@ -332,7 +438,18 @@ LL |     id_u32(b64.try_into().unwrap());\n    |            ^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:152:12\n+  --> $DIR/integer-literal-suffix-inference.rs:189:12\n+   |\n+LL |     id_u32(bsize);\n+   |            ^^^^^ expected `u32`, found `usize`\n+   |\n+help: you can convert an `usize` to `u32` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_u32(bsize.try_into().unwrap());\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:193:12\n    |\n LL |     id_u64(b8);\n    |            ^^\n@@ -341,7 +458,7 @@ LL |     id_u64(b8);\n    |            help: you can convert an `u8` to `u64`: `b8.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:155:12\n+  --> $DIR/integer-literal-suffix-inference.rs:196:12\n    |\n LL |     id_u64(b16);\n    |            ^^^\n@@ -350,14 +467,65 @@ LL |     id_u64(b16);\n    |            help: you can convert an `u16` to `u64`: `b16.into()`\n \n error[E0308]: mismatched types\n-  --> $DIR/integer-literal-suffix-inference.rs:158:12\n+  --> $DIR/integer-literal-suffix-inference.rs:199:12\n    |\n LL |     id_u64(b32);\n    |            ^^^\n    |            |\n    |            expected `u64`, found `u32`\n    |            help: you can convert an `u32` to `u64`: `b32.into()`\n \n-error: aborting due to 36 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:203:12\n+   |\n+LL |     id_u64(bsize);\n+   |            ^^^^^ expected `u64`, found `usize`\n+   |\n+help: you can convert an `usize` to `u64` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_u64(bsize.try_into().unwrap());\n+   |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:207:14\n+   |\n+LL |     id_usize(b8);\n+   |              ^^\n+   |              |\n+   |              expected `usize`, found `u8`\n+   |              help: you can convert an `u8` to `usize`: `b8.into()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:210:14\n+   |\n+LL |     id_usize(b16);\n+   |              ^^^\n+   |              |\n+   |              expected `usize`, found `u16`\n+   |              help: you can convert an `u16` to `usize`: `b16.into()`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:213:14\n+   |\n+LL |     id_usize(b32);\n+   |              ^^^ expected `usize`, found `u32`\n+   |\n+help: you can convert an `u32` to `usize` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_usize(b32.try_into().unwrap());\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/integer-literal-suffix-inference.rs:216:14\n+   |\n+LL |     id_usize(b64);\n+   |              ^^^ expected `usize`, found `u64`\n+   |\n+help: you can convert an `u64` to `usize` and panic if the converted value wouldn't fit\n+   |\n+LL |     id_usize(b64.try_into().unwrap());\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 52 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "31acdb8faf6a2da0d44691284097263338ed2e4c", "filename": "src/test/ui/numeric/numeric-cast.fixed", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc1abc92418149a97ba66a62c56591d353fd65/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc1abc92418149a97ba66a62c56591d353fd65/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.fixed?ref=5ffc1abc92418149a97ba66a62c56591d353fd65", "patch": "@@ -24,9 +24,9 @@ fn main() {\n     //~^ ERROR mismatched types\n     foo::<usize>(x_u32.try_into().unwrap());\n     //~^ ERROR mismatched types\n-    foo::<usize>(x_u16.try_into().unwrap());\n+    foo::<usize>(x_u16.into());\n     //~^ ERROR mismatched types\n-    foo::<usize>(x_u8.try_into().unwrap());\n+    foo::<usize>(x_u8.into());\n     //~^ ERROR mismatched types\n     foo::<usize>(x_isize.try_into().unwrap());\n     //~^ ERROR mismatched types\n@@ -56,9 +56,9 @@ fn main() {\n     //~^ ERROR mismatched types\n     foo::<isize>(x_i32.try_into().unwrap());\n     //~^ ERROR mismatched types\n-    foo::<isize>(x_i16.try_into().unwrap());\n+    foo::<isize>(x_i16.into());\n     //~^ ERROR mismatched types\n-    foo::<isize>(x_i8.try_into().unwrap());\n+    foo::<isize>(x_i8.into());\n     //~^ ERROR mismatched types\n     // foo::<isize>(x_f64);\n     // foo::<isize>(x_f32);"}, {"sha": "ff92a86c3a7b4a46114e2d6ff6433d4908345c8c", "filename": "src/test/ui/numeric/numeric-cast.stderr", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5ffc1abc92418149a97ba66a62c56591d353fd65/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5ffc1abc92418149a97ba66a62c56591d353fd65/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumeric%2Fnumeric-cast.stderr?ref=5ffc1abc92418149a97ba66a62c56591d353fd65", "patch": "@@ -24,23 +24,19 @@ error[E0308]: mismatched types\n   --> $DIR/numeric-cast.rs:27:18\n    |\n LL |     foo::<usize>(x_u16);\n-   |                  ^^^^^ expected `usize`, found `u16`\n-   |\n-help: you can convert an `u16` to `usize` and panic if the converted value wouldn't fit\n-   |\n-LL |     foo::<usize>(x_u16.try_into().unwrap());\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^^^^\n+   |                  |\n+   |                  expected `usize`, found `u16`\n+   |                  help: you can convert an `u16` to `usize`: `x_u16.into()`\n \n error[E0308]: mismatched types\n   --> $DIR/numeric-cast.rs:29:18\n    |\n LL |     foo::<usize>(x_u8);\n-   |                  ^^^^ expected `usize`, found `u8`\n-   |\n-help: you can convert an `u8` to `usize` and panic if the converted value wouldn't fit\n-   |\n-LL |     foo::<usize>(x_u8.try_into().unwrap());\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^^^\n+   |                  |\n+   |                  expected `usize`, found `u8`\n+   |                  help: you can convert an `u8` to `usize`: `x_u8.into()`\n \n error[E0308]: mismatched types\n   --> $DIR/numeric-cast.rs:31:18\n@@ -178,23 +174,19 @@ error[E0308]: mismatched types\n   --> $DIR/numeric-cast.rs:59:18\n    |\n LL |     foo::<isize>(x_i16);\n-   |                  ^^^^^ expected `isize`, found `i16`\n-   |\n-help: you can convert an `i16` to `isize` and panic if the converted value wouldn't fit\n-   |\n-LL |     foo::<isize>(x_i16.try_into().unwrap());\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^^^^\n+   |                  |\n+   |                  expected `isize`, found `i16`\n+   |                  help: you can convert an `i16` to `isize`: `x_i16.into()`\n \n error[E0308]: mismatched types\n   --> $DIR/numeric-cast.rs:61:18\n    |\n LL |     foo::<isize>(x_i8);\n-   |                  ^^^^ expected `isize`, found `i8`\n-   |\n-help: you can convert an `i8` to `isize` and panic if the converted value wouldn't fit\n-   |\n-LL |     foo::<isize>(x_i8.try_into().unwrap());\n-   |                  ^^^^^^^^^^^^^^^^^^^^^^^^\n+   |                  ^^^^\n+   |                  |\n+   |                  expected `isize`, found `i8`\n+   |                  help: you can convert an `i8` to `isize`: `x_i8.into()`\n \n error[E0308]: mismatched types\n   --> $DIR/numeric-cast.rs:66:16"}]}