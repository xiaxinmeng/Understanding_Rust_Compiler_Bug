{"sha": "6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "node_id": "C_kwDOAAsO6NoAKDZkODkwM2FlNWYzZDNhMTZhOTZlMGEzZTNmMzJjZTg4ZDc5OTgzOTI", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-09-29T09:44:45Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2022-09-29T10:48:08Z"}, "message": "fix: infer for-loop item type with `IntoIterator` and `Iterator`", "tree": {"sha": "dbdf9078b8d8d2df55ab7a35e0e913bd9e9790dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbdf9078b8d8d2df55ab7a35e0e913bd9e9790dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmM1d+wACgkQ4laYqTBY\nYXF7SRAAhI7mY9LaQ9dBIupV7PgGOE94kQ+fqGRAi9MgF7aIFd7xXcI9VBsbX1lV\nbm7CiZ1T810Y79tJt+AbwLGA4OCQSkrLqfbbsXvPrY6ajOMKEtCIa2solXGne3lx\nb4xbM+R5kF8GAn3DPFxJJjtcMFkEMYUQMO0gTn97WAKUod/UMSjJkLkaW6BmKSdJ\nXiQx8b7Eux0mrnDuUo67gcxDkiL9A8hjeS06vJdAzT58KjET0NyfGW7YYK+Lng1c\nQTKdv3qYgP9z259h5b/T5WKgoZQxffNymhgktlaIyKTg1YBXfM/jXlzANPVPBaJd\nD5lKuRXULc96NRKk+xR8h/DQbR2ywuHYb8eMpm85CIOXtNKzRxn5fs8PyYK31laA\nejhwekEk1AWLjnz1zMYI/crfmF1nv/rNCdwnX4Tr5ib6tWY3LAkHrAQ6FBCRAu0V\nACo+kZzZkJPVTKvbuK9OBJ5LGyECTTd5njR+iEuL4krWmoZlKVR8hBn3N+LoO9QI\nkVWxuRd8ZX9G5KK1tpc3odfYHEubsXyaW9SuCYpB3AlC9JMOhJHn1n+hhoTzRJAX\nmPRTR4ig1fs6vJKLs8TI/NYmZi6yT9csliKq2eilbs2iXLAt7p4HmYEREOQoXxpn\nPwVGllrPqTXDxkgfy71VlFZQPtl1RowG7amcWeCzvyoxpxXsdwA=\n=mfC3\n-----END PGP SIGNATURE-----", "payload": "tree dbdf9078b8d8d2df55ab7a35e0e913bd9e9790dd\nparent ad752bd52115186ab5ebe2fd27f09867112747c1\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1664444685 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1664448488 +0900\n\nfix: infer for-loop item type with `IntoIterator` and `Iterator`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "html_url": "https://github.com/rust-lang/rust/commit/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad752bd52115186ab5ebe2fd27f09867112747c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad752bd52115186ab5ebe2fd27f09867112747c1", "html_url": "https://github.com/rust-lang/rust/commit/ad752bd52115186ab5ebe2fd27f09867112747c1"}], "stats": {"total": 32, "additions": 29, "deletions": 3}, "files": [{"sha": "2679a1c3602671c35fcae81ba8f9fdef4eb90042", "filename": "crates/hir-expand/src/name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-expand%2Fsrc%2Fname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-expand%2Fsrc%2Fname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-expand%2Fsrc%2Fname.rs?ref=6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "patch": "@@ -263,6 +263,7 @@ pub mod known {\n         Iterator,\n         IntoIterator,\n         Item,\n+        IntoIter,\n         Try,\n         Ok,\n         Future,"}, {"sha": "25179afaca7ade63893f317c6bbd3a92033121d9", "filename": "crates/hir-ty/src/infer.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer.rs?ref=6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "patch": "@@ -883,6 +883,12 @@ impl<'a> InferenceContext<'a> {\n     fn resolve_into_iter_item(&self) -> Option<TypeAliasId> {\n         let path = path![core::iter::IntoIterator];\n         let trait_ = self.resolver.resolve_known_trait(self.db.upcast(), &path)?;\n+        self.db.trait_data(trait_).associated_type_by_name(&name![IntoIter])\n+    }\n+\n+    fn resolve_iterator_item(&self) -> Option<TypeAliasId> {\n+        let path = path![core::iter::Iterator];\n+        let trait_ = self.resolver.resolve_known_trait(self.db.upcast(), &path)?;\n         self.db.trait_data(trait_).associated_type_by_name(&name![Item])\n     }\n "}, {"sha": "2643baf8a32996680b0efd0c62e1ed8ca18992fb", "filename": "crates/hir-ty/src/infer/expr.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Finfer%2Fexpr.rs?ref=6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "patch": "@@ -207,8 +207,10 @@ impl<'a> InferenceContext<'a> {\n             }\n             &Expr::For { iterable, body, pat, label } => {\n                 let iterable_ty = self.infer_expr(iterable, &Expectation::none());\n-                let pat_ty =\n+                let into_iter_ty =\n                     self.resolve_associated_type(iterable_ty, self.resolve_into_iter_item());\n+                let pat_ty =\n+                    self.resolve_associated_type(into_iter_ty, self.resolve_iterator_item());\n \n                 self.infer_pat(pat, &pat_ty, BindingMode::default());\n                 self.with_breakable_ctx(BreakableKind::Loop, self.err_ty(), label, |this| {"}, {"sha": "555b6972fb71eecb775979f640b33baa2e3a712e", "filename": "crates/hir-ty/src/tests/traits.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fhir-ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Ftests%2Ftraits.rs?ref=6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "patch": "@@ -279,6 +279,10 @@ fn test() {\n pub mod iter {\n     pub trait IntoIterator {\n         type Item;\n+        type IntoIter: Iterator<Item = Self::Item>;\n+    }\n+    pub trait Iterator {\n+        type Item;\n     }\n }\n pub mod prelude {\n@@ -297,7 +301,13 @@ pub mod collections {\n     }\n \n     impl<T> IntoIterator for Vec<T> {\n-        type Item=T;\n+        type Item = T;\n+        type IntoIter = IntoIter<T>;\n+    }\n+\n+    struct IntoIter<T> {}\n+    impl<T> Iterator for IntoIter<T> {\n+        type Item = T;\n     }\n }\n \"#,"}, {"sha": "34d8bf67a3016edd55ffe4083870684aa9cb00b6", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=6d8903ae5f3d3a16a96e0a3e3f32ce88d7998392", "patch": "@@ -2024,7 +2024,14 @@ impl<T> Vec<T> {\n }\n \n impl<T> IntoIterator for Vec<T> {\n-    type Item=T;\n+    type Item = T;\n+    type IntoIter = IntoIter<T>;\n+}\n+\n+struct IntoIter<T> {}\n+\n+impl<T> Iterator for IntoIter<T> {\n+    type Item = T;\n }\n \n fn main() {"}]}