{"sha": "d8f96146e8b34e8f648d65f24af5c14fde4f44d5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ4Zjk2MTQ2ZThiMzRlOGY2NDhkNjVmMjRhZjVjMTRmZGU0ZjQ0ZDU=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-08-12T03:10:41Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-08-12T03:10:41Z"}, "message": "Use `Child::std{in,out,err}` instead of `Child.`\n\nThese links were broken before.", "tree": {"sha": "d5ec194bbe5f05ff62f218343fae9b19b875aaf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d5ec194bbe5f05ff62f218343fae9b19b875aaf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d8f96146e8b34e8f648d65f24af5c14fde4f44d5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d8f96146e8b34e8f648d65f24af5c14fde4f44d5", "html_url": "https://github.com/rust-lang/rust/commit/d8f96146e8b34e8f648d65f24af5c14fde4f44d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d8f96146e8b34e8f648d65f24af5c14fde4f44d5/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e005b71125338d792360f8a6d946ad42d7bbba01", "url": "https://api.github.com/repos/rust-lang/rust/commits/e005b71125338d792360f8a6d946ad42d7bbba01", "html_url": "https://github.com/rust-lang/rust/commit/e005b71125338d792360f8a6d946ad42d7bbba01"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "f6555a175e810dba137e64fa40524fcc6fedf143", "filename": "library/std/src/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d8f96146e8b34e8f648d65f24af5c14fde4f44d5/library%2Fstd%2Fsrc%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d8f96146e8b34e8f648d65f24af5c14fde4f44d5/library%2Fstd%2Fsrc%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprocess.rs?ref=d8f96146e8b34e8f648d65f24af5c14fde4f44d5", "patch": "@@ -215,7 +215,7 @@ impl fmt::Debug for Child {\n /// file handle will be closed. If the child process was blocked on input prior\n /// to being dropped, it will become unblocked after dropping.\n ///\n-/// [`stdin`]: crate::process::Child.stdin\n+/// [`stdin`]: Child::stdin\n /// [dropped]: Drop\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct ChildStdin {\n@@ -273,7 +273,7 @@ impl fmt::Debug for ChildStdin {\n /// When an instance of `ChildStdout` is [dropped], the `ChildStdout`'s\n /// underlying file handle will be closed.\n ///\n-/// [`stdout`]: crate::process::Child.stdout\n+/// [`stdout`]: Child::stdout\n /// [dropped]: Drop\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct ChildStdout {\n@@ -333,7 +333,7 @@ impl fmt::Debug for ChildStdout {\n /// When an instance of `ChildStderr` is [dropped], the `ChildStderr`'s\n /// underlying file handle will be closed.\n ///\n-/// [`stderr`]: crate::process::Child.stderr\n+/// [`stderr`]: Child::stderr\n /// [dropped]: Drop\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct ChildStderr {"}]}