{"sha": "8dc945c16912b988a10d48355df3195bff9cdd8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkYzk0NWMxNjkxMmI5ODhhMTBkNDgzNTVkZjMxOTViZmY5Y2RkOGY=", "commit": {"author": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-04T09:10:37Z"}, "committer": {"name": "Matthew Jasper", "email": "mjjasper1@gmail.com", "date": "2019-05-21T19:38:17Z"}, "message": "Remove unused parameter in borrowck error reporting", "tree": {"sha": "5f4caeaaeef56742a28359544d012a3d017e2068", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5f4caeaaeef56742a28359544d012a3d017e2068"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dc945c16912b988a10d48355df3195bff9cdd8f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dc945c16912b988a10d48355df3195bff9cdd8f", "html_url": "https://github.com/rust-lang/rust/commit/8dc945c16912b988a10d48355df3195bff9cdd8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dc945c16912b988a10d48355df3195bff9cdd8f/comments", "author": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthewjasper", "id": 20113453, "node_id": "MDQ6VXNlcjIwMTEzNDUz", "avatar_url": "https://avatars.githubusercontent.com/u/20113453?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthewjasper", "html_url": "https://github.com/matthewjasper", "followers_url": "https://api.github.com/users/matthewjasper/followers", "following_url": "https://api.github.com/users/matthewjasper/following{/other_user}", "gists_url": "https://api.github.com/users/matthewjasper/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthewjasper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthewjasper/subscriptions", "organizations_url": "https://api.github.com/users/matthewjasper/orgs", "repos_url": "https://api.github.com/users/matthewjasper/repos", "events_url": "https://api.github.com/users/matthewjasper/events{/privacy}", "received_events_url": "https://api.github.com/users/matthewjasper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df5d07217271401217fce2d79f3ec75fa0e2b207", "url": "https://api.github.com/repos/rust-lang/rust/commits/df5d07217271401217fce2d79f3ec75fa0e2b207", "html_url": "https://github.com/rust-lang/rust/commit/df5d07217271401217fce2d79f3ec75fa0e2b207"}], "stats": {"total": 14, "additions": 4, "deletions": 10}, "files": [{"sha": "b00a75bb56968109c59f1ea2789a218e4546b33a", "filename": "src/librustc_mir/borrow_check/conflict_errors.rs", "status": "modified", "additions": 4, "deletions": 10, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8dc945c16912b988a10d48355df3195bff9cdd8f/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dc945c16912b988a10d48355df3195bff9cdd8f/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fconflict_errors.rs?ref=8dc945c16912b988a10d48355df3195bff9cdd8f", "patch": "@@ -1,6 +1,5 @@\n use rustc::hir;\n use rustc::hir::def_id::DefId;\n-use rustc::middle::region::ScopeTree;\n use rustc::mir::{\n     self, AggregateKind, BindingForm, BorrowKind, ClearCrossCrate, ConstraintCategory, Local,\n     LocalDecl, LocalKind, Location, Operand, Place, PlaceBase, PlaceProjection,\n@@ -689,7 +688,6 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         );\n \n         let drop_span = place_span.1;\n-        let scope_tree = self.infcx.tcx.region_scope_tree(self.mir_def_id);\n         let root_place = self.prefixes(&borrow.borrowed_place, PrefixSet::All)\n             .last()\n             .unwrap();\n@@ -791,15 +789,13 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             (Some(name), explanation) => self.report_local_value_does_not_live_long_enough(\n                 location,\n                 &name,\n-                &scope_tree,\n                 &borrow,\n                 drop_span,\n                 borrow_spans,\n                 explanation,\n             ),\n             (None, explanation) => self.report_temporary_value_does_not_live_long_enough(\n                 location,\n-                &scope_tree,\n                 &borrow,\n                 drop_span,\n                 borrow_spans,\n@@ -815,17 +811,16 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n         &mut self,\n         location: Location,\n         name: &str,\n-        scope_tree: &'tcx ScopeTree,\n         borrow: &BorrowData<'tcx>,\n         drop_span: Span,\n         borrow_spans: UseSpans,\n         explanation: BorrowExplanation,\n     ) -> DiagnosticBuilder<'cx> {\n         debug!(\n             \"report_local_value_does_not_live_long_enough(\\\n-             {:?}, {:?}, {:?}, {:?}, {:?}, {:?}\\\n+             {:?}, {:?}, {:?}, {:?}, {:?}\\\n              )\",\n-            location, name, scope_tree, borrow, drop_span, borrow_spans\n+            location, name, borrow, drop_span, borrow_spans\n         );\n \n         let borrow_span = borrow_spans.var_or_use();\n@@ -1007,7 +1002,6 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n     fn report_temporary_value_does_not_live_long_enough(\n         &mut self,\n         location: Location,\n-        scope_tree: &'tcx ScopeTree,\n         borrow: &BorrowData<'tcx>,\n         drop_span: Span,\n         borrow_spans: UseSpans,\n@@ -1016,9 +1010,9 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n     ) -> DiagnosticBuilder<'cx> {\n         debug!(\n             \"report_temporary_value_does_not_live_long_enough(\\\n-             {:?}, {:?}, {:?}, {:?}, {:?}\\\n+             {:?}, {:?}, {:?}, {:?}\\\n              )\",\n-            location, scope_tree, borrow, drop_span, proper_span\n+            location, borrow, drop_span, proper_span\n         );\n \n         if let BorrowExplanation::MustBeValidFor {"}]}