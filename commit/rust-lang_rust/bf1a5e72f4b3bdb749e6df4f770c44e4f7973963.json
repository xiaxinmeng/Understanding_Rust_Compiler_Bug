{"sha": "bf1a5e72f4b3bdb749e6df4f770c44e4f7973963", "node_id": "C_kwDOAAsO6NoAKGJmMWE1ZTcyZjRiM2JkYjc0OWU2ZGY0Zjc3MGM0NGU0Zjc5NzM5NjM", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-25T13:37:14Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2022-07-25T13:37:14Z"}, "message": "remove `is_local_span` as it is no longer used", "tree": {"sha": "5d6b069fb1603e0a83bc7f21f86dfbfee22df320", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d6b069fb1603e0a83bc7f21f86dfbfee22df320"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf1a5e72f4b3bdb749e6df4f770c44e4f7973963", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf1a5e72f4b3bdb749e6df4f770c44e4f7973963", "html_url": "https://github.com/rust-lang/rust/commit/bf1a5e72f4b3bdb749e6df4f770c44e4f7973963", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf1a5e72f4b3bdb749e6df4f770c44e4f7973963/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ae03e027a66744e934a7bfa7127256489bed3c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ae03e027a66744e934a7bfa7127256489bed3c2", "html_url": "https://github.com/rust-lang/rust/commit/3ae03e027a66744e934a7bfa7127256489bed3c2"}], "stats": {"total": 11, "additions": 0, "deletions": 11}, "files": [{"sha": "47159584afe3b3780f7113fa748e0a6a1ad7e36f", "filename": "compiler/rustc_span/src/source_map.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/bf1a5e72f4b3bdb749e6df4f770c44e4f7973963/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf1a5e72f4b3bdb749e6df4f770c44e4f7973963/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsource_map.rs?ref=bf1a5e72f4b3bdb749e6df4f770c44e4f7973963", "patch": "@@ -586,17 +586,6 @@ impl SourceMap {\n         }\n     }\n \n-    /// Returns whether or not this span points into a file\n-    /// in the current crate. This may be `false` for spans\n-    /// produced by a macro expansion, or for spans associated\n-    /// with the definition of an item in a foreign crate\n-    pub fn is_local_span(&self, sp: Span) -> bool {\n-        let local_begin = self.lookup_byte_offset(sp.lo());\n-        let local_end = self.lookup_byte_offset(sp.hi());\n-        // This might be a weird span that covers multiple files\n-        local_begin.sf.src.is_some() && local_end.sf.src.is_some()\n-    }\n-\n     pub fn is_span_accessible(&self, sp: Span) -> bool {\n         self.span_to_source(sp, |src, start_index, end_index| {\n             Ok(src.get(start_index..end_index).is_some())"}]}