{"sha": "12b212f38c4f9633d9f0898fd726e43a1eff9405", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyYjIxMmYzOGM0Zjk2MzNkOWYwODk4ZmQ3MjZlNDNhMWVmZjk0MDU=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-07T23:30:28Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-13T16:57:31Z"}, "message": "rustc: Remove the case of foo![...] as invocation syntax. foo!(...) and foo!{...} only.", "tree": {"sha": "5fa24d962270cc6b43a7e4939d72daab8770f579", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fa24d962270cc6b43a7e4939d72daab8770f579"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/12b212f38c4f9633d9f0898fd726e43a1eff9405", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/12b212f38c4f9633d9f0898fd726e43a1eff9405", "html_url": "https://github.com/rust-lang/rust/commit/12b212f38c4f9633d9f0898fd726e43a1eff9405", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/12b212f38c4f9633d9f0898fd726e43a1eff9405/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7960ac5494518268626e176481c0644345d2c35", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7960ac5494518268626e176481c0644345d2c35", "html_url": "https://github.com/rust-lang/rust/commit/f7960ac5494518268626e176481c0644345d2c35"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f02ab97921af44bb7b3b7ae89427213dd4a33e03", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/12b212f38c4f9633d9f0898fd726e43a1eff9405/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/12b212f38c4f9633d9f0898fd726e43a1eff9405/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=12b212f38c4f9633d9f0898fd726e43a1eff9405", "patch": "@@ -1083,7 +1083,7 @@ impl Parser {\n             if self.token == token::NOT {\n                 self.bump();\n                 let tts = match self.token {\n-                  token::LPAREN | token::LBRACE | token::LBRACKET => {\n+                  token::LPAREN | token::LBRACE => {\n                     let ket = token::flip_delimiter(self.token);\n                     self.parse_unspanned_seq(copy self.token, ket,\n                                              seq_sep_none(),\n@@ -3418,7 +3418,7 @@ impl Parser {\n             self.expect(token::NOT);\n             let id = self.parse_ident();\n             let tts = match self.token {\n-              token::LPAREN | token::LBRACE | token::LBRACKET => {\n+              token::LPAREN | token::LBRACE => {\n                 let ket = token::flip_delimiter(self.token);\n                 self.parse_unspanned_seq(copy self.token, ket,\n                                          seq_sep_none(),"}]}