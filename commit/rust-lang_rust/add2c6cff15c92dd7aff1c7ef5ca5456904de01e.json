{"sha": "add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFkZDJjNmNmZjE1YzkyZGQ3YWZmMWM3ZWY1Y2E1NDU2OTA0ZGUwMWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-28T20:26:41Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-10-28T20:26:41Z"}, "message": "Auto merge of #4744 - phansch:split_up_some_derive_test, r=flip1995\n\nUI test cleanup: Extract derive_hash_xor_eq tests\n\nchangelog: none\n\ncc #2038", "tree": {"sha": "dde8b59d5b9083be1fdce0c5cf92d1a366f11907", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dde8b59d5b9083be1fdce0c5cf92d1a366f11907"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "html_url": "https://github.com/rust-lang/rust/commit/add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8e3cfbdd997839c771ca32c7ac860fe95149a04", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8e3cfbdd997839c771ca32c7ac860fe95149a04", "html_url": "https://github.com/rust-lang/rust/commit/c8e3cfbdd997839c771ca32c7ac860fe95149a04"}, {"sha": "05aac0d8c1abddddff51b4b02d1c645835609cb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/05aac0d8c1abddddff51b4b02d1c645835609cb2", "html_url": "https://github.com/rust-lang/rust/commit/05aac0d8c1abddddff51b4b02d1c645835609cb2"}], "stats": {"total": 187, "additions": 95, "deletions": 92}, "files": [{"sha": "8fcb0e8b28d0905bbdbca6cb45317f7a699842b8", "filename": "tests/ui/derive.rs", "status": "modified", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.rs?ref=add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "patch": "@@ -2,42 +2,6 @@\n #![allow(dead_code)]\n #![warn(clippy::expl_impl_clone_on_copy)]\n \n-use std::hash::{Hash, Hasher};\n-\n-#[derive(PartialEq, Hash)]\n-struct Foo;\n-\n-impl PartialEq<u64> for Foo {\n-    fn eq(&self, _: &u64) -> bool {\n-        true\n-    }\n-}\n-\n-#[derive(Hash)]\n-struct Bar;\n-\n-impl PartialEq for Bar {\n-    fn eq(&self, _: &Bar) -> bool {\n-        true\n-    }\n-}\n-\n-#[derive(Hash)]\n-struct Baz;\n-\n-impl PartialEq<Baz> for Baz {\n-    fn eq(&self, _: &Baz) -> bool {\n-        true\n-    }\n-}\n-\n-#[derive(PartialEq)]\n-struct Bah;\n-\n-impl Hash for Bah {\n-    fn hash<H: Hasher>(&self, _: &mut H) {}\n-}\n-\n #[derive(Copy)]\n struct Qux;\n "}, {"sha": "1328a9b31077e0182722c3b1c4479cfd138728e6", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 9, "deletions": 56, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "patch": "@@ -1,52 +1,5 @@\n-error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive.rs:16:10\n-   |\n-LL | #[derive(Hash)]\n-   |          ^^^^\n-   |\n-   = note: `#[deny(clippy::derive_hash_xor_eq)]` on by default\n-note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:19:1\n-   |\n-LL | / impl PartialEq for Bar {\n-LL | |     fn eq(&self, _: &Bar) -> bool {\n-LL | |         true\n-LL | |     }\n-LL | | }\n-   | |_^\n-\n-error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n-  --> $DIR/derive.rs:25:10\n-   |\n-LL | #[derive(Hash)]\n-   |          ^^^^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:28:1\n-   |\n-LL | / impl PartialEq<Baz> for Baz {\n-LL | |     fn eq(&self, _: &Baz) -> bool {\n-LL | |         true\n-LL | |     }\n-LL | | }\n-   | |_^\n-\n-error: you are implementing `Hash` explicitly but have derived `PartialEq`\n-  --> $DIR/derive.rs:37:1\n-   |\n-LL | / impl Hash for Bah {\n-LL | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n-LL | | }\n-   | |_^\n-   |\n-note: `PartialEq` implemented here\n-  --> $DIR/derive.rs:34:10\n-   |\n-LL | #[derive(PartialEq)]\n-   |          ^^^^^^^^^\n-\n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:44:1\n+  --> $DIR/derive.rs:8:1\n    |\n LL | / impl Clone for Qux {\n LL | |     fn clone(&self) -> Self {\n@@ -57,7 +10,7 @@ LL | | }\n    |\n    = note: `-D clippy::expl-impl-clone-on-copy` implied by `-D warnings`\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:44:1\n+  --> $DIR/derive.rs:8:1\n    |\n LL | / impl Clone for Qux {\n LL | |     fn clone(&self) -> Self {\n@@ -67,7 +20,7 @@ LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:68:1\n+  --> $DIR/derive.rs:32:1\n    |\n LL | / impl<'a> Clone for Lt<'a> {\n LL | |     fn clone(&self) -> Self {\n@@ -77,7 +30,7 @@ LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:68:1\n+  --> $DIR/derive.rs:32:1\n    |\n LL | / impl<'a> Clone for Lt<'a> {\n LL | |     fn clone(&self) -> Self {\n@@ -87,7 +40,7 @@ LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:80:1\n+  --> $DIR/derive.rs:44:1\n    |\n LL | / impl Clone for BigArray {\n LL | |     fn clone(&self) -> Self {\n@@ -97,7 +50,7 @@ LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:80:1\n+  --> $DIR/derive.rs:44:1\n    |\n LL | / impl Clone for BigArray {\n LL | |     fn clone(&self) -> Self {\n@@ -107,7 +60,7 @@ LL | | }\n    | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n-  --> $DIR/derive.rs:92:1\n+  --> $DIR/derive.rs:56:1\n    |\n LL | / impl Clone for FnPtr {\n LL | |     fn clone(&self) -> Self {\n@@ -117,7 +70,7 @@ LL | | }\n    | |_^\n    |\n note: consider deriving `Clone` or removing `Copy`\n-  --> $DIR/derive.rs:92:1\n+  --> $DIR/derive.rs:56:1\n    |\n LL | / impl Clone for FnPtr {\n LL | |     fn clone(&self) -> Self {\n@@ -126,5 +79,5 @@ LL | |     }\n LL | | }\n    | |_^\n \n-error: aborting due to 7 previous errors\n+error: aborting due to 4 previous errors\n "}, {"sha": "c0be787f5e40f95e86f81df3663f590b6ad256d6", "filename": "tests/ui/derive_hash_xor_eq.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive_hash_xor_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive_hash_xor_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.rs?ref=add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "patch": "@@ -0,0 +1,37 @@\n+use std::hash::{Hash, Hasher};\n+\n+#[derive(PartialEq, Hash)]\n+struct Foo;\n+\n+impl PartialEq<u64> for Foo {\n+    fn eq(&self, _: &u64) -> bool {\n+        true\n+    }\n+}\n+\n+#[derive(Hash)]\n+struct Bar;\n+\n+impl PartialEq for Bar {\n+    fn eq(&self, _: &Bar) -> bool {\n+        true\n+    }\n+}\n+\n+#[derive(Hash)]\n+struct Baz;\n+\n+impl PartialEq<Baz> for Baz {\n+    fn eq(&self, _: &Baz) -> bool {\n+        true\n+    }\n+}\n+\n+#[derive(PartialEq)]\n+struct Bah;\n+\n+impl Hash for Bah {\n+    fn hash<H: Hasher>(&self, _: &mut H) {}\n+}\n+\n+fn main() {}"}, {"sha": "c3d451aaed68e7f6f86214caa8d8305260ad650e", "filename": "tests/ui/derive_hash_xor_eq.stderr", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive_hash_xor_eq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/add2c6cff15c92dd7aff1c7ef5ca5456904de01e/tests%2Fui%2Fderive_hash_xor_eq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive_hash_xor_eq.stderr?ref=add2c6cff15c92dd7aff1c7ef5ca5456904de01e", "patch": "@@ -0,0 +1,49 @@\n+error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n+  --> $DIR/derive_hash_xor_eq.rs:12:10\n+   |\n+LL | #[derive(Hash)]\n+   |          ^^^^\n+   |\n+   = note: `#[deny(clippy::derive_hash_xor_eq)]` on by default\n+note: `PartialEq` implemented here\n+  --> $DIR/derive_hash_xor_eq.rs:15:1\n+   |\n+LL | / impl PartialEq for Bar {\n+LL | |     fn eq(&self, _: &Bar) -> bool {\n+LL | |         true\n+LL | |     }\n+LL | | }\n+   | |_^\n+\n+error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n+  --> $DIR/derive_hash_xor_eq.rs:21:10\n+   |\n+LL | #[derive(Hash)]\n+   |          ^^^^\n+   |\n+note: `PartialEq` implemented here\n+  --> $DIR/derive_hash_xor_eq.rs:24:1\n+   |\n+LL | / impl PartialEq<Baz> for Baz {\n+LL | |     fn eq(&self, _: &Baz) -> bool {\n+LL | |         true\n+LL | |     }\n+LL | | }\n+   | |_^\n+\n+error: you are implementing `Hash` explicitly but have derived `PartialEq`\n+  --> $DIR/derive_hash_xor_eq.rs:33:1\n+   |\n+LL | / impl Hash for Bah {\n+LL | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n+LL | | }\n+   | |_^\n+   |\n+note: `PartialEq` implemented here\n+  --> $DIR/derive_hash_xor_eq.rs:30:10\n+   |\n+LL | #[derive(PartialEq)]\n+   |          ^^^^^^^^^\n+\n+error: aborting due to 3 previous errors\n+"}]}