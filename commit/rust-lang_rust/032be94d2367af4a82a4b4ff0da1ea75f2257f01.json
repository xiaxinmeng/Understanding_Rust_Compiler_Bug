{"sha": "032be94d2367af4a82a4b4ff0da1ea75f2257f01", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzMmJlOTRkMjM2N2FmNGE4MmE0YjRmZjBkYTFlYTc1ZjIyNTdmMDE=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-04-10T18:19:24Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-05-03T18:36:11Z"}, "message": "Rename `live_locals` -> `live_locals_at_any_suspension_point`", "tree": {"sha": "8aec2ac1d8e92b46a0e10baaae411ab7e9aaabe7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8aec2ac1d8e92b46a0e10baaae411ab7e9aaabe7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/032be94d2367af4a82a4b4ff0da1ea75f2257f01", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/032be94d2367af4a82a4b4ff0da1ea75f2257f01", "html_url": "https://github.com/rust-lang/rust/commit/032be94d2367af4a82a4b4ff0da1ea75f2257f01", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/032be94d2367af4a82a4b4ff0da1ea75f2257f01/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0086166b725d184b84b84b6270446998f6656cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0086166b725d184b84b84b6270446998f6656cc", "html_url": "https://github.com/rust-lang/rust/commit/d0086166b725d184b84b84b6270446998f6656cc"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "24b77a7fdd6acb2df1ad21d1d4c96e205ffa911f", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/032be94d2367af4a82a4b4ff0da1ea75f2257f01/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/032be94d2367af4a82a4b4ff0da1ea75f2257f01/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=032be94d2367af4a82a4b4ff0da1ea75f2257f01", "patch": "@@ -467,12 +467,13 @@ fn locals_live_across_suspend_points(\n         dataflow::ResultsCursor::new(body_ref, &requires_storage_results);\n \n     // Calculate the liveness of MIR locals ignoring borrows.\n-    let mut live_locals = liveness::LiveVarSet::new_empty(body.local_decls.len());\n     let mut liveness = liveness::liveness_of_locals(body);\n     liveness::dump_mir(tcx, \"generator_liveness\", source, body_ref, &liveness);\n \n     let mut storage_liveness_map = IndexVec::from_elem(None, body.basic_blocks());\n     let mut live_locals_at_suspension_points = Vec::new();\n+    let mut live_locals_at_any_suspension_point =\n+        liveness::LiveVarSet::new_empty(body.local_decls.len());\n \n     for (block, data) in body.basic_blocks().iter_enumerated() {\n         if let TerminatorKind::Yield { .. } = data.terminator().kind {\n@@ -509,39 +510,39 @@ fn locals_live_across_suspend_points(\n             // Locals live are live at this point only if they are used across\n             // suspension points (the `liveness` variable)\n             // and their storage is required (the `storage_required` variable)\n-            let mut live_locals_here = storage_required;\n-            live_locals_here.intersect(&liveness.outs[block]);\n+            let mut live_locals = storage_required;\n+            live_locals.intersect(&liveness.outs[block]);\n \n             // The generator argument is ignored.\n-            live_locals_here.remove(SELF_ARG);\n+            live_locals.remove(SELF_ARG);\n \n-            debug!(\"loc = {:?}, live_locals_here = {:?}\", loc, live_locals_here);\n+            debug!(\"loc = {:?}, live_locals = {:?}\", loc, live_locals);\n \n             // Add the locals live at this suspension point to the set of locals which live across\n             // any suspension points\n-            live_locals.union(&live_locals_here);\n+            live_locals_at_any_suspension_point.union(&live_locals);\n \n-            live_locals_at_suspension_points.push(live_locals_here);\n+            live_locals_at_suspension_points.push(live_locals);\n         }\n     }\n-    debug!(\"live_locals = {:?}\", live_locals);\n+    debug!(\"live_locals_anywhere = {:?}\", live_locals_at_any_suspension_point);\n \n     // Renumber our liveness_map bitsets to include only the locals we are\n     // saving.\n     let live_locals_at_suspension_points = live_locals_at_suspension_points\n         .iter()\n-        .map(|live_here| renumber_bitset(&live_here, &live_locals))\n+        .map(|live_here| renumber_bitset(&live_here, &live_locals_at_any_suspension_point))\n         .collect();\n \n     let storage_conflicts = compute_storage_conflicts(\n         body_ref,\n-        &live_locals,\n+        &live_locals_at_any_suspension_point,\n         always_live_locals.clone(),\n         requires_storage_results,\n     );\n \n     LivenessInfo {\n-        live_locals,\n+        live_locals: live_locals_at_any_suspension_point,\n         live_locals_at_suspension_points,\n         storage_conflicts,\n         storage_liveness: storage_liveness_map,"}]}