{"sha": "dba0d8b26b30d3fa9761cd7e4553371ecdd39849", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiYTBkOGIyNmIzMGQzZmE5NzYxY2Q3ZTQ1NTMzNzFlY2RkMzk4NDk=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-20T09:57:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-20T09:57:12Z"}, "message": "Merge #9641\n\n9641: docs: publish Explaining Rust Analyzer series r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "45fc0ce37a5974db36a45b9db100414346e8f447", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45fc0ce37a5974db36a45b9db100414346e8f447"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dba0d8b26b30d3fa9761cd7e4553371ecdd39849", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg9p34CRBK7hj4Ov3rIwAAwncIAGcSA6XpiajMPjhkv36/hH3s\nlY7pIlSJk+Gc5gYDDBFcujOI9XGocdVEQZrDRJ+/UjgO0MShk9GhakA7bWaxYyAL\nT1SMkZQ9DkWiqnJ2O9n9E96bFrzu/xKEoqQobmdi/XDa0bYvJ1aIOTBL5has/spf\nmLnO7s9IYE2O/zTWOqSmLsJ64gAqHMkmAdcTbseBXzm0+BUfaAYu+AsX/mz+B6S6\nRkrgNg7ClFfgpU5eWD6SKPjLln39L6M7+f5c8jdZxGNux+4+LWbm7sN9bGKOk6VZ\n06g7BB5ggZ8Dc1HcNiS6sLLMUwqMCeecVqjAriuFew9MZ+64T3ra7lu/wSlmsys=\n=eTfd\n-----END PGP SIGNATURE-----\n", "payload": "tree 45fc0ce37a5974db36a45b9db100414346e8f447\nparent 84302bdde8671fc69a40a0d3382e1406a1739e3a\nparent efa4a36a506e51d3043a172a89a83e35937ad43a\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1626775032 +0000\ncommitter GitHub <noreply@github.com> 1626775032 +0000\n\nMerge #9641\n\n9641: docs: publish Explaining Rust Analyzer series r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dba0d8b26b30d3fa9761cd7e4553371ecdd39849", "html_url": "https://github.com/rust-lang/rust/commit/dba0d8b26b30d3fa9761cd7e4553371ecdd39849", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dba0d8b26b30d3fa9761cd7e4553371ecdd39849/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "84302bdde8671fc69a40a0d3382e1406a1739e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/84302bdde8671fc69a40a0d3382e1406a1739e3a", "html_url": "https://github.com/rust-lang/rust/commit/84302bdde8671fc69a40a0d3382e1406a1739e3a"}, {"sha": "efa4a36a506e51d3043a172a89a83e35937ad43a", "url": "https://api.github.com/repos/rust-lang/rust/commits/efa4a36a506e51d3043a172a89a83e35937ad43a", "html_url": "https://github.com/rust-lang/rust/commit/efa4a36a506e51d3043a172a89a83e35937ad43a"}], "stats": {"total": 20, "additions": 9, "deletions": 11}, "files": [{"sha": "f2af7bc831082a8c303263d9a757e98dfe286b48", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dba0d8b26b30d3fa9761cd7e4553371ecdd39849/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dba0d8b26b30d3fa9761cd7e4553371ecdd39849/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=dba0d8b26b30d3fa9761cd7e4553371ecdd39849", "patch": "@@ -10,7 +10,7 @@ use always_assert::always;\n use crossbeam_channel::{select, Receiver};\n use ide::{FileId, PrimeCachesProgress};\n use ide_db::base_db::VfsPath;\n-use lsp_server::{Connection, Notification, Request, Response};\n+use lsp_server::{Connection, Notification, Request};\n use lsp_types::notification::Notification as _;\n use vfs::ChangeKind;\n \n@@ -60,7 +60,7 @@ enum Event {\n \n #[derive(Debug)]\n pub(crate) enum Task {\n-    Response(Response),\n+    Response(lsp_server::Response),\n     Diagnostics(Vec<(FileId, Vec<lsp_types::Diagnostic>)>),\n     PrimeCaches(PrimeCachesProgress),\n     FetchWorkspace(ProjectWorkspaceProgress),\n@@ -466,7 +466,7 @@ impl GlobalState {\n         self.register_request(&req, request_received);\n \n         if self.shutdown_requested {\n-            self.respond(Response::new_err(\n+            self.respond(lsp_server::Response::new_err(\n                 req.id,\n                 lsp_server::ErrorCode::InvalidRequest as i32,\n                 \"Shutdown already requested.\".to_owned(),\n@@ -674,7 +674,7 @@ impl GlobalState {\n                     },\n                     |this, resp| {\n                         log::debug!(\"config update response: '{:?}\", resp);\n-                        let Response { error, result, .. } = resp;\n+                        let lsp_server::Response { error, result, .. } = resp;\n \n                         match (error, result) {\n                             (Some(err), _) => {"}, {"sha": "9d1b0987235d75b7e4f2af9358aeb29bd639394f", "filename": "docs/dev/architecture.md", "status": "modified", "additions": 5, "deletions": 7, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/dba0d8b26b30d3fa9761cd7e4553371ecdd39849/docs%2Fdev%2Farchitecture.md", "raw_url": "https://github.com/rust-lang/rust/raw/dba0d8b26b30d3fa9761cd7e4553371ecdd39849/docs%2Fdev%2Farchitecture.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Farchitecture.md?ref=dba0d8b26b30d3fa9761cd7e4553371ecdd39849", "patch": "@@ -3,13 +3,8 @@\n This document describes the high-level architecture of rust-analyzer.\n If you want to familiarize yourself with the code base, you are just in the right place!\n \n-See also the [guide](./guide.md), which walks through a particular snapshot of rust-analyzer code base.\n-\n-Yet another resource is this playlist with videos about various parts of the analyzer:\n-\n-https://www.youtube.com/playlist?list=PL85XCvVPmGQho7MZkdW-wtPtuJcFpzycE\n-\n-Note that the guide and videos are pretty dated, this document should be, in general, fresher.\n+You might also enjoy [\"Explaining Rust Analyzer\"](https://www.youtube.com/playlist?list=PLhb66M_x9UmrqXhQuIpWC5VgTdrGxMx3y) series on YouTube.\n+It goes deeper than what is covered in this document, but will take some time to watch.\n \n See also these implementation-related blog posts:\n \n@@ -19,6 +14,9 @@ See also these implementation-related blog posts:\n * https://rust-analyzer.github.io/blog/2020/09/28/how-to-make-a-light-bulb.html\n * https://rust-analyzer.github.io/blog/2020/10/24/introducing-ungrammar.html\n \n+For older, by now mostly outdated stuff, see the [guide](./guide.md) and [another playlist](https://www.youtube.com/playlist?list=PL85XCvVPmGQho7MZkdW-wtPtuJcFpzycE).\n+\n+\n ## Bird's Eye View\n \n ![](https://user-images.githubusercontent.com/4789492/107129398-0ab70f00-687a-11eb-9bfc-d4eb023aec06.png)"}]}