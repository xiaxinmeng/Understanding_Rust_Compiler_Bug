{"sha": "700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcwMGFjODRlYWU3N2U5NWJiYzZlODI3NmE0ZjRhZDEwMmQ2ZTgzZTU=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-07T18:36:50Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-01-07T18:36:50Z"}, "message": "Rename traits::drop -> traits::misc.", "tree": {"sha": "739a6a88f2f35f8c81df13b2bfb92adfcc744503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/739a6a88f2f35f8c81df13b2bfb92adfcc744503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "html_url": "https://github.com/rust-lang/rust/commit/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f629baf96cd0dd741f4490e782a72b2ff40b27fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/f629baf96cd0dd741f4490e782a72b2ff40b27fd", "html_url": "https://github.com/rust-lang/rust/commit/f629baf96cd0dd741f4490e782a72b2ff40b27fd"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "08c3a77bf3aca5ff78fd5654d97770d3d68848c9", "filename": "src/librustc/traits/misc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc%2Ftraits%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc%2Ftraits%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmisc.rs?ref=700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "previous_filename": "src/librustc/traits/drop.rs"}, {"sha": "2d3160dc3e51a430b03bcbcad748f04f4294679a", "filename": "src/librustc/traits/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ftraits%2Fmod.rs?ref=700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "patch": "@@ -7,10 +7,10 @@ pub mod auto_trait;\n mod chalk_fulfill;\n pub mod codegen;\n mod coherence;\n-pub mod drop;\n mod engine;\n pub mod error_reporting;\n mod fulfill;\n+pub mod misc;\n mod object_safety;\n mod on_unimplemented;\n mod project;\n@@ -1244,7 +1244,7 @@ impl<'tcx> TraitObligation<'tcx> {\n }\n \n pub fn provide(providers: &mut ty::query::Providers<'_>) {\n-    drop::provide(providers);\n+    misc::provide(providers);\n     *providers = ty::query::Providers {\n         is_object_safe: object_safety::is_object_safe_provider,\n         specialization_graph_of: specialize::specialization_graph_provider,"}, {"sha": "c2e20d5cf758eb6be5d0b7fd37a819648edadac5", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "patch": "@@ -27,7 +27,7 @@ use lint::{EarlyContext, EarlyLintPass, LateLintPass, LintPass};\n use lint::{LateContext, LintArray, LintContext};\n use rustc::lint;\n use rustc::lint::FutureIncompatibleInfo;\n-use rustc::traits::drop::can_type_implement_copy;\n+use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::{self, layout::VariantIdx, Ty, TyCtxt};\n use rustc_data_structures::fx::FxHashSet;\n use rustc_feature::Stability;"}, {"sha": "68e2bc532614116e3cfe3dbc899f56cf2c4909b1", "filename": "src/librustc_passes/stability.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc_passes%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc_passes%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fstability.rs?ref=700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "patch": "@@ -6,7 +6,7 @@ use rustc::lint;\n use rustc::middle::privacy::AccessLevels;\n use rustc::middle::stability::{DeprecationEntry, Index};\n use rustc::session::Session;\n-use rustc::traits::drop::can_type_implement_copy;\n+use rustc::traits::misc::can_type_implement_copy;\n use rustc::ty::query::Providers;\n use rustc::ty::TyCtxt;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "eb1ea679040a8a3cc84a865e355c7ad07a43916b", "filename": "src/librustc_typeck/coherence/builtin.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/700ac84eae77e95bbc6e8276a4f4ad102d6e83e5/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fbuiltin.rs?ref=700ac84eae77e95bbc6e8276a4f4ad102d6e83e5", "patch": "@@ -7,7 +7,7 @@ use rustc::middle::lang_items::UnsizeTraitLangItem;\n use rustc::middle::region;\n \n use rustc::infer;\n-use rustc::traits::drop::{can_type_implement_copy, CopyImplementationError};\n+use rustc::traits::misc::{can_type_implement_copy, CopyImplementationError};\n use rustc::traits::predicate_for_trait_def;\n use rustc::traits::{self, ObligationCause, TraitEngine};\n use rustc::ty::adjustment::CoerceUnsizedInfo;"}]}