{"sha": "0554abac637800415bb1b30d8656898552a55ea0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NTRhYmFjNjM3ODAwNDE1YmIxYjMwZDg2NTY4OTg1NTJhNTVlYTA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-06-10T23:55:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-06-10T23:55:30Z"}, "message": "Auto merge of #34172 - jseyfried:avoid_configuring_interpolated_ast, r=alexcrichton\n\nFix ICE regression caused by configuring interpolated AST\n\nFixes #34171.\nr? @nrc", "tree": {"sha": "1aae3d269b30644ece7c8864c9c7e181f35985ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1aae3d269b30644ece7c8864c9c7e181f35985ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0554abac637800415bb1b30d8656898552a55ea0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0554abac637800415bb1b30d8656898552a55ea0", "html_url": "https://github.com/rust-lang/rust/commit/0554abac637800415bb1b30d8656898552a55ea0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0554abac637800415bb1b30d8656898552a55ea0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de", "html_url": "https://github.com/rust-lang/rust/commit/8c6bd23aaad573d5e06de6b6f0b0e64cf3d916de"}, {"sha": "c751ec626da92a138f23327f3eaede30d5747bde", "url": "https://api.github.com/repos/rust-lang/rust/commits/c751ec626da92a138f23327f3eaede30d5747bde", "html_url": "https://github.com/rust-lang/rust/commit/c751ec626da92a138f23327f3eaede30d5747bde"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "41ad1611e3ec8262a74c38ab7fb3f2c6e63150df", "filename": "src/libsyntax/config.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0554abac637800415bb1b30d8656898552a55ea0/src%2Flibsyntax%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0554abac637800415bb1b30d8656898552a55ea0/src%2Flibsyntax%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fconfig.rs?ref=0554abac637800415bb1b30d8656898552a55ea0", "patch": "@@ -14,6 +14,7 @@ use feature_gate::GatedCfgAttr;\n use fold::Folder;\n use {ast, fold, attr};\n use codemap::{Spanned, respan};\n+use parse::token;\n use ptr::P;\n \n use util::small_vector::SmallVector;\n@@ -247,6 +248,12 @@ impl<T: CfgFolder> fold::Folder for T {\n         self.configure(item).map(|item| fold::noop_fold_trait_item(item, self))\n                             .unwrap_or(SmallVector::zero())\n     }\n+\n+    fn fold_interpolated(&mut self, nt: token::Nonterminal) -> token::Nonterminal {\n+        // Don't configure interpolated AST (c.f. #34171).\n+        // Interpolated AST will get configured once the surrounding tokens are parsed.\n+        nt\n+    }\n }\n \n fn fold_expr<F: CfgFolder>(folder: &mut F, expr: P<ast::Expr>) -> P<ast::Expr> {"}, {"sha": "30dd34ae9a0292442239cbab1fd08597aba49d2f", "filename": "src/test/compile-fail/issue-34171.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0554abac637800415bb1b30d8656898552a55ea0/src%2Ftest%2Fcompile-fail%2Fissue-34171.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0554abac637800415bb1b30d8656898552a55ea0/src%2Ftest%2Fcompile-fail%2Fissue-34171.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-34171.rs?ref=0554abac637800415bb1b30d8656898552a55ea0", "patch": "@@ -0,0 +1,21 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(rustc_attrs)]\n+\n+macro_rules! null { ($i:tt) => {} }\n+macro_rules! apply_null {\n+    ($i:item) => { null! { $i } }\n+}\n+\n+#[rustc_error]\n+fn main() { //~ ERROR compilation successful\n+    apply_null!(#[cfg(all())] fn f() {});\n+}"}]}