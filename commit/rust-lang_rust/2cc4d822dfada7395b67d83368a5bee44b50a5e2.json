{"sha": "2cc4d822dfada7395b67d83368a5bee44b50a5e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYzRkODIyZGZhZGE3Mzk1YjY3ZDgzMzY4YTViZWU0NGI1MGE1ZTI=", "commit": {"author": {"name": "Franziska Hinkelmann", "email": "franziska.hinkelmann@gmail.com", "date": "2015-05-10T06:02:06Z"}, "committer": {"name": "Franziska Hinkelmann", "email": "franziska.hinkelmann@gmail.com", "date": "2015-05-10T06:02:06Z"}, "message": "Fix small typos in documentation", "tree": {"sha": "7d2f2a0ff0e0ceba65ed47871bc2647de10cb69e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d2f2a0ff0e0ceba65ed47871bc2647de10cb69e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cc4d822dfada7395b67d83368a5bee44b50a5e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc4d822dfada7395b67d83368a5bee44b50a5e2", "html_url": "https://github.com/rust-lang/rust/commit/2cc4d822dfada7395b67d83368a5bee44b50a5e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cc4d822dfada7395b67d83368a5bee44b50a5e2/comments", "author": {"login": "fhinkel", "id": 101553, "node_id": "MDQ6VXNlcjEwMTU1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/101553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhinkel", "html_url": "https://github.com/fhinkel", "followers_url": "https://api.github.com/users/fhinkel/followers", "following_url": "https://api.github.com/users/fhinkel/following{/other_user}", "gists_url": "https://api.github.com/users/fhinkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhinkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhinkel/subscriptions", "organizations_url": "https://api.github.com/users/fhinkel/orgs", "repos_url": "https://api.github.com/users/fhinkel/repos", "events_url": "https://api.github.com/users/fhinkel/events{/privacy}", "received_events_url": "https://api.github.com/users/fhinkel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fhinkel", "id": 101553, "node_id": "MDQ6VXNlcjEwMTU1Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/101553?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fhinkel", "html_url": "https://github.com/fhinkel", "followers_url": "https://api.github.com/users/fhinkel/followers", "following_url": "https://api.github.com/users/fhinkel/following{/other_user}", "gists_url": "https://api.github.com/users/fhinkel/gists{/gist_id}", "starred_url": "https://api.github.com/users/fhinkel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fhinkel/subscriptions", "organizations_url": "https://api.github.com/users/fhinkel/orgs", "repos_url": "https://api.github.com/users/fhinkel/repos", "events_url": "https://api.github.com/users/fhinkel/events{/privacy}", "received_events_url": "https://api.github.com/users/fhinkel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc630d01e3eae8ba05db98383119bc2ddbbb01c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc630d01e3eae8ba05db98383119bc2ddbbb01c1", "html_url": "https://github.com/rust-lang/rust/commit/dc630d01e3eae8ba05db98383119bc2ddbbb01c1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fc3927380fadb4ca31614aa51b542080dab9a9cd", "filename": "src/doc/trpl/guessing-game.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2cc4d822dfada7395b67d83368a5bee44b50a5e2/src%2Fdoc%2Ftrpl%2Fguessing-game.md", "raw_url": "https://github.com/rust-lang/rust/raw/2cc4d822dfada7395b67d83368a5bee44b50a5e2/src%2Fdoc%2Ftrpl%2Fguessing-game.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Fguessing-game.md?ref=2cc4d822dfada7395b67d83368a5bee44b50a5e2", "patch": "@@ -711,7 +711,7 @@ variety of numbers, we need to give Rust a hint as to the exact type of number\n we want. Hence, `let guess: u32`. The colon (`:`) after `guess` tells Rust\n we\u2019re going to annotate its type. `u32` is an unsigned, thirty-two bit\n integer. Rust has [a number of built-in number types][number], but we\u2019ve\n-chosen `u32`. It\u2019s a good default choice for a small positive numer.\n+chosen `u32`. It\u2019s a good default choice for a small positive number.\n \n [parse]: ../std/primitive.str.html#method.parse\n [number]: primitive-types.html#numeric-types\n@@ -920,7 +920,7 @@ failure. Each contains more information: the successful parsed integer, or an\n error type. In this case, we `match` on `Ok(num)`, which sets the inner value\n of the `Ok` to the name `num`, and then we just return it on the right-hand\n side. In the `Err` case, we don\u2019t care what kind of error it is, so we just\n-use `_` intead of a name. This ignores the error, and `continue` causes us\n+use `_` instead of a name. This ignores the error, and `continue` causes us\n to go to the next iteration of the `loop`.\n \n Now we should be good! Let\u2019s try:"}]}