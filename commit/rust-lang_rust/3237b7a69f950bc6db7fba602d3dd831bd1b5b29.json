{"sha": "3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyMzdiN2E2OWY5NTBiYzZkYjdmYmE2MDJkM2RkODMxYmQxYjViMjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-23T18:29:28Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-23T18:29:28Z"}, "message": "Auto merge of #5082 - Areredify:issue-4980, r=flip1995\n\ndisable let_underscore_must_use in external macros\n\nchangelog: disable let_underscore_must_use in external macros\nCloses #4980", "tree": {"sha": "a3baec0f249314290d6d79f5503fdabb8d992c4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3baec0f249314290d6d79f5503fdabb8d992c4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "html_url": "https://github.com/rust-lang/rust/commit/3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "676344770733adf2446f94a14b724286cf51cc66", "url": "https://api.github.com/repos/rust-lang/rust/commits/676344770733adf2446f94a14b724286cf51cc66", "html_url": "https://github.com/rust-lang/rust/commit/676344770733adf2446f94a14b724286cf51cc66"}, {"sha": "fef3657100bfda5f50e5e811d3776cb22050492d", "url": "https://api.github.com/repos/rust-lang/rust/commits/fef3657100bfda5f50e5e811d3776cb22050492d", "html_url": "https://github.com/rust-lang/rust/commit/fef3657100bfda5f50e5e811d3776cb22050492d"}], "stats": {"total": 36, "additions": 24, "deletions": 12}, "files": [{"sha": "c257b22df3829609cc999b5b5e62545d863c2a5d", "filename": "clippy_lints/src/let_underscore.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/clippy_lints%2Fsrc%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/clippy_lints%2Fsrc%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flet_underscore.rs?ref=3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "patch": "@@ -1,4 +1,5 @@\n use if_chain::if_chain;\n+use rustc::lint::in_external_macro;\n use rustc_hir::*;\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -33,6 +34,10 @@ declare_lint_pass!(LetUnderscore => [LET_UNDERSCORE_MUST_USE]);\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LetUnderscore {\n     fn check_stmt(&mut self, cx: &LateContext<'_, '_>, stmt: &Stmt<'_>) {\n+        if in_external_macro(cx.tcx.sess, stmt.span) {\n+            return;\n+        }\n+\n         if_chain! {\n             if let StmtKind::Local(ref local) = stmt.kind;\n             if let PatKind::Wild = local.pat.kind;"}, {"sha": "7f481542fa73b2579257b83337bd57fd763c6d51", "filename": "tests/ui/let_underscore.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/tests%2Fui%2Flet_underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/tests%2Fui%2Flet_underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore.rs?ref=3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "patch": "@@ -1,5 +1,12 @@\n #![warn(clippy::let_underscore_must_use)]\n \n+// Debug implementations can fire this lint,\n+// so we shouldn't lint external macros\n+#[derive(Debug)]\n+struct Foo {\n+    field: i32,\n+}\n+\n #[must_use]\n fn f() -> u32 {\n     0"}, {"sha": "e7d5f712bec8ea1e61f530e74eb52f79d03b8bf9", "filename": "tests/ui/let_underscore.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/tests%2Fui%2Flet_underscore.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3237b7a69f950bc6db7fba602d3dd831bd1b5b29/tests%2Fui%2Flet_underscore.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore.stderr?ref=3237b7a69f950bc6db7fba602d3dd831bd1b5b29", "patch": "@@ -1,5 +1,5 @@\n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:59:5\n+  --> $DIR/let_underscore.rs:66:5\n    |\n LL |     let _ = f();\n    |     ^^^^^^^^^^^^\n@@ -8,87 +8,87 @@ LL |     let _ = f();\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:60:5\n+  --> $DIR/let_underscore.rs:67:5\n    |\n LL |     let _ = g();\n    |     ^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:62:5\n+  --> $DIR/let_underscore.rs:69:5\n    |\n LL |     let _ = l(0_u32);\n    |     ^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:66:5\n+  --> $DIR/let_underscore.rs:73:5\n    |\n LL |     let _ = s.f();\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:67:5\n+  --> $DIR/let_underscore.rs:74:5\n    |\n LL |     let _ = s.g();\n    |     ^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:70:5\n+  --> $DIR/let_underscore.rs:77:5\n    |\n LL |     let _ = S::h();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:71:5\n+  --> $DIR/let_underscore.rs:78:5\n    |\n LL |     let _ = S::p();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:73:5\n+  --> $DIR/let_underscore.rs:80:5\n    |\n LL |     let _ = S::a();\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:75:5\n+  --> $DIR/let_underscore.rs:82:5\n    |\n LL |     let _ = if true { Ok(()) } else { Err(()) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on a result of a `#[must_use]` function\n-  --> $DIR/let_underscore.rs:79:5\n+  --> $DIR/let_underscore.rs:86:5\n    |\n LL |     let _ = a.is_ok();\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using function result\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:81:5\n+  --> $DIR/let_underscore.rs:88:5\n    |\n LL |     let _ = a.map(|_| ());\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider explicitly using expression value\n \n error: non-binding let on an expression with `#[must_use]` type\n-  --> $DIR/let_underscore.rs:83:5\n+  --> $DIR/let_underscore.rs:90:5\n    |\n LL |     let _ = a;\n    |     ^^^^^^^^^^"}]}