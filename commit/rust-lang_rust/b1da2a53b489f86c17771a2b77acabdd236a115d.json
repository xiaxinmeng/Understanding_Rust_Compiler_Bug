{"sha": "b1da2a53b489f86c17771a2b77acabdd236a115d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZGEyYTUzYjQ4OWY4NmMxNzc3MWEyYjc3YWNhYmRkMjM2YTExNWQ=", "commit": {"author": {"name": "Maximilian Roos", "email": "m@maxroos.com", "date": "2018-08-31T04:19:12Z"}, "committer": {"name": "Maximilian Roos", "email": "m@maxroos.com", "date": "2018-08-31T04:19:12Z"}, "message": "Merge branch 'master' into clippy2", "tree": {"sha": "e0d1948a92e105718ce0c07f5c9a9840d02af017", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0d1948a92e105718ce0c07f5c9a9840d02af017"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1da2a53b489f86c17771a2b77acabdd236a115d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEj6KCL6bSss5r72KTMjLyi+2mb80FAluIwcAACgkQMjLyi+2m\nb80vOQ//b8H0c2tspAy8C3QY/XzyW34vP8H8SDf2J94WJyNqtilDJBH3dG00L67W\nC2S1wm8LD51N8l/7aV5H5GUUMCgLAUbmmLUIWKW6XVFW0Qihkys9XdS5pr9uh0AN\nd19hZdPssJV8aWk2gMlhkmoOYx3PtR1fE4hcq7wueNthUOJNiajDQnBJSX9X5B5n\n5O9CcqcxHATa7iw2tMix6GR9Nkqk3fUxJq6rL7Z+SYinvxhcB5w4Yd0dk/CkKtlt\ncV74/CRWQl/BSeUFY35PGvd/RHSuISMZ3zRs5adG7z83MkyE1+cfi4JVSY/ksC2d\nEMdy+QUFIDA4qNuTDwhNWtDFLYCIk7bRF54b49GO5xoT7E8LUSXZHtA9uQkE3t3y\njTpGWP7bDwjoXcY60LHLlNgHRFQl7ILGhkOCEa7sRFlsuiA4qJDaWzDuOAfUwyLh\nxiKgJN+tCtmDh4iM3hWGbH8QmbG9f7jxWCchaW/d4Bx4AxLxVoJx8Be/2KkNWaDz\nsXg8BbFvS0C1CZIe3EKUnbHoaZZEE0/BjzCysWkxCV+nw2DskmsfMVsouXlGW25+\ndE+gaCR8j16zlH056DTFNB5l3qBHSCTwQ4IgeujPtyk5MQMtx2O0tWjCIeHBfraT\nsRQQa7Pv5xRBrHyU5Cv0na1DuBUR6EqqAjoYtjVmoVr/+l/T7RM=\n=kah1\n-----END PGP SIGNATURE-----", "payload": "tree e0d1948a92e105718ce0c07f5c9a9840d02af017\nparent af7b341a50ae9fd94d2e6aec0fa75486a45f1691\nparent d88139893f71801ee7262db999832e6bbab02cc2\nauthor Maximilian Roos <m@maxroos.com> 1535689152 -0400\ncommitter Maximilian Roos <m@maxroos.com> 1535689152 -0400\n\nMerge branch 'master' into clippy2\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1da2a53b489f86c17771a2b77acabdd236a115d", "html_url": "https://github.com/rust-lang/rust/commit/b1da2a53b489f86c17771a2b77acabdd236a115d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1da2a53b489f86c17771a2b77acabdd236a115d/comments", "author": {"login": "max-sixty", "id": 5635139, "node_id": "MDQ6VXNlcjU2MzUxMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-sixty", "html_url": "https://github.com/max-sixty", "followers_url": "https://api.github.com/users/max-sixty/followers", "following_url": "https://api.github.com/users/max-sixty/following{/other_user}", "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions", "organizations_url": "https://api.github.com/users/max-sixty/orgs", "repos_url": "https://api.github.com/users/max-sixty/repos", "events_url": "https://api.github.com/users/max-sixty/events{/privacy}", "received_events_url": "https://api.github.com/users/max-sixty/received_events", "type": "User", "site_admin": false}, "committer": {"login": "max-sixty", "id": 5635139, "node_id": "MDQ6VXNlcjU2MzUxMzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4", "gravatar_id": "", "url": "https://api.github.com/users/max-sixty", "html_url": "https://github.com/max-sixty", "followers_url": "https://api.github.com/users/max-sixty/followers", "following_url": "https://api.github.com/users/max-sixty/following{/other_user}", "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}", "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions", "organizations_url": "https://api.github.com/users/max-sixty/orgs", "repos_url": "https://api.github.com/users/max-sixty/repos", "events_url": "https://api.github.com/users/max-sixty/events{/privacy}", "received_events_url": "https://api.github.com/users/max-sixty/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af7b341a50ae9fd94d2e6aec0fa75486a45f1691", "url": "https://api.github.com/repos/rust-lang/rust/commits/af7b341a50ae9fd94d2e6aec0fa75486a45f1691", "html_url": "https://github.com/rust-lang/rust/commit/af7b341a50ae9fd94d2e6aec0fa75486a45f1691"}, {"sha": "d88139893f71801ee7262db999832e6bbab02cc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d88139893f71801ee7262db999832e6bbab02cc2", "html_url": "https://github.com/rust-lang/rust/commit/d88139893f71801ee7262db999832e6bbab02cc2"}], "stats": {"total": 65, "additions": 58, "deletions": 7}, "files": [{"sha": "37fdad5b9756f1ce7b030bd14a2870e7f2ece4bc", "filename": "README.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -129,8 +129,6 @@ A minimal Travis setup could look like this (requires Rust 1.24.0 or greater):\n \n ```yaml\n language: rust\n-rust:\n-- nightly\n before_script:\n - rustup component add rustfmt-preview\n script:"}, {"sha": "db00c45b9d9326ef51ea3273589e69060e62335e", "filename": "src/imports.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/src%2Fimports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/src%2Fimports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fimports.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -15,7 +15,7 @@ use syntax::ast::{self, UseTreeKind};\n use syntax::source_map::{self, BytePos, Span, DUMMY_SP};\n \n use comment::combine_strs_with_missing_comments;\n-use config::IndentStyle;\n+use config::{Edition, IndentStyle};\n use lists::{definitive_tactic, itemize_list, write_list, ListFormatting, ListItem, Separator};\n use rewrite::{Rewrite, RewriteContext};\n use shape::Shape;\n@@ -144,6 +144,7 @@ impl UseSegment {\n     fn from_path_segment(\n         context: &RewriteContext,\n         path_seg: &ast::PathSegment,\n+        modsep: bool,\n     ) -> Option<UseSegment> {\n         let name = rewrite_ident(context, path_seg.ident);\n         if name.is_empty() || name == \"{{root}}\" {\n@@ -152,7 +153,10 @@ impl UseSegment {\n         Some(match name {\n             \"self\" => UseSegment::Slf(None),\n             \"super\" => UseSegment::Super(None),\n-            _ => UseSegment::Ident((*name).to_owned(), None),\n+            _ => {\n+                let mod_sep = if modsep { \"::\" } else { \"\" };\n+                UseSegment::Ident(format!(\"{}{}\", mod_sep, name), None)\n+            }\n         })\n     }\n }\n@@ -313,8 +317,13 @@ impl UseTree {\n             visibility,\n             attrs,\n         };\n+\n+        let leading_modsep = context.config.edition() == Edition::Edition2018\n+            && a.prefix.to_string().len() > 2\n+            && a.prefix.to_string().starts_with(\"::\");\n+\n         for p in &a.prefix.segments {\n-            if let Some(use_segment) = UseSegment::from_path_segment(context, p) {\n+            if let Some(use_segment) = UseSegment::from_path_segment(context, p, leading_modsep) {\n                 result.path.push(use_segment);\n             }\n         }"}, {"sha": "7f8980dd15068fc6d1a6f8aae7be54a406314539", "filename": "src/items.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -2232,8 +2232,10 @@ fn rewrite_args(\n ) -> Option<String> {\n     let mut arg_item_strs = args\n         .iter()\n-        .map(|arg| arg.rewrite(context, Shape::legacy(multi_line_budget, arg_indent)))\n-        .collect::<Option<Vec<_>>>()?;\n+        .map(|arg| {\n+            arg.rewrite(context, Shape::legacy(multi_line_budget, arg_indent))\n+                .unwrap_or_else(|| context.snippet(arg.span()).to_owned())\n+        }).collect::<Vec<_>>();\n \n     // Account for sugary self.\n     // FIXME: the comment for the self argument is dropped. This is blocked"}, {"sha": "855332d137d33241e8a27575b37863d1526a7ca7", "filename": "tests/source/fn-simple.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Fsource%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Fsource%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-simple.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -67,3 +67,8 @@ crate fn init() {}\n \n // #2630\n fn make_map<T, F: (Fn(&T) -> String)>(records: &Vec<T>, key_fn: F) -> HashMap<String, usize> {}\n+\n+// #2956\n+fn bar(beans: Asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf, spam: bool, eggs: bool) -> bool{\n+    unimplemented!();\n+}"}, {"sha": "0a8969c483700858ce324d3ccfe01a0e02b30321", "filename": "tests/source/issue-2927-2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Fsource%2Fissue-2927-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Fsource%2Fissue-2927-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2927-2.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-edition: Edition2015\n+#![feature(rust_2018_preview, uniform_paths)]\n+use futures::prelude::*;\n+use http_03::cli::Cli;\n+use hyper::{service::service_fn_ok, Body, Response, Server};\n+use ::log::{error, info, log};\n+use structopt::StructOpt;"}, {"sha": "69871b484968b8f203ab7e4b5ca72d8ff597839e", "filename": "tests/source/issue-2927.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Fsource%2Fissue-2927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Fsource%2Fissue-2927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fissue-2927.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-edition: Edition2018\n+#![feature(rust_2018_preview, uniform_paths)]\n+use futures::prelude::*;\n+use http_03::cli::Cli;\n+use hyper::{service::service_fn_ok, Body, Response, Server};\n+use ::log::{error, info, log};\n+use structopt::StructOpt;"}, {"sha": "f35c5d8a0ed28e74b63182914d9efc6b6d7f4977", "filename": "tests/target/fn-simple.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Ftarget%2Ffn-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Ftarget%2Ffn-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-simple.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -108,3 +108,12 @@ crate fn init() {}\n \n // #2630\n fn make_map<T, F: (Fn(&T) -> String)>(records: &Vec<T>, key_fn: F) -> HashMap<String, usize> {}\n+\n+// #2956\n+fn bar(\n+    beans: Asdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdfasdf,\n+    spam: bool,\n+    eggs: bool,\n+) -> bool {\n+    unimplemented!();\n+}"}, {"sha": "c9fdcdea2394c37ce3fa9bbe187383fba715b1a5", "filename": "tests/target/issue-2927-2.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Ftarget%2Fissue-2927-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Ftarget%2Fissue-2927-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2927-2.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-edition: Edition2015\n+#![feature(rust_2018_preview, uniform_paths)]\n+use futures::prelude::*;\n+use http_03::cli::Cli;\n+use hyper::{service::service_fn_ok, Body, Response, Server};\n+use log::{error, info, log};\n+use structopt::StructOpt;"}, {"sha": "1aa34f017415a7271e84692654216631546c7e00", "filename": "tests/target/issue-2927.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Ftarget%2Fissue-2927.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1da2a53b489f86c17771a2b77acabdd236a115d/tests%2Ftarget%2Fissue-2927.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fissue-2927.rs?ref=b1da2a53b489f86c17771a2b77acabdd236a115d", "patch": "@@ -0,0 +1,7 @@\n+// rustfmt-edition: Edition2018\n+#![feature(rust_2018_preview, uniform_paths)]\n+use ::log::{error, info, log};\n+use futures::prelude::*;\n+use http_03::cli::Cli;\n+use hyper::{service::service_fn_ok, Body, Response, Server};\n+use structopt::StructOpt;"}]}