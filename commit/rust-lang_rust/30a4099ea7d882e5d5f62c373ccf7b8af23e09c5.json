{"sha": "30a4099ea7d882e5d5f62c373ccf7b8af23e09c5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYTQwOTllYTdkODgyZTVkNWY2MmMzNzNjY2Y3YjhhZjIzZTA5YzU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-14T19:40:04Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-14T22:10:07Z"}, "message": "switch to modern paths", "tree": {"sha": "f90b6e97c4be15a7bdd2d0c4ae3f974b9c39c77e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f90b6e97c4be15a7bdd2d0c4ae3f974b9c39c77e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30a4099ea7d882e5d5f62c373ccf7b8af23e09c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30a4099ea7d882e5d5f62c373ccf7b8af23e09c5", "html_url": "https://github.com/rust-lang/rust/commit/30a4099ea7d882e5d5f62c373ccf7b8af23e09c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30a4099ea7d882e5d5f62c373ccf7b8af23e09c5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1a2649aff0a9387fb14646a56cb652061bc42ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1a2649aff0a9387fb14646a56cb652061bc42ec", "html_url": "https://github.com/rust-lang/rust/commit/e1a2649aff0a9387fb14646a56cb652061bc42ec"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4646742ca3f5ca118ddad8e7b68b80ea33438ec7", "filename": "crates/ra_lsp_server/src/main.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/30a4099ea7d882e5d5f62c373ccf7b8af23e09c5/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30a4099ea7d882e5d5f62c373ccf7b8af23e09c5/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain.rs?ref=30a4099ea7d882e5d5f62c373ccf7b8af23e09c5", "patch": "@@ -6,17 +6,17 @@ use ra_lsp_server::{Result, InitializationOptions};\n use ra_prof;\n \n fn main() -> Result<()> {\n-    ::std::env::set_var(\"RUST_BACKTRACE\", \"short\");\n+    std::env::set_var(\"RUST_BACKTRACE\", \"short\");\n     let logger = Logger::with_env_or_str(\"error\").duplicate_to_stderr(Duplicate::All);\n-    match ::std::env::var(\"RA_INTERNAL_MODE\") {\n+    match std::env::var(\"RA_INTERNAL_MODE\") {\n         Ok(ref v) if v == \"1\" => logger.log_to_file().directory(\"log\").start()?,\n         _ => logger.start()?,\n     };\n-    let prof_depth = match ::std::env::var(\"RA_PROFILE_DEPTH\") {\n+    let prof_depth = match std::env::var(\"RA_PROFILE_DEPTH\") {\n         Ok(ref d) => d.parse()?,\n         _ => 0,\n     };\n-    let profile_allowed = match ::std::env::var(\"RA_PROFILE\") {\n+    let profile_allowed = match std::env::var(\"RA_PROFILE\") {\n         Ok(ref p) => p.split(\";\").map(String::from).collect(),\n         _ => Vec::new(),\n     };\n@@ -36,7 +36,7 @@ fn main() -> Result<()> {\n \n fn main_inner() -> Result<()> {\n     let (receiver, sender, threads) = stdio_transport();\n-    let cwd = ::std::env::current_dir()?;\n+    let cwd = std::env::current_dir()?;\n     run_server(ra_lsp_server::server_capabilities(), receiver, sender, |params, r, s| {\n         let root = params.root_uri.and_then(|it| it.to_file_path().ok()).unwrap_or(cwd);\n "}]}