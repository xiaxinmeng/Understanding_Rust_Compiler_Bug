{"sha": "fc273a035dfb352fd90246dd2560c807701eeea7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjMjczYTAzNWRmYjM1MmZkOTAyNDZkZDI1NjBjODA3NzAxZWVlYTc=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-05T03:39:18Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-08-05T04:20:37Z"}, "message": "Unresolved link -> incompatible link kind\n\nClearly it has been resolved, because we say on the next line what it\nresolved to.", "tree": {"sha": "8b10f6f1cad534050d4c103d6338f2770f506af8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8b10f6f1cad534050d4c103d6338f2770f506af8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc273a035dfb352fd90246dd2560c807701eeea7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc273a035dfb352fd90246dd2560c807701eeea7", "html_url": "https://github.com/rust-lang/rust/commit/fc273a035dfb352fd90246dd2560c807701eeea7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc273a035dfb352fd90246dd2560c807701eeea7/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "444f5a0556fc5779663e69ff1a3d5a7362ba9618", "url": "https://api.github.com/repos/rust-lang/rust/commits/444f5a0556fc5779663e69ff1a3d5a7362ba9618", "html_url": "https://github.com/rust-lang/rust/commit/444f5a0556fc5779663e69ff1a3d5a7362ba9618"}], "stats": {"total": 43, "additions": 21, "deletions": 22}, "files": [{"sha": "8e485b97830949c3b6b9f00eb337c80279fdf53b", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fc273a035dfb352fd90246dd2560c807701eeea7/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc273a035dfb352fd90246dd2560c807701eeea7/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=fc273a035dfb352fd90246dd2560c807701eeea7", "patch": "@@ -777,7 +777,7 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                         (_, Some(Disambiguator::Kind(expected))) if kind == expected => {}\n                         (_, Some(expected)) => {\n                             // The resolved item did not match the disambiguator; give a better error than 'not found'\n-                            let msg = format!(\"unresolved link to `{}`\", path_str);\n+                            let msg = format!(\"incompatible link kind for `{}`\", path_str);\n                             report_diagnostic(cx, &msg, &item, &dox, link_range, |diag, sp| {\n                                 // HACK(jynelson): by looking at the source I saw the DefId we pass\n                                 // for `expected.descr()` doesn't matter, since it's not a crate\n@@ -787,7 +787,6 @@ impl<'a, 'tcx> DocFolder for LinkCollector<'a, 'tcx> {\n                                 diag.note(&note);\n                                 if let Some(sp) = sp {\n                                     diag.span_suggestion(sp, &help_msg, suggestion, Applicability::MaybeIncorrect);\n-                                    diag.set_sort_span(sp);\n                                 }\n                             });\n                             continue;"}, {"sha": "3bc08b23341e537f1ffe7b5a49873453f5b5d6ad", "filename": "src/test/rustdoc-ui/intra-links-disambiguator-mismatch.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fc273a035dfb352fd90246dd2560c807701eeea7/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc273a035dfb352fd90246dd2560c807701eeea7/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.rs?ref=fc273a035dfb352fd90246dd2560c807701eeea7", "patch": "@@ -12,52 +12,52 @@ const c: usize = 0;\n trait T {}\n \n /// Link to [struct@S]\n-//~^ ERROR unresolved link to `S`\n+//~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [mod@S]\n-//~^ ERROR unresolved link to `S`\n+//~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [union@S]\n-//~^ ERROR unresolved link to `S`\n+//~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [trait@S]\n-//~^ ERROR unresolved link to `S`\n+//~^ ERROR incompatible link kind for `S`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [struct@T]\n-//~^ ERROR unresolved link to `T`\n+//~^ ERROR incompatible link kind for `T`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [derive@m]\n-//~^ ERROR unresolved link to `m`\n+//~^ ERROR incompatible link kind for `m`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [const@s]\n-//~^ ERROR unresolved link to `s`\n+//~^ ERROR incompatible link kind for `s`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [static@c]\n-//~^ ERROR unresolved link to `c`\n+//~^ ERROR incompatible link kind for `c`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [fn@c]\n-//~^ ERROR unresolved link to `c`\n+//~^ ERROR incompatible link kind for `c`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n \n /// Link to [c()]\n-//~^ ERROR unresolved link to `c`\n+//~^ ERROR incompatible link kind for `c`\n //~| NOTE this link resolved\n //~| HELP use its disambiguator\n pub fn f() {}"}, {"sha": "8eb582512c03b885d4ac81ca4854e9857a92ffa8", "filename": "src/test/rustdoc-ui/intra-links-disambiguator-mismatch.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/fc273a035dfb352fd90246dd2560c807701eeea7/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fc273a035dfb352fd90246dd2560c807701eeea7/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fintra-links-disambiguator-mismatch.stderr?ref=fc273a035dfb352fd90246dd2560c807701eeea7", "patch": "@@ -1,4 +1,4 @@\n-error: unresolved link to `S`\n+error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:14:14\n    |\n LL | /// Link to [struct@S]\n@@ -11,71 +11,71 @@ LL | #![deny(broken_intra_doc_links)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n    = note: this link resolved to an enum, which is not a struct\n \n-error: unresolved link to `S`\n+error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:19:14\n    |\n LL | /// Link to [mod@S]\n    |              ^^^^^ help: to link to the enum, use its disambiguator: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a module\n \n-error: unresolved link to `S`\n+error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:24:14\n    |\n LL | /// Link to [union@S]\n    |              ^^^^^^^ help: to link to the enum, use its disambiguator: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a union\n \n-error: unresolved link to `S`\n+error: incompatible link kind for `S`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:29:14\n    |\n LL | /// Link to [trait@S]\n    |              ^^^^^^^ help: to link to the enum, use its disambiguator: `enum@S`\n    |\n    = note: this link resolved to an enum, which is not a trait\n \n-error: unresolved link to `T`\n+error: incompatible link kind for `T`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:34:14\n    |\n LL | /// Link to [struct@T]\n    |              ^^^^^^^^ help: to link to the trait, use its disambiguator: `trait@T`\n    |\n    = note: this link resolved to a trait, which is not a struct\n \n-error: unresolved link to `m`\n+error: incompatible link kind for `m`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:39:14\n    |\n LL | /// Link to [derive@m]\n    |              ^^^^^^^^ help: to link to the macro, use its disambiguator: `m!`\n    |\n    = note: this link resolved to a macro, which is not a derive macro\n \n-error: unresolved link to `s`\n+error: incompatible link kind for `s`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:44:14\n    |\n LL | /// Link to [const@s]\n    |              ^^^^^^^ help: to link to the static, use its disambiguator: `static@s`\n    |\n    = note: this link resolved to a static, which is not a constant\n \n-error: unresolved link to `c`\n+error: incompatible link kind for `c`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:49:14\n    |\n LL | /// Link to [static@c]\n    |              ^^^^^^^^ help: to link to the constant, use its disambiguator: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a static\n \n-error: unresolved link to `c`\n+error: incompatible link kind for `c`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:54:14\n    |\n LL | /// Link to [fn@c]\n    |              ^^^^ help: to link to the constant, use its disambiguator: `const@c`\n    |\n    = note: this link resolved to a constant, which is not a function\n \n-error: unresolved link to `c`\n+error: incompatible link kind for `c`\n   --> $DIR/intra-links-disambiguator-mismatch.rs:59:14\n    |\n LL | /// Link to [c()]"}]}