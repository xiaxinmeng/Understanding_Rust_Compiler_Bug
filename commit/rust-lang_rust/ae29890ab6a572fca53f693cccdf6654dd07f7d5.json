{"sha": "ae29890ab6a572fca53f693cccdf6654dd07f7d5", "node_id": "C_kwDOAAsO6NoAKGFlMjk4OTBhYjZhNTcyZmNhNTNmNjkzY2NjZGY2NjU0ZGQwN2Y3ZDU", "commit": {"author": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-04-26T22:00:36Z"}, "committer": {"name": "David Tolnay", "email": "dtolnay@gmail.com", "date": "2022-05-22T23:11:08Z"}, "message": "Add test of temporaries inside format_args of core/std macros", "tree": {"sha": "029c3965c1ca091158a933512e24f3033b16b91b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/029c3965c1ca091158a933512e24f3033b16b91b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ae29890ab6a572fca53f693cccdf6654dd07f7d5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEERijF2Cz/ZdaBZKeK+boUO5X/bYIFAmKKwwwACgkQ+boUO5X/\nbYLEWxAAxTWgeaM2cXa/K1IP0uLOafVUjbl8blMebxn8d8Y7KA5HjO0buor9ORFw\nC1VLfgRskCYFv6BfKrHbSMxCBIYelCDrK+wei0Afu7FVRkUmYRVzFCoF3zj8qfkW\nOL88F1IeYTh+Kxqbr/+0+91BIo3cZHl2T/wVtkLaOktRujeYaZFOufGKx/7LMZ0m\nt1JxYSZFn+22RW1lxrmDFoPc0/2td5GQV5j9qWAinYx06XU7nrghTtJFu3RteNno\nwKsi/Su0Mnn2q5uKie6cNH+Yl2pEDbNYaWhXdwuZoRImb7p5DhFcp9t29VDS+/Hx\nQzxW/drB1FIbkl0Sk5I6+VHvkcY1urLoZDkgx78qgHgud1zhfRZjQ3wGfw1MEduy\nwZa9NAVXk0KqjQ+QGLi28uTS/gaOgumF4IkCUrCr1RD1QVrsxzAVXdMi8okx8gUg\nyV62poXzssAVVePUFm0i4VWUrYUJX3cgyZEHtJ2/6c7fTCI+MorJO2+nz10GMAGz\nheDSDV3SFppAB9dwZ06SRpj18I4VCPtOYC/Ls7BlGz/wcBBWNR/JgnrvyN6BPqyO\nlPWhqfXP2ZDotUuxdeGqe4xYSgHwxeGlnHCOaOMEbEQHV6MqUZg+aQ0viq/U/GUa\nuj8lzm26RFqVBpHcfx8b0Vm7q49rbfd3UMbjc/5EG7ub+UAws58=\n=HcDD\n-----END PGP SIGNATURE-----", "payload": "tree 029c3965c1ca091158a933512e24f3033b16b91b\nparent b2eed72a6fbf254e7d44942eaa121fcbed05d3fb\nauthor David Tolnay <dtolnay@gmail.com> 1651010436 -0700\ncommitter David Tolnay <dtolnay@gmail.com> 1653261068 -0700\n\nAdd test of temporaries inside format_args of core/std macros\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ae29890ab6a572fca53f693cccdf6654dd07f7d5", "html_url": "https://github.com/rust-lang/rust/commit/ae29890ab6a572fca53f693cccdf6654dd07f7d5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ae29890ab6a572fca53f693cccdf6654dd07f7d5/comments", "author": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dtolnay", "id": 1940490, "node_id": "MDQ6VXNlcjE5NDA0OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/1940490?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dtolnay", "html_url": "https://github.com/dtolnay", "followers_url": "https://api.github.com/users/dtolnay/followers", "following_url": "https://api.github.com/users/dtolnay/following{/other_user}", "gists_url": "https://api.github.com/users/dtolnay/gists{/gist_id}", "starred_url": "https://api.github.com/users/dtolnay/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dtolnay/subscriptions", "organizations_url": "https://api.github.com/users/dtolnay/orgs", "repos_url": "https://api.github.com/users/dtolnay/repos", "events_url": "https://api.github.com/users/dtolnay/events{/privacy}", "received_events_url": "https://api.github.com/users/dtolnay/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb", "html_url": "https://github.com/rust-lang/rust/commit/b2eed72a6fbf254e7d44942eaa121fcbed05d3fb"}], "stats": {"total": 70, "additions": 70, "deletions": 0}, "files": [{"sha": "ddd4c9754bfa44e2205b33a2792ed02312ba2da0", "filename": "src/test/ui/macros/format-args-temporaries.rs", "status": "added", "additions": 70, "deletions": 0, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/ae29890ab6a572fca53f693cccdf6654dd07f7d5/src%2Ftest%2Fui%2Fmacros%2Fformat-args-temporaries.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ae29890ab6a572fca53f693cccdf6654dd07f7d5/src%2Ftest%2Fui%2Fmacros%2Fformat-args-temporaries.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-args-temporaries.rs?ref=ae29890ab6a572fca53f693cccdf6654dd07f7d5", "patch": "@@ -0,0 +1,70 @@\n+// check-pass\n+\n+use std::fmt::{self, Display};\n+\n+struct Mutex;\n+\n+impl Mutex {\n+    fn lock(&self) -> MutexGuard {\n+        MutexGuard(self)\n+    }\n+}\n+\n+struct MutexGuard<'a>(&'a Mutex);\n+\n+impl<'a> Drop for MutexGuard<'a> {\n+    fn drop(&mut self) {\n+        // Empty but this is a necessary part of the repro. Otherwise borrow\n+        // checker is fine with 'a dangling at the time that MutexGuard goes out\n+        // of scope.\n+    }\n+}\n+\n+impl<'a> MutexGuard<'a> {\n+    fn write_fmt(&self, _args: fmt::Arguments) {}\n+}\n+\n+impl<'a> Display for MutexGuard<'a> {\n+    fn fmt(&self, _formatter: &mut fmt::Formatter) -> fmt::Result {\n+        Ok(())\n+    }\n+}\n+\n+fn main() {\n+    let _write = {\n+        let out = Mutex;\n+        let mutex = Mutex;\n+        write!(out.lock(), \"{}\", mutex.lock()) /* no semicolon */\n+    };\n+\n+    let _writeln = {\n+        let out = Mutex;\n+        let mutex = Mutex;\n+        writeln!(out.lock(), \"{}\", mutex.lock()) /* no semicolon */\n+    };\n+\n+    let _print = {\n+        let mutex = Mutex;\n+        print!(\"{}\", mutex.lock()) /* no semicolon */\n+    };\n+\n+    let _println = {\n+        let mutex = Mutex;\n+        println!(\"{}\", mutex.lock()) /* no semicolon */\n+    };\n+\n+    let _eprint = {\n+        let mutex = Mutex;\n+        eprint!(\"{}\", mutex.lock()) /* no semicolon */\n+    };\n+\n+    let _eprintln = {\n+        let mutex = Mutex;\n+        eprintln!(\"{}\", mutex.lock()) /* no semicolon */\n+    };\n+\n+    let _panic = {\n+        let mutex = Mutex;\n+        panic!(\"{}\", mutex.lock()) /* no semicolon */\n+    };\n+}"}]}