{"sha": "558301034741d52ea37eba8957d16291d507e015", "node_id": "C_kwDOAAsO6NoAKDU1ODMwMTAzNDc0MWQ1MmVhMzdlYmE4OTU3ZDE2MjkxZDUwN2UwMTU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-29T09:17:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-29T09:17:12Z"}, "message": "Rollup merge of #92371 - dtolnay:attrblock, r=oli-obk\n\nRemove pretty printer space inside block with only outer attrs\n\nFollow-up to #92238 fixing one of the FIXMEs.\n\n```rust\nmacro_rules! repro {\n    ($expr:expr) => {\n        stringify!($expr)\n    };\n}\n\nfn main() {\n    println!(\"{}\", repro!(#[attr] {}));\n}\n```\n\nBefore:&ensp;`#[attr] { }`\nAfter:&ensp;`#[attr] {}`", "tree": {"sha": "2649b2fb0c7fb57ffc788ec72e95215c52577f68", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2649b2fb0c7fb57ffc788ec72e95215c52577f68"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/558301034741d52ea37eba8957d16291d507e015", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhzCeZCRBK7hj4Ov3rIwAASp4IAD8t2g7KrA8hpDxpNyyn+ZtD\nDu0OkQCaQ/yJSMhf059heznfI0CladLVoeF8/fUExcPvII7qzpSf7L2Nj/2wET9g\n9/rL/p+b2rAPxYhn8jTRgxBL8A8UIcTnsRUdHZ0Q5xIqU2qWYJ51rLXTNkVTZbnk\n8CnxxK5GCjvB7JCOqOxFdOCWoEsX1HWQavSI6lk+5b6KlUyDUuSX51CNw9ZyH8Pt\nm62m9nJYyDhmEuobYBxEYBuTXDDD7cH2rZETko5/fkxBQE9Z7TDJ44BngBgXA/7I\n5eTa0uuv/ILesUoYZXFlZI+puzn0408NomJlzr+VD2qEhOspN/Z5GuP5dhYzV1c=\n=NwPx\n-----END PGP SIGNATURE-----\n", "payload": "tree 2649b2fb0c7fb57ffc788ec72e95215c52577f68\nparent c82b2bc590a39694948b685ca1f715a9ad0ecc08\nparent cbccc4a59770f5124762e5fdb2085ff8b04e51cd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1640769432 +0100\ncommitter GitHub <noreply@github.com> 1640769432 +0100\n\nRollup merge of #92371 - dtolnay:attrblock, r=oli-obk\n\nRemove pretty printer space inside block with only outer attrs\n\nFollow-up to #92238 fixing one of the FIXMEs.\n\n```rust\nmacro_rules! repro {\n    ($expr:expr) => {\n        stringify!($expr)\n    };\n}\n\nfn main() {\n    println!(\"{}\", repro!(#[attr] {}));\n}\n```\n\nBefore:&ensp;`#[attr] { }`\nAfter:&ensp;`#[attr] {}`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/558301034741d52ea37eba8957d16291d507e015", "html_url": "https://github.com/rust-lang/rust/commit/558301034741d52ea37eba8957d16291d507e015", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/558301034741d52ea37eba8957d16291d507e015/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c82b2bc590a39694948b685ca1f715a9ad0ecc08", "url": "https://api.github.com/repos/rust-lang/rust/commits/c82b2bc590a39694948b685ca1f715a9ad0ecc08", "html_url": "https://github.com/rust-lang/rust/commit/c82b2bc590a39694948b685ca1f715a9ad0ecc08"}, {"sha": "cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/cbccc4a59770f5124762e5fdb2085ff8b04e51cd", "html_url": "https://github.com/rust-lang/rust/commit/cbccc4a59770f5124762e5fdb2085ff8b04e51cd"}], "stats": {"total": 47, "additions": 24, "deletions": 23}, "files": [{"sha": "65acd19e714936b4dafe8b49a7a4ece65c21d0b6", "filename": "compiler/rustc_ast_pretty/src/pprust/state.rs", "status": "modified", "additions": 12, "deletions": 11, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_pretty%2Fsrc%2Fpprust%2Fstate.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -387,23 +387,23 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n         self.print_string(sym.as_str(), style);\n     }\n \n-    fn print_inner_attributes(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_inner_attributes(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, false, true)\n     }\n \n-    fn print_inner_attributes_no_trailing_hardbreak(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_inner_attributes_no_trailing_hardbreak(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, false, false)\n     }\n \n-    fn print_outer_attributes(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_outer_attributes(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Outer, false, true)\n     }\n \n-    fn print_inner_attributes_inline(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_inner_attributes_inline(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Inner, true, true)\n     }\n \n-    fn print_outer_attributes_inline(&mut self, attrs: &[ast::Attribute]) {\n+    fn print_outer_attributes_inline(&mut self, attrs: &[ast::Attribute]) -> bool {\n         self.print_either_attributes(attrs, ast::AttrStyle::Outer, true, true)\n     }\n \n@@ -413,20 +413,21 @@ pub trait PrintState<'a>: std::ops::Deref<Target = pp::Printer> + std::ops::Dere\n         kind: ast::AttrStyle,\n         is_inline: bool,\n         trailing_hardbreak: bool,\n-    ) {\n-        let mut count = 0;\n+    ) -> bool {\n+        let mut printed = false;\n         for attr in attrs {\n             if attr.style == kind {\n                 self.print_attribute_inline(attr, is_inline);\n                 if is_inline {\n                     self.nbsp();\n                 }\n-                count += 1;\n+                printed = true;\n             }\n         }\n-        if count > 0 && trailing_hardbreak && !is_inline {\n+        if printed && trailing_hardbreak && !is_inline {\n             self.hardbreak_if_not_bol();\n         }\n+        printed\n     }\n \n     fn print_attribute(&mut self, attr: &ast::Attribute) {\n@@ -1646,7 +1647,7 @@ impl<'a> State<'a> {\n         self.ann.pre(self, AnnNode::Block(blk));\n         self.bopen();\n \n-        self.print_inner_attributes(attrs);\n+        let has_attrs = self.print_inner_attributes(attrs);\n \n         for (i, st) in blk.stmts.iter().enumerate() {\n             match st.kind {\n@@ -1660,7 +1661,7 @@ impl<'a> State<'a> {\n             }\n         }\n \n-        let empty = attrs.is_empty() && blk.stmts.is_empty();\n+        let empty = !has_attrs && blk.stmts.is_empty();\n         self.bclose_maybe_open(blk.span, empty, close_box);\n         self.ann.post(self, AnnNode::Block(blk))\n     }"}, {"sha": "6d9cb89f022987e6b6d63cfb97218b28bcc09ed1", "filename": "src/test/pretty/attr-fn-inner.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fattr-fn-inner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fattr-fn-inner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-fn-inner.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -9,8 +9,8 @@\n fn main() {\n     #![rustc_dummy]\n     #[rustc_dummy]\n-    fn f() { }\n+    fn f() {}\n \n     #[rustc_dummy]\n-    fn g() { }\n+    fn g() {}\n }"}, {"sha": "d132014420df9aee90581da15c224fdf1c06e2dd", "filename": "src/test/pretty/attr-literals.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fattr-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fattr-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-literals.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -7,8 +7,8 @@\n fn main() {\n     #![rustc_dummy(\"hi\", 1, 2, 1.012, pi = 3.14, bye, name(\"John\"))]\n     #[rustc_dummy = 8]\n-    fn f() { }\n+    fn f() {}\n \n     #[rustc_dummy(1, 2, 3)]\n-    fn g() { }\n+    fn g() {}\n }"}, {"sha": "8486342b0879f0c2f371cc6cfa15dc2639e195cb", "filename": "src/test/pretty/attr-tokens-raw-ident.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fattr-tokens-raw-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fattr-tokens-raw-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fattr-tokens-raw-ident.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -4,4 +4,4 @@\n // pp-exact\n \n #[rustfmt::r#final(final)]\n-fn main() { }\n+fn main() {}"}, {"sha": "1137d8045648920697911ee34dd97200170c9b91", "filename": "src/test/pretty/delimited-token-groups.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdelimited-token-groups.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -45,4 +45,4 @@ mac! {\n   }]\n #[rustc_dummy =\n   \"aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa aaaaaaaa\"]\n-fn main() { }\n+fn main() {}"}, {"sha": "a49860daa6ad6e0f7781384cedbf90d38908aa4e", "filename": "src/test/pretty/doc-comments.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fdoc-comments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fpretty%2Fdoc-comments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fdoc-comments.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -5,7 +5,7 @@\n // some single-line non-doc comment\n \n /// some single line outer-docs\n-fn a() { }\n+fn a() {}\n \n fn b() {\n     //! some single line inner-docs\n@@ -17,7 +17,7 @@ fn b() {\n //////////////////////////////////\n /// some single-line outer-docs preceded by a separator\n /// (and trailing whitespaces)\n-fn c() { }\n+fn c() {}\n \n /*\n  * some multi-line non-doc comment\n@@ -26,7 +26,7 @@ fn c() { }\n /**\n  * some multi-line outer-docs\n  */\n-fn d() { }\n+fn d() {}\n \n fn e() {\n     /*!\n@@ -43,10 +43,10 @@ fn e() {\n /**\n  * some multi-line outer-docs preceded by a separator\n  */\n-fn f() { }\n+fn f() {}\n \n #[doc = \"unsugared outer doc-comments work also\"]\n-fn g() { }\n+fn g() {}\n \n fn h() {\n     #![doc = \"as do inner ones\"]"}, {"sha": "f284ac727f4b7f15c05b1b157077e6ea947a3015", "filename": "src/test/ui/macros/stringify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/558301034741d52ea37eba8957d16291d507e015/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fstringify.rs?ref=558301034741d52ea37eba8957d16291d507e015", "patch": "@@ -235,7 +235,7 @@ fn test_expr() {\n             #[attr]\n             {}\n         ),\n-        \"#[attr] { }\", // FIXME\n+        \"#[attr] {}\",\n     );\n     assert_eq!(\n         stringify_expr!("}]}