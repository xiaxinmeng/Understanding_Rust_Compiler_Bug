{"sha": "6de4924b6c1ff5a99397ca1a3894c51f085f3e6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkZTQ5MjRiNmMxZmY1YTk5Mzk3Y2ExYTM4OTRjNTFmMDg1ZjNlNmY=", "commit": {"author": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-10-17T10:09:11Z"}, "committer": {"name": "Mateusz Miku\u0142a", "email": "mati865@gmail.com", "date": "2019-10-17T10:09:11Z"}, "message": "Update emscripten functions declarations", "tree": {"sha": "e08ffe0bf1e863f75c086ee8f2e2b52374ec658f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e08ffe0bf1e863f75c086ee8f2e2b52374ec658f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f", "html_url": "https://github.com/rust-lang/rust/commit/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f/comments", "author": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mati865", "id": 1174646, "node_id": "MDQ6VXNlcjExNzQ2NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/1174646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mati865", "html_url": "https://github.com/mati865", "followers_url": "https://api.github.com/users/mati865/followers", "following_url": "https://api.github.com/users/mati865/following{/other_user}", "gists_url": "https://api.github.com/users/mati865/gists{/gist_id}", "starred_url": "https://api.github.com/users/mati865/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mati865/subscriptions", "organizations_url": "https://api.github.com/users/mati865/orgs", "repos_url": "https://api.github.com/users/mati865/repos", "events_url": "https://api.github.com/users/mati865/events{/privacy}", "received_events_url": "https://api.github.com/users/mati865/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "01008e4cd68a92e585d7f9e718393568c800589e", "url": "https://api.github.com/repos/rust-lang/rust/commits/01008e4cd68a92e585d7f9e718393568c800589e", "html_url": "https://github.com/rust-lang/rust/commit/01008e4cd68a92e585d7f9e718393568c800589e"}], "stats": {"total": 36, "additions": 2, "deletions": 34}, "files": [{"sha": "ba611a6b7e7b9ae768bf6f6d5e13fba1f372be45", "filename": "src/libstd/sys/unix/fd.rs", "status": "modified", "additions": 2, "deletions": 32, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f/src%2Flibstd%2Fsys%2Funix%2Ffd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffd.rs?ref=6de4924b6c1ff5a99397ca1a3894c51f085f3e6f", "patch": "@@ -71,22 +71,7 @@ impl FileDesc {\n         #[cfg(target_os = \"android\")]\n         use super::android::cvt_pread64;\n \n-        #[cfg(target_os = \"emscripten\")]\n-        unsafe fn cvt_pread64(fd: c_int, buf: *mut c_void, count: usize, offset: i64)\n-            -> io::Result<isize>\n-        {\n-            use crate::convert::TryInto;\n-            use libc::pread64;\n-            // pread64 on emscripten actually takes a 32 bit offset\n-            if let Ok(o) = offset.try_into() {\n-                cvt(pread64(fd, buf, count, o))\n-            } else {\n-                Err(io::Error::new(io::ErrorKind::InvalidInput,\n-                                   \"cannot pread >2GB\"))\n-            }\n-        }\n-\n-        #[cfg(not(any(target_os = \"android\", target_os = \"emscripten\")))]\n+        #[cfg(not(target_os = \"android\"))]\n         unsafe fn cvt_pread64(fd: c_int, buf: *mut c_void, count: usize, offset: i64)\n             -> io::Result<isize>\n         {\n@@ -128,22 +113,7 @@ impl FileDesc {\n         #[cfg(target_os = \"android\")]\n         use super::android::cvt_pwrite64;\n \n-        #[cfg(target_os = \"emscripten\")]\n-        unsafe fn cvt_pwrite64(fd: c_int, buf: *const c_void, count: usize, offset: i64)\n-            -> io::Result<isize>\n-        {\n-            use crate::convert::TryInto;\n-            use libc::pwrite64;\n-            // pwrite64 on emscripten actually takes a 32 bit offset\n-            if let Ok(o) = offset.try_into() {\n-                cvt(pwrite64(fd, buf, count, o))\n-            } else {\n-                Err(io::Error::new(io::ErrorKind::InvalidInput,\n-                                   \"cannot pwrite >2GB\"))\n-            }\n-        }\n-\n-        #[cfg(not(any(target_os = \"android\", target_os = \"emscripten\")))]\n+        #[cfg(not(target_os = \"android\"))]\n         unsafe fn cvt_pwrite64(fd: c_int, buf: *const c_void, count: usize, offset: i64)\n             -> io::Result<isize>\n         {"}, {"sha": "fdfc350995d08078be773a4b317cc1c0f7ec100e", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6de4924b6c1ff5a99397ca1a3894c51f085f3e6f/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=6de4924b6c1ff5a99397ca1a3894c51f085f3e6f", "patch": "@@ -602,8 +602,6 @@ impl File {\n             SeekFrom::End(off) => (libc::SEEK_END, off),\n             SeekFrom::Current(off) => (libc::SEEK_CUR, off),\n         };\n-        #[cfg(target_os = \"emscripten\")]\n-        let pos = pos as i32;\n         let n = cvt(unsafe { lseek64(self.0.raw(), pos, whence) })?;\n         Ok(n as u64)\n     }"}]}