{"sha": "ba3e3282da0a6500a2a8945a664631fbd9463c64", "node_id": "C_kwDOAAsO6NoAKGJhM2UzMjgyZGEwYTY1MDBhMmE4OTQ1YTY2NDYzMWZiZDk0NjNjNjQ", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-12-16T20:16:55Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-12-16T20:17:10Z"}, "message": "Deduplicate inserted parentheses in binding mode hints", "tree": {"sha": "84307b559b397d375fae09586a8c02de1668bb1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84307b559b397d375fae09586a8c02de1668bb1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba3e3282da0a6500a2a8945a664631fbd9463c64", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba3e3282da0a6500a2a8945a664631fbd9463c64", "html_url": "https://github.com/rust-lang/rust/commit/ba3e3282da0a6500a2a8945a664631fbd9463c64", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba3e3282da0a6500a2a8945a664631fbd9463c64/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6c2bb21ab54a84a05163fcb0fce87b540c4ed1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6c2bb21ab54a84a05163fcb0fce87b540c4ed1e", "html_url": "https://github.com/rust-lang/rust/commit/b6c2bb21ab54a84a05163fcb0fce87b540c4ed1e"}], "stats": {"total": 21, "additions": 15, "deletions": 6}, "files": [{"sha": "66a40627dc4a5f937a3c6d304190d69351b7238a", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 15, "deletions": 6, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/ba3e3282da0a6500a2a8945a664631fbd9463c64/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba3e3282da0a6500a2a8945a664631fbd9463c64/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=ba3e3282da0a6500a2a8945a664631fbd9463c64", "patch": "@@ -850,7 +850,18 @@ fn binding_mode_hints(\n         return None;\n     }\n \n-    let range = pat.syntax().text_range();\n+    let outer_paren_pat = pat\n+        .syntax()\n+        .ancestors()\n+        .skip(1)\n+        .map_while(ast::Pat::cast)\n+        .map_while(|pat| match pat {\n+            ast::Pat::ParenPat(pat) => Some(pat),\n+            _ => None,\n+        })\n+        .last();\n+    let range =\n+        outer_paren_pat.as_ref().map_or_else(|| pat.syntax(), |it| it.syntax()).text_range();\n     sema.pattern_adjustments(&pat).iter().for_each(|ty| {\n         let reference = ty.is_reference();\n         let mut_reference = ty.is_mutable_reference();\n@@ -875,13 +886,13 @@ fn binding_mode_hints(\n                 hir::BindingMode::Ref(Mutability::Shared) => \"ref\",\n             };\n             acc.push(InlayHint {\n-                range,\n+                range: pat.syntax().text_range(),\n                 kind: InlayKind::BindingModeHint,\n                 label: bm.to_string().into(),\n                 tooltip: Some(InlayTooltip::String(\"Inferred binding mode\".into())),\n             });\n         }\n-        ast::Pat::OrPat(pat) => {\n+        ast::Pat::OrPat(pat) if outer_paren_pat.is_none() => {\n             acc.push(InlayHint {\n                 range: pat.syntax().text_range(),\n                 kind: InlayKind::OpeningParenthesis,\n@@ -2973,11 +2984,9 @@ fn __(\n       //^^^^^^^^^^^(\n       //^^^^^^^^^^^)\n         ((x,) | (x,)) => (),\n-       //^^^^^^^^^^^&\n+      //^^^^^^^^^^^^^&\n         //^ ref\n                //^ ref\n-       //^^^^^^^^^^^(\n-       //^^^^^^^^^^^)\n     }\n     match &mut (0,) {\n         (x,) => ()"}]}