{"sha": "c26f6dbead2d03e323d4e96b35084c131d1be6da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNmY2ZGJlYWQyZDAzZTMyM2Q0ZTk2YjM1MDg0YzEzMWQxYmU2ZGE=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-03-12T19:13:19Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-04-02T14:14:58Z"}, "message": "Remove workaround code for a closed issue", "tree": {"sha": "eb22d56b1d67954b1ccec024afbc34911dfd543f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb22d56b1d67954b1ccec024afbc34911dfd543f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c26f6dbead2d03e323d4e96b35084c131d1be6da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c26f6dbead2d03e323d4e96b35084c131d1be6da", "html_url": "https://github.com/rust-lang/rust/commit/c26f6dbead2d03e323d4e96b35084c131d1be6da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c26f6dbead2d03e323d4e96b35084c131d1be6da/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc8fec28cc46fc0a999fa3069ccdb4595cea9df3", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc8fec28cc46fc0a999fa3069ccdb4595cea9df3", "html_url": "https://github.com/rust-lang/rust/commit/dc8fec28cc46fc0a999fa3069ccdb4595cea9df3"}], "stats": {"total": 40, "additions": 0, "deletions": 40}, "files": [{"sha": "9f57e79bb4c73871ed98595c4e823a97186d7204", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 0, "deletions": 40, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c26f6dbead2d03e323d4e96b35084c131d1be6da/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f6dbead2d03e323d4e96b35084c131d1be6da/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c26f6dbead2d03e323d4e96b35084c131d1be6da", "patch": "@@ -2046,50 +2046,10 @@ impl<'test> TestCx<'test> {\n     }\n \n     fn fatal_proc_rec(&self, err: &str, proc_res: &ProcRes) -> ! {\n-        self.try_print_open_handles();\n         self.error(err);\n         proc_res.fatal(None);\n     }\n \n-    // This function is a poor man's attempt to debug rust-lang/rust#38620, if\n-    // that's closed then this should be deleted\n-    //\n-    // This is a very \"opportunistic\" debugging attempt, so we ignore all\n-    // errors here.\n-    fn try_print_open_handles(&self) {\n-        if !cfg!(windows) {\n-            return;\n-        }\n-        if self.config.mode != Incremental {\n-            return;\n-        }\n-\n-        let filename = match self.testpaths.file.file_stem() {\n-            Some(path) => path,\n-            None => return,\n-        };\n-\n-        let mut cmd = Command::new(\"handle.exe\");\n-        cmd.arg(\"-a\").arg(\"-u\");\n-        cmd.arg(filename);\n-        cmd.arg(\"-nobanner\");\n-        cmd.stdout(Stdio::piped());\n-        cmd.stderr(Stdio::piped());\n-        let output = match cmd.spawn().and_then(read2_abbreviated) {\n-            Ok(output) => output,\n-            Err(_) => return,\n-        };\n-        println!(\"---------------------------------------------------\");\n-        println!(\"ran extra command to debug rust-lang/rust#38620: \");\n-        println!(\"{:?}\", cmd);\n-        println!(\"result: {}\", output.status);\n-        println!(\"--- stdout ----------------------------------------\");\n-        println!(\"{}\", String::from_utf8_lossy(&output.stdout));\n-        println!(\"--- stderr ----------------------------------------\");\n-        println!(\"{}\", String::from_utf8_lossy(&output.stderr));\n-        println!(\"---------------------------------------------------\");\n-    }\n-\n     // codegen tests (using FileCheck)\n \n     fn compile_test_and_save_ir(&self) -> ProcRes {"}]}