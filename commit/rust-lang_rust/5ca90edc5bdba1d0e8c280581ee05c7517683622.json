{"sha": "5ca90edc5bdba1d0e8c280581ee05c7517683622", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjYTkwZWRjNWJkYmExZDBlOGMyODA1ODFlZTA1Yzc1MTc2ODM2MjI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-27T02:22:40Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-10-27T02:22:40Z"}, "message": "Do not remove path disambiugator inside macro", "tree": {"sha": "377c18cdcf2c9ffdc149a35d9956f355fa453a47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/377c18cdcf2c9ffdc149a35d9956f355fa453a47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ca90edc5bdba1d0e8c280581ee05c7517683622", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ca90edc5bdba1d0e8c280581ee05c7517683622", "html_url": "https://github.com/rust-lang/rust/commit/5ca90edc5bdba1d0e8c280581ee05c7517683622", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ca90edc5bdba1d0e8c280581ee05c7517683622/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "131f11a6e55cbd942a49ebdec3305ba53edaf333", "url": "https://api.github.com/repos/rust-lang/rust/commits/131f11a6e55cbd942a49ebdec3305ba53edaf333", "html_url": "https://github.com/rust-lang/rust/commit/131f11a6e55cbd942a49ebdec3305ba53edaf333"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "f1d89ab9aedda268563f50e81389ae4bb5b6ec40", "filename": "src/types.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5ca90edc5bdba1d0e8c280581ee05c7517683622/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ca90edc5bdba1d0e8c280581ee05c7517683622/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=5ca90edc5bdba1d0e8c280581ee05c7517683622", "patch": "@@ -229,7 +229,9 @@ fn rewrite_segment(\n                     .chain(data.bindings.iter().map(|x| SegmentParam::Binding(&*x)))\n                     .collect::<Vec<_>>();\n \n-                let separator = if path_context == PathContext::Expr {\n+                let force_separator =\n+                    context.inside_macro() && context.snippet(data.span).starts_with(\"::\");\n+                let separator = if path_context == PathContext::Expr || force_separator {\n                     \"::\"\n                 } else {\n                     \"\""}]}