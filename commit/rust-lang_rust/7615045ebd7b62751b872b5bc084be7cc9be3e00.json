{"sha": "7615045ebd7b62751b872b5bc084be7cc9be3e00", "node_id": "C_kwDOAAsO6NoAKDc2MTUwNDVlYmQ3YjYyNzUxYjg3MmI1YmMwODRiZTdjYzliZTNlMDA", "commit": {"author": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-02-04T10:55:33Z"}, "committer": {"name": "bohan", "email": "bohan-zhang@foxmail.com", "date": "2023-02-09T14:28:53Z"}, "message": "test: snapshot for derive suggestion in diff files", "tree": {"sha": "25f405aa8e2b93667140f48b655f6713afd49f7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25f405aa8e2b93667140f48b655f6713afd49f7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7615045ebd7b62751b872b5bc084be7cc9be3e00", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7615045ebd7b62751b872b5bc084be7cc9be3e00", "html_url": "https://github.com/rust-lang/rust/commit/7615045ebd7b62751b872b5bc084be7cc9be3e00", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7615045ebd7b62751b872b5bc084be7cc9be3e00/comments", "author": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bvanjoi", "id": 30187863, "node_id": "MDQ6VXNlcjMwMTg3ODYz", "avatar_url": "https://avatars.githubusercontent.com/u/30187863?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bvanjoi", "html_url": "https://github.com/bvanjoi", "followers_url": "https://api.github.com/users/bvanjoi/followers", "following_url": "https://api.github.com/users/bvanjoi/following{/other_user}", "gists_url": "https://api.github.com/users/bvanjoi/gists{/gist_id}", "starred_url": "https://api.github.com/users/bvanjoi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bvanjoi/subscriptions", "organizations_url": "https://api.github.com/users/bvanjoi/orgs", "repos_url": "https://api.github.com/users/bvanjoi/repos", "events_url": "https://api.github.com/users/bvanjoi/events{/privacy}", "received_events_url": "https://api.github.com/users/bvanjoi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ba4e95368b2a71018cd995f5254ba3e7422954e", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba4e95368b2a71018cd995f5254ba3e7422954e", "html_url": "https://github.com/rust-lang/rust/commit/7ba4e95368b2a71018cd995f5254ba3e7422954e"}], "stats": {"total": 146, "additions": 135, "deletions": 11}, "files": [{"sha": "5f460b26488c442b7cdfa12f2499cf6fa591b1ec", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7615045ebd7b62751b872b5bc084be7cc9be3e00/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7615045ebd7b62751b872b5bc084be7cc9be3e00/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=7615045ebd7b62751b872b5bc084be7cc9be3e00", "patch": "@@ -1796,17 +1796,17 @@ impl EmitterWriter {\n                 // telling users to make a change but not clarifying *where*.\n                 let loc = sm.lookup_char_pos(parts[0].span.lo());\n                 if loc.file.name != sm.span_to_filename(span) && loc.file.name.is_real() {\n-                    buffer.puts(row_num - 1, 0, \"--> \", Style::LineNumber);\n-                    buffer.append(\n-                        row_num - 1,\n-                        &format!(\n-                            \"{}:{}:{}\",\n-                            sm.filename_for_diagnostics(&loc.file.name),\n-                            sm.doctest_offset_line(&loc.file.name, loc.line),\n-                            loc.col.0 + 1,\n-                        ),\n-                        Style::LineAndColumn,\n-                    );\n+                    let arrow = \"--> \";\n+                    buffer.puts(row_num - 1, 0, arrow, Style::LineNumber);\n+                    let filename = sm.filename_for_diagnostics(&loc.file.name);\n+                    let offset = sm.doctest_offset_line(&loc.file.name, loc.line);\n+                    let message = format!(\"{}:{}:{}\", filename, offset, loc.col.0 + 1);\n+                    if row_num == 2 {\n+                        let col = usize::max(max_line_num_len + 1, arrow.len());\n+                        buffer.puts(1, col, &message, Style::LineAndColumn);\n+                    } else {\n+                        buffer.append(row_num - 1, &message, Style::LineAndColumn);\n+                    }\n                     for _ in 0..max_line_num_len {\n                         buffer.prepend(row_num - 1, \" \", Style::NoStyle);\n                     }"}, {"sha": "71b84cd30d6ff5eb313b4b3e5b39a8fec9ec5071", "filename": "tests/ui/modules/issue-107649.rs", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/7615045ebd7b62751b872b5bc084be7cc9be3e00/tests%2Fui%2Fmodules%2Fissue-107649.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7615045ebd7b62751b872b5bc084be7cc9be3e00/tests%2Fui%2Fmodules%2Fissue-107649.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodules%2Fissue-107649.rs?ref=7615045ebd7b62751b872b5bc084be7cc9be3e00", "patch": "@@ -0,0 +1,106 @@\n+// compile-flags: -Z ui-testing=no\n+#[path = \"auxiliary/dummy_lib.rs\"]\n+mod lib;\n+\n+/// The function needs to be long enough to\n+/// ensure `max_line_num_len` to be large enough\n+/// for no-ui-testing\n+fn main() {\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    ();\n+    dbg!(lib::Dummy); //~ Error: `Dummy` doesn't implement `Debug`\n+}"}, {"sha": "1cea71f2829fd98677ada1da7b4c28d2e3fff1a3", "filename": "tests/ui/modules/issue-107649.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7615045ebd7b62751b872b5bc084be7cc9be3e00/tests%2Fui%2Fmodules%2Fissue-107649.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7615045ebd7b62751b872b5bc084be7cc9be3e00/tests%2Fui%2Fmodules%2Fissue-107649.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodules%2Fissue-107649.stderr?ref=7615045ebd7b62751b872b5bc084be7cc9be3e00", "patch": "@@ -0,0 +1,18 @@\n+error[E0277]: `Dummy` doesn't implement `Debug`\n+   --> $DIR/issue-107649.rs:105:5\n+    |\n+105 |     dbg!(lib::Dummy);\n+    |     ^^^^^^^^^^^^^^^^ `Dummy` cannot be formatted using `{:?}`\n+    |\n+    = help: the trait `Debug` is not implemented for `Dummy`\n+    = note: add `#[derive(Debug)]` to `Dummy` or manually `impl Debug for Dummy`\n+    = note: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `dbg` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider annotating `Dummy` with `#[derive(Debug)]`\n+   --> $DIR/auxiliary/dummy_lib.rs:2:1\n+    |\n+2   | #[derive(Debug)]\n+    |\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}