{"sha": "67fd99589ad161fcd154cfdb0f33d349ec23896d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3ZmQ5OTU4OWFkMTYxZmNkMTU0Y2ZkYjBmMzNkMzQ5ZWMyMzg5NmQ=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-05-30T10:50:06Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2019-06-01T07:14:59Z"}, "message": "Implement Clone::clone_from for Result.", "tree": {"sha": "dfd7042965f0edac819ff9e22c96e3311fad9752", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfd7042965f0edac819ff9e22c96e3311fad9752"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67fd99589ad161fcd154cfdb0f33d349ec23896d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67fd99589ad161fcd154cfdb0f33d349ec23896d", "html_url": "https://github.com/rust-lang/rust/commit/67fd99589ad161fcd154cfdb0f33d349ec23896d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67fd99589ad161fcd154cfdb0f33d349ec23896d/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb12460467aa98cb82587308341939679ff2a7d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb12460467aa98cb82587308341939679ff2a7d1", "html_url": "https://github.com/rust-lang/rust/commit/cb12460467aa98cb82587308341939679ff2a7d1"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "8a09877ce1f4be591140be8f90e75a4d2773cad5", "filename": "src/libcore/result.rs", "status": "modified", "additions": 22, "deletions": 1, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/67fd99589ad161fcd154cfdb0f33d349ec23896d/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67fd99589ad161fcd154cfdb0f33d349ec23896d/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=67fd99589ad161fcd154cfdb0f33d349ec23896d", "patch": "@@ -240,7 +240,7 @@ use crate::ops::{self, Deref};\n ///\n /// [`Ok`]: enum.Result.html#variant.Ok\n /// [`Err`]: enum.Result.html#variant.Err\n-#[derive(Clone, Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\n+#[derive(Copy, PartialEq, PartialOrd, Eq, Ord, Debug, Hash)]\n #[must_use = \"this `Result` may be an `Err` variant, which should be handled\"]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub enum Result<T, E> {\n@@ -1003,6 +1003,27 @@ fn unwrap_failed<E: fmt::Debug>(msg: &str, error: E) -> ! {\n // Trait implementations\n /////////////////////////////////////////////////////////////////////////////\n \n+#[stable(feature = \"rust1\", since = \"1.0.0\")]\n+impl<T: Clone, E: Clone> Clone for Result<T, E> {\n+    #[inline]\n+    fn clone(&self) -> Self {\n+        match self {\n+            Ok(x) => Ok(x.clone()),\n+            Err(x) => Err(x.clone()),\n+        }\n+    }\n+\n+    #[inline]\n+    fn clone_from(&mut self, source: &Self) {\n+        match (self, source) {\n+            (Ok(to), Ok(from)) => to.clone_from(from),\n+            (Err(to), Err(from)) => to.clone_from(from),\n+            (to, from) => *to = from.clone(),\n+        }\n+    }\n+}\n+\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T, E> IntoIterator for Result<T, E> {\n     type Item = T;"}]}