{"sha": "a1ecf394423eed9967e2c141c72a067da4b5eaaa", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExZWNmMzk0NDIzZWVkOTk2N2UyYzE0MWM3MmEwNjdkYTRiNWVhYWE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2019-09-11T18:52:36Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2019-09-11T19:29:07Z"}, "message": "tests: dogfood: run tests with debuginfo=0 reducing dogfood target dir size even further.", "tree": {"sha": "068924a6f87d7001c9a30369b7d2a8e267fdd26a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/068924a6f87d7001c9a30369b7d2a8e267fdd26a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1ecf394423eed9967e2c141c72a067da4b5eaaa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1ecf394423eed9967e2c141c72a067da4b5eaaa", "html_url": "https://github.com/rust-lang/rust/commit/a1ecf394423eed9967e2c141c72a067da4b5eaaa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1ecf394423eed9967e2c141c72a067da4b5eaaa/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34dc07863da332e2a00b502d361205e5863592a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/34dc07863da332e2a00b502d361205e5863592a8", "html_url": "https://github.com/rust-lang/rust/commit/34dc07863da332e2a00b502d361205e5863592a8"}], "stats": {"total": 16, "additions": 10, "deletions": 6}, "files": [{"sha": "944f3c2c0138f99554c88f0a8c856bc4f18848c0", "filename": "tests/dogfood.rs", "status": "modified", "additions": 10, "deletions": 6, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a1ecf394423eed9967e2c141c72a067da4b5eaaa/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1ecf394423eed9967e2c141c72a067da4b5eaaa/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=a1ecf394423eed9967e2c141c72a067da4b5eaaa", "patch": "@@ -1,15 +1,16 @@\n #[test]\n-fn dogfood() {\n+fn dogfood_clippy() {\n+    // run clippy on itself and fail the test if lint warnings are reported\n     if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n         return;\n     }\n     let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n-    let clippy_cmd = std::path::Path::new(&root_dir)\n+    let clippy_binary = std::path::Path::new(&root_dir)\n         .join(\"target\")\n         .join(env!(\"PROFILE\"))\n         .join(\"cargo-clippy\");\n \n-    let output = std::process::Command::new(clippy_cmd)\n+    let output = std::process::Command::new(clippy_binary)\n         .current_dir(root_dir)\n         .env(\"CLIPPY_DOGFOOD\", \"1\")\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n@@ -20,6 +21,7 @@ fn dogfood() {\n         .args(&[\"-D\", \"clippy::all\"])\n         .args(&[\"-D\", \"clippy::internal\"])\n         .args(&[\"-D\", \"clippy::pedantic\"])\n+        .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n         .output()\n         .unwrap();\n     println!(\"status: {}\", output.status);\n@@ -30,12 +32,13 @@ fn dogfood() {\n }\n \n #[test]\n-fn dogfood_tests() {\n+fn dogfood_subprojects() {\n+    // run clippy on remaining subprojects and fail the test if lint warnings are reported\n     if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n         return;\n     }\n     let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n-    let clippy_cmd = std::path::Path::new(&root_dir)\n+    let clippy_binary = std::path::Path::new(&root_dir)\n         .join(\"target\")\n         .join(env!(\"PROFILE\"))\n         .join(\"cargo-clippy\");\n@@ -48,14 +51,15 @@ fn dogfood_tests() {\n         \"clippy_dev\",\n         \"rustc_tools_util\",\n     ] {\n-        let output = std::process::Command::new(&clippy_cmd)\n+        let output = std::process::Command::new(&clippy_binary)\n             .current_dir(root_dir.join(d))\n             .env(\"CLIPPY_DOGFOOD\", \"1\")\n             .env(\"CARGO_INCREMENTAL\", \"0\")\n             .arg(\"clippy\")\n             .arg(\"--\")\n             .args(&[\"-D\", \"clippy::all\"])\n             .args(&[\"-D\", \"clippy::pedantic\"])\n+            .arg(\"-Cdebuginfo=0\") // disable debuginfo to generate less data in the target dir\n             .output()\n             .unwrap();\n         println!(\"status: {}\", output.status);"}]}