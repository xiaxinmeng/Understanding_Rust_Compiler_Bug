{"sha": "d1677f3286d57009361eee85fb19d523c64b937c", "node_id": "C_kwDOAAsO6NoAKGQxNjc3ZjMyODZkNTcwMDkzNjFlZWU4NWZiMTlkNTIzYzY0YjkzN2M", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-03T15:53:30Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-12-03T15:54:34Z"}, "message": "Remove syntax highlighting hack for builtin attrs", "tree": {"sha": "e512d1d900667ba02f4c1df8741a999244ef8505", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e512d1d900667ba02f4c1df8741a999244ef8505"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1677f3286d57009361eee85fb19d523c64b937c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1677f3286d57009361eee85fb19d523c64b937c", "html_url": "https://github.com/rust-lang/rust/commit/d1677f3286d57009361eee85fb19d523c64b937c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1677f3286d57009361eee85fb19d523c64b937c/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e58af219a4b55ab122f46f4abac2f59032c8d690", "url": "https://api.github.com/repos/rust-lang/rust/commits/e58af219a4b55ab122f46f4abac2f59032c8d690", "html_url": "https://github.com/rust-lang/rust/commit/e58af219a4b55ab122f46f4abac2f59032c8d690"}], "stats": {"total": 143, "additions": 61, "deletions": 82}, "files": [{"sha": "cfa674cafa654e45683f03fbcbe206e4007ebb3a", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -2028,7 +2028,7 @@ pub struct BuiltinAttr(usize);\n \n impl BuiltinAttr {\n     pub(crate) fn by_name(name: &str) -> Option<Self> {\n-        // TODO: def maps registered attrs?\n+        // FIXME: def maps registered attrs?\n         hir_def::builtin_attr::find_builtin_attr_idx(name).map(Self)\n     }\n }\n@@ -2038,7 +2038,7 @@ pub struct Tool(usize);\n \n impl Tool {\n     pub(crate) fn by_name(name: &str) -> Option<Self> {\n-        // TODO: def maps registered tools\n+        // FIXME: def maps registered tools\n         hir_def::builtin_attr::TOOL_MODULES.iter().position(|&tool| tool == name).map(Self)\n     }\n }"}, {"sha": "118f8dd9be05e98791dc5c3252ab0e82cf40f48d", "filename": "crates/ide/src/syntax_highlighting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -115,6 +115,7 @@ pub struct HlRange {\n // parameter:: Emitted for non-self function parameters.\n // property:: Emitted for struct and union fields.\n // selfKeyword:: Emitted for the self function parameter and self path-specifier.\n+// tool:: Emitted for tool modules.\n // typeParameter:: Emitted for type parameters.\n // unresolvedReference:: Emitted for unresolved references, names that rust-analyzer can't find the definition of.\n // variable:: Emitted for locals, constants and statics."}, {"sha": "340168a90d0fae562c1b7a35d1c73aa3cc8930f3", "filename": "crates/ide/src/syntax_highlighting/highlight.rs", "status": "modified", "additions": 10, "deletions": 40, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Fhighlight.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -208,22 +208,14 @@ fn node(\n             },\n             // Highlight references like the definitions they resolve to\n             ast::NameRef(name_ref) => {\n-                if node.ancestors().any(|it| it.kind() == ATTR) {\n-\n-                    // FIXME: We highlight paths in attributes slightly differently to work around this module\n-                    // currently not knowing about tool attributes and rustc builtin attributes as\n-                    // we do not want to resolve those to functions that may be defined in scope.\n-                    highlight_name_ref_in_attr(sema, name_ref)\n-                } else {\n-                    highlight_name_ref(\n-                        sema,\n-                        krate,\n-                        bindings_shadow_count,\n-                        &mut binding_hash,\n-                        syntactic_name_ref_highlighting,\n-                        name_ref,\n-                    )\n-                }\n+                highlight_name_ref(\n+                    sema,\n+                    krate,\n+                    bindings_shadow_count,\n+                    &mut binding_hash,\n+                    syntactic_name_ref_highlighting,\n+                    name_ref,\n+                )\n             },\n             ast::Lifetime(lifetime) => {\n                 match NameClass::classify_lifetime(sema, &lifetime) {\n@@ -243,28 +235,6 @@ fn node(\n     Some((highlight, binding_hash))\n }\n \n-fn highlight_name_ref_in_attr(sema: &Semantics<RootDatabase>, name_ref: ast::NameRef) -> Highlight {\n-    match NameRefClass::classify(sema, &name_ref) {\n-        Some(name_class) => match name_class {\n-            NameRefClass::Definition(Definition::Module(_))\n-                if name_ref\n-                    .syntax()\n-                    .ancestors()\n-                    .find_map(ast::Path::cast)\n-                    .map_or(false, |it| it.parent_path().is_some()) =>\n-            {\n-                HlTag::Symbol(SymbolKind::Module)\n-            }\n-            NameRefClass::Definition(Definition::Macro(m)) if m.kind() == hir::MacroKind::Attr => {\n-                HlTag::Symbol(SymbolKind::Macro)\n-            }\n-            _ => HlTag::BuiltinAttr,\n-        },\n-        None => HlTag::BuiltinAttr,\n-    }\n-    .into()\n-}\n-\n fn highlight_name_ref(\n     sema: &Semantics<RootDatabase>,\n     krate: Option<hir::Crate>,\n@@ -542,8 +512,8 @@ fn highlight_def(\n             h\n         }\n         Definition::Label(_) => Highlight::new(HlTag::Symbol(SymbolKind::Label)),\n-        Definition::BuiltinAttr(_) => Highlight::new(HlTag::Symbol(SymbolKind::Label)), // FIXME\n-        Definition::Tool(_) => Highlight::new(HlTag::Symbol(SymbolKind::Label)),        // FIXME\n+        Definition::BuiltinAttr(_) => Highlight::new(HlTag::Symbol(SymbolKind::BuiltinAttr)),\n+        Definition::Tool(_) => Highlight::new(HlTag::Symbol(SymbolKind::Tool)),\n     };\n \n     let famous_defs = FamousDefs(sema, krate);"}, {"sha": "50f74cdec1b1a402f5f248f91217832aa0265e8a", "filename": "crates/ide/src/syntax_highlighting/inject.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Finject.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -263,8 +263,8 @@ fn module_def_to_hl_tag(def: Definition) -> HlTag {\n             hir::GenericParam::ConstParam(_) => SymbolKind::ConstParam,\n         },\n         Definition::Label(_) => SymbolKind::Label,\n-        Definition::BuiltinAttr(_) => SymbolKind::Label, // FIXME\n-        Definition::Tool(_) => SymbolKind::Label,        // FIXME\n+        Definition::BuiltinAttr(_) => SymbolKind::BuiltinAttr,\n+        Definition::Tool(_) => SymbolKind::Tool,\n     };\n     HlTag::Symbol(symbol)\n }"}, {"sha": "a19eee58172fbd9fba59ef22039ff7541e413ad6", "filename": "crates/ide/src/syntax_highlighting/tags.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftags.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -20,7 +20,6 @@ pub enum HlTag {\n \n     Attribute,\n     BoolLiteral,\n-    BuiltinAttr,\n     BuiltinType,\n     ByteLiteral,\n     CharLiteral,\n@@ -125,30 +124,31 @@ impl HlTag {\n     fn as_str(self) -> &'static str {\n         match self {\n             HlTag::Symbol(symbol) => match symbol {\n+                SymbolKind::BuiltinAttr => \"builtin_attr\",\n                 SymbolKind::Const => \"constant\",\n-                SymbolKind::Static => \"static\",\n+                SymbolKind::ConstParam => \"const_param\",\n                 SymbolKind::Enum => \"enum\",\n-                SymbolKind::Variant => \"enum_variant\",\n-                SymbolKind::Struct => \"struct\",\n-                SymbolKind::Union => \"union\",\n                 SymbolKind::Field => \"field\",\n+                SymbolKind::Function => \"function\",\n+                SymbolKind::Impl => \"self_type\",\n+                SymbolKind::Label => \"label\",\n+                SymbolKind::LifetimeParam => \"lifetime\",\n+                SymbolKind::Local => \"variable\",\n+                SymbolKind::Macro => \"macro\",\n                 SymbolKind::Module => \"module\",\n+                SymbolKind::SelfParam => \"self_keyword\",\n+                SymbolKind::Static => \"static\",\n+                SymbolKind::Struct => \"struct\",\n+                SymbolKind::Tool => \"tool\",\n                 SymbolKind::Trait => \"trait\",\n-                SymbolKind::Function => \"function\",\n                 SymbolKind::TypeAlias => \"type_alias\",\n                 SymbolKind::TypeParam => \"type_param\",\n-                SymbolKind::ConstParam => \"const_param\",\n-                SymbolKind::LifetimeParam => \"lifetime\",\n-                SymbolKind::Macro => \"macro\",\n-                SymbolKind::Local => \"variable\",\n-                SymbolKind::Label => \"label\",\n+                SymbolKind::Union => \"union\",\n                 SymbolKind::ValueParam => \"value_param\",\n-                SymbolKind::SelfParam => \"self_keyword\",\n-                SymbolKind::Impl => \"self_type\",\n+                SymbolKind::Variant => \"enum_variant\",\n             },\n             HlTag::Attribute => \"attribute\",\n             HlTag::BoolLiteral => \"bool_literal\",\n-            HlTag::BuiltinAttr => \"builtin_attr\",\n             HlTag::BuiltinType => \"builtin_type\",\n             HlTag::ByteLiteral => \"byte_literal\",\n             HlTag::CharLiteral => \"char_literal\","}, {"sha": "1e778cc61948207fcf682ff80ebf67fda1b38d5f", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_doctest.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_doctest.html?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -72,7 +72,7 @@\n     <span class=\"comment documentation\">/// # Examples</span>\n     <span class=\"comment documentation\">///</span>\n     <span class=\"comment documentation\">/// ```</span>\n-    <span class=\"comment documentation\">/// #</span><span class=\"none injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"builtin_attr attribute injected\">allow</span><span class=\"parenthesis attribute injected\">(</span><span class=\"none attribute injected\">unused_mut</span><span class=\"parenthesis attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n+    <span class=\"comment documentation\">/// #</span><span class=\"none injected\"> </span><span class=\"attribute attribute injected\">#</span><span class=\"attribute attribute injected\">!</span><span class=\"attribute attribute injected\">[</span><span class=\"builtin_attr attribute injected library\">allow</span><span class=\"parenthesis attribute injected\">(</span><span class=\"none attribute injected\">unused_mut</span><span class=\"parenthesis attribute injected\">)</span><span class=\"attribute attribute injected\">]</span>\n     <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"keyword injected\">mut</span><span class=\"none injected\"> </span><span class=\"variable declaration injected mutable\">foo</span><span class=\"colon injected\">:</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"struct injected\">Foo</span><span class=\"operator injected\">::</span><span class=\"function injected\">new</span><span class=\"parenthesis injected\">(</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n     <span class=\"comment documentation\">/// ```</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">const</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration public static\">new</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"operator\">-&gt;</span> <span class=\"struct\">Foo</span> <span class=\"brace\">{</span>\n@@ -143,12 +143,12 @@\n <span class=\"comment documentation\">///</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"comment documentation\">/// </span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"false\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"false\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"</span><span class=\"keyword control injected\">loop</span><span class=\"none injected\"> </span><span class=\"brace injected\">{</span><span class=\"brace injected\">}</span><span class=\"string_literal attribute\">\"</span><span class=\"attribute attribute\">]</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"comment documentation\">///</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"```rust\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"```ignore\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"```rust\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">cfg_attr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">not</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">feature</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"alloc\"</span><span class=\"parenthesis attribute\">)</span><span class=\"comma attribute\">,</span><span class=\"attribute attribute\"> </span><span class=\"none attribute\">doc</span><span class=\"attribute attribute\"> </span><span class=\"operator attribute\">=</span><span class=\"attribute attribute\"> </span><span class=\"string_literal attribute\">\"```ignore\"</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"comment documentation\">/// </span><span class=\"keyword injected\">let</span><span class=\"none injected\"> </span><span class=\"punctuation injected\">_</span><span class=\"none injected\"> </span><span class=\"operator injected\">=</span><span class=\"none injected\"> </span><span class=\"function injected\">example</span><span class=\"parenthesis injected\">(</span><span class=\"operator injected\">&</span><span class=\"none injected\">alloc::</span><span class=\"macro injected\">vec!</span><span class=\"bracket injected\">[</span><span class=\"numeric_literal injected\">1</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">2</span><span class=\"comma injected\">,</span><span class=\"none injected\"> </span><span class=\"numeric_literal injected\">3</span><span class=\"bracket injected\">]</span><span class=\"parenthesis injected\">)</span><span class=\"semicolon injected\">;</span>\n <span class=\"comment documentation\">/// ```</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">fn</span> <span class=\"function declaration public\">mix_and_match</span><span class=\"parenthesis\">(</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>"}, {"sha": "b44fc817c783288b8ccd5739a6c771761109e3e0", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_strings.html", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_strings.html?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -45,14 +45,14 @@\n         <span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>io<span class=\"colon\">:</span><span class=\"colon\">:</span>_print<span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>crate<span class=\"colon\">:</span><span class=\"colon\">:</span>format_args_nl<span class=\"punctuation\">!</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span><span class=\"parenthesis\">(</span><span class=\"punctuation\">$</span>arg<span class=\"parenthesis\">)</span><span class=\"punctuation\">*</span><span class=\"parenthesis\">)</span><span class=\"parenthesis\">)</span><span class=\"semicolon\">;</span>\n     <span class=\"brace\">}</span><span class=\"parenthesis\">)</span>\n <span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">format_args</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">const_format_args</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">format_args_nl</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">mod</span> <span class=\"module declaration\">panic</span> <span class=\"brace\">{</span>\n@@ -77,12 +77,12 @@\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">std_panic</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">macro_export</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">std_panic</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">macro_export</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">panic</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">assert</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">rustc_builtin_macro</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">asm</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n <span class=\"keyword\">macro_rules</span><span class=\"punctuation\">!</span> <span class=\"macro declaration\">toho</span> <span class=\"brace\">{</span>"}, {"sha": "65dfbdf2119a97f556f585e2b1a0fa88def49845", "filename": "crates/ide/src/syntax_highlighting/test_data/highlight_unsafe.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlight_unsafe.html?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -54,7 +54,7 @@\n     <span class=\"keyword unsafe\">unsafe</span> <span class=\"keyword\">fn</span> <span class=\"function associated declaration reference unsafe\">unsafe_method</span><span class=\"parenthesis\">(</span><span class=\"operator\">&</span><span class=\"self_keyword declaration reference\">self</span><span class=\"parenthesis\">)</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">repr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">packed</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">repr</span><span class=\"parenthesis attribute\">(</span><span class=\"none attribute\">packed</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">Packed</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">a</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u16</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>"}, {"sha": "da607b51211c356278c740d06860f78354ef505c", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -43,15 +43,15 @@\n <pre><code><span class=\"keyword\">use</span> <span class=\"module\">inner</span><span class=\"operator\">::</span><span class=\"brace\">{</span><span class=\"self_keyword\">self</span> <span class=\"keyword\">as</span> <span class=\"module declaration\">inner_mod</span><span class=\"brace\">}</span><span class=\"semicolon\">;</span>\n <span class=\"keyword\">mod</span> <span class=\"module declaration\">inner</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"module attribute\">proc_macros</span><span class=\"operator attribute\">::</span><span class=\"macro attribute\">identity</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"module attribute crate_root library\">proc_macros</span><span class=\"operator attribute\">::</span><span class=\"macro attribute library\">identity</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">pub</span> <span class=\"keyword\">mod</span> <span class=\"module declaration public\">ops</span> <span class=\"brace\">{</span>\n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_once\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">FnOnce</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn_mut\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnOnce</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n \n-    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute attribute\">]</span>\n+    <span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"builtin_attr attribute library\">lang</span> <span class=\"operator attribute\">=</span> <span class=\"string_literal attribute\">\"fn\"</span><span class=\"attribute attribute\">]</span>\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">Fn</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n@@ -86,7 +86,7 @@\n     <span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"macro attribute\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"macro attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n+<span class=\"attribute attribute\">#</span><span class=\"attribute attribute\">[</span><span class=\"macro attribute default_library library\">derive</span><span class=\"parenthesis attribute\">(</span><span class=\"macro attribute default_library library\">Copy</span><span class=\"parenthesis attribute\">)</span><span class=\"attribute attribute\">]</span>\n <span class=\"keyword\">struct</span> <span class=\"struct declaration\">FooCopy</span> <span class=\"brace\">{</span>\n     <span class=\"field declaration\">x</span><span class=\"colon\">:</span> <span class=\"builtin_type\">u32</span><span class=\"comma\">,</span>\n <span class=\"brace\">}</span>"}, {"sha": "e80a8edd9cff28c253322c91f801f6ec28b7686f", "filename": "crates/ide_completion/src/item.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide_completion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide_completion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fitem.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -232,6 +232,7 @@ impl CompletionItemKind {\n     pub(crate) fn tag(&self) -> &'static str {\n         match self {\n             CompletionItemKind::SymbolKind(kind) => match kind {\n+                SymbolKind::BuiltinAttr => \"ba\",\n                 SymbolKind::Const => \"ct\",\n                 SymbolKind::ConstParam => \"cp\",\n                 SymbolKind::Enum => \"en\",\n@@ -246,6 +247,7 @@ impl CompletionItemKind {\n                 SymbolKind::SelfParam => \"sp\",\n                 SymbolKind::Static => \"sc\",\n                 SymbolKind::Struct => \"st\",\n+                SymbolKind::Tool => \"tl\",\n                 SymbolKind::Trait => \"tt\",\n                 SymbolKind::TypeAlias => \"ta\",\n                 SymbolKind::TypeParam => \"tp\","}, {"sha": "6eaea53f5c1ff41612039e3ea599ac0557787321", "filename": "crates/ide_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Fide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Flib.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -145,6 +145,7 @@ fn line_index(db: &dyn LineIndexDatabase, file_id: FileId) -> Arc<LineIndex> {\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash, PartialOrd, Ord)]\n pub enum SymbolKind {\n+    BuiltinAttr,\n     Const,\n     ConstParam,\n     Enum,\n@@ -159,6 +160,7 @@ pub enum SymbolKind {\n     SelfParam,\n     Static,\n     Struct,\n+    Tool,\n     Trait,\n     TypeAlias,\n     TypeParam,"}, {"sha": "9d19482bee322b2e823d57fdba09d7d3725f96c9", "filename": "crates/rust-analyzer/src/semantic_tokens.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fsemantic_tokens.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -65,6 +65,7 @@ define_semantic_token_types![\n     (SELF_KEYWORD, \"selfKeyword\"),\n     (SEMICOLON, \"semicolon\"),\n     (TYPE_ALIAS, \"typeAlias\"),\n+    (TOOL, \"tool\"),\n     (UNION, \"union\"),\n     (UNRESOLVED_REFERENCE, \"unresolvedReference\"),\n ];"}, {"sha": "1dd4dabec4da34e97e5703dd7ff3eefd578a1945", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1677f3286d57009361eee85fb19d523c64b937c/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=d1677f3286d57009361eee85fb19d523c64b937c", "patch": "@@ -50,8 +50,8 @@ pub(crate) fn symbol_kind(symbol_kind: SymbolKind) -> lsp_types::SymbolKind {\n         SymbolKind::Enum => lsp_types::SymbolKind::ENUM,\n         SymbolKind::Variant => lsp_types::SymbolKind::ENUM_MEMBER,\n         SymbolKind::Trait => lsp_types::SymbolKind::INTERFACE,\n-        SymbolKind::Macro => lsp_types::SymbolKind::FUNCTION,\n-        SymbolKind::Module => lsp_types::SymbolKind::MODULE,\n+        SymbolKind::Macro | SymbolKind::BuiltinAttr => lsp_types::SymbolKind::FUNCTION,\n+        SymbolKind::Module | SymbolKind::Tool => lsp_types::SymbolKind::MODULE,\n         SymbolKind::TypeAlias | SymbolKind::TypeParam => lsp_types::SymbolKind::TYPE_PARAMETER,\n         SymbolKind::Field => lsp_types::SymbolKind::FIELD,\n         SymbolKind::Static => lsp_types::SymbolKind::CONSTANT,\n@@ -128,6 +128,8 @@ pub(crate) fn completion_item_kind(\n             SymbolKind::Union => lsp_types::CompletionItemKind::STRUCT,\n             SymbolKind::ValueParam => lsp_types::CompletionItemKind::VALUE,\n             SymbolKind::Variant => lsp_types::CompletionItemKind::ENUM_MEMBER,\n+            SymbolKind::BuiltinAttr => lsp_types::CompletionItemKind::FUNCTION,\n+            SymbolKind::Tool => lsp_types::CompletionItemKind::MODULE,\n         },\n     }\n }\n@@ -499,10 +501,11 @@ fn semantic_token_type_and_modifiers(\n             SymbolKind::TypeAlias => semantic_tokens::TYPE_ALIAS,\n             SymbolKind::Trait => lsp_types::SemanticTokenType::INTERFACE,\n             SymbolKind::Macro => lsp_types::SemanticTokenType::MACRO,\n+            SymbolKind::BuiltinAttr => semantic_tokens::BUILTIN_ATTRIBUTE,\n+            SymbolKind::Tool => semantic_tokens::TOOL,\n         },\n         HlTag::Attribute => semantic_tokens::ATTRIBUTE,\n         HlTag::BoolLiteral => semantic_tokens::BOOLEAN,\n-        HlTag::BuiltinAttr => semantic_tokens::BUILTIN_ATTRIBUTE,\n         HlTag::BuiltinType => semantic_tokens::BUILTIN_TYPE,\n         HlTag::ByteLiteral | HlTag::NumericLiteral => lsp_types::SemanticTokenType::NUMBER,\n         HlTag::CharLiteral => semantic_tokens::CHAR,"}]}