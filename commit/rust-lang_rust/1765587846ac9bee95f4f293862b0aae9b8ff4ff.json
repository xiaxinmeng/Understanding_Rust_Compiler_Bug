{"sha": "1765587846ac9bee95f4f293862b0aae9b8ff4ff", "node_id": "C_kwDOAAsO6NoAKDE3NjU1ODc4NDZhYzliZWU5NWY0ZjI5Mzg2MmIwYWFlOWI4ZmY0ZmY", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-10-05T19:42:16Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:20Z"}, "message": "Only track (trivially) freeze types", "tree": {"sha": "79c3f18d3367325ee45c65669834279e841475a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79c3f18d3367325ee45c65669834279e841475a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1765587846ac9bee95f4f293862b0aae9b8ff4ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1765587846ac9bee95f4f293862b0aae9b8ff4ff", "html_url": "https://github.com/rust-lang/rust/commit/1765587846ac9bee95f4f293862b0aae9b8ff4ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1765587846ac9bee95f4f293862b0aae9b8ff4ff/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5063ab0e543174e416e34fc130c8b8daba34b41", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5063ab0e543174e416e34fc130c8b8daba34b41", "html_url": "https://github.com/rust-lang/rust/commit/b5063ab0e543174e416e34fc130c8b8daba34b41"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "6cbdac2a8cbc65ab93e1e87e8be2423084de88b8", "filename": "compiler/rustc_middle/src/ty/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1765587846ac9bee95f4f293862b0aae9b8ff4ff/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1765587846ac9bee95f4f293862b0aae9b8ff4ff/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Futil.rs?ref=1765587846ac9bee95f4f293862b0aae9b8ff4ff", "patch": "@@ -849,7 +849,7 @@ impl<'tcx> Ty<'tcx> {\n     ///\n     /// Returning true means the type is known to be `Freeze`. Returning\n     /// `false` means nothing -- could be `Freeze`, might not be.\n-    fn is_trivially_freeze(self) -> bool {\n+    pub fn is_trivially_freeze(self) -> bool {\n         match self.kind() {\n             ty::Int(_)\n             | ty::Uint(_)"}, {"sha": "766a659adca58dc8cb1e24470329c4529adfa83d", "filename": "compiler/rustc_mir_dataflow/src/value_analysis.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1765587846ac9bee95f4f293862b0aae9b8ff4ff/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1765587846ac9bee95f4f293862b0aae9b8ff4ff/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_dataflow%2Fsrc%2Fvalue_analysis.rs?ref=1765587846ac9bee95f4f293862b0aae9b8ff4ff", "patch": "@@ -674,7 +674,11 @@ impl Map {\n             return Err(());\n         }\n \n-        // FIXME: Check that the place is `Freeze`.\n+        if !ty.is_trivially_freeze() {\n+            // Due to the way we deal with shared references, only `Freeze` types may be tracked.\n+            // We are a little bit to restrictive here by only allowing trivially `Freeze` types.\n+            return Err(());\n+        }\n \n         let place = self.make_place(local, projection)?;\n "}]}