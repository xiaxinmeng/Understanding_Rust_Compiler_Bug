{"sha": "fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZmZjlhOGVhOWM1NmQ1MDc1YzIzZDlkNWIyZDhiMDgzOGVlZTBkYTM=", "commit": {"author": {"name": "Tim Bodeit", "email": "tim@bodeit.com", "date": "2019-11-23T21:35:21Z"}, "committer": {"name": "Tim Bodeit", "email": "tim@bodeit.com", "date": "2019-11-24T09:00:06Z"}, "message": "[comparison_chain] #4827 Check `core::cmp::Ord` is implemented\n\nOnly emit lint, if `cmp` is actually available on the type being\ncompared. Don't emit lint in cases where only `PartialOrd` is\nimplemented.", "tree": {"sha": "6dd4b9c99f92ad76fcfa7be8e3015ae9b1c7cbb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6dd4b9c99f92ad76fcfa7be8e3015ae9b1c7cbb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "html_url": "https://github.com/rust-lang/rust/commit/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/comments", "author": {"login": "timbodeit", "id": 4222754, "node_id": "MDQ6VXNlcjQyMjI3NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4222754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbodeit", "html_url": "https://github.com/timbodeit", "followers_url": "https://api.github.com/users/timbodeit/followers", "following_url": "https://api.github.com/users/timbodeit/following{/other_user}", "gists_url": "https://api.github.com/users/timbodeit/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbodeit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbodeit/subscriptions", "organizations_url": "https://api.github.com/users/timbodeit/orgs", "repos_url": "https://api.github.com/users/timbodeit/repos", "events_url": "https://api.github.com/users/timbodeit/events{/privacy}", "received_events_url": "https://api.github.com/users/timbodeit/received_events", "type": "User", "site_admin": false}, "committer": {"login": "timbodeit", "id": 4222754, "node_id": "MDQ6VXNlcjQyMjI3NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4222754?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbodeit", "html_url": "https://github.com/timbodeit", "followers_url": "https://api.github.com/users/timbodeit/followers", "following_url": "https://api.github.com/users/timbodeit/following{/other_user}", "gists_url": "https://api.github.com/users/timbodeit/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbodeit/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbodeit/subscriptions", "organizations_url": "https://api.github.com/users/timbodeit/orgs", "repos_url": "https://api.github.com/users/timbodeit/repos", "events_url": "https://api.github.com/users/timbodeit/events{/privacy}", "received_events_url": "https://api.github.com/users/timbodeit/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc35165f52c16b884d06e1efc76c8f2bf73f1cbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc35165f52c16b884d06e1efc76c8f2bf73f1cbd", "html_url": "https://github.com/rust-lang/rust/commit/cc35165f52c16b884d06e1efc76c8f2bf73f1cbd"}], "stats": {"total": 115, "additions": 113, "deletions": 2}, "files": [{"sha": "087bceaffd98326e9f71565e7f3d548895759e15", "filename": "clippy_lints/src/comparison_chain.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/clippy_lints%2Fsrc%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcomparison_chain.rs?ref=fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "patch": "@@ -1,4 +1,6 @@\n-use crate::utils::{if_sequence, parent_node_is_if_expr, span_help_and_lint, SpanlessEq};\n+use crate::utils::{\n+    get_trait_def_id, if_sequence, implements_trait, parent_node_is_if_expr, paths, span_help_and_lint, SpanlessEq,\n+};\n use rustc::hir::*;\n use rustc::lint::{LateContext, LateLintPass, LintArray, LintPass};\n use rustc::{declare_lint_pass, declare_tool_lint};\n@@ -84,6 +86,14 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for ComparisonChain {\n                 {\n                     return;\n                 }\n+\n+                // Check that the type being compared implements `core::cmp::Ord`\n+                let ty = cx.tables.expr_ty(lhs1);\n+                let is_ord = get_trait_def_id(cx, &paths::ORD).map_or(false, |id| implements_trait(cx, ty, id, &[]));\n+\n+                if !is_ord {\n+                    return;\n+                }\n             } else {\n                 // We only care about comparison chains\n                 return;"}, {"sha": "9c2128469de9ded7afeaf9571882f4e3be171383", "filename": "tests/ui/comparison_chain.rs", "status": "modified", "additions": 61, "deletions": 0, "changes": 61, "blob_url": "https://github.com/rust-lang/rust/blob/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/tests%2Fui%2Fcomparison_chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/tests%2Fui%2Fcomparison_chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomparison_chain.rs?ref=fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "patch": "@@ -76,4 +76,65 @@ fn f(x: u8, y: u8, z: u8) {\n     }\n }\n \n+#[allow(clippy::float_cmp)]\n+fn g(x: f64, y: f64, z: f64) {\n+    // Ignored: f64 doesn't implement Ord\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    }\n+\n+    // Ignored: f64 doesn't implement Ord\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    } else {\n+        c()\n+    }\n+\n+    // Ignored: f64 doesn't implement Ord\n+    if x > y {\n+        a()\n+    } else if y > x {\n+        b()\n+    } else {\n+        c()\n+    }\n+\n+    // Ignored: f64 doesn't implement Ord\n+    if x > 1.0 {\n+        a()\n+    } else if x < 1.0 {\n+        b()\n+    } else if x == 1.0 {\n+        c()\n+    }\n+}\n+\n+fn h<T: Ord>(x: T, y: T, z: T) {\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    }\n+\n+    if x > y {\n+        a()\n+    } else if x < y {\n+        b()\n+    } else {\n+        c()\n+    }\n+\n+    if x > y {\n+        a()\n+    } else if y > x {\n+        b()\n+    } else {\n+        c()\n+    }\n+}\n+\n fn main() {}"}, {"sha": "69db88b03b5b55d30251dad120febb2fecf7be65", "filename": "tests/ui/comparison_chain.stderr", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/tests%2Fui%2Fcomparison_chain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3/tests%2Fui%2Fcomparison_chain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcomparison_chain.stderr?ref=fff9a8ea9c56d5075c23d9d5b2d8b0838eee0da3", "patch": "@@ -53,5 +53,45 @@ LL | |     }\n    |\n    = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n \n-error: aborting due to 4 previous errors\n+error: `if` chain can be rewritten with `match`\n+  --> $DIR/comparison_chain.rs:117:5\n+   |\n+LL | /     if x > y {\n+LL | |         a()\n+LL | |     } else if x < y {\n+LL | |         b()\n+LL | |     }\n+   | |_____^\n+   |\n+   = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n+\n+error: `if` chain can be rewritten with `match`\n+  --> $DIR/comparison_chain.rs:123:5\n+   |\n+LL | /     if x > y {\n+LL | |         a()\n+LL | |     } else if x < y {\n+LL | |         b()\n+LL | |     } else {\n+LL | |         c()\n+LL | |     }\n+   | |_____^\n+   |\n+   = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n+\n+error: `if` chain can be rewritten with `match`\n+  --> $DIR/comparison_chain.rs:131:5\n+   |\n+LL | /     if x > y {\n+LL | |         a()\n+LL | |     } else if y > x {\n+LL | |         b()\n+LL | |     } else {\n+LL | |         c()\n+LL | |     }\n+   | |_____^\n+   |\n+   = help: Consider rewriting the `if` chain to use `cmp` and `match`.\n+\n+error: aborting due to 7 previous errors\n "}]}