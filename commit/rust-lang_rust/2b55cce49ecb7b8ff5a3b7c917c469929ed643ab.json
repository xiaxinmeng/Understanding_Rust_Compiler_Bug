{"sha": "2b55cce49ecb7b8ff5a3b7c917c469929ed643ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNTVjY2U0OWVjYjdiOGZmNWEzYjdjOTE3YzQ2OTkyOWVkNjQzYWI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-03-05T16:24:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-05T16:24:32Z"}, "message": "Merge #7880\n\n7880: Honor snippet capability when using the extract function assist r=lnicola a=Arthamys\n\nThis fixes issue #7793\n\nCo-authored-by: san <san@alien.parts>", "tree": {"sha": "6a467003f358fc2e06fcf8fc6f4593148dd6067e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a467003f358fc2e06fcf8fc6f4593148dd6067e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b55cce49ecb7b8ff5a3b7c917c469929ed643ab", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQltACRBK7hj4Ov3rIwAAdHIIABMYxf2884Mr0YYe9q/FJXkg\n/Uj5RGJpaUQ19iaV6Hg4QhC/c5sfcBIpfgS9Phx+P9Dr+rxZLKCX+P0Cv2lud/5r\n8YwMKASiyJnkA6k1x+nDyu4eamDm9SHeXoAYiVWyRoVoDzFRqYujmFeTb0YpbN0c\nlTlh/Lm9XPUF1Z80fnzxxWQcCBqb3ADW679eV4xZJJUVjFH6LVezfLHCtOtRtZ5W\nv3+IO3qoqykv2QaeH1dCggc6DV/zfxUJ98FQ1m74TuXPW5V8UYzH01Y5sTA1LapQ\n7sHK7qKder7dHZTAZe1oQeBixzXKijKKXDqoqEtH796xBWYbCIWA72Aan1dRJqI=\n=tUjn\n-----END PGP SIGNATURE-----\n", "payload": "tree 6a467003f358fc2e06fcf8fc6f4593148dd6067e\nparent 6c27c55041953327d341f4e7c705e8887fc4dd50\nparent 769b3bca2809d17a00c789012b510cc7822fe1c7\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1614961472 +0000\ncommitter GitHub <noreply@github.com> 1614961472 +0000\n\nMerge #7880\n\n7880: Honor snippet capability when using the extract function assist r=lnicola a=Arthamys\n\nThis fixes issue #7793\n\nCo-authored-by: san <san@alien.parts>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b55cce49ecb7b8ff5a3b7c917c469929ed643ab", "html_url": "https://github.com/rust-lang/rust/commit/2b55cce49ecb7b8ff5a3b7c917c469929ed643ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b55cce49ecb7b8ff5a3b7c917c469929ed643ab/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c27c55041953327d341f4e7c705e8887fc4dd50", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c27c55041953327d341f4e7c705e8887fc4dd50", "html_url": "https://github.com/rust-lang/rust/commit/6c27c55041953327d341f4e7c705e8887fc4dd50"}, {"sha": "769b3bca2809d17a00c789012b510cc7822fe1c7", "url": "https://api.github.com/repos/rust-lang/rust/commits/769b3bca2809d17a00c789012b510cc7822fe1c7", "html_url": "https://github.com/rust-lang/rust/commit/769b3bca2809d17a00c789012b510cc7822fe1c7"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "8779d8bd1a5028bfc10df228204be16bdc4cd45d", "filename": "crates/ide_assists/src/handlers/extract_function.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b55cce49ecb7b8ff5a3b7c917c469929ed643ab/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b55cce49ecb7b8ff5a3b7c917c469929ed643ab/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fextract_function.rs?ref=2b55cce49ecb7b8ff5a3b7c917c469929ed643ab", "patch": "@@ -112,7 +112,10 @@ pub(crate) fn extract_function(acc: &mut Assists, ctx: &AssistContext) -> Option\n \n             let fn_def = format_function(ctx, module, &fun, old_indent, new_indent);\n             let insert_offset = insert_after.text_range().end();\n-            builder.insert(insert_offset, fn_def);\n+            match ctx.config.snippet_cap {\n+                Some(cap) => builder.insert_snippet(cap, insert_offset, fn_def),\n+                None => builder.insert(insert_offset, fn_def),\n+            }\n         },\n     )\n }\n@@ -1079,7 +1082,10 @@ fn format_function(\n     let params = make_param_list(ctx, module, fun);\n     let ret_ty = make_ret_ty(ctx, module, fun);\n     let body = make_body(ctx, old_indent, new_indent, fun);\n-    format_to!(fn_def, \"\\n\\n{}fn $0{}{}\", new_indent, fun.name, params);\n+    match ctx.config.snippet_cap {\n+        Some(_) => format_to!(fn_def, \"\\n\\n{}fn $0{}{}\", new_indent, fun.name, params),\n+        None => format_to!(fn_def, \"\\n\\n{}fn {}{}\", new_indent, fun.name, params),\n+    }\n     if let Some(ret_ty) = ret_ty {\n         format_to!(fn_def, \" {}\", ret_ty);\n     }"}]}