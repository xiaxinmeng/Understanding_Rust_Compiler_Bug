{"sha": "89aac165588b5b077ca8d747fee5c870c5b6e907", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YWFjMTY1NTg4YjViMDc3Y2E4ZDc0N2ZlZTVjODcwYzViNmU5MDc=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-23T13:41:57Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-23T13:41:57Z"}, "message": "fix discriminant type in generator transform", "tree": {"sha": "45e183d12192361c4063869e762655ae3cafa2cc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45e183d12192361c4063869e762655ae3cafa2cc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89aac165588b5b077ca8d747fee5c870c5b6e907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89aac165588b5b077ca8d747fee5c870c5b6e907", "html_url": "https://github.com/rust-lang/rust/commit/89aac165588b5b077ca8d747fee5c870c5b6e907", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89aac165588b5b077ca8d747fee5c870c5b6e907/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75b0a68f35a06fc7aed8aa95831df8eace4afffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/75b0a68f35a06fc7aed8aa95831df8eace4afffb", "html_url": "https://github.com/rust-lang/rust/commit/75b0a68f35a06fc7aed8aa95831df8eace4afffb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "50a882ab014fd0c2a9e5475a9049b122a0ded4ca", "filename": "src/librustc_mir/transform/generator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/89aac165588b5b077ca8d747fee5c870c5b6e907/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89aac165588b5b077ca8d747fee5c870c5b6e907/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fgenerator.rs?ref=89aac165588b5b077ca8d747fee5c870c5b6e907", "patch": "@@ -266,7 +266,7 @@ impl TransformVisitor<'tcx> {\n \n     // Create a statement which reads the discriminant into a temporary\n     fn get_discr(&self, body: &mut Body<'tcx>) -> (Statement<'tcx>, Place<'tcx>) {\n-        let temp_decl = LocalDecl::new(self.tcx.types.isize, body.span).internal();\n+        let temp_decl = LocalDecl::new(self.discr_ty, body.span).internal();\n         let local_decls_len = body.local_decls.push(temp_decl);\n         let temp = Place::from(local_decls_len);\n "}]}