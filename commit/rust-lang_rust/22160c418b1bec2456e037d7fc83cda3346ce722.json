{"sha": "22160c418b1bec2456e037d7fc83cda3346ce722", "node_id": "C_kwDOAAsO6NoAKDIyMTYwYzQxOGIxYmVjMjQ1NmUwMzdkN2ZjODNjZGEzMzQ2Y2U3MjI", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-02T18:20:10Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-01-02T18:20:10Z"}, "message": "fix NameRefClass misclassifying proc-macros", "tree": {"sha": "5ef26ebe8de0d8e61d233dad61132bcbd5049cf8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5ef26ebe8de0d8e61d233dad61132bcbd5049cf8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/22160c418b1bec2456e037d7fc83cda3346ce722", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/22160c418b1bec2456e037d7fc83cda3346ce722", "html_url": "https://github.com/rust-lang/rust/commit/22160c418b1bec2456e037d7fc83cda3346ce722", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/22160c418b1bec2456e037d7fc83cda3346ce722/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eed85b1715a986a27a24ebe362ad6900fffdfa6", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eed85b1715a986a27a24ebe362ad6900fffdfa6", "html_url": "https://github.com/rust-lang/rust/commit/9eed85b1715a986a27a24ebe362ad6900fffdfa6"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "d7f996fba9b4ccf18caf0b2aa11396ba4b93966d", "filename": "crates/ide/src/syntax_highlighting/test_data/highlighting.html", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/22160c418b1bec2456e037d7fc83cda3346ce722/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/22160c418b1bec2456e037d7fc83cda3346ce722/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftest_data%2Fhighlighting.html?ref=22160c418b1bec2456e037d7fc83cda3346ce722", "patch": "@@ -56,7 +56,7 @@\n     <span class=\"keyword\">pub</span> <span class=\"keyword\">trait</span> <span class=\"trait declaration public\">Fn</span><span class=\"angle\">&lt;</span><span class=\"type_param declaration\">Args</span><span class=\"angle\">&gt;</span><span class=\"colon\">:</span> <span class=\"trait public\">FnMut</span><span class=\"angle\">&lt;</span><span class=\"type_param\">Args</span><span class=\"angle\">&gt;</span> <span class=\"brace\">{</span><span class=\"brace\">}</span>\n <span class=\"brace\">}</span>\n \n-<span class=\"module crate_root library\">proc_macros</span><span class=\"operator\">::</span><span class=\"function library\">mirror</span><span class=\"macro_bang\">!</span> <span class=\"brace\">{</span>\n+<span class=\"module crate_root library\">proc_macros</span><span class=\"operator\">::</span><span class=\"macro library\">mirror</span><span class=\"macro_bang\">!</span> <span class=\"brace\">{</span>\n     <span class=\"brace\">{</span>\n         <span class=\"comma\">,</span><span class=\"builtin_type\">i32</span> <span class=\"colon\">:</span><span class=\"field declaration public\">x</span> <span class=\"keyword\">pub</span>\n         <span class=\"comma\">,</span><span class=\"builtin_type\">i32</span> <span class=\"colon\">:</span><span class=\"field declaration public\">y</span> <span class=\"keyword\">pub</span>"}, {"sha": "ffef33b6c86aef39e363e310d50ebc700ff5cb0a", "filename": "crates/ide_db/src/defs.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/22160c418b1bec2456e037d7fc83cda3346ce722/crates%2Fide_db%2Fsrc%2Fdefs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22160c418b1bec2456e037d7fc83cda3346ce722/crates%2Fide_db%2Fsrc%2Fdefs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fdefs.rs?ref=22160c418b1bec2456e037d7fc83cda3346ce722", "patch": "@@ -416,10 +416,10 @@ impl NameRefClass {\n         }\n \n         if let Some(path) = ast::PathSegment::cast(parent.clone()).map(|it| it.parent_path()) {\n-            if path.qualifier().is_none() {\n+            if path.parent_path().is_none() {\n                 if let Some(macro_call) = path.syntax().parent().and_then(ast::MacroCall::cast) {\n-                    // Only use this to resolve single-segment macro calls like `foo!()`. Multi-segment\n-                    // paths are handled below (allowing `log$0::info!` to resolve to the log crate).\n+                    // Only use this to resolve to macro calls for last segments as qualifiers resolve\n+                    // to modules below.\n                     if let Some(macro_def) = sema.resolve_macro_call(&macro_call) {\n                         return Some(NameRefClass::Definition(Definition::Macro(macro_def)));\n                     }"}]}