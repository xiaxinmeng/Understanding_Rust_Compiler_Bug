{"sha": "ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVjYzlkY2NjMTVjZjRiZGFiOGYxYWY5NDNhYzgzYjI4YmQzODk0ZDc=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:13:57Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-21T17:13:57Z"}, "message": "rollup merge of #21367: steveklabnik/remove_gate\n\nThis gate was `Accepted`, so we shouldn't need these.", "tree": {"sha": "89706fad88f72f1387cebafe70bb3d43117567ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89706fad88f72f1387cebafe70bb3d43117567ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7", "html_url": "https://github.com/rust-lang/rust/commit/ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "044772124793ce5e30e2b0217eac4a1c18477220", "url": "https://api.github.com/repos/rust-lang/rust/commits/044772124793ce5e30e2b0217eac4a1c18477220", "html_url": "https://github.com/rust-lang/rust/commit/044772124793ce5e30e2b0217eac4a1c18477220"}, {"sha": "f7fe249bbcdd5f3b3f8b35d33ee3cc6ec422ce95", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7fe249bbcdd5f3b3f8b35d33ee3cc6ec422ce95", "html_url": "https://github.com/rust-lang/rust/commit/f7fe249bbcdd5f3b3f8b35d33ee3cc6ec422ce95"}], "stats": {"total": 30, "additions": 0, "deletions": 30}, "files": [{"sha": "92b9a0c505312fafda5de992b2c35ced44223fce", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=ecc9dccc15cf4bdab8f1af943ac83b28bd3894d7", "patch": "@@ -33,8 +33,6 @@\n //! demonstrates adding and subtracting two `Point`s.\n //!\n //! ```rust\n-//! #![feature(associated_types)]\n-//!\n //! use std::ops::{Add, Sub};\n //!\n //! #[derive(Show)]\n@@ -164,8 +162,6 @@ macro_rules! forward_ref_binop {\n /// calling `add`, and therefore, `main` prints `Adding!`.\n ///\n /// ```rust\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Add;\n ///\n /// #[derive(Copy)]\n@@ -219,8 +215,6 @@ add_impl! { uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64 }\n /// calling `sub`, and therefore, `main` prints `Subtracting!`.\n ///\n /// ```rust\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Sub;\n ///\n /// #[derive(Copy)]\n@@ -274,8 +268,6 @@ sub_impl! { uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64 }\n /// calling `mul`, and therefore, `main` prints `Multiplying!`.\n ///\n /// ```rust\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Mul;\n ///\n /// #[derive(Copy)]\n@@ -329,8 +321,6 @@ mul_impl! { uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64 }\n /// calling `div`, and therefore, `main` prints `Dividing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Div;\n ///\n /// #[derive(Copy)]\n@@ -384,8 +374,6 @@ div_impl! { uint u8 u16 u32 u64 int i8 i16 i32 i64 f32 f64 }\n /// calling `rem`, and therefore, `main` prints `Remainder-ing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Rem;\n ///\n /// #[derive(Copy)]\n@@ -458,8 +446,6 @@ rem_float_impl! { f64, fmod }\n /// `neg`, and therefore, `main` prints `Negating!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Neg;\n ///\n /// struct Foo;\n@@ -537,8 +523,6 @@ neg_uint_impl! { u64, i64 }\n /// `not`, and therefore, `main` prints `Not-ing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Not;\n ///\n /// struct Foo;\n@@ -593,8 +577,6 @@ not_impl! { bool uint u8 u16 u32 u64 int i8 i16 i32 i64 }\n /// calling `bitand`, and therefore, `main` prints `Bitwise And-ing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::BitAnd;\n ///\n /// #[derive(Copy)]\n@@ -648,8 +630,6 @@ bitand_impl! { bool uint u8 u16 u32 u64 int i8 i16 i32 i64 }\n /// calling `bitor`, and therefore, `main` prints `Bitwise Or-ing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::BitOr;\n ///\n /// #[derive(Copy)]\n@@ -703,8 +683,6 @@ bitor_impl! { bool uint u8 u16 u32 u64 int i8 i16 i32 i64 }\n /// calling `bitxor`, and therefore, `main` prints `Bitwise Xor-ing!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::BitXor;\n ///\n /// #[derive(Copy)]\n@@ -758,8 +736,6 @@ bitxor_impl! { bool uint u8 u16 u32 u64 int i8 i16 i32 i64 }\n /// calling `shl`, and therefore, `main` prints `Shifting left!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Shl;\n ///\n /// #[derive(Copy)]\n@@ -831,8 +807,6 @@ shl_impl_all! { u8 u16 u32 u64 usize i8 i16 i32 i64 isize }\n /// calling `shr`, and therefore, `main` prints `Shifting right!`.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Shr;\n ///\n /// #[derive(Copy)]\n@@ -1094,8 +1068,6 @@ impl<Idx: fmt::Show> fmt::Show for RangeTo<Idx> {\n /// struct.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::Deref;\n ///\n /// struct DerefExample<T> {\n@@ -1149,8 +1121,6 @@ impl<'a, T: ?Sized> Deref for &'a mut T {\n /// struct.\n ///\n /// ```\n-/// #![feature(associated_types)]\n-///\n /// use std::ops::{Deref, DerefMut};\n ///\n /// struct DerefMutExample<T> {"}]}