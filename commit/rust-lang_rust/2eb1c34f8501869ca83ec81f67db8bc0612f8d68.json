{"sha": "2eb1c34f8501869ca83ec81f67db8bc0612f8d68", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlYjFjMzRmODUwMTg2OWNhODNlYzgxZjY3ZGI4YmMwNjEyZjhkNjg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-02-09T20:21:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-09T20:21:47Z"}, "message": "Merge #3071\n\n3071: Freshen docs for prebuilt binaries and raLspServer setting r=matklad a=Veetaha\n\nBetter documented breaking changes as per an incident in #2988\r\nFollow up for #3053 \r\n\n\nCo-authored-by: Veetaha <gerzoh1@gmail.com>", "tree": {"sha": "58b064cb20ee164df98d230ebf22ed39b8e64a10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58b064cb20ee164df98d230ebf22ed39b8e64a10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2eb1c34f8501869ca83ec81f67db8bc0612f8d68", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2eb1c34f8501869ca83ec81f67db8bc0612f8d68", "html_url": "https://github.com/rust-lang/rust/commit/2eb1c34f8501869ca83ec81f67db8bc0612f8d68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2eb1c34f8501869ca83ec81f67db8bc0612f8d68/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b9b13b4b4a75b5531c3f046ce6bf72d681f2732", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9b13b4b4a75b5531c3f046ce6bf72d681f2732", "html_url": "https://github.com/rust-lang/rust/commit/1b9b13b4b4a75b5531c3f046ce6bf72d681f2732"}, {"sha": "843d00ec9d20bab9993f45d852a4f2c70a4b10d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/843d00ec9d20bab9993f45d852a4f2c70a4b10d8", "html_url": "https://github.com/rust-lang/rust/commit/843d00ec9d20bab9993f45d852a4f2c70a4b10d8"}], "stats": {"total": 89, "additions": 63, "deletions": 26}, "files": [{"sha": "991deaf902ab30353813f220374706b8e43d67d0", "filename": "docs/dev/README.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1c34f8501869ca83ec81f67db8bc0612f8d68/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1c34f8501869ca83ec81f67db8bc0612f8d68/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=2eb1c34f8501869ca83ec81f67db8bc0612f8d68", "patch": "@@ -74,7 +74,7 @@ relevant test and execute it (VS Code includes an action for running a single\n test).\n \n However, launching a VS Code instance with locally build language server is\n-possible. There's \"Run Extension (Dev Server)\" launch configuration for this.\n+possible. There's **\"Run Extension (Dev Server)\"** launch configuration for this.\n \n In general, I use one of the following workflows for fixing bugs and\n implementing features.\n@@ -88,7 +88,14 @@ Code to sanity check that the thing works as I expect.\n \n If the problem concerns only the VS Code extension, I use **Run Extension**\n launch configuration from `launch.json`. Notably, this uses the usual\n-`ra_lsp_server` binary from `PATH`. After I am done with the fix, I use `cargo\n+`ra_lsp_server` binary from `PATH`. For this it is important to have the following\n+in `setting.json` file:\n+```json\n+{\n+    \"rust-analyzer.raLspServerPath\": \"ra_lsp_server\"\n+}\n+```\n+After I am done with the fix, I use `cargo\n xtask install --client-code` to try the new extension for real.\n \n If I need to fix something in the `ra_lsp_server` crate, I feel sad because it's"}, {"sha": "6afe51e8ba68521d707f2b7b75880ee75a289b04", "filename": "docs/user/README.md", "status": "modified", "additions": 54, "deletions": 24, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/2eb1c34f8501869ca83ec81f67db8bc0612f8d68/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/2eb1c34f8501869ca83ec81f67db8bc0612f8d68/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=2eb1c34f8501869ca83ec81f67db8bc0612f8d68", "patch": "@@ -1,16 +1,26 @@\n+[github-releases]: https://github.com/rust-analyzer/rust-analyzer/releases\n+\n The main interface to rust-analyzer is the\n [LSP](https://microsoft.github.io/language-server-protocol/) implementation. To\n-install lsp server, clone the repository and then run `cargo xtask install\n---server` (which is shorthand for `cargo install --path\n-./crates/ra_lsp_server`). This will produce a binary named `ra_lsp_server` which\n-you should be able to use it with any LSP-compatible editor. We use custom\n-extensions to LSP, so special client-side support is required to take full\n-advantage of rust-analyzer. This repository contains support code for VS Code.\n-\n-```\n+install lsp server, you have three options:\n+\n+* **Preferred and default:** install the plugin/extension for your IDE and it will ask your permission to automatically download the latest lsp server for you from [GitHub releases][github-releases]. (See docs to find out whether this is implemented for your editor below).\n+* Manually download prebuilt binaries from [GitHub releases][github-releases]\n+    * `ra_lsp_server-linux` for Linux\n+    * `ra_lsp_server-mac` for Mac\n+    * `ra_lsp_server-windows.exe` for Windows\n+* Clone the repository and build from sources\n+```bash\n $ git clone git@github.com:rust-analyzer/rust-analyzer && cd rust-analyzer\n-$ cargo xtask install --server\n+$ cargo xtask install --server # or cargo install --path ./crates/ra_lsp_server\n ```\n+\n+This way you will get a binary named `ra_lsp_server` (with os suffix for prebuilt binaries)\n+which you should be able to use with any LSP-compatible editor.\n+\n+We make use of custom extensions to LSP, so special client-side support is required to take full\n+advantage of rust-analyzer. This repository contains support code for VS Code.\n+\n Rust Analyzer needs sources of rust standard library to work, so\n you might also need to execute\n \n@@ -22,30 +32,38 @@ See [./features.md](./features.md) document for a list of features that are avai\n \n ## VS Code\n \n-Prerequisites:\n-\n-In order to build the VS Code plugin, you need to have node.js and npm with\n-a minimum version of 10 installed. Please refer to\n-[node.js and npm documentation](https://nodejs.org) for installation instructions.\n+### Prerequisites\n \n-You will also need the most recent version of VS Code: we don't try to\n+You will need the most recent version of VS Code: we don't try to\n maintain compatibility with older versions yet.\n \n+In order to build the VS Code plugin from sources, you need to have node.js and npm with\n+a minimum version of 12 installed. Please refer to\n+[node.js and npm documentation](https://nodejs.org) for installation instructions.\n+\n ### Installation from prebuilt binaries\n \n We ship prebuilt binaries for Linux, Mac and Windows via\n-[GitHub releases](https://github.com/rust-analyzer/rust-analyzer/releases).\n+[GitHub releases][github-releases].\n In order to use them you need to install the client VSCode extension.\n \n-Publishing to VSCode marketplace is currently WIP. Thus, you need to clone the repository and install **only** the client extension via\n+Publishing to VS Code marketplace is currently WIP. Thus, you need to manually download\n+`rust-analyzer-0.1.0.vsix` file from latest [GitHub release][github-releases].\n+\n+After you downloaded the `.vsix` file you can install it from the terminal\n+\n ```\n-$ git clone https://github.com/rust-analyzer/rust-analyzer.git --depth 1\n-$ cd rust-analyzer\n-$ cargo xtask install --client-code\n+$ code --install-extension rust-analyzer-0.1.0.vsix\n ```\n-Then open VSCode (or reload the window if it was already running), open some Rust project and you should\n-see an info message pop-up.\n \n+Or open VS Code, press <kbd>Ctrl+Shift+P</kbd>, and search for the following command:\n+\n+<img width=\"500px\" alt=\"Install from VSIX command\" src=\"https://user-images.githubusercontent.com/36276403/74108225-c0c11d80-4b80-11ea-9b2a-0a43f09e29af.png\">\n+\n+Press <kbd>Enter</kbd> and go to `rust-analyzer-0.1.0.vsix` file through the file explorer.\n+\n+Then open some Rust project and you should\n+see an info message pop-up.\n \n <img height=\"140px\" src=\"https://user-images.githubusercontent.com/36276403/74103174-a40df100-4b52-11ea-81f4-372c70797924.png\" alt=\"Download now message\"/>\n \n@@ -57,7 +75,7 @@ For updates you need to remove installed binary\n rm -rf ${HOME}/.config/Code/User/globalStorage/matklad.rust-analyzer\n ```\n \n-`\"Donwload latest language server\"` command for VSCode and automatic updates detection is currently WIP.\n+`\"Download latest language server\"` command for VSCode and automatic updates detection is currently WIP.\n \n \n ### Installation from sources\n@@ -71,6 +89,16 @@ $ cd rust-analyzer\n $ cargo xtask install\n ```\n \n+After that you need to amend your `settings.json` file to explicitly specify the\n+path to `ra_lsp_server` that you've just built.\n+```json\n+{\n+    \"rust-analyzer.raLspServerPath\": \"ra_lsp_server\"\n+}\n+```\n+This should work on all platforms, otherwise if installed `ra_lsp_server` is not available through your `$PATH` then see how to configure it [here](#setting-up-the-PATH-variable).\n+\n+\n The automatic installation is expected to *just work* for common cases, if it\n doesn't, report bugs!\n \n@@ -127,7 +155,7 @@ host.\n   As an example, [Pale Fire](https://github.com/matklad/pale-fire/) color scheme tweaks rust colors.\n * `rust-analyzer.enableEnhancedTyping`: by default, rust-analyzer intercepts the\n   `Enter` key to make it easier to continue comments. Note that it may conflict with VIM emulation plugin.\n-* `rust-analyzer.raLspServerPath`: path to `ra_lsp_server` executable\n+* `rust-analyzer.raLspServerPath`: path to `ra_lsp_server` executable, when absent or `null` defaults to prebuilt binary path\n * `rust-analyzer.enableCargoWatchOnStartup`: prompt to install & enable `cargo\n   watch` for live error highlighting (note, this **does not** use rust-analyzer)\n * `rust-analyzer.excludeGlobs`: a list of glob-patterns for exclusion (see globset [docs](https://docs.rs/globset) for syntax).\n@@ -232,6 +260,8 @@ Installation:\n \n * You can now invoke the command palette and type LSP enable to locally/globally enable the rust-analyzer LSP (type LSP enable, then choose either locally or globally, then select rust-analyzer)\n \n+\n+<!-- Update links to this header when changing it! -->\n ### Setting up the `PATH` variable\n \n On Unix systems, `rustup` adds `~/.cargo/bin` to `PATH` by modifying the shell's"}]}