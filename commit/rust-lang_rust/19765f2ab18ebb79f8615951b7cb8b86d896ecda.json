{"sha": "19765f2ab18ebb79f8615951b7cb8b86d896ecda", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NzY1ZjJhYjE4ZWJiNzlmODYxNTk1MWI3Y2I4Yjg2ZDg5NmVjZGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-08-02T03:05:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-08-02T03:05:57Z"}, "message": "Auto merge of #35054 - pwoolcoc:stringfromchars, r=brson\n\nimplement `From<Vec<char>>` and `From<&'a [char]>` for `String`\n\nThough there are ways to convert a slice or vec of chars into a string,\nit would be nice to be able to just do `String::from(&['a', 'b', 'c'])`,\nso this PR implements `From<Vec<char>>` and `From<&'a [char]>` for\nString.", "tree": {"sha": "051c2c14daeabe5c148e733d57efa206953d57d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/051c2c14daeabe5c148e733d57efa206953d57d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19765f2ab18ebb79f8615951b7cb8b86d896ecda", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19765f2ab18ebb79f8615951b7cb8b86d896ecda", "html_url": "https://github.com/rust-lang/rust/commit/19765f2ab18ebb79f8615951b7cb8b86d896ecda", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19765f2ab18ebb79f8615951b7cb8b86d896ecda/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ece9ca968ab121082481b860e00c470182f0bae", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ece9ca968ab121082481b860e00c470182f0bae", "html_url": "https://github.com/rust-lang/rust/commit/1ece9ca968ab121082481b860e00c470182f0bae"}, {"sha": "ac73335f2f5421c914fa3900567696cc6dc73d8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac73335f2f5421c914fa3900567696cc6dc73d8d", "html_url": "https://github.com/rust-lang/rust/commit/ac73335f2f5421c914fa3900567696cc6dc73d8d"}], "stats": {"total": 20, "additions": 20, "deletions": 0}, "files": [{"sha": "06952253ef3b09540017a1211dccd8e75b21bfe5", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/19765f2ab18ebb79f8615951b7cb8b86d896ecda/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19765f2ab18ebb79f8615951b7cb8b86d896ecda/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=19765f2ab18ebb79f8615951b7cb8b86d896ecda", "patch": "@@ -1881,6 +1881,26 @@ impl Into<Vec<u8>> for String {\n     }\n }\n \n+#[stable(feature = \"stringfromchars\", since = \"1.12.0\")]\n+impl<'a> From<&'a [char]> for String {\n+    #[inline]\n+    fn from(v: &'a [char]) -> String {\n+        let mut s = String::with_capacity(v.len());\n+        for c in v {\n+            s.push(*c);\n+        }\n+        s\n+    }\n+}\n+\n+#[stable(feature = \"stringfromchars\", since = \"1.12.0\")]\n+impl From<Vec<char>> for String {\n+    #[inline]\n+    fn from(v: Vec<char>) -> String {\n+        String::from(v.as_slice())\n+    }\n+}\n+\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl fmt::Write for String {\n     #[inline]"}]}