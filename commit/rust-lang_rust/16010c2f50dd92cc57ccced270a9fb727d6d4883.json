{"sha": "16010c2f50dd92cc57ccced270a9fb727d6d4883", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2MDEwYzJmNTBkZDkyY2M1N2NjY2VkMjcwYTlmYjcyN2Q2ZDQ4ODM=", "commit": {"author": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-04-02T04:46:51Z"}, "committer": {"name": "Alex Burka", "email": "alex@alexburka.com", "date": "2017-04-15T19:06:19Z"}, "message": "parse interpolated visibility tokens", "tree": {"sha": "f3a33acda26d3b24bca3932ffe63c3ecea020718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f3a33acda26d3b24bca3932ffe63c3ecea020718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16010c2f50dd92cc57ccced270a9fb727d6d4883", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16010c2f50dd92cc57ccced270a9fb727d6d4883", "html_url": "https://github.com/rust-lang/rust/commit/16010c2f50dd92cc57ccced270a9fb727d6d4883", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16010c2f50dd92cc57ccced270a9fb727d6d4883/comments", "author": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "committer": {"login": "durka", "id": 47007, "node_id": "MDQ6VXNlcjQ3MDA3", "avatar_url": "https://avatars.githubusercontent.com/u/47007?v=4", "gravatar_id": "", "url": "https://api.github.com/users/durka", "html_url": "https://github.com/durka", "followers_url": "https://api.github.com/users/durka/followers", "following_url": "https://api.github.com/users/durka/following{/other_user}", "gists_url": "https://api.github.com/users/durka/gists{/gist_id}", "starred_url": "https://api.github.com/users/durka/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/durka/subscriptions", "organizations_url": "https://api.github.com/users/durka/orgs", "repos_url": "https://api.github.com/users/durka/repos", "events_url": "https://api.github.com/users/durka/events{/privacy}", "received_events_url": "https://api.github.com/users/durka/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06411c47694916aaf22ef30b6b8877d7659b2002", "url": "https://api.github.com/repos/rust-lang/rust/commits/06411c47694916aaf22ef30b6b8877d7659b2002", "html_url": "https://github.com/rust-lang/rust/commit/06411c47694916aaf22ef30b6b8877d7659b2002"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "84c909284a8fac116e002276a9c503de37919547", "filename": "src/libsyntax/ext/tt/macro_rules.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/16010c2f50dd92cc57ccced270a9fb727d6d4883/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16010c2f50dd92cc57ccced270a9fb727d6d4883/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_rules.rs?ref=16010c2f50dd92cc57ccced270a9fb727d6d4883", "patch": "@@ -799,7 +799,8 @@ fn is_in_follow(tok: &quoted::TokenTree, frag: &str) -> Result<bool, (String, &'\n                         Ident(i) if i.name != \"priv\" => Ok(true),\n                         _ => Ok(false)\n                     },\n-                    TokenTree::MetaVarDecl(_, _, frag) if frag.name ==\"ident\" || frag.name == \"ty\" => Ok(true),\n+                    TokenTree::MetaVarDecl(_, _, frag)\n+                        if frag.name ==\"ident\" || frag.name == \"ty\" => Ok(true),\n                     _ => Ok(false)\n                 }\n             },"}, {"sha": "31669e1bbe3a7d3ea83e07e78f0350bf601f3c03", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/16010c2f50dd92cc57ccced270a9fb727d6d4883/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16010c2f50dd92cc57ccced270a9fb727d6d4883/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=16010c2f50dd92cc57ccced270a9fb727d6d4883", "patch": "@@ -5057,6 +5057,8 @@ impl<'a> Parser<'a> {\n     /// a function definition, it's not a tuple struct field) and the contents within the parens\n     /// isn't valid, emit a proper diagnostic.\n     pub fn parse_visibility(&mut self, can_take_tuple: bool) -> PResult<'a, Visibility> {\n+        maybe_whole!(self, NtVis, |x| x);\n+\n         if !self.eat_keyword(keywords::Pub) {\n             return Ok(Visibility::Inherited)\n         }"}, {"sha": "d5b25e6cdf2d367c875fe661b6458a79e91c245f", "filename": "src/test/run-pass/macro-pub-matcher.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/16010c2f50dd92cc57ccced270a9fb727d6d4883/src%2Ftest%2Frun-pass%2Fmacro-pub-matcher.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16010c2f50dd92cc57ccced270a9fb727d6d4883/src%2Ftest%2Frun-pass%2Fmacro-pub-matcher.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-pub-matcher.rs?ref=16010c2f50dd92cc57ccced270a9fb727d6d4883", "patch": "@@ -1,3 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n #![allow(dead_code, unused_imports)]\n \n /**\n@@ -96,11 +106,13 @@ macro_rules! vis_parse_struct {\n         vis_parse_struct! { @parse_tuple $(#[$($attrs)*])*, , $name, $($body)* }\n     };\n \n-    (@parse_fields $(#[$attrs:meta])*, $vis:vis, $name:ident, $($fvis:vis $fname:ident: $fty:ty),* $(,)*) => {\n+    (@parse_fields\n+     $(#[$attrs:meta])*, $vis:vis, $name:ident, $($fvis:vis $fname:ident: $fty:ty),* $(,)*) => {\n         $(#[$attrs])* $vis struct $name { $($fvis $fname: $fty,)* }\n     };\n \n-    (@parse_tuple $(#[$attrs:meta])*, $vis:vis, $name:ident, $($fvis:vis $fty:ty),* $(,)*) => {\n+    (@parse_tuple\n+     $(#[$attrs:meta])*, $vis:vis, $name:ident, $($fvis:vis $fty:ty),* $(,)*) => {\n         $(#[$attrs])* $vis struct $name ( $($fvis $fty,)* );\n     };\n }"}]}