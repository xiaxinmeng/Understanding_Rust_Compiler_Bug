{"sha": "694432e935925a5a38fef14d7ad82ff3378410f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5NDQzMmU5MzU5MjVhNWEzOGZlZjE0ZDdhZDgyZmYzMzc4NDEwZjI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-28T10:06:10Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-28T10:15:24Z"}, "message": "Adjust comment per nrc's suggestion.", "tree": {"sha": "c22859c459c24b4e561d4180d908ad4572178fb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c22859c459c24b4e561d4180d908ad4572178fb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/694432e935925a5a38fef14d7ad82ff3378410f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/694432e935925a5a38fef14d7ad82ff3378410f2", "html_url": "https://github.com/rust-lang/rust/commit/694432e935925a5a38fef14d7ad82ff3378410f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/694432e935925a5a38fef14d7ad82ff3378410f2/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aeeab35ec21e6c9fc41ac4d5fb3733cfa67f890e", "url": "https://api.github.com/repos/rust-lang/rust/commits/aeeab35ec21e6c9fc41ac4d5fb3733cfa67f890e", "html_url": "https://github.com/rust-lang/rust/commit/aeeab35ec21e6c9fc41ac4d5fb3733cfa67f890e"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "82a4a60cebbf7ea0c921dc6225d5315b90629464", "filename": "src/librustc/middle/traits/mod.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/694432e935925a5a38fef14d7ad82ff3378410f2/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/694432e935925a5a38fef14d7ad82ff3378410f2/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs?ref=694432e935925a5a38fef14d7ad82ff3378410f2", "patch": "@@ -399,11 +399,24 @@ pub fn normalize_param_env_or_error<'a,'tcx>(unnormalized_env: ty::ParameterEnvi\n     match normalize_param_env(&unnormalized_env, cause) {\n         Ok(p) => p,\n         Err(errors) => {\n-            // this isn't really the ideal place to report errors, but it seems ok\n+            // I'm not wild about reporting errors here; I'd prefer to\n+            // have the errors get reported at a defined place (e.g.,\n+            // during typeck). Instead I have all parameter\n+            // environments, in effect, going through this function\n+            // and hence potentially reporting errors. This ensurse of\n+            // course that we never forget to normalize (the\n+            // alternative seemed like it would involve a lot of\n+            // manual invocations of this fn -- and then we'd have to\n+            // deal with the errors at each of those sites).\n+            //\n+            // In any case, in practice, typeck constructs all the\n+            // parameter environments once for every fn as it goes,\n+            // and errors will get reported then; so after typeck we\n+            // can be sure that no errors should occur.\n             let infcx = infer::new_infer_ctxt(unnormalized_env.tcx);\n             report_fulfillment_errors(&infcx, &errors);\n \n-            // normalized failed? use what they gave us, it's better than nothing\n+            // Normalized failed? use what they gave us, it's better than nothing.\n             unnormalized_env\n         }\n     }"}]}