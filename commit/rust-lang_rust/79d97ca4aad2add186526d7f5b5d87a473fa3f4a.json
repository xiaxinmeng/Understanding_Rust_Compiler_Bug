{"sha": "79d97ca4aad2add186526d7f5b5d87a473fa3f4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZDk3Y2E0YWFkMmFkZDE4NjUyNmQ3ZjViNWQ4N2E0NzNmYTNmNGE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T03:56:29Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:29Z"}, "message": "librustc: De-`@mut` `CStore::used_link_args`", "tree": {"sha": "16dae563e7c4b546ec3a038aea54af1b8c4fe8e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16dae563e7c4b546ec3a038aea54af1b8c4fe8e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79d97ca4aad2add186526d7f5b5d87a473fa3f4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79d97ca4aad2add186526d7f5b5d87a473fa3f4a", "html_url": "https://github.com/rust-lang/rust/commit/79d97ca4aad2add186526d7f5b5d87a473fa3f4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79d97ca4aad2add186526d7f5b5d87a473fa3f4a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af1184030bfaf73b280a83ddfa469a4e678728c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/af1184030bfaf73b280a83ddfa469a4e678728c9", "html_url": "https://github.com/rust-lang/rust/commit/af1184030bfaf73b280a83ddfa469a4e678728c9"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "87a5964515a17c9327360c6d6278bcd8f7f97973", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79d97ca4aad2add186526d7f5b5d87a473fa3f4a/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d97ca4aad2add186526d7f5b5d87a473fa3f4a/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=79d97ca4aad2add186526d7f5b5d87a473fa3f4a", "patch": "@@ -1089,7 +1089,9 @@ fn link_args(sess: Session,\n     // Finally add all the linker arguments provided on the command line along\n     // with any #[link_args] attributes found inside the crate\n     args.push_all(sess.opts.linker_args);\n-    for arg in sess.cstore.get_used_link_args().iter() {\n+    let used_link_args = sess.cstore.get_used_link_args();\n+    let used_link_args = used_link_args.borrow();\n+    for arg in used_link_args.get().iter() {\n         args.push(arg.clone());\n     }\n     return args;"}, {"sha": "e20e5b9da32df61b3341d1cc340dab4fb44aa8d7", "filename": "src/librustc/metadata/cstore.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79d97ca4aad2add186526d7f5b5d87a473fa3f4a/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79d97ca4aad2add186526d7f5b5d87a473fa3f4a/src%2Flibrustc%2Fmetadata%2Fcstore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcstore.rs?ref=79d97ca4aad2add186526d7f5b5d87a473fa3f4a", "patch": "@@ -65,7 +65,7 @@ pub struct CStore {\n     priv extern_mod_crate_map: RefCell<extern_mod_crate_map>,\n     priv used_crate_sources: RefCell<~[CrateSource]>,\n     priv used_libraries: RefCell<~[(~str, NativeLibaryKind)]>,\n-    priv used_link_args: ~[~str],\n+    priv used_link_args: RefCell<~[~str]>,\n     intr: @ident_interner\n }\n \n@@ -79,7 +79,7 @@ impl CStore {\n             extern_mod_crate_map: RefCell::new(HashMap::new()),\n             used_crate_sources: RefCell::new(~[]),\n             used_libraries: RefCell::new(~[]),\n-            used_link_args: ~[],\n+            used_link_args: RefCell::new(~[]),\n             intr: intr\n         }\n     }\n@@ -151,13 +151,14 @@ impl CStore {\n     }\n \n     pub fn add_used_link_args(&mut self, args: &str) {\n+        let mut used_link_args = self.used_link_args.borrow_mut();\n         for s in args.split(' ') {\n-            self.used_link_args.push(s.to_owned());\n+            used_link_args.get().push(s.to_owned());\n         }\n     }\n \n-    pub fn get_used_link_args<'a>(&'a self) -> &'a [~str] {\n-        self.used_link_args.as_slice()\n+    pub fn get_used_link_args<'a>(&'a self) -> &'a RefCell<~[~str]> {\n+        &self.used_link_args\n     }\n \n     pub fn add_extern_mod_stmt_cnum(&mut self,"}]}