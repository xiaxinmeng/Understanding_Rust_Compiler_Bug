{"sha": "d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyZTFiZmIxMjNhNWY2YThjYWYxZTg2NmRjZWI1OWVhNTFlOGExZWM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-30T22:29:47Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-30T22:30:42Z"}, "message": "librustc: Long line. rs=burning", "tree": {"sha": "04c023abf6650f25a43659d838c142c4fa74ae78", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04c023abf6650f25a43659d838c142c4fa74ae78"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec", "html_url": "https://github.com/rust-lang/rust/commit/d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83ced67d0b6cccb0de8f3df133f7b580db6f74c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/83ced67d0b6cccb0de8f3df133f7b580db6f74c5", "html_url": "https://github.com/rust-lang/rust/commit/83ced67d0b6cccb0de8f3df133f7b580db6f74c5"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "2b350706afbd2468290872a64c2c0312e691ab7d", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=d2e1bfb123a5f6a8caf1e866dceb59ea51e8a1ec", "patch": "@@ -339,7 +339,9 @@ pub pure fn get(t: t) -> t_box {\n pub pure fn tbox_has_flag(tb: t_box, flag: tbox_flag) -> bool {\n     (tb.flags & (flag as uint)) != 0u\n }\n-pub pure fn type_has_params(t: t) -> bool { tbox_has_flag(get(t), has_params) }\n+pub pure fn type_has_params(t: t) -> bool {\n+    tbox_has_flag(get(t), has_params)\n+}\n pub pure fn type_has_self(t: t) -> bool { tbox_has_flag(get(t), has_self) }\n pub pure fn type_needs_infer(t: t) -> bool {\n     tbox_has_flag(get(t), needs_infer)"}]}