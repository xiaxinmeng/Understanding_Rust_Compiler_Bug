{"sha": "1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNGZiYzAwMzVhNmE5ZWUxYjU5OWEzYWE5ZjIzNjk4OTYzM2E5Zjc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-10-14T12:22:54Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-14T12:22:54Z"}, "message": "Merge #2007\n\n2007: remove one more dependency on source roots r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "40ee641fc90ecf384199ac537542deb71689d30d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/40ee641fc90ecf384199ac537542deb71689d30d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdpGieCRBK7hj4Ov3rIwAAdHIIAJPG18N3PJDD9zYiFxvFfk/1\neDRytpEkhGn9YMU+oyv6USjRKN/lZlRNAKxxirdY5ozysMflBJwTR8Uvmct92vD8\nCTlIS3IzP2ZrtafLIoyh+lGM3AP9jqft2NHDN0Pso4zwykfubTxIw3ZYUGdufx4O\n4tbmnd45qqwXP4mvt69I7Rc39BhJIaf8wQzs3KtpcdwD3+Z/6XzYzX7VqxVrJQqR\nMyNwhImoylIz0wZvFNrE2Lq6tg8IMqPrg19onIu5wmoouad/NkelyNs3vtxusgRO\nWUlkcny2jmdtl4uJ1qvRBWBwTEjRY+JZEc4HKYLbo+pSI8fNVRZze1eGoJUNTaA=\n=UJlA\n-----END PGP SIGNATURE-----\n", "payload": "tree 40ee641fc90ecf384199ac537542deb71689d30d\nparent bc7de5d47a56b9f2ab44f833130ba6d77aefe864\nparent 1555a1aa0d5d45e4b317db272c07ad3e8470553d\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1571055774 +0000\ncommitter GitHub <noreply@github.com> 1571055774 +0000\n\nMerge #2007\n\n2007: remove one more dependency on source roots r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "html_url": "https://github.com/rust-lang/rust/commit/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc7de5d47a56b9f2ab44f833130ba6d77aefe864", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc7de5d47a56b9f2ab44f833130ba6d77aefe864", "html_url": "https://github.com/rust-lang/rust/commit/bc7de5d47a56b9f2ab44f833130ba6d77aefe864"}, {"sha": "1555a1aa0d5d45e4b317db272c07ad3e8470553d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1555a1aa0d5d45e4b317db272c07ad3e8470553d", "html_url": "https://github.com/rust-lang/rust/commit/1555a1aa0d5d45e4b317db272c07ad3e8470553d"}], "stats": {"total": 47, "additions": 26, "deletions": 21}, "files": [{"sha": "df49eb13d123e738a157cfef5416aa28ed87de45", "filename": "crates/ra_batch/src/lib.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/crates%2Fra_batch%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/crates%2Fra_batch%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_batch%2Fsrc%2Flib.rs?ref=1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "patch": "@@ -141,14 +141,8 @@ mod tests {\n     #[test]\n     fn test_loading_rust_analyzer() {\n         let path = Path::new(env!(\"CARGO_MANIFEST_DIR\")).parent().unwrap().parent().unwrap();\n-        let (host, roots) = load_cargo(path).unwrap();\n-        let mut n_crates = 0;\n-        for (root, _) in roots {\n-            for _krate in Crate::source_root_crates(host.raw_database(), root) {\n-                n_crates += 1;\n-            }\n-        }\n-\n+        let (host, _roots) = load_cargo(path).unwrap();\n+        let n_crates = Crate::all(host.raw_database()).len();\n         // RA has quite a few crates, but the exact count doesn't matter\n         assert!(n_crates > 20);\n     }"}, {"sha": "fe4f57dcde6165a51e62176c4f3df9ccff55b9bb", "filename": "crates/ra_cli/src/analysis_stats.rs", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_cli%2Fsrc%2Fanalysis_stats.rs?ref=1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "patch": "@@ -22,16 +22,29 @@ pub fn run(\n     let mut num_crates = 0;\n     let mut visited_modules = HashSet::new();\n     let mut visit_queue = Vec::new();\n-    for (source_root_id, project_root) in roots {\n-        if project_root.is_member() {\n-            for krate in Crate::source_root_crates(db, source_root_id) {\n-                num_crates += 1;\n-                let module =\n-                    krate.root_module(db).expect(\"crate in source root without root module\");\n-                visit_queue.push(module);\n-            }\n+\n+    let members = roots\n+        .into_iter()\n+        .filter_map(\n+            |(source_root_id, project_root)| {\n+                if project_root.is_member() {\n+                    Some(source_root_id)\n+                } else {\n+                    None\n+                }\n+            },\n+        )\n+        .collect::<HashSet<_>>();\n+\n+    for krate in Crate::all(db) {\n+        let module = krate.root_module(db).expect(\"crate without root module\");\n+        let file_id = module.definition_source(db).file_id;\n+        if members.contains(&db.file_source_root(file_id.original_file(db))) {\n+            num_crates += 1;\n+            visit_queue.push(module);\n         }\n     }\n+\n     println!(\"Crates in this dir: {}\", num_crates);\n     let mut num_decls = 0;\n     let mut funcs = Vec::new();"}, {"sha": "8eb3c577d6717c31c8f9fc3f35b751a9395d329b", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=1f4fbc0035a6a9ee1b599a3aa9f236989633a9f7", "patch": "@@ -5,7 +5,7 @@ pub(crate) mod docs;\n \n use std::sync::Arc;\n \n-use ra_db::{CrateId, Edition, FileId, SourceRootId};\n+use ra_db::{CrateId, Edition, FileId};\n use ra_syntax::ast::{self, NameOwner, TypeAscriptionOwner};\n \n use crate::{\n@@ -76,10 +76,8 @@ impl Crate {\n         crate_graph.edition(self.crate_id)\n     }\n \n-    // FIXME: should this be in source_binder?\n-    pub fn source_root_crates(db: &impl DefDatabase, source_root: SourceRootId) -> Vec<Crate> {\n-        let crate_ids = db.source_root_crates(source_root);\n-        crate_ids.iter().map(|&crate_id| Crate { crate_id }).collect()\n+    pub fn all(db: &impl DefDatabase) -> Vec<Crate> {\n+        db.crate_graph().iter().map(|crate_id| Crate { crate_id }).collect()\n     }\n }\n "}]}