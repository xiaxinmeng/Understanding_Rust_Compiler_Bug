{"sha": "2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "node_id": "C_kwDOAAsO6NoAKDIxMDlmZTRlNGUzY2Q4YjgxYTRmOTFmYWI4YmU5YTMwZjJlZWU4YmM", "commit": {"author": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-16T10:03:39Z"}, "committer": {"name": "Nilstrieb", "email": "48135649+Nilstrieb@users.noreply.github.com", "date": "2023-04-16T10:05:54Z"}, "message": "Move some utils out of `rustc_const_eval`\n\nThis allows us to get rid of the `rustc_const_eval->rustc_borrowck`\ndependency edge which was delaying the compilation of borrowck.\n\nThe added utils in `rustc_middle` are small and should not affect\ncompile times there.", "tree": {"sha": "8429d0a691d50b27118f2976de1f9b036bfae834", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8429d0a691d50b27118f2976de1f9b036bfae834"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "html_url": "https://github.com/rust-lang/rust/commit/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/comments", "author": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nilstrieb", "id": 48135649, "node_id": "MDQ6VXNlcjQ4MTM1NjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/48135649?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nilstrieb", "html_url": "https://github.com/Nilstrieb", "followers_url": "https://api.github.com/users/Nilstrieb/followers", "following_url": "https://api.github.com/users/Nilstrieb/following{/other_user}", "gists_url": "https://api.github.com/users/Nilstrieb/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nilstrieb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nilstrieb/subscriptions", "organizations_url": "https://api.github.com/users/Nilstrieb/orgs", "repos_url": "https://api.github.com/users/Nilstrieb/repos", "events_url": "https://api.github.com/users/Nilstrieb/events{/privacy}", "received_events_url": "https://api.github.com/users/Nilstrieb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6e956dade79bdc084dfe3078abab24656a1b483", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e956dade79bdc084dfe3078abab24656a1b483", "html_url": "https://github.com/rust-lang/rust/commit/e6e956dade79bdc084dfe3078abab24656a1b483"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "670f4cc956205e7eda134fa08916be84310b99dd", "filename": "Cargo.lock", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -4421,7 +4421,6 @@ dependencies = [\n  \"either\",\n  \"itertools\",\n  \"polonius-engine\",\n- \"rustc_const_eval\",\n  \"rustc_data_structures\",\n  \"rustc_errors\",\n  \"rustc_graphviz\","}, {"sha": "e0bb87336e54ae2a86a5dee4f763afeb75316840", "filename": "compiler/rustc_borrowck/Cargo.toml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2FCargo.toml?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -20,7 +20,6 @@ rustc_infer = { path = \"../rustc_infer\" }\n rustc_lexer = { path = \"../rustc_lexer\" }\n rustc_macros = { path = \"../rustc_macros\" }\n rustc_middle = { path = \"../rustc_middle\" }\n-rustc_const_eval = { path = \"../rustc_const_eval\" }\n rustc_mir_dataflow = { path = \"../rustc_mir_dataflow\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_session = { path = \"../rustc_session\" }"}, {"sha": "6259ae47e896b4238fa31a32e9437ceb179bcef0", "filename": "compiler/rustc_borrowck/src/diagnostics/conflict_errors.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fconflict_errors.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -1,5 +1,4 @@\n use either::Either;\n-use rustc_const_eval::util::CallKind;\n use rustc_data_structures::captures::Captures;\n use rustc_data_structures::fx::FxIndexSet;\n use rustc_errors::{\n@@ -18,6 +17,7 @@ use rustc_middle::mir::{\n     ProjectionElem, Rvalue, Statement, StatementKind, Terminator, TerminatorKind, VarBindingForm,\n };\n use rustc_middle::ty::{self, suggest_constraining_type_params, PredicateKind, Ty};\n+use rustc_middle::util::CallKind;\n use rustc_mir_dataflow::move_paths::{InitKind, MoveOutIndex, MovePathIndex};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::hygiene::DesugaringKind;\n@@ -2424,7 +2424,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n             Some((method_did, method_substs)),\n         ) = (\n             &self.body[loan.reserve_location.block].terminator,\n-            rustc_const_eval::util::find_self_call(\n+            rustc_middle::util::find_self_call(\n                 tcx,\n                 self.body,\n                 loan.assigned_place.local,"}, {"sha": "dd003b5b0402b1e1a1718d09ad332a245f69f0ba", "filename": "compiler/rustc_borrowck/src/diagnostics/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmod.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -1,7 +1,6 @@\n //! Borrow checker diagnostics.\n \n use itertools::Itertools;\n-use rustc_const_eval::util::{call_kind, CallDesugaringKind};\n use rustc_errors::{Applicability, Diagnostic};\n use rustc_hir as hir;\n use rustc_hir::def::{CtorKind, Namespace};\n@@ -15,6 +14,7 @@ use rustc_middle::mir::{\n };\n use rustc_middle::ty::print::Print;\n use rustc_middle::ty::{self, Instance, Ty, TyCtxt};\n+use rustc_middle::util::{call_kind, CallDesugaringKind};\n use rustc_mir_dataflow::move_paths::{InitLocation, LookupResult};\n use rustc_span::def_id::LocalDefId;\n use rustc_span::{symbol::sym, Span, Symbol, DUMMY_SP};\n@@ -45,7 +45,7 @@ pub(crate) use mutability_errors::AccessKind;\n pub(crate) use outlives_suggestion::OutlivesSuggestionBuilder;\n pub(crate) use region_errors::{ErrorConstraintInfo, RegionErrorKind, RegionErrors};\n pub(crate) use region_name::{RegionName, RegionNameSource};\n-pub(crate) use rustc_const_eval::util::CallKind;\n+pub(crate) use rustc_middle::util::CallKind;\n \n pub(super) struct DescribePlaceOpt {\n     pub including_downcast: bool,\n@@ -874,7 +874,7 @@ impl<'cx, 'tcx> MirBorrowckCtxt<'cx, 'tcx> {\n         }) = &self.body[location.block].terminator\n         {\n             let Some((method_did, method_substs)) =\n-                rustc_const_eval::util::find_self_call(\n+            rustc_middle::util::find_self_call(\n                     self.infcx.tcx,\n                     &self.body,\n                     target_temp,"}, {"sha": "9c907147e5ad9a615f363de07ec7930ce51f4142", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -15,8 +15,8 @@ use rustc_span::{sym, BytePos, Span};\n use rustc_target::abi::FieldIdx;\n \n use crate::diagnostics::BorrowedContentSource;\n+use crate::util::FindAssignments;\n use crate::MirBorrowckCtxt;\n-use rustc_const_eval::util::collect_writes::FindAssignments;\n \n #[derive(Copy, Clone, Debug, Eq, PartialEq)]\n pub(crate) enum AccessKind {"}, {"sha": "fdd82c7e3b281e6f44c723b218379f6f73f7406f", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -88,6 +88,7 @@ mod session_diagnostics;\n mod type_check;\n mod universal_regions;\n mod used_muts;\n+mod util;\n \n /// A public API provided for the Rust compiler consumers.\n pub mod consumers;"}, {"sha": "8d92bb359385780cdccebde4885f6c141640dc9b", "filename": "compiler/rustc_borrowck/src/util/collect_writes.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Futil%2Fcollect_writes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Futil%2Fcollect_writes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Futil%2Fcollect_writes.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "previous_filename": "compiler/rustc_const_eval/src/util/collect_writes.rs"}, {"sha": "7377d4de7274f93d180207ee6301feb519f6f12e", "filename": "compiler/rustc_borrowck/src/util/mod.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Futil%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_borrowck%2Fsrc%2Futil%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Futil%2Fmod.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -0,0 +1,3 @@\n+mod collect_writes;\n+\n+pub use collect_writes::FindAssignments;"}, {"sha": "4fe842856aad1e9d9cae9c5a00a58de9c51ffac9", "filename": "compiler/rustc_const_eval/src/transform/check_consts/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -14,14 +14,14 @@ use rustc_middle::ty::print::with_no_trimmed_paths;\n use rustc_middle::ty::subst::{GenericArgKind, SubstsRef};\n use rustc_middle::ty::{suggest_constraining_type_param, Adt, Closure, FnDef, FnPtr, Param, Ty};\n use rustc_middle::ty::{Binder, TraitRef};\n+use rustc_middle::util::{call_kind, CallDesugaringKind, CallKind};\n use rustc_session::parse::feature_err;\n use rustc_span::symbol::sym;\n use rustc_span::{BytePos, Pos, Span, Symbol};\n use rustc_trait_selection::traits::SelectionContext;\n \n use super::ConstCx;\n use crate::errors;\n-use crate::util::{call_kind, CallDesugaringKind, CallKind};\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq)]\n pub enum Status {"}, {"sha": "7641f560714d40052f1f28f11afd837d7c603290", "filename": "compiler/rustc_const_eval/src/util/mod.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fmod.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -1,14 +1,9 @@\n mod alignment;\n-mod call_kind;\n mod check_validity_requirement;\n-pub mod collect_writes;\n mod compare_types;\n-mod find_self_call;\n mod type_name;\n \n pub use self::alignment::is_disaligned;\n-pub use self::call_kind::{call_kind, CallDesugaringKind, CallKind};\n pub use self::check_validity_requirement::check_validity_requirement;\n pub use self::compare_types::{is_equal_up_to_subtyping, is_subtype};\n-pub use self::find_self_call::find_self_call;\n pub use self::type_name::type_name;"}, {"sha": "1ddc08eac7dfea1201cdf1ef1a19ffbe98575cd6", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -99,13 +99,9 @@ pub mod mir;\n pub mod thir;\n pub mod traits;\n pub mod ty;\n+pub mod util;\n mod values;\n \n-pub mod util {\n-    pub mod bug;\n-    pub mod common;\n-}\n-\n // Allows macros to refer to this crate as `::rustc_middle`\n extern crate self as rustc_middle;\n "}, {"sha": "627c84c388c04c9eabe2b33f2ac0aa430e66e491", "filename": "compiler/rustc_middle/src/util/call_kind.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Futil%2Fcall_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Futil%2Fcall_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Futil%2Fcall_kind.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -2,10 +2,10 @@\n //! as well as errors when attempting to call a non-const function in a const\n //! context.\n \n+use crate::ty::subst::SubstsRef;\n+use crate::ty::{AssocItemContainer, Instance, ParamEnv, Ty, TyCtxt};\n use rustc_hir::def_id::DefId;\n use rustc_hir::{lang_items, LangItem};\n-use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{AssocItemContainer, Instance, ParamEnv, Ty, TyCtxt};\n use rustc_span::symbol::Ident;\n use rustc_span::{sym, DesugaringKind, Span};\n ", "previous_filename": "compiler/rustc_const_eval/src/util/call_kind.rs"}, {"sha": "0eab0adf07e481de8f8d7c2949845b90321fa8b1", "filename": "compiler/rustc_middle/src/util/find_self_call.rs", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Futil%2Ffind_self_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Futil%2Ffind_self_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Futil%2Ffind_self_call.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -1,6 +1,6 @@\n-use rustc_middle::mir::*;\n-use rustc_middle::ty::subst::SubstsRef;\n-use rustc_middle::ty::{self, TyCtxt};\n+use crate::mir::*;\n+use crate::ty::subst::SubstsRef;\n+use crate::ty::{self, TyCtxt};\n use rustc_span::def_id::DefId;\n \n /// Checks if the specified `local` is used as the `self` parameter of a method call", "previous_filename": "compiler/rustc_const_eval/src/util/find_self_call.rs"}, {"sha": "53b4257899bce97556e3a7f8c5321f8f1a921db8", "filename": "compiler/rustc_middle/src/util/mod.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Futil%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_middle%2Fsrc%2Futil%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Futil%2Fmod.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -0,0 +1,7 @@\n+pub mod bug;\n+pub mod call_kind;\n+pub mod common;\n+pub mod find_self_call;\n+\n+pub use call_kind::{call_kind, CallDesugaringKind, CallKind};\n+pub use find_self_call::find_self_call;"}, {"sha": "57b24c9c552a594332ab249f31559b9ec530905c", "filename": "compiler/rustc_mir_transform/src/check_const_item_mutation.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_const_item_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_const_item_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_const_item_mutation.rs?ref=2109fe4e4e3cd8b81a4f91fab8be9a30f2eee8bc", "patch": "@@ -134,7 +134,12 @@ impl<'tcx> Visitor<'tcx> for ConstMutationChecker<'_, 'tcx> {\n                 // the `self` parameter of a method call (as the terminator of our current\n                 // BasicBlock). If so, we emit a more specific lint.\n                 let method_did = self.target_local.and_then(|target_local| {\n-                    crate::util::find_self_call(self.tcx, &self.body, target_local, loc.block)\n+                    rustc_middle::util::find_self_call(\n+                        self.tcx,\n+                        &self.body,\n+                        target_local,\n+                        loc.block,\n+                    )\n                 });\n                 let lint_loc =\n                     if method_did.is_some() { self.body.terminator_loc(loc.block) } else { loc };"}]}